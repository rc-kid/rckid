    TEST(gbcemu, opcode_cb_48) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 48 0000
        gbc.setState(0x7297, 0x1f1, 0x8bb0, 0xcff1, 0x2827, 0xc002, 0x0, 0x1);
        gbc.writeMem(0x7297, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1f1, gbc.sp());
        EXPECT(0x7299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0001
        gbc.setState(0x14f2, 0x8e67, 0x9560, 0xccd5, 0xeab6, 0xea4b, 0x0, 0x1);
        gbc.writeMem(0x14f2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8e67, gbc.sp());
        EXPECT(0x14f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0002
        gbc.setState(0xe2a5, 0x51df, 0x17c0, 0x2942, 0x93c1, 0x4057, 0x0, 0x1);
        gbc.writeMem(0xe2a5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x51df, gbc.sp());
        EXPECT(0xe2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a5));
        EXPECT(0x48, gbc.readMem(0xe2a6));
        // CB 48 0003
        gbc.setState(0x6472, 0xe335, 0x46d0, 0x84df, 0xb51c, 0xe257, 0x1, 0x1);
        gbc.writeMem(0x6472, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe335, gbc.sp());
        EXPECT(0x6474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0004
        gbc.setState(0x76bb, 0x2f46, 0x7220, 0x1e0d, 0x9913, 0xd9ee, 0x0, 0x1);
        gbc.writeMem(0x76bb, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2f46, gbc.sp());
        EXPECT(0x76bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0005
        gbc.setState(0x86f4, 0xf81d, 0x5ba0, 0x1d09, 0xfbbf, 0x69de, 0x1, 0x0);
        gbc.writeMem(0x86f4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf81d, gbc.sp());
        EXPECT(0x86f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f4));
        EXPECT(0x48, gbc.readMem(0x86f5));
        // CB 48 0006
        gbc.setState(0xe24, 0x5890, 0x3240, 0x455b, 0x294f, 0x9720, 0x0, 0x0);
        gbc.writeMem(0xe24, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5890, gbc.sp());
        EXPECT(0xe26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0007
        gbc.setState(0xc771, 0xfe55, 0xeeb0, 0x1060, 0x3cc8, 0xab08, 0x1, 0x0);
        gbc.writeMem(0xc771, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfe55, gbc.sp());
        EXPECT(0xc773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc771));
        EXPECT(0x48, gbc.readMem(0xc772));
        // CB 48 0008
        gbc.setState(0x69d8, 0x4ad4, 0xe0d0, 0xdd47, 0x60ef, 0xbd82, 0x0, 0x1);
        gbc.writeMem(0x69d8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4ad4, gbc.sp());
        EXPECT(0x69da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0009
        gbc.setState(0xe0ab, 0x7c07, 0x2780, 0x7b4, 0x3f39, 0xa1a4, 0x1, 0x1);
        gbc.writeMem(0xe0ab, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7c07, gbc.sp());
        EXPECT(0xe0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ab));
        EXPECT(0x48, gbc.readMem(0xe0ac));
        // CB 48 000A
        gbc.setState(0xad03, 0x2927, 0x5360, 0x79e5, 0xc8cf, 0x2913, 0x1, 0x1);
        gbc.writeMem(0xad03, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2927, gbc.sp());
        EXPECT(0xad05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad03));
        EXPECT(0x48, gbc.readMem(0xad04));
        // CB 48 000B
        gbc.setState(0x642d, 0xa632, 0x6c40, 0xed77, 0x1a33, 0x4bba, 0x1, 0x0);
        gbc.writeMem(0x642d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa632, gbc.sp());
        EXPECT(0x642f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 000C
        gbc.setState(0xab8f, 0xaa77, 0x5d0, 0xdab1, 0xfce4, 0x466, 0x1, 0x1);
        gbc.writeMem(0xab8f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xaa77, gbc.sp());
        EXPECT(0xab91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab8f));
        EXPECT(0x48, gbc.readMem(0xab90));
        // CB 48 000D
        gbc.setState(0xef8c, 0xbb34, 0xb50, 0xf7, 0xf7a7, 0xf3e3, 0x0, 0x0);
        gbc.writeMem(0xef8c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbb34, gbc.sp());
        EXPECT(0xef8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef8c));
        EXPECT(0x48, gbc.readMem(0xef8d));
        // CB 48 000E
        gbc.setState(0xaef2, 0xbacf, 0x8c70, 0xe988, 0x9285, 0xd7a3, 0x0, 0x0);
        gbc.writeMem(0xaef2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbacf, gbc.sp());
        EXPECT(0xaef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef2));
        EXPECT(0x48, gbc.readMem(0xaef3));
        // CB 48 000F
        gbc.setState(0x8038, 0x4d6a, 0x19f0, 0x3bc, 0x8e58, 0x8e8f, 0x1, 0x1);
        gbc.writeMem(0x8038, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4d6a, gbc.sp());
        EXPECT(0x803a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8038));
        EXPECT(0x48, gbc.readMem(0x8039));
        // CB 48 0010
        gbc.setState(0x4204, 0xb6d5, 0x4540, 0x88cd, 0xab36, 0x73cd, 0x1, 0x1);
        gbc.writeMem(0x4204, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb6d5, gbc.sp());
        EXPECT(0x4206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0011
        gbc.setState(0x5e92, 0x57de, 0xb850, 0xf5ee, 0x1e77, 0xf584, 0x0, 0x1);
        gbc.writeMem(0x5e92, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x57de, gbc.sp());
        EXPECT(0x5e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0012
        gbc.setState(0x981d, 0x8ec1, 0x9100, 0x4738, 0x5183, 0xdb75, 0x0, 0x1);
        gbc.writeMem(0x981d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8ec1, gbc.sp());
        EXPECT(0x981f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x981d));
        EXPECT(0x48, gbc.readMem(0x981e));
        // CB 48 0013
        gbc.setState(0x6a94, 0xa965, 0xb860, 0xdff8, 0xe847, 0xcb44, 0x1, 0x0);
        gbc.writeMem(0x6a94, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa965, gbc.sp());
        EXPECT(0x6a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0015
        gbc.setState(0x8de1, 0x871d, 0x5580, 0x5446, 0x136a, 0x71a4, 0x1, 0x1);
        gbc.writeMem(0x8de1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x871d, gbc.sp());
        EXPECT(0x8de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de1));
        EXPECT(0x48, gbc.readMem(0x8de2));
        // CB 48 0016
        gbc.setState(0x1d8, 0x12a, 0xec00, 0xc8d3, 0x4ba2, 0xa31c, 0x1, 0x0);
        gbc.writeMem(0x1d8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x12a, gbc.sp());
        EXPECT(0x1da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0017
        gbc.setState(0x14e9, 0x3d4, 0x56d0, 0x546b, 0xded2, 0x26dd, 0x1, 0x1);
        gbc.writeMem(0x14e9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3d4, gbc.sp());
        EXPECT(0x14eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0018
        gbc.setState(0x15c4, 0xb5b, 0x2a90, 0x5ecb, 0xe65, 0x884a, 0x0, 0x1);
        gbc.writeMem(0x15c4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb5b, gbc.sp());
        EXPECT(0x15c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0019
        gbc.setState(0x45ca, 0x9d38, 0xec60, 0x7b60, 0x5bb3, 0x4a2e, 0x0, 0x0);
        gbc.writeMem(0x45ca, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9d38, gbc.sp());
        EXPECT(0x45cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 001A
        gbc.setState(0x286f, 0xc06e, 0xba70, 0x844a, 0xd1ea, 0x133a, 0x0, 0x0);
        gbc.writeMem(0x286f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc06e, gbc.sp());
        EXPECT(0x2871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 001B
        gbc.setState(0x77f7, 0xedbf, 0xb040, 0x6abd, 0xc151, 0x845, 0x1, 0x1);
        gbc.writeMem(0x77f7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xedbf, gbc.sp());
        EXPECT(0x77f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 001C
        gbc.setState(0x42f6, 0x5c75, 0xdc00, 0x6117, 0x1e88, 0x239, 0x1, 0x1);
        gbc.writeMem(0x42f6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5c75, gbc.sp());
        EXPECT(0x42f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 001D
        gbc.setState(0x4fc8, 0xcbf8, 0x5320, 0x9e0d, 0x9cd4, 0xf31d, 0x1, 0x0);
        gbc.writeMem(0x4fc8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcbf8, gbc.sp());
        EXPECT(0x4fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 001E
        gbc.setState(0x1f81, 0x95e1, 0x7be0, 0x889e, 0xc292, 0x72b6, 0x0, 0x1);
        gbc.writeMem(0x1f81, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x95e1, gbc.sp());
        EXPECT(0x1f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 001F
        gbc.setState(0xdf3a, 0x11c1, 0x3620, 0xdd9e, 0x2a68, 0x6f5, 0x1, 0x0);
        gbc.writeMem(0xdf3a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x11c1, gbc.sp());
        EXPECT(0xdf3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf3a));
        EXPECT(0x48, gbc.readMem(0xdf3b));
        // CB 48 0020
        gbc.setState(0x55b4, 0xa24e, 0x5020, 0xa05f, 0xd489, 0xbe9b, 0x1, 0x0);
        gbc.writeMem(0x55b4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa24e, gbc.sp());
        EXPECT(0x55b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0021
        gbc.setState(0x1bd0, 0xb134, 0xa370, 0x89b8, 0x8c04, 0xfa92, 0x0, 0x1);
        gbc.writeMem(0x1bd0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb134, gbc.sp());
        EXPECT(0x1bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0022
        gbc.setState(0xebdf, 0x65b, 0x6210, 0x78d0, 0x5267, 0xb04c, 0x1, 0x1);
        gbc.writeMem(0xebdf, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x65b, gbc.sp());
        EXPECT(0xebe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebdf));
        EXPECT(0x48, gbc.readMem(0xebe0));
        // CB 48 0023
        gbc.setState(0x122f, 0xc24c, 0x4160, 0x18c2, 0x90f0, 0xd648, 0x0, 0x0);
        gbc.writeMem(0x122f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc24c, gbc.sp());
        EXPECT(0x1231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0024
        gbc.setState(0x2a4f, 0x7600, 0xbe60, 0x821e, 0x5e3e, 0x627f, 0x1, 0x1);
        gbc.writeMem(0x2a4f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7600, gbc.sp());
        EXPECT(0x2a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0025
        gbc.setState(0xa45b, 0xb504, 0x4040, 0x39b4, 0x8db0, 0x278, 0x0, 0x1);
        gbc.writeMem(0xa45b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb504, gbc.sp());
        EXPECT(0xa45d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa45b));
        EXPECT(0x48, gbc.readMem(0xa45c));
        // CB 48 0027
        gbc.setState(0x3b46, 0x4ad6, 0x3150, 0x943a, 0xdb4, 0xd1f6, 0x1, 0x0);
        gbc.writeMem(0x3b46, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4ad6, gbc.sp());
        EXPECT(0x3b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0028
        gbc.setState(0x44b2, 0xab34, 0x80e0, 0x8d27, 0xac94, 0x2dd3, 0x1, 0x1);
        gbc.writeMem(0x44b2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xab34, gbc.sp());
        EXPECT(0x44b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0029
        gbc.setState(0xb9b6, 0x67eb, 0xb4c0, 0x325c, 0xaecc, 0xeb80, 0x0, 0x0);
        gbc.writeMem(0xb9b6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x67eb, gbc.sp());
        EXPECT(0xb9b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b6));
        EXPECT(0x48, gbc.readMem(0xb9b7));
        // CB 48 002A
        gbc.setState(0x1da8, 0xe0cf, 0x9fb0, 0x831b, 0x6e59, 0x637b, 0x1, 0x0);
        gbc.writeMem(0x1da8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe0cf, gbc.sp());
        EXPECT(0x1daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 002B
        gbc.setState(0x5e4f, 0x8ef9, 0x9590, 0x8f6f, 0x5cd8, 0x4478, 0x1, 0x0);
        gbc.writeMem(0x5e4f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8ef9, gbc.sp());
        EXPECT(0x5e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 002C
        gbc.setState(0xa06e, 0xa357, 0x19b0, 0x2ead, 0xcf0a, 0xf4ba, 0x0, 0x0);
        gbc.writeMem(0xa06e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa357, gbc.sp());
        EXPECT(0xa070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06e));
        EXPECT(0x48, gbc.readMem(0xa06f));
        // CB 48 002D
        gbc.setState(0x90a5, 0x60ff, 0xda20, 0x6f46, 0x67b6, 0xabae, 0x1, 0x1);
        gbc.writeMem(0x90a5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x60ff, gbc.sp());
        EXPECT(0x90a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a5));
        EXPECT(0x48, gbc.readMem(0x90a6));
        // CB 48 002E
        gbc.setState(0x40fd, 0xd0c4, 0x170, 0x8b3c, 0x6df5, 0xc729, 0x1, 0x0);
        gbc.writeMem(0x40fd, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd0c4, gbc.sp());
        EXPECT(0x40ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0030
        gbc.setState(0x93d1, 0x228e, 0x2790, 0x6174, 0x8ecd, 0xe8c5, 0x1, 0x1);
        gbc.writeMem(0x93d1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x228e, gbc.sp());
        EXPECT(0x93d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d1));
        EXPECT(0x48, gbc.readMem(0x93d2));
        // CB 48 0031
        gbc.setState(0x226f, 0x43b9, 0xe1e0, 0x908f, 0x7aa3, 0x728c, 0x0, 0x0);
        gbc.writeMem(0x226f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x43b9, gbc.sp());
        EXPECT(0x2271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0032
        gbc.setState(0x4d05, 0x5478, 0x7660, 0xa524, 0x983, 0x4a2e, 0x0, 0x1);
        gbc.writeMem(0x4d05, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5478, gbc.sp());
        EXPECT(0x4d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0033
        gbc.setState(0xde37, 0x73c2, 0x8c60, 0xc9ef, 0x3643, 0xf86f, 0x1, 0x0);
        gbc.writeMem(0xde37, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x73c2, gbc.sp());
        EXPECT(0xde39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde37));
        EXPECT(0x48, gbc.readMem(0xde38));
        // CB 48 0034
        gbc.setState(0x4440, 0x41bb, 0xe730, 0xda2c, 0x505c, 0xcc03, 0x0, 0x1);
        gbc.writeMem(0x4440, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x41bb, gbc.sp());
        EXPECT(0x4442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0035
        gbc.setState(0x98fd, 0xc032, 0x2910, 0xd168, 0xad4c, 0xc2de, 0x1, 0x1);
        gbc.writeMem(0x98fd, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc032, gbc.sp());
        EXPECT(0x98ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98fd));
        EXPECT(0x48, gbc.readMem(0x98fe));
        // CB 48 0036
        gbc.setState(0x8392, 0x4437, 0x960, 0x8d7f, 0xbc73, 0x5c9f, 0x0, 0x1);
        gbc.writeMem(0x8392, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4437, gbc.sp());
        EXPECT(0x8394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8392));
        EXPECT(0x48, gbc.readMem(0x8393));
        // CB 48 0037
        gbc.setState(0x27b5, 0x628b, 0x7710, 0x570c, 0xfee9, 0x719b, 0x0, 0x1);
        gbc.writeMem(0x27b5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x628b, gbc.sp());
        EXPECT(0x27b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0038
        gbc.setState(0x7b28, 0xf768, 0xb780, 0xa975, 0xad64, 0x6d06, 0x1, 0x1);
        gbc.writeMem(0x7b28, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf768, gbc.sp());
        EXPECT(0x7b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0039
        gbc.setState(0x5bc2, 0xd152, 0xd720, 0xf76b, 0xbfc9, 0xdc45, 0x0, 0x1);
        gbc.writeMem(0x5bc2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd152, gbc.sp());
        EXPECT(0x5bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 003A
        gbc.setState(0x2a95, 0xfe4c, 0x60d0, 0xa34d, 0x168e, 0x9785, 0x1, 0x1);
        gbc.writeMem(0x2a95, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfe4c, gbc.sp());
        EXPECT(0x2a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 003B
        gbc.setState(0x96b5, 0x7530, 0x81c0, 0x31d9, 0x9898, 0x7d5b, 0x1, 0x0);
        gbc.writeMem(0x96b5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7530, gbc.sp());
        EXPECT(0x96b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b5));
        EXPECT(0x48, gbc.readMem(0x96b6));
        // CB 48 003C
        gbc.setState(0x2f4, 0x2b62, 0x90f0, 0x5ce9, 0x8f69, 0xd3d8, 0x1, 0x0);
        gbc.writeMem(0x2f4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2b62, gbc.sp());
        EXPECT(0x2f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 003D
        gbc.setState(0x128b, 0x17e8, 0xf6c0, 0x1a94, 0xa762, 0xf328, 0x1, 0x1);
        gbc.writeMem(0x128b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x17e8, gbc.sp());
        EXPECT(0x128d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 003E
        gbc.setState(0x8930, 0x9c13, 0x8f10, 0x69d9, 0xf776, 0x9177, 0x0, 0x0);
        gbc.writeMem(0x8930, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9c13, gbc.sp());
        EXPECT(0x8932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8930));
        EXPECT(0x48, gbc.readMem(0x8931));
        // CB 48 003F
        gbc.setState(0xea18, 0x28ba, 0x9280, 0xf92b, 0x171e, 0xa5ef, 0x1, 0x0);
        gbc.writeMem(0xea18, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x28ba, gbc.sp());
        EXPECT(0xea1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea18));
        EXPECT(0x48, gbc.readMem(0xea19));
        // CB 48 0040
        gbc.setState(0x7d58, 0xf329, 0x1380, 0x3433, 0xab25, 0xc143, 0x0, 0x0);
        gbc.writeMem(0x7d58, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf329, gbc.sp());
        EXPECT(0x7d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0041
        gbc.setState(0x4ece, 0x2b83, 0x8e70, 0x837b, 0xd21, 0x76b7, 0x0, 0x1);
        gbc.writeMem(0x4ece, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2b83, gbc.sp());
        EXPECT(0x4ed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0043
        gbc.setState(0xbb34, 0xd83, 0x5660, 0xc702, 0x490f, 0x82a8, 0x0, 0x1);
        gbc.writeMem(0xbb34, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd83, gbc.sp());
        EXPECT(0xbb36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb34));
        EXPECT(0x48, gbc.readMem(0xbb35));
        // CB 48 0044
        gbc.setState(0x2464, 0xc738, 0x2340, 0xdc3d, 0x7a60, 0x2730, 0x0, 0x1);
        gbc.writeMem(0x2464, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc738, gbc.sp());
        EXPECT(0x2466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0045
        gbc.setState(0x36e6, 0xb6df, 0x5260, 0xa63a, 0x7258, 0x9b39, 0x0, 0x1);
        gbc.writeMem(0x36e6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb6df, gbc.sp());
        EXPECT(0x36e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0046
        gbc.setState(0x260, 0x25c4, 0x7b10, 0x5ccb, 0x1cb3, 0xb0bd, 0x0, 0x1);
        gbc.writeMem(0x260, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x25c4, gbc.sp());
        EXPECT(0x262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0047
        gbc.setState(0xcc3b, 0xbbda, 0xe30, 0x9e4d, 0x9246, 0xe0c6, 0x0, 0x1);
        gbc.writeMem(0xcc3b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbbda, gbc.sp());
        EXPECT(0xcc3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3b));
        EXPECT(0x48, gbc.readMem(0xcc3c));
        // CB 48 0048
        gbc.setState(0x42bb, 0x14cf, 0x5070, 0xed23, 0xc2f4, 0x3a76, 0x1, 0x1);
        gbc.writeMem(0x42bb, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x14cf, gbc.sp());
        EXPECT(0x42bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0049
        gbc.setState(0x226, 0x45f3, 0x8540, 0xf1f3, 0xf84a, 0xecf, 0x0, 0x0);
        gbc.writeMem(0x226, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x45f3, gbc.sp());
        EXPECT(0x228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 004B
        gbc.setState(0x6e0a, 0x108a, 0xf40, 0x5dcf, 0x1916, 0xdceb, 0x0, 0x1);
        gbc.writeMem(0x6e0a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x108a, gbc.sp());
        EXPECT(0x6e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 004C
        gbc.setState(0x140f, 0xbce3, 0xe3a0, 0xf117, 0x4a63, 0xdec8, 0x1, 0x0);
        gbc.writeMem(0x140f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbce3, gbc.sp());
        EXPECT(0x1411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 004D
        gbc.setState(0x3f2e, 0x2f4d, 0x37e0, 0x6422, 0xfaa4, 0xbb55, 0x0, 0x1);
        gbc.writeMem(0x3f2e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2f4d, gbc.sp());
        EXPECT(0x3f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 004E
        gbc.setState(0xcbeb, 0x928e, 0x4930, 0x7d57, 0x60fd, 0xb8a5, 0x1, 0x1);
        gbc.writeMem(0xcbeb, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x928e, gbc.sp());
        EXPECT(0xcbed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbeb));
        EXPECT(0x48, gbc.readMem(0xcbec));
        // CB 48 004F
        gbc.setState(0x97f0, 0xe443, 0x2ee0, 0x546d, 0x43a9, 0x5145, 0x1, 0x1);
        gbc.writeMem(0x97f0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe443, gbc.sp());
        EXPECT(0x97f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f0));
        EXPECT(0x48, gbc.readMem(0x97f1));
        // CB 48 0050
        gbc.setState(0x966d, 0x2ae3, 0x7f90, 0xb19e, 0xfa5a, 0x3817, 0x1, 0x1);
        gbc.writeMem(0x966d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2ae3, gbc.sp());
        EXPECT(0x966f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x966d));
        EXPECT(0x48, gbc.readMem(0x966e));
        // CB 48 0051
        gbc.setState(0x17e9, 0xf8d1, 0xf730, 0x1a42, 0xf831, 0xdf4d, 0x1, 0x1);
        gbc.writeMem(0x17e9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf8d1, gbc.sp());
        EXPECT(0x17eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0052
        gbc.setState(0x8f40, 0xd6c, 0xa6e0, 0x1a61, 0x769d, 0x3589, 0x1, 0x1);
        gbc.writeMem(0x8f40, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd6c, gbc.sp());
        EXPECT(0x8f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f40));
        EXPECT(0x48, gbc.readMem(0x8f41));
        // CB 48 0053
        gbc.setState(0x6021, 0x8ee2, 0x4940, 0x2eb3, 0xd251, 0xbc1, 0x0, 0x0);
        gbc.writeMem(0x6021, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8ee2, gbc.sp());
        EXPECT(0x6023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0054
        gbc.setState(0x4ebb, 0xbd20, 0xf020, 0xb6b6, 0xf426, 0xbcf9, 0x0, 0x0);
        gbc.writeMem(0x4ebb, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbd20, gbc.sp());
        EXPECT(0x4ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0055
        gbc.setState(0x759c, 0x57ce, 0x3760, 0x4471, 0xc11c, 0xeab6, 0x1, 0x1);
        gbc.writeMem(0x759c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x57ce, gbc.sp());
        EXPECT(0x759e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0057
        gbc.setState(0x57fa, 0x8afb, 0x580, 0xfd13, 0x7131, 0x88fe, 0x0, 0x1);
        gbc.writeMem(0x57fa, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8afb, gbc.sp());
        EXPECT(0x57fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0058
        gbc.setState(0xb554, 0x27f3, 0x50a0, 0xc82b, 0xa5a7, 0x76e1, 0x0, 0x0);
        gbc.writeMem(0xb554, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x27f3, gbc.sp());
        EXPECT(0xb556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb554));
        EXPECT(0x48, gbc.readMem(0xb555));
        // CB 48 0059
        gbc.setState(0xec61, 0xc5f, 0x88b0, 0x1b1f, 0x65c6, 0xef93, 0x1, 0x0);
        gbc.writeMem(0xec61, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc5f, gbc.sp());
        EXPECT(0xec63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec61));
        EXPECT(0x48, gbc.readMem(0xec62));
        // CB 48 005A
        gbc.setState(0xe6e0, 0x499d, 0xdd10, 0x1e90, 0xbea8, 0xbe94, 0x1, 0x0);
        gbc.writeMem(0xe6e0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x499d, gbc.sp());
        EXPECT(0xe6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e0));
        EXPECT(0x48, gbc.readMem(0xe6e1));
        // CB 48 005B
        gbc.setState(0xab3d, 0x93e1, 0xd0a0, 0x509a, 0xa8df, 0x9f2d, 0x0, 0x1);
        gbc.writeMem(0xab3d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x93e1, gbc.sp());
        EXPECT(0xab3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3d));
        EXPECT(0x48, gbc.readMem(0xab3e));
        // CB 48 005C
        gbc.setState(0xc80, 0x4313, 0xb160, 0x9dd8, 0x908d, 0x2765, 0x1, 0x1);
        gbc.writeMem(0xc80, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4313, gbc.sp());
        EXPECT(0xc82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 005D
        gbc.setState(0x7d47, 0xa851, 0xf340, 0x6e53, 0x307f, 0x3564, 0x0, 0x1);
        gbc.writeMem(0x7d47, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa851, gbc.sp());
        EXPECT(0x7d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 005E
        gbc.setState(0xefd9, 0xfeb1, 0x5650, 0x1b72, 0x420c, 0x554d, 0x0, 0x0);
        gbc.writeMem(0xefd9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfeb1, gbc.sp());
        EXPECT(0xefdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd9));
        EXPECT(0x48, gbc.readMem(0xefda));
        // CB 48 005F
        gbc.setState(0x1971, 0xe598, 0xb740, 0x40c4, 0x4c5a, 0x44a6, 0x0, 0x1);
        gbc.writeMem(0x1971, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe598, gbc.sp());
        EXPECT(0x1973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0060
        gbc.setState(0x593f, 0x679f, 0xc950, 0x5cfc, 0x5274, 0xc6a7, 0x0, 0x1);
        gbc.writeMem(0x593f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x679f, gbc.sp());
        EXPECT(0x5941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0061
        gbc.setState(0x1f29, 0x98e1, 0xaa0, 0x5844, 0xd64a, 0xfbf7, 0x0, 0x0);
        gbc.writeMem(0x1f29, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x98e1, gbc.sp());
        EXPECT(0x1f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0062
        gbc.setState(0xd752, 0x936a, 0x57b0, 0xcdf0, 0x67b6, 0xa17d, 0x1, 0x0);
        gbc.writeMem(0xd752, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x936a, gbc.sp());
        EXPECT(0xd754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd752));
        EXPECT(0x48, gbc.readMem(0xd753));
        // CB 48 0063
        gbc.setState(0xd2c3, 0x949b, 0xddd0, 0xf022, 0x16a, 0xe006, 0x1, 0x0);
        gbc.writeMem(0xd2c3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x949b, gbc.sp());
        EXPECT(0xd2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c3));
        EXPECT(0x48, gbc.readMem(0xd2c4));
        // CB 48 0064
        gbc.setState(0x172c, 0x41e5, 0x98a0, 0xaa07, 0x3d53, 0x7f91, 0x1, 0x1);
        gbc.writeMem(0x172c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x41e5, gbc.sp());
        EXPECT(0x172e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0065
        gbc.setState(0x2fb1, 0xfe3c, 0x2b50, 0xeb6c, 0xcf52, 0xd20f, 0x0, 0x1);
        gbc.writeMem(0x2fb1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfe3c, gbc.sp());
        EXPECT(0x2fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0066
        gbc.setState(0xb832, 0xfff9, 0xd190, 0x77c1, 0x8436, 0x17e1, 0x1, 0x1);
        gbc.writeMem(0xb832, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfff9, gbc.sp());
        EXPECT(0xb834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb832));
        EXPECT(0x48, gbc.readMem(0xb833));
        // CB 48 0067
        gbc.setState(0x10aa, 0x8c93, 0xfa30, 0xdbf7, 0x1c7a, 0x4e30, 0x1, 0x1);
        gbc.writeMem(0x10aa, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8c93, gbc.sp());
        EXPECT(0x10ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0068
        gbc.setState(0x1e2, 0x92de, 0x2f90, 0x8443, 0x51c9, 0x3782, 0x1, 0x1);
        gbc.writeMem(0x1e2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x92de, gbc.sp());
        EXPECT(0x1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 006A
        gbc.setState(0xa20b, 0x125e, 0xc70, 0xfde2, 0x130d, 0x1062, 0x0, 0x0);
        gbc.writeMem(0xa20b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x125e, gbc.sp());
        EXPECT(0xa20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa20b));
        EXPECT(0x48, gbc.readMem(0xa20c));
        // CB 48 006B
        gbc.setState(0xe27e, 0x7a5a, 0x1fe0, 0x6a72, 0x20e5, 0xd526, 0x1, 0x1);
        gbc.writeMem(0xe27e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7a5a, gbc.sp());
        EXPECT(0xe280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe27e));
        EXPECT(0x48, gbc.readMem(0xe27f));
        // CB 48 006C
        gbc.setState(0x5480, 0x8c21, 0x3210, 0x8584, 0x9f44, 0x4fd1, 0x0, 0x0);
        gbc.writeMem(0x5480, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8c21, gbc.sp());
        EXPECT(0x5482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 006D
        gbc.setState(0x706b, 0x2acf, 0x31e0, 0xab22, 0xde64, 0x1e76, 0x0, 0x1);
        gbc.writeMem(0x706b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2acf, gbc.sp());
        EXPECT(0x706d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 006E
        gbc.setState(0x3a7c, 0x2f5e, 0xfe80, 0x65ac, 0x5113, 0x1d2e, 0x1, 0x1);
        gbc.writeMem(0x3a7c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2f5e, gbc.sp());
        EXPECT(0x3a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 006F
        gbc.setState(0x1d0d, 0xca1d, 0x59f0, 0xbba9, 0xfc3e, 0x6b22, 0x1, 0x0);
        gbc.writeMem(0x1d0d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xca1d, gbc.sp());
        EXPECT(0x1d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0070
        gbc.setState(0x8520, 0x5f9, 0x9160, 0xad7f, 0x1042, 0x14fc, 0x1, 0x0);
        gbc.writeMem(0x8520, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5f9, gbc.sp());
        EXPECT(0x8522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8520));
        EXPECT(0x48, gbc.readMem(0x8521));
        // CB 48 0071
        gbc.setState(0x71c8, 0xe2a4, 0x4010, 0x4ac8, 0xc848, 0x5109, 0x1, 0x0);
        gbc.writeMem(0x71c8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe2a4, gbc.sp());
        EXPECT(0x71ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0072
        gbc.setState(0x5566, 0x684d, 0xf160, 0x8e8f, 0x79e1, 0x65b5, 0x1, 0x1);
        gbc.writeMem(0x5566, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x684d, gbc.sp());
        EXPECT(0x5568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0073
        gbc.setState(0xa00f, 0x2adb, 0x810, 0x502d, 0xd17, 0xa4d1, 0x1, 0x0);
        gbc.writeMem(0xa00f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2adb, gbc.sp());
        EXPECT(0xa011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00f));
        EXPECT(0x48, gbc.readMem(0xa010));
        // CB 48 0074
        gbc.setState(0x4a8b, 0x6ed7, 0xdd30, 0x3581, 0x6e83, 0xbd9f, 0x1, 0x0);
        gbc.writeMem(0x4a8b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6ed7, gbc.sp());
        EXPECT(0x4a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0075
        gbc.setState(0xfe9, 0x21d5, 0xa4c0, 0xffc5, 0x1e8a, 0x28, 0x0, 0x0);
        gbc.writeMem(0xfe9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x21d5, gbc.sp());
        EXPECT(0xfeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0076
        gbc.setState(0x92fa, 0x6588, 0x12a0, 0xffa2, 0xaacf, 0xfe85, 0x0, 0x0);
        gbc.writeMem(0x92fa, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6588, gbc.sp());
        EXPECT(0x92fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92fa));
        EXPECT(0x48, gbc.readMem(0x92fb));
        // CB 48 0077
        gbc.setState(0xe409, 0x1555, 0x9bf0, 0x39b4, 0x18a, 0x8501, 0x1, 0x0);
        gbc.writeMem(0xe409, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1555, gbc.sp());
        EXPECT(0xe40b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe409));
        EXPECT(0x48, gbc.readMem(0xe40a));
        // CB 48 0078
        gbc.setState(0x370c, 0xfbbe, 0x1750, 0xfdac, 0xef09, 0xb5a2, 0x1, 0x1);
        gbc.writeMem(0x370c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfbbe, gbc.sp());
        EXPECT(0x370e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0079
        gbc.setState(0xe2c8, 0xac2e, 0x4ee0, 0xa15e, 0x6273, 0xd97e, 0x0, 0x0);
        gbc.writeMem(0xe2c8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xac2e, gbc.sp());
        EXPECT(0xe2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c8));
        EXPECT(0x48, gbc.readMem(0xe2c9));
        // CB 48 007A
        gbc.setState(0x9fa6, 0xdcfd, 0x2bd0, 0xfbbb, 0xabbc, 0xdf6e, 0x0, 0x0);
        gbc.writeMem(0x9fa6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdcfd, gbc.sp());
        EXPECT(0x9fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa6));
        EXPECT(0x48, gbc.readMem(0x9fa7));
        // CB 48 007B
        gbc.setState(0x4e90, 0x5051, 0x9e80, 0xb6cb, 0x47cb, 0xb022, 0x0, 0x1);
        gbc.writeMem(0x4e90, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5051, gbc.sp());
        EXPECT(0x4e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 007C
        gbc.setState(0x3cfb, 0xb2ee, 0x7970, 0xe83e, 0xfbc6, 0x9b55, 0x1, 0x0);
        gbc.writeMem(0x3cfb, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb2ee, gbc.sp());
        EXPECT(0x3cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 007D
        gbc.setState(0x5e8b, 0xedf2, 0x5920, 0x7d3e, 0xa92e, 0x866c, 0x0, 0x0);
        gbc.writeMem(0x5e8b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xedf2, gbc.sp());
        EXPECT(0x5e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 007E
        gbc.setState(0xcdeb, 0xa22f, 0xbcc0, 0x993f, 0xa15f, 0x3ad2, 0x0, 0x1);
        gbc.writeMem(0xcdeb, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa22f, gbc.sp());
        EXPECT(0xcded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdeb));
        EXPECT(0x48, gbc.readMem(0xcdec));
        // CB 48 007F
        gbc.setState(0x671f, 0x2a91, 0xd20, 0x87b1, 0x64db, 0xddab, 0x0, 0x1);
        gbc.writeMem(0x671f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2a91, gbc.sp());
        EXPECT(0x6721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0080
        gbc.setState(0x83be, 0x2f53, 0xc030, 0x6bef, 0x3fb6, 0xfa2c, 0x0, 0x1);
        gbc.writeMem(0x83be, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2f53, gbc.sp());
        EXPECT(0x83c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83be));
        EXPECT(0x48, gbc.readMem(0x83bf));
        // CB 48 0081
        gbc.setState(0x393f, 0x8c7e, 0x7370, 0x8cf8, 0xc4b5, 0xa180, 0x1, 0x0);
        gbc.writeMem(0x393f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8c7e, gbc.sp());
        EXPECT(0x3941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0082
        gbc.setState(0x7255, 0x5d28, 0xc9e0, 0x8348, 0x7ca2, 0x5ed9, 0x0, 0x1);
        gbc.writeMem(0x7255, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5d28, gbc.sp());
        EXPECT(0x7257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0083
        gbc.setState(0x1fb7, 0x7e4, 0xc10, 0x5cd4, 0x26ba, 0x30a4, 0x1, 0x1);
        gbc.writeMem(0x1fb7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7e4, gbc.sp());
        EXPECT(0x1fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0084
        gbc.setState(0x97c0, 0xa20b, 0x23c0, 0x8960, 0x7474, 0xfedf, 0x1, 0x0);
        gbc.writeMem(0x97c0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa20b, gbc.sp());
        EXPECT(0x97c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c0));
        EXPECT(0x48, gbc.readMem(0x97c1));
        // CB 48 0085
        gbc.setState(0x248, 0x8bb0, 0xf900, 0x3532, 0xa3fd, 0xe519, 0x1, 0x1);
        gbc.writeMem(0x248, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8bb0, gbc.sp());
        EXPECT(0x24a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0086
        gbc.setState(0x6932, 0xd9d4, 0x4570, 0x5cf6, 0x915, 0x5aed, 0x0, 0x0);
        gbc.writeMem(0x6932, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd9d4, gbc.sp());
        EXPECT(0x6934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0087
        gbc.setState(0xb3b9, 0xe0f3, 0x13e0, 0xae00, 0x4971, 0xa99f, 0x0, 0x1);
        gbc.writeMem(0xb3b9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe0f3, gbc.sp());
        EXPECT(0xb3bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b9));
        EXPECT(0x48, gbc.readMem(0xb3ba));
        // CB 48 0088
        gbc.setState(0x9e65, 0x67cc, 0xac70, 0x6738, 0x1d21, 0x4c2, 0x0, 0x0);
        gbc.writeMem(0x9e65, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x67cc, gbc.sp());
        EXPECT(0x9e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e65));
        EXPECT(0x48, gbc.readMem(0x9e66));
        // CB 48 0089
        gbc.setState(0xa80a, 0x31dd, 0x8360, 0x2b6d, 0xddb9, 0x7b29, 0x0, 0x1);
        gbc.writeMem(0xa80a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x31dd, gbc.sp());
        EXPECT(0xa80c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80a));
        EXPECT(0x48, gbc.readMem(0xa80b));
        // CB 48 008A
        gbc.setState(0x1899, 0xcdd5, 0x3970, 0xdb42, 0xd1dd, 0x9764, 0x1, 0x0);
        gbc.writeMem(0x1899, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcdd5, gbc.sp());
        EXPECT(0x189b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 008B
        gbc.setState(0x82b9, 0x754a, 0xb810, 0x3358, 0x8cd7, 0x5778, 0x0, 0x0);
        gbc.writeMem(0x82b9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x754a, gbc.sp());
        EXPECT(0x82bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b9));
        EXPECT(0x48, gbc.readMem(0x82ba));
        // CB 48 008C
        gbc.setState(0x53fa, 0x68a8, 0xc290, 0x62a8, 0xf95, 0x7da2, 0x1, 0x1);
        gbc.writeMem(0x53fa, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x68a8, gbc.sp());
        EXPECT(0x53fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 008D
        gbc.setState(0xe042, 0x3b93, 0xf970, 0x1266, 0x1d63, 0x1ad7, 0x0, 0x1);
        gbc.writeMem(0xe042, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3b93, gbc.sp());
        EXPECT(0xe044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe042));
        EXPECT(0x48, gbc.readMem(0xe043));
        // CB 48 008E
        gbc.setState(0x7b0c, 0x5578, 0x7670, 0x31c7, 0x2948, 0xdc6c, 0x0, 0x0);
        gbc.writeMem(0x7b0c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5578, gbc.sp());
        EXPECT(0x7b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 008F
        gbc.setState(0x3a2f, 0xaa98, 0x9f20, 0x37a1, 0x745, 0x1b04, 0x0, 0x0);
        gbc.writeMem(0x3a2f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xaa98, gbc.sp());
        EXPECT(0x3a31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0090
        gbc.setState(0xdb29, 0x60eb, 0x9a10, 0xc9d7, 0x2627, 0x3b37, 0x0, 0x1);
        gbc.writeMem(0xdb29, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x60eb, gbc.sp());
        EXPECT(0xdb2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb29));
        EXPECT(0x48, gbc.readMem(0xdb2a));
        // CB 48 0091
        gbc.setState(0x8045, 0xd4fb, 0xf9e0, 0xd74, 0x9419, 0x6559, 0x1, 0x1);
        gbc.writeMem(0x8045, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd4fb, gbc.sp());
        EXPECT(0x8047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8045));
        EXPECT(0x48, gbc.readMem(0x8046));
        // CB 48 0092
        gbc.setState(0xe8da, 0x51ee, 0x79d0, 0xa0a8, 0x8c34, 0xa258, 0x0, 0x0);
        gbc.writeMem(0xe8da, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x51ee, gbc.sp());
        EXPECT(0xe8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8da));
        EXPECT(0x48, gbc.readMem(0xe8db));
        // CB 48 0093
        gbc.setState(0xd895, 0x5f41, 0x12a0, 0x6080, 0x1b03, 0x999e, 0x0, 0x0);
        gbc.writeMem(0xd895, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5f41, gbc.sp());
        EXPECT(0xd897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd895));
        EXPECT(0x48, gbc.readMem(0xd896));
        // CB 48 0094
        gbc.setState(0x27c6, 0x491b, 0x3460, 0xfeff, 0xb0db, 0xe404, 0x1, 0x1);
        gbc.writeMem(0x27c6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x491b, gbc.sp());
        EXPECT(0x27c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0095
        gbc.setState(0x6b53, 0x4ade, 0x2170, 0xfc86, 0x7198, 0x1ba, 0x1, 0x1);
        gbc.writeMem(0x6b53, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4ade, gbc.sp());
        EXPECT(0x6b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0096
        gbc.setState(0xd20d, 0x936, 0x7130, 0x44fb, 0x8f87, 0x52d8, 0x0, 0x1);
        gbc.writeMem(0xd20d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x936, gbc.sp());
        EXPECT(0xd20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20d));
        EXPECT(0x48, gbc.readMem(0xd20e));
        // CB 48 0097
        gbc.setState(0xea7e, 0xf16f, 0xc990, 0xbcda, 0x81ec, 0x9c5, 0x1, 0x0);
        gbc.writeMem(0xea7e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf16f, gbc.sp());
        EXPECT(0xea80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea7e));
        EXPECT(0x48, gbc.readMem(0xea7f));
        // CB 48 0098
        gbc.setState(0x7a2d, 0x5924, 0x16a0, 0xd908, 0x82e0, 0xf306, 0x0, 0x0);
        gbc.writeMem(0x7a2d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5924, gbc.sp());
        EXPECT(0x7a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 009A
        gbc.setState(0xbea6, 0x1496, 0x1a30, 0x10dd, 0x7931, 0xf4fd, 0x1, 0x1);
        gbc.writeMem(0xbea6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1496, gbc.sp());
        EXPECT(0xbea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea6));
        EXPECT(0x48, gbc.readMem(0xbea7));
        // CB 48 009B
        gbc.setState(0x69b0, 0x58bd, 0x5ad0, 0xdf9, 0x1a5d, 0xbf86, 0x1, 0x0);
        gbc.writeMem(0x69b0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x58bd, gbc.sp());
        EXPECT(0x69b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 009C
        gbc.setState(0x5953, 0x73de, 0xacb0, 0x656a, 0x6239, 0xef15, 0x1, 0x0);
        gbc.writeMem(0x5953, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x73de, gbc.sp());
        EXPECT(0x5955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 009E
        gbc.setState(0x912f, 0x6192, 0xed10, 0xff8d, 0xa8a9, 0x9964, 0x0, 0x0);
        gbc.writeMem(0x912f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6192, gbc.sp());
        EXPECT(0x9131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x912f));
        EXPECT(0x48, gbc.readMem(0x9130));
        // CB 48 009F
        gbc.setState(0xbd5a, 0x5998, 0xae10, 0x94d7, 0xb04b, 0x9651, 0x0, 0x0);
        gbc.writeMem(0xbd5a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5998, gbc.sp());
        EXPECT(0xbd5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5a));
        EXPECT(0x48, gbc.readMem(0xbd5b));
        // CB 48 00A0
        gbc.setState(0xd23c, 0x7a13, 0xf60, 0xea88, 0x4fee, 0x5c76, 0x1, 0x1);
        gbc.writeMem(0xd23c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7a13, gbc.sp());
        EXPECT(0xd23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd23c));
        EXPECT(0x48, gbc.readMem(0xd23d));
        // CB 48 00A1
        gbc.setState(0xa77f, 0x1848, 0xe020, 0x4d5, 0x1904, 0xc45d, 0x0, 0x0);
        gbc.writeMem(0xa77f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1848, gbc.sp());
        EXPECT(0xa781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77f));
        EXPECT(0x48, gbc.readMem(0xa780));
        // CB 48 00A2
        gbc.setState(0x7935, 0x54bf, 0x5880, 0x2122, 0x279, 0xc28f, 0x0, 0x0);
        gbc.writeMem(0x7935, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x54bf, gbc.sp());
        EXPECT(0x7937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00A3
        gbc.setState(0x195c, 0x2af7, 0x10b0, 0xd9cc, 0x3a1b, 0xcc2b, 0x0, 0x0);
        gbc.writeMem(0x195c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2af7, gbc.sp());
        EXPECT(0x195e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00A4
        gbc.setState(0x879a, 0x5da6, 0x2eb0, 0x662f, 0xa6b5, 0x953e, 0x1, 0x0);
        gbc.writeMem(0x879a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5da6, gbc.sp());
        EXPECT(0x879c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879a));
        EXPECT(0x48, gbc.readMem(0x879b));
        // CB 48 00A5
        gbc.setState(0x85c1, 0x273d, 0xf8b0, 0x64b9, 0x81a5, 0xef1, 0x1, 0x1);
        gbc.writeMem(0x85c1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x273d, gbc.sp());
        EXPECT(0x85c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c1));
        EXPECT(0x48, gbc.readMem(0x85c2));
        // CB 48 00A6
        gbc.setState(0x540, 0xdfcd, 0xa660, 0xd2f8, 0x7e08, 0x5b07, 0x0, 0x1);
        gbc.writeMem(0x540, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdfcd, gbc.sp());
        EXPECT(0x542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00A7
        gbc.setState(0xbc9e, 0x6fb5, 0x3520, 0xcc85, 0xa9c0, 0x14ad, 0x0, 0x1);
        gbc.writeMem(0xbc9e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6fb5, gbc.sp());
        EXPECT(0xbca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9e));
        EXPECT(0x48, gbc.readMem(0xbc9f));
        // CB 48 00A8
        gbc.setState(0xe649, 0x9b9d, 0xb6a0, 0x8063, 0xdc85, 0xd42f, 0x0, 0x1);
        gbc.writeMem(0xe649, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9b9d, gbc.sp());
        EXPECT(0xe64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe649));
        EXPECT(0x48, gbc.readMem(0xe64a));
        // CB 48 00A9
        gbc.setState(0x2729, 0xb1f6, 0xfbe0, 0xcbbc, 0x9e6e, 0xf75, 0x0, 0x1);
        gbc.writeMem(0x2729, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb1f6, gbc.sp());
        EXPECT(0x272b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00AA
        gbc.setState(0xba26, 0x21bd, 0x23d0, 0x8b39, 0xfdb1, 0x5107, 0x1, 0x0);
        gbc.writeMem(0xba26, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x21bd, gbc.sp());
        EXPECT(0xba28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba26));
        EXPECT(0x48, gbc.readMem(0xba27));
        // CB 48 00AB
        gbc.setState(0xaaa8, 0x4597, 0x4470, 0x67d4, 0xb30a, 0x28b, 0x0, 0x0);
        gbc.writeMem(0xaaa8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4597, gbc.sp());
        EXPECT(0xaaaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa8));
        EXPECT(0x48, gbc.readMem(0xaaa9));
        // CB 48 00AC
        gbc.setState(0x17f5, 0x5027, 0x9600, 0x8737, 0xa99d, 0x60b9, 0x0, 0x1);
        gbc.writeMem(0x17f5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5027, gbc.sp());
        EXPECT(0x17f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00AD
        gbc.setState(0xc513, 0xb3c3, 0xfa00, 0xa613, 0x8852, 0xb1f6, 0x1, 0x0);
        gbc.writeMem(0xc513, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb3c3, gbc.sp());
        EXPECT(0xc515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc513));
        EXPECT(0x48, gbc.readMem(0xc514));
        // CB 48 00AE
        gbc.setState(0x6eb6, 0x5558, 0x80e0, 0x17be, 0xd246, 0xd248, 0x0, 0x1);
        gbc.writeMem(0x6eb6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5558, gbc.sp());
        EXPECT(0x6eb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00AF
        gbc.setState(0x37, 0xfc8e, 0x31a0, 0xa8c4, 0x8f41, 0x8f28, 0x0, 0x0);
        gbc.writeMem(0x37, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfc8e, gbc.sp());
        EXPECT(0x39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00B0
        gbc.setState(0x3c15, 0x9eeb, 0x6510, 0x9322, 0x9dc7, 0xeb05, 0x0, 0x0);
        gbc.writeMem(0x3c15, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9eeb, gbc.sp());
        EXPECT(0x3c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00B1
        gbc.setState(0xa579, 0x84a5, 0x1980, 0x3d05, 0x5be6, 0x5a55, 0x0, 0x0);
        gbc.writeMem(0xa579, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x84a5, gbc.sp());
        EXPECT(0xa57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa579));
        EXPECT(0x48, gbc.readMem(0xa57a));
        // CB 48 00B2
        gbc.setState(0xc088, 0x1467, 0xc2c0, 0x6778, 0x3e31, 0x1fe8, 0x0, 0x1);
        gbc.writeMem(0xc088, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1467, gbc.sp());
        EXPECT(0xc08a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc088));
        EXPECT(0x48, gbc.readMem(0xc089));
        // CB 48 00B3
        gbc.setState(0x6925, 0x3d4d, 0x9490, 0xd09a, 0x7d1e, 0x2ae8, 0x0, 0x1);
        gbc.writeMem(0x6925, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3d4d, gbc.sp());
        EXPECT(0x6927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00B4
        gbc.setState(0xd1a9, 0xec21, 0x68e0, 0x711d, 0x4c92, 0x850a, 0x0, 0x1);
        gbc.writeMem(0xd1a9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xec21, gbc.sp());
        EXPECT(0xd1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a9));
        EXPECT(0x48, gbc.readMem(0xd1aa));
        // CB 48 00B5
        gbc.setState(0x1fe8, 0x83b2, 0x9f10, 0x671, 0xc29, 0x9265, 0x1, 0x1);
        gbc.writeMem(0x1fe8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x83b2, gbc.sp());
        EXPECT(0x1fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00B6
        gbc.setState(0x1816, 0xe010, 0xf940, 0xf470, 0x923c, 0x7f25, 0x0, 0x0);
        gbc.writeMem(0x1816, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe010, gbc.sp());
        EXPECT(0x1818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00B7
        gbc.setState(0x21ca, 0xbbef, 0xa960, 0x2792, 0xad75, 0x653c, 0x1, 0x1);
        gbc.writeMem(0x21ca, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbbef, gbc.sp());
        EXPECT(0x21cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00B8
        gbc.setState(0x9a31, 0x23b7, 0xeae0, 0xfb89, 0xe71e, 0x293c, 0x0, 0x0);
        gbc.writeMem(0x9a31, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x23b7, gbc.sp());
        EXPECT(0x9a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a31));
        EXPECT(0x48, gbc.readMem(0x9a32));
        // CB 48 00B9
        gbc.setState(0x965c, 0x25c, 0x7bf0, 0x190d, 0xd520, 0x9f1a, 0x1, 0x1);
        gbc.writeMem(0x965c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x25c, gbc.sp());
        EXPECT(0x965e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965c));
        EXPECT(0x48, gbc.readMem(0x965d));
        // CB 48 00BA
        gbc.setState(0xa0cc, 0x61d7, 0x37c0, 0x4a59, 0xb88f, 0x3f26, 0x1, 0x1);
        gbc.writeMem(0xa0cc, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x61d7, gbc.sp());
        EXPECT(0xa0ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0cc));
        EXPECT(0x48, gbc.readMem(0xa0cd));
        // CB 48 00BB
        gbc.setState(0x57c4, 0xcdc8, 0x3690, 0x47db, 0x62c3, 0xba51, 0x0, 0x1);
        gbc.writeMem(0x57c4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcdc8, gbc.sp());
        EXPECT(0x57c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00BC
        gbc.setState(0x12a8, 0x803c, 0xdf90, 0xbe4a, 0x2aec, 0x56a1, 0x0, 0x0);
        gbc.writeMem(0x12a8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x803c, gbc.sp());
        EXPECT(0x12aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00BD
        gbc.setState(0x1295, 0x867e, 0x8410, 0xdbd0, 0x2b61, 0xeefc, 0x0, 0x0);
        gbc.writeMem(0x1295, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x867e, gbc.sp());
        EXPECT(0x1297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00BE
        gbc.setState(0x480c, 0x175f, 0xf8f0, 0xd71e, 0x3585, 0x714, 0x1, 0x1);
        gbc.writeMem(0x480c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x175f, gbc.sp());
        EXPECT(0x480e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00BF
        gbc.setState(0xa3c2, 0xd13d, 0x3870, 0xede, 0x2a42, 0x96d8, 0x1, 0x1);
        gbc.writeMem(0xa3c2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd13d, gbc.sp());
        EXPECT(0xa3c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c2));
        EXPECT(0x48, gbc.readMem(0xa3c3));
        // CB 48 00C0
        gbc.setState(0x3fa9, 0xec59, 0x72d0, 0x55b9, 0x7967, 0x6068, 0x0, 0x0);
        gbc.writeMem(0x3fa9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xec59, gbc.sp());
        EXPECT(0x3fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00C1
        gbc.setState(0xc9a3, 0x25b7, 0xe760, 0x7ca0, 0x44ee, 0xd26, 0x1, 0x0);
        gbc.writeMem(0xc9a3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x25b7, gbc.sp());
        EXPECT(0xc9a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a3));
        EXPECT(0x48, gbc.readMem(0xc9a4));
        // CB 48 00C2
        gbc.setState(0xdf3, 0x752e, 0x9120, 0x563, 0xf0c0, 0x882d, 0x1, 0x0);
        gbc.writeMem(0xdf3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x752e, gbc.sp());
        EXPECT(0xdf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00C3
        gbc.setState(0xdc51, 0xf318, 0x3de0, 0x351f, 0x2eee, 0x4b8d, 0x1, 0x1);
        gbc.writeMem(0xdc51, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf318, gbc.sp());
        EXPECT(0xdc53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc51));
        EXPECT(0x48, gbc.readMem(0xdc52));
        // CB 48 00C4
        gbc.setState(0x1100, 0xabe4, 0x22d0, 0x42f9, 0x9f9b, 0x612f, 0x1, 0x1);
        gbc.writeMem(0x1100, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xabe4, gbc.sp());
        EXPECT(0x1102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00C5
        gbc.setState(0xd59e, 0xcfea, 0xff50, 0xb58a, 0xd3fb, 0x9d1a, 0x1, 0x1);
        gbc.writeMem(0xd59e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcfea, gbc.sp());
        EXPECT(0xd5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd59e));
        EXPECT(0x48, gbc.readMem(0xd59f));
        // CB 48 00C7
        gbc.setState(0xb78, 0xa540, 0xaab0, 0x3dc0, 0xe0aa, 0xf4dc, 0x0, 0x0);
        gbc.writeMem(0xb78, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa540, gbc.sp());
        EXPECT(0xb7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00C8
        gbc.setState(0xbcd7, 0x9729, 0xeb10, 0x9daa, 0x9dff, 0xf73e, 0x0, 0x0);
        gbc.writeMem(0xbcd7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9729, gbc.sp());
        EXPECT(0xbcd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd7));
        EXPECT(0x48, gbc.readMem(0xbcd8));
        // CB 48 00C9
        gbc.setState(0xb0fd, 0xee2d, 0xb4f0, 0xd7d, 0xb6db, 0x8d89, 0x1, 0x0);
        gbc.writeMem(0xb0fd, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xee2d, gbc.sp());
        EXPECT(0xb0ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fd));
        EXPECT(0x48, gbc.readMem(0xb0fe));
        // CB 48 00CA
        gbc.setState(0x1e31, 0x4da1, 0x9450, 0xd2b1, 0xe9e0, 0xd195, 0x1, 0x0);
        gbc.writeMem(0x1e31, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4da1, gbc.sp());
        EXPECT(0x1e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00CB
        gbc.setState(0xd348, 0x5f8c, 0x26b0, 0x6494, 0xe476, 0x1fb7, 0x1, 0x1);
        gbc.writeMem(0xd348, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5f8c, gbc.sp());
        EXPECT(0xd34a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd348));
        EXPECT(0x48, gbc.readMem(0xd349));
        // CB 48 00CC
        gbc.setState(0x565e, 0xa444, 0xe5e0, 0x6bcc, 0xdd2, 0xdbe0, 0x1, 0x1);
        gbc.writeMem(0x565e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa444, gbc.sp());
        EXPECT(0x5660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00CD
        gbc.setState(0x9b5, 0xc8bd, 0xc0f0, 0x4a17, 0x47c5, 0x5b5f, 0x1, 0x1);
        gbc.writeMem(0x9b5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc8bd, gbc.sp());
        EXPECT(0x9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00CE
        gbc.setState(0x1022, 0x827f, 0xc340, 0x69ad, 0xb90, 0x6239, 0x1, 0x1);
        gbc.writeMem(0x1022, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x827f, gbc.sp());
        EXPECT(0x1024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00CF
        gbc.setState(0x93ee, 0xc784, 0x4b0, 0xab9b, 0x7b1d, 0x99d9, 0x1, 0x0);
        gbc.writeMem(0x93ee, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc784, gbc.sp());
        EXPECT(0x93f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ee));
        EXPECT(0x48, gbc.readMem(0x93ef));
        // CB 48 00D0
        gbc.setState(0x2a78, 0x37b5, 0x3390, 0xda9a, 0x94b4, 0xb6af, 0x1, 0x0);
        gbc.writeMem(0x2a78, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x37b5, gbc.sp());
        EXPECT(0x2a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00D1
        gbc.setState(0x1e13, 0xc34e, 0x23f0, 0xe92a, 0x9297, 0xa4fc, 0x1, 0x1);
        gbc.writeMem(0x1e13, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc34e, gbc.sp());
        EXPECT(0x1e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00D2
        gbc.setState(0x3de6, 0x84e7, 0x7970, 0xe168, 0x985, 0x4822, 0x0, 0x0);
        gbc.writeMem(0x3de6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x84e7, gbc.sp());
        EXPECT(0x3de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00D3
        gbc.setState(0xe330, 0x527b, 0x9c90, 0x5f5d, 0x9e66, 0xa6cc, 0x0, 0x1);
        gbc.writeMem(0xe330, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x527b, gbc.sp());
        EXPECT(0xe332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe330));
        EXPECT(0x48, gbc.readMem(0xe331));
        // CB 48 00D4
        gbc.setState(0x8fb2, 0x8cb0, 0xff50, 0x4110, 0x31c9, 0x34df, 0x0, 0x0);
        gbc.writeMem(0x8fb2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8cb0, gbc.sp());
        EXPECT(0x8fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb2));
        EXPECT(0x48, gbc.readMem(0x8fb3));
        // CB 48 00D5
        gbc.setState(0xd4c9, 0x21db, 0x8e90, 0xaac1, 0xa7c9, 0xdab3, 0x1, 0x0);
        gbc.writeMem(0xd4c9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x21db, gbc.sp());
        EXPECT(0xd4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c9));
        EXPECT(0x48, gbc.readMem(0xd4ca));
        // CB 48 00D6
        gbc.setState(0x8036, 0x3ba8, 0x4b0, 0x8e9a, 0xb93d, 0xbef, 0x1, 0x1);
        gbc.writeMem(0x8036, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3ba8, gbc.sp());
        EXPECT(0x8038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8036));
        EXPECT(0x48, gbc.readMem(0x8037));
        // CB 48 00D7
        gbc.setState(0xce2, 0x8411, 0x7180, 0x3a9f, 0xbce1, 0xea89, 0x0, 0x1);
        gbc.writeMem(0xce2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8411, gbc.sp());
        EXPECT(0xce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00D8
        gbc.setState(0xd5d2, 0x9c73, 0xb5b0, 0x31cc, 0xc54, 0x10f1, 0x1, 0x1);
        gbc.writeMem(0xd5d2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9c73, gbc.sp());
        EXPECT(0xd5d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d2));
        EXPECT(0x48, gbc.readMem(0xd5d3));
        // CB 48 00D9
        gbc.setState(0xabe1, 0x8760, 0x3300, 0x99d2, 0xdb9e, 0xb4be, 0x0, 0x1);
        gbc.writeMem(0xabe1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8760, gbc.sp());
        EXPECT(0xabe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe1));
        EXPECT(0x48, gbc.readMem(0xabe2));
        // CB 48 00DA
        gbc.setState(0x3932, 0xa042, 0x43a0, 0xa246, 0x11e4, 0x9500, 0x0, 0x0);
        gbc.writeMem(0x3932, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa042, gbc.sp());
        EXPECT(0x3934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00DB
        gbc.setState(0x500c, 0xa405, 0xcc60, 0x8c56, 0x8102, 0xd20f, 0x1, 0x1);
        gbc.writeMem(0x500c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa405, gbc.sp());
        EXPECT(0x500e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00DC
        gbc.setState(0xeca4, 0x35a7, 0x4fb0, 0x9627, 0x116, 0xbc0, 0x1, 0x1);
        gbc.writeMem(0xeca4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x35a7, gbc.sp());
        EXPECT(0xeca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca4));
        EXPECT(0x48, gbc.readMem(0xeca5));
        // CB 48 00DD
        gbc.setState(0xb6de, 0x3345, 0x68c0, 0x97a1, 0xa174, 0xb86a, 0x1, 0x0);
        gbc.writeMem(0xb6de, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3345, gbc.sp());
        EXPECT(0xb6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6de));
        EXPECT(0x48, gbc.readMem(0xb6df));
        // CB 48 00DE
        gbc.setState(0xa3ae, 0xb63b, 0xdbc0, 0x4fba, 0x85cb, 0xfc64, 0x1, 0x0);
        gbc.writeMem(0xa3ae, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb63b, gbc.sp());
        EXPECT(0xa3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ae));
        EXPECT(0x48, gbc.readMem(0xa3af));
        // CB 48 00DF
        gbc.setState(0x236d, 0x16d6, 0x6cc0, 0x1b70, 0x5a2b, 0xb148, 0x1, 0x1);
        gbc.writeMem(0x236d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x16d6, gbc.sp());
        EXPECT(0x236f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00E0
        gbc.setState(0xc328, 0xd31f, 0x6740, 0x32a0, 0xdc2c, 0x3d94, 0x1, 0x0);
        gbc.writeMem(0xc328, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd31f, gbc.sp());
        EXPECT(0xc32a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc328));
        EXPECT(0x48, gbc.readMem(0xc329));
        // CB 48 00E1
        gbc.setState(0xb9f3, 0x8665, 0xe7f0, 0x7756, 0x163, 0x6c85, 0x0, 0x0);
        gbc.writeMem(0xb9f3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8665, gbc.sp());
        EXPECT(0xb9f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f3));
        EXPECT(0x48, gbc.readMem(0xb9f4));
        // CB 48 00E2
        gbc.setState(0xd4d6, 0x5939, 0xf820, 0x40a3, 0x16e1, 0x2116, 0x1, 0x1);
        gbc.writeMem(0xd4d6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5939, gbc.sp());
        EXPECT(0xd4d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d6));
        EXPECT(0x48, gbc.readMem(0xd4d7));
        // CB 48 00E3
        gbc.setState(0x1448, 0xf61d, 0xb4e0, 0x4d8, 0xf900, 0xe901, 0x1, 0x0);
        gbc.writeMem(0x1448, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf61d, gbc.sp());
        EXPECT(0x144a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00E4
        gbc.setState(0x4c27, 0x2d80, 0x15f0, 0x3a2b, 0x884, 0xd8cd, 0x0, 0x1);
        gbc.writeMem(0x4c27, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2d80, gbc.sp());
        EXPECT(0x4c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00E5
        gbc.setState(0xaa52, 0xff5f, 0xa880, 0xb50c, 0x4afa, 0x1fb0, 0x1, 0x0);
        gbc.writeMem(0xaa52, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xff5f, gbc.sp());
        EXPECT(0xaa54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa52));
        EXPECT(0x48, gbc.readMem(0xaa53));
        // CB 48 00E6
        gbc.setState(0xb77a, 0xd5f4, 0xc580, 0x427c, 0x4104, 0x69ff, 0x0, 0x0);
        gbc.writeMem(0xb77a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd5f4, gbc.sp());
        EXPECT(0xb77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77a));
        EXPECT(0x48, gbc.readMem(0xb77b));
        // CB 48 00E7
        gbc.setState(0x3420, 0x444d, 0x8b10, 0xb276, 0x53f7, 0x7aa5, 0x1, 0x1);
        gbc.writeMem(0x3420, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x444d, gbc.sp());
        EXPECT(0x3422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00E8
        gbc.setState(0xc454, 0x37d9, 0xce70, 0xb0d7, 0xe2f1, 0x670, 0x0, 0x0);
        gbc.writeMem(0xc454, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x37d9, gbc.sp());
        EXPECT(0xc456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc454));
        EXPECT(0x48, gbc.readMem(0xc455));
        // CB 48 00E9
        gbc.setState(0x51e1, 0x72fb, 0xae20, 0xb0d4, 0x3422, 0x191b, 0x1, 0x0);
        gbc.writeMem(0x51e1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x72fb, gbc.sp());
        EXPECT(0x51e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00EA
        gbc.setState(0xc437, 0x1a52, 0x3e60, 0x723e, 0xdeb2, 0x92af, 0x1, 0x0);
        gbc.writeMem(0xc437, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1a52, gbc.sp());
        EXPECT(0xc439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc437));
        EXPECT(0x48, gbc.readMem(0xc438));
        // CB 48 00EB
        gbc.setState(0x4592, 0x623f, 0xded0, 0x8612, 0x6a6a, 0x27b3, 0x1, 0x0);
        gbc.writeMem(0x4592, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x623f, gbc.sp());
        EXPECT(0x4594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00EC
        gbc.setState(0xa5c6, 0x8bd, 0x20b0, 0x9357, 0x6644, 0x67fa, 0x1, 0x0);
        gbc.writeMem(0xa5c6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8bd, gbc.sp());
        EXPECT(0xa5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c6));
        EXPECT(0x48, gbc.readMem(0xa5c7));
        // CB 48 00ED
        gbc.setState(0x6224, 0xec1, 0x3340, 0xc54b, 0x5b65, 0xe2dc, 0x1, 0x0);
        gbc.writeMem(0x6224, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xec1, gbc.sp());
        EXPECT(0x6226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00EE
        gbc.setState(0xeb47, 0xa404, 0xb3f0, 0xa4a3, 0x23e, 0xa49a, 0x1, 0x1);
        gbc.writeMem(0xeb47, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa404, gbc.sp());
        EXPECT(0xeb49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb47));
        EXPECT(0x48, gbc.readMem(0xeb48));
        // CB 48 00EF
        gbc.setState(0x7247, 0xe5da, 0xf9b0, 0xe4d, 0x71c, 0x6156, 0x1, 0x1);
        gbc.writeMem(0x7247, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe5da, gbc.sp());
        EXPECT(0x7249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00F0
        gbc.setState(0x3d5b, 0x78c7, 0x93f0, 0x85fc, 0xe198, 0x7789, 0x0, 0x1);
        gbc.writeMem(0x3d5b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x78c7, gbc.sp());
        EXPECT(0x3d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00F1
        gbc.setState(0x494c, 0xad6c, 0xd6b0, 0x7900, 0xf98, 0x2864, 0x0, 0x0);
        gbc.writeMem(0x494c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xad6c, gbc.sp());
        EXPECT(0x494e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00F2
        gbc.setState(0xdaf6, 0x9fb9, 0xda80, 0x6a56, 0x3eca, 0x811d, 0x1, 0x0);
        gbc.writeMem(0xdaf6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9fb9, gbc.sp());
        EXPECT(0xdaf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf6));
        EXPECT(0x48, gbc.readMem(0xdaf7));
        // CB 48 00F3
        gbc.setState(0xbe02, 0x3c3c, 0x1360, 0xa647, 0xb4ad, 0x79da, 0x0, 0x0);
        gbc.writeMem(0xbe02, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3c3c, gbc.sp());
        EXPECT(0xbe04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe02));
        EXPECT(0x48, gbc.readMem(0xbe03));
        // CB 48 00F4
        gbc.setState(0x256f, 0xd701, 0xc340, 0x6d2a, 0x5ffd, 0xcae1, 0x0, 0x1);
        gbc.writeMem(0x256f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd701, gbc.sp());
        EXPECT(0x2571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00F5
        gbc.setState(0xbfd5, 0x8bc2, 0x93c0, 0x22af, 0x6187, 0xd728, 0x0, 0x0);
        gbc.writeMem(0xbfd5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8bc2, gbc.sp());
        EXPECT(0xbfd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd5));
        EXPECT(0x48, gbc.readMem(0xbfd6));
        // CB 48 00F6
        gbc.setState(0x2539, 0xf9b6, 0xfc40, 0xa15a, 0xae70, 0xddc9, 0x1, 0x1);
        gbc.writeMem(0x2539, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf9b6, gbc.sp());
        EXPECT(0x253b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00F7
        gbc.setState(0xee0, 0x4a7f, 0x51e0, 0x7ef4, 0xcf6d, 0x31f9, 0x1, 0x1);
        gbc.writeMem(0xee0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4a7f, gbc.sp());
        EXPECT(0xee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00F9
        gbc.setState(0x6625, 0x7d42, 0x7d20, 0x2dd2, 0x1db3, 0x5ef8, 0x1, 0x0);
        gbc.writeMem(0x6625, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7d42, gbc.sp());
        EXPECT(0x6627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 00FA
        gbc.setState(0xc89b, 0x8783, 0x37a0, 0xaf43, 0x197e, 0xfab, 0x0, 0x1);
        gbc.writeMem(0xc89b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8783, gbc.sp());
        EXPECT(0xc89d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc89b));
        EXPECT(0x48, gbc.readMem(0xc89c));
        // CB 48 00FB
        gbc.setState(0xa6b, 0xff58, 0xb1b0, 0x8249, 0xab31, 0xbf0, 0x0, 0x1);
        gbc.writeMem(0xa6b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xff58, gbc.sp());
        EXPECT(0xa6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00FC
        gbc.setState(0xd0ea, 0x94a3, 0x7850, 0x5e9a, 0x3de, 0x5a6c, 0x0, 0x1);
        gbc.writeMem(0xd0ea, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x94a3, gbc.sp());
        EXPECT(0xd0ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ea));
        EXPECT(0x48, gbc.readMem(0xd0eb));
        // CB 48 00FD
        gbc.setState(0xc28c, 0xf6, 0x3970, 0x9bba, 0x38d, 0x544f, 0x1, 0x0);
        gbc.writeMem(0xc28c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf6, gbc.sp());
        EXPECT(0xc28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc28c));
        EXPECT(0x48, gbc.readMem(0xc28d));
        // CB 48 00FE
        gbc.setState(0x849, 0xb17a, 0xaad0, 0x67af, 0x2c5c, 0xa6d9, 0x1, 0x0);
        gbc.writeMem(0x849, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb17a, gbc.sp());
        EXPECT(0x84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 00FF
        gbc.setState(0xdf23, 0x48dd, 0xb5a0, 0xa707, 0xf04b, 0x239f, 0x0, 0x0);
        gbc.writeMem(0xdf23, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x48dd, gbc.sp());
        EXPECT(0xdf25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf23));
        EXPECT(0x48, gbc.readMem(0xdf24));
        // CB 48 0100
        gbc.setState(0xe35d, 0x494d, 0xf3b0, 0xce06, 0xde81, 0xdf77, 0x1, 0x1);
        gbc.writeMem(0xe35d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x494d, gbc.sp());
        EXPECT(0xe35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35d));
        EXPECT(0x48, gbc.readMem(0xe35e));
        // CB 48 0102
        gbc.setState(0x5ac2, 0x6557, 0x5780, 0x7d87, 0x1518, 0x1204, 0x0, 0x0);
        gbc.writeMem(0x5ac2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6557, gbc.sp());
        EXPECT(0x5ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0103
        gbc.setState(0xe729, 0x249a, 0xe7d0, 0xeff6, 0xc6e6, 0x5e2c, 0x0, 0x0);
        gbc.writeMem(0xe729, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x249a, gbc.sp());
        EXPECT(0xe72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe729));
        EXPECT(0x48, gbc.readMem(0xe72a));
        // CB 48 0104
        gbc.setState(0x72f5, 0xbb81, 0xd50, 0xce1d, 0x82fa, 0x5e5, 0x1, 0x1);
        gbc.writeMem(0x72f5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbb81, gbc.sp());
        EXPECT(0x72f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0105
        gbc.setState(0xc995, 0x68f4, 0xc4c0, 0xcf5c, 0x439, 0x1ff6, 0x1, 0x1);
        gbc.writeMem(0xc995, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x68f4, gbc.sp());
        EXPECT(0xc997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc995));
        EXPECT(0x48, gbc.readMem(0xc996));
        // CB 48 0106
        gbc.setState(0xc209, 0x5e60, 0x5110, 0xad8e, 0xbec, 0x8093, 0x0, 0x0);
        gbc.writeMem(0xc209, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5e60, gbc.sp());
        EXPECT(0xc20b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc209));
        EXPECT(0x48, gbc.readMem(0xc20a));
        // CB 48 0108
        gbc.setState(0x399d, 0xbebd, 0xe220, 0x53b, 0x7492, 0x13ec, 0x1, 0x1);
        gbc.writeMem(0x399d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbebd, gbc.sp());
        EXPECT(0x399f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0109
        gbc.setState(0x1747, 0x9e70, 0xa740, 0xa328, 0x84d5, 0x79eb, 0x0, 0x1);
        gbc.writeMem(0x1747, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9e70, gbc.sp());
        EXPECT(0x1749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 010A
        gbc.setState(0x4bc5, 0x42bf, 0x2640, 0xbc60, 0xff6d, 0xd00f, 0x1, 0x0);
        gbc.writeMem(0x4bc5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x42bf, gbc.sp());
        EXPECT(0x4bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 010B
        gbc.setState(0x3933, 0x84ec, 0x9f60, 0x9bfc, 0x8e8b, 0x98e5, 0x0, 0x1);
        gbc.writeMem(0x3933, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x84ec, gbc.sp());
        EXPECT(0x3935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 010C
        gbc.setState(0x5385, 0xab8, 0xc1c0, 0x3c05, 0xa711, 0x7952, 0x1, 0x0);
        gbc.writeMem(0x5385, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xab8, gbc.sp());
        EXPECT(0x5387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 010D
        gbc.setState(0x144a, 0x28a5, 0x5e70, 0xdf5, 0xad0d, 0x624a, 0x1, 0x1);
        gbc.writeMem(0x144a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x28a5, gbc.sp());
        EXPECT(0x144c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 010E
        gbc.setState(0xc014, 0x70c0, 0xe220, 0xfa2a, 0x97d, 0xe7bf, 0x1, 0x1);
        gbc.writeMem(0xc014, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x70c0, gbc.sp());
        EXPECT(0xc016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc014));
        EXPECT(0x48, gbc.readMem(0xc015));
        // CB 48 010F
        gbc.setState(0xec12, 0x8bcc, 0xd9b0, 0x9381, 0x9c3f, 0x1b1e, 0x1, 0x1);
        gbc.writeMem(0xec12, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8bcc, gbc.sp());
        EXPECT(0xec14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec12));
        EXPECT(0x48, gbc.readMem(0xec13));
        // CB 48 0111
        gbc.setState(0x82ea, 0x282d, 0x35c0, 0xbea2, 0xd443, 0x3f5e, 0x1, 0x0);
        gbc.writeMem(0x82ea, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x282d, gbc.sp());
        EXPECT(0x82ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ea));
        EXPECT(0x48, gbc.readMem(0x82eb));
        // CB 48 0112
        gbc.setState(0xa6c9, 0x4357, 0x25a0, 0xdd53, 0x9c09, 0xf7cb, 0x1, 0x0);
        gbc.writeMem(0xa6c9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4357, gbc.sp());
        EXPECT(0xa6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c9));
        EXPECT(0x48, gbc.readMem(0xa6ca));
        // CB 48 0113
        gbc.setState(0xeaf, 0x57cd, 0x2850, 0x8652, 0x353d, 0x2646, 0x1, 0x0);
        gbc.writeMem(0xeaf, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x57cd, gbc.sp());
        EXPECT(0xeb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0114
        gbc.setState(0x9fe4, 0xa8c9, 0xd8e0, 0xd189, 0xb0d, 0x6c5e, 0x0, 0x1);
        gbc.writeMem(0x9fe4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa8c9, gbc.sp());
        EXPECT(0x9fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe4));
        EXPECT(0x48, gbc.readMem(0x9fe5));
        // CB 48 0115
        gbc.setState(0xe06f, 0x8ef5, 0xa580, 0x2776, 0x287a, 0x3a32, 0x1, 0x1);
        gbc.writeMem(0xe06f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8ef5, gbc.sp());
        EXPECT(0xe071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06f));
        EXPECT(0x48, gbc.readMem(0xe070));
        // CB 48 0116
        gbc.setState(0x58a5, 0x5799, 0xed40, 0x7e46, 0x6015, 0x709e, 0x0, 0x1);
        gbc.writeMem(0x58a5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5799, gbc.sp());
        EXPECT(0x58a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0117
        gbc.setState(0xe932, 0x4cf7, 0xf050, 0x76c6, 0x4708, 0xa121, 0x0, 0x1);
        gbc.writeMem(0xe932, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4cf7, gbc.sp());
        EXPECT(0xe934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe932));
        EXPECT(0x48, gbc.readMem(0xe933));
        // CB 48 0118
        gbc.setState(0x1c36, 0xb8c0, 0x2e40, 0x5485, 0xc5cc, 0xc25b, 0x0, 0x0);
        gbc.writeMem(0x1c36, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb8c0, gbc.sp());
        EXPECT(0x1c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0119
        gbc.setState(0x8b87, 0xb046, 0xc8a0, 0xa562, 0xaaa8, 0xe813, 0x1, 0x0);
        gbc.writeMem(0x8b87, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb046, gbc.sp());
        EXPECT(0x8b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b87));
        EXPECT(0x48, gbc.readMem(0x8b88));
        // CB 48 011A
        gbc.setState(0x4f1e, 0x4f17, 0x4670, 0xee89, 0x7af6, 0x1ed, 0x0, 0x1);
        gbc.writeMem(0x4f1e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4f17, gbc.sp());
        EXPECT(0x4f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 011B
        gbc.setState(0x6c0e, 0xdc09, 0xa7a0, 0x179a, 0x95e3, 0xf0dc, 0x0, 0x0);
        gbc.writeMem(0x6c0e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xdc09, gbc.sp());
        EXPECT(0x6c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 011C
        gbc.setState(0x4c3e, 0x4af1, 0x3310, 0x641a, 0x5e6e, 0x4fcb, 0x1, 0x1);
        gbc.writeMem(0x4c3e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4af1, gbc.sp());
        EXPECT(0x4c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 011D
        gbc.setState(0x2e5b, 0xfe3e, 0xd460, 0x2354, 0x3e62, 0x65ed, 0x0, 0x0);
        gbc.writeMem(0x2e5b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfe3e, gbc.sp());
        EXPECT(0x2e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 011E
        gbc.setState(0xb09c, 0x8197, 0x3030, 0xb8de, 0x206f, 0x6616, 0x1, 0x0);
        gbc.writeMem(0xb09c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8197, gbc.sp());
        EXPECT(0xb09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09c));
        EXPECT(0x48, gbc.readMem(0xb09d));
        // CB 48 011F
        gbc.setState(0x9819, 0x39e6, 0x1270, 0x84f6, 0x92e7, 0x3e41, 0x0, 0x0);
        gbc.writeMem(0x9819, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x39e6, gbc.sp());
        EXPECT(0x981b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9819));
        EXPECT(0x48, gbc.readMem(0x981a));
        // CB 48 0120
        gbc.setState(0x444c, 0xb89a, 0xe0e0, 0x50ed, 0xb11e, 0xdfc3, 0x1, 0x1);
        gbc.writeMem(0x444c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb89a, gbc.sp());
        EXPECT(0x444e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0121
        gbc.setState(0x1e2d, 0xd88f, 0x5fc0, 0x36ca, 0xfc46, 0xe67c, 0x1, 0x0);
        gbc.writeMem(0x1e2d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd88f, gbc.sp());
        EXPECT(0x1e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0122
        gbc.setState(0xe375, 0x944c, 0x73f0, 0x986f, 0xb4fb, 0xbd8a, 0x1, 0x1);
        gbc.writeMem(0xe375, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x944c, gbc.sp());
        EXPECT(0xe377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe375));
        EXPECT(0x48, gbc.readMem(0xe376));
        // CB 48 0123
        gbc.setState(0x4bac, 0x4ee3, 0xd270, 0xc1e3, 0xd40, 0x8553, 0x1, 0x0);
        gbc.writeMem(0x4bac, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4ee3, gbc.sp());
        EXPECT(0x4bae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0124
        gbc.setState(0x9755, 0x9f54, 0x7b00, 0xb2db, 0xac3b, 0xdaaa, 0x1, 0x0);
        gbc.writeMem(0x9755, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9f54, gbc.sp());
        EXPECT(0x9757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9755));
        EXPECT(0x48, gbc.readMem(0x9756));
        // CB 48 0125
        gbc.setState(0x541b, 0x5853, 0xae90, 0x11fa, 0xfc71, 0x6a88, 0x0, 0x1);
        gbc.writeMem(0x541b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5853, gbc.sp());
        EXPECT(0x541d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0126
        gbc.setState(0x9c1d, 0xd49a, 0x8ee0, 0xa947, 0x9159, 0x93ac, 0x1, 0x0);
        gbc.writeMem(0x9c1d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd49a, gbc.sp());
        EXPECT(0x9c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c1d));
        EXPECT(0x48, gbc.readMem(0x9c1e));
        // CB 48 0127
        gbc.setState(0xe1b0, 0x2e11, 0x1dd0, 0x341c, 0x3c8, 0x9a79, 0x0, 0x1);
        gbc.writeMem(0xe1b0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2e11, gbc.sp());
        EXPECT(0xe1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b0));
        EXPECT(0x48, gbc.readMem(0xe1b1));
        // CB 48 0128
        gbc.setState(0x6af9, 0x15f4, 0xa970, 0x9886, 0x138f, 0xac74, 0x1, 0x1);
        gbc.writeMem(0x6af9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x15f4, gbc.sp());
        EXPECT(0x6afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0129
        gbc.setState(0x9858, 0xb6e9, 0x8da0, 0x290a, 0x90cc, 0x828f, 0x1, 0x0);
        gbc.writeMem(0x9858, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb6e9, gbc.sp());
        EXPECT(0x985a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9858));
        EXPECT(0x48, gbc.readMem(0x9859));
        // CB 48 012A
        gbc.setState(0xb2c8, 0x9f38, 0x89a0, 0xb259, 0x2372, 0x3e0a, 0x0, 0x1);
        gbc.writeMem(0xb2c8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9f38, gbc.sp());
        EXPECT(0xb2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2c8));
        EXPECT(0x48, gbc.readMem(0xb2c9));
        // CB 48 012B
        gbc.setState(0xddb1, 0x60d0, 0xaf70, 0x9376, 0xc170, 0x5e83, 0x1, 0x0);
        gbc.writeMem(0xddb1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x60d0, gbc.sp());
        EXPECT(0xddb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb1));
        EXPECT(0x48, gbc.readMem(0xddb2));
        // CB 48 012E
        gbc.setState(0x1a23, 0x11a4, 0x730, 0xa75f, 0xd366, 0x52b1, 0x1, 0x1);
        gbc.writeMem(0x1a23, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x11a4, gbc.sp());
        EXPECT(0x1a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 012F
        gbc.setState(0x5dc8, 0xdd5b, 0x5aa0, 0x5b63, 0x93b5, 0xd61d, 0x0, 0x0);
        gbc.writeMem(0x5dc8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdd5b, gbc.sp());
        EXPECT(0x5dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0130
        gbc.setState(0x16ba, 0xce52, 0xe840, 0x6e2d, 0xb544, 0x56f0, 0x0, 0x0);
        gbc.writeMem(0x16ba, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xce52, gbc.sp());
        EXPECT(0x16bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0131
        gbc.setState(0xc494, 0x9fca, 0x56b0, 0xfe09, 0xceab, 0xe063, 0x0, 0x0);
        gbc.writeMem(0xc494, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9fca, gbc.sp());
        EXPECT(0xc496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc494));
        EXPECT(0x48, gbc.readMem(0xc495));
        // CB 48 0132
        gbc.setState(0x8958, 0x4428, 0x6ff0, 0x299b, 0xb84a, 0xec0d, 0x1, 0x0);
        gbc.writeMem(0x8958, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4428, gbc.sp());
        EXPECT(0x895a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8958));
        EXPECT(0x48, gbc.readMem(0x8959));
        // CB 48 0133
        gbc.setState(0xc6a3, 0x8863, 0x46e0, 0xa201, 0xa15b, 0x1d64, 0x1, 0x1);
        gbc.writeMem(0xc6a3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8863, gbc.sp());
        EXPECT(0xc6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a3));
        EXPECT(0x48, gbc.readMem(0xc6a4));
        // CB 48 0134
        gbc.setState(0x362f, 0x7d44, 0xd0, 0x697b, 0x98ca, 0x906b, 0x0, 0x1);
        gbc.writeMem(0x362f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7d44, gbc.sp());
        EXPECT(0x3631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0135
        gbc.setState(0xccd4, 0x6639, 0x8740, 0xe214, 0x43e5, 0x57da, 0x0, 0x1);
        gbc.writeMem(0xccd4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6639, gbc.sp());
        EXPECT(0xccd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd4));
        EXPECT(0x48, gbc.readMem(0xccd5));
        // CB 48 0136
        gbc.setState(0x4737, 0x3b32, 0x58b0, 0xb0a8, 0x88b1, 0x363e, 0x1, 0x1);
        gbc.writeMem(0x4737, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3b32, gbc.sp());
        EXPECT(0x4739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0137
        gbc.setState(0xee58, 0x4680, 0x50b0, 0x1447, 0xb2d6, 0xdab, 0x1, 0x1);
        gbc.writeMem(0xee58, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4680, gbc.sp());
        EXPECT(0xee5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee58));
        EXPECT(0x48, gbc.readMem(0xee59));
        // CB 48 0138
        gbc.setState(0x98b3, 0x3588, 0x85c0, 0xb461, 0x6222, 0x9be7, 0x1, 0x1);
        gbc.writeMem(0x98b3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3588, gbc.sp());
        EXPECT(0x98b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b3));
        EXPECT(0x48, gbc.readMem(0x98b4));
        // CB 48 0139
        gbc.setState(0x14aa, 0x1737, 0x280, 0x268a, 0x3fa5, 0xfd23, 0x1, 0x0);
        gbc.writeMem(0x14aa, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1737, gbc.sp());
        EXPECT(0x14ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 013A
        gbc.setState(0xbf85, 0xd88, 0x77f0, 0xe777, 0x7591, 0xc81f, 0x0, 0x1);
        gbc.writeMem(0xbf85, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd88, gbc.sp());
        EXPECT(0xbf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf85));
        EXPECT(0x48, gbc.readMem(0xbf86));
        // CB 48 013B
        gbc.setState(0x4e48, 0xaf89, 0x8560, 0xe62f, 0xfa11, 0xb73a, 0x0, 0x1);
        gbc.writeMem(0x4e48, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xaf89, gbc.sp());
        EXPECT(0x4e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 013C
        gbc.setState(0x57d, 0xdefa, 0x7840, 0x4536, 0xc270, 0x983c, 0x1, 0x1);
        gbc.writeMem(0x57d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdefa, gbc.sp());
        EXPECT(0x57f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 013D
        gbc.setState(0x9db, 0x348e, 0x2ed0, 0x8d18, 0xaa38, 0xb9d3, 0x1, 0x1);
        gbc.writeMem(0x9db, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x348e, gbc.sp());
        EXPECT(0x9dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 013E
        gbc.setState(0x7d97, 0xb182, 0x47a0, 0x5020, 0x1144, 0x663, 0x0, 0x0);
        gbc.writeMem(0x7d97, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb182, gbc.sp());
        EXPECT(0x7d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 013F
        gbc.setState(0xbf47, 0x1c6f, 0x2e60, 0xddf2, 0x7742, 0x5ce, 0x1, 0x0);
        gbc.writeMem(0xbf47, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1c6f, gbc.sp());
        EXPECT(0xbf49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf47));
        EXPECT(0x48, gbc.readMem(0xbf48));
        // CB 48 0141
        gbc.setState(0xdb26, 0xfc1f, 0x68d0, 0xacd5, 0x4d1d, 0xd4de, 0x0, 0x1);
        gbc.writeMem(0xdb26, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfc1f, gbc.sp());
        EXPECT(0xdb28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb26));
        EXPECT(0x48, gbc.readMem(0xdb27));
        // CB 48 0142
        gbc.setState(0xae52, 0xdd39, 0x9550, 0x304b, 0xf450, 0xeba9, 0x0, 0x1);
        gbc.writeMem(0xae52, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdd39, gbc.sp());
        EXPECT(0xae54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae52));
        EXPECT(0x48, gbc.readMem(0xae53));
        // CB 48 0143
        gbc.setState(0x155d, 0x5f10, 0xd990, 0xe9be, 0xb79f, 0x3e00, 0x1, 0x0);
        gbc.writeMem(0x155d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5f10, gbc.sp());
        EXPECT(0x155f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0144
        gbc.setState(0x15b7, 0x5189, 0xb30, 0xed26, 0x1253, 0x739e, 0x0, 0x1);
        gbc.writeMem(0x15b7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5189, gbc.sp());
        EXPECT(0x15b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0145
        gbc.setState(0xe985, 0x8c71, 0x53f0, 0x32a2, 0xf5d6, 0xe69f, 0x0, 0x1);
        gbc.writeMem(0xe985, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8c71, gbc.sp());
        EXPECT(0xe987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe985));
        EXPECT(0x48, gbc.readMem(0xe986));
        // CB 48 0146
        gbc.setState(0xa548, 0xb3a, 0xa660, 0xea1c, 0xc267, 0x3cf4, 0x1, 0x1);
        gbc.writeMem(0xa548, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb3a, gbc.sp());
        EXPECT(0xa54a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa548));
        EXPECT(0x48, gbc.readMem(0xa549));
        // CB 48 0147
        gbc.setState(0xd43d, 0x83e2, 0xb740, 0x68e6, 0x7dfb, 0x5a24, 0x1, 0x1);
        gbc.writeMem(0xd43d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x83e2, gbc.sp());
        EXPECT(0xd43f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43d));
        EXPECT(0x48, gbc.readMem(0xd43e));
        // CB 48 0148
        gbc.setState(0x4dfc, 0x32b5, 0xb4a0, 0x5769, 0xe639, 0x4097, 0x0, 0x1);
        gbc.writeMem(0x4dfc, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x32b5, gbc.sp());
        EXPECT(0x4dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0149
        gbc.setState(0x2d74, 0x82f2, 0xaa00, 0x186, 0x1811, 0xe787, 0x1, 0x1);
        gbc.writeMem(0x2d74, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x82f2, gbc.sp());
        EXPECT(0x2d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 014A
        gbc.setState(0x2972, 0x552, 0x5a40, 0xbe8d, 0xa05e, 0xf95a, 0x1, 0x1);
        gbc.writeMem(0x2972, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x552, gbc.sp());
        EXPECT(0x2974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 014B
        gbc.setState(0xa575, 0xbd6f, 0x3a0, 0xaff9, 0xe258, 0xc5bd, 0x0, 0x0);
        gbc.writeMem(0xa575, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbd6f, gbc.sp());
        EXPECT(0xa577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa575));
        EXPECT(0x48, gbc.readMem(0xa576));
        // CB 48 014C
        gbc.setState(0xde75, 0xcd90, 0x6040, 0xd14, 0x3db0, 0x803, 0x0, 0x1);
        gbc.writeMem(0xde75, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcd90, gbc.sp());
        EXPECT(0xde77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde75));
        EXPECT(0x48, gbc.readMem(0xde76));
        // CB 48 014D
        gbc.setState(0x5c35, 0x442c, 0x6e00, 0xef5d, 0x62e0, 0xdeda, 0x0, 0x1);
        gbc.writeMem(0x5c35, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x442c, gbc.sp());
        EXPECT(0x5c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 014E
        gbc.setState(0x6cd2, 0x869b, 0xe6c0, 0x9cf1, 0x5ec1, 0x676e, 0x1, 0x0);
        gbc.writeMem(0x6cd2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x869b, gbc.sp());
        EXPECT(0x6cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 014F
        gbc.setState(0x12e0, 0xb552, 0x2ed0, 0x1ab0, 0xafbd, 0xf97b, 0x0, 0x0);
        gbc.writeMem(0x12e0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb552, gbc.sp());
        EXPECT(0x12e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0150
        gbc.setState(0xd703, 0x22d, 0x2810, 0x508e, 0x6c62, 0x1019, 0x0, 0x1);
        gbc.writeMem(0xd703, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x22d, gbc.sp());
        EXPECT(0xd705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd703));
        EXPECT(0x48, gbc.readMem(0xd704));
        // CB 48 0151
        gbc.setState(0x623d, 0x2949, 0xd950, 0xaf58, 0x85de, 0x88e1, 0x0, 0x0);
        gbc.writeMem(0x623d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2949, gbc.sp());
        EXPECT(0x623f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0152
        gbc.setState(0x4439, 0x7797, 0x1e60, 0xaac6, 0x3f01, 0x7fa6, 0x1, 0x1);
        gbc.writeMem(0x4439, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7797, gbc.sp());
        EXPECT(0x443b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0154
        gbc.setState(0xcb3, 0x284f, 0x5a60, 0xc1f1, 0x858d, 0xaf0b, 0x1, 0x0);
        gbc.writeMem(0xcb3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x284f, gbc.sp());
        EXPECT(0xcb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0155
        gbc.setState(0x62a4, 0x2904, 0x870, 0x7abd, 0x67f8, 0xadc2, 0x0, 0x1);
        gbc.writeMem(0x62a4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2904, gbc.sp());
        EXPECT(0x62a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0156
        gbc.setState(0x9fc0, 0xf622, 0x4530, 0x6fda, 0x271e, 0x802c, 0x0, 0x0);
        gbc.writeMem(0x9fc0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf622, gbc.sp());
        EXPECT(0x9fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc0));
        EXPECT(0x48, gbc.readMem(0x9fc1));
        // CB 48 0157
        gbc.setState(0x71a, 0x43bc, 0xe800, 0x105a, 0xad03, 0x36ac, 0x1, 0x1);
        gbc.writeMem(0x71a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x43bc, gbc.sp());
        EXPECT(0x71c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0158
        gbc.setState(0x6b68, 0x9dc, 0x9ed0, 0xad8c, 0xe53d, 0x115b, 0x1, 0x1);
        gbc.writeMem(0x6b68, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9dc, gbc.sp());
        EXPECT(0x6b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0159
        gbc.setState(0xd704, 0xfac9, 0xb00, 0x19b3, 0x4090, 0x6cd8, 0x0, 0x0);
        gbc.writeMem(0xd704, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfac9, gbc.sp());
        EXPECT(0xd706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd704));
        EXPECT(0x48, gbc.readMem(0xd705));
        // CB 48 015B
        gbc.setState(0x2593, 0xa46e, 0x5b00, 0x3418, 0x821b, 0x5f0d, 0x0, 0x0);
        gbc.writeMem(0x2593, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa46e, gbc.sp());
        EXPECT(0x2595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 015C
        gbc.setState(0x34df, 0x5405, 0xf950, 0x1a91, 0x44c6, 0x5554, 0x0, 0x0);
        gbc.writeMem(0x34df, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5405, gbc.sp());
        EXPECT(0x34e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 015D
        gbc.setState(0xead8, 0xc13f, 0x7730, 0x9115, 0x599c, 0x14d, 0x0, 0x1);
        gbc.writeMem(0xead8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc13f, gbc.sp());
        EXPECT(0xeada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead8));
        EXPECT(0x48, gbc.readMem(0xead9));
        // CB 48 015E
        gbc.setState(0x1588, 0x9cf6, 0x1210, 0xb59d, 0x661d, 0x14b3, 0x0, 0x1);
        gbc.writeMem(0x1588, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9cf6, gbc.sp());
        EXPECT(0x158a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 015F
        gbc.setState(0x642a, 0xd9db, 0x6210, 0x4aec, 0x8f7, 0xf465, 0x0, 0x0);
        gbc.writeMem(0x642a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd9db, gbc.sp());
        EXPECT(0x642c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0161
        gbc.setState(0x928d, 0xf8e8, 0x9910, 0x62b9, 0xaaf6, 0x16f1, 0x1, 0x0);
        gbc.writeMem(0x928d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf8e8, gbc.sp());
        EXPECT(0x928f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928d));
        EXPECT(0x48, gbc.readMem(0x928e));
        // CB 48 0162
        gbc.setState(0xb679, 0x9656, 0x7a80, 0x2719, 0x5e57, 0xcb5f, 0x1, 0x1);
        gbc.writeMem(0xb679, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9656, gbc.sp());
        EXPECT(0xb67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb679));
        EXPECT(0x48, gbc.readMem(0xb67a));
        // CB 48 0163
        gbc.setState(0x1762, 0x9a5e, 0x87e0, 0x6a58, 0x1b78, 0xdbe2, 0x1, 0x1);
        gbc.writeMem(0x1762, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9a5e, gbc.sp());
        EXPECT(0x1764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0165
        gbc.setState(0xef83, 0x9b1b, 0xbae0, 0xa78a, 0x4a17, 0x6cce, 0x0, 0x1);
        gbc.writeMem(0xef83, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9b1b, gbc.sp());
        EXPECT(0xef85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef83));
        EXPECT(0x48, gbc.readMem(0xef84));
        // CB 48 0166
        gbc.setState(0x5f98, 0xadb2, 0xcad0, 0x8c28, 0x6233, 0x7e56, 0x0, 0x1);
        gbc.writeMem(0x5f98, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xadb2, gbc.sp());
        EXPECT(0x5f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0167
        gbc.setState(0xca1, 0x28ff, 0x23f0, 0xd350, 0x3cb1, 0xd1d7, 0x0, 0x0);
        gbc.writeMem(0xca1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x28ff, gbc.sp());
        EXPECT(0xca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0168
        gbc.setState(0x13d8, 0xc4fb, 0x350, 0xcdfb, 0xaede, 0x41d1, 0x0, 0x1);
        gbc.writeMem(0x13d8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc4fb, gbc.sp());
        EXPECT(0x13da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0169
        gbc.setState(0x8a7f, 0xbdfd, 0xb520, 0xba66, 0xd8df, 0x9c5b, 0x0, 0x1);
        gbc.writeMem(0x8a7f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbdfd, gbc.sp());
        EXPECT(0x8a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7f));
        EXPECT(0x48, gbc.readMem(0x8a80));
        // CB 48 016A
        gbc.setState(0x18bd, 0xa97a, 0x6660, 0x7633, 0x5328, 0x958e, 0x1, 0x1);
        gbc.writeMem(0x18bd, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa97a, gbc.sp());
        EXPECT(0x18bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 016B
        gbc.setState(0xd88f, 0x7ee3, 0x8370, 0xadcb, 0x291e, 0x1107, 0x1, 0x1);
        gbc.writeMem(0xd88f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7ee3, gbc.sp());
        EXPECT(0xd891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88f));
        EXPECT(0x48, gbc.readMem(0xd890));
        // CB 48 016C
        gbc.setState(0x4470, 0x839b, 0x8510, 0x3fdf, 0x608b, 0x5769, 0x0, 0x0);
        gbc.writeMem(0x4470, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x839b, gbc.sp());
        EXPECT(0x4472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 016D
        gbc.setState(0xc4b, 0x841f, 0xef00, 0xe98d, 0xa3e5, 0x80f0, 0x0, 0x0);
        gbc.writeMem(0xc4b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x841f, gbc.sp());
        EXPECT(0xc4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 016E
        gbc.setState(0x6fa3, 0xc6fe, 0xe630, 0xeba9, 0x2916, 0x5a46, 0x1, 0x1);
        gbc.writeMem(0x6fa3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc6fe, gbc.sp());
        EXPECT(0x6fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 016F
        gbc.setState(0xabcd, 0xbcce, 0xc3e0, 0xc3d1, 0x1e15, 0xbe64, 0x1, 0x1);
        gbc.writeMem(0xabcd, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbcce, gbc.sp());
        EXPECT(0xabcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcd));
        EXPECT(0x48, gbc.readMem(0xabce));
        // CB 48 0170
        gbc.setState(0xdde1, 0x1233, 0xac00, 0x97be, 0x3ae2, 0xdd9d, 0x0, 0x0);
        gbc.writeMem(0xdde1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1233, gbc.sp());
        EXPECT(0xdde3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde1));
        EXPECT(0x48, gbc.readMem(0xdde2));
        // CB 48 0171
        gbc.setState(0xc802, 0x1055, 0x4fb0, 0xe4f8, 0x5ac1, 0xa61e, 0x0, 0x0);
        gbc.writeMem(0xc802, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1055, gbc.sp());
        EXPECT(0xc804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc802));
        EXPECT(0x48, gbc.readMem(0xc803));
        // CB 48 0172
        gbc.setState(0x55fd, 0xb6e5, 0xb130, 0x5753, 0xe0cb, 0x3679, 0x1, 0x1);
        gbc.writeMem(0x55fd, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb6e5, gbc.sp());
        EXPECT(0x55ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0173
        gbc.setState(0xaf75, 0x9fd4, 0x180, 0x176b, 0x721d, 0x4fcb, 0x0, 0x1);
        gbc.writeMem(0xaf75, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9fd4, gbc.sp());
        EXPECT(0xaf77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf75));
        EXPECT(0x48, gbc.readMem(0xaf76));
        // CB 48 0174
        gbc.setState(0x1aa7, 0xc56b, 0x4310, 0xaa81, 0xa7b3, 0x6f8f, 0x1, 0x0);
        gbc.writeMem(0x1aa7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc56b, gbc.sp());
        EXPECT(0x1aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0175
        gbc.setState(0x49e2, 0xeed0, 0x6430, 0xdedf, 0x3a7c, 0xb63, 0x1, 0x0);
        gbc.writeMem(0x49e2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xeed0, gbc.sp());
        EXPECT(0x49e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0176
        gbc.setState(0x9f2d, 0x2991, 0x7580, 0x2129, 0x52a3, 0xe286, 0x1, 0x0);
        gbc.writeMem(0x9f2d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2991, gbc.sp());
        EXPECT(0x9f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f2d));
        EXPECT(0x48, gbc.readMem(0x9f2e));
        // CB 48 0177
        gbc.setState(0xf9c, 0xccf3, 0xc50, 0xf3ee, 0xc0ac, 0xfc30, 0x1, 0x1);
        gbc.writeMem(0xf9c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xccf3, gbc.sp());
        EXPECT(0xf9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0178
        gbc.setState(0x5167, 0xec6a, 0xcee0, 0xc1fa, 0xbe70, 0x11ca, 0x1, 0x1);
        gbc.writeMem(0x5167, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xec6a, gbc.sp());
        EXPECT(0x5169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0179
        gbc.setState(0x3eae, 0xf625, 0x890, 0x834e, 0x1306, 0x44c4, 0x0, 0x1);
        gbc.writeMem(0x3eae, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf625, gbc.sp());
        EXPECT(0x3eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 017A
        gbc.setState(0x47e4, 0xfc61, 0xba70, 0xb91e, 0x6b4e, 0x65ba, 0x0, 0x1);
        gbc.writeMem(0x47e4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfc61, gbc.sp());
        EXPECT(0x47e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 017B
        gbc.setState(0x94cc, 0xcbdf, 0xa160, 0xf30b, 0x18cd, 0xdd52, 0x0, 0x0);
        gbc.writeMem(0x94cc, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xcbdf, gbc.sp());
        EXPECT(0x94ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cc));
        EXPECT(0x48, gbc.readMem(0x94cd));
        // CB 48 017C
        gbc.setState(0xcc1f, 0xff1a, 0xe890, 0x5da0, 0xb9a2, 0xc5e, 0x0, 0x1);
        gbc.writeMem(0xcc1f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xff1a, gbc.sp());
        EXPECT(0xcc21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1f));
        EXPECT(0x48, gbc.readMem(0xcc20));
        // CB 48 017D
        gbc.setState(0x4718, 0x7dc0, 0x8870, 0x3c9c, 0x40ff, 0xdfb0, 0x1, 0x0);
        gbc.writeMem(0x4718, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7dc0, gbc.sp());
        EXPECT(0x471a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 017E
        gbc.setState(0x9355, 0x6812, 0xeb0, 0xbcf4, 0x8e43, 0xe4bc, 0x0, 0x1);
        gbc.writeMem(0x9355, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6812, gbc.sp());
        EXPECT(0x9357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9355));
        EXPECT(0x48, gbc.readMem(0x9356));
        // CB 48 017F
        gbc.setState(0x79a9, 0x6513, 0x3bf0, 0xc4ea, 0xd312, 0x6674, 0x1, 0x1);
        gbc.writeMem(0x79a9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6513, gbc.sp());
        EXPECT(0x79ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0180
        gbc.setState(0x1b01, 0x2f33, 0xfaf0, 0x9ed0, 0x336f, 0xe466, 0x0, 0x0);
        gbc.writeMem(0x1b01, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2f33, gbc.sp());
        EXPECT(0x1b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0181
        gbc.setState(0x260b, 0x1a0b, 0xb7d0, 0xc8bf, 0x2a83, 0x4e11, 0x1, 0x0);
        gbc.writeMem(0x260b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1a0b, gbc.sp());
        EXPECT(0x260d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0182
        gbc.setState(0x97dc, 0x7386, 0x7e10, 0xc3b5, 0x85af, 0x70da, 0x0, 0x0);
        gbc.writeMem(0x97dc, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7386, gbc.sp());
        EXPECT(0x97de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97dc));
        EXPECT(0x48, gbc.readMem(0x97dd));
        // CB 48 0183
        gbc.setState(0x53af, 0xfc79, 0x5270, 0xcb5b, 0x3f7e, 0xe3e3, 0x1, 0x1);
        gbc.writeMem(0x53af, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfc79, gbc.sp());
        EXPECT(0x53b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0184
        gbc.setState(0x4d78, 0xb128, 0xc720, 0x690a, 0x8106, 0x6ef1, 0x1, 0x0);
        gbc.writeMem(0x4d78, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb128, gbc.sp());
        EXPECT(0x4d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0185
        gbc.setState(0xe6f, 0x380d, 0x150, 0x16b8, 0x8f4b, 0x58ab, 0x0, 0x0);
        gbc.writeMem(0xe6f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x380d, gbc.sp());
        EXPECT(0xe71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0186
        gbc.setState(0x602e, 0xa966, 0x5e80, 0xecdc, 0x9546, 0xf8f9, 0x1, 0x0);
        gbc.writeMem(0x602e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa966, gbc.sp());
        EXPECT(0x6030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0187
        gbc.setState(0xa8cf, 0x9a52, 0x3ef0, 0x1d02, 0x3255, 0xbd2c, 0x0, 0x1);
        gbc.writeMem(0xa8cf, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9a52, gbc.sp());
        EXPECT(0xa8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8cf));
        EXPECT(0x48, gbc.readMem(0xa8d0));
        // CB 48 0188
        gbc.setState(0x7878, 0x738c, 0x2560, 0x2048, 0x650b, 0xbf60, 0x0, 0x1);
        gbc.writeMem(0x7878, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x738c, gbc.sp());
        EXPECT(0x787a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0189
        gbc.setState(0xb2a3, 0xd202, 0xd590, 0x36da, 0xbbb4, 0xa2c9, 0x0, 0x1);
        gbc.writeMem(0xb2a3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd202, gbc.sp());
        EXPECT(0xb2a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a3));
        EXPECT(0x48, gbc.readMem(0xb2a4));
        // CB 48 018A
        gbc.setState(0x5886, 0x2c99, 0x31d0, 0x604a, 0x7551, 0xd4c4, 0x0, 0x0);
        gbc.writeMem(0x5886, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2c99, gbc.sp());
        EXPECT(0x5888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 018B
        gbc.setState(0xcd81, 0x61d4, 0xf860, 0x1f52, 0x8322, 0x6abd, 0x0, 0x1);
        gbc.writeMem(0xcd81, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x61d4, gbc.sp());
        EXPECT(0xcd83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd81));
        EXPECT(0x48, gbc.readMem(0xcd82));
        // CB 48 018C
        gbc.setState(0xdaad, 0xf9a8, 0x230, 0x8162, 0xaad6, 0xcdfa, 0x0, 0x0);
        gbc.writeMem(0xdaad, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf9a8, gbc.sp());
        EXPECT(0xdaaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaad));
        EXPECT(0x48, gbc.readMem(0xdaae));
        // CB 48 018D
        gbc.setState(0xe869, 0x9e93, 0x8510, 0xeb2b, 0x6191, 0x4032, 0x1, 0x0);
        gbc.writeMem(0xe869, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9e93, gbc.sp());
        EXPECT(0xe86b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe869));
        EXPECT(0x48, gbc.readMem(0xe86a));
        // CB 48 018E
        gbc.setState(0xd6b, 0x642f, 0x7f50, 0x8ec9, 0x2ba3, 0x1c4f, 0x1, 0x0);
        gbc.writeMem(0xd6b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x642f, gbc.sp());
        EXPECT(0xd6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 018F
        gbc.setState(0x8e6, 0x73b9, 0x5180, 0xab87, 0xc841, 0xa603, 0x1, 0x1);
        gbc.writeMem(0x8e6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x73b9, gbc.sp());
        EXPECT(0x8e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0192
        gbc.setState(0x4a3, 0xb3d, 0xc810, 0xeaa5, 0xc781, 0x5809, 0x0, 0x0);
        gbc.writeMem(0x4a3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb3d, gbc.sp());
        EXPECT(0x4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0193
        gbc.setState(0xb205, 0x55f4, 0x17a0, 0xc3f5, 0x1e65, 0x8fbe, 0x0, 0x1);
        gbc.writeMem(0xb205, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x55f4, gbc.sp());
        EXPECT(0xb207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb205));
        EXPECT(0x48, gbc.readMem(0xb206));
        // CB 48 0194
        gbc.setState(0x82f7, 0x9425, 0x1e40, 0x56e0, 0x803c, 0xfce0, 0x0, 0x0);
        gbc.writeMem(0x82f7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9425, gbc.sp());
        EXPECT(0x82f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82f7));
        EXPECT(0x48, gbc.readMem(0x82f8));
        // CB 48 0195
        gbc.setState(0xcd8c, 0xbae0, 0xfe50, 0xa609, 0xf10f, 0x4530, 0x1, 0x0);
        gbc.writeMem(0xcd8c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbae0, gbc.sp());
        EXPECT(0xcd8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8c));
        EXPECT(0x48, gbc.readMem(0xcd8d));
        // CB 48 0196
        gbc.setState(0x595c, 0x17cb, 0x2460, 0x8653, 0x587c, 0xa722, 0x1, 0x0);
        gbc.writeMem(0x595c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x17cb, gbc.sp());
        EXPECT(0x595e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0197
        gbc.setState(0x2484, 0xeb4f, 0x8580, 0x67de, 0xdffa, 0x519b, 0x1, 0x0);
        gbc.writeMem(0x2484, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeb4f, gbc.sp());
        EXPECT(0x2486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0198
        gbc.setState(0xafdc, 0x32b8, 0xf470, 0x4231, 0xd0ef, 0xf183, 0x1, 0x0);
        gbc.writeMem(0xafdc, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x32b8, gbc.sp());
        EXPECT(0xafde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafdc));
        EXPECT(0x48, gbc.readMem(0xafdd));
        // CB 48 0199
        gbc.setState(0xa7e8, 0x59ec, 0xeb0, 0x1134, 0xeed, 0x4c8c, 0x0, 0x1);
        gbc.writeMem(0xa7e8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x59ec, gbc.sp());
        EXPECT(0xa7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e8));
        EXPECT(0x48, gbc.readMem(0xa7e9));
        // CB 48 019A
        gbc.setState(0xb226, 0xf9a2, 0xace0, 0xd144, 0xad88, 0xf815, 0x0, 0x0);
        gbc.writeMem(0xb226, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf9a2, gbc.sp());
        EXPECT(0xb228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb226));
        EXPECT(0x48, gbc.readMem(0xb227));
        // CB 48 019B
        gbc.setState(0x3842, 0xb85d, 0x5050, 0x93b1, 0xcbb9, 0x96ef, 0x0, 0x1);
        gbc.writeMem(0x3842, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb85d, gbc.sp());
        EXPECT(0x3844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 019C
        gbc.setState(0xeee1, 0x8e1b, 0x3b40, 0xd8be, 0x14cc, 0xf9c1, 0x0, 0x0);
        gbc.writeMem(0xeee1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8e1b, gbc.sp());
        EXPECT(0xeee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee1));
        EXPECT(0x48, gbc.readMem(0xeee2));
        // CB 48 019D
        gbc.setState(0x28da, 0xc563, 0x3d10, 0x69b, 0x5e, 0x8acc, 0x0, 0x0);
        gbc.writeMem(0x28da, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc563, gbc.sp());
        EXPECT(0x28dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 019E
        gbc.setState(0x5530, 0x2ff6, 0x4280, 0x1305, 0x1f6d, 0x7288, 0x1, 0x0);
        gbc.writeMem(0x5530, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2ff6, gbc.sp());
        EXPECT(0x5532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 019F
        gbc.setState(0x91fe, 0x3a1d, 0x8f80, 0x20a3, 0x585b, 0xccc2, 0x0, 0x1);
        gbc.writeMem(0x91fe, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3a1d, gbc.sp());
        EXPECT(0x9200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fe));
        EXPECT(0x48, gbc.readMem(0x91ff));
        // CB 48 01A0
        gbc.setState(0x4e88, 0x45a8, 0x13a0, 0x5691, 0xcb1, 0x8b23, 0x1, 0x1);
        gbc.writeMem(0x4e88, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x45a8, gbc.sp());
        EXPECT(0x4e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01A1
        gbc.setState(0xe537, 0x2777, 0x3470, 0xba62, 0x8814, 0x4b99, 0x1, 0x0);
        gbc.writeMem(0xe537, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2777, gbc.sp());
        EXPECT(0xe539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe537));
        EXPECT(0x48, gbc.readMem(0xe538));
        // CB 48 01A2
        gbc.setState(0x1346, 0x2736, 0x6bb0, 0x1072, 0x6f23, 0x4a99, 0x1, 0x0);
        gbc.writeMem(0x1346, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2736, gbc.sp());
        EXPECT(0x1348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01A3
        gbc.setState(0x784b, 0x9d42, 0x2110, 0x2b3, 0x7240, 0x1413, 0x1, 0x0);
        gbc.writeMem(0x784b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9d42, gbc.sp());
        EXPECT(0x784d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01A4
        gbc.setState(0x1786, 0x7539, 0x6100, 0x1162, 0x3336, 0x21e, 0x1, 0x0);
        gbc.writeMem(0x1786, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7539, gbc.sp());
        EXPECT(0x1788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01A5
        gbc.setState(0x84e8, 0xe4af, 0x60d0, 0xa737, 0xf20b, 0x2ac2, 0x0, 0x1);
        gbc.writeMem(0x84e8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe4af, gbc.sp());
        EXPECT(0x84ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e8));
        EXPECT(0x48, gbc.readMem(0x84e9));
        // CB 48 01A6
        gbc.setState(0xa9f2, 0xdecb, 0x3650, 0x301b, 0x9535, 0xf27c, 0x1, 0x0);
        gbc.writeMem(0xa9f2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdecb, gbc.sp());
        EXPECT(0xa9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f2));
        EXPECT(0x48, gbc.readMem(0xa9f3));
        // CB 48 01A7
        gbc.setState(0x4099, 0x25ab, 0x8470, 0x7e3c, 0x477, 0x6b6e, 0x1, 0x1);
        gbc.writeMem(0x4099, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x25ab, gbc.sp());
        EXPECT(0x409b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01A8
        gbc.setState(0xe89b, 0x6274, 0x4180, 0xc901, 0x7bb3, 0x5b9e, 0x0, 0x0);
        gbc.writeMem(0xe89b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6274, gbc.sp());
        EXPECT(0xe89d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89b));
        EXPECT(0x48, gbc.readMem(0xe89c));
        // CB 48 01AA
        gbc.setState(0x5ca8, 0x8f71, 0x8310, 0x7445, 0x7692, 0xf477, 0x0, 0x0);
        gbc.writeMem(0x5ca8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8f71, gbc.sp());
        EXPECT(0x5caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01AB
        gbc.setState(0x6752, 0x6094, 0x3440, 0x23b6, 0x9883, 0x53c1, 0x1, 0x1);
        gbc.writeMem(0x6752, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6094, gbc.sp());
        EXPECT(0x6754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01AC
        gbc.setState(0xcc09, 0x6118, 0x53f0, 0xb0f, 0xcdbc, 0x9a66, 0x0, 0x0);
        gbc.writeMem(0xcc09, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6118, gbc.sp());
        EXPECT(0xcc0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc09));
        EXPECT(0x48, gbc.readMem(0xcc0a));
        // CB 48 01AD
        gbc.setState(0xe930, 0x4113, 0xa0c0, 0x5c9c, 0x7f62, 0x5069, 0x0, 0x1);
        gbc.writeMem(0xe930, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4113, gbc.sp());
        EXPECT(0xe932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe930));
        EXPECT(0x48, gbc.readMem(0xe931));
        // CB 48 01AE
        gbc.setState(0x1a02, 0x3170, 0xd580, 0xc3f7, 0x1f47, 0x16ae, 0x0, 0x1);
        gbc.writeMem(0x1a02, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3170, gbc.sp());
        EXPECT(0x1a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01AF
        gbc.setState(0x3fe1, 0x8dcc, 0xc510, 0x9484, 0xbd48, 0xc4df, 0x1, 0x0);
        gbc.writeMem(0x3fe1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8dcc, gbc.sp());
        EXPECT(0x3fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01B1
        gbc.setState(0xe25c, 0x391e, 0xbb10, 0x422d, 0x2cfe, 0x50c5, 0x1, 0x1);
        gbc.writeMem(0xe25c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x391e, gbc.sp());
        EXPECT(0xe25e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25c));
        EXPECT(0x48, gbc.readMem(0xe25d));
        // CB 48 01B2
        gbc.setState(0xe2a4, 0x1a12, 0x7ce0, 0x4aa4, 0x6650, 0x84c3, 0x1, 0x1);
        gbc.writeMem(0xe2a4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1a12, gbc.sp());
        EXPECT(0xe2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a4));
        EXPECT(0x48, gbc.readMem(0xe2a5));
        // CB 48 01B3
        gbc.setState(0xe45e, 0x2c95, 0x6080, 0x5062, 0x3742, 0x1795, 0x1, 0x0);
        gbc.writeMem(0xe45e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2c95, gbc.sp());
        EXPECT(0xe460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe45e));
        EXPECT(0x48, gbc.readMem(0xe45f));
        // CB 48 01B4
        gbc.setState(0x6885, 0x2a4, 0x13d0, 0x85b1, 0x353b, 0x2630, 0x0, 0x0);
        gbc.writeMem(0x6885, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2a4, gbc.sp());
        EXPECT(0x6887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01B5
        gbc.setState(0x5d54, 0x725a, 0xdd70, 0xcbb6, 0x8b30, 0x4d59, 0x0, 0x1);
        gbc.writeMem(0x5d54, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x725a, gbc.sp());
        EXPECT(0x5d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01B6
        gbc.setState(0x507, 0xcdce, 0x3cf0, 0x4b11, 0xcc93, 0xd71b, 0x0, 0x1);
        gbc.writeMem(0x507, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xcdce, gbc.sp());
        EXPECT(0x509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01B7
        gbc.setState(0xb9b6, 0xb1c, 0x85a0, 0x9c82, 0x78e, 0xa114, 0x1, 0x0);
        gbc.writeMem(0xb9b6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb1c, gbc.sp());
        EXPECT(0xb9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b6));
        EXPECT(0x48, gbc.readMem(0xb9b7));
        // CB 48 01B8
        gbc.setState(0x55cf, 0x1547, 0x6010, 0x48f1, 0xd6bb, 0x5048, 0x1, 0x1);
        gbc.writeMem(0x55cf, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1547, gbc.sp());
        EXPECT(0x55d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01B9
        gbc.setState(0x442c, 0xe952, 0x5a30, 0x49f, 0x98d3, 0xf495, 0x0, 0x0);
        gbc.writeMem(0x442c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe952, gbc.sp());
        EXPECT(0x442e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01BA
        gbc.setState(0xcb95, 0x4c10, 0x60b0, 0x7084, 0xc79b, 0x883b, 0x1, 0x1);
        gbc.writeMem(0xcb95, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4c10, gbc.sp());
        EXPECT(0xcb97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb95));
        EXPECT(0x48, gbc.readMem(0xcb96));
        // CB 48 01BB
        gbc.setState(0x9d7d, 0x8056, 0x7010, 0x86d8, 0x3523, 0x68f7, 0x1, 0x0);
        gbc.writeMem(0x9d7d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8056, gbc.sp());
        EXPECT(0x9d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d7d));
        EXPECT(0x48, gbc.readMem(0x9d7e));
        // CB 48 01BE
        gbc.setState(0x1f44, 0xa54e, 0x8460, 0xa2c, 0x1337, 0xab23, 0x1, 0x1);
        gbc.writeMem(0x1f44, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa54e, gbc.sp());
        EXPECT(0x1f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01BF
        gbc.setState(0x8654, 0x3e3b, 0x5c10, 0x368b, 0xb677, 0x1c9f, 0x1, 0x0);
        gbc.writeMem(0x8654, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3e3b, gbc.sp());
        EXPECT(0x8656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8654));
        EXPECT(0x48, gbc.readMem(0x8655));
        // CB 48 01C1
        gbc.setState(0xcd52, 0x6137, 0x91a0, 0x8ca8, 0xec86, 0xc0b3, 0x1, 0x1);
        gbc.writeMem(0xcd52, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6137, gbc.sp());
        EXPECT(0xcd54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd52));
        EXPECT(0x48, gbc.readMem(0xcd53));
        // CB 48 01C2
        gbc.setState(0xd89b, 0x5726, 0x3f80, 0x5829, 0xd533, 0x174b, 0x1, 0x1);
        gbc.writeMem(0xd89b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5726, gbc.sp());
        EXPECT(0xd89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89b));
        EXPECT(0x48, gbc.readMem(0xd89c));
        // CB 48 01C3
        gbc.setState(0x3ed6, 0xe2b0, 0x73f0, 0xd89c, 0x60d1, 0xd699, 0x0, 0x1);
        gbc.writeMem(0x3ed6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe2b0, gbc.sp());
        EXPECT(0x3ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01C4
        gbc.setState(0x40b9, 0x403c, 0xac30, 0xb4c8, 0x3b83, 0x8e19, 0x0, 0x1);
        gbc.writeMem(0x40b9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x403c, gbc.sp());
        EXPECT(0x40bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01C5
        gbc.setState(0x4787, 0xd639, 0x9030, 0x3ff1, 0x4300, 0xf4ed, 0x0, 0x1);
        gbc.writeMem(0x4787, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd639, gbc.sp());
        EXPECT(0x4789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01C6
        gbc.setState(0x9caf, 0xdf3, 0x3060, 0xd835, 0x5239, 0xcd77, 0x1, 0x0);
        gbc.writeMem(0x9caf, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdf3, gbc.sp());
        EXPECT(0x9cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9caf));
        EXPECT(0x48, gbc.readMem(0x9cb0));
        // CB 48 01C7
        gbc.setState(0xc7c6, 0x1257, 0xb380, 0xc9fa, 0x19ca, 0xb098, 0x0, 0x1);
        gbc.writeMem(0xc7c6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1257, gbc.sp());
        EXPECT(0xc7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c6));
        EXPECT(0x48, gbc.readMem(0xc7c7));
        // CB 48 01C9
        gbc.setState(0x6933, 0xafe9, 0xc440, 0x361d, 0x5a26, 0x18c0, 0x1, 0x0);
        gbc.writeMem(0x6933, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xafe9, gbc.sp());
        EXPECT(0x6935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01CB
        gbc.setState(0x7a76, 0x3cec, 0x53c0, 0x5a40, 0xbab1, 0x4abe, 0x0, 0x0);
        gbc.writeMem(0x7a76, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3cec, gbc.sp());
        EXPECT(0x7a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01CC
        gbc.setState(0x365, 0xe71b, 0xd100, 0xae01, 0x4ddd, 0x44fe, 0x0, 0x1);
        gbc.writeMem(0x365, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe71b, gbc.sp());
        EXPECT(0x367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01CD
        gbc.setState(0x4365, 0x9d8e, 0x4210, 0x4a2e, 0x7df7, 0xe357, 0x0, 0x1);
        gbc.writeMem(0x4365, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9d8e, gbc.sp());
        EXPECT(0x4367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01CE
        gbc.setState(0x45f6, 0xd7a6, 0xde70, 0xa0fe, 0xbfda, 0xe08a, 0x0, 0x0);
        gbc.writeMem(0x45f6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd7a6, gbc.sp());
        EXPECT(0x45f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01CF
        gbc.setState(0xe4ba, 0x4889, 0x4dd0, 0x5a46, 0x8624, 0x7ab7, 0x0, 0x0);
        gbc.writeMem(0xe4ba, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4889, gbc.sp());
        EXPECT(0xe4bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ba));
        EXPECT(0x48, gbc.readMem(0xe4bb));
        // CB 48 01D0
        gbc.setState(0x9ec1, 0x2766, 0x3a90, 0x27d8, 0x89e1, 0xcac7, 0x0, 0x0);
        gbc.writeMem(0x9ec1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2766, gbc.sp());
        EXPECT(0x9ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec1));
        EXPECT(0x48, gbc.readMem(0x9ec2));
        // CB 48 01D1
        gbc.setState(0x3717, 0xe2b4, 0xf480, 0x116c, 0xa5c6, 0x582e, 0x0, 0x0);
        gbc.writeMem(0x3717, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe2b4, gbc.sp());
        EXPECT(0x3719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01D2
        gbc.setState(0xf63, 0x70ca, 0xedb0, 0x216f, 0xdc31, 0x5706, 0x1, 0x1);
        gbc.writeMem(0xf63, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x70ca, gbc.sp());
        EXPECT(0xf65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01D3
        gbc.setState(0x1a4, 0x656d, 0x19c0, 0x6667, 0x230c, 0xd65c, 0x0, 0x0);
        gbc.writeMem(0x1a4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x656d, gbc.sp());
        EXPECT(0x1a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01D5
        gbc.setState(0x7da9, 0x9e11, 0x28b0, 0x6afa, 0x9b17, 0x891b, 0x1, 0x0);
        gbc.writeMem(0x7da9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9e11, gbc.sp());
        EXPECT(0x7dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01D6
        gbc.setState(0x1c6, 0x94a8, 0x7d80, 0xc748, 0x5ab8, 0x3ca5, 0x1, 0x0);
        gbc.writeMem(0x1c6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x94a8, gbc.sp());
        EXPECT(0x1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01D7
        gbc.setState(0x504e, 0xeebe, 0x9730, 0x6006, 0xac03, 0x64f5, 0x1, 0x1);
        gbc.writeMem(0x504e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xeebe, gbc.sp());
        EXPECT(0x5050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01D8
        gbc.setState(0xa4d, 0xa357, 0xedf0, 0x82ce, 0x769b, 0xddc3, 0x1, 0x1);
        gbc.writeMem(0xa4d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa357, gbc.sp());
        EXPECT(0xa4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01D9
        gbc.setState(0x3395, 0xc619, 0x5ba0, 0x1936, 0xdb64, 0xcee6, 0x1, 0x0);
        gbc.writeMem(0x3395, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc619, gbc.sp());
        EXPECT(0x3397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01DA
        gbc.setState(0x8485, 0xc4d4, 0x1320, 0xbed, 0x7568, 0x6e51, 0x1, 0x0);
        gbc.writeMem(0x8485, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc4d4, gbc.sp());
        EXPECT(0x8487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8485));
        EXPECT(0x48, gbc.readMem(0x8486));
        // CB 48 01DB
        gbc.setState(0xc366, 0xcd2f, 0xde00, 0xfaea, 0xad20, 0xc6fb, 0x0, 0x1);
        gbc.writeMem(0xc366, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcd2f, gbc.sp());
        EXPECT(0xc368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc366));
        EXPECT(0x48, gbc.readMem(0xc367));
        // CB 48 01DC
        gbc.setState(0x3909, 0x3850, 0x6f50, 0xf83f, 0x3752, 0x9c46, 0x0, 0x0);
        gbc.writeMem(0x3909, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3850, gbc.sp());
        EXPECT(0x390b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01DD
        gbc.setState(0x117b, 0x8b57, 0xac90, 0x4f1e, 0x8d65, 0x371c, 0x1, 0x0);
        gbc.writeMem(0x117b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8b57, gbc.sp());
        EXPECT(0x117d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01DE
        gbc.setState(0xb005, 0x644b, 0xe200, 0x1871, 0xa43f, 0xe013, 0x0, 0x0);
        gbc.writeMem(0xb005, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x644b, gbc.sp());
        EXPECT(0xb007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb005));
        EXPECT(0x48, gbc.readMem(0xb006));
        // CB 48 01DF
        gbc.setState(0xc537, 0x7375, 0xc3a0, 0xe958, 0xd365, 0x9348, 0x0, 0x1);
        gbc.writeMem(0xc537, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7375, gbc.sp());
        EXPECT(0xc539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc537));
        EXPECT(0x48, gbc.readMem(0xc538));
        // CB 48 01E0
        gbc.setState(0x1ebe, 0x35, 0xff80, 0x14bd, 0x5d8, 0x2df9, 0x0, 0x1);
        gbc.writeMem(0x1ebe, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x35, gbc.sp());
        EXPECT(0x1ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01E2
        gbc.setState(0x5c66, 0x93f9, 0xd9e0, 0x31a3, 0x5f2c, 0x39aa, 0x1, 0x0);
        gbc.writeMem(0x5c66, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x93f9, gbc.sp());
        EXPECT(0x5c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01E3
        gbc.setState(0x1484, 0x1b86, 0x6eb0, 0x13e8, 0x22f1, 0xc7ac, 0x1, 0x1);
        gbc.writeMem(0x1484, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1b86, gbc.sp());
        EXPECT(0x1486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01E4
        gbc.setState(0x47bd, 0x8a52, 0xd510, 0xdc85, 0x5967, 0xe7f9, 0x1, 0x1);
        gbc.writeMem(0x47bd, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8a52, gbc.sp());
        EXPECT(0x47bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01E5
        gbc.setState(0x695e, 0xd9a0, 0x39d0, 0x826, 0xb56c, 0x524a, 0x1, 0x0);
        gbc.writeMem(0x695e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd9a0, gbc.sp());
        EXPECT(0x6960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01E6
        gbc.setState(0x5218, 0x83ba, 0x9820, 0x35fe, 0x9c14, 0xf98c, 0x0, 0x1);
        gbc.writeMem(0x5218, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x83ba, gbc.sp());
        EXPECT(0x521a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01E7
        gbc.setState(0x4070, 0x1df9, 0xc600, 0x20f2, 0xc3c9, 0x8bb2, 0x1, 0x1);
        gbc.writeMem(0x4070, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1df9, gbc.sp());
        EXPECT(0x4072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01E8
        gbc.setState(0x8bb6, 0x9e95, 0x8560, 0xd932, 0x5198, 0xc81a, 0x0, 0x1);
        gbc.writeMem(0x8bb6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9e95, gbc.sp());
        EXPECT(0x8bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb6));
        EXPECT(0x48, gbc.readMem(0x8bb7));
        // CB 48 01E9
        gbc.setState(0x30df, 0x8d38, 0x39e0, 0x99f9, 0xd616, 0xe45a, 0x0, 0x1);
        gbc.writeMem(0x30df, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8d38, gbc.sp());
        EXPECT(0x30e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01EA
        gbc.setState(0xcbf4, 0x5b27, 0xa20, 0x4c40, 0x4018, 0xcf6b, 0x0, 0x0);
        gbc.writeMem(0xcbf4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5b27, gbc.sp());
        EXPECT(0xcbf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf4));
        EXPECT(0x48, gbc.readMem(0xcbf5));
        // CB 48 01EB
        gbc.setState(0xe73d, 0x6eeb, 0x7850, 0xdc46, 0xe417, 0x4d32, 0x0, 0x0);
        gbc.writeMem(0xe73d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6eeb, gbc.sp());
        EXPECT(0xe73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73d));
        EXPECT(0x48, gbc.readMem(0xe73e));
        // CB 48 01EC
        gbc.setState(0x9ce0, 0xd780, 0xd010, 0x47e, 0x3ec2, 0xc8bc, 0x0, 0x0);
        gbc.writeMem(0x9ce0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd780, gbc.sp());
        EXPECT(0x9ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce0));
        EXPECT(0x48, gbc.readMem(0x9ce1));
        // CB 48 01ED
        gbc.setState(0x5fd1, 0x4eeb, 0xca50, 0xa84f, 0xe043, 0x7ce7, 0x1, 0x0);
        gbc.writeMem(0x5fd1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4eeb, gbc.sp());
        EXPECT(0x5fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01EE
        gbc.setState(0x407b, 0x6e0f, 0x44e0, 0xe03, 0x85d, 0x29c7, 0x0, 0x1);
        gbc.writeMem(0x407b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6e0f, gbc.sp());
        EXPECT(0x407d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01EF
        gbc.setState(0xd786, 0x487f, 0x48d0, 0xf311, 0xfe0e, 0xc27d, 0x1, 0x1);
        gbc.writeMem(0xd786, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x487f, gbc.sp());
        EXPECT(0xd788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd786));
        EXPECT(0x48, gbc.readMem(0xd787));
        // CB 48 01F1
        gbc.setState(0x6a1c, 0xf485, 0xba70, 0xc070, 0xeeb6, 0x40e9, 0x0, 0x0);
        gbc.writeMem(0x6a1c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf485, gbc.sp());
        EXPECT(0x6a1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01F2
        gbc.setState(0x5f8e, 0x9d69, 0x81e0, 0x2d88, 0xb71f, 0xfdb7, 0x1, 0x1);
        gbc.writeMem(0x5f8e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9d69, gbc.sp());
        EXPECT(0x5f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01F3
        gbc.setState(0xd2ec, 0x46a3, 0xed60, 0xd067, 0xf0b4, 0xfeb, 0x1, 0x1);
        gbc.writeMem(0xd2ec, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x46a3, gbc.sp());
        EXPECT(0xd2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ec));
        EXPECT(0x48, gbc.readMem(0xd2ed));
        // CB 48 01F4
        gbc.setState(0x50c2, 0x4b5e, 0x5800, 0xec66, 0xbcbc, 0x7df0, 0x1, 0x0);
        gbc.writeMem(0x50c2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4b5e, gbc.sp());
        EXPECT(0x50c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01F6
        gbc.setState(0xe00a, 0xc55c, 0xb190, 0x7e5e, 0xdf53, 0xf6d4, 0x0, 0x0);
        gbc.writeMem(0xe00a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc55c, gbc.sp());
        EXPECT(0xe00c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe00a));
        EXPECT(0x48, gbc.readMem(0xe00b));
        // CB 48 01F7
        gbc.setState(0x7044, 0x4543, 0xf800, 0x2dee, 0xee61, 0xd38d, 0x0, 0x1);
        gbc.writeMem(0x7044, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4543, gbc.sp());
        EXPECT(0x7046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01F8
        gbc.setState(0x15e0, 0x66a0, 0x0, 0xca8, 0x8197, 0x1106, 0x1, 0x1);
        gbc.writeMem(0x15e0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x66a0, gbc.sp());
        EXPECT(0x15e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01F9
        gbc.setState(0x6cb8, 0xe70d, 0x52c0, 0x6166, 0xb1bc, 0xd0dc, 0x1, 0x1);
        gbc.writeMem(0x6cb8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe70d, gbc.sp());
        EXPECT(0x6cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01FA
        gbc.setState(0x963f, 0x2da8, 0x2ba0, 0xba73, 0x121f, 0x8afc, 0x1, 0x0);
        gbc.writeMem(0x963f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2da8, gbc.sp());
        EXPECT(0x9641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963f));
        EXPECT(0x48, gbc.readMem(0x9640));
        // CB 48 01FB
        gbc.setState(0x8fd, 0xea6a, 0x3950, 0xf7c4, 0x5812, 0xe903, 0x0, 0x1);
        gbc.writeMem(0x8fd, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xea6a, gbc.sp());
        EXPECT(0x8ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01FC
        gbc.setState(0x6638, 0xbac6, 0x3260, 0xe9df, 0x4a05, 0x16d6, 0x0, 0x0);
        gbc.writeMem(0x6638, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbac6, gbc.sp());
        EXPECT(0x663a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 01FD
        gbc.setState(0xd2cc, 0x2a2d, 0x5f60, 0xd32a, 0xee8, 0x29fc, 0x1, 0x0);
        gbc.writeMem(0xd2cc, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2a2d, gbc.sp());
        EXPECT(0xd2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2cc));
        EXPECT(0x48, gbc.readMem(0xd2cd));
        // CB 48 01FE
        gbc.setState(0x39d7, 0x6f56, 0x8850, 0x882, 0x1fd7, 0x819c, 0x1, 0x1);
        gbc.writeMem(0x39d7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6f56, gbc.sp());
        EXPECT(0x39d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 01FF
        gbc.setState(0x8a6d, 0x640, 0xdbf0, 0xf6a8, 0x654e, 0x2e0, 0x0, 0x0);
        gbc.writeMem(0x8a6d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x640, gbc.sp());
        EXPECT(0x8a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6d));
        EXPECT(0x48, gbc.readMem(0x8a6e));
        // CB 48 0200
        gbc.setState(0x9093, 0x5fc7, 0xdc70, 0xec0d, 0xaa5d, 0x3a68, 0x1, 0x0);
        gbc.writeMem(0x9093, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5fc7, gbc.sp());
        EXPECT(0x9095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9093));
        EXPECT(0x48, gbc.readMem(0x9094));
        // CB 48 0201
        gbc.setState(0x1c8f, 0x88aa, 0xb940, 0xbe47, 0xd829, 0x7d85, 0x0, 0x0);
        gbc.writeMem(0x1c8f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x88aa, gbc.sp());
        EXPECT(0x1c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0202
        gbc.setState(0xe046, 0x5839, 0x51f0, 0x9bad, 0x5fc6, 0xd898, 0x1, 0x0);
        gbc.writeMem(0xe046, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5839, gbc.sp());
        EXPECT(0xe048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe046));
        EXPECT(0x48, gbc.readMem(0xe047));
        // CB 48 0203
        gbc.setState(0xdd29, 0x6a2d, 0xeca0, 0xd07f, 0x4887, 0x1af2, 0x1, 0x0);
        gbc.writeMem(0xdd29, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6a2d, gbc.sp());
        EXPECT(0xdd2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd29));
        EXPECT(0x48, gbc.readMem(0xdd2a));
        // CB 48 0204
        gbc.setState(0xc5be, 0x2147, 0x5e10, 0x2af0, 0xf223, 0x4473, 0x0, 0x1);
        gbc.writeMem(0xc5be, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2147, gbc.sp());
        EXPECT(0xc5c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5be));
        EXPECT(0x48, gbc.readMem(0xc5bf));
        // CB 48 0205
        gbc.setState(0x5b52, 0x1896, 0x9a00, 0xf10c, 0x9cda, 0x4d42, 0x1, 0x1);
        gbc.writeMem(0x5b52, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1896, gbc.sp());
        EXPECT(0x5b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0206
        gbc.setState(0x7efe, 0xc9eb, 0xc490, 0x6a2, 0xe66a, 0x494c, 0x1, 0x1);
        gbc.writeMem(0x7efe, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc9eb, gbc.sp());
        EXPECT(0x7f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0207
        gbc.setState(0xb60d, 0x8fef, 0xb2b0, 0x98a5, 0xbf71, 0x8484, 0x0, 0x1);
        gbc.writeMem(0xb60d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8fef, gbc.sp());
        EXPECT(0xb60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60d));
        EXPECT(0x48, gbc.readMem(0xb60e));
        // CB 48 0208
        gbc.setState(0xb31c, 0xe98d, 0x6910, 0xf063, 0xab90, 0xcfdd, 0x0, 0x1);
        gbc.writeMem(0xb31c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe98d, gbc.sp());
        EXPECT(0xb31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31c));
        EXPECT(0x48, gbc.readMem(0xb31d));
        // CB 48 0209
        gbc.setState(0x6168, 0x7e19, 0xdb70, 0xe2b6, 0x6086, 0x11a5, 0x0, 0x0);
        gbc.writeMem(0x6168, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7e19, gbc.sp());
        EXPECT(0x616a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 020A
        gbc.setState(0xb9a2, 0x5a82, 0xf2f0, 0x78ef, 0xa681, 0x9c14, 0x0, 0x1);
        gbc.writeMem(0xb9a2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5a82, gbc.sp());
        EXPECT(0xb9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a2));
        EXPECT(0x48, gbc.readMem(0xb9a3));
        // CB 48 020B
        gbc.setState(0xa7a3, 0xb919, 0xfc00, 0xa7fb, 0x7502, 0xd8a, 0x0, 0x0);
        gbc.writeMem(0xa7a3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb919, gbc.sp());
        EXPECT(0xa7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a3));
        EXPECT(0x48, gbc.readMem(0xa7a4));
        // CB 48 020C
        gbc.setState(0x9ca1, 0xa2d, 0x6ec0, 0x61d1, 0x1d2, 0x74cd, 0x1, 0x0);
        gbc.writeMem(0x9ca1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa2d, gbc.sp());
        EXPECT(0x9ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca1));
        EXPECT(0x48, gbc.readMem(0x9ca2));
        // CB 48 020E
        gbc.setState(0x14a4, 0x2709, 0xa660, 0xcb4a, 0x6bd6, 0x94e1, 0x0, 0x1);
        gbc.writeMem(0x14a4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2709, gbc.sp());
        EXPECT(0x14a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 020F
        gbc.setState(0x89d2, 0xfbc3, 0xc2b0, 0xb63a, 0x5826, 0x1cf3, 0x0, 0x1);
        gbc.writeMem(0x89d2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfbc3, gbc.sp());
        EXPECT(0x89d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d2));
        EXPECT(0x48, gbc.readMem(0x89d3));
        // CB 48 0211
        gbc.setState(0x7f95, 0xf10d, 0x2940, 0x9f3c, 0x7a43, 0xc206, 0x1, 0x0);
        gbc.writeMem(0x7f95, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf10d, gbc.sp());
        EXPECT(0x7f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0212
        gbc.setState(0x732b, 0x1ee7, 0xb190, 0x68fd, 0xffbe, 0x723f, 0x1, 0x1);
        gbc.writeMem(0x732b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1ee7, gbc.sp());
        EXPECT(0x732d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0213
        gbc.setState(0x994d, 0x7d0d, 0x6d20, 0x95c6, 0x91cc, 0x636, 0x1, 0x0);
        gbc.writeMem(0x994d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7d0d, gbc.sp());
        EXPECT(0x994f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994d));
        EXPECT(0x48, gbc.readMem(0x994e));
        // CB 48 0214
        gbc.setState(0xcc7b, 0x6067, 0xaa60, 0x54de, 0xe6cd, 0xfdc, 0x0, 0x0);
        gbc.writeMem(0xcc7b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6067, gbc.sp());
        EXPECT(0xcc7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7b));
        EXPECT(0x48, gbc.readMem(0xcc7c));
        // CB 48 0215
        gbc.setState(0x6d0a, 0x845f, 0xf300, 0x1e43, 0xb2fc, 0x136e, 0x0, 0x1);
        gbc.writeMem(0x6d0a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x845f, gbc.sp());
        EXPECT(0x6d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0216
        gbc.setState(0xca85, 0x3f12, 0xea80, 0x99e2, 0xed8b, 0xa79a, 0x1, 0x1);
        gbc.writeMem(0xca85, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3f12, gbc.sp());
        EXPECT(0xca87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca85));
        EXPECT(0x48, gbc.readMem(0xca86));
        // CB 48 0217
        gbc.setState(0x587d, 0xf6dd, 0x4630, 0x4500, 0x2b18, 0x69c2, 0x0, 0x1);
        gbc.writeMem(0x587d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf6dd, gbc.sp());
        EXPECT(0x587f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0218
        gbc.setState(0x1c30, 0xbf42, 0x5c30, 0xd155, 0x663e, 0x47f9, 0x1, 0x1);
        gbc.writeMem(0x1c30, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbf42, gbc.sp());
        EXPECT(0x1c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0219
        gbc.setState(0x3d8, 0x2a28, 0x1f50, 0xd2e, 0x59ec, 0x375a, 0x0, 0x1);
        gbc.writeMem(0x3d8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2a28, gbc.sp());
        EXPECT(0x3da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 021A
        gbc.setState(0x31b8, 0x24ca, 0xac90, 0xe9f4, 0xc651, 0xe374, 0x0, 0x1);
        gbc.writeMem(0x31b8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x24ca, gbc.sp());
        EXPECT(0x31ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 021B
        gbc.setState(0xe3b7, 0xc5d8, 0x2860, 0xa40f, 0x2a30, 0xe6e5, 0x0, 0x1);
        gbc.writeMem(0xe3b7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc5d8, gbc.sp());
        EXPECT(0xe3b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b7));
        EXPECT(0x48, gbc.readMem(0xe3b8));
        // CB 48 021C
        gbc.setState(0x3abf, 0x7715, 0x64f0, 0xa280, 0x44de, 0x46dd, 0x1, 0x0);
        gbc.writeMem(0x3abf, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7715, gbc.sp());
        EXPECT(0x3ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 021D
        gbc.setState(0xae8b, 0x75ee, 0x7610, 0x99fa, 0x1ca9, 0xec60, 0x1, 0x1);
        gbc.writeMem(0xae8b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x75ee, gbc.sp());
        EXPECT(0xae8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae8b));
        EXPECT(0x48, gbc.readMem(0xae8c));
        // CB 48 021E
        gbc.setState(0x772, 0x53be, 0x2ca0, 0x180b, 0xfff1, 0x98f9, 0x1, 0x1);
        gbc.writeMem(0x772, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x53be, gbc.sp());
        EXPECT(0x774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 021F
        gbc.setState(0x483b, 0x496e, 0xf090, 0x98ab, 0x3e2a, 0x5cdc, 0x1, 0x1);
        gbc.writeMem(0x483b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x496e, gbc.sp());
        EXPECT(0x483d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0220
        gbc.setState(0xa90e, 0x8fa5, 0x42d0, 0xb690, 0x11bd, 0x654, 0x1, 0x0);
        gbc.writeMem(0xa90e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8fa5, gbc.sp());
        EXPECT(0xa910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa90e));
        EXPECT(0x48, gbc.readMem(0xa90f));
        // CB 48 0221
        gbc.setState(0x9c6, 0xea6d, 0x3ab0, 0xd1ef, 0x51ea, 0xe3dd, 0x1, 0x0);
        gbc.writeMem(0x9c6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xea6d, gbc.sp());
        EXPECT(0x9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0222
        gbc.setState(0xdd1, 0x7e9, 0xcb60, 0x4aad, 0x6fd1, 0x45f6, 0x1, 0x0);
        gbc.writeMem(0xdd1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7e9, gbc.sp());
        EXPECT(0xdd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0224
        gbc.setState(0xc6b8, 0xc079, 0x8ee0, 0x93bd, 0xb869, 0x46a2, 0x1, 0x0);
        gbc.writeMem(0xc6b8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc079, gbc.sp());
        EXPECT(0xc6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b8));
        EXPECT(0x48, gbc.readMem(0xc6b9));
        // CB 48 0225
        gbc.setState(0xdeb0, 0x134c, 0x90c0, 0x1a9, 0x3bd9, 0xbed5, 0x1, 0x1);
        gbc.writeMem(0xdeb0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x134c, gbc.sp());
        EXPECT(0xdeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb0));
        EXPECT(0x48, gbc.readMem(0xdeb1));
        // CB 48 0226
        gbc.setState(0x4577, 0xc75, 0xe1a0, 0x7699, 0xb050, 0x626a, 0x1, 0x0);
        gbc.writeMem(0x4577, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc75, gbc.sp());
        EXPECT(0x4579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0227
        gbc.setState(0xa37b, 0xd17b, 0xe930, 0xb7b8, 0x7e94, 0x8b70, 0x1, 0x1);
        gbc.writeMem(0xa37b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd17b, gbc.sp());
        EXPECT(0xa37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37b));
        EXPECT(0x48, gbc.readMem(0xa37c));
        // CB 48 0228
        gbc.setState(0x12e8, 0xfa0f, 0x43f0, 0xa0a5, 0xa32f, 0x436f, 0x1, 0x1);
        gbc.writeMem(0x12e8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfa0f, gbc.sp());
        EXPECT(0x12ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0229
        gbc.setState(0xf40, 0xe577, 0x3750, 0xe361, 0x575d, 0x6737, 0x1, 0x1);
        gbc.writeMem(0xf40, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe577, gbc.sp());
        EXPECT(0xf42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 022A
        gbc.setState(0x4a06, 0x84ad, 0xf90, 0x41d, 0x9236, 0x1e8c, 0x0, 0x0);
        gbc.writeMem(0x4a06, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x84ad, gbc.sp());
        EXPECT(0x4a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 022B
        gbc.setState(0x5927, 0x4c7, 0xe70, 0xf2ce, 0x523c, 0x9f5d, 0x0, 0x1);
        gbc.writeMem(0x5927, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4c7, gbc.sp());
        EXPECT(0x5929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 022C
        gbc.setState(0xd069, 0x5921, 0x8900, 0xee2d, 0x5e67, 0xe8db, 0x1, 0x0);
        gbc.writeMem(0xd069, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5921, gbc.sp());
        EXPECT(0xd06b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd069));
        EXPECT(0x48, gbc.readMem(0xd06a));
        // CB 48 022D
        gbc.setState(0x7d71, 0xb4f8, 0xf030, 0x39de, 0xa373, 0xced8, 0x0, 0x1);
        gbc.writeMem(0x7d71, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb4f8, gbc.sp());
        EXPECT(0x7d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 022E
        gbc.setState(0xbad9, 0xd017, 0x7d70, 0x30a6, 0x6d0f, 0xfc8d, 0x0, 0x1);
        gbc.writeMem(0xbad9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd017, gbc.sp());
        EXPECT(0xbadb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad9));
        EXPECT(0x48, gbc.readMem(0xbada));
        // CB 48 022F
        gbc.setState(0x17b5, 0xfdcc, 0xda00, 0x44b9, 0x1417, 0x65d7, 0x1, 0x0);
        gbc.writeMem(0x17b5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfdcc, gbc.sp());
        EXPECT(0x17b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0230
        gbc.setState(0x5338, 0xa911, 0x4d10, 0x5509, 0x2e65, 0x2c71, 0x0, 0x0);
        gbc.writeMem(0x5338, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa911, gbc.sp());
        EXPECT(0x533a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0232
        gbc.setState(0x5a1c, 0x3ca8, 0xcd10, 0x95c9, 0xb3c0, 0x38c0, 0x0, 0x1);
        gbc.writeMem(0x5a1c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3ca8, gbc.sp());
        EXPECT(0x5a1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0233
        gbc.setState(0x539b, 0xf337, 0x4e30, 0x2b88, 0x6be7, 0xb24f, 0x1, 0x1);
        gbc.writeMem(0x539b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf337, gbc.sp());
        EXPECT(0x539d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0234
        gbc.setState(0x3bba, 0xc249, 0x3690, 0xefba, 0xf209, 0x2771, 0x0, 0x1);
        gbc.writeMem(0x3bba, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc249, gbc.sp());
        EXPECT(0x3bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0235
        gbc.setState(0xe0ca, 0x72f9, 0xb520, 0xf5e7, 0x3357, 0xe6b7, 0x1, 0x0);
        gbc.writeMem(0xe0ca, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x72f9, gbc.sp());
        EXPECT(0xe0cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ca));
        EXPECT(0x48, gbc.readMem(0xe0cb));
        // CB 48 0236
        gbc.setState(0x9733, 0xbb15, 0x18c0, 0xd818, 0xb2cc, 0x6281, 0x1, 0x0);
        gbc.writeMem(0x9733, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbb15, gbc.sp());
        EXPECT(0x9735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9733));
        EXPECT(0x48, gbc.readMem(0x9734));
        // CB 48 0238
        gbc.setState(0x39b0, 0x3077, 0x48f0, 0xd4c8, 0xf887, 0x1764, 0x0, 0x0);
        gbc.writeMem(0x39b0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3077, gbc.sp());
        EXPECT(0x39b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0239
        gbc.setState(0xebde, 0x1a1, 0x6360, 0x9ed0, 0x4225, 0x97b6, 0x0, 0x1);
        gbc.writeMem(0xebde, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1a1, gbc.sp());
        EXPECT(0xebe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebde));
        EXPECT(0x48, gbc.readMem(0xebdf));
        // CB 48 023A
        gbc.setState(0xa89d, 0xa650, 0xc450, 0xb9c, 0x8045, 0xf210, 0x1, 0x0);
        gbc.writeMem(0xa89d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa650, gbc.sp());
        EXPECT(0xa89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89d));
        EXPECT(0x48, gbc.readMem(0xa89e));
        // CB 48 023B
        gbc.setState(0x4296, 0x9823, 0x880, 0x804c, 0xe21f, 0xf281, 0x1, 0x0);
        gbc.writeMem(0x4296, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9823, gbc.sp());
        EXPECT(0x4298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 023D
        gbc.setState(0x48af, 0xd4d9, 0x9080, 0xe589, 0x1f4, 0x86a, 0x1, 0x0);
        gbc.writeMem(0x48af, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd4d9, gbc.sp());
        EXPECT(0x48b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 023E
        gbc.setState(0x3d0f, 0x1f27, 0x4b50, 0x45a6, 0x74bc, 0x1aa2, 0x0, 0x0);
        gbc.writeMem(0x3d0f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1f27, gbc.sp());
        EXPECT(0x3d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 023F
        gbc.setState(0x805f, 0x46d, 0x6a20, 0x1ffa, 0x45b4, 0xeed9, 0x1, 0x1);
        gbc.writeMem(0x805f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x46d, gbc.sp());
        EXPECT(0x8061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x805f));
        EXPECT(0x48, gbc.readMem(0x8060));
        // CB 48 0240
        gbc.setState(0xe211, 0xb4eb, 0x7a90, 0x56f5, 0xb72c, 0x8de7, 0x1, 0x0);
        gbc.writeMem(0xe211, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb4eb, gbc.sp());
        EXPECT(0xe213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe211));
        EXPECT(0x48, gbc.readMem(0xe212));
        // CB 48 0241
        gbc.setState(0x2be0, 0x899f, 0xc6e0, 0xbafa, 0xed14, 0x6597, 0x1, 0x1);
        gbc.writeMem(0x2be0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x899f, gbc.sp());
        EXPECT(0x2be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0242
        gbc.setState(0xa301, 0xccfd, 0xada0, 0x7614, 0x6fa4, 0xdab2, 0x1, 0x0);
        gbc.writeMem(0xa301, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xccfd, gbc.sp());
        EXPECT(0xa303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa301));
        EXPECT(0x48, gbc.readMem(0xa302));
        // CB 48 0243
        gbc.setState(0xd6ff, 0x859d, 0x4160, 0x40c1, 0xcce7, 0xfc2a, 0x1, 0x1);
        gbc.writeMem(0xd6ff, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x859d, gbc.sp());
        EXPECT(0xd701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ff));
        EXPECT(0x48, gbc.readMem(0xd700));
        // CB 48 0244
        gbc.setState(0x210e, 0x9cf1, 0xead0, 0x6b57, 0x5c6, 0xa47e, 0x1, 0x1);
        gbc.writeMem(0x210e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9cf1, gbc.sp());
        EXPECT(0x2110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0245
        gbc.setState(0x6e53, 0xbb8b, 0xccc0, 0x5eac, 0x5738, 0xd8cf, 0x1, 0x0);
        gbc.writeMem(0x6e53, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbb8b, gbc.sp());
        EXPECT(0x6e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0246
        gbc.setState(0xbbab, 0x407f, 0xe960, 0xe7ef, 0x23b0, 0x37b6, 0x1, 0x0);
        gbc.writeMem(0xbbab, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x407f, gbc.sp());
        EXPECT(0xbbad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbab));
        EXPECT(0x48, gbc.readMem(0xbbac));
        // CB 48 0247
        gbc.setState(0x31bc, 0xeb3f, 0xe7d0, 0x55ab, 0x10df, 0x6e98, 0x0, 0x0);
        gbc.writeMem(0x31bc, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xeb3f, gbc.sp());
        EXPECT(0x31be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0248
        gbc.setState(0xc5db, 0x9737, 0x2e30, 0x274a, 0x6505, 0x596e, 0x0, 0x1);
        gbc.writeMem(0xc5db, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9737, gbc.sp());
        EXPECT(0xc5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5db));
        EXPECT(0x48, gbc.readMem(0xc5dc));
        // CB 48 0249
        gbc.setState(0xa526, 0xf6ac, 0x5da0, 0xf05e, 0xb169, 0xfcb0, 0x1, 0x0);
        gbc.writeMem(0xa526, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf6ac, gbc.sp());
        EXPECT(0xa528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa526));
        EXPECT(0x48, gbc.readMem(0xa527));
        // CB 48 024A
        gbc.setState(0x4430, 0xa901, 0xeed0, 0xb2b1, 0xb8a7, 0x3117, 0x0, 0x1);
        gbc.writeMem(0x4430, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa901, gbc.sp());
        EXPECT(0x4432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 024B
        gbc.setState(0x3af6, 0x32e0, 0x78d0, 0xfc41, 0xa9c6, 0xd28c, 0x1, 0x0);
        gbc.writeMem(0x3af6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x32e0, gbc.sp());
        EXPECT(0x3af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 024C
        gbc.setState(0xb94a, 0xf1db, 0x5630, 0x2f18, 0x92a9, 0x638, 0x1, 0x0);
        gbc.writeMem(0xb94a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf1db, gbc.sp());
        EXPECT(0xb94c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94a));
        EXPECT(0x48, gbc.readMem(0xb94b));
        // CB 48 024D
        gbc.setState(0x63a7, 0x10e0, 0x74e0, 0x6a22, 0x7355, 0x793e, 0x0, 0x1);
        gbc.writeMem(0x63a7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x10e0, gbc.sp());
        EXPECT(0x63a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 024E
        gbc.setState(0xefb2, 0xea08, 0xa5c0, 0x39f6, 0xac7d, 0xaa65, 0x1, 0x1);
        gbc.writeMem(0xefb2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xea08, gbc.sp());
        EXPECT(0xefb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb2));
        EXPECT(0x48, gbc.readMem(0xefb3));
        // CB 48 024F
        gbc.setState(0xbcf0, 0x6bec, 0xe3c0, 0x96da, 0xad6e, 0x156b, 0x1, 0x0);
        gbc.writeMem(0xbcf0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6bec, gbc.sp());
        EXPECT(0xbcf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf0));
        EXPECT(0x48, gbc.readMem(0xbcf1));
        // CB 48 0250
        gbc.setState(0xcd13, 0x2958, 0x2b10, 0xfc36, 0x51a4, 0xfa36, 0x0, 0x0);
        gbc.writeMem(0xcd13, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2958, gbc.sp());
        EXPECT(0xcd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd13));
        EXPECT(0x48, gbc.readMem(0xcd14));
        // CB 48 0251
        gbc.setState(0x3cde, 0xd9df, 0x4ee0, 0x1b81, 0xe05b, 0xbc69, 0x0, 0x0);
        gbc.writeMem(0x3cde, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd9df, gbc.sp());
        EXPECT(0x3ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0252
        gbc.setState(0xec3, 0xf4bc, 0x4df0, 0x8b95, 0x3586, 0xeee0, 0x0, 0x1);
        gbc.writeMem(0xec3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf4bc, gbc.sp());
        EXPECT(0xec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0253
        gbc.setState(0xc22e, 0x6168, 0x6480, 0xd7c2, 0xb57d, 0x1d8f, 0x1, 0x0);
        gbc.writeMem(0xc22e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6168, gbc.sp());
        EXPECT(0xc230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22e));
        EXPECT(0x48, gbc.readMem(0xc22f));
        // CB 48 0254
        gbc.setState(0x4bdd, 0x19b8, 0x77a0, 0xcf60, 0xaa56, 0xc7db, 0x1, 0x1);
        gbc.writeMem(0x4bdd, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x19b8, gbc.sp());
        EXPECT(0x4bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0255
        gbc.setState(0x7076, 0xc0c6, 0xcc50, 0x461d, 0x2a2c, 0xe78b, 0x0, 0x0);
        gbc.writeMem(0x7076, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc0c6, gbc.sp());
        EXPECT(0x7078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0256
        gbc.setState(0xee19, 0x777b, 0x2aa0, 0x984a, 0xf9cc, 0xfb38, 0x0, 0x1);
        gbc.writeMem(0xee19, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x777b, gbc.sp());
        EXPECT(0xee1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee19));
        EXPECT(0x48, gbc.readMem(0xee1a));
        // CB 48 0257
        gbc.setState(0x4b1f, 0x77bb, 0x91b0, 0xfe32, 0x8039, 0xf426, 0x1, 0x0);
        gbc.writeMem(0x4b1f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x77bb, gbc.sp());
        EXPECT(0x4b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0258
        gbc.setState(0x30c0, 0xdee0, 0x13a0, 0xd20a, 0xbcb5, 0xb4f4, 0x1, 0x1);
        gbc.writeMem(0x30c0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdee0, gbc.sp());
        EXPECT(0x30c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0259
        gbc.setState(0x4ac, 0x4dee, 0x1140, 0xa8eb, 0x4eca, 0xcafe, 0x0, 0x1);
        gbc.writeMem(0x4ac, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4dee, gbc.sp());
        EXPECT(0x4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 025A
        gbc.setState(0x5c1e, 0x50a7, 0xf6a0, 0xf9f7, 0xa1f0, 0xf2e2, 0x0, 0x1);
        gbc.writeMem(0x5c1e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x50a7, gbc.sp());
        EXPECT(0x5c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 025B
        gbc.setState(0x83eb, 0xf711, 0xd4b0, 0x6fd9, 0xbd77, 0x4cd0, 0x0, 0x1);
        gbc.writeMem(0x83eb, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf711, gbc.sp());
        EXPECT(0x83ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83eb));
        EXPECT(0x48, gbc.readMem(0x83ec));
        // CB 48 025C
        gbc.setState(0x463a, 0x114c, 0xb080, 0x5c95, 0xc9ad, 0xb0bb, 0x0, 0x0);
        gbc.writeMem(0x463a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x114c, gbc.sp());
        EXPECT(0x463c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 025D
        gbc.setState(0x1f8, 0xf520, 0xbb10, 0x3eb8, 0xf92, 0x67e1, 0x1, 0x0);
        gbc.writeMem(0x1f8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf520, gbc.sp());
        EXPECT(0x1fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 025E
        gbc.setState(0xbf52, 0xd1e, 0x40f0, 0x2276, 0xb84, 0x869e, 0x0, 0x1);
        gbc.writeMem(0xbf52, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd1e, gbc.sp());
        EXPECT(0xbf54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf52));
        EXPECT(0x48, gbc.readMem(0xbf53));
        // CB 48 025F
        gbc.setState(0xe8d, 0xef62, 0xc500, 0x2e91, 0xfb56, 0x760c, 0x0, 0x1);
        gbc.writeMem(0xe8d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xef62, gbc.sp());
        EXPECT(0xe8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0260
        gbc.setState(0x915c, 0x96d7, 0x6670, 0xb573, 0xb7e3, 0xc59b, 0x0, 0x0);
        gbc.writeMem(0x915c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x96d7, gbc.sp());
        EXPECT(0x915e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x915c));
        EXPECT(0x48, gbc.readMem(0x915d));
        // CB 48 0261
        gbc.setState(0x4703, 0xad9e, 0xd7b0, 0xae79, 0x81d4, 0xc162, 0x0, 0x1);
        gbc.writeMem(0x4703, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xad9e, gbc.sp());
        EXPECT(0x4705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0262
        gbc.setState(0xec1c, 0x1ac9, 0x47a0, 0xc900, 0xe216, 0xba7, 0x1, 0x0);
        gbc.writeMem(0xec1c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1ac9, gbc.sp());
        EXPECT(0xec1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec1c));
        EXPECT(0x48, gbc.readMem(0xec1d));
        // CB 48 0263
        gbc.setState(0x33e, 0x93c0, 0x1650, 0x1633, 0x8506, 0xc415, 0x0, 0x1);
        gbc.writeMem(0x33e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x93c0, gbc.sp());
        EXPECT(0x340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0264
        gbc.setState(0xa42d, 0x3154, 0x2c00, 0x76e9, 0x5f8f, 0x73fc, 0x1, 0x1);
        gbc.writeMem(0xa42d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3154, gbc.sp());
        EXPECT(0xa42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42d));
        EXPECT(0x48, gbc.readMem(0xa42e));
        // CB 48 0265
        gbc.setState(0x6605, 0x326, 0x9e0, 0x7a8c, 0xe0cd, 0xfe86, 0x1, 0x0);
        gbc.writeMem(0x6605, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x326, gbc.sp());
        EXPECT(0x6607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0266
        gbc.setState(0x7dc3, 0xa740, 0xac80, 0x204b, 0xefbe, 0xe95a, 0x1, 0x1);
        gbc.writeMem(0x7dc3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa740, gbc.sp());
        EXPECT(0x7dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0267
        gbc.setState(0xb160, 0xcf48, 0x9c0, 0x90a4, 0x14e7, 0x243d, 0x1, 0x0);
        gbc.writeMem(0xb160, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcf48, gbc.sp());
        EXPECT(0xb162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb160));
        EXPECT(0x48, gbc.readMem(0xb161));
        // CB 48 0269
        gbc.setState(0xab1c, 0xa972, 0x3170, 0x8ce6, 0x2003, 0x1afb, 0x0, 0x0);
        gbc.writeMem(0xab1c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa972, gbc.sp());
        EXPECT(0xab1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab1c));
        EXPECT(0x48, gbc.readMem(0xab1d));
        // CB 48 026A
        gbc.setState(0x3435, 0xbe5, 0x2df0, 0xe6e5, 0x4574, 0xca7c, 0x0, 0x1);
        gbc.writeMem(0x3435, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbe5, gbc.sp());
        EXPECT(0x3437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 026B
        gbc.setState(0xb43, 0xacff, 0x8e0, 0x6084, 0xf691, 0xa0ee, 0x1, 0x1);
        gbc.writeMem(0xb43, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xacff, gbc.sp());
        EXPECT(0xb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 026C
        gbc.setState(0x2ac0, 0xc886, 0x9220, 0x1f33, 0xc983, 0xc365, 0x1, 0x0);
        gbc.writeMem(0x2ac0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc886, gbc.sp());
        EXPECT(0x2ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 026D
        gbc.setState(0x37d4, 0xb857, 0x1ef0, 0x90, 0x5813, 0x4133, 0x0, 0x0);
        gbc.writeMem(0x37d4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb857, gbc.sp());
        EXPECT(0x37d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 026E
        gbc.setState(0x6d30, 0x7080, 0x1d20, 0xadcc, 0x2497, 0xf2bb, 0x1, 0x1);
        gbc.writeMem(0x6d30, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7080, gbc.sp());
        EXPECT(0x6d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 026F
        gbc.setState(0x7590, 0x10b9, 0xa50, 0x997c, 0xfb6f, 0x8b2c, 0x0, 0x1);
        gbc.writeMem(0x7590, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x10b9, gbc.sp());
        EXPECT(0x7592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0271
        gbc.setState(0x645a, 0x46e8, 0x7200, 0x764, 0xa322, 0x227b, 0x0, 0x0);
        gbc.writeMem(0x645a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x46e8, gbc.sp());
        EXPECT(0x645c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0272
        gbc.setState(0x7691, 0xc6d7, 0xb00, 0x34e5, 0xa8db, 0x3a5e, 0x0, 0x1);
        gbc.writeMem(0x7691, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc6d7, gbc.sp());
        EXPECT(0x7693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0273
        gbc.setState(0x908a, 0xae74, 0x4650, 0xc8cc, 0x122d, 0xc9f6, 0x0, 0x0);
        gbc.writeMem(0x908a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xae74, gbc.sp());
        EXPECT(0x908c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908a));
        EXPECT(0x48, gbc.readMem(0x908b));
        // CB 48 0274
        gbc.setState(0x178b, 0x3774, 0x6150, 0xa949, 0x1a3d, 0x3cb2, 0x0, 0x1);
        gbc.writeMem(0x178b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3774, gbc.sp());
        EXPECT(0x178d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0275
        gbc.setState(0xc55a, 0x5734, 0x3de0, 0x2053, 0xaee1, 0x42f9, 0x0, 0x0);
        gbc.writeMem(0xc55a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5734, gbc.sp());
        EXPECT(0xc55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55a));
        EXPECT(0x48, gbc.readMem(0xc55b));
        // CB 48 0276
        gbc.setState(0x746b, 0xd803, 0xcbf0, 0x9f5b, 0x93ed, 0x1efd, 0x0, 0x1);
        gbc.writeMem(0x746b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd803, gbc.sp());
        EXPECT(0x746d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0277
        gbc.setState(0xb064, 0xda7c, 0xa2d0, 0x9396, 0xa03b, 0xf1e, 0x1, 0x1);
        gbc.writeMem(0xb064, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xda7c, gbc.sp());
        EXPECT(0xb066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb064));
        EXPECT(0x48, gbc.readMem(0xb065));
        // CB 48 0278
        gbc.setState(0x53f8, 0xe9ed, 0x80c0, 0x619d, 0x2047, 0x13d5, 0x1, 0x0);
        gbc.writeMem(0x53f8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe9ed, gbc.sp());
        EXPECT(0x53fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0279
        gbc.setState(0x795e, 0xf2fb, 0xbc20, 0xd6d6, 0xbe58, 0xa22d, 0x1, 0x0);
        gbc.writeMem(0x795e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf2fb, gbc.sp());
        EXPECT(0x7960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 027A
        gbc.setState(0xbd2f, 0x6ae7, 0x2b80, 0x632d, 0x146e, 0x76a4, 0x0, 0x0);
        gbc.writeMem(0xbd2f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6ae7, gbc.sp());
        EXPECT(0xbd31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2f));
        EXPECT(0x48, gbc.readMem(0xbd30));
        // CB 48 027B
        gbc.setState(0x3a87, 0x96e, 0xa2c0, 0x1504, 0x9518, 0x9c39, 0x0, 0x1);
        gbc.writeMem(0x3a87, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x96e, gbc.sp());
        EXPECT(0x3a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 027C
        gbc.setState(0xd384, 0x2af4, 0xd350, 0xcf5, 0xe25, 0xd2f, 0x1, 0x0);
        gbc.writeMem(0xd384, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2af4, gbc.sp());
        EXPECT(0xd386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd384));
        EXPECT(0x48, gbc.readMem(0xd385));
        // CB 48 027D
        gbc.setState(0x2023, 0x7883, 0x4560, 0x9510, 0x2e02, 0x994f, 0x0, 0x1);
        gbc.writeMem(0x2023, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7883, gbc.sp());
        EXPECT(0x2025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 027F
        gbc.setState(0xbb7, 0x939, 0xa2e0, 0x8ebd, 0x96e2, 0xa74, 0x1, 0x0);
        gbc.writeMem(0xbb7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x939, gbc.sp());
        EXPECT(0xbb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0280
        gbc.setState(0xe18c, 0xeaf0, 0xb320, 0x663e, 0x34cb, 0xb91f, 0x0, 0x1);
        gbc.writeMem(0xe18c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xeaf0, gbc.sp());
        EXPECT(0xe18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18c));
        EXPECT(0x48, gbc.readMem(0xe18d));
        // CB 48 0281
        gbc.setState(0xe1b7, 0x6be5, 0xd700, 0x292b, 0x1324, 0x39e6, 0x0, 0x1);
        gbc.writeMem(0xe1b7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6be5, gbc.sp());
        EXPECT(0xe1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b7));
        EXPECT(0x48, gbc.readMem(0xe1b8));
        // CB 48 0282
        gbc.setState(0x350, 0x8f6d, 0x3ea0, 0x6fe7, 0x2e40, 0x7429, 0x0, 0x0);
        gbc.writeMem(0x350, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8f6d, gbc.sp());
        EXPECT(0x352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0283
        gbc.setState(0xccfb, 0xdb05, 0xc040, 0xce23, 0x86b3, 0xfe98, 0x1, 0x0);
        gbc.writeMem(0xccfb, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdb05, gbc.sp());
        EXPECT(0xccfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfb));
        EXPECT(0x48, gbc.readMem(0xccfc));
        // CB 48 0284
        gbc.setState(0xdcb9, 0xdc6e, 0x62b0, 0xd500, 0x4f2c, 0x7686, 0x1, 0x0);
        gbc.writeMem(0xdcb9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdc6e, gbc.sp());
        EXPECT(0xdcbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb9));
        EXPECT(0x48, gbc.readMem(0xdcba));
        // CB 48 0285
        gbc.setState(0x292, 0x120c, 0x1d0, 0x8410, 0x41de, 0x87e7, 0x0, 0x0);
        gbc.writeMem(0x292, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x120c, gbc.sp());
        EXPECT(0x294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0286
        gbc.setState(0xa95f, 0x1425, 0x32d0, 0xa7c3, 0x9c07, 0x7581, 0x0, 0x1);
        gbc.writeMem(0xa95f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1425, gbc.sp());
        EXPECT(0xa961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95f));
        EXPECT(0x48, gbc.readMem(0xa960));
        // CB 48 0287
        gbc.setState(0x642b, 0xe947, 0x60c0, 0xea91, 0x2a08, 0xf8e9, 0x0, 0x0);
        gbc.writeMem(0x642b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe947, gbc.sp());
        EXPECT(0x642d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0288
        gbc.setState(0x1dec, 0xf07e, 0x60, 0x9cc5, 0x1a4, 0xfe30, 0x1, 0x0);
        gbc.writeMem(0x1dec, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf07e, gbc.sp());
        EXPECT(0x1dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0289
        gbc.setState(0xb5b5, 0xebb, 0x5560, 0x7cf0, 0x347a, 0x9b11, 0x0, 0x0);
        gbc.writeMem(0xb5b5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xebb, gbc.sp());
        EXPECT(0xb5b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b5));
        EXPECT(0x48, gbc.readMem(0xb5b6));
        // CB 48 028A
        gbc.setState(0x2f4e, 0x17ae, 0xd920, 0x2eaf, 0xc8ff, 0x1870, 0x0, 0x1);
        gbc.writeMem(0x2f4e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x17ae, gbc.sp());
        EXPECT(0x2f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 028B
        gbc.setState(0x3f81, 0xf662, 0x3470, 0x61f8, 0x693, 0x23f, 0x1, 0x0);
        gbc.writeMem(0x3f81, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf662, gbc.sp());
        EXPECT(0x3f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 028C
        gbc.setState(0x427e, 0x57b3, 0xa510, 0xd9f2, 0x6243, 0xd7c4, 0x1, 0x0);
        gbc.writeMem(0x427e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x57b3, gbc.sp());
        EXPECT(0x4280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 028D
        gbc.setState(0x3472, 0xdb20, 0x2b80, 0x9d82, 0xe6a3, 0x390b, 0x1, 0x1);
        gbc.writeMem(0x3472, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdb20, gbc.sp());
        EXPECT(0x3474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 028F
        gbc.setState(0x4c18, 0x6b86, 0xb370, 0x3ff9, 0x3af8, 0x6ccf, 0x1, 0x1);
        gbc.writeMem(0x4c18, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6b86, gbc.sp());
        EXPECT(0x4c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0291
        gbc.setState(0xba61, 0x7808, 0x7a20, 0xc954, 0x9be1, 0x1e3b, 0x0, 0x1);
        gbc.writeMem(0xba61, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7808, gbc.sp());
        EXPECT(0xba63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba61));
        EXPECT(0x48, gbc.readMem(0xba62));
        // CB 48 0292
        gbc.setState(0x75db, 0x527d, 0xa8f0, 0x8f06, 0x9fc4, 0xe87a, 0x0, 0x0);
        gbc.writeMem(0x75db, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x527d, gbc.sp());
        EXPECT(0x75dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0293
        gbc.setState(0xacb6, 0x8e9e, 0xf30, 0x5ff0, 0x563e, 0xa29a, 0x1, 0x0);
        gbc.writeMem(0xacb6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8e9e, gbc.sp());
        EXPECT(0xacb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb6));
        EXPECT(0x48, gbc.readMem(0xacb7));
        // CB 48 0294
        gbc.setState(0xc9e2, 0x72fe, 0x1250, 0x15de, 0x64d8, 0x3b9, 0x1, 0x1);
        gbc.writeMem(0xc9e2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x72fe, gbc.sp());
        EXPECT(0xc9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e2));
        EXPECT(0x48, gbc.readMem(0xc9e3));
        // CB 48 0295
        gbc.setState(0xc6ea, 0xf6cd, 0xd1b0, 0xc3c1, 0xed1a, 0x84ea, 0x0, 0x0);
        gbc.writeMem(0xc6ea, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf6cd, gbc.sp());
        EXPECT(0xc6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ea));
        EXPECT(0x48, gbc.readMem(0xc6eb));
        // CB 48 0296
        gbc.setState(0x4d2f, 0x78a9, 0xb000, 0xcfb8, 0xfd25, 0x7953, 0x1, 0x1);
        gbc.writeMem(0x4d2f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x78a9, gbc.sp());
        EXPECT(0x4d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0297
        gbc.setState(0xa527, 0xf860, 0xbdc0, 0xa839, 0x7264, 0x646e, 0x1, 0x1);
        gbc.writeMem(0xa527, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf860, gbc.sp());
        EXPECT(0xa529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa527));
        EXPECT(0x48, gbc.readMem(0xa528));
        // CB 48 0298
        gbc.setState(0xdea1, 0xa021, 0xc140, 0x1c3, 0xfc4f, 0xbf8b, 0x1, 0x0);
        gbc.writeMem(0xdea1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa021, gbc.sp());
        EXPECT(0xdea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea1));
        EXPECT(0x48, gbc.readMem(0xdea2));
        // CB 48 0299
        gbc.setState(0x73d, 0x208, 0xaf70, 0x21da, 0x113f, 0x67d0, 0x1, 0x1);
        gbc.writeMem(0x73d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x208, gbc.sp());
        EXPECT(0x73f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 029A
        gbc.setState(0xcd3, 0x7c02, 0x46b0, 0x1312, 0xcfb4, 0x6fb0, 0x0, 0x1);
        gbc.writeMem(0xcd3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7c02, gbc.sp());
        EXPECT(0xcd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 029B
        gbc.setState(0xc035, 0x515, 0x3fa0, 0xa2c3, 0x6750, 0xca53, 0x1, 0x1);
        gbc.writeMem(0xc035, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x515, gbc.sp());
        EXPECT(0xc037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc035));
        EXPECT(0x48, gbc.readMem(0xc036));
        // CB 48 029C
        gbc.setState(0xe020, 0x2f92, 0xb000, 0xbae4, 0x467f, 0x4134, 0x1, 0x1);
        gbc.writeMem(0xe020, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2f92, gbc.sp());
        EXPECT(0xe022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe020));
        EXPECT(0x48, gbc.readMem(0xe021));
        // CB 48 029D
        gbc.setState(0x7f79, 0x408c, 0x6240, 0x88d3, 0x6e7f, 0x8479, 0x0, 0x1);
        gbc.writeMem(0x7f79, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x408c, gbc.sp());
        EXPECT(0x7f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 029E
        gbc.setState(0x6b41, 0x36b8, 0x6940, 0x9e5c, 0x811d, 0xe793, 0x0, 0x1);
        gbc.writeMem(0x6b41, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x36b8, gbc.sp());
        EXPECT(0x6b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 029F
        gbc.setState(0xa1c0, 0x3d56, 0x3ec0, 0x9150, 0xcfa1, 0x6562, 0x1, 0x1);
        gbc.writeMem(0xa1c0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3d56, gbc.sp());
        EXPECT(0xa1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c0));
        EXPECT(0x48, gbc.readMem(0xa1c1));
        // CB 48 02A0
        gbc.setState(0xeb05, 0x2990, 0x7c80, 0xef20, 0x82d3, 0xfb0e, 0x1, 0x0);
        gbc.writeMem(0xeb05, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2990, gbc.sp());
        EXPECT(0xeb07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb05));
        EXPECT(0x48, gbc.readMem(0xeb06));
        // CB 48 02A1
        gbc.setState(0x86f3, 0x6016, 0xcb30, 0x90ff, 0x47f9, 0xb019, 0x0, 0x1);
        gbc.writeMem(0x86f3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6016, gbc.sp());
        EXPECT(0x86f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f3));
        EXPECT(0x48, gbc.readMem(0x86f4));
        // CB 48 02A2
        gbc.setState(0x3913, 0xf974, 0xfa70, 0x61b7, 0x6329, 0x7419, 0x1, 0x0);
        gbc.writeMem(0x3913, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf974, gbc.sp());
        EXPECT(0x3915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02A3
        gbc.setState(0x1339, 0xbe9e, 0xe980, 0xa93a, 0x6c96, 0xd650, 0x0, 0x0);
        gbc.writeMem(0x1339, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbe9e, gbc.sp());
        EXPECT(0x133b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02A5
        gbc.setState(0x9df6, 0xb795, 0xec90, 0x9378, 0x1461, 0xb5d0, 0x0, 0x1);
        gbc.writeMem(0x9df6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb795, gbc.sp());
        EXPECT(0x9df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df6));
        EXPECT(0x48, gbc.readMem(0x9df7));
        // CB 48 02A6
        gbc.setState(0x5ebe, 0x2f5d, 0xde50, 0x6cbd, 0x411c, 0x5653, 0x1, 0x1);
        gbc.writeMem(0x5ebe, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2f5d, gbc.sp());
        EXPECT(0x5ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02A7
        gbc.setState(0x8a33, 0x756b, 0x4a10, 0xce56, 0xf575, 0xff10, 0x0, 0x1);
        gbc.writeMem(0x8a33, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x756b, gbc.sp());
        EXPECT(0x8a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a33));
        EXPECT(0x48, gbc.readMem(0x8a34));
        // CB 48 02A8
        gbc.setState(0xb09d, 0x49c0, 0x7480, 0x7f96, 0x1360, 0xc3cb, 0x1, 0x1);
        gbc.writeMem(0xb09d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x49c0, gbc.sp());
        EXPECT(0xb09f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09d));
        EXPECT(0x48, gbc.readMem(0xb09e));
        // CB 48 02A9
        gbc.setState(0x7cd4, 0x776a, 0x63a0, 0xaaa5, 0x4d81, 0xdafc, 0x1, 0x0);
        gbc.writeMem(0x7cd4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x776a, gbc.sp());
        EXPECT(0x7cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02AA
        gbc.setState(0xd1ec, 0x44d0, 0x32a0, 0xe910, 0x8d2c, 0x6173, 0x1, 0x0);
        gbc.writeMem(0xd1ec, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x44d0, gbc.sp());
        EXPECT(0xd1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ec));
        EXPECT(0x48, gbc.readMem(0xd1ed));
        // CB 48 02AB
        gbc.setState(0xbe62, 0xad82, 0x32f0, 0x8a15, 0xe9f3, 0xdb62, 0x1, 0x1);
        gbc.writeMem(0xbe62, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xad82, gbc.sp());
        EXPECT(0xbe64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe62));
        EXPECT(0x48, gbc.readMem(0xbe63));
        // CB 48 02AC
        gbc.setState(0xc7af, 0xeb15, 0xa970, 0xc003, 0x6e43, 0xf4d5, 0x0, 0x0);
        gbc.writeMem(0xc7af, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xeb15, gbc.sp());
        EXPECT(0xc7b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7af));
        EXPECT(0x48, gbc.readMem(0xc7b0));
        // CB 48 02AD
        gbc.setState(0x4e90, 0x1977, 0xed40, 0xf5a0, 0xb6eb, 0x16d5, 0x0, 0x0);
        gbc.writeMem(0x4e90, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1977, gbc.sp());
        EXPECT(0x4e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02AE
        gbc.setState(0x7fe1, 0x3c79, 0x69b0, 0x20bb, 0x2575, 0xb2ee, 0x1, 0x1);
        gbc.writeMem(0x7fe1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3c79, gbc.sp());
        EXPECT(0x7fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02AF
        gbc.setState(0x3dfe, 0x7407, 0xbea0, 0x6b6a, 0x4bfc, 0x4e53, 0x1, 0x0);
        gbc.writeMem(0x3dfe, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7407, gbc.sp());
        EXPECT(0x3e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02B0
        gbc.setState(0x8023, 0x4f55, 0x39b0, 0x32ae, 0x8ccb, 0x8f4c, 0x0, 0x1);
        gbc.writeMem(0x8023, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4f55, gbc.sp());
        EXPECT(0x8025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8023));
        EXPECT(0x48, gbc.readMem(0x8024));
        // CB 48 02B1
        gbc.setState(0xdb2e, 0x2076, 0x48e0, 0x58c4, 0x4d10, 0x2702, 0x1, 0x0);
        gbc.writeMem(0xdb2e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2076, gbc.sp());
        EXPECT(0xdb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb2e));
        EXPECT(0x48, gbc.readMem(0xdb2f));
        // CB 48 02B2
        gbc.setState(0x80b0, 0xfd4c, 0xa540, 0x420e, 0x5fea, 0xdb70, 0x1, 0x0);
        gbc.writeMem(0x80b0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfd4c, gbc.sp());
        EXPECT(0x80b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80b0));
        EXPECT(0x48, gbc.readMem(0x80b1));
        // CB 48 02B3
        gbc.setState(0x9228, 0xb3ad, 0x7b90, 0x8339, 0x4b8c, 0x661b, 0x0, 0x0);
        gbc.writeMem(0x9228, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb3ad, gbc.sp());
        EXPECT(0x922a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9228));
        EXPECT(0x48, gbc.readMem(0x9229));
        // CB 48 02B4
        gbc.setState(0x1830, 0x93ca, 0x3a60, 0xb08a, 0xd985, 0x56a4, 0x0, 0x1);
        gbc.writeMem(0x1830, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x93ca, gbc.sp());
        EXPECT(0x1832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02B5
        gbc.setState(0x44f8, 0x4355, 0xb4e0, 0x59a6, 0xccee, 0xa985, 0x1, 0x0);
        gbc.writeMem(0x44f8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4355, gbc.sp());
        EXPECT(0x44fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02B6
        gbc.setState(0x1f8, 0xb6c3, 0xea0, 0x82c, 0x1e22, 0x9e6d, 0x1, 0x0);
        gbc.writeMem(0x1f8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb6c3, gbc.sp());
        EXPECT(0x1fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02B7
        gbc.setState(0xaf87, 0x8a01, 0x97b0, 0x723d, 0xe6b1, 0xc729, 0x1, 0x0);
        gbc.writeMem(0xaf87, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8a01, gbc.sp());
        EXPECT(0xaf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf87));
        EXPECT(0x48, gbc.readMem(0xaf88));
        // CB 48 02B8
        gbc.setState(0x2017, 0x31d, 0x6ad0, 0x5f2, 0x2f46, 0xc19b, 0x1, 0x0);
        gbc.writeMem(0x2017, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x31d, gbc.sp());
        EXPECT(0x2019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02B9
        gbc.setState(0xe9f3, 0x758d, 0x8d90, 0x7630, 0x6355, 0x55bc, 0x1, 0x0);
        gbc.writeMem(0xe9f3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x758d, gbc.sp());
        EXPECT(0xe9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f3));
        EXPECT(0x48, gbc.readMem(0xe9f4));
        // CB 48 02BA
        gbc.setState(0x8d7, 0x8833, 0x88f0, 0x88da, 0xbb6f, 0x7050, 0x0, 0x1);
        gbc.writeMem(0x8d7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8833, gbc.sp());
        EXPECT(0x8d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02BB
        gbc.setState(0x11a8, 0xcf5e, 0x6120, 0x1eae, 0xa8a, 0xdf42, 0x0, 0x0);
        gbc.writeMem(0x11a8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcf5e, gbc.sp());
        EXPECT(0x11aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02BC
        gbc.setState(0x3c86, 0x4266, 0x82e0, 0x8725, 0xee83, 0xfddb, 0x1, 0x1);
        gbc.writeMem(0x3c86, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4266, gbc.sp());
        EXPECT(0x3c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02BE
        gbc.setState(0x5045, 0x8b9f, 0x5f70, 0x716a, 0xa3ad, 0xf607, 0x0, 0x0);
        gbc.writeMem(0x5045, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8b9f, gbc.sp());
        EXPECT(0x5047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02BF
        gbc.setState(0x22e3, 0x299f, 0xd8c0, 0x95e3, 0xae0, 0x41f, 0x0, 0x0);
        gbc.writeMem(0x22e3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x299f, gbc.sp());
        EXPECT(0x22e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02C1
        gbc.setState(0x8c21, 0xe4a9, 0xbec0, 0x98e9, 0xa05c, 0xc77b, 0x0, 0x0);
        gbc.writeMem(0x8c21, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe4a9, gbc.sp());
        EXPECT(0x8c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c21));
        EXPECT(0x48, gbc.readMem(0x8c22));
        // CB 48 02C3
        gbc.setState(0xc310, 0xe90d, 0x3250, 0xc018, 0x9ce7, 0xbbc1, 0x0, 0x0);
        gbc.writeMem(0xc310, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe90d, gbc.sp());
        EXPECT(0xc312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc310));
        EXPECT(0x48, gbc.readMem(0xc311));
        // CB 48 02C4
        gbc.setState(0x2d9d, 0xdc6b, 0x9470, 0xfc27, 0xac88, 0xf08e, 0x0, 0x1);
        gbc.writeMem(0x2d9d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdc6b, gbc.sp());
        EXPECT(0x2d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02C6
        gbc.setState(0x5347, 0x41a9, 0x9440, 0x520, 0xe222, 0xed9f, 0x1, 0x0);
        gbc.writeMem(0x5347, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x41a9, gbc.sp());
        EXPECT(0x5349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02C7
        gbc.setState(0xe6ed, 0xb830, 0x6670, 0xf532, 0xa166, 0x441d, 0x1, 0x1);
        gbc.writeMem(0xe6ed, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb830, gbc.sp());
        EXPECT(0xe6ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ed));
        EXPECT(0x48, gbc.readMem(0xe6ee));
        // CB 48 02C8
        gbc.setState(0x199d, 0x6b2c, 0x90e0, 0xcb11, 0xe70c, 0x2231, 0x0, 0x0);
        gbc.writeMem(0x199d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6b2c, gbc.sp());
        EXPECT(0x199f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02C9
        gbc.setState(0xcf34, 0xeee3, 0xba80, 0x51c9, 0x5781, 0x8f74, 0x0, 0x0);
        gbc.writeMem(0xcf34, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xeee3, gbc.sp());
        EXPECT(0xcf36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf34));
        EXPECT(0x48, gbc.readMem(0xcf35));
        // CB 48 02CA
        gbc.setState(0xae94, 0x17c1, 0x8ea0, 0xf469, 0x7f52, 0x2b98, 0x1, 0x0);
        gbc.writeMem(0xae94, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x17c1, gbc.sp());
        EXPECT(0xae96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae94));
        EXPECT(0x48, gbc.readMem(0xae95));
        // CB 48 02CB
        gbc.setState(0x540f, 0x56fa, 0xd700, 0x4854, 0x455b, 0xb785, 0x1, 0x1);
        gbc.writeMem(0x540f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x56fa, gbc.sp());
        EXPECT(0x5411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02CC
        gbc.setState(0x4f09, 0x4a08, 0xe880, 0x95d3, 0xa003, 0x57cc, 0x1, 0x1);
        gbc.writeMem(0x4f09, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4a08, gbc.sp());
        EXPECT(0x4f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02CD
        gbc.setState(0xebc, 0xebe7, 0x4770, 0x39cd, 0x1b17, 0x3f69, 0x1, 0x1);
        gbc.writeMem(0xebc, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xebe7, gbc.sp());
        EXPECT(0xebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02CE
        gbc.setState(0xd860, 0xd58d, 0xc40, 0xbbd5, 0xc02a, 0xadf2, 0x0, 0x0);
        gbc.writeMem(0xd860, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd58d, gbc.sp());
        EXPECT(0xd862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd860));
        EXPECT(0x48, gbc.readMem(0xd861));
        // CB 48 02CF
        gbc.setState(0x7e50, 0xb289, 0x7b80, 0x9d, 0xea86, 0x1627, 0x1, 0x0);
        gbc.writeMem(0x7e50, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb289, gbc.sp());
        EXPECT(0x7e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02D0
        gbc.setState(0x756a, 0xcf55, 0xa100, 0x8340, 0x4038, 0x8178, 0x0, 0x1);
        gbc.writeMem(0x756a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcf55, gbc.sp());
        EXPECT(0x756c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02D1
        gbc.setState(0xd0bf, 0x52e, 0x2010, 0x487b, 0x27f, 0x7e05, 0x0, 0x1);
        gbc.writeMem(0xd0bf, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x52e, gbc.sp());
        EXPECT(0xd0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0bf));
        EXPECT(0x48, gbc.readMem(0xd0c0));
        // CB 48 02D2
        gbc.setState(0x604a, 0xfffc, 0xede0, 0x7a3f, 0xaf28, 0xad44, 0x1, 0x0);
        gbc.writeMem(0x604a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfffc, gbc.sp());
        EXPECT(0x604c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02D3
        gbc.setState(0xc907, 0x761c, 0x5440, 0x6dcf, 0xce41, 0xf8fe, 0x0, 0x1);
        gbc.writeMem(0xc907, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x761c, gbc.sp());
        EXPECT(0xc909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc907));
        EXPECT(0x48, gbc.readMem(0xc908));
        // CB 48 02D4
        gbc.setState(0x34c4, 0x967e, 0x4ee0, 0x2a79, 0xdf8c, 0x9159, 0x0, 0x1);
        gbc.writeMem(0x34c4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x967e, gbc.sp());
        EXPECT(0x34c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02D5
        gbc.setState(0x67ee, 0x2d0f, 0x9500, 0x5fac, 0x24c8, 0xf2df, 0x1, 0x1);
        gbc.writeMem(0x67ee, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2d0f, gbc.sp());
        EXPECT(0x67f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02D6
        gbc.setState(0x59d2, 0xab82, 0x8d00, 0xb625, 0x87cf, 0xe641, 0x1, 0x0);
        gbc.writeMem(0x59d2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xab82, gbc.sp());
        EXPECT(0x59d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02D7
        gbc.setState(0xc31c, 0x7a4, 0xf660, 0xd607, 0x8bee, 0xa4be, 0x1, 0x1);
        gbc.writeMem(0xc31c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7a4, gbc.sp());
        EXPECT(0xc31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31c));
        EXPECT(0x48, gbc.readMem(0xc31d));
        // CB 48 02D8
        gbc.setState(0x2d3d, 0x2a2d, 0x4a40, 0x4e87, 0xb81f, 0x65fc, 0x0, 0x1);
        gbc.writeMem(0x2d3d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2a2d, gbc.sp());
        EXPECT(0x2d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02DA
        gbc.setState(0x1afe, 0x2232, 0x8f0, 0xd086, 0xed0b, 0xc70c, 0x1, 0x0);
        gbc.writeMem(0x1afe, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2232, gbc.sp());
        EXPECT(0x1b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02DB
        gbc.setState(0xed3c, 0x2d1f, 0x2c20, 0x3517, 0xf5f2, 0x869b, 0x0, 0x1);
        gbc.writeMem(0xed3c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2d1f, gbc.sp());
        EXPECT(0xed3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed3c));
        EXPECT(0x48, gbc.readMem(0xed3d));
        // CB 48 02DC
        gbc.setState(0xa861, 0xbe90, 0xd1b0, 0x1aad, 0x6ba3, 0x8440, 0x0, 0x1);
        gbc.writeMem(0xa861, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbe90, gbc.sp());
        EXPECT(0xa863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa861));
        EXPECT(0x48, gbc.readMem(0xa862));
        // CB 48 02DD
        gbc.setState(0x1f7f, 0xe9de, 0x18f0, 0xfba3, 0x7aa2, 0x659c, 0x0, 0x0);
        gbc.writeMem(0x1f7f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe9de, gbc.sp());
        EXPECT(0x1f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02DE
        gbc.setState(0x1292, 0x8376, 0xd300, 0x2615, 0x98b9, 0xcf72, 0x1, 0x1);
        gbc.writeMem(0x1292, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8376, gbc.sp());
        EXPECT(0x1294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02DF
        gbc.setState(0xdd3b, 0xa10c, 0xc160, 0x4b, 0x484d, 0xcfa0, 0x1, 0x0);
        gbc.writeMem(0xdd3b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa10c, gbc.sp());
        EXPECT(0xdd3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd3b));
        EXPECT(0x48, gbc.readMem(0xdd3c));
        // CB 48 02E0
        gbc.setState(0x3c07, 0x8db7, 0xda90, 0x5bd6, 0x1c41, 0xf420, 0x0, 0x1);
        gbc.writeMem(0x3c07, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8db7, gbc.sp());
        EXPECT(0x3c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02E2
        gbc.setState(0x457d, 0xc74c, 0x85b0, 0x3d9a, 0xf8af, 0xe8b6, 0x0, 0x0);
        gbc.writeMem(0x457d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc74c, gbc.sp());
        EXPECT(0x457f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02E3
        gbc.setState(0xdc09, 0xa3d1, 0x4250, 0xf553, 0xd9ae, 0xd5f7, 0x0, 0x0);
        gbc.writeMem(0xdc09, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa3d1, gbc.sp());
        EXPECT(0xdc0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc09));
        EXPECT(0x48, gbc.readMem(0xdc0a));
        // CB 48 02E4
        gbc.setState(0xae6c, 0xd27c, 0x7080, 0xc70d, 0x51f0, 0x6126, 0x0, 0x1);
        gbc.writeMem(0xae6c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd27c, gbc.sp());
        EXPECT(0xae6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae6c));
        EXPECT(0x48, gbc.readMem(0xae6d));
        // CB 48 02E5
        gbc.setState(0x7dca, 0x7e80, 0xafb0, 0xd4e3, 0xbc62, 0x9a8f, 0x1, 0x1);
        gbc.writeMem(0x7dca, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7e80, gbc.sp());
        EXPECT(0x7dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02E6
        gbc.setState(0x452c, 0xeb6b, 0xf290, 0x6a3a, 0xfda8, 0x9e73, 0x1, 0x0);
        gbc.writeMem(0x452c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xeb6b, gbc.sp());
        EXPECT(0x452e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02E7
        gbc.setState(0x28c5, 0x3e47, 0xa0c0, 0x737d, 0x53f7, 0x8b11, 0x0, 0x1);
        gbc.writeMem(0x28c5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3e47, gbc.sp());
        EXPECT(0x28c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02E8
        gbc.setState(0xd144, 0xc27f, 0xef0, 0x71cb, 0x2fa, 0x21a4, 0x0, 0x1);
        gbc.writeMem(0xd144, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc27f, gbc.sp());
        EXPECT(0xd146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd144));
        EXPECT(0x48, gbc.readMem(0xd145));
        // CB 48 02E9
        gbc.setState(0xd2d5, 0x8061, 0x5430, 0x8887, 0x53a1, 0x9e44, 0x1, 0x0);
        gbc.writeMem(0xd2d5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8061, gbc.sp());
        EXPECT(0xd2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d5));
        EXPECT(0x48, gbc.readMem(0xd2d6));
        // CB 48 02EA
        gbc.setState(0xdc25, 0xca73, 0x4640, 0xeb11, 0x78b, 0xc3, 0x1, 0x0);
        gbc.writeMem(0xdc25, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xca73, gbc.sp());
        EXPECT(0xdc27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc25));
        EXPECT(0x48, gbc.readMem(0xdc26));
        // CB 48 02EB
        gbc.setState(0x6c03, 0x4336, 0xa350, 0xdb42, 0x1b6e, 0x61af, 0x1, 0x0);
        gbc.writeMem(0x6c03, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4336, gbc.sp());
        EXPECT(0x6c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02EC
        gbc.setState(0x6561, 0x3247, 0x5550, 0xd971, 0x6d14, 0x8ae6, 0x1, 0x0);
        gbc.writeMem(0x6561, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3247, gbc.sp());
        EXPECT(0x6563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02ED
        gbc.setState(0x450b, 0x6283, 0xd3d0, 0x2874, 0x8340, 0xee71, 0x1, 0x1);
        gbc.writeMem(0x450b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6283, gbc.sp());
        EXPECT(0x450d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02EE
        gbc.setState(0xb0eb, 0xf46a, 0xc100, 0xc74d, 0xd172, 0xcacb, 0x1, 0x1);
        gbc.writeMem(0xb0eb, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf46a, gbc.sp());
        EXPECT(0xb0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0eb));
        EXPECT(0x48, gbc.readMem(0xb0ec));
        // CB 48 02EF
        gbc.setState(0x9f09, 0x469e, 0xed0, 0x2caf, 0x3fc5, 0x4c12, 0x1, 0x0);
        gbc.writeMem(0x9f09, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x469e, gbc.sp());
        EXPECT(0x9f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f09));
        EXPECT(0x48, gbc.readMem(0x9f0a));
        // CB 48 02F0
        gbc.setState(0x1e83, 0x62a2, 0x5e20, 0xe917, 0xcb66, 0xaf74, 0x1, 0x1);
        gbc.writeMem(0x1e83, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x62a2, gbc.sp());
        EXPECT(0x1e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02F1
        gbc.setState(0xa620, 0x89d7, 0xccf0, 0x782e, 0x6872, 0xb8d8, 0x1, 0x1);
        gbc.writeMem(0xa620, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x89d7, gbc.sp());
        EXPECT(0xa622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa620));
        EXPECT(0x48, gbc.readMem(0xa621));
        // CB 48 02F2
        gbc.setState(0x9789, 0x151e, 0x57c0, 0x3972, 0x1732, 0x83bb, 0x0, 0x1);
        gbc.writeMem(0x9789, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x151e, gbc.sp());
        EXPECT(0x978b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9789));
        EXPECT(0x48, gbc.readMem(0x978a));
        // CB 48 02F3
        gbc.setState(0x6e57, 0xcfbb, 0xd4f0, 0x4697, 0x6010, 0xa91, 0x1, 0x0);
        gbc.writeMem(0x6e57, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xcfbb, gbc.sp());
        EXPECT(0x6e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02F4
        gbc.setState(0xda70, 0x89be, 0x5720, 0xbb98, 0xa69d, 0xf729, 0x1, 0x0);
        gbc.writeMem(0xda70, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x89be, gbc.sp());
        EXPECT(0xda72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda70));
        EXPECT(0x48, gbc.readMem(0xda71));
        // CB 48 02F5
        gbc.setState(0x8f45, 0xdefe, 0xd5b0, 0xea66, 0x1d72, 0x1a52, 0x0, 0x0);
        gbc.writeMem(0x8f45, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdefe, gbc.sp());
        EXPECT(0x8f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f45));
        EXPECT(0x48, gbc.readMem(0x8f46));
        // CB 48 02F6
        gbc.setState(0xef9, 0xc69e, 0xc620, 0x352e, 0x7a9e, 0x57c4, 0x0, 0x1);
        gbc.writeMem(0xef9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc69e, gbc.sp());
        EXPECT(0xefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02F7
        gbc.setState(0x3695, 0xa187, 0x2850, 0xd721, 0x87c3, 0xebce, 0x1, 0x0);
        gbc.writeMem(0x3695, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa187, gbc.sp());
        EXPECT(0x3697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02F8
        gbc.setState(0x8027, 0xad78, 0xa140, 0x7690, 0x7abe, 0x6503, 0x1, 0x1);
        gbc.writeMem(0x8027, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xad78, gbc.sp());
        EXPECT(0x8029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8027));
        EXPECT(0x48, gbc.readMem(0x8028));
        // CB 48 02F9
        gbc.setState(0x3759, 0x67bd, 0x98f0, 0x2d69, 0x1675, 0x43c1, 0x1, 0x0);
        gbc.writeMem(0x3759, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x67bd, gbc.sp());
        EXPECT(0x375b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02FA
        gbc.setState(0xfd1, 0xa5a3, 0xf720, 0x7eb8, 0xf71e, 0xc62a, 0x1, 0x0);
        gbc.writeMem(0xfd1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa5a3, gbc.sp());
        EXPECT(0xfd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 02FB
        gbc.setState(0x9d92, 0x6710, 0xfeb0, 0x3580, 0xad80, 0xba66, 0x1, 0x1);
        gbc.writeMem(0x9d92, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6710, gbc.sp());
        EXPECT(0x9d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d92));
        EXPECT(0x48, gbc.readMem(0x9d93));
        // CB 48 02FC
        gbc.setState(0x7b9a, 0xcf59, 0xd470, 0xaa6d, 0x47e5, 0xb577, 0x0, 0x1);
        gbc.writeMem(0x7b9a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcf59, gbc.sp());
        EXPECT(0x7b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02FD
        gbc.setState(0x7055, 0x78a9, 0x51f0, 0x2545, 0x809f, 0x3f4a, 0x0, 0x0);
        gbc.writeMem(0x7055, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x78a9, gbc.sp());
        EXPECT(0x7057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 02FF
        gbc.setState(0xe032, 0x9c47, 0x1da0, 0x48c8, 0x2e00, 0xaa7, 0x0, 0x1);
        gbc.writeMem(0xe032, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9c47, gbc.sp());
        EXPECT(0xe034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe032));
        EXPECT(0x48, gbc.readMem(0xe033));
        // CB 48 0300
        gbc.setState(0xb445, 0x959c, 0x5150, 0xbe01, 0xa4cb, 0xc174, 0x0, 0x0);
        gbc.writeMem(0xb445, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x959c, gbc.sp());
        EXPECT(0xb447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb445));
        EXPECT(0x48, gbc.readMem(0xb446));
        // CB 48 0301
        gbc.setState(0xc325, 0x3b67, 0xe970, 0x5cc6, 0x49ab, 0x9ab3, 0x0, 0x0);
        gbc.writeMem(0xc325, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3b67, gbc.sp());
        EXPECT(0xc327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc325));
        EXPECT(0x48, gbc.readMem(0xc326));
        // CB 48 0302
        gbc.setState(0x86ed, 0xf94e, 0x4a20, 0x145, 0x9a00, 0x776c, 0x1, 0x0);
        gbc.writeMem(0x86ed, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf94e, gbc.sp());
        EXPECT(0x86ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ed));
        EXPECT(0x48, gbc.readMem(0x86ee));
        // CB 48 0303
        gbc.setState(0xc7ba, 0x27ae, 0x5190, 0xc1e3, 0x27, 0x5074, 0x1, 0x0);
        gbc.writeMem(0xc7ba, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x27ae, gbc.sp());
        EXPECT(0xc7bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ba));
        EXPECT(0x48, gbc.readMem(0xc7bb));
        // CB 48 0304
        gbc.setState(0xe471, 0xad1c, 0x9140, 0x3dd8, 0xfdf6, 0x4f7, 0x0, 0x1);
        gbc.writeMem(0xe471, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xad1c, gbc.sp());
        EXPECT(0xe473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe471));
        EXPECT(0x48, gbc.readMem(0xe472));
        // CB 48 0305
        gbc.setState(0x5c97, 0x8da4, 0xa0a0, 0x5edd, 0xdccf, 0xee4e, 0x0, 0x0);
        gbc.writeMem(0x5c97, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8da4, gbc.sp());
        EXPECT(0x5c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0306
        gbc.setState(0xc9f2, 0x5ae4, 0xa7e0, 0x590, 0xcd3b, 0x184a, 0x0, 0x0);
        gbc.writeMem(0xc9f2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5ae4, gbc.sp());
        EXPECT(0xc9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f2));
        EXPECT(0x48, gbc.readMem(0xc9f3));
        // CB 48 0307
        gbc.setState(0xe12e, 0xc8ad, 0x6af0, 0x6842, 0x51a1, 0x7f7b, 0x1, 0x1);
        gbc.writeMem(0xe12e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc8ad, gbc.sp());
        EXPECT(0xe130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe12e));
        EXPECT(0x48, gbc.readMem(0xe12f));
        // CB 48 0308
        gbc.setState(0x469e, 0xb9bd, 0x7730, 0x2fac, 0xb99c, 0xf84, 0x0, 0x0);
        gbc.writeMem(0x469e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb9bd, gbc.sp());
        EXPECT(0x46a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0309
        gbc.setState(0xcf13, 0x97df, 0x3190, 0x16ef, 0x5764, 0x2c4b, 0x1, 0x1);
        gbc.writeMem(0xcf13, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x97df, gbc.sp());
        EXPECT(0xcf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf13));
        EXPECT(0x48, gbc.readMem(0xcf14));
        // CB 48 030A
        gbc.setState(0x137d, 0xa7b2, 0x9b50, 0x367e, 0x2d12, 0x906b, 0x0, 0x1);
        gbc.writeMem(0x137d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa7b2, gbc.sp());
        EXPECT(0x137f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 030B
        gbc.setState(0x5f9e, 0xcdb3, 0x5cb0, 0x442, 0xbd94, 0x2a30, 0x0, 0x0);
        gbc.writeMem(0x5f9e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcdb3, gbc.sp());
        EXPECT(0x5fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 030C
        gbc.setState(0xb16, 0xadcf, 0x48f0, 0xfa07, 0x17f7, 0x3320, 0x0, 0x1);
        gbc.writeMem(0xb16, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xadcf, gbc.sp());
        EXPECT(0xb18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 030D
        gbc.setState(0x89d2, 0x49e1, 0xe9a0, 0x9b32, 0x39c5, 0x9ef0, 0x0, 0x1);
        gbc.writeMem(0x89d2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x49e1, gbc.sp());
        EXPECT(0x89d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d2));
        EXPECT(0x48, gbc.readMem(0x89d3));
        // CB 48 030E
        gbc.setState(0xcbd, 0xf9c8, 0xf7e0, 0xa695, 0x1749, 0xf5a2, 0x0, 0x0);
        gbc.writeMem(0xcbd, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf9c8, gbc.sp());
        EXPECT(0xcbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 030F
        gbc.setState(0xe0c6, 0xe672, 0xa600, 0xd4bb, 0x5748, 0x1a78, 0x1, 0x0);
        gbc.writeMem(0xe0c6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe672, gbc.sp());
        EXPECT(0xe0c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c6));
        EXPECT(0x48, gbc.readMem(0xe0c7));
        // CB 48 0310
        gbc.setState(0x6658, 0x7d66, 0xb370, 0x2dc3, 0x77bd, 0x829a, 0x1, 0x1);
        gbc.writeMem(0x6658, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7d66, gbc.sp());
        EXPECT(0x665a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0311
        gbc.setState(0xd850, 0xebed, 0xff30, 0x1646, 0x8985, 0xc1bb, 0x1, 0x1);
        gbc.writeMem(0xd850, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xebed, gbc.sp());
        EXPECT(0xd852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd850));
        EXPECT(0x48, gbc.readMem(0xd851));
        // CB 48 0312
        gbc.setState(0x7517, 0xa543, 0x3110, 0xb616, 0x4f61, 0xd908, 0x1, 0x0);
        gbc.writeMem(0x7517, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa543, gbc.sp());
        EXPECT(0x7519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0313
        gbc.setState(0xb7be, 0x7b57, 0x33c0, 0xd131, 0x39e4, 0x86b4, 0x0, 0x1);
        gbc.writeMem(0xb7be, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7b57, gbc.sp());
        EXPECT(0xb7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7be));
        EXPECT(0x48, gbc.readMem(0xb7bf));
        // CB 48 0314
        gbc.setState(0xd9da, 0x7c1c, 0x2650, 0xc278, 0xd2c3, 0xcacb, 0x0, 0x1);
        gbc.writeMem(0xd9da, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7c1c, gbc.sp());
        EXPECT(0xd9dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9da));
        EXPECT(0x48, gbc.readMem(0xd9db));
        // CB 48 0316
        gbc.setState(0x8ddb, 0x83ba, 0x8070, 0x2829, 0x4f51, 0x69b6, 0x1, 0x1);
        gbc.writeMem(0x8ddb, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x83ba, gbc.sp());
        EXPECT(0x8ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ddb));
        EXPECT(0x48, gbc.readMem(0x8ddc));
        // CB 48 0317
        gbc.setState(0xd04c, 0x7d08, 0xb5b0, 0x2b5a, 0x1e09, 0xa5bd, 0x1, 0x1);
        gbc.writeMem(0xd04c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7d08, gbc.sp());
        EXPECT(0xd04e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd04c));
        EXPECT(0x48, gbc.readMem(0xd04d));
        // CB 48 0318
        gbc.setState(0x428f, 0x8985, 0xc6d0, 0xfa42, 0x9119, 0x65bf, 0x0, 0x0);
        gbc.writeMem(0x428f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8985, gbc.sp());
        EXPECT(0x4291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0319
        gbc.setState(0xd706, 0x5180, 0xdb10, 0x3fa, 0x46c6, 0xdc5d, 0x1, 0x1);
        gbc.writeMem(0xd706, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5180, gbc.sp());
        EXPECT(0xd708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd706));
        EXPECT(0x48, gbc.readMem(0xd707));
        // CB 48 031A
        gbc.setState(0xcb96, 0xea7d, 0x1020, 0xd574, 0x344d, 0x8d5f, 0x1, 0x0);
        gbc.writeMem(0xcb96, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xea7d, gbc.sp());
        EXPECT(0xcb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb96));
        EXPECT(0x48, gbc.readMem(0xcb97));
        // CB 48 031B
        gbc.setState(0x3cc3, 0xb69d, 0x5ab0, 0x155b, 0x8f4a, 0xbb6d, 0x1, 0x1);
        gbc.writeMem(0x3cc3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb69d, gbc.sp());
        EXPECT(0x3cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 031C
        gbc.setState(0xc2f9, 0x2faf, 0x31f0, 0x67df, 0x433f, 0xe07d, 0x0, 0x0);
        gbc.writeMem(0xc2f9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2faf, gbc.sp());
        EXPECT(0xc2fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f9));
        EXPECT(0x48, gbc.readMem(0xc2fa));
        // CB 48 031D
        gbc.setState(0xc576, 0x9462, 0x60d0, 0x1a49, 0x287b, 0x8e25, 0x0, 0x0);
        gbc.writeMem(0xc576, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9462, gbc.sp());
        EXPECT(0xc578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc576));
        EXPECT(0x48, gbc.readMem(0xc577));
        // CB 48 031E
        gbc.setState(0x51cd, 0x96f2, 0x4990, 0x9133, 0x1b41, 0xc7f4, 0x0, 0x1);
        gbc.writeMem(0x51cd, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x96f2, gbc.sp());
        EXPECT(0x51cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 031F
        gbc.setState(0x11a, 0xec7d, 0xe280, 0x98dd, 0x76a9, 0x9c74, 0x0, 0x1);
        gbc.writeMem(0x11a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xec7d, gbc.sp());
        EXPECT(0x11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0320
        gbc.setState(0x5eac, 0xc370, 0x8090, 0x7c34, 0xb2ae, 0xd9ce, 0x1, 0x0);
        gbc.writeMem(0x5eac, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc370, gbc.sp());
        EXPECT(0x5eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0321
        gbc.setState(0xbeb6, 0x358d, 0xfb40, 0xe07, 0x4f25, 0xa0e7, 0x0, 0x0);
        gbc.writeMem(0xbeb6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x358d, gbc.sp());
        EXPECT(0xbeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb6));
        EXPECT(0x48, gbc.readMem(0xbeb7));
        // CB 48 0322
        gbc.setState(0x43f0, 0x6415, 0x8e40, 0xc1a4, 0x60, 0x3798, 0x1, 0x1);
        gbc.writeMem(0x43f0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6415, gbc.sp());
        EXPECT(0x43f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0323
        gbc.setState(0xa7d9, 0x801f, 0x2040, 0xd4c, 0x70f4, 0x5cca, 0x0, 0x1);
        gbc.writeMem(0xa7d9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x801f, gbc.sp());
        EXPECT(0xa7db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d9));
        EXPECT(0x48, gbc.readMem(0xa7da));
        // CB 48 0324
        gbc.setState(0x5eb9, 0x2b34, 0xdad0, 0x9531, 0x3759, 0x9b76, 0x0, 0x0);
        gbc.writeMem(0x5eb9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2b34, gbc.sp());
        EXPECT(0x5ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0325
        gbc.setState(0x21bc, 0xa0bd, 0x9110, 0x7797, 0x384, 0xfaae, 0x1, 0x1);
        gbc.writeMem(0x21bc, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa0bd, gbc.sp());
        EXPECT(0x21be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0327
        gbc.setState(0x9b25, 0x7007, 0x5920, 0xec0, 0x651c, 0xecc, 0x0, 0x0);
        gbc.writeMem(0x9b25, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7007, gbc.sp());
        EXPECT(0x9b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b25));
        EXPECT(0x48, gbc.readMem(0x9b26));
        // CB 48 0328
        gbc.setState(0xd07, 0x3ea3, 0x4a0, 0x3383, 0x84bb, 0xb195, 0x0, 0x1);
        gbc.writeMem(0xd07, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3ea3, gbc.sp());
        EXPECT(0xd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0329
        gbc.setState(0x6318, 0xc499, 0xa690, 0xb710, 0xd524, 0xf53a, 0x1, 0x0);
        gbc.writeMem(0x6318, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc499, gbc.sp());
        EXPECT(0x631a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 032A
        gbc.setState(0xb79e, 0x1d94, 0xa680, 0xc223, 0x7645, 0xa0a8, 0x1, 0x0);
        gbc.writeMem(0xb79e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1d94, gbc.sp());
        EXPECT(0xb7a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79e));
        EXPECT(0x48, gbc.readMem(0xb79f));
        // CB 48 032C
        gbc.setState(0xb480, 0xc71e, 0x1c90, 0x1b4d, 0x25fe, 0xe40b, 0x1, 0x0);
        gbc.writeMem(0xb480, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc71e, gbc.sp());
        EXPECT(0xb482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb480));
        EXPECT(0x48, gbc.readMem(0xb481));
        // CB 48 032D
        gbc.setState(0x784a, 0xd52d, 0x2c10, 0x9d2e, 0x18a1, 0x5ba2, 0x1, 0x0);
        gbc.writeMem(0x784a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd52d, gbc.sp());
        EXPECT(0x784c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 032E
        gbc.setState(0xea4c, 0x5259, 0xef70, 0xbc53, 0x6875, 0x6095, 0x1, 0x1);
        gbc.writeMem(0xea4c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5259, gbc.sp());
        EXPECT(0xea4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea4c));
        EXPECT(0x48, gbc.readMem(0xea4d));
        // CB 48 0330
        gbc.setState(0x9489, 0xc793, 0xf8b0, 0x58b1, 0x7350, 0x92c, 0x0, 0x1);
        gbc.writeMem(0x9489, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc793, gbc.sp());
        EXPECT(0x948b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9489));
        EXPECT(0x48, gbc.readMem(0x948a));
        // CB 48 0331
        gbc.setState(0x41f9, 0xac30, 0x6190, 0x8ec3, 0xef7, 0x76d8, 0x0, 0x1);
        gbc.writeMem(0x41f9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xac30, gbc.sp());
        EXPECT(0x41fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0332
        gbc.setState(0x95e5, 0xa2fe, 0x7ed0, 0x75f5, 0x927c, 0xe817, 0x1, 0x1);
        gbc.writeMem(0x95e5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa2fe, gbc.sp());
        EXPECT(0x95e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e5));
        EXPECT(0x48, gbc.readMem(0x95e6));
        // CB 48 0333
        gbc.setState(0xbbc, 0xf7a1, 0x4f10, 0xa456, 0x5d40, 0x7dc2, 0x0, 0x0);
        gbc.writeMem(0xbbc, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf7a1, gbc.sp());
        EXPECT(0xbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0334
        gbc.setState(0x5f45, 0xc2ee, 0x6020, 0xd993, 0xf7d8, 0x1f56, 0x0, 0x1);
        gbc.writeMem(0x5f45, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc2ee, gbc.sp());
        EXPECT(0x5f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0335
        gbc.setState(0x7aa3, 0xf235, 0x12b0, 0x5126, 0xfaf9, 0xa3e6, 0x0, 0x1);
        gbc.writeMem(0x7aa3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf235, gbc.sp());
        EXPECT(0x7aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0336
        gbc.setState(0xb10b, 0xddc3, 0xbf10, 0xa9ad, 0x678e, 0x2b92, 0x1, 0x1);
        gbc.writeMem(0xb10b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xddc3, gbc.sp());
        EXPECT(0xb10d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10b));
        EXPECT(0x48, gbc.readMem(0xb10c));
        // CB 48 0337
        gbc.setState(0x2be8, 0x4861, 0x84b0, 0xc734, 0x315b, 0x1a14, 0x0, 0x1);
        gbc.writeMem(0x2be8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4861, gbc.sp());
        EXPECT(0x2bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0338
        gbc.setState(0xbece, 0x50e0, 0xc370, 0x7c95, 0x9cc7, 0xc14f, 0x1, 0x1);
        gbc.writeMem(0xbece, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x50e0, gbc.sp());
        EXPECT(0xbed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbece));
        EXPECT(0x48, gbc.readMem(0xbecf));
        // CB 48 0339
        gbc.setState(0x3d69, 0x916a, 0x8b90, 0x673b, 0xe6a2, 0x7729, 0x1, 0x0);
        gbc.writeMem(0x3d69, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x916a, gbc.sp());
        EXPECT(0x3d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 033A
        gbc.setState(0xdb2a, 0x1db7, 0xb510, 0x6123, 0xd0d5, 0x63d5, 0x0, 0x0);
        gbc.writeMem(0xdb2a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1db7, gbc.sp());
        EXPECT(0xdb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb2a));
        EXPECT(0x48, gbc.readMem(0xdb2b));
        // CB 48 033B
        gbc.setState(0xdf15, 0xab56, 0xf650, 0x6050, 0x677d, 0xb666, 0x0, 0x0);
        gbc.writeMem(0xdf15, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xab56, gbc.sp());
        EXPECT(0xdf17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf15));
        EXPECT(0x48, gbc.readMem(0xdf16));
        // CB 48 033C
        gbc.setState(0x513f, 0x3818, 0xc010, 0x8d2e, 0x58d5, 0x427, 0x1, 0x1);
        gbc.writeMem(0x513f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3818, gbc.sp());
        EXPECT(0x5141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 033D
        gbc.setState(0x6459, 0x1dab, 0x8120, 0x3cd1, 0x374e, 0x427d, 0x1, 0x1);
        gbc.writeMem(0x6459, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1dab, gbc.sp());
        EXPECT(0x645b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 033E
        gbc.setState(0x4761, 0xb78d, 0x2840, 0xc732, 0xf8bc, 0x14f0, 0x0, 0x1);
        gbc.writeMem(0x4761, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb78d, gbc.sp());
        EXPECT(0x4763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 033F
        gbc.setState(0x5d4d, 0x5cdc, 0x2d20, 0xe68c, 0x5ac3, 0x9dd3, 0x1, 0x1);
        gbc.writeMem(0x5d4d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5cdc, gbc.sp());
        EXPECT(0x5d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0340
        gbc.setState(0x114, 0x581, 0x35d0, 0x830d, 0xa9d7, 0x85da, 0x0, 0x0);
        gbc.writeMem(0x114, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x581, gbc.sp());
        EXPECT(0x116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0341
        gbc.setState(0xb6c4, 0xb3e3, 0xeda0, 0x6c31, 0x21f1, 0xf1ce, 0x0, 0x1);
        gbc.writeMem(0xb6c4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb3e3, gbc.sp());
        EXPECT(0xb6c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c4));
        EXPECT(0x48, gbc.readMem(0xb6c5));
        // CB 48 0342
        gbc.setState(0x339f, 0x3947, 0xa130, 0x104, 0x5abf, 0xead9, 0x1, 0x1);
        gbc.writeMem(0x339f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3947, gbc.sp());
        EXPECT(0x33a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0344
        gbc.setState(0x8a2, 0x53f6, 0xf610, 0x2e3, 0xb4db, 0x65f0, 0x0, 0x1);
        gbc.writeMem(0x8a2, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x53f6, gbc.sp());
        EXPECT(0x8a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0345
        gbc.setState(0xd01e, 0x7429, 0xfb80, 0xd4ac, 0x63c1, 0xf9b7, 0x0, 0x1);
        gbc.writeMem(0xd01e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7429, gbc.sp());
        EXPECT(0xd020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01e));
        EXPECT(0x48, gbc.readMem(0xd01f));
        // CB 48 0347
        gbc.setState(0x5490, 0x9492, 0x31c0, 0x4304, 0x8a17, 0x9e35, 0x1, 0x0);
        gbc.writeMem(0x5490, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9492, gbc.sp());
        EXPECT(0x5492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0348
        gbc.setState(0xc75c, 0xaa29, 0x2460, 0x857d, 0x5a9a, 0x3a5f, 0x1, 0x1);
        gbc.writeMem(0xc75c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xaa29, gbc.sp());
        EXPECT(0xc75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75c));
        EXPECT(0x48, gbc.readMem(0xc75d));
        // CB 48 0349
        gbc.setState(0x6bdb, 0x41ea, 0x3210, 0x8426, 0xe0b7, 0x14bd, 0x0, 0x0);
        gbc.writeMem(0x6bdb, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x41ea, gbc.sp());
        EXPECT(0x6bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 034A
        gbc.setState(0x27e9, 0xe02, 0xfb90, 0x70ab, 0x1857, 0x8334, 0x1, 0x0);
        gbc.writeMem(0x27e9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe02, gbc.sp());
        EXPECT(0x27eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 034C
        gbc.setState(0x8cca, 0x917a, 0xd060, 0xd5a8, 0xbaf, 0x822f, 0x0, 0x0);
        gbc.writeMem(0x8cca, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x917a, gbc.sp());
        EXPECT(0x8ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cca));
        EXPECT(0x48, gbc.readMem(0x8ccb));
        // CB 48 034D
        gbc.setState(0x19d7, 0x66e4, 0xc880, 0x291, 0x8942, 0x73e6, 0x1, 0x1);
        gbc.writeMem(0x19d7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x66e4, gbc.sp());
        EXPECT(0x19d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 034E
        gbc.setState(0x4c73, 0xe223, 0xac90, 0xfe2f, 0xb155, 0xd969, 0x1, 0x0);
        gbc.writeMem(0x4c73, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe223, gbc.sp());
        EXPECT(0x4c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 034F
        gbc.setState(0x4160, 0xcaa1, 0x9730, 0x573b, 0xa152, 0x3143, 0x1, 0x1);
        gbc.writeMem(0x4160, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcaa1, gbc.sp());
        EXPECT(0x4162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0350
        gbc.setState(0x4ef7, 0x6db1, 0xb5a0, 0x5cac, 0x1797, 0x4e6a, 0x0, 0x1);
        gbc.writeMem(0x4ef7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6db1, gbc.sp());
        EXPECT(0x4ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0351
        gbc.setState(0x1de8, 0x46af, 0x8b30, 0xc186, 0xd950, 0x3b22, 0x1, 0x1);
        gbc.writeMem(0x1de8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x46af, gbc.sp());
        EXPECT(0x1dea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0352
        gbc.setState(0xadd3, 0xa101, 0x8900, 0x94, 0x3f3b, 0x6868, 0x0, 0x1);
        gbc.writeMem(0xadd3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa101, gbc.sp());
        EXPECT(0xadd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd3));
        EXPECT(0x48, gbc.readMem(0xadd4));
        // CB 48 0353
        gbc.setState(0xc45f, 0x5f8b, 0x4330, 0xd88b, 0xfcb6, 0xce10, 0x1, 0x0);
        gbc.writeMem(0xc45f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5f8b, gbc.sp());
        EXPECT(0xc461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45f));
        EXPECT(0x48, gbc.readMem(0xc460));
        // CB 48 0354
        gbc.setState(0x63f8, 0x44de, 0x8ca0, 0xf4bc, 0x994a, 0xa440, 0x0, 0x1);
        gbc.writeMem(0x63f8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x44de, gbc.sp());
        EXPECT(0x63fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0355
        gbc.setState(0x6368, 0xc52, 0x6120, 0x5e90, 0x8871, 0x460c, 0x0, 0x0);
        gbc.writeMem(0x6368, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc52, gbc.sp());
        EXPECT(0x636a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0356
        gbc.setState(0x8e0d, 0x26ca, 0x9290, 0xdaef, 0x1e21, 0xfe9f, 0x1, 0x0);
        gbc.writeMem(0x8e0d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x26ca, gbc.sp());
        EXPECT(0x8e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0d));
        EXPECT(0x48, gbc.readMem(0x8e0e));
        // CB 48 0357
        gbc.setState(0xc51a, 0x71d1, 0xf6a0, 0xa34, 0x4878, 0x74aa, 0x1, 0x1);
        gbc.writeMem(0xc51a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x71d1, gbc.sp());
        EXPECT(0xc51c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc51a));
        EXPECT(0x48, gbc.readMem(0xc51b));
        // CB 48 0358
        gbc.setState(0xbcb5, 0xa1e9, 0xed70, 0x3e88, 0xda2c, 0x7dc3, 0x1, 0x0);
        gbc.writeMem(0xbcb5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa1e9, gbc.sp());
        EXPECT(0xbcb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb5));
        EXPECT(0x48, gbc.readMem(0xbcb6));
        // CB 48 0359
        gbc.setState(0xee70, 0xc9eb, 0x7860, 0xfb4f, 0x330d, 0xfa2, 0x0, 0x0);
        gbc.writeMem(0xee70, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc9eb, gbc.sp());
        EXPECT(0xee72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee70));
        EXPECT(0x48, gbc.readMem(0xee71));
        // CB 48 035A
        gbc.setState(0xf08, 0x9d86, 0x7360, 0x9afa, 0x3043, 0x9e4a, 0x0, 0x0);
        gbc.writeMem(0xf08, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9d86, gbc.sp());
        EXPECT(0xf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 035B
        gbc.setState(0x9d72, 0xcd91, 0xe000, 0x6ffc, 0xaf7b, 0x9cb0, 0x1, 0x1);
        gbc.writeMem(0x9d72, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcd91, gbc.sp());
        EXPECT(0x9d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d72));
        EXPECT(0x48, gbc.readMem(0x9d73));
        // CB 48 035C
        gbc.setState(0x55b3, 0xa228, 0x44b0, 0x6289, 0xaaf7, 0xc549, 0x1, 0x1);
        gbc.writeMem(0x55b3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa228, gbc.sp());
        EXPECT(0x55b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 035D
        gbc.setState(0x6332, 0x30f, 0x5a30, 0x712a, 0xa1ea, 0x1485, 0x1, 0x0);
        gbc.writeMem(0x6332, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x30f, gbc.sp());
        EXPECT(0x6334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 035E
        gbc.setState(0x4b9a, 0x9321, 0x16d0, 0x4449, 0x858f, 0xdc55, 0x1, 0x0);
        gbc.writeMem(0x4b9a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9321, gbc.sp());
        EXPECT(0x4b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 035F
        gbc.setState(0x94d6, 0x7d13, 0xb540, 0x1fed, 0x4e5a, 0xa054, 0x1, 0x0);
        gbc.writeMem(0x94d6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7d13, gbc.sp());
        EXPECT(0x94d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d6));
        EXPECT(0x48, gbc.readMem(0x94d7));
        // CB 48 0360
        gbc.setState(0x40db, 0xa148, 0xa150, 0x9d77, 0x5983, 0x89d4, 0x0, 0x1);
        gbc.writeMem(0x40db, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa148, gbc.sp());
        EXPECT(0x40dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0361
        gbc.setState(0x9b7d, 0x779, 0x23f0, 0x5565, 0xc716, 0xa09c, 0x1, 0x0);
        gbc.writeMem(0x9b7d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x779, gbc.sp());
        EXPECT(0x9b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b7d));
        EXPECT(0x48, gbc.readMem(0x9b7e));
        // CB 48 0362
        gbc.setState(0x3cfd, 0xaf94, 0x1ee0, 0x78db, 0xde05, 0x7abc, 0x0, 0x0);
        gbc.writeMem(0x3cfd, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaf94, gbc.sp());
        EXPECT(0x3cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0364
        gbc.setState(0xe53f, 0x6420, 0x24b0, 0x7440, 0x3061, 0x2398, 0x0, 0x1);
        gbc.writeMem(0xe53f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6420, gbc.sp());
        EXPECT(0xe541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53f));
        EXPECT(0x48, gbc.readMem(0xe540));
        // CB 48 0365
        gbc.setState(0x458f, 0xafa8, 0xe930, 0x3057, 0x6a5d, 0x187f, 0x1, 0x1);
        gbc.writeMem(0x458f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xafa8, gbc.sp());
        EXPECT(0x4591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0366
        gbc.setState(0xc16a, 0x4f3f, 0xc7e0, 0xbfed, 0xd014, 0x9b61, 0x1, 0x1);
        gbc.writeMem(0xc16a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4f3f, gbc.sp());
        EXPECT(0xc16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc16a));
        EXPECT(0x48, gbc.readMem(0xc16b));
        // CB 48 0367
        gbc.setState(0xc4f1, 0xeac3, 0xe6c0, 0xfa6f, 0x4508, 0xb85d, 0x1, 0x0);
        gbc.writeMem(0xc4f1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xeac3, gbc.sp());
        EXPECT(0xc4f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f1));
        EXPECT(0x48, gbc.readMem(0xc4f2));
        // CB 48 0369
        gbc.setState(0x6bbd, 0x7eb, 0x9150, 0xfd32, 0x808, 0x943, 0x1, 0x0);
        gbc.writeMem(0x6bbd, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7eb, gbc.sp());
        EXPECT(0x6bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 036A
        gbc.setState(0x3790, 0x75c4, 0x76d0, 0xbaaa, 0x1484, 0x81f1, 0x1, 0x0);
        gbc.writeMem(0x3790, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x75c4, gbc.sp());
        EXPECT(0x3792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 036B
        gbc.setState(0x3b76, 0x63d7, 0x3d40, 0x1b23, 0x3be0, 0x24fa, 0x1, 0x1);
        gbc.writeMem(0x3b76, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x63d7, gbc.sp());
        EXPECT(0x3b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 036C
        gbc.setState(0x38c7, 0x3bbb, 0x2760, 0x61ef, 0x27a7, 0x5168, 0x0, 0x1);
        gbc.writeMem(0x38c7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3bbb, gbc.sp());
        EXPECT(0x38c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 036D
        gbc.setState(0x6fe3, 0x30b6, 0x3080, 0xe7bc, 0x2d9e, 0x6833, 0x0, 0x0);
        gbc.writeMem(0x6fe3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x30b6, gbc.sp());
        EXPECT(0x6fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 036E
        gbc.setState(0x8a31, 0xe2a, 0x57c0, 0xc9c, 0x9bd0, 0x4351, 0x0, 0x0);
        gbc.writeMem(0x8a31, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe2a, gbc.sp());
        EXPECT(0x8a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a31));
        EXPECT(0x48, gbc.readMem(0x8a32));
        // CB 48 0370
        gbc.setState(0x3b2f, 0x7c52, 0xa950, 0x755f, 0x4842, 0xd6e8, 0x0, 0x0);
        gbc.writeMem(0x3b2f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7c52, gbc.sp());
        EXPECT(0x3b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0371
        gbc.setState(0xa626, 0xea80, 0xa640, 0x4e90, 0x6f2d, 0x5bce, 0x0, 0x0);
        gbc.writeMem(0xa626, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xea80, gbc.sp());
        EXPECT(0xa628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa626));
        EXPECT(0x48, gbc.readMem(0xa627));
        // CB 48 0372
        gbc.setState(0xb384, 0x69fc, 0x7260, 0xc101, 0x1ef3, 0x9830, 0x0, 0x0);
        gbc.writeMem(0xb384, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x69fc, gbc.sp());
        EXPECT(0xb386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb384));
        EXPECT(0x48, gbc.readMem(0xb385));
        // CB 48 0373
        gbc.setState(0xb4a1, 0x11bd, 0x3f60, 0xc238, 0xc0fd, 0xa5e6, 0x1, 0x1);
        gbc.writeMem(0xb4a1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x11bd, gbc.sp());
        EXPECT(0xb4a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a1));
        EXPECT(0x48, gbc.readMem(0xb4a2));
        // CB 48 0374
        gbc.setState(0xe7e5, 0x7516, 0xae90, 0x4f55, 0x641a, 0x38aa, 0x1, 0x1);
        gbc.writeMem(0xe7e5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7516, gbc.sp());
        EXPECT(0xe7e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e5));
        EXPECT(0x48, gbc.readMem(0xe7e6));
        // CB 48 0376
        gbc.setState(0x6276, 0x4177, 0x8aa0, 0x94f7, 0xbbd8, 0x715f, 0x1, 0x1);
        gbc.writeMem(0x6276, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4177, gbc.sp());
        EXPECT(0x6278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0377
        gbc.setState(0x287c, 0x8001, 0x1d10, 0x74d0, 0x3da7, 0x4f68, 0x0, 0x1);
        gbc.writeMem(0x287c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8001, gbc.sp());
        EXPECT(0x287e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0378
        gbc.setState(0x124f, 0x5d67, 0xb2c0, 0x2f38, 0xff20, 0x861c, 0x1, 0x0);
        gbc.writeMem(0x124f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5d67, gbc.sp());
        EXPECT(0x1251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0379
        gbc.setState(0xc54b, 0xff75, 0xb90, 0x2e1f, 0x26f4, 0xb2e2, 0x0, 0x0);
        gbc.writeMem(0xc54b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xff75, gbc.sp());
        EXPECT(0xc54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54b));
        EXPECT(0x48, gbc.readMem(0xc54c));
        // CB 48 037A
        gbc.setState(0xd9c7, 0x6f32, 0x2a80, 0xe0f2, 0xd225, 0x91e7, 0x1, 0x1);
        gbc.writeMem(0xd9c7, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6f32, gbc.sp());
        EXPECT(0xd9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c7));
        EXPECT(0x48, gbc.readMem(0xd9c8));
        // CB 48 037B
        gbc.setState(0x2521, 0x5595, 0x2d0, 0x85a8, 0x4ecb, 0xda02, 0x1, 0x0);
        gbc.writeMem(0x2521, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5595, gbc.sp());
        EXPECT(0x2523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 037D
        gbc.setState(0xdaef, 0x91b4, 0x4f00, 0xb9f4, 0xca0f, 0x8430, 0x1, 0x0);
        gbc.writeMem(0xdaef, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x91b4, gbc.sp());
        EXPECT(0xdaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaef));
        EXPECT(0x48, gbc.readMem(0xdaf0));
        // CB 48 037E
        gbc.setState(0x311c, 0xe830, 0x2dd0, 0x3334, 0x1553, 0xa038, 0x1, 0x0);
        gbc.writeMem(0x311c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe830, gbc.sp());
        EXPECT(0x311e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 037F
        gbc.setState(0x4869, 0x2bf0, 0x15a0, 0xbef0, 0xac11, 0xad2c, 0x1, 0x0);
        gbc.writeMem(0x4869, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2bf0, gbc.sp());
        EXPECT(0x486b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0380
        gbc.setState(0x2506, 0xbbeb, 0x40d0, 0x62c, 0xfb83, 0x753a, 0x1, 0x1);
        gbc.writeMem(0x2506, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbbeb, gbc.sp());
        EXPECT(0x2508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0381
        gbc.setState(0x9734, 0xad86, 0xcc0, 0x4887, 0xf14a, 0xf63c, 0x0, 0x0);
        gbc.writeMem(0x9734, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xad86, gbc.sp());
        EXPECT(0x9736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9734));
        EXPECT(0x48, gbc.readMem(0x9735));
        // CB 48 0382
        gbc.setState(0xabcc, 0xb437, 0x3e0, 0xfddb, 0xc69a, 0x77e5, 0x0, 0x1);
        gbc.writeMem(0xabcc, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb437, gbc.sp());
        EXPECT(0xabce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcc));
        EXPECT(0x48, gbc.readMem(0xabcd));
        // CB 48 0383
        gbc.setState(0x91d9, 0xedb7, 0xe340, 0xad3, 0xb35d, 0xdd8b, 0x1, 0x1);
        gbc.writeMem(0x91d9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xedb7, gbc.sp());
        EXPECT(0x91db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d9));
        EXPECT(0x48, gbc.readMem(0x91da));
        // CB 48 0384
        gbc.setState(0x2c05, 0x99a2, 0xee90, 0xdd0e, 0xea8b, 0x1876, 0x1, 0x0);
        gbc.writeMem(0x2c05, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x99a2, gbc.sp());
        EXPECT(0x2c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0385
        gbc.setState(0x9880, 0x3ea3, 0xb00, 0x685a, 0x9902, 0x92e7, 0x0, 0x1);
        gbc.writeMem(0x9880, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3ea3, gbc.sp());
        EXPECT(0x9882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9880));
        EXPECT(0x48, gbc.readMem(0x9881));
        // CB 48 0386
        gbc.setState(0x64ae, 0x237, 0x8650, 0x4f80, 0x27a3, 0x7e04, 0x1, 0x0);
        gbc.writeMem(0x64ae, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x237, gbc.sp());
        EXPECT(0x64b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0387
        gbc.setState(0x14d, 0xe847, 0xde40, 0x4fcd, 0xd7dd, 0x6bf1, 0x1, 0x0);
        gbc.writeMem(0x14d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe847, gbc.sp());
        EXPECT(0x14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0388
        gbc.setState(0x6fa4, 0x5f42, 0xe450, 0xc7c5, 0x8a31, 0xee25, 0x0, 0x1);
        gbc.writeMem(0x6fa4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5f42, gbc.sp());
        EXPECT(0x6fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0389
        gbc.setState(0xcbac, 0xb894, 0x50f0, 0x3d1d, 0x1458, 0x2923, 0x0, 0x0);
        gbc.writeMem(0xcbac, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb894, gbc.sp());
        EXPECT(0xcbae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbac));
        EXPECT(0x48, gbc.readMem(0xcbad));
        // CB 48 038A
        gbc.setState(0xcc19, 0x5d5d, 0x4ac0, 0xb599, 0x8a6e, 0x1bca, 0x1, 0x1);
        gbc.writeMem(0xcc19, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5d5d, gbc.sp());
        EXPECT(0xcc1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc19));
        EXPECT(0x48, gbc.readMem(0xcc1a));
        // CB 48 038B
        gbc.setState(0x4a1e, 0xb2bc, 0x63b0, 0x3aa9, 0x3b67, 0x7b97, 0x0, 0x0);
        gbc.writeMem(0x4a1e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb2bc, gbc.sp());
        EXPECT(0x4a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 038C
        gbc.setState(0x2847, 0xf162, 0xbee0, 0x6f29, 0x665f, 0x1e4a, 0x1, 0x1);
        gbc.writeMem(0x2847, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf162, gbc.sp());
        EXPECT(0x2849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 038D
        gbc.setState(0x6d8f, 0x136f, 0xefc0, 0xae7d, 0x2458, 0x7608, 0x1, 0x0);
        gbc.writeMem(0x6d8f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x136f, gbc.sp());
        EXPECT(0x6d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 038E
        gbc.setState(0xab28, 0x3ef3, 0x8540, 0xb6f9, 0x3a05, 0x9e18, 0x0, 0x0);
        gbc.writeMem(0xab28, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3ef3, gbc.sp());
        EXPECT(0xab2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab28));
        EXPECT(0x48, gbc.readMem(0xab29));
        // CB 48 038F
        gbc.setState(0xce1a, 0xfc2f, 0x5c90, 0xcad0, 0xd354, 0xbbe9, 0x1, 0x0);
        gbc.writeMem(0xce1a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfc2f, gbc.sp());
        EXPECT(0xce1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1a));
        EXPECT(0x48, gbc.readMem(0xce1b));
        // CB 48 0390
        gbc.setState(0xb0e9, 0x2f5f, 0xede0, 0xee7e, 0xf61c, 0x3fbb, 0x0, 0x1);
        gbc.writeMem(0xb0e9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2f5f, gbc.sp());
        EXPECT(0xb0eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e9));
        EXPECT(0x48, gbc.readMem(0xb0ea));
        // CB 48 0391
        gbc.setState(0x4368, 0xad41, 0xd10, 0x5436, 0x8848, 0x765a, 0x0, 0x0);
        gbc.writeMem(0x4368, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xad41, gbc.sp());
        EXPECT(0x436a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 0392
        gbc.setState(0x221f, 0x759d, 0x3840, 0x31b4, 0xb34, 0xf79, 0x0, 0x1);
        gbc.writeMem(0x221f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x759d, gbc.sp());
        EXPECT(0x2221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0393
        gbc.setState(0x8e52, 0xd0f3, 0x31a0, 0xc278, 0x3eca, 0x5db9, 0x1, 0x0);
        gbc.writeMem(0x8e52, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd0f3, gbc.sp());
        EXPECT(0x8e54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e52));
        EXPECT(0x48, gbc.readMem(0x8e53));
        // CB 48 0394
        gbc.setState(0xb33b, 0xc02b, 0x6330, 0x99b9, 0xb20, 0x5617, 0x0, 0x1);
        gbc.writeMem(0xb33b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc02b, gbc.sp());
        EXPECT(0xb33d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb33b));
        EXPECT(0x48, gbc.readMem(0xb33c));
        // CB 48 0395
        gbc.setState(0x6a3c, 0xb592, 0x9d60, 0x893a, 0x2665, 0x8b79, 0x0, 0x1);
        gbc.writeMem(0x6a3c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb592, gbc.sp());
        EXPECT(0x6a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0396
        gbc.setState(0xac82, 0x7c2f, 0xdea0, 0xb095, 0xa224, 0x2db, 0x0, 0x0);
        gbc.writeMem(0xac82, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7c2f, gbc.sp());
        EXPECT(0xac84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac82));
        EXPECT(0x48, gbc.readMem(0xac83));
        // CB 48 0397
        gbc.setState(0x592a, 0x3aef, 0x9860, 0x4061, 0x44d0, 0x8313, 0x1, 0x0);
        gbc.writeMem(0x592a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3aef, gbc.sp());
        EXPECT(0x592c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 0399
        gbc.setState(0xa643, 0x8cd0, 0x7500, 0xda7, 0xd365, 0x8e02, 0x0, 0x1);
        gbc.writeMem(0xa643, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8cd0, gbc.sp());
        EXPECT(0xa645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa643));
        EXPECT(0x48, gbc.readMem(0xa644));
        // CB 48 039A
        gbc.setState(0x5bfe, 0x3b52, 0x3150, 0xefe9, 0x6983, 0xf146, 0x0, 0x0);
        gbc.writeMem(0x5bfe, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3b52, gbc.sp());
        EXPECT(0x5c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 039B
        gbc.setState(0xdc50, 0x34a5, 0xebf0, 0x3625, 0x1f31, 0xef49, 0x1, 0x0);
        gbc.writeMem(0xdc50, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x34a5, gbc.sp());
        EXPECT(0xdc52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc50));
        EXPECT(0x48, gbc.readMem(0xdc51));
        // CB 48 039C
        gbc.setState(0x5013, 0x21d1, 0x1d50, 0xd7f3, 0xb254, 0x3a03, 0x0, 0x1);
        gbc.writeMem(0x5013, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x21d1, gbc.sp());
        EXPECT(0x5015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 039D
        gbc.setState(0x150, 0x82de, 0xa5d0, 0x1c22, 0xeccb, 0xae39, 0x0, 0x1);
        gbc.writeMem(0x150, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x82de, gbc.sp());
        EXPECT(0x152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 039E
        gbc.setState(0xb32a, 0xce76, 0xe570, 0xb813, 0xeb89, 0x9163, 0x1, 0x0);
        gbc.writeMem(0xb32a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xce76, gbc.sp());
        EXPECT(0xb32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32a));
        EXPECT(0x48, gbc.readMem(0xb32b));
        // CB 48 03A1
        gbc.setState(0xad94, 0xef15, 0x5140, 0x55b4, 0x16f, 0x41b9, 0x1, 0x0);
        gbc.writeMem(0xad94, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xef15, gbc.sp());
        EXPECT(0xad96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad94));
        EXPECT(0x48, gbc.readMem(0xad95));
        // CB 48 03A2
        gbc.setState(0x8c69, 0xde0a, 0x3430, 0x7e80, 0xd7e8, 0x15b6, 0x0, 0x1);
        gbc.writeMem(0x8c69, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xde0a, gbc.sp());
        EXPECT(0x8c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c69));
        EXPECT(0x48, gbc.readMem(0x8c6a));
        // CB 48 03A3
        gbc.setState(0xb1b4, 0x316a, 0xdc50, 0x162e, 0xf7a1, 0xbb02, 0x0, 0x0);
        gbc.writeMem(0xb1b4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x316a, gbc.sp());
        EXPECT(0xb1b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b4));
        EXPECT(0x48, gbc.readMem(0xb1b5));
        // CB 48 03A4
        gbc.setState(0xceb5, 0x590, 0x9f60, 0xa21f, 0x30ce, 0xa7aa, 0x1, 0x1);
        gbc.writeMem(0xceb5, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x590, gbc.sp());
        EXPECT(0xceb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb5));
        EXPECT(0x48, gbc.readMem(0xceb6));
        // CB 48 03A5
        gbc.setState(0x2b36, 0x8d39, 0x2840, 0xaa62, 0x1c71, 0x679c, 0x1, 0x0);
        gbc.writeMem(0x2b36, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8d39, gbc.sp());
        EXPECT(0x2b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03A6
        gbc.setState(0xb84d, 0x3ac, 0x1d10, 0x23ac, 0xc133, 0x5ece, 0x0, 0x1);
        gbc.writeMem(0xb84d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3ac, gbc.sp());
        EXPECT(0xb84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb84d));
        EXPECT(0x48, gbc.readMem(0xb84e));
        // CB 48 03A7
        gbc.setState(0x89b8, 0x1d42, 0x8c00, 0x2e0f, 0xcf04, 0xab6e, 0x1, 0x1);
        gbc.writeMem(0x89b8, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1d42, gbc.sp());
        EXPECT(0x89ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b8));
        EXPECT(0x48, gbc.readMem(0x89b9));
        // CB 48 03A8
        gbc.setState(0xb24f, 0xa118, 0x2240, 0x949d, 0x9b86, 0x3310, 0x0, 0x1);
        gbc.writeMem(0xb24f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa118, gbc.sp());
        EXPECT(0xb251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb24f));
        EXPECT(0x48, gbc.readMem(0xb250));
        // CB 48 03AA
        gbc.setState(0x1466, 0x357e, 0x3840, 0x3783, 0x9db3, 0x7096, 0x0, 0x1);
        gbc.writeMem(0x1466, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x357e, gbc.sp());
        EXPECT(0x1468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03AB
        gbc.setState(0x3583, 0x51d5, 0x93b0, 0x45e1, 0x230b, 0x2f36, 0x0, 0x0);
        gbc.writeMem(0x3583, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x51d5, gbc.sp());
        EXPECT(0x3585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03AC
        gbc.setState(0x5088, 0xf02e, 0x5ef0, 0x6ab, 0x67ee, 0x68ac, 0x1, 0x0);
        gbc.writeMem(0x5088, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf02e, gbc.sp());
        EXPECT(0x508a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03AD
        gbc.setState(0x724b, 0x6e3d, 0x6ee0, 0xfe33, 0x148, 0x556f, 0x1, 0x0);
        gbc.writeMem(0x724b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6e3d, gbc.sp());
        EXPECT(0x724d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03AE
        gbc.setState(0xc7ce, 0x1a49, 0x7080, 0xdad3, 0xb72, 0xc5ba, 0x0, 0x1);
        gbc.writeMem(0xc7ce, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1a49, gbc.sp());
        EXPECT(0xc7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ce));
        EXPECT(0x48, gbc.readMem(0xc7cf));
        // CB 48 03AF
        gbc.setState(0xe986, 0x9762, 0x7600, 0x803f, 0x42a0, 0x40bc, 0x0, 0x1);
        gbc.writeMem(0xe986, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9762, gbc.sp());
        EXPECT(0xe988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe986));
        EXPECT(0x48, gbc.readMem(0xe987));
        // CB 48 03B0
        gbc.setState(0x355a, 0xb652, 0x48a0, 0x3059, 0xcd48, 0x9053, 0x0, 0x0);
        gbc.writeMem(0x355a, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb652, gbc.sp());
        EXPECT(0x355c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03B1
        gbc.setState(0x34c3, 0xebd5, 0xa3f0, 0xc2ff, 0xefe0, 0xcca1, 0x1, 0x0);
        gbc.writeMem(0x34c3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xebd5, gbc.sp());
        EXPECT(0x34c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03B2
        gbc.setState(0x90ae, 0xf89a, 0xec60, 0x6ff7, 0xbc4e, 0xc5c7, 0x0, 0x0);
        gbc.writeMem(0x90ae, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf89a, gbc.sp());
        EXPECT(0x90b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ae));
        EXPECT(0x48, gbc.readMem(0x90af));
        // CB 48 03B3
        gbc.setState(0xc433, 0x65e3, 0x3b30, 0xc385, 0x1e3e, 0x388b, 0x0, 0x1);
        gbc.writeMem(0xc433, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x65e3, gbc.sp());
        EXPECT(0xc435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc433));
        EXPECT(0x48, gbc.readMem(0xc434));
        // CB 48 03B4
        gbc.setState(0xe732, 0x8f12, 0x4510, 0x4fbd, 0x3202, 0xbe53, 0x0, 0x0);
        gbc.writeMem(0xe732, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8f12, gbc.sp());
        EXPECT(0xe734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe732));
        EXPECT(0x48, gbc.readMem(0xe733));
        // CB 48 03B5
        gbc.setState(0xc9d, 0x3062, 0x430, 0x81be, 0x6553, 0x6cb8, 0x1, 0x0);
        gbc.writeMem(0xc9d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3062, gbc.sp());
        EXPECT(0xc9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03B6
        gbc.setState(0xcc7b, 0x7676, 0x2b00, 0x19de, 0x65a7, 0x8dbc, 0x1, 0x0);
        gbc.writeMem(0xcc7b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7676, gbc.sp());
        EXPECT(0xcc7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7b));
        EXPECT(0x48, gbc.readMem(0xcc7c));
        // CB 48 03B7
        gbc.setState(0x6cb4, 0xf3ac, 0x2c40, 0xb3c4, 0x9891, 0xb946, 0x1, 0x0);
        gbc.writeMem(0x6cb4, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf3ac, gbc.sp());
        EXPECT(0x6cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03B8
        gbc.setState(0x9d2e, 0x133, 0xfae0, 0xffe1, 0x57aa, 0x656f, 0x0, 0x0);
        gbc.writeMem(0x9d2e, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x133, gbc.sp());
        EXPECT(0x9d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2e));
        EXPECT(0x48, gbc.readMem(0x9d2f));
        // CB 48 03B9
        gbc.setState(0x5b96, 0x721e, 0x78e0, 0x7c37, 0x97f7, 0xa19b, 0x0, 0x1);
        gbc.writeMem(0x5b96, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x721e, gbc.sp());
        EXPECT(0x5b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03BA
        gbc.setState(0x6ec0, 0xdd4a, 0x7e70, 0x62d8, 0xf799, 0x7e20, 0x0, 0x1);
        gbc.writeMem(0x6ec0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdd4a, gbc.sp());
        EXPECT(0x6ec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03BB
        gbc.setState(0xe8e1, 0x4139, 0x7900, 0xe875, 0x1bde, 0x668f, 0x0, 0x0);
        gbc.writeMem(0xe8e1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4139, gbc.sp());
        EXPECT(0xe8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e1));
        EXPECT(0x48, gbc.readMem(0xe8e2));
        // CB 48 03BC
        gbc.setState(0x48d6, 0x2161, 0xf220, 0x4f54, 0x6158, 0x600b, 0x0, 0x0);
        gbc.writeMem(0x48d6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2161, gbc.sp());
        EXPECT(0x48d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03BD
        gbc.setState(0x5357, 0xb51b, 0x51e0, 0x2c46, 0x79c8, 0xe2ed, 0x0, 0x1);
        gbc.writeMem(0x5357, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb51b, gbc.sp());
        EXPECT(0x5359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03BE
        gbc.setState(0xb6c3, 0xefdf, 0x1f10, 0x4e6a, 0xab3f, 0x7e51, 0x0, 0x0);
        gbc.writeMem(0xb6c3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xefdf, gbc.sp());
        EXPECT(0xb6c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c3));
        EXPECT(0x48, gbc.readMem(0xb6c4));
        // CB 48 03BF
        gbc.setState(0x6fae, 0xbb6b, 0x2db0, 0x8814, 0xe6, 0xf449, 0x1, 0x1);
        gbc.writeMem(0x6fae, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbb6b, gbc.sp());
        EXPECT(0x6fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03C0
        gbc.setState(0xb241, 0x672e, 0x88a0, 0xd5e4, 0x1087, 0xf8a5, 0x0, 0x0);
        gbc.writeMem(0xb241, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x672e, gbc.sp());
        EXPECT(0xb243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb241));
        EXPECT(0x48, gbc.readMem(0xb242));
        // CB 48 03C1
        gbc.setState(0x8c4b, 0x9f8c, 0x1760, 0x6cbc, 0x15e7, 0xd0d, 0x0, 0x1);
        gbc.writeMem(0x8c4b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9f8c, gbc.sp());
        EXPECT(0x8c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c4b));
        EXPECT(0x48, gbc.readMem(0x8c4c));
        // CB 48 03C2
        gbc.setState(0xdefb, 0xe358, 0x9e60, 0xebc1, 0x74ea, 0x753d, 0x1, 0x1);
        gbc.writeMem(0xdefb, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe358, gbc.sp());
        EXPECT(0xdefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdefb));
        EXPECT(0x48, gbc.readMem(0xdefc));
        // CB 48 03C3
        gbc.setState(0x2d5c, 0x851e, 0x7970, 0x9f0d, 0x48ec, 0xd7e, 0x1, 0x1);
        gbc.writeMem(0x2d5c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x851e, gbc.sp());
        EXPECT(0x2d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03C4
        gbc.setState(0x18ca, 0x9e9b, 0xb2b0, 0x1de5, 0xa5f6, 0xfa18, 0x0, 0x1);
        gbc.writeMem(0x18ca, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9e9b, gbc.sp());
        EXPECT(0x18cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03C5
        gbc.setState(0x72bf, 0x7c0, 0x1e40, 0x4553, 0x9b83, 0x4be3, 0x0, 0x1);
        gbc.writeMem(0x72bf, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7c0, gbc.sp());
        EXPECT(0x72c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03C6
        gbc.setState(0xd835, 0x952a, 0xfbe0, 0x2782, 0xd924, 0xba50, 0x0, 0x0);
        gbc.writeMem(0xd835, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x952a, gbc.sp());
        EXPECT(0xd837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd835));
        EXPECT(0x48, gbc.readMem(0xd836));
        // CB 48 03C7
        gbc.setState(0xd683, 0x2e3, 0x4bd0, 0x76bb, 0x9a16, 0x2a82, 0x0, 0x0);
        gbc.writeMem(0xd683, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2e3, gbc.sp());
        EXPECT(0xd685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd683));
        EXPECT(0x48, gbc.readMem(0xd684));
        // CB 48 03C8
        gbc.setState(0x9cd6, 0x909d, 0xe9d0, 0x636d, 0x4f85, 0xf3ad, 0x1, 0x1);
        gbc.writeMem(0x9cd6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x909d, gbc.sp());
        EXPECT(0x9cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd6));
        EXPECT(0x48, gbc.readMem(0x9cd7));
        // CB 48 03C9
        gbc.setState(0xbeac, 0xb273, 0xcb40, 0xf31, 0x107c, 0xd968, 0x0, 0x1);
        gbc.writeMem(0xbeac, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb273, gbc.sp());
        EXPECT(0xbeae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeac));
        EXPECT(0x48, gbc.readMem(0xbead));
        // CB 48 03CA
        gbc.setState(0xe5cc, 0xb8b5, 0x750, 0x8e64, 0xae19, 0x54ee, 0x1, 0x0);
        gbc.writeMem(0xe5cc, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb8b5, gbc.sp());
        EXPECT(0xe5ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5cc));
        EXPECT(0x48, gbc.readMem(0xe5cd));
        // CB 48 03CB
        gbc.setState(0xc849, 0x7c88, 0xb5d0, 0x1d61, 0x2934, 0x4805, 0x1, 0x0);
        gbc.writeMem(0xc849, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7c88, gbc.sp());
        EXPECT(0xc84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc849));
        EXPECT(0x48, gbc.readMem(0xc84a));
        // CB 48 03CC
        gbc.setState(0x5872, 0x2ca4, 0xb9b0, 0xc7d5, 0xe960, 0xb347, 0x0, 0x1);
        gbc.writeMem(0x5872, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2ca4, gbc.sp());
        EXPECT(0x5874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03CD
        gbc.setState(0xd74b, 0xd061, 0xbb30, 0xcd60, 0x6d72, 0x5186, 0x1, 0x1);
        gbc.writeMem(0xd74b, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd061, gbc.sp());
        EXPECT(0xd74d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd74b));
        EXPECT(0x48, gbc.readMem(0xd74c));
        // CB 48 03CE
        gbc.setState(0xb3bb, 0x7dfd, 0x64a0, 0x1a6e, 0xbe8a, 0x2338, 0x1, 0x1);
        gbc.writeMem(0xb3bb, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7dfd, gbc.sp());
        EXPECT(0xb3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bb));
        EXPECT(0x48, gbc.readMem(0xb3bc));
        // CB 48 03CF
        gbc.setState(0x5e29, 0x52e5, 0xd580, 0x13fa, 0xb3eb, 0x27f5, 0x0, 0x1);
        gbc.writeMem(0x5e29, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x52e5, gbc.sp());
        EXPECT(0x5e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03D0
        gbc.setState(0x742c, 0x778a, 0xf580, 0xdf8a, 0x55c, 0xe09c, 0x0, 0x1);
        gbc.writeMem(0x742c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x778a, gbc.sp());
        EXPECT(0x742e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03D1
        gbc.setState(0x18b9, 0x2ab9, 0x8890, 0xda8b, 0x7cf5, 0x2a92, 0x0, 0x1);
        gbc.writeMem(0x18b9, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2ab9, gbc.sp());
        EXPECT(0x18bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03D2
        gbc.setState(0xea95, 0x6293, 0xdc60, 0xdbed, 0x1fac, 0xd93, 0x0, 0x1);
        gbc.writeMem(0xea95, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6293, gbc.sp());
        EXPECT(0xea97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea95));
        EXPECT(0x48, gbc.readMem(0xea96));
        // CB 48 03D3
        gbc.setState(0x7995, 0x322e, 0xe340, 0x58cd, 0xc79c, 0x5af6, 0x0, 0x1);
        gbc.writeMem(0x7995, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x322e, gbc.sp());
        EXPECT(0x7997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03D4
        gbc.setState(0xa076, 0x5200, 0x1a40, 0x605e, 0x868e, 0xd3c, 0x1, 0x1);
        gbc.writeMem(0xa076, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5200, gbc.sp());
        EXPECT(0xa078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa076));
        EXPECT(0x48, gbc.readMem(0xa077));
        // CB 48 03D5
        gbc.setState(0x7754, 0xe0b8, 0xd320, 0xad80, 0xe5eb, 0x803f, 0x1, 0x0);
        gbc.writeMem(0x7754, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe0b8, gbc.sp());
        EXPECT(0x7756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03D6
        gbc.setState(0xcbf0, 0xac34, 0xc6d0, 0xe2b, 0x86bb, 0x99b6, 0x0, 0x0);
        gbc.writeMem(0xcbf0, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xac34, gbc.sp());
        EXPECT(0xcbf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf0));
        EXPECT(0x48, gbc.readMem(0xcbf1));
        // CB 48 03D7
        gbc.setState(0x331f, 0xd923, 0xb810, 0x8104, 0xb3a0, 0xc2f6, 0x1, 0x0);
        gbc.writeMem(0x331f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd923, gbc.sp());
        EXPECT(0x3321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03D8
        gbc.setState(0xcf6f, 0x5006, 0x5310, 0x71ad, 0xf30, 0x1d6a, 0x1, 0x0);
        gbc.writeMem(0xcf6f, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5006, gbc.sp());
        EXPECT(0xcf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6f));
        EXPECT(0x48, gbc.readMem(0xcf70));
        // CB 48 03D9
        gbc.setState(0x779c, 0x39fc, 0x7a30, 0x7440, 0xd439, 0x5725, 0x0, 0x1);
        gbc.writeMem(0x779c, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x39fc, gbc.sp());
        EXPECT(0x779e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03DA
        gbc.setState(0x4df1, 0x255a, 0x6b40, 0x42c1, 0xf1ef, 0x773d, 0x1, 0x0);
        gbc.writeMem(0x4df1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x255a, gbc.sp());
        EXPECT(0x4df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03DB
        gbc.setState(0x2162, 0xf529, 0x4e40, 0x321, 0xe9d5, 0xa8e9, 0x1, 0x1);
        gbc.writeMem(0x2162, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf529, gbc.sp());
        EXPECT(0x2164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03DC
        gbc.setState(0xc4e6, 0x93df, 0x4870, 0xb3b2, 0xe1a2, 0xe812, 0x0, 0x0);
        gbc.writeMem(0xc4e6, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x93df, gbc.sp());
        EXPECT(0xc4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e6));
        EXPECT(0x48, gbc.readMem(0xc4e7));
        // CB 48 03DD
        gbc.setState(0x9f8d, 0xd81e, 0xc7b0, 0x7396, 0x4315, 0x7e14, 0x1, 0x0);
        gbc.writeMem(0x9f8d, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd81e, gbc.sp());
        EXPECT(0x9f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f8d));
        EXPECT(0x48, gbc.readMem(0x9f8e));
        // CB 48 03DE
        gbc.setState(0x6ce1, 0x1f4b, 0xba30, 0xb6e5, 0x1693, 0x76ad, 0x1, 0x0);
        gbc.writeMem(0x6ce1, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1f4b, gbc.sp());
        EXPECT(0x6ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03DF
        gbc.setState(0x4f07, 0x45a5, 0xd30, 0x521d, 0xb26b, 0xf54e, 0x1, 0x1);
        gbc.writeMem(0x4f07, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x45a5, gbc.sp());
        EXPECT(0x4f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03E0
        gbc.setState(0x5b50, 0xe0e8, 0x4f80, 0x4ec8, 0xaec5, 0xc45, 0x1, 0x1);
        gbc.writeMem(0x5b50, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe0e8, gbc.sp());
        EXPECT(0x5b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03E1
        gbc.setState(0x6697, 0x5914, 0x1130, 0x6e13, 0xbb7, 0x1784, 0x1, 0x1);
        gbc.writeMem(0x6697, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5914, gbc.sp());
        EXPECT(0x6699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 48 03E2
        gbc.setState(0xeb98, 0x8c14, 0xcca0, 0xcb32, 0x96c3, 0xa049, 0x1, 0x0);
        gbc.writeMem(0xeb98, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8c14, gbc.sp());
        EXPECT(0xeb9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb98));
        EXPECT(0x48, gbc.readMem(0xeb99));
        // CB 48 03E3
        gbc.setState(0x3ad3, 0x17eb, 0x4560, 0xabf9, 0xba11, 0x7451, 0x1, 0x0);
        gbc.writeMem(0x3ad3, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x17eb, gbc.sp());
        EXPECT(0x3ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03E4
        gbc.setState(0x5078, 0x8971, 0x1fe0, 0x85da, 0xfc65, 0xffc9, 0x0, 0x1);
        gbc.writeMem(0x5078, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8971, gbc.sp());
        EXPECT(0x507a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03E5
        gbc.setState(0x243, 0x9d7c, 0xf6a0, 0x9d1a, 0x14d1, 0x21c1, 0x1, 0x0);
        gbc.writeMem(0x243, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9d7c, gbc.sp());
        EXPECT(0x245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 48 03E6
        gbc.setState(0x8a74, 0xcbf4, 0x6ca0, 0x482e, 0xb39f, 0x8bf9, 0x0, 0x1);
        gbc.writeMem(0x8a74, { 0xcb, 0x48 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcbf4, gbc.sp());
        EXPECT(0x8a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a74));
        EXPECT(0x48, gbc.readMem(0x8a75));
    }
