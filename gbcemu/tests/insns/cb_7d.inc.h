    TEST(gbcemu, opcode_cb_7d) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 7D 0000
        gbc.setState(0xc93d, 0x6ff5, 0x3820, 0x8d4e, 0xf9b, 0x6eef, 0x1, 0x1);
        gbc.writeMem(0xc93d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6ff5, gbc.sp());
        EXPECT(0xc93f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93d));
        EXPECT(0x7d, gbc.readMem(0xc93e));
        // CB 7D 0001
        gbc.setState(0xa9fa, 0xf6e7, 0x4ee0, 0xd1b8, 0xa984, 0x2765, 0x1, 0x1);
        gbc.writeMem(0xa9fa, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf6e7, gbc.sp());
        EXPECT(0xa9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9fa));
        EXPECT(0x7d, gbc.readMem(0xa9fb));
        // CB 7D 0002
        gbc.setState(0x27fa, 0x9448, 0x8df0, 0xfd0f, 0xe15e, 0x59bc, 0x1, 0x0);
        gbc.writeMem(0x27fa, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9448, gbc.sp());
        EXPECT(0x27fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0003
        gbc.setState(0x65f9, 0x710c, 0x9ef0, 0xd085, 0xf36a, 0xcdf0, 0x1, 0x0);
        gbc.writeMem(0x65f9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x710c, gbc.sp());
        EXPECT(0x65fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0004
        gbc.setState(0x8edd, 0x3223, 0xd090, 0x4038, 0xe8b0, 0xe5ce, 0x1, 0x1);
        gbc.writeMem(0x8edd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3223, gbc.sp());
        EXPECT(0x8edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8edd));
        EXPECT(0x7d, gbc.readMem(0x8ede));
        // CB 7D 0005
        gbc.setState(0xd07, 0x3958, 0x9000, 0x262e, 0x85a5, 0x16f3, 0x0, 0x1);
        gbc.writeMem(0xd07, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3958, gbc.sp());
        EXPECT(0xd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0007
        gbc.setState(0x748a, 0x9ca5, 0x9560, 0xbffd, 0x925, 0x9a1f, 0x1, 0x1);
        gbc.writeMem(0x748a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9ca5, gbc.sp());
        EXPECT(0x748c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0008
        gbc.setState(0xb8de, 0x3ea0, 0x5560, 0x91d2, 0xc74a, 0x4d22, 0x1, 0x1);
        gbc.writeMem(0xb8de, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3ea0, gbc.sp());
        EXPECT(0xb8e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8de));
        EXPECT(0x7d, gbc.readMem(0xb8df));
        // CB 7D 0009
        gbc.setState(0xe18d, 0x9d7f, 0xcf80, 0x2826, 0x75c5, 0xf9b3, 0x1, 0x1);
        gbc.writeMem(0xe18d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9d7f, gbc.sp());
        EXPECT(0xe18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18d));
        EXPECT(0x7d, gbc.readMem(0xe18e));
        // CB 7D 000A
        gbc.setState(0x2167, 0x2f0a, 0x97e0, 0x7362, 0xb102, 0xc6d2, 0x0, 0x1);
        gbc.writeMem(0x2167, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2f0a, gbc.sp());
        EXPECT(0x2169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 000B
        gbc.setState(0xa199, 0xcae3, 0xf670, 0x4a7b, 0xbee4, 0xc04f, 0x1, 0x1);
        gbc.writeMem(0xa199, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcae3, gbc.sp());
        EXPECT(0xa19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa199));
        EXPECT(0x7d, gbc.readMem(0xa19a));
        // CB 7D 000D
        gbc.setState(0xcbb6, 0x3a22, 0x8730, 0x19ef, 0x5bf0, 0x5490, 0x0, 0x1);
        gbc.writeMem(0xcbb6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3a22, gbc.sp());
        EXPECT(0xcbb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb6));
        EXPECT(0x7d, gbc.readMem(0xcbb7));
        // CB 7D 000F
        gbc.setState(0x3ef2, 0xf67b, 0xfdd0, 0xe84, 0x177f, 0x3a9d, 0x0, 0x0);
        gbc.writeMem(0x3ef2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf67b, gbc.sp());
        EXPECT(0x3ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0010
        gbc.setState(0xa700, 0xf6b8, 0xc3f0, 0xb89e, 0x555, 0x2b81, 0x1, 0x0);
        gbc.writeMem(0xa700, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf6b8, gbc.sp());
        EXPECT(0xa702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa700));
        EXPECT(0x7d, gbc.readMem(0xa701));
        // CB 7D 0011
        gbc.setState(0x14b8, 0xa5f2, 0xcb50, 0x1147, 0x9559, 0xda31, 0x1, 0x0);
        gbc.writeMem(0x14b8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa5f2, gbc.sp());
        EXPECT(0x14ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0012
        gbc.setState(0x75dc, 0xcae2, 0x44b0, 0x35bd, 0xf459, 0x14f2, 0x0, 0x1);
        gbc.writeMem(0x75dc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcae2, gbc.sp());
        EXPECT(0x75de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0013
        gbc.setState(0xd87d, 0x3fc9, 0x50, 0x9779, 0x12e5, 0xdc47, 0x1, 0x1);
        gbc.writeMem(0xd87d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3fc9, gbc.sp());
        EXPECT(0xd87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87d));
        EXPECT(0x7d, gbc.readMem(0xd87e));
        // CB 7D 0014
        gbc.setState(0xe1b6, 0x58e7, 0x34a0, 0x2865, 0x1a5, 0x794a, 0x0, 0x0);
        gbc.writeMem(0xe1b6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x58e7, gbc.sp());
        EXPECT(0xe1b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b6));
        EXPECT(0x7d, gbc.readMem(0xe1b7));
        // CB 7D 0016
        gbc.setState(0xe691, 0x4427, 0x91c0, 0x3ed8, 0x700a, 0x68cd, 0x1, 0x0);
        gbc.writeMem(0xe691, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4427, gbc.sp());
        EXPECT(0xe693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe691));
        EXPECT(0x7d, gbc.readMem(0xe692));
        // CB 7D 0017
        gbc.setState(0x2b27, 0x94d6, 0x77e0, 0xb39c, 0x8dde, 0x8eed, 0x0, 0x0);
        gbc.writeMem(0x2b27, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x94d6, gbc.sp());
        EXPECT(0x2b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0018
        gbc.setState(0x6eca, 0x2f47, 0x1050, 0xdf84, 0x53e, 0xeb59, 0x0, 0x1);
        gbc.writeMem(0x6eca, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2f47, gbc.sp());
        EXPECT(0x6ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0019
        gbc.setState(0x713b, 0x70b9, 0xecb0, 0x4be2, 0xc78d, 0xa15b, 0x0, 0x0);
        gbc.writeMem(0x713b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x70b9, gbc.sp());
        EXPECT(0x713d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 001A
        gbc.setState(0xdd39, 0x732d, 0xad10, 0xce1f, 0x1e51, 0xc618, 0x1, 0x0);
        gbc.writeMem(0xdd39, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x732d, gbc.sp());
        EXPECT(0xdd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd39));
        EXPECT(0x7d, gbc.readMem(0xdd3a));
        // CB 7D 001B
        gbc.setState(0x13c0, 0x6ea, 0xdc20, 0x6e68, 0x6297, 0xfb53, 0x1, 0x1);
        gbc.writeMem(0x13c0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6ea, gbc.sp());
        EXPECT(0x13c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 001C
        gbc.setState(0x52eb, 0x60e3, 0x4ea0, 0xe309, 0xef9b, 0x42c3, 0x0, 0x0);
        gbc.writeMem(0x52eb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x60e3, gbc.sp());
        EXPECT(0x52ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 001E
        gbc.setState(0x71da, 0x77e0, 0xd000, 0x4b03, 0xf904, 0x80c9, 0x0, 0x1);
        gbc.writeMem(0x71da, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x77e0, gbc.sp());
        EXPECT(0x71dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 001F
        gbc.setState(0x13ec, 0xcb00, 0x98e0, 0x9ced, 0xc155, 0x7fda, 0x1, 0x1);
        gbc.writeMem(0x13ec, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcb00, gbc.sp());
        EXPECT(0x13ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0020
        gbc.setState(0x1759, 0x7052, 0x3850, 0xce41, 0x948e, 0xf209, 0x1, 0x1);
        gbc.writeMem(0x1759, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7052, gbc.sp());
        EXPECT(0x175b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0021
        gbc.setState(0x841f, 0x40d2, 0x8580, 0x39fc, 0x3df3, 0x24fe, 0x0, 0x1);
        gbc.writeMem(0x841f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x40d2, gbc.sp());
        EXPECT(0x8421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x841f));
        EXPECT(0x7d, gbc.readMem(0x8420));
        // CB 7D 0022
        gbc.setState(0x43b1, 0xb1c4, 0xc6d0, 0xde6a, 0x8dd3, 0xda13, 0x1, 0x0);
        gbc.writeMem(0x43b1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb1c4, gbc.sp());
        EXPECT(0x43b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0023
        gbc.setState(0xa159, 0x1a0c, 0xc3d0, 0x5d42, 0x6c0a, 0x12e, 0x0, 0x1);
        gbc.writeMem(0xa159, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1a0c, gbc.sp());
        EXPECT(0xa15b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa159));
        EXPECT(0x7d, gbc.readMem(0xa15a));
        // CB 7D 0024
        gbc.setState(0xb3f2, 0xb688, 0x3fa0, 0x2d0c, 0x66c0, 0x5a51, 0x1, 0x0);
        gbc.writeMem(0xb3f2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb688, gbc.sp());
        EXPECT(0xb3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f2));
        EXPECT(0x7d, gbc.readMem(0xb3f3));
        // CB 7D 0025
        gbc.setState(0x8da1, 0xfcfe, 0x5510, 0x96cf, 0x4969, 0x1dfb, 0x1, 0x1);
        gbc.writeMem(0x8da1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfcfe, gbc.sp());
        EXPECT(0x8da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da1));
        EXPECT(0x7d, gbc.readMem(0x8da2));
        // CB 7D 0027
        gbc.setState(0x2166, 0xa8aa, 0x980, 0x7e19, 0xe64, 0x8343, 0x0, 0x0);
        gbc.writeMem(0x2166, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa8aa, gbc.sp());
        EXPECT(0x2168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0028
        gbc.setState(0xa36c, 0x6ae1, 0x4e50, 0xef7e, 0xa93d, 0xcde3, 0x0, 0x1);
        gbc.writeMem(0xa36c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6ae1, gbc.sp());
        EXPECT(0xa36e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36c));
        EXPECT(0x7d, gbc.readMem(0xa36d));
        // CB 7D 0029
        gbc.setState(0x8840, 0x3e81, 0xe610, 0x5261, 0xd7c8, 0xf09c, 0x0, 0x0);
        gbc.writeMem(0x8840, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3e81, gbc.sp());
        EXPECT(0x8842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8840));
        EXPECT(0x7d, gbc.readMem(0x8841));
        // CB 7D 002A
        gbc.setState(0xd87d, 0x12d9, 0x2080, 0xdb2c, 0x7f51, 0x42b9, 0x0, 0x0);
        gbc.writeMem(0xd87d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x12d9, gbc.sp());
        EXPECT(0xd87f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87d));
        EXPECT(0x7d, gbc.readMem(0xd87e));
        // CB 7D 002B
        gbc.setState(0x7eb9, 0x39a7, 0x9b20, 0x12ce, 0xad54, 0x1364, 0x1, 0x1);
        gbc.writeMem(0x7eb9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x39a7, gbc.sp());
        EXPECT(0x7ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 002C
        gbc.setState(0xd4b4, 0x3a11, 0x5980, 0x50df, 0x4a67, 0x401, 0x1, 0x0);
        gbc.writeMem(0xd4b4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3a11, gbc.sp());
        EXPECT(0xd4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4b4));
        EXPECT(0x7d, gbc.readMem(0xd4b5));
        // CB 7D 002D
        gbc.setState(0xbb43, 0x2e44, 0xe490, 0x9cfe, 0xf22f, 0x7313, 0x0, 0x0);
        gbc.writeMem(0xbb43, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2e44, gbc.sp());
        EXPECT(0xbb45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb43));
        EXPECT(0x7d, gbc.readMem(0xbb44));
        // CB 7D 002E
        gbc.setState(0x45d, 0x5d1a, 0x96d0, 0xbf62, 0x8e9b, 0x55d0, 0x1, 0x1);
        gbc.writeMem(0x45d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5d1a, gbc.sp());
        EXPECT(0x45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 002F
        gbc.setState(0x83f6, 0xd3a5, 0xd3a0, 0x1882, 0x31d2, 0x1826, 0x1, 0x1);
        gbc.writeMem(0x83f6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd3a5, gbc.sp());
        EXPECT(0x83f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f6));
        EXPECT(0x7d, gbc.readMem(0x83f7));
        // CB 7D 0030
        gbc.setState(0x8e75, 0xcb55, 0xa880, 0xb7ea, 0x8e06, 0xae94, 0x1, 0x0);
        gbc.writeMem(0x8e75, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcb55, gbc.sp());
        EXPECT(0x8e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e75));
        EXPECT(0x7d, gbc.readMem(0x8e76));
        // CB 7D 0031
        gbc.setState(0x9230, 0xfa32, 0x2ec0, 0xfd37, 0xafbd, 0x5e1d, 0x1, 0x0);
        gbc.writeMem(0x9230, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfa32, gbc.sp());
        EXPECT(0x9232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9230));
        EXPECT(0x7d, gbc.readMem(0x9231));
        // CB 7D 0032
        gbc.setState(0xa4ab, 0x1ee6, 0xe630, 0x9217, 0x6b91, 0x23ff, 0x0, 0x0);
        gbc.writeMem(0xa4ab, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1ee6, gbc.sp());
        EXPECT(0xa4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ab));
        EXPECT(0x7d, gbc.readMem(0xa4ac));
        // CB 7D 0033
        gbc.setState(0x2fb6, 0x7443, 0x9f10, 0x34f, 0xf7ce, 0xa089, 0x1, 0x0);
        gbc.writeMem(0x2fb6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7443, gbc.sp());
        EXPECT(0x2fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0034
        gbc.setState(0x72d1, 0x71ae, 0x69f0, 0x94ff, 0xdfc8, 0x8046, 0x1, 0x0);
        gbc.writeMem(0x72d1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x71ae, gbc.sp());
        EXPECT(0x72d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0035
        gbc.setState(0xd519, 0x8c8e, 0x2740, 0xdad4, 0x51e3, 0xafb2, 0x0, 0x0);
        gbc.writeMem(0xd519, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8c8e, gbc.sp());
        EXPECT(0xd51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd519));
        EXPECT(0x7d, gbc.readMem(0xd51a));
        // CB 7D 0036
        gbc.setState(0xeaea, 0x36d4, 0x66c0, 0x9938, 0xb1d7, 0x780a, 0x0, 0x0);
        gbc.writeMem(0xeaea, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x36d4, gbc.sp());
        EXPECT(0xeaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaea));
        EXPECT(0x7d, gbc.readMem(0xeaeb));
        // CB 7D 0037
        gbc.setState(0x9e96, 0xa742, 0x35f0, 0x5a4e, 0xe8c, 0x51a1, 0x0, 0x1);
        gbc.writeMem(0x9e96, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa742, gbc.sp());
        EXPECT(0x9e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e96));
        EXPECT(0x7d, gbc.readMem(0x9e97));
        // CB 7D 0038
        gbc.setState(0x887c, 0xe62d, 0xfe40, 0xb723, 0xd076, 0x1ffe, 0x1, 0x0);
        gbc.writeMem(0x887c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe62d, gbc.sp());
        EXPECT(0x887e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887c));
        EXPECT(0x7d, gbc.readMem(0x887d));
        // CB 7D 0039
        gbc.setState(0x4c70, 0xef53, 0xac90, 0xe0aa, 0xefcb, 0x24bf, 0x1, 0x0);
        gbc.writeMem(0x4c70, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xef53, gbc.sp());
        EXPECT(0x4c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 003A
        gbc.setState(0x8088, 0x3398, 0x890, 0xdd34, 0xfae6, 0x68f3, 0x1, 0x1);
        gbc.writeMem(0x8088, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3398, gbc.sp());
        EXPECT(0x808a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8088));
        EXPECT(0x7d, gbc.readMem(0x8089));
        // CB 7D 003B
        gbc.setState(0x91ef, 0x2776, 0x8b10, 0x6855, 0xd396, 0x1b16, 0x0, 0x0);
        gbc.writeMem(0x91ef, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2776, gbc.sp());
        EXPECT(0x91f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ef));
        EXPECT(0x7d, gbc.readMem(0x91f0));
        // CB 7D 003C
        gbc.setState(0x2b2a, 0x8654, 0x77a0, 0x2671, 0xe90e, 0x82bf, 0x1, 0x1);
        gbc.writeMem(0x2b2a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8654, gbc.sp());
        EXPECT(0x2b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 003D
        gbc.setState(0x5681, 0x44fe, 0x8540, 0xc28, 0xc0f, 0x8c6b, 0x0, 0x1);
        gbc.writeMem(0x5681, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x44fe, gbc.sp());
        EXPECT(0x5683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 003E
        gbc.setState(0x6236, 0x960a, 0xc4d0, 0x9de6, 0x6290, 0xd454, 0x1, 0x1);
        gbc.writeMem(0x6236, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x960a, gbc.sp());
        EXPECT(0x6238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 003F
        gbc.setState(0x14ae, 0x1c07, 0x4560, 0x266c, 0x9859, 0x82a, 0x1, 0x0);
        gbc.writeMem(0x14ae, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1c07, gbc.sp());
        EXPECT(0x14b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0041
        gbc.setState(0xcc8b, 0x9cbc, 0xac60, 0x82d5, 0xe7ab, 0x9862, 0x0, 0x0);
        gbc.writeMem(0xcc8b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9cbc, gbc.sp());
        EXPECT(0xcc8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8b));
        EXPECT(0x7d, gbc.readMem(0xcc8c));
        // CB 7D 0042
        gbc.setState(0x8060, 0x7244, 0x15f0, 0xca38, 0xaa5e, 0x9ee2, 0x0, 0x0);
        gbc.writeMem(0x8060, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7244, gbc.sp());
        EXPECT(0x8062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8060));
        EXPECT(0x7d, gbc.readMem(0x8061));
        // CB 7D 0043
        gbc.setState(0x52d6, 0x7307, 0x5ed0, 0x2f94, 0x9875, 0xd24, 0x0, 0x1);
        gbc.writeMem(0x52d6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7307, gbc.sp());
        EXPECT(0x52d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0044
        gbc.setState(0x2548, 0x3239, 0x5980, 0x7de7, 0x4743, 0x45e8, 0x0, 0x1);
        gbc.writeMem(0x2548, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3239, gbc.sp());
        EXPECT(0x254a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0045
        gbc.setState(0xb1c4, 0xa25d, 0xc650, 0x19f8, 0x1d8, 0xab68, 0x0, 0x1);
        gbc.writeMem(0xb1c4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa25d, gbc.sp());
        EXPECT(0xb1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c4));
        EXPECT(0x7d, gbc.readMem(0xb1c5));
        // CB 7D 0046
        gbc.setState(0xab63, 0xeaa2, 0xae20, 0x7ba0, 0xc5ca, 0x3e4b, 0x1, 0x1);
        gbc.writeMem(0xab63, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xeaa2, gbc.sp());
        EXPECT(0xab65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab63));
        EXPECT(0x7d, gbc.readMem(0xab64));
        // CB 7D 0048
        gbc.setState(0xab81, 0xa356, 0x1d00, 0x72c3, 0x7a45, 0x5307, 0x1, 0x1);
        gbc.writeMem(0xab81, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa356, gbc.sp());
        EXPECT(0xab83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab81));
        EXPECT(0x7d, gbc.readMem(0xab82));
        // CB 7D 004A
        gbc.setState(0xc423, 0xbd73, 0xc4b0, 0x43e2, 0x73bb, 0x1069, 0x0, 0x1);
        gbc.writeMem(0xc423, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbd73, gbc.sp());
        EXPECT(0xc425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc423));
        EXPECT(0x7d, gbc.readMem(0xc424));
        // CB 7D 004B
        gbc.setState(0x6a74, 0xf2de, 0x1f10, 0xbf4e, 0xb3de, 0x8a59, 0x0, 0x1);
        gbc.writeMem(0x6a74, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf2de, gbc.sp());
        EXPECT(0x6a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 004C
        gbc.setState(0x1301, 0xf36, 0x2560, 0x2b97, 0x90ad, 0x1580, 0x1, 0x0);
        gbc.writeMem(0x1301, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf36, gbc.sp());
        EXPECT(0x1303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 004D
        gbc.setState(0xca38, 0x434d, 0xe650, 0xfab0, 0x33d, 0xbec8, 0x1, 0x1);
        gbc.writeMem(0xca38, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x434d, gbc.sp());
        EXPECT(0xca3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca38));
        EXPECT(0x7d, gbc.readMem(0xca39));
        // CB 7D 004E
        gbc.setState(0xbaee, 0x3c49, 0x5190, 0x8b24, 0x34ad, 0x317d, 0x0, 0x1);
        gbc.writeMem(0xbaee, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3c49, gbc.sp());
        EXPECT(0xbaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaee));
        EXPECT(0x7d, gbc.readMem(0xbaef));
        // CB 7D 004F
        gbc.setState(0x3531, 0x83ac, 0x7b0, 0x2536, 0xf1f6, 0xf857, 0x1, 0x1);
        gbc.writeMem(0x3531, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x83ac, gbc.sp());
        EXPECT(0x3533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0050
        gbc.setState(0xb20b, 0x45e9, 0xe950, 0x7577, 0x7ca1, 0x1c54, 0x0, 0x1);
        gbc.writeMem(0xb20b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x45e9, gbc.sp());
        EXPECT(0xb20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb20b));
        EXPECT(0x7d, gbc.readMem(0xb20c));
        // CB 7D 0051
        gbc.setState(0x7b36, 0x20c2, 0xa140, 0xc374, 0xfaf3, 0xcd36, 0x1, 0x1);
        gbc.writeMem(0x7b36, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x20c2, gbc.sp());
        EXPECT(0x7b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0052
        gbc.setState(0x5821, 0x187e, 0x66b0, 0x3ac, 0x1338, 0xd63b, 0x1, 0x0);
        gbc.writeMem(0x5821, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x187e, gbc.sp());
        EXPECT(0x5823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0053
        gbc.setState(0x546c, 0xec00, 0x7100, 0xe1a9, 0xc2cf, 0xeb06, 0x0, 0x1);
        gbc.writeMem(0x546c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xec00, gbc.sp());
        EXPECT(0x546e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0054
        gbc.setState(0xd85a, 0x2f99, 0xe570, 0x87be, 0x4480, 0xcbdb, 0x0, 0x0);
        gbc.writeMem(0xd85a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2f99, gbc.sp());
        EXPECT(0xd85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85a));
        EXPECT(0x7d, gbc.readMem(0xd85b));
        // CB 7D 0055
        gbc.setState(0x8bcc, 0x996b, 0xb2a0, 0x668a, 0xbcf9, 0xaab2, 0x1, 0x1);
        gbc.writeMem(0x8bcc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x996b, gbc.sp());
        EXPECT(0x8bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bcc));
        EXPECT(0x7d, gbc.readMem(0x8bcd));
        // CB 7D 0056
        gbc.setState(0x5cc8, 0xbb1f, 0x6e60, 0x7ea0, 0x1873, 0xa2ac, 0x1, 0x0);
        gbc.writeMem(0x5cc8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbb1f, gbc.sp());
        EXPECT(0x5cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0057
        gbc.setState(0x137b, 0xbcbc, 0x7280, 0xf3bd, 0x5fa1, 0xf512, 0x0, 0x0);
        gbc.writeMem(0x137b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbcbc, gbc.sp());
        EXPECT(0x137d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0058
        gbc.setState(0x1b46, 0x225d, 0x58f0, 0xeddf, 0xc350, 0x844a, 0x0, 0x1);
        gbc.writeMem(0x1b46, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x225d, gbc.sp());
        EXPECT(0x1b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0059
        gbc.setState(0xd53c, 0xd01b, 0x16a0, 0x721f, 0x6b05, 0x557, 0x1, 0x0);
        gbc.writeMem(0xd53c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd01b, gbc.sp());
        EXPECT(0xd53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd53c));
        EXPECT(0x7d, gbc.readMem(0xd53d));
        // CB 7D 005A
        gbc.setState(0xedc4, 0x6a15, 0xbd20, 0x14be, 0xb0da, 0xe821, 0x0, 0x0);
        gbc.writeMem(0xedc4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6a15, gbc.sp());
        EXPECT(0xedc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc4));
        EXPECT(0x7d, gbc.readMem(0xedc5));
        // CB 7D 005B
        gbc.setState(0x49b3, 0xabdf, 0x6e00, 0xa262, 0x191, 0x45cd, 0x0, 0x1);
        gbc.writeMem(0x49b3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xabdf, gbc.sp());
        EXPECT(0x49b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 005C
        gbc.setState(0x7fd9, 0x536e, 0xae0, 0xc6f0, 0x1b98, 0x62e9, 0x1, 0x0);
        gbc.writeMem(0x7fd9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x536e, gbc.sp());
        EXPECT(0x7fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 005D
        gbc.setState(0x4514, 0x9b7e, 0xec80, 0x2245, 0x9695, 0xa99, 0x1, 0x0);
        gbc.writeMem(0x4514, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9b7e, gbc.sp());
        EXPECT(0x4516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 005E
        gbc.setState(0xbe58, 0x45ce, 0xb2e0, 0xf326, 0x81d, 0x6564, 0x1, 0x1);
        gbc.writeMem(0xbe58, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x45ce, gbc.sp());
        EXPECT(0xbe5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe58));
        EXPECT(0x7d, gbc.readMem(0xbe59));
        // CB 7D 005F
        gbc.setState(0xe2b6, 0xc02e, 0x6580, 0xae27, 0x3b70, 0xf6e2, 0x0, 0x0);
        gbc.writeMem(0xe2b6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc02e, gbc.sp());
        EXPECT(0xe2b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b6));
        EXPECT(0x7d, gbc.readMem(0xe2b7));
        // CB 7D 0060
        gbc.setState(0xb9f8, 0x3d26, 0x4ce0, 0xdc0c, 0xbd26, 0x31b8, 0x0, 0x1);
        gbc.writeMem(0xb9f8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3d26, gbc.sp());
        EXPECT(0xb9fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f8));
        EXPECT(0x7d, gbc.readMem(0xb9f9));
        // CB 7D 0061
        gbc.setState(0xdea7, 0xf580, 0x7d0, 0xf906, 0xc4e0, 0x22c4, 0x0, 0x1);
        gbc.writeMem(0xdea7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf580, gbc.sp());
        EXPECT(0xdea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea7));
        EXPECT(0x7d, gbc.readMem(0xdea8));
        // CB 7D 0062
        gbc.setState(0xb992, 0x79fb, 0xded0, 0x7751, 0x41c0, 0x1141, 0x0, 0x0);
        gbc.writeMem(0xb992, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x79fb, gbc.sp());
        EXPECT(0xb994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb992));
        EXPECT(0x7d, gbc.readMem(0xb993));
        // CB 7D 0063
        gbc.setState(0x51fb, 0x5b15, 0x4af0, 0x6599, 0x1fcf, 0x5e7e, 0x1, 0x0);
        gbc.writeMem(0x51fb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5b15, gbc.sp());
        EXPECT(0x51fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0064
        gbc.setState(0xdd9c, 0xb12d, 0xbb10, 0xce31, 0x80eb, 0xe611, 0x0, 0x0);
        gbc.writeMem(0xdd9c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb12d, gbc.sp());
        EXPECT(0xdd9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd9c));
        EXPECT(0x7d, gbc.readMem(0xdd9d));
        // CB 7D 0065
        gbc.setState(0x209f, 0x5b84, 0x3540, 0x1fce, 0xd704, 0xe2, 0x0, 0x1);
        gbc.writeMem(0x209f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5b84, gbc.sp());
        EXPECT(0x20a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0066
        gbc.setState(0xa66d, 0xa95e, 0xb070, 0x2ec4, 0x7656, 0xa017, 0x0, 0x1);
        gbc.writeMem(0xa66d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa95e, gbc.sp());
        EXPECT(0xa66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa66d));
        EXPECT(0x7d, gbc.readMem(0xa66e));
        // CB 7D 0067
        gbc.setState(0xe6bc, 0xfc57, 0x4410, 0xca95, 0x64e7, 0xa5a4, 0x1, 0x1);
        gbc.writeMem(0xe6bc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfc57, gbc.sp());
        EXPECT(0xe6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6bc));
        EXPECT(0x7d, gbc.readMem(0xe6bd));
        // CB 7D 0068
        gbc.setState(0x787, 0xd928, 0x8030, 0x8629, 0x2b42, 0x736e, 0x1, 0x1);
        gbc.writeMem(0x787, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd928, gbc.sp());
        EXPECT(0x789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 006A
        gbc.setState(0x6079, 0x3483, 0x63d0, 0xb9ee, 0x4f37, 0x8016, 0x0, 0x1);
        gbc.writeMem(0x6079, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3483, gbc.sp());
        EXPECT(0x607b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 006B
        gbc.setState(0x8bcc, 0x429d, 0xf780, 0x5dd, 0x4441, 0xb7e3, 0x1, 0x1);
        gbc.writeMem(0x8bcc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x429d, gbc.sp());
        EXPECT(0x8bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bcc));
        EXPECT(0x7d, gbc.readMem(0x8bcd));
        // CB 7D 006C
        gbc.setState(0x1674, 0x4f6d, 0xf690, 0x7949, 0xc309, 0xeaa4, 0x1, 0x1);
        gbc.writeMem(0x1674, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4f6d, gbc.sp());
        EXPECT(0x1676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 006D
        gbc.setState(0xefc5, 0x8c1b, 0xa7a0, 0xf7fd, 0xffaf, 0x51d9, 0x1, 0x1);
        gbc.writeMem(0xefc5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8c1b, gbc.sp());
        EXPECT(0xefc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc5));
        EXPECT(0x7d, gbc.readMem(0xefc6));
        // CB 7D 006E
        gbc.setState(0x15c, 0x6e98, 0x2bd0, 0x3c28, 0x7f5b, 0x4f48, 0x0, 0x0);
        gbc.writeMem(0x15c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6e98, gbc.sp());
        EXPECT(0x15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 006F
        gbc.setState(0xdb26, 0x46f2, 0x8d10, 0xf70d, 0xe0fc, 0x3eda, 0x1, 0x0);
        gbc.writeMem(0xdb26, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x46f2, gbc.sp());
        EXPECT(0xdb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb26));
        EXPECT(0x7d, gbc.readMem(0xdb27));
        // CB 7D 0070
        gbc.setState(0xd0cb, 0x774b, 0x28d0, 0x49b, 0x885f, 0x7c55, 0x0, 0x0);
        gbc.writeMem(0xd0cb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x774b, gbc.sp());
        EXPECT(0xd0cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0cb));
        EXPECT(0x7d, gbc.readMem(0xd0cc));
        // CB 7D 0071
        gbc.setState(0xcd5e, 0x4cd, 0x9100, 0xb82d, 0x6ab8, 0xf040, 0x0, 0x0);
        gbc.writeMem(0xcd5e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4cd, gbc.sp());
        EXPECT(0xcd60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5e));
        EXPECT(0x7d, gbc.readMem(0xcd5f));
        // CB 7D 0072
        gbc.setState(0x37e3, 0x9f9e, 0xea70, 0x4bdc, 0x5a03, 0x54bf, 0x0, 0x1);
        gbc.writeMem(0x37e3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9f9e, gbc.sp());
        EXPECT(0x37e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0073
        gbc.setState(0xdc02, 0x18d1, 0xbe60, 0x56e4, 0xeec4, 0xf73f, 0x1, 0x0);
        gbc.writeMem(0xdc02, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x18d1, gbc.sp());
        EXPECT(0xdc04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc02));
        EXPECT(0x7d, gbc.readMem(0xdc03));
        // CB 7D 0074
        gbc.setState(0x5f2e, 0x2932, 0xefd0, 0xe511, 0x6797, 0x13e, 0x1, 0x0);
        gbc.writeMem(0x5f2e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2932, gbc.sp());
        EXPECT(0x5f30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0075
        gbc.setState(0xa1ec, 0xba40, 0xdad0, 0x29cc, 0x99d4, 0xfa17, 0x0, 0x0);
        gbc.writeMem(0xa1ec, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xba40, gbc.sp());
        EXPECT(0xa1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ec));
        EXPECT(0x7d, gbc.readMem(0xa1ed));
        // CB 7D 0076
        gbc.setState(0x4e66, 0x6e0e, 0x6530, 0x785b, 0x7da8, 0x2a04, 0x1, 0x0);
        gbc.writeMem(0x4e66, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6e0e, gbc.sp());
        EXPECT(0x4e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0077
        gbc.setState(0x7ca0, 0x6ddb, 0xd8f0, 0x1f72, 0x5bb2, 0xe962, 0x1, 0x0);
        gbc.writeMem(0x7ca0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6ddb, gbc.sp());
        EXPECT(0x7ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0078
        gbc.setState(0x9ca4, 0x8a5f, 0xef0, 0x40b9, 0xbfb2, 0x7bbe, 0x1, 0x1);
        gbc.writeMem(0x9ca4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8a5f, gbc.sp());
        EXPECT(0x9ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca4));
        EXPECT(0x7d, gbc.readMem(0x9ca5));
        // CB 7D 0079
        gbc.setState(0x2203, 0x66ba, 0x83c0, 0xab50, 0xe6b3, 0x5d47, 0x1, 0x0);
        gbc.writeMem(0x2203, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x66ba, gbc.sp());
        EXPECT(0x2205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 007A
        gbc.setState(0xbd2b, 0x8916, 0xb7c0, 0x83ab, 0xe074, 0x2922, 0x1, 0x0);
        gbc.writeMem(0xbd2b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8916, gbc.sp());
        EXPECT(0xbd2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2b));
        EXPECT(0x7d, gbc.readMem(0xbd2c));
        // CB 7D 007B
        gbc.setState(0xe6f3, 0x1f84, 0x9ed0, 0x7b5, 0x29c7, 0x7702, 0x0, 0x0);
        gbc.writeMem(0xe6f3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1f84, gbc.sp());
        EXPECT(0xe6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f3));
        EXPECT(0x7d, gbc.readMem(0xe6f4));
        // CB 7D 007C
        gbc.setState(0xd51b, 0xe401, 0x2ff0, 0x9860, 0x4b0f, 0x374d, 0x0, 0x1);
        gbc.writeMem(0xd51b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe401, gbc.sp());
        EXPECT(0xd51d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd51b));
        EXPECT(0x7d, gbc.readMem(0xd51c));
        // CB 7D 007D
        gbc.setState(0x161c, 0xaba7, 0x6220, 0xacad, 0xb3cb, 0x4307, 0x1, 0x0);
        gbc.writeMem(0x161c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xaba7, gbc.sp());
        EXPECT(0x161e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 007E
        gbc.setState(0xb739, 0x14e, 0x6750, 0x3eb2, 0xfcab, 0x1a8, 0x1, 0x1);
        gbc.writeMem(0xb739, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x14e, gbc.sp());
        EXPECT(0xb73b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb739));
        EXPECT(0x7d, gbc.readMem(0xb73a));
        // CB 7D 007F
        gbc.setState(0xea86, 0x76ea, 0xa0, 0xc3ec, 0xee6, 0xfe03, 0x1, 0x1);
        gbc.writeMem(0xea86, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x76ea, gbc.sp());
        EXPECT(0xea88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea86));
        EXPECT(0x7d, gbc.readMem(0xea87));
        // CB 7D 0080
        gbc.setState(0xc159, 0xe49b, 0xbe00, 0xe0a1, 0x817f, 0x56e8, 0x1, 0x0);
        gbc.writeMem(0xc159, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe49b, gbc.sp());
        EXPECT(0xc15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc159));
        EXPECT(0x7d, gbc.readMem(0xc15a));
        // CB 7D 0081
        gbc.setState(0xbed2, 0x5468, 0x8de0, 0xf602, 0xa6fd, 0x1299, 0x0, 0x0);
        gbc.writeMem(0xbed2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5468, gbc.sp());
        EXPECT(0xbed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed2));
        EXPECT(0x7d, gbc.readMem(0xbed3));
        // CB 7D 0082
        gbc.setState(0x57c8, 0x4bf8, 0xe080, 0x8bbb, 0x147f, 0xd30c, 0x0, 0x1);
        gbc.writeMem(0x57c8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4bf8, gbc.sp());
        EXPECT(0x57ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0083
        gbc.setState(0x8995, 0xf642, 0xddd0, 0x7de5, 0xe69b, 0x1fa3, 0x1, 0x0);
        gbc.writeMem(0x8995, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf642, gbc.sp());
        EXPECT(0x8997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8995));
        EXPECT(0x7d, gbc.readMem(0x8996));
        // CB 7D 0084
        gbc.setState(0xc456, 0xccd6, 0xef50, 0xa041, 0xbeab, 0xaabb, 0x1, 0x0);
        gbc.writeMem(0xc456, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xccd6, gbc.sp());
        EXPECT(0xc458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc456));
        EXPECT(0x7d, gbc.readMem(0xc457));
        // CB 7D 0086
        gbc.setState(0xcdb0, 0x34f6, 0x4940, 0x677, 0x6d6a, 0x785, 0x0, 0x1);
        gbc.writeMem(0xcdb0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x34f6, gbc.sp());
        EXPECT(0xcdb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb0));
        EXPECT(0x7d, gbc.readMem(0xcdb1));
        // CB 7D 0087
        gbc.setState(0xa43b, 0x2b9a, 0xd60, 0xa6d9, 0xa40a, 0x3572, 0x1, 0x1);
        gbc.writeMem(0xa43b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2b9a, gbc.sp());
        EXPECT(0xa43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43b));
        EXPECT(0x7d, gbc.readMem(0xa43c));
        // CB 7D 0088
        gbc.setState(0x5a22, 0xb98f, 0x64e0, 0x8835, 0x2cb7, 0xb501, 0x0, 0x1);
        gbc.writeMem(0x5a22, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb98f, gbc.sp());
        EXPECT(0x5a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0089
        gbc.setState(0xcb79, 0xd7fe, 0x8800, 0x2a4b, 0x18d7, 0x16ac, 0x0, 0x0);
        gbc.writeMem(0xcb79, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd7fe, gbc.sp());
        EXPECT(0xcb7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb79));
        EXPECT(0x7d, gbc.readMem(0xcb7a));
        // CB 7D 008A
        gbc.setState(0xcb77, 0xbde8, 0x500, 0xd50, 0xc369, 0xf8aa, 0x0, 0x1);
        gbc.writeMem(0xcb77, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbde8, gbc.sp());
        EXPECT(0xcb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb77));
        EXPECT(0x7d, gbc.readMem(0xcb78));
        // CB 7D 008B
        gbc.setState(0x713, 0xa033, 0x80e0, 0xa064, 0xdb69, 0x8689, 0x1, 0x1);
        gbc.writeMem(0x713, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa033, gbc.sp());
        EXPECT(0x715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 008C
        gbc.setState(0xda3e, 0xf3d9, 0x8a80, 0xaff3, 0xb00f, 0x6191, 0x0, 0x0);
        gbc.writeMem(0xda3e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf3d9, gbc.sp());
        EXPECT(0xda40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3e));
        EXPECT(0x7d, gbc.readMem(0xda3f));
        // CB 7D 008D
        gbc.setState(0x4026, 0x97f7, 0x7d50, 0x47d1, 0xe253, 0x42f3, 0x1, 0x1);
        gbc.writeMem(0x4026, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x97f7, gbc.sp());
        EXPECT(0x4028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 008E
        gbc.setState(0x8108, 0x18dc, 0x3bc0, 0x45da, 0x6845, 0x6db3, 0x1, 0x0);
        gbc.writeMem(0x8108, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x18dc, gbc.sp());
        EXPECT(0x810a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8108));
        EXPECT(0x7d, gbc.readMem(0x8109));
        // CB 7D 008F
        gbc.setState(0x2966, 0x864a, 0xd920, 0x7e25, 0x17c5, 0xeb07, 0x1, 0x1);
        gbc.writeMem(0x2966, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x864a, gbc.sp());
        EXPECT(0x2968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0090
        gbc.setState(0x6c3e, 0xdcae, 0x1450, 0xa6a6, 0xb339, 0x9875, 0x1, 0x0);
        gbc.writeMem(0x6c3e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdcae, gbc.sp());
        EXPECT(0x6c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0091
        gbc.setState(0x2d37, 0xe11c, 0x42f0, 0x4abd, 0xd8d9, 0xafcc, 0x1, 0x0);
        gbc.writeMem(0x2d37, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe11c, gbc.sp());
        EXPECT(0x2d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0092
        gbc.setState(0xc202, 0x790, 0xb550, 0x95e5, 0xd7ce, 0xa9bf, 0x1, 0x1);
        gbc.writeMem(0xc202, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x790, gbc.sp());
        EXPECT(0xc204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc202));
        EXPECT(0x7d, gbc.readMem(0xc203));
        // CB 7D 0093
        gbc.setState(0x93b8, 0x9b29, 0xbce0, 0xbf91, 0xf838, 0xa6f2, 0x1, 0x0);
        gbc.writeMem(0x93b8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9b29, gbc.sp());
        EXPECT(0x93ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b8));
        EXPECT(0x7d, gbc.readMem(0x93b9));
        // CB 7D 0095
        gbc.setState(0xba61, 0x3d20, 0x10e0, 0xb962, 0xbfe4, 0x97b5, 0x0, 0x1);
        gbc.writeMem(0xba61, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3d20, gbc.sp());
        EXPECT(0xba63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba61));
        EXPECT(0x7d, gbc.readMem(0xba62));
        // CB 7D 0096
        gbc.setState(0x5a64, 0x963b, 0x9e90, 0x55fb, 0xd043, 0x6d75, 0x0, 0x1);
        gbc.writeMem(0x5a64, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x963b, gbc.sp());
        EXPECT(0x5a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0097
        gbc.setState(0xc841, 0x8558, 0x25f0, 0xdffa, 0xb107, 0xd2d0, 0x0, 0x1);
        gbc.writeMem(0xc841, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8558, gbc.sp());
        EXPECT(0xc843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc841));
        EXPECT(0x7d, gbc.readMem(0xc842));
        // CB 7D 0098
        gbc.setState(0xca0a, 0x3b29, 0x2000, 0xea8, 0xa125, 0xe7e6, 0x1, 0x0);
        gbc.writeMem(0xca0a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3b29, gbc.sp());
        EXPECT(0xca0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca0a));
        EXPECT(0x7d, gbc.readMem(0xca0b));
        // CB 7D 0099
        gbc.setState(0x76a3, 0xbe3c, 0xbcb0, 0xf856, 0xf17d, 0x93af, 0x0, 0x0);
        gbc.writeMem(0x76a3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbe3c, gbc.sp());
        EXPECT(0x76a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 009A
        gbc.setState(0x4b5f, 0x306e, 0x5930, 0xd2a4, 0xf18a, 0xc39b, 0x1, 0x0);
        gbc.writeMem(0x4b5f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x306e, gbc.sp());
        EXPECT(0x4b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 009B
        gbc.setState(0xbf65, 0x57e9, 0xb500, 0x8b4e, 0xbb63, 0xa7e2, 0x1, 0x1);
        gbc.writeMem(0xbf65, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x57e9, gbc.sp());
        EXPECT(0xbf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf65));
        EXPECT(0x7d, gbc.readMem(0xbf66));
        // CB 7D 009C
        gbc.setState(0xb98f, 0x6aa4, 0x2490, 0x9a5a, 0x1b28, 0xab9, 0x0, 0x0);
        gbc.writeMem(0xb98f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6aa4, gbc.sp());
        EXPECT(0xb991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb98f));
        EXPECT(0x7d, gbc.readMem(0xb990));
        // CB 7D 009D
        gbc.setState(0x2cbc, 0x65a3, 0xc560, 0x21d, 0x4f43, 0x4c57, 0x1, 0x1);
        gbc.writeMem(0x2cbc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x65a3, gbc.sp());
        EXPECT(0x2cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 009E
        gbc.setState(0x7272, 0x2bc7, 0xef30, 0xdcee, 0xbf5d, 0x99ed, 0x0, 0x0);
        gbc.writeMem(0x7272, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2bc7, gbc.sp());
        EXPECT(0x7274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 009F
        gbc.setState(0x7e70, 0x3774, 0x7d70, 0xab54, 0x7ce4, 0x832a, 0x0, 0x1);
        gbc.writeMem(0x7e70, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3774, gbc.sp());
        EXPECT(0x7e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00A0
        gbc.setState(0x43a4, 0x9b10, 0x8db0, 0x5164, 0xbbe0, 0x9abe, 0x1, 0x0);
        gbc.writeMem(0x43a4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9b10, gbc.sp());
        EXPECT(0x43a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00A1
        gbc.setState(0x5e46, 0x96a5, 0x6c30, 0x8cf9, 0x57eb, 0xeb39, 0x1, 0x1);
        gbc.writeMem(0x5e46, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x96a5, gbc.sp());
        EXPECT(0x5e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00A2
        gbc.setState(0x2296, 0x1276, 0xffa0, 0x64e5, 0xa304, 0xb278, 0x0, 0x0);
        gbc.writeMem(0x2296, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1276, gbc.sp());
        EXPECT(0x2298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00A3
        gbc.setState(0x5634, 0x51e0, 0x220, 0xee10, 0x7de8, 0x167b, 0x0, 0x1);
        gbc.writeMem(0x5634, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x51e0, gbc.sp());
        EXPECT(0x5636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00A4
        gbc.setState(0x1a12, 0xaeaa, 0xf280, 0x5783, 0x939b, 0x8cd1, 0x1, 0x0);
        gbc.writeMem(0x1a12, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaeaa, gbc.sp());
        EXPECT(0x1a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00A5
        gbc.setState(0x7707, 0xae9, 0x2240, 0x743e, 0x475a, 0xe266, 0x1, 0x0);
        gbc.writeMem(0x7707, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xae9, gbc.sp());
        EXPECT(0x7709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00A6
        gbc.setState(0x5a40, 0xbeb9, 0x7640, 0x4b08, 0x87f7, 0xb042, 0x0, 0x1);
        gbc.writeMem(0x5a40, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xbeb9, gbc.sp());
        EXPECT(0x5a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00A7
        gbc.setState(0x618d, 0x4a54, 0x5340, 0x7ae6, 0x6589, 0x3e35, 0x1, 0x0);
        gbc.writeMem(0x618d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4a54, gbc.sp());
        EXPECT(0x618f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00A8
        gbc.setState(0xbbb2, 0x297b, 0xe570, 0x3ebd, 0xe08e, 0x6750, 0x0, 0x0);
        gbc.writeMem(0xbbb2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x297b, gbc.sp());
        EXPECT(0xbbb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbb2));
        EXPECT(0x7d, gbc.readMem(0xbbb3));
        // CB 7D 00A9
        gbc.setState(0xa5bd, 0xe1e6, 0x25b0, 0x3f8b, 0x318, 0xef2f, 0x1, 0x1);
        gbc.writeMem(0xa5bd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe1e6, gbc.sp());
        EXPECT(0xa5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5bd));
        EXPECT(0x7d, gbc.readMem(0xa5be));
        // CB 7D 00AA
        gbc.setState(0x46fb, 0xcbfd, 0x30c0, 0xd9a1, 0xb024, 0xa452, 0x1, 0x0);
        gbc.writeMem(0x46fb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xcbfd, gbc.sp());
        EXPECT(0x46fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00AB
        gbc.setState(0xb5ca, 0x4145, 0x58f0, 0x3d5c, 0x3ecb, 0xf12e, 0x0, 0x0);
        gbc.writeMem(0xb5ca, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4145, gbc.sp());
        EXPECT(0xb5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ca));
        EXPECT(0x7d, gbc.readMem(0xb5cb));
        // CB 7D 00AC
        gbc.setState(0x5f15, 0x7875, 0xdee0, 0x7213, 0x1de4, 0xa490, 0x1, 0x1);
        gbc.writeMem(0x5f15, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7875, gbc.sp());
        EXPECT(0x5f17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00AD
        gbc.setState(0x651b, 0x724c, 0xb3d0, 0xa76b, 0x78d6, 0xfa5e, 0x1, 0x0);
        gbc.writeMem(0x651b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x724c, gbc.sp());
        EXPECT(0x651d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00AE
        gbc.setState(0x227d, 0xfee8, 0x67e0, 0xe9f7, 0x326, 0x47e8, 0x1, 0x1);
        gbc.writeMem(0x227d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfee8, gbc.sp());
        EXPECT(0x227f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00AF
        gbc.setState(0xed84, 0x3ab9, 0xa950, 0x172a, 0xc57, 0x2b1e, 0x0, 0x1);
        gbc.writeMem(0xed84, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3ab9, gbc.sp());
        EXPECT(0xed86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed84));
        EXPECT(0x7d, gbc.readMem(0xed85));
        // CB 7D 00B0
        gbc.setState(0xb02e, 0x2cf3, 0xaf30, 0xa2c6, 0x585b, 0xd5b4, 0x1, 0x0);
        gbc.writeMem(0xb02e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2cf3, gbc.sp());
        EXPECT(0xb030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02e));
        EXPECT(0x7d, gbc.readMem(0xb02f));
        // CB 7D 00B1
        gbc.setState(0xeb01, 0xb558, 0x4320, 0xdbb8, 0x4533, 0x766c, 0x0, 0x0);
        gbc.writeMem(0xeb01, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb558, gbc.sp());
        EXPECT(0xeb03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb01));
        EXPECT(0x7d, gbc.readMem(0xeb02));
        // CB 7D 00B2
        gbc.setState(0xda5e, 0x165a, 0xa7d0, 0x9853, 0x234c, 0x5380, 0x1, 0x0);
        gbc.writeMem(0xda5e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x165a, gbc.sp());
        EXPECT(0xda60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5e));
        EXPECT(0x7d, gbc.readMem(0xda5f));
        // CB 7D 00B3
        gbc.setState(0xb373, 0xa251, 0x9440, 0xb74d, 0xc1d4, 0x34a7, 0x0, 0x1);
        gbc.writeMem(0xb373, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa251, gbc.sp());
        EXPECT(0xb375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb373));
        EXPECT(0x7d, gbc.readMem(0xb374));
        // CB 7D 00B4
        gbc.setState(0xddf, 0x43e0, 0xef40, 0x4a05, 0xe7eb, 0x4c4a, 0x1, 0x0);
        gbc.writeMem(0xddf, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x43e0, gbc.sp());
        EXPECT(0xde1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00B5
        gbc.setState(0x7c76, 0x106b, 0xed00, 0x2ea9, 0xbe02, 0xa508, 0x1, 0x1);
        gbc.writeMem(0x7c76, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x106b, gbc.sp());
        EXPECT(0x7c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00B6
        gbc.setState(0x9ced, 0x6ae2, 0xae80, 0x64b5, 0x6b7e, 0xcfc7, 0x0, 0x1);
        gbc.writeMem(0x9ced, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6ae2, gbc.sp());
        EXPECT(0x9cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ced));
        EXPECT(0x7d, gbc.readMem(0x9cee));
        // CB 7D 00B7
        gbc.setState(0x58ac, 0xb9f, 0x4970, 0x864, 0x6f5b, 0x6472, 0x0, 0x1);
        gbc.writeMem(0x58ac, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb9f, gbc.sp());
        EXPECT(0x58ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00B8
        gbc.setState(0xaf3a, 0xa8fd, 0x1960, 0x34b7, 0x1f2d, 0xb879, 0x1, 0x0);
        gbc.writeMem(0xaf3a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa8fd, gbc.sp());
        EXPECT(0xaf3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3a));
        EXPECT(0x7d, gbc.readMem(0xaf3b));
        // CB 7D 00B9
        gbc.setState(0x4fb5, 0xa852, 0xb140, 0xec84, 0x185, 0xe29, 0x1, 0x0);
        gbc.writeMem(0x4fb5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa852, gbc.sp());
        EXPECT(0x4fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00BA
        gbc.setState(0xb9df, 0x2de7, 0x8dc0, 0x8457, 0x9fbe, 0xa3d9, 0x1, 0x1);
        gbc.writeMem(0xb9df, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2de7, gbc.sp());
        EXPECT(0xb9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9df));
        EXPECT(0x7d, gbc.readMem(0xb9e0));
        // CB 7D 00BC
        gbc.setState(0x23e7, 0x81fb, 0x9d40, 0xc992, 0x292d, 0x5a85, 0x1, 0x1);
        gbc.writeMem(0x23e7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x81fb, gbc.sp());
        EXPECT(0x23e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00BD
        gbc.setState(0xa109, 0x645d, 0xeb40, 0x7d78, 0x497f, 0xcbd5, 0x0, 0x0);
        gbc.writeMem(0xa109, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x645d, gbc.sp());
        EXPECT(0xa10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa109));
        EXPECT(0x7d, gbc.readMem(0xa10a));
        // CB 7D 00BE
        gbc.setState(0x5f31, 0x6f5b, 0x80, 0x9c47, 0x785e, 0x159d, 0x0, 0x0);
        gbc.writeMem(0x5f31, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6f5b, gbc.sp());
        EXPECT(0x5f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00BF
        gbc.setState(0xe57a, 0x5b79, 0xf5e0, 0xce8e, 0x6a78, 0xd0a9, 0x1, 0x0);
        gbc.writeMem(0xe57a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5b79, gbc.sp());
        EXPECT(0xe57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57a));
        EXPECT(0x7d, gbc.readMem(0xe57b));
        // CB 7D 00C0
        gbc.setState(0xaaad, 0x25dc, 0x4f30, 0x1fd3, 0x7f9, 0xd77a, 0x1, 0x0);
        gbc.writeMem(0xaaad, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x25dc, gbc.sp());
        EXPECT(0xaaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaad));
        EXPECT(0x7d, gbc.readMem(0xaaae));
        // CB 7D 00C1
        gbc.setState(0x83e0, 0x5a9d, 0x3d80, 0x1da5, 0x8af7, 0xb1ae, 0x1, 0x1);
        gbc.writeMem(0x83e0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5a9d, gbc.sp());
        EXPECT(0x83e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e0));
        EXPECT(0x7d, gbc.readMem(0x83e1));
        // CB 7D 00C2
        gbc.setState(0x5789, 0xeb3f, 0xc8b0, 0x3e24, 0xd807, 0xb08b, 0x0, 0x1);
        gbc.writeMem(0x5789, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xeb3f, gbc.sp());
        EXPECT(0x578b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00C5
        gbc.setState(0xd5f5, 0xa1cf, 0x8240, 0x7d9a, 0x415f, 0x8f4f, 0x1, 0x1);
        gbc.writeMem(0xd5f5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa1cf, gbc.sp());
        EXPECT(0xd5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5f5));
        EXPECT(0x7d, gbc.readMem(0xd5f6));
        // CB 7D 00C6
        gbc.setState(0xa402, 0x85b, 0x6ea0, 0x85ae, 0xdc6f, 0x6e06, 0x1, 0x0);
        gbc.writeMem(0xa402, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x85b, gbc.sp());
        EXPECT(0xa404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa402));
        EXPECT(0x7d, gbc.readMem(0xa403));
        // CB 7D 00C7
        gbc.setState(0xd06f, 0x6d2c, 0x4250, 0xc87c, 0xcfe3, 0x6c07, 0x0, 0x0);
        gbc.writeMem(0xd06f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6d2c, gbc.sp());
        EXPECT(0xd071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd06f));
        EXPECT(0x7d, gbc.readMem(0xd070));
        // CB 7D 00C8
        gbc.setState(0x8fdb, 0x807f, 0x45c0, 0xe112, 0xebab, 0xa3c3, 0x0, 0x0);
        gbc.writeMem(0x8fdb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x807f, gbc.sp());
        EXPECT(0x8fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fdb));
        EXPECT(0x7d, gbc.readMem(0x8fdc));
        // CB 7D 00C9
        gbc.setState(0x6dd2, 0x7a59, 0x3e50, 0x29e3, 0x5425, 0x251e, 0x1, 0x0);
        gbc.writeMem(0x6dd2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7a59, gbc.sp());
        EXPECT(0x6dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00CA
        gbc.setState(0xdbcd, 0xcd47, 0xed90, 0x909d, 0x4745, 0xd97d, 0x0, 0x0);
        gbc.writeMem(0xdbcd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcd47, gbc.sp());
        EXPECT(0xdbcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbcd));
        EXPECT(0x7d, gbc.readMem(0xdbce));
        // CB 7D 00CB
        gbc.setState(0xd417, 0x20a4, 0x9000, 0x1af1, 0x8659, 0xea97, 0x0, 0x0);
        gbc.writeMem(0xd417, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x20a4, gbc.sp());
        EXPECT(0xd419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd417));
        EXPECT(0x7d, gbc.readMem(0xd418));
        // CB 7D 00CC
        gbc.setState(0x9b31, 0x67ca, 0xb380, 0xd3d2, 0xf304, 0x309c, 0x1, 0x1);
        gbc.writeMem(0x9b31, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x67ca, gbc.sp());
        EXPECT(0x9b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b31));
        EXPECT(0x7d, gbc.readMem(0x9b32));
        // CB 7D 00CD
        gbc.setState(0xdb06, 0x4add, 0x9350, 0x91f, 0x4aea, 0x194, 0x1, 0x0);
        gbc.writeMem(0xdb06, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4add, gbc.sp());
        EXPECT(0xdb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb06));
        EXPECT(0x7d, gbc.readMem(0xdb07));
        // CB 7D 00CE
        gbc.setState(0xb7b, 0x193c, 0x3770, 0x8213, 0x2c7f, 0xb679, 0x1, 0x1);
        gbc.writeMem(0xb7b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x193c, gbc.sp());
        EXPECT(0xb7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00CF
        gbc.setState(0xe1eb, 0x495b, 0x1430, 0x7452, 0x13d5, 0xb830, 0x1, 0x1);
        gbc.writeMem(0xe1eb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x495b, gbc.sp());
        EXPECT(0xe1ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1eb));
        EXPECT(0x7d, gbc.readMem(0xe1ec));
        // CB 7D 00D1
        gbc.setState(0x3116, 0x5ea4, 0x1280, 0x1591, 0xd67, 0x9067, 0x1, 0x1);
        gbc.writeMem(0x3116, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5ea4, gbc.sp());
        EXPECT(0x3118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00D2
        gbc.setState(0x590e, 0x983a, 0x88a0, 0xc25d, 0x8420, 0xcc4a, 0x1, 0x0);
        gbc.writeMem(0x590e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x983a, gbc.sp());
        EXPECT(0x5910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00D3
        gbc.setState(0x848a, 0xb72e, 0xd420, 0x7d01, 0x2d5b, 0x525b, 0x1, 0x1);
        gbc.writeMem(0x848a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb72e, gbc.sp());
        EXPECT(0x848c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848a));
        EXPECT(0x7d, gbc.readMem(0x848b));
        // CB 7D 00D4
        gbc.setState(0x583d, 0x15f1, 0xf210, 0xb69b, 0xadd1, 0x78b, 0x0, 0x0);
        gbc.writeMem(0x583d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x15f1, gbc.sp());
        EXPECT(0x583f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00D5
        gbc.setState(0x7a20, 0xbb4b, 0xdaf0, 0x3775, 0xe75d, 0xd070, 0x0, 0x0);
        gbc.writeMem(0x7a20, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbb4b, gbc.sp());
        EXPECT(0x7a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00D6
        gbc.setState(0xe1b2, 0xd455, 0xc600, 0xa36, 0x3fcb, 0x94bf, 0x0, 0x0);
        gbc.writeMem(0xe1b2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd455, gbc.sp());
        EXPECT(0xe1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b2));
        EXPECT(0x7d, gbc.readMem(0xe1b3));
        // CB 7D 00D7
        gbc.setState(0x80b7, 0x85a4, 0xf320, 0x1af2, 0x39a4, 0x6b29, 0x1, 0x1);
        gbc.writeMem(0x80b7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x85a4, gbc.sp());
        EXPECT(0x80b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80b7));
        EXPECT(0x7d, gbc.readMem(0x80b8));
        // CB 7D 00D8
        gbc.setState(0x6dce, 0xe554, 0xdc80, 0xfd73, 0xf3b4, 0xf48f, 0x0, 0x0);
        gbc.writeMem(0x6dce, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe554, gbc.sp());
        EXPECT(0x6dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00D9
        gbc.setState(0x20a7, 0x147b, 0xbfb0, 0x5897, 0xd025, 0x69e0, 0x1, 0x1);
        gbc.writeMem(0x20a7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x147b, gbc.sp());
        EXPECT(0x20a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00DA
        gbc.setState(0xf5e, 0xcf75, 0x8330, 0x8618, 0xb1ae, 0x39dd, 0x0, 0x0);
        gbc.writeMem(0xf5e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcf75, gbc.sp());
        EXPECT(0xf60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00DB
        gbc.setState(0xe836, 0x7d38, 0x4490, 0xc078, 0x2ada, 0x3d07, 0x1, 0x0);
        gbc.writeMem(0xe836, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7d38, gbc.sp());
        EXPECT(0xe838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe836));
        EXPECT(0x7d, gbc.readMem(0xe837));
        // CB 7D 00DC
        gbc.setState(0x4423, 0x58d, 0xe850, 0x72a8, 0x1913, 0x2df4, 0x1, 0x1);
        gbc.writeMem(0x4423, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x58d, gbc.sp());
        EXPECT(0x4425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00DD
        gbc.setState(0x39c0, 0x9b04, 0x1700, 0xb542, 0xc8f1, 0x350d, 0x0, 0x0);
        gbc.writeMem(0x39c0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9b04, gbc.sp());
        EXPECT(0x39c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00DE
        gbc.setState(0x2ac4, 0x83eb, 0x4720, 0xad43, 0x4ac8, 0x7180, 0x0, 0x1);
        gbc.writeMem(0x2ac4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x83eb, gbc.sp());
        EXPECT(0x2ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00DF
        gbc.setState(0x539d, 0x2b6f, 0x8230, 0xed04, 0xb3a2, 0xedf3, 0x0, 0x1);
        gbc.writeMem(0x539d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2b6f, gbc.sp());
        EXPECT(0x539f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00E0
        gbc.setState(0x1783, 0x103e, 0xd720, 0x31fd, 0xc703, 0x6c7b, 0x0, 0x1);
        gbc.writeMem(0x1783, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x103e, gbc.sp());
        EXPECT(0x1785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00E1
        gbc.setState(0x3515, 0x6f3a, 0x9ef0, 0xe88, 0x1d6c, 0xc762, 0x1, 0x0);
        gbc.writeMem(0x3515, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6f3a, gbc.sp());
        EXPECT(0x3517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00E2
        gbc.setState(0x52f0, 0x8468, 0x67f0, 0xc4f8, 0xd4cc, 0xba32, 0x1, 0x1);
        gbc.writeMem(0x52f0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8468, gbc.sp());
        EXPECT(0x52f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00E3
        gbc.setState(0x815c, 0x1c9a, 0x1260, 0xffc8, 0x98f7, 0xeced, 0x1, 0x0);
        gbc.writeMem(0x815c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1c9a, gbc.sp());
        EXPECT(0x815e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815c));
        EXPECT(0x7d, gbc.readMem(0x815d));
        // CB 7D 00E4
        gbc.setState(0x9959, 0x67f0, 0x7500, 0xaf7d, 0xb430, 0x17c7, 0x1, 0x1);
        gbc.writeMem(0x9959, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x67f0, gbc.sp());
        EXPECT(0x995b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9959));
        EXPECT(0x7d, gbc.readMem(0x995a));
        // CB 7D 00E6
        gbc.setState(0xda33, 0xa213, 0x2c60, 0x24bf, 0x4a2e, 0x4fe, 0x1, 0x1);
        gbc.writeMem(0xda33, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa213, gbc.sp());
        EXPECT(0xda35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda33));
        EXPECT(0x7d, gbc.readMem(0xda34));
        // CB 7D 00E7
        gbc.setState(0x7424, 0x62a, 0x2130, 0xdd0d, 0xe970, 0x220f, 0x1, 0x1);
        gbc.writeMem(0x7424, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x62a, gbc.sp());
        EXPECT(0x7426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00E8
        gbc.setState(0xaa, 0xa7d7, 0x97c0, 0xc121, 0xd0f4, 0xbbc5, 0x1, 0x0);
        gbc.writeMem(0xaa, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa7d7, gbc.sp());
        EXPECT(0xac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00E9
        gbc.setState(0x1a18, 0x7a25, 0x740, 0x9b43, 0xdacf, 0xe61f, 0x0, 0x1);
        gbc.writeMem(0x1a18, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7a25, gbc.sp());
        EXPECT(0x1a1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00EA
        gbc.setState(0xdbad, 0x7118, 0x9b10, 0x8f32, 0x26a2, 0x613f, 0x0, 0x0);
        gbc.writeMem(0xdbad, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7118, gbc.sp());
        EXPECT(0xdbaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbad));
        EXPECT(0x7d, gbc.readMem(0xdbae));
        // CB 7D 00EB
        gbc.setState(0xaf6b, 0x15f8, 0x94c0, 0x5e98, 0x59d2, 0xa6d4, 0x1, 0x1);
        gbc.writeMem(0xaf6b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x15f8, gbc.sp());
        EXPECT(0xaf6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6b));
        EXPECT(0x7d, gbc.readMem(0xaf6c));
        // CB 7D 00EC
        gbc.setState(0x73fd, 0xc305, 0x24e0, 0x74b, 0xa9d7, 0x7951, 0x0, 0x1);
        gbc.writeMem(0x73fd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc305, gbc.sp());
        EXPECT(0x73ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00ED
        gbc.setState(0x4f2c, 0x2add, 0x84c0, 0x2689, 0xe897, 0x20d, 0x1, 0x1);
        gbc.writeMem(0x4f2c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2add, gbc.sp());
        EXPECT(0x4f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00EF
        gbc.setState(0x870b, 0x869c, 0x7310, 0x3b8d, 0xd563, 0x9526, 0x1, 0x0);
        gbc.writeMem(0x870b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x869c, gbc.sp());
        EXPECT(0x870d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870b));
        EXPECT(0x7d, gbc.readMem(0x870c));
        // CB 7D 00F0
        gbc.setState(0xd783, 0x9a82, 0x3fe0, 0x6746, 0x28ce, 0x75c7, 0x1, 0x0);
        gbc.writeMem(0xd783, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9a82, gbc.sp());
        EXPECT(0xd785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd783));
        EXPECT(0x7d, gbc.readMem(0xd784));
        // CB 7D 00F1
        gbc.setState(0x1b35, 0xc458, 0x64d0, 0x28fd, 0xb14a, 0xb9a, 0x0, 0x1);
        gbc.writeMem(0x1b35, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc458, gbc.sp());
        EXPECT(0x1b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00F2
        gbc.setState(0xab4b, 0x30e7, 0x31c0, 0x370, 0x11bd, 0xcc55, 0x0, 0x0);
        gbc.writeMem(0xab4b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x30e7, gbc.sp());
        EXPECT(0xab4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab4b));
        EXPECT(0x7d, gbc.readMem(0xab4c));
        // CB 7D 00F3
        gbc.setState(0x8d63, 0x2bd2, 0xc050, 0x1ca0, 0x4214, 0x1183, 0x1, 0x1);
        gbc.writeMem(0x8d63, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2bd2, gbc.sp());
        EXPECT(0x8d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d63));
        EXPECT(0x7d, gbc.readMem(0x8d64));
        // CB 7D 00F4
        gbc.setState(0xb860, 0xc88d, 0x27b0, 0xc621, 0xc836, 0x6e2, 0x0, 0x0);
        gbc.writeMem(0xb860, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc88d, gbc.sp());
        EXPECT(0xb862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb860));
        EXPECT(0x7d, gbc.readMem(0xb861));
        // CB 7D 00F5
        gbc.setState(0xb8b, 0xd854, 0x84f0, 0x8485, 0x27df, 0x8359, 0x1, 0x0);
        gbc.writeMem(0xb8b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd854, gbc.sp());
        EXPECT(0xb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00F6
        gbc.setState(0x5d92, 0xd631, 0x57a0, 0xa50d, 0xcd6d, 0x1f0f, 0x1, 0x1);
        gbc.writeMem(0x5d92, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd631, gbc.sp());
        EXPECT(0x5d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 00F7
        gbc.setState(0xbe12, 0x7450, 0x5620, 0xa34b, 0x2bcd, 0xa8d0, 0x0, 0x1);
        gbc.writeMem(0xbe12, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7450, gbc.sp());
        EXPECT(0xbe14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe12));
        EXPECT(0x7d, gbc.readMem(0xbe13));
        // CB 7D 00F8
        gbc.setState(0x6782, 0x202a, 0x4eb0, 0xc447, 0x42f1, 0x7a10, 0x1, 0x0);
        gbc.writeMem(0x6782, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x202a, gbc.sp());
        EXPECT(0x6784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00FA
        gbc.setState(0xaec5, 0x58b9, 0x4e50, 0x3cdf, 0xab1a, 0xd2fc, 0x0, 0x1);
        gbc.writeMem(0xaec5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x58b9, gbc.sp());
        EXPECT(0xaec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec5));
        EXPECT(0x7d, gbc.readMem(0xaec6));
        // CB 7D 00FB
        gbc.setState(0xa572, 0xea42, 0x8860, 0x7b20, 0x890a, 0x9dfd, 0x1, 0x0);
        gbc.writeMem(0xa572, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xea42, gbc.sp());
        EXPECT(0xa574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa572));
        EXPECT(0x7d, gbc.readMem(0xa573));
        // CB 7D 00FC
        gbc.setState(0x85fa, 0x5ea7, 0xb970, 0xd10d, 0x9541, 0xb759, 0x0, 0x1);
        gbc.writeMem(0x85fa, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5ea7, gbc.sp());
        EXPECT(0x85fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fa));
        EXPECT(0x7d, gbc.readMem(0x85fb));
        // CB 7D 00FD
        gbc.setState(0x91a1, 0xc954, 0x1a0, 0xc65f, 0x4869, 0x622, 0x1, 0x0);
        gbc.writeMem(0x91a1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc954, gbc.sp());
        EXPECT(0x91a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a1));
        EXPECT(0x7d, gbc.readMem(0x91a2));
        // CB 7D 00FE
        gbc.setState(0x24de, 0x7007, 0xa430, 0xa59d, 0xefbd, 0xedcf, 0x1, 0x1);
        gbc.writeMem(0x24de, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7007, gbc.sp());
        EXPECT(0x24e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 00FF
        gbc.setState(0x1822, 0xe552, 0xec60, 0xade3, 0xf00a, 0xcaea, 0x1, 0x1);
        gbc.writeMem(0x1822, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe552, gbc.sp());
        EXPECT(0x1824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0100
        gbc.setState(0x9233, 0xfdb, 0x2f30, 0xd3a4, 0xc9ec, 0x97a, 0x0, 0x1);
        gbc.writeMem(0x9233, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfdb, gbc.sp());
        EXPECT(0x9235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9233));
        EXPECT(0x7d, gbc.readMem(0x9234));
        // CB 7D 0101
        gbc.setState(0x8ee2, 0x6942, 0xba50, 0x16eb, 0x7782, 0xf06e, 0x1, 0x1);
        gbc.writeMem(0x8ee2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6942, gbc.sp());
        EXPECT(0x8ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee2));
        EXPECT(0x7d, gbc.readMem(0x8ee3));
        // CB 7D 0102
        gbc.setState(0x7c66, 0x2018, 0x1010, 0x4421, 0xe162, 0x5aff, 0x1, 0x0);
        gbc.writeMem(0x7c66, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2018, gbc.sp());
        EXPECT(0x7c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0103
        gbc.setState(0x983d, 0xa44c, 0xf870, 0x9fa5, 0xcde1, 0x81eb, 0x0, 0x0);
        gbc.writeMem(0x983d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa44c, gbc.sp());
        EXPECT(0x983f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983d));
        EXPECT(0x7d, gbc.readMem(0x983e));
        // CB 7D 0104
        gbc.setState(0xb7cb, 0x3717, 0x270, 0x43d6, 0x3ec1, 0xb559, 0x1, 0x0);
        gbc.writeMem(0xb7cb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3717, gbc.sp());
        EXPECT(0xb7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7cb));
        EXPECT(0x7d, gbc.readMem(0xb7cc));
        // CB 7D 0105
        gbc.setState(0xdcea, 0x77fb, 0x47c0, 0xe909, 0xd89, 0x75db, 0x0, 0x1);
        gbc.writeMem(0xdcea, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x77fb, gbc.sp());
        EXPECT(0xdcec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcea));
        EXPECT(0x7d, gbc.readMem(0xdceb));
        // CB 7D 0106
        gbc.setState(0x9e33, 0x823a, 0xa840, 0x799b, 0x1b2a, 0x796d, 0x1, 0x1);
        gbc.writeMem(0x9e33, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x823a, gbc.sp());
        EXPECT(0x9e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e33));
        EXPECT(0x7d, gbc.readMem(0x9e34));
        // CB 7D 0107
        gbc.setState(0xcdd5, 0xdd61, 0x3c00, 0xe065, 0x224a, 0x7f98, 0x1, 0x0);
        gbc.writeMem(0xcdd5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdd61, gbc.sp());
        EXPECT(0xcdd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd5));
        EXPECT(0x7d, gbc.readMem(0xcdd6));
        // CB 7D 0109
        gbc.setState(0xd6a0, 0x1ae0, 0xbfe0, 0x758a, 0x6e2e, 0xbcd2, 0x0, 0x1);
        gbc.writeMem(0xd6a0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1ae0, gbc.sp());
        EXPECT(0xd6a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a0));
        EXPECT(0x7d, gbc.readMem(0xd6a1));
        // CB 7D 010A
        gbc.setState(0x9585, 0x3f7c, 0xce80, 0x45a1, 0xc53a, 0x4079, 0x1, 0x1);
        gbc.writeMem(0x9585, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3f7c, gbc.sp());
        EXPECT(0x9587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9585));
        EXPECT(0x7d, gbc.readMem(0x9586));
        // CB 7D 010B
        gbc.setState(0xae42, 0xfbcd, 0x3690, 0x6d0d, 0x279d, 0xd2aa, 0x1, 0x0);
        gbc.writeMem(0xae42, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfbcd, gbc.sp());
        EXPECT(0xae44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae42));
        EXPECT(0x7d, gbc.readMem(0xae43));
        // CB 7D 010C
        gbc.setState(0xb8a9, 0x804d, 0xc210, 0xe677, 0x54f6, 0x52bc, 0x1, 0x1);
        gbc.writeMem(0xb8a9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x804d, gbc.sp());
        EXPECT(0xb8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a9));
        EXPECT(0x7d, gbc.readMem(0xb8aa));
        // CB 7D 010D
        gbc.setState(0xb607, 0x5ce, 0x7820, 0x8e9d, 0x4e07, 0xa3fa, 0x0, 0x0);
        gbc.writeMem(0xb607, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5ce, gbc.sp());
        EXPECT(0xb609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb607));
        EXPECT(0x7d, gbc.readMem(0xb608));
        // CB 7D 010E
        gbc.setState(0x8b82, 0xe249, 0x92a0, 0x4637, 0xd6bf, 0x53b1, 0x1, 0x0);
        gbc.writeMem(0x8b82, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe249, gbc.sp());
        EXPECT(0x8b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b82));
        EXPECT(0x7d, gbc.readMem(0x8b83));
        // CB 7D 010F
        gbc.setState(0xc22, 0xa836, 0x9a30, 0x884b, 0x7d93, 0x8143, 0x1, 0x0);
        gbc.writeMem(0xc22, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa836, gbc.sp());
        EXPECT(0xc24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0110
        gbc.setState(0x7cf9, 0x6057, 0xc0a0, 0x91ab, 0xf296, 0x8d5c, 0x0, 0x1);
        gbc.writeMem(0x7cf9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6057, gbc.sp());
        EXPECT(0x7cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0112
        gbc.setState(0x1fdf, 0x2028, 0xa530, 0xba74, 0xc2aa, 0x8332, 0x1, 0x1);
        gbc.writeMem(0x1fdf, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2028, gbc.sp());
        EXPECT(0x1fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0113
        gbc.setState(0xa264, 0xa4e9, 0x7f10, 0xa767, 0x9822, 0xa3eb, 0x0, 0x1);
        gbc.writeMem(0xa264, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa4e9, gbc.sp());
        EXPECT(0xa266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa264));
        EXPECT(0x7d, gbc.readMem(0xa265));
        // CB 7D 0114
        gbc.setState(0xb491, 0xa42f, 0x7140, 0xced1, 0x496f, 0x4e6e, 0x1, 0x0);
        gbc.writeMem(0xb491, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa42f, gbc.sp());
        EXPECT(0xb493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb491));
        EXPECT(0x7d, gbc.readMem(0xb492));
        // CB 7D 0115
        gbc.setState(0xc84d, 0x5bfc, 0x10f0, 0xe826, 0x7e48, 0xec81, 0x1, 0x1);
        gbc.writeMem(0xc84d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5bfc, gbc.sp());
        EXPECT(0xc84f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84d));
        EXPECT(0x7d, gbc.readMem(0xc84e));
        // CB 7D 0116
        gbc.setState(0x6c75, 0x34b0, 0xd660, 0x3564, 0xcc43, 0xc3ea, 0x1, 0x1);
        gbc.writeMem(0x6c75, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x34b0, gbc.sp());
        EXPECT(0x6c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0117
        gbc.setState(0x851, 0x83ec, 0x5ed0, 0xeebd, 0xc0c9, 0xc9ae, 0x1, 0x1);
        gbc.writeMem(0x851, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x83ec, gbc.sp());
        EXPECT(0x853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0118
        gbc.setState(0x8724, 0x8e14, 0x2e10, 0x6dbb, 0xfbe7, 0xbdf3, 0x0, 0x0);
        gbc.writeMem(0x8724, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8e14, gbc.sp());
        EXPECT(0x8726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8724));
        EXPECT(0x7d, gbc.readMem(0x8725));
        // CB 7D 0119
        gbc.setState(0xad35, 0x8db2, 0x9e10, 0xfa06, 0x9e8, 0xe3b6, 0x0, 0x0);
        gbc.writeMem(0xad35, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8db2, gbc.sp());
        EXPECT(0xad37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad35));
        EXPECT(0x7d, gbc.readMem(0xad36));
        // CB 7D 011A
        gbc.setState(0x3788, 0xe723, 0xd6d0, 0xfbc2, 0xb8a3, 0x7c35, 0x0, 0x0);
        gbc.writeMem(0x3788, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe723, gbc.sp());
        EXPECT(0x378a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 011B
        gbc.setState(0xbd69, 0x56b0, 0x4c90, 0x24a6, 0xb61a, 0x429f, 0x0, 0x0);
        gbc.writeMem(0xbd69, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x56b0, gbc.sp());
        EXPECT(0xbd6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd69));
        EXPECT(0x7d, gbc.readMem(0xbd6a));
        // CB 7D 011C
        gbc.setState(0xac96, 0x8e55, 0x3240, 0x2de5, 0xa7bf, 0x7ad4, 0x0, 0x1);
        gbc.writeMem(0xac96, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8e55, gbc.sp());
        EXPECT(0xac98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac96));
        EXPECT(0x7d, gbc.readMem(0xac97));
        // CB 7D 011D
        gbc.setState(0x7f6f, 0xf0ac, 0x8f10, 0xaf8e, 0x120e, 0x21fc, 0x0, 0x1);
        gbc.writeMem(0x7f6f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf0ac, gbc.sp());
        EXPECT(0x7f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 011E
        gbc.setState(0x2ebd, 0x2d53, 0x1220, 0x5c04, 0x90c2, 0x4a63, 0x1, 0x0);
        gbc.writeMem(0x2ebd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2d53, gbc.sp());
        EXPECT(0x2ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 011F
        gbc.setState(0x2c48, 0x2c04, 0xb1d0, 0xfa00, 0xd145, 0x3b85, 0x0, 0x1);
        gbc.writeMem(0x2c48, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2c04, gbc.sp());
        EXPECT(0x2c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0120
        gbc.setState(0x90dd, 0xb184, 0xcdc0, 0xb8c9, 0x51cb, 0xccb1, 0x1, 0x1);
        gbc.writeMem(0x90dd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb184, gbc.sp());
        EXPECT(0x90df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90dd));
        EXPECT(0x7d, gbc.readMem(0x90de));
        // CB 7D 0121
        gbc.setState(0x80e5, 0xa9b1, 0xb8e0, 0x531c, 0xd577, 0x2e2e, 0x1, 0x1);
        gbc.writeMem(0x80e5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa9b1, gbc.sp());
        EXPECT(0x80e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e5));
        EXPECT(0x7d, gbc.readMem(0x80e6));
        // CB 7D 0122
        gbc.setState(0xc2f0, 0x136c, 0xcdb0, 0xe93c, 0x9808, 0xb9e6, 0x1, 0x1);
        gbc.writeMem(0xc2f0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x136c, gbc.sp());
        EXPECT(0xc2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f0));
        EXPECT(0x7d, gbc.readMem(0xc2f1));
        // CB 7D 0123
        gbc.setState(0x64a5, 0xd38, 0x62c0, 0x66b0, 0xdc23, 0x41e4, 0x1, 0x0);
        gbc.writeMem(0x64a5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd38, gbc.sp());
        EXPECT(0x64a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0124
        gbc.setState(0x8cc1, 0x358f, 0x82a0, 0xf516, 0xe75d, 0x717c, 0x0, 0x0);
        gbc.writeMem(0x8cc1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x358f, gbc.sp());
        EXPECT(0x8cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc1));
        EXPECT(0x7d, gbc.readMem(0x8cc2));
        // CB 7D 0125
        gbc.setState(0xb7c2, 0x6d7, 0x8ad0, 0xfbb8, 0xbdbb, 0x3886, 0x1, 0x1);
        gbc.writeMem(0xb7c2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6d7, gbc.sp());
        EXPECT(0xb7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c2));
        EXPECT(0x7d, gbc.readMem(0xb7c3));
        // CB 7D 0126
        gbc.setState(0x1447, 0xb78e, 0x6c00, 0x79a3, 0x49c0, 0x5b23, 0x1, 0x1);
        gbc.writeMem(0x1447, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb78e, gbc.sp());
        EXPECT(0x1449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0127
        gbc.setState(0x2163, 0x5f3, 0xba0, 0xc3e4, 0xb6df, 0x7ff0, 0x0, 0x0);
        gbc.writeMem(0x2163, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5f3, gbc.sp());
        EXPECT(0x2165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0128
        gbc.setState(0xed6b, 0xe31e, 0x23f0, 0xfb68, 0x6138, 0x5913, 0x1, 0x0);
        gbc.writeMem(0xed6b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe31e, gbc.sp());
        EXPECT(0xed6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed6b));
        EXPECT(0x7d, gbc.readMem(0xed6c));
        // CB 7D 0129
        gbc.setState(0x71a0, 0xce02, 0x7270, 0x655f, 0x2aec, 0xfddf, 0x0, 0x0);
        gbc.writeMem(0x71a0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xce02, gbc.sp());
        EXPECT(0x71a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 012A
        gbc.setState(0x86c8, 0xe9cc, 0xf4d0, 0xb684, 0x17b9, 0xd27f, 0x0, 0x1);
        gbc.writeMem(0x86c8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe9cc, gbc.sp());
        EXPECT(0x86ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c8));
        EXPECT(0x7d, gbc.readMem(0x86c9));
        // CB 7D 012B
        gbc.setState(0x85a5, 0x9adb, 0xc030, 0x8216, 0x91f1, 0x2f05, 0x0, 0x1);
        gbc.writeMem(0x85a5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9adb, gbc.sp());
        EXPECT(0x85a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a5));
        EXPECT(0x7d, gbc.readMem(0x85a6));
        // CB 7D 012C
        gbc.setState(0xbf07, 0x3e6f, 0x9cb0, 0x316e, 0x8e05, 0x5480, 0x0, 0x1);
        gbc.writeMem(0xbf07, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3e6f, gbc.sp());
        EXPECT(0xbf09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf07));
        EXPECT(0x7d, gbc.readMem(0xbf08));
        // CB 7D 012D
        gbc.setState(0xdff3, 0xc34c, 0x65c0, 0xde43, 0xd73a, 0x9041, 0x1, 0x1);
        gbc.writeMem(0xdff3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc34c, gbc.sp());
        EXPECT(0xdff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff3));
        EXPECT(0x7d, gbc.readMem(0xdff4));
        // CB 7D 012E
        gbc.setState(0x2751, 0x2765, 0x45d0, 0x4a2a, 0x9205, 0x5570, 0x1, 0x0);
        gbc.writeMem(0x2751, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2765, gbc.sp());
        EXPECT(0x2753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 012F
        gbc.setState(0x6c8a, 0x4d83, 0x1c80, 0x389d, 0x4f4, 0xaf72, 0x1, 0x1);
        gbc.writeMem(0x6c8a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4d83, gbc.sp());
        EXPECT(0x6c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0130
        gbc.setState(0x5d28, 0xe678, 0xd3a0, 0x90ba, 0xc598, 0xd5f4, 0x0, 0x1);
        gbc.writeMem(0x5d28, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe678, gbc.sp());
        EXPECT(0x5d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0131
        gbc.setState(0xb541, 0xba35, 0xdb20, 0xf80b, 0x176a, 0x9448, 0x0, 0x0);
        gbc.writeMem(0xb541, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xba35, gbc.sp());
        EXPECT(0xb543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb541));
        EXPECT(0x7d, gbc.readMem(0xb542));
        // CB 7D 0132
        gbc.setState(0x923c, 0x2dc, 0x320, 0x8f7f, 0xf8, 0xdc1d, 0x1, 0x0);
        gbc.writeMem(0x923c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2dc, gbc.sp());
        EXPECT(0x923e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x923c));
        EXPECT(0x7d, gbc.readMem(0x923d));
        // CB 7D 0134
        gbc.setState(0xcc6a, 0xbb0f, 0x4d40, 0x814, 0x65f9, 0xeb31, 0x1, 0x1);
        gbc.writeMem(0xcc6a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbb0f, gbc.sp());
        EXPECT(0xcc6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc6a));
        EXPECT(0x7d, gbc.readMem(0xcc6b));
        // CB 7D 0135
        gbc.setState(0xbf2a, 0xe43a, 0x4630, 0x40d7, 0xa26d, 0x84f6, 0x1, 0x1);
        gbc.writeMem(0xbf2a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe43a, gbc.sp());
        EXPECT(0xbf2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf2a));
        EXPECT(0x7d, gbc.readMem(0xbf2b));
        // CB 7D 0136
        gbc.setState(0x1312, 0x60ce, 0x6d40, 0x29ba, 0x8b34, 0xcd8c, 0x0, 0x1);
        gbc.writeMem(0x1312, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x60ce, gbc.sp());
        EXPECT(0x1314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0137
        gbc.setState(0xe43a, 0xb88b, 0x91c0, 0x2b41, 0x2392, 0x2c9c, 0x1, 0x0);
        gbc.writeMem(0xe43a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb88b, gbc.sp());
        EXPECT(0xe43c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe43a));
        EXPECT(0x7d, gbc.readMem(0xe43b));
        // CB 7D 0138
        gbc.setState(0xeb1a, 0x67f6, 0x6c60, 0x5dbe, 0x3ee9, 0x1c48, 0x0, 0x0);
        gbc.writeMem(0xeb1a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x67f6, gbc.sp());
        EXPECT(0xeb1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1a));
        EXPECT(0x7d, gbc.readMem(0xeb1b));
        // CB 7D 0139
        gbc.setState(0x9d61, 0x18bb, 0x51b0, 0x91f6, 0x8bd6, 0xbabe, 0x0, 0x0);
        gbc.writeMem(0x9d61, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x18bb, gbc.sp());
        EXPECT(0x9d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d61));
        EXPECT(0x7d, gbc.readMem(0x9d62));
        // CB 7D 013A
        gbc.setState(0xc9dd, 0x8be, 0xa570, 0x7509, 0xd1d2, 0xbca, 0x0, 0x1);
        gbc.writeMem(0xc9dd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8be, gbc.sp());
        EXPECT(0xc9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9dd));
        EXPECT(0x7d, gbc.readMem(0xc9de));
        // CB 7D 013B
        gbc.setState(0x2c28, 0x5973, 0x5a20, 0xdf5f, 0x35b8, 0xb43c, 0x0, 0x1);
        gbc.writeMem(0x2c28, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5973, gbc.sp());
        EXPECT(0x2c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 013C
        gbc.setState(0xcbbf, 0x9b34, 0xbe50, 0xf0dd, 0x1ea9, 0x4cb3, 0x0, 0x1);
        gbc.writeMem(0xcbbf, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9b34, gbc.sp());
        EXPECT(0xcbc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbf));
        EXPECT(0x7d, gbc.readMem(0xcbc0));
        // CB 7D 013D
        gbc.setState(0xb85e, 0x8d6b, 0x2b90, 0x5280, 0xb881, 0x20d1, 0x0, 0x1);
        gbc.writeMem(0xb85e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8d6b, gbc.sp());
        EXPECT(0xb860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85e));
        EXPECT(0x7d, gbc.readMem(0xb85f));
        // CB 7D 013E
        gbc.setState(0xa37e, 0x9c0a, 0x4b80, 0xc981, 0xff63, 0x80e0, 0x1, 0x1);
        gbc.writeMem(0xa37e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9c0a, gbc.sp());
        EXPECT(0xa380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37e));
        EXPECT(0x7d, gbc.readMem(0xa37f));
        // CB 7D 013F
        gbc.setState(0x29c5, 0xef70, 0x820, 0x9e71, 0x4d3e, 0x1333, 0x1, 0x1);
        gbc.writeMem(0x29c5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xef70, gbc.sp());
        EXPECT(0x29c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0140
        gbc.setState(0x6901, 0xc74a, 0xd730, 0x9599, 0x24a, 0x77c8, 0x1, 0x0);
        gbc.writeMem(0x6901, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc74a, gbc.sp());
        EXPECT(0x6903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0141
        gbc.setState(0x9981, 0x8de0, 0xbba0, 0x72f4, 0xef99, 0x8f00, 0x0, 0x0);
        gbc.writeMem(0x9981, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8de0, gbc.sp());
        EXPECT(0x9983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9981));
        EXPECT(0x7d, gbc.readMem(0x9982));
        // CB 7D 0142
        gbc.setState(0x8b85, 0x93bb, 0xc680, 0x827, 0x6f51, 0x7bc6, 0x0, 0x0);
        gbc.writeMem(0x8b85, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x93bb, gbc.sp());
        EXPECT(0x8b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b85));
        EXPECT(0x7d, gbc.readMem(0x8b86));
        // CB 7D 0143
        gbc.setState(0x43de, 0x2231, 0x4870, 0x2863, 0x41c3, 0x25b8, 0x1, 0x1);
        gbc.writeMem(0x43de, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2231, gbc.sp());
        EXPECT(0x43e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0144
        gbc.setState(0x7bd8, 0x958d, 0xe8d0, 0x84c7, 0x4639, 0xdf47, 0x0, 0x1);
        gbc.writeMem(0x7bd8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x958d, gbc.sp());
        EXPECT(0x7bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0145
        gbc.setState(0x5428, 0x67ed, 0xe10, 0x9a32, 0x75c6, 0x854d, 0x1, 0x1);
        gbc.writeMem(0x5428, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x67ed, gbc.sp());
        EXPECT(0x542a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0146
        gbc.setState(0x1f2f, 0x9326, 0x8370, 0x6501, 0x5d70, 0xc05c, 0x0, 0x1);
        gbc.writeMem(0x1f2f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9326, gbc.sp());
        EXPECT(0x1f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0147
        gbc.setState(0xa116, 0x22ba, 0x5ae0, 0xed7f, 0x84b1, 0xca83, 0x0, 0x1);
        gbc.writeMem(0xa116, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x22ba, gbc.sp());
        EXPECT(0xa118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa116));
        EXPECT(0x7d, gbc.readMem(0xa117));
        // CB 7D 0148
        gbc.setState(0x1fa3, 0x6dbd, 0x7a10, 0xee12, 0x6127, 0x73be, 0x1, 0x1);
        gbc.writeMem(0x1fa3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6dbd, gbc.sp());
        EXPECT(0x1fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0149
        gbc.setState(0xd3ab, 0x5de1, 0x2e70, 0x79c9, 0xcb8e, 0xba17, 0x0, 0x0);
        gbc.writeMem(0xd3ab, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5de1, gbc.sp());
        EXPECT(0xd3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ab));
        EXPECT(0x7d, gbc.readMem(0xd3ac));
        // CB 7D 014A
        gbc.setState(0x84ee, 0x16b7, 0x2ea0, 0x1138, 0xc4b9, 0x2f6b, 0x1, 0x1);
        gbc.writeMem(0x84ee, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x16b7, gbc.sp());
        EXPECT(0x84f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ee));
        EXPECT(0x7d, gbc.readMem(0x84ef));
        // CB 7D 014B
        gbc.setState(0x1fcb, 0x29f6, 0x5f10, 0xb0d, 0xab8a, 0x5105, 0x1, 0x1);
        gbc.writeMem(0x1fcb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x29f6, gbc.sp());
        EXPECT(0x1fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 014C
        gbc.setState(0x5a54, 0x1915, 0xfc30, 0xd26c, 0x1c4c, 0xd1c9, 0x1, 0x1);
        gbc.writeMem(0x5a54, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1915, gbc.sp());
        EXPECT(0x5a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 014D
        gbc.setState(0x1655, 0x5b80, 0xa310, 0x2bf, 0x6364, 0x265d, 0x1, 0x0);
        gbc.writeMem(0x1655, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5b80, gbc.sp());
        EXPECT(0x1657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 014E
        gbc.setState(0x267c, 0xdeca, 0x1000, 0xcc67, 0x7b53, 0xf256, 0x0, 0x1);
        gbc.writeMem(0x267c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdeca, gbc.sp());
        EXPECT(0x267e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 014F
        gbc.setState(0xd7ae, 0x504b, 0x7890, 0xa9e7, 0x4aef, 0xc6c8, 0x1, 0x0);
        gbc.writeMem(0xd7ae, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x504b, gbc.sp());
        EXPECT(0xd7b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ae));
        EXPECT(0x7d, gbc.readMem(0xd7af));
        // CB 7D 0150
        gbc.setState(0x8bf6, 0xc136, 0xadc0, 0x99c4, 0x1b52, 0xcace, 0x0, 0x1);
        gbc.writeMem(0x8bf6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc136, gbc.sp());
        EXPECT(0x8bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf6));
        EXPECT(0x7d, gbc.readMem(0x8bf7));
        // CB 7D 0151
        gbc.setState(0xea73, 0x4639, 0x7ac0, 0x7a3a, 0xafe4, 0xdec0, 0x0, 0x0);
        gbc.writeMem(0xea73, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4639, gbc.sp());
        EXPECT(0xea75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea73));
        EXPECT(0x7d, gbc.readMem(0xea74));
        // CB 7D 0152
        gbc.setState(0xe6fe, 0xcb78, 0x8160, 0xae89, 0xac9e, 0xfed1, 0x0, 0x1);
        gbc.writeMem(0xe6fe, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcb78, gbc.sp());
        EXPECT(0xe700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6fe));
        EXPECT(0x7d, gbc.readMem(0xe6ff));
        // CB 7D 0154
        gbc.setState(0xefea, 0x9fbd, 0xc060, 0xb66f, 0x4fa1, 0xaf13, 0x1, 0x1);
        gbc.writeMem(0xefea, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9fbd, gbc.sp());
        EXPECT(0xefec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefea));
        EXPECT(0x7d, gbc.readMem(0xefeb));
        // CB 7D 0155
        gbc.setState(0x6787, 0x8562, 0xd350, 0x1deb, 0x38ff, 0x438c, 0x1, 0x0);
        gbc.writeMem(0x6787, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8562, gbc.sp());
        EXPECT(0x6789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0156
        gbc.setState(0xc891, 0xc57b, 0xaf50, 0x75f5, 0x4753, 0x6769, 0x1, 0x1);
        gbc.writeMem(0xc891, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc57b, gbc.sp());
        EXPECT(0xc893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc891));
        EXPECT(0x7d, gbc.readMem(0xc892));
        // CB 7D 0157
        gbc.setState(0x210a, 0xfbb5, 0x1a10, 0xc5f3, 0x8eb2, 0x2c6, 0x1, 0x0);
        gbc.writeMem(0x210a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfbb5, gbc.sp());
        EXPECT(0x210c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0158
        gbc.setState(0xd0fd, 0x236e, 0xe4a0, 0x4f29, 0x16b1, 0xf9bc, 0x0, 0x1);
        gbc.writeMem(0xd0fd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x236e, gbc.sp());
        EXPECT(0xd0ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0fd));
        EXPECT(0x7d, gbc.readMem(0xd0fe));
        // CB 7D 0159
        gbc.setState(0x3772, 0xfca5, 0x3f30, 0x7f6e, 0x5cfa, 0xd6e4, 0x0, 0x1);
        gbc.writeMem(0x3772, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfca5, gbc.sp());
        EXPECT(0x3774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 015A
        gbc.setState(0x8f6e, 0x8eaf, 0xcc80, 0x94f3, 0xbe61, 0x2dfc, 0x0, 0x0);
        gbc.writeMem(0x8f6e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8eaf, gbc.sp());
        EXPECT(0x8f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f6e));
        EXPECT(0x7d, gbc.readMem(0x8f6f));
        // CB 7D 015B
        gbc.setState(0xe7b4, 0x2a7, 0xa930, 0xb92e, 0xf500, 0x31ec, 0x0, 0x0);
        gbc.writeMem(0xe7b4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2a7, gbc.sp());
        EXPECT(0xe7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b4));
        EXPECT(0x7d, gbc.readMem(0xe7b5));
        // CB 7D 015C
        gbc.setState(0xc9ba, 0x50a7, 0x45b0, 0x129f, 0x5bde, 0xf1b2, 0x0, 0x0);
        gbc.writeMem(0xc9ba, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x50a7, gbc.sp());
        EXPECT(0xc9bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ba));
        EXPECT(0x7d, gbc.readMem(0xc9bb));
        // CB 7D 015D
        gbc.setState(0x61e7, 0x7abb, 0x4d80, 0x28a9, 0xa946, 0xedb, 0x0, 0x0);
        gbc.writeMem(0x61e7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7abb, gbc.sp());
        EXPECT(0x61e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 015E
        gbc.setState(0x586e, 0xb8d4, 0x64e0, 0xffc8, 0x264c, 0xb278, 0x1, 0x0);
        gbc.writeMem(0x586e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb8d4, gbc.sp());
        EXPECT(0x5870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 015F
        gbc.setState(0x2b9e, 0x919e, 0x4520, 0x97a9, 0xf54a, 0x5670, 0x1, 0x0);
        gbc.writeMem(0x2b9e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x919e, gbc.sp());
        EXPECT(0x2ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0160
        gbc.setState(0x755d, 0x60cf, 0xcfe0, 0xa92d, 0x4c5, 0xc708, 0x1, 0x1);
        gbc.writeMem(0x755d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x60cf, gbc.sp());
        EXPECT(0x755f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0161
        gbc.setState(0xd8e, 0xf9f6, 0xdcf0, 0x7840, 0xcc5f, 0x82ca, 0x1, 0x0);
        gbc.writeMem(0xd8e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf9f6, gbc.sp());
        EXPECT(0xd90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0162
        gbc.setState(0x22cb, 0x7365, 0x4a40, 0x26f9, 0xe41, 0x7518, 0x0, 0x0);
        gbc.writeMem(0x22cb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7365, gbc.sp());
        EXPECT(0x22cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0163
        gbc.setState(0x47c1, 0xc075, 0x7990, 0xf4a8, 0x1e04, 0xb8ab, 0x1, 0x0);
        gbc.writeMem(0x47c1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc075, gbc.sp());
        EXPECT(0x47c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0164
        gbc.setState(0x1799, 0x6812, 0x4bc0, 0x8e89, 0x7bda, 0x1f7e, 0x0, 0x1);
        gbc.writeMem(0x1799, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6812, gbc.sp());
        EXPECT(0x179b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0165
        gbc.setState(0xb51c, 0x5c44, 0x7490, 0x21d7, 0xe520, 0x16d4, 0x1, 0x0);
        gbc.writeMem(0xb51c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5c44, gbc.sp());
        EXPECT(0xb51e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb51c));
        EXPECT(0x7d, gbc.readMem(0xb51d));
        // CB 7D 0166
        gbc.setState(0x386b, 0xde47, 0x7550, 0x7476, 0x24ee, 0x5786, 0x0, 0x0);
        gbc.writeMem(0x386b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xde47, gbc.sp());
        EXPECT(0x386d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0167
        gbc.setState(0x618b, 0x5468, 0x8050, 0x376, 0x3b34, 0xdeb0, 0x1, 0x0);
        gbc.writeMem(0x618b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5468, gbc.sp());
        EXPECT(0x618d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0168
        gbc.setState(0x78c9, 0x2148, 0xfaa0, 0xd3e8, 0x5c24, 0x66f5, 0x0, 0x0);
        gbc.writeMem(0x78c9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2148, gbc.sp());
        EXPECT(0x78cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0169
        gbc.setState(0xa42c, 0x5ff9, 0x410, 0x46c7, 0x4b21, 0xe4d3, 0x1, 0x1);
        gbc.writeMem(0xa42c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5ff9, gbc.sp());
        EXPECT(0xa42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42c));
        EXPECT(0x7d, gbc.readMem(0xa42d));
        // CB 7D 016A
        gbc.setState(0x6ecf, 0xd1b1, 0x22f0, 0x8dcd, 0x64be, 0x473e, 0x0, 0x1);
        gbc.writeMem(0x6ecf, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd1b1, gbc.sp());
        EXPECT(0x6ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 016B
        gbc.setState(0xe7e3, 0x70a3, 0xbe80, 0xf563, 0xfb16, 0xb2bb, 0x0, 0x0);
        gbc.writeMem(0xe7e3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x70a3, gbc.sp());
        EXPECT(0xe7e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e3));
        EXPECT(0x7d, gbc.readMem(0xe7e4));
        // CB 7D 016D
        gbc.setState(0x5700, 0xdfac, 0x4260, 0x188f, 0x89ea, 0x34c3, 0x0, 0x1);
        gbc.writeMem(0x5700, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdfac, gbc.sp());
        EXPECT(0x5702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 016E
        gbc.setState(0xaddb, 0x2466, 0xf000, 0x4bbf, 0x82f, 0x5328, 0x1, 0x1);
        gbc.writeMem(0xaddb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2466, gbc.sp());
        EXPECT(0xaddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddb));
        EXPECT(0x7d, gbc.readMem(0xaddc));
        // CB 7D 016F
        gbc.setState(0x85e, 0xff75, 0x9120, 0x2e63, 0x66f1, 0x3041, 0x1, 0x1);
        gbc.writeMem(0x85e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xff75, gbc.sp());
        EXPECT(0x860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0170
        gbc.setState(0x58bd, 0x79f6, 0x4180, 0xcd72, 0x976d, 0x22d0, 0x0, 0x1);
        gbc.writeMem(0x58bd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x79f6, gbc.sp());
        EXPECT(0x58bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0171
        gbc.setState(0x8aeb, 0x8ad2, 0x1910, 0xa466, 0x6d02, 0x11a5, 0x1, 0x1);
        gbc.writeMem(0x8aeb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8ad2, gbc.sp());
        EXPECT(0x8aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aeb));
        EXPECT(0x7d, gbc.readMem(0x8aec));
        // CB 7D 0172
        gbc.setState(0x6ecb, 0x2779, 0xa1f0, 0x1b66, 0x39ee, 0x4a88, 0x0, 0x0);
        gbc.writeMem(0x6ecb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2779, gbc.sp());
        EXPECT(0x6ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0173
        gbc.setState(0x3639, 0x7d57, 0x77e0, 0xfe70, 0xe5b2, 0x84f9, 0x0, 0x1);
        gbc.writeMem(0x3639, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7d57, gbc.sp());
        EXPECT(0x363b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0174
        gbc.setState(0x5680, 0x6aad, 0xfdb0, 0x2006, 0xd80a, 0x997f, 0x0, 0x0);
        gbc.writeMem(0x5680, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6aad, gbc.sp());
        EXPECT(0x5682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0175
        gbc.setState(0xc379, 0x9266, 0x9990, 0x1548, 0x5efb, 0x2a25, 0x1, 0x1);
        gbc.writeMem(0xc379, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9266, gbc.sp());
        EXPECT(0xc37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc379));
        EXPECT(0x7d, gbc.readMem(0xc37a));
        // CB 7D 0176
        gbc.setState(0x806d, 0xc462, 0x1e20, 0x5798, 0x34ee, 0x9c62, 0x1, 0x0);
        gbc.writeMem(0x806d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc462, gbc.sp());
        EXPECT(0x806f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806d));
        EXPECT(0x7d, gbc.readMem(0x806e));
        // CB 7D 0177
        gbc.setState(0x7e2c, 0x90b0, 0xa140, 0x3ab6, 0x14db, 0xf72b, 0x1, 0x0);
        gbc.writeMem(0x7e2c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x90b0, gbc.sp());
        EXPECT(0x7e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0178
        gbc.setState(0xec75, 0xfd9b, 0xc030, 0x675c, 0x2628, 0x8347, 0x0, 0x0);
        gbc.writeMem(0xec75, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfd9b, gbc.sp());
        EXPECT(0xec77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec75));
        EXPECT(0x7d, gbc.readMem(0xec76));
        // CB 7D 0179
        gbc.setState(0xd88b, 0xe188, 0x4d40, 0xcd17, 0x1cd5, 0xbbd7, 0x1, 0x1);
        gbc.writeMem(0xd88b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe188, gbc.sp());
        EXPECT(0xd88d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88b));
        EXPECT(0x7d, gbc.readMem(0xd88c));
        // CB 7D 017A
        gbc.setState(0xd5ae, 0xd783, 0x9a70, 0xb584, 0x8a7e, 0xc653, 0x1, 0x0);
        gbc.writeMem(0xd5ae, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd783, gbc.sp());
        EXPECT(0xd5b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ae));
        EXPECT(0x7d, gbc.readMem(0xd5af));
        // CB 7D 017B
        gbc.setState(0x1f14, 0x2c17, 0x5830, 0xf384, 0x9f9a, 0xb4a6, 0x0, 0x1);
        gbc.writeMem(0x1f14, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2c17, gbc.sp());
        EXPECT(0x1f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 017C
        gbc.setState(0xc42, 0x7ebc, 0xfd50, 0x7d85, 0x6b60, 0x959c, 0x1, 0x0);
        gbc.writeMem(0xc42, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7ebc, gbc.sp());
        EXPECT(0xc44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 017D
        gbc.setState(0x5603, 0xd34e, 0x3870, 0xfaa4, 0x16ab, 0xf073, 0x1, 0x0);
        gbc.writeMem(0x5603, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd34e, gbc.sp());
        EXPECT(0x5605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 017E
        gbc.setState(0x6c7c, 0xa8d6, 0x7850, 0x8bd1, 0x6c84, 0x8366, 0x1, 0x1);
        gbc.writeMem(0x6c7c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa8d6, gbc.sp());
        EXPECT(0x6c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 017F
        gbc.setState(0x25b7, 0x632c, 0x3330, 0xfbf2, 0xd442, 0x2f71, 0x0, 0x0);
        gbc.writeMem(0x25b7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x632c, gbc.sp());
        EXPECT(0x25b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0180
        gbc.setState(0xa547, 0xd207, 0x9a90, 0x2d9e, 0x1116, 0x8ae7, 0x0, 0x0);
        gbc.writeMem(0xa547, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd207, gbc.sp());
        EXPECT(0xa549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa547));
        EXPECT(0x7d, gbc.readMem(0xa548));
        // CB 7D 0181
        gbc.setState(0x9a83, 0x57c, 0x3110, 0x4d22, 0xc480, 0x5c5b, 0x1, 0x1);
        gbc.writeMem(0x9a83, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x57c, gbc.sp());
        EXPECT(0x9a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a83));
        EXPECT(0x7d, gbc.readMem(0x9a84));
        // CB 7D 0182
        gbc.setState(0xa25d, 0x377, 0x9970, 0xffc4, 0xffbe, 0xe879, 0x1, 0x1);
        gbc.writeMem(0xa25d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x377, gbc.sp());
        EXPECT(0xa25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa25d));
        EXPECT(0x7d, gbc.readMem(0xa25e));
        // CB 7D 0183
        gbc.setState(0xc3ec, 0xca67, 0xe040, 0x59b7, 0xf7e0, 0x4f70, 0x1, 0x0);
        gbc.writeMem(0xc3ec, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xca67, gbc.sp());
        EXPECT(0xc3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ec));
        EXPECT(0x7d, gbc.readMem(0xc3ed));
        // CB 7D 0184
        gbc.setState(0x7204, 0xbab8, 0xe5b0, 0x8288, 0xd64f, 0x8f17, 0x0, 0x1);
        gbc.writeMem(0x7204, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbab8, gbc.sp());
        EXPECT(0x7206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0185
        gbc.setState(0x64f7, 0x2b2b, 0x3ae0, 0x96cd, 0x99, 0xc522, 0x0, 0x0);
        gbc.writeMem(0x64f7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2b2b, gbc.sp());
        EXPECT(0x64f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0186
        gbc.setState(0x7d26, 0xf2e5, 0x2f90, 0x38b2, 0xf6c7, 0xfd12, 0x1, 0x0);
        gbc.writeMem(0x7d26, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf2e5, gbc.sp());
        EXPECT(0x7d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0187
        gbc.setState(0x2935, 0x31d, 0x5b40, 0x6a76, 0xb1e1, 0x2910, 0x1, 0x0);
        gbc.writeMem(0x2935, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x31d, gbc.sp());
        EXPECT(0x2937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0188
        gbc.setState(0xadc0, 0x592, 0xa3e0, 0x513a, 0xe15e, 0x33c6, 0x0, 0x0);
        gbc.writeMem(0xadc0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x592, gbc.sp());
        EXPECT(0xadc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc0));
        EXPECT(0x7d, gbc.readMem(0xadc1));
        // CB 7D 0189
        gbc.setState(0x324f, 0xbe3d, 0xe370, 0x297e, 0x2149, 0x4c7a, 0x1, 0x1);
        gbc.writeMem(0x324f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbe3d, gbc.sp());
        EXPECT(0x3251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 018B
        gbc.setState(0xd8c2, 0xca54, 0xdc50, 0xd02e, 0x29ef, 0x5cb3, 0x0, 0x1);
        gbc.writeMem(0xd8c2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xca54, gbc.sp());
        EXPECT(0xd8c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c2));
        EXPECT(0x7d, gbc.readMem(0xd8c3));
        // CB 7D 018C
        gbc.setState(0xaff, 0x15f8, 0xae20, 0xd43c, 0x9943, 0x1599, 0x1, 0x1);
        gbc.writeMem(0xaff, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x15f8, gbc.sp());
        EXPECT(0xb01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 018D
        gbc.setState(0xb2cc, 0xf944, 0x3cd0, 0x8ea5, 0x3220, 0x5249, 0x0, 0x0);
        gbc.writeMem(0xb2cc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf944, gbc.sp());
        EXPECT(0xb2ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2cc));
        EXPECT(0x7d, gbc.readMem(0xb2cd));
        // CB 7D 018E
        gbc.setState(0x1aa1, 0xcb31, 0x3fe0, 0xb25c, 0x4bc, 0xd66c, 0x1, 0x0);
        gbc.writeMem(0x1aa1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcb31, gbc.sp());
        EXPECT(0x1aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 018F
        gbc.setState(0xded0, 0xbe3f, 0xac80, 0xb79e, 0xf61a, 0x67b9, 0x1, 0x0);
        gbc.writeMem(0xded0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbe3f, gbc.sp());
        EXPECT(0xded2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded0));
        EXPECT(0x7d, gbc.readMem(0xded1));
        // CB 7D 0190
        gbc.setState(0xbc5, 0xdc79, 0x29c0, 0x1ba0, 0x4776, 0xe63b, 0x0, 0x1);
        gbc.writeMem(0xbc5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdc79, gbc.sp());
        EXPECT(0xbc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0191
        gbc.setState(0x17f7, 0xcb03, 0x6720, 0x480, 0x9d79, 0xca91, 0x0, 0x1);
        gbc.writeMem(0x17f7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xcb03, gbc.sp());
        EXPECT(0x17f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0192
        gbc.setState(0x3aa7, 0xefed, 0xbc40, 0xff12, 0x8641, 0xd669, 0x0, 0x0);
        gbc.writeMem(0x3aa7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xefed, gbc.sp());
        EXPECT(0x3aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0193
        gbc.setState(0x97ba, 0xad48, 0x4d90, 0x7d18, 0x550e, 0x9ef7, 0x0, 0x1);
        gbc.writeMem(0x97ba, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xad48, gbc.sp());
        EXPECT(0x97bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ba));
        EXPECT(0x7d, gbc.readMem(0x97bb));
        // CB 7D 0194
        gbc.setState(0xc012, 0xea76, 0x3a90, 0x32e9, 0xe0a8, 0x89e0, 0x0, 0x1);
        gbc.writeMem(0xc012, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xea76, gbc.sp());
        EXPECT(0xc014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc012));
        EXPECT(0x7d, gbc.readMem(0xc013));
        // CB 7D 0195
        gbc.setState(0x867, 0xe2e3, 0x57b0, 0xcfbc, 0x61a1, 0x1ea8, 0x1, 0x0);
        gbc.writeMem(0x867, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe2e3, gbc.sp());
        EXPECT(0x869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0196
        gbc.setState(0xbb1, 0x9825, 0x30c0, 0x6aaf, 0xb41d, 0xdbe, 0x0, 0x1);
        gbc.writeMem(0xbb1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9825, gbc.sp());
        EXPECT(0xbb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0197
        gbc.setState(0x50e0, 0x9a39, 0xc750, 0x962c, 0x820, 0x7f91, 0x0, 0x0);
        gbc.writeMem(0x50e0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9a39, gbc.sp());
        EXPECT(0x50e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0198
        gbc.setState(0xb131, 0x2b3d, 0xd570, 0x183b, 0x4fb1, 0x9605, 0x1, 0x0);
        gbc.writeMem(0xb131, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2b3d, gbc.sp());
        EXPECT(0xb133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb131));
        EXPECT(0x7d, gbc.readMem(0xb132));
        // CB 7D 0199
        gbc.setState(0x38ed, 0xef08, 0xfec0, 0x7cf9, 0x7552, 0x317e, 0x1, 0x0);
        gbc.writeMem(0x38ed, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xef08, gbc.sp());
        EXPECT(0x38ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 019A
        gbc.setState(0x5460, 0x7457, 0xda30, 0xfe3c, 0x209f, 0xb231, 0x0, 0x1);
        gbc.writeMem(0x5460, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7457, gbc.sp());
        EXPECT(0x5462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 019B
        gbc.setState(0x986b, 0xa0d7, 0x99c0, 0x8820, 0x1c1d, 0x2377, 0x1, 0x0);
        gbc.writeMem(0x986b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa0d7, gbc.sp());
        EXPECT(0x986d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x986b));
        EXPECT(0x7d, gbc.readMem(0x986c));
        // CB 7D 019C
        gbc.setState(0xbae1, 0x8e92, 0xf190, 0x69bd, 0x5128, 0x1768, 0x1, 0x0);
        gbc.writeMem(0xbae1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8e92, gbc.sp());
        EXPECT(0xbae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae1));
        EXPECT(0x7d, gbc.readMem(0xbae2));
        // CB 7D 019D
        gbc.setState(0x848e, 0x5d3b, 0x9fe0, 0x6814, 0xda2, 0x792a, 0x0, 0x0);
        gbc.writeMem(0x848e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5d3b, gbc.sp());
        EXPECT(0x8490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848e));
        EXPECT(0x7d, gbc.readMem(0x848f));
        // CB 7D 019E
        gbc.setState(0xa5f5, 0x9c83, 0x28e0, 0x5c1a, 0xb105, 0x80b0, 0x0, 0x1);
        gbc.writeMem(0xa5f5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9c83, gbc.sp());
        EXPECT(0xa5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f5));
        EXPECT(0x7d, gbc.readMem(0xa5f6));
        // CB 7D 019F
        gbc.setState(0x10a0, 0xc43e, 0x5c60, 0xb35a, 0x4745, 0x60df, 0x0, 0x0);
        gbc.writeMem(0x10a0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc43e, gbc.sp());
        EXPECT(0x10a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01A0
        gbc.setState(0x9864, 0x49c3, 0x6f40, 0xa6d3, 0x11c8, 0x18f4, 0x1, 0x0);
        gbc.writeMem(0x9864, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x49c3, gbc.sp());
        EXPECT(0x9866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9864));
        EXPECT(0x7d, gbc.readMem(0x9865));
        // CB 7D 01A1
        gbc.setState(0xb4c8, 0x3ff5, 0x1810, 0xaff8, 0xc6f1, 0x23ce, 0x0, 0x0);
        gbc.writeMem(0xb4c8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3ff5, gbc.sp());
        EXPECT(0xb4ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c8));
        EXPECT(0x7d, gbc.readMem(0xb4c9));
        // CB 7D 01A2
        gbc.setState(0xcd7a, 0xaab4, 0xa2c0, 0x94f9, 0xcb40, 0x42f9, 0x0, 0x0);
        gbc.writeMem(0xcd7a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaab4, gbc.sp());
        EXPECT(0xcd7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd7a));
        EXPECT(0x7d, gbc.readMem(0xcd7b));
        // CB 7D 01A3
        gbc.setState(0xa9e9, 0xa2b, 0xbf80, 0xb921, 0x566f, 0x9421, 0x0, 0x1);
        gbc.writeMem(0xa9e9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa2b, gbc.sp());
        EXPECT(0xa9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e9));
        EXPECT(0x7d, gbc.readMem(0xa9ea));
        // CB 7D 01A4
        gbc.setState(0x88bc, 0xb5f6, 0x28c0, 0x6c82, 0x61c6, 0x2a24, 0x0, 0x0);
        gbc.writeMem(0x88bc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb5f6, gbc.sp());
        EXPECT(0x88be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88bc));
        EXPECT(0x7d, gbc.readMem(0x88bd));
        // CB 7D 01A6
        gbc.setState(0xe9cf, 0xe99c, 0x2e00, 0x2d83, 0xcdb9, 0xf6fe, 0x1, 0x1);
        gbc.writeMem(0xe9cf, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe99c, gbc.sp());
        EXPECT(0xe9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9cf));
        EXPECT(0x7d, gbc.readMem(0xe9d0));
        // CB 7D 01A7
        gbc.setState(0x8dcd, 0xdeb4, 0x49c0, 0x5d49, 0x8c55, 0x76ec, 0x0, 0x0);
        gbc.writeMem(0x8dcd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdeb4, gbc.sp());
        EXPECT(0x8dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dcd));
        EXPECT(0x7d, gbc.readMem(0x8dce));
        // CB 7D 01A9
        gbc.setState(0x6fac, 0x215, 0x4560, 0x73fb, 0xb993, 0x946c, 0x0, 0x0);
        gbc.writeMem(0x6fac, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x215, gbc.sp());
        EXPECT(0x6fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01AA
        gbc.setState(0xa1c4, 0x1626, 0x47e0, 0x5645, 0xcaa2, 0x683a, 0x1, 0x1);
        gbc.writeMem(0xa1c4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1626, gbc.sp());
        EXPECT(0xa1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c4));
        EXPECT(0x7d, gbc.readMem(0xa1c5));
        // CB 7D 01AC
        gbc.setState(0xabc6, 0xcca6, 0xc930, 0xbf25, 0x943b, 0xd8a6, 0x0, 0x0);
        gbc.writeMem(0xabc6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcca6, gbc.sp());
        EXPECT(0xabc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc6));
        EXPECT(0x7d, gbc.readMem(0xabc7));
        // CB 7D 01AD
        gbc.setState(0x8f4, 0x8cb4, 0x9b0, 0x7bbe, 0x6afa, 0x9bae, 0x0, 0x0);
        gbc.writeMem(0x8f4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8cb4, gbc.sp());
        EXPECT(0x8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01AE
        gbc.setState(0xd5b9, 0x9f7a, 0x6cf0, 0x7491, 0xb15, 0x5d1e, 0x1, 0x0);
        gbc.writeMem(0xd5b9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9f7a, gbc.sp());
        EXPECT(0xd5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b9));
        EXPECT(0x7d, gbc.readMem(0xd5ba));
        // CB 7D 01AF
        gbc.setState(0x7704, 0xf8f2, 0xc640, 0xcd6a, 0xa35a, 0xd141, 0x1, 0x0);
        gbc.writeMem(0x7704, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf8f2, gbc.sp());
        EXPECT(0x7706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01B0
        gbc.setState(0x1fa7, 0x2604, 0x3c40, 0x2e41, 0x8859, 0xd804, 0x0, 0x0);
        gbc.writeMem(0x1fa7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2604, gbc.sp());
        EXPECT(0x1fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01B1
        gbc.setState(0x27ef, 0x1df3, 0x7be0, 0xf855, 0x4001, 0x7afd, 0x1, 0x0);
        gbc.writeMem(0x27ef, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1df3, gbc.sp());
        EXPECT(0x27f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01B2
        gbc.setState(0x3d17, 0x7678, 0x1dd0, 0x9cab, 0xf787, 0xeac1, 0x1, 0x0);
        gbc.writeMem(0x3d17, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7678, gbc.sp());
        EXPECT(0x3d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01B3
        gbc.setState(0x6be7, 0xc83c, 0x36d0, 0x16a8, 0x5b47, 0xfe91, 0x0, 0x1);
        gbc.writeMem(0x6be7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc83c, gbc.sp());
        EXPECT(0x6be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01B4
        gbc.setState(0xc77d, 0x1cf, 0xc1f0, 0x8809, 0xa4ac, 0xd607, 0x0, 0x0);
        gbc.writeMem(0xc77d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1cf, gbc.sp());
        EXPECT(0xc77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc77d));
        EXPECT(0x7d, gbc.readMem(0xc77e));
        // CB 7D 01B5
        gbc.setState(0x9609, 0x10f7, 0xff50, 0x2a7b, 0x6529, 0xaf4a, 0x0, 0x0);
        gbc.writeMem(0x9609, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x10f7, gbc.sp());
        EXPECT(0x960b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9609));
        EXPECT(0x7d, gbc.readMem(0x960a));
        // CB 7D 01B6
        gbc.setState(0x2c3, 0x710f, 0x4ce0, 0xae25, 0xcce5, 0x820d, 0x0, 0x0);
        gbc.writeMem(0x2c3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x710f, gbc.sp());
        EXPECT(0x2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01B7
        gbc.setState(0xca29, 0x6c79, 0x910, 0x85d9, 0xcece, 0x641a, 0x0, 0x1);
        gbc.writeMem(0xca29, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6c79, gbc.sp());
        EXPECT(0xca2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca29));
        EXPECT(0x7d, gbc.readMem(0xca2a));
        // CB 7D 01B8
        gbc.setState(0x424f, 0x4bb6, 0x9d90, 0xa8b0, 0x5c2d, 0xb8d6, 0x1, 0x1);
        gbc.writeMem(0x424f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4bb6, gbc.sp());
        EXPECT(0x4251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01B9
        gbc.setState(0x358, 0x928, 0x5610, 0xd254, 0xa6d6, 0x85f7, 0x1, 0x0);
        gbc.writeMem(0x358, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x928, gbc.sp());
        EXPECT(0x35a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01BA
        gbc.setState(0x4998, 0x87e4, 0xd770, 0x970d, 0x2ccb, 0xbdc1, 0x0, 0x0);
        gbc.writeMem(0x4998, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x87e4, gbc.sp());
        EXPECT(0x499a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01BB
        gbc.setState(0x9596, 0x5c1e, 0x8820, 0xfc64, 0x1bf0, 0x9749, 0x0, 0x1);
        gbc.writeMem(0x9596, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5c1e, gbc.sp());
        EXPECT(0x9598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9596));
        EXPECT(0x7d, gbc.readMem(0x9597));
        // CB 7D 01BC
        gbc.setState(0xb73, 0xbb73, 0xd70, 0xc6ca, 0x8ecb, 0x454a, 0x0, 0x1);
        gbc.writeMem(0xb73, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbb73, gbc.sp());
        EXPECT(0xb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01BD
        gbc.setState(0x7385, 0x4fcb, 0x4ab0, 0xe4a1, 0xb2ec, 0xf1c6, 0x0, 0x1);
        gbc.writeMem(0x7385, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4fcb, gbc.sp());
        EXPECT(0x7387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01BE
        gbc.setState(0xc1ea, 0xadc, 0xf90, 0x1091, 0x199e, 0x9fa6, 0x1, 0x0);
        gbc.writeMem(0xc1ea, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xadc, gbc.sp());
        EXPECT(0xc1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ea));
        EXPECT(0x7d, gbc.readMem(0xc1eb));
        // CB 7D 01BF
        gbc.setState(0xde8b, 0xd290, 0x97f0, 0x9167, 0xbb69, 0x38e6, 0x1, 0x0);
        gbc.writeMem(0xde8b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd290, gbc.sp());
        EXPECT(0xde8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8b));
        EXPECT(0x7d, gbc.readMem(0xde8c));
        // CB 7D 01C0
        gbc.setState(0x103d, 0x83b5, 0xeaa0, 0xeb38, 0x2142, 0x1a0a, 0x0, 0x1);
        gbc.writeMem(0x103d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x83b5, gbc.sp());
        EXPECT(0x103f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01C1
        gbc.setState(0xaf01, 0x3354, 0xba60, 0xe65f, 0x1323, 0xb855, 0x0, 0x0);
        gbc.writeMem(0xaf01, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3354, gbc.sp());
        EXPECT(0xaf03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf01));
        EXPECT(0x7d, gbc.readMem(0xaf02));
        // CB 7D 01C2
        gbc.setState(0xb550, 0xa254, 0xf190, 0xe07f, 0xf42f, 0xa24b, 0x1, 0x0);
        gbc.writeMem(0xb550, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa254, gbc.sp());
        EXPECT(0xb552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb550));
        EXPECT(0x7d, gbc.readMem(0xb551));
        // CB 7D 01C3
        gbc.setState(0x43a1, 0x8cdc, 0x10c0, 0xbb3d, 0xb55e, 0x9961, 0x0, 0x1);
        gbc.writeMem(0x43a1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8cdc, gbc.sp());
        EXPECT(0x43a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01C4
        gbc.setState(0xe352, 0xf31f, 0xced0, 0xf160, 0x2a2d, 0xfd91, 0x0, 0x1);
        gbc.writeMem(0xe352, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf31f, gbc.sp());
        EXPECT(0xe354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe352));
        EXPECT(0x7d, gbc.readMem(0xe353));
        // CB 7D 01C5
        gbc.setState(0x4fab, 0x8fc3, 0x360, 0xc769, 0x4ed, 0x99cc, 0x1, 0x0);
        gbc.writeMem(0x4fab, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8fc3, gbc.sp());
        EXPECT(0x4fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01C6
        gbc.setState(0x6cf, 0x33e3, 0xccf0, 0xbc20, 0x7b41, 0x73f, 0x1, 0x1);
        gbc.writeMem(0x6cf, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x33e3, gbc.sp());
        EXPECT(0x6d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01C7
        gbc.setState(0x7b8, 0x1d06, 0xae50, 0x26a6, 0xf6ef, 0x3fd, 0x0, 0x1);
        gbc.writeMem(0x7b8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1d06, gbc.sp());
        EXPECT(0x7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01C9
        gbc.setState(0xd726, 0x1c43, 0x9e20, 0x7df0, 0x7bda, 0x3a43, 0x1, 0x0);
        gbc.writeMem(0xd726, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1c43, gbc.sp());
        EXPECT(0xd728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd726));
        EXPECT(0x7d, gbc.readMem(0xd727));
        // CB 7D 01CA
        gbc.setState(0x8e1b, 0x8ae5, 0xbd00, 0xa637, 0x936a, 0x98ba, 0x0, 0x0);
        gbc.writeMem(0x8e1b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8ae5, gbc.sp());
        EXPECT(0x8e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1b));
        EXPECT(0x7d, gbc.readMem(0x8e1c));
        // CB 7D 01CB
        gbc.setState(0x8cfe, 0x8e1, 0x9aa0, 0xc366, 0xf307, 0x1f02, 0x1, 0x0);
        gbc.writeMem(0x8cfe, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8e1, gbc.sp());
        EXPECT(0x8d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cfe));
        EXPECT(0x7d, gbc.readMem(0x8cff));
        // CB 7D 01CC
        gbc.setState(0x3dfb, 0x7067, 0x7b0, 0x8a02, 0xa416, 0x8792, 0x1, 0x1);
        gbc.writeMem(0x3dfb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7067, gbc.sp());
        EXPECT(0x3dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01CD
        gbc.setState(0x4822, 0x7ce6, 0xe140, 0x1abf, 0x5585, 0xcd66, 0x1, 0x0);
        gbc.writeMem(0x4822, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7ce6, gbc.sp());
        EXPECT(0x4824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01CE
        gbc.setState(0x6c36, 0xad99, 0x6b90, 0x4681, 0x536e, 0x774b, 0x0, 0x1);
        gbc.writeMem(0x6c36, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xad99, gbc.sp());
        EXPECT(0x6c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01CF
        gbc.setState(0xd36c, 0x57c4, 0x2130, 0x6e0e, 0xe429, 0x8899, 0x0, 0x0);
        gbc.writeMem(0xd36c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x57c4, gbc.sp());
        EXPECT(0xd36e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36c));
        EXPECT(0x7d, gbc.readMem(0xd36d));
        // CB 7D 01D0
        gbc.setState(0x67cb, 0x81cf, 0x1640, 0xd789, 0x1a5b, 0x8bda, 0x0, 0x1);
        gbc.writeMem(0x67cb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x81cf, gbc.sp());
        EXPECT(0x67cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01D1
        gbc.setState(0x294, 0x7376, 0xd080, 0xaff5, 0xb955, 0xcdc8, 0x1, 0x1);
        gbc.writeMem(0x294, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7376, gbc.sp());
        EXPECT(0x296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01D2
        gbc.setState(0x2d2f, 0x9e6b, 0xb740, 0xedb9, 0x87eb, 0xa657, 0x1, 0x1);
        gbc.writeMem(0x2d2f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9e6b, gbc.sp());
        EXPECT(0x2d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01D3
        gbc.setState(0x4b71, 0x5c8e, 0xc270, 0xb272, 0x532b, 0x9810, 0x0, 0x1);
        gbc.writeMem(0x4b71, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5c8e, gbc.sp());
        EXPECT(0x4b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01D4
        gbc.setState(0xec10, 0x4f8d, 0x4490, 0xf3f5, 0xab66, 0x12f0, 0x0, 0x0);
        gbc.writeMem(0xec10, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4f8d, gbc.sp());
        EXPECT(0xec12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec10));
        EXPECT(0x7d, gbc.readMem(0xec11));
        // CB 7D 01D5
        gbc.setState(0xa411, 0x8b15, 0x9b00, 0xc837, 0xa83d, 0xc959, 0x0, 0x1);
        gbc.writeMem(0xa411, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8b15, gbc.sp());
        EXPECT(0xa413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa411));
        EXPECT(0x7d, gbc.readMem(0xa412));
        // CB 7D 01D6
        gbc.setState(0x6aa3, 0xe4f9, 0x6c20, 0x4cbe, 0x7a49, 0x7e6a, 0x1, 0x0);
        gbc.writeMem(0x6aa3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe4f9, gbc.sp());
        EXPECT(0x6aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01D7
        gbc.setState(0xc564, 0xea9c, 0xd400, 0x2fe6, 0x2596, 0xec76, 0x1, 0x0);
        gbc.writeMem(0xc564, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xea9c, gbc.sp());
        EXPECT(0xc566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc564));
        EXPECT(0x7d, gbc.readMem(0xc565));
        // CB 7D 01D8
        gbc.setState(0x50b6, 0x3dd3, 0xcbb0, 0x17a5, 0x72c2, 0x9742, 0x1, 0x0);
        gbc.writeMem(0x50b6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3dd3, gbc.sp());
        EXPECT(0x50b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01D9
        gbc.setState(0xbbe7, 0x7170, 0x1020, 0x62ee, 0x6878, 0x715c, 0x0, 0x0);
        gbc.writeMem(0xbbe7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7170, gbc.sp());
        EXPECT(0xbbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe7));
        EXPECT(0x7d, gbc.readMem(0xbbe8));
        // CB 7D 01DA
        gbc.setState(0xe4a4, 0x21ef, 0x5af0, 0xb5ae, 0x375b, 0xdd1c, 0x1, 0x1);
        gbc.writeMem(0xe4a4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x21ef, gbc.sp());
        EXPECT(0xe4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a4));
        EXPECT(0x7d, gbc.readMem(0xe4a5));
        // CB 7D 01DB
        gbc.setState(0xe8d1, 0x8a12, 0x9410, 0xe7f1, 0xfe0c, 0x8bed, 0x1, 0x0);
        gbc.writeMem(0xe8d1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8a12, gbc.sp());
        EXPECT(0xe8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d1));
        EXPECT(0x7d, gbc.readMem(0xe8d2));
        // CB 7D 01DC
        gbc.setState(0x262b, 0xa122, 0xff0, 0x42df, 0xf4a9, 0x56d0, 0x1, 0x1);
        gbc.writeMem(0x262b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa122, gbc.sp());
        EXPECT(0x262d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01DD
        gbc.setState(0x3081, 0x9dc9, 0x9840, 0xfda9, 0xfa6, 0x50b1, 0x0, 0x1);
        gbc.writeMem(0x3081, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9dc9, gbc.sp());
        EXPECT(0x3083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01DF
        gbc.setState(0xd394, 0xa412, 0x7e90, 0xd40e, 0xb97e, 0x492, 0x0, 0x1);
        gbc.writeMem(0xd394, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa412, gbc.sp());
        EXPECT(0xd396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd394));
        EXPECT(0x7d, gbc.readMem(0xd395));
        // CB 7D 01E0
        gbc.setState(0x8324, 0x8fd, 0xad90, 0x7870, 0x3418, 0xba10, 0x0, 0x1);
        gbc.writeMem(0x8324, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8fd, gbc.sp());
        EXPECT(0x8326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8324));
        EXPECT(0x7d, gbc.readMem(0x8325));
        // CB 7D 01E1
        gbc.setState(0xdae2, 0xb7a3, 0x4190, 0xb56a, 0xe52b, 0x57d9, 0x1, 0x0);
        gbc.writeMem(0xdae2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb7a3, gbc.sp());
        EXPECT(0xdae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae2));
        EXPECT(0x7d, gbc.readMem(0xdae3));
        // CB 7D 01E2
        gbc.setState(0xef50, 0x56c0, 0xf750, 0x6b86, 0xcf14, 0xc13e, 0x1, 0x1);
        gbc.writeMem(0xef50, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x56c0, gbc.sp());
        EXPECT(0xef52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef50));
        EXPECT(0x7d, gbc.readMem(0xef51));
        // CB 7D 01E3
        gbc.setState(0xdcc2, 0xe923, 0x5660, 0xae0b, 0x6876, 0xa523, 0x0, 0x0);
        gbc.writeMem(0xdcc2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe923, gbc.sp());
        EXPECT(0xdcc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc2));
        EXPECT(0x7d, gbc.readMem(0xdcc3));
        // CB 7D 01E4
        gbc.setState(0xd4a3, 0x736d, 0x54e0, 0xa19, 0xe1c7, 0x4631, 0x1, 0x0);
        gbc.writeMem(0xd4a3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x736d, gbc.sp());
        EXPECT(0xd4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a3));
        EXPECT(0x7d, gbc.readMem(0xd4a4));
        // CB 7D 01E5
        gbc.setState(0x4d2d, 0x7dfa, 0x2770, 0x629f, 0x8261, 0xd5e6, 0x1, 0x1);
        gbc.writeMem(0x4d2d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7dfa, gbc.sp());
        EXPECT(0x4d2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01E6
        gbc.setState(0x66aa, 0xa68d, 0x2830, 0xd1e1, 0x29ce, 0x69ed, 0x1, 0x1);
        gbc.writeMem(0x66aa, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa68d, gbc.sp());
        EXPECT(0x66ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01E7
        gbc.setState(0x87d, 0x3d0c, 0xa1d0, 0x2b09, 0x2546, 0x56a3, 0x1, 0x1);
        gbc.writeMem(0x87d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3d0c, gbc.sp());
        EXPECT(0x87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01E8
        gbc.setState(0xb166, 0xd1d4, 0xd460, 0x7762, 0x13c6, 0x136a, 0x1, 0x1);
        gbc.writeMem(0xb166, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd1d4, gbc.sp());
        EXPECT(0xb168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb166));
        EXPECT(0x7d, gbc.readMem(0xb167));
        // CB 7D 01E9
        gbc.setState(0x2182, 0xd8c6, 0x4900, 0x780b, 0xf10e, 0x9c35, 0x1, 0x1);
        gbc.writeMem(0x2182, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd8c6, gbc.sp());
        EXPECT(0x2184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01EA
        gbc.setState(0x9987, 0x2398, 0xc700, 0x9234, 0x2be1, 0x3638, 0x1, 0x0);
        gbc.writeMem(0x9987, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2398, gbc.sp());
        EXPECT(0x9989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9987));
        EXPECT(0x7d, gbc.readMem(0x9988));
        // CB 7D 01EB
        gbc.setState(0x53cd, 0x428b, 0x30d0, 0x72dc, 0x66ef, 0x6954, 0x0, 0x1);
        gbc.writeMem(0x53cd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x428b, gbc.sp());
        EXPECT(0x53cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01EC
        gbc.setState(0xa1a1, 0x3b1f, 0x5ac0, 0xa39f, 0x3382, 0x2a2c, 0x0, 0x0);
        gbc.writeMem(0xa1a1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3b1f, gbc.sp());
        EXPECT(0xa1a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a1));
        EXPECT(0x7d, gbc.readMem(0xa1a2));
        // CB 7D 01ED
        gbc.setState(0x3560, 0x636c, 0x6680, 0x9b64, 0x4a82, 0x482e, 0x0, 0x0);
        gbc.writeMem(0x3560, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x636c, gbc.sp());
        EXPECT(0x3562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01EE
        gbc.setState(0x105b, 0x8141, 0xfc20, 0x4082, 0x8183, 0xd0d2, 0x1, 0x1);
        gbc.writeMem(0x105b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8141, gbc.sp());
        EXPECT(0x105d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01EF
        gbc.setState(0xaf0a, 0xac58, 0x3cf0, 0x5cfa, 0xe045, 0xd66a, 0x1, 0x1);
        gbc.writeMem(0xaf0a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xac58, gbc.sp());
        EXPECT(0xaf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf0a));
        EXPECT(0x7d, gbc.readMem(0xaf0b));
        // CB 7D 01F0
        gbc.setState(0xc2c7, 0x6ccc, 0xccc0, 0x3469, 0xb56b, 0x47f4, 0x0, 0x1);
        gbc.writeMem(0xc2c7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6ccc, gbc.sp());
        EXPECT(0xc2c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c7));
        EXPECT(0x7d, gbc.readMem(0xc2c8));
        // CB 7D 01F1
        gbc.setState(0xb813, 0xaced, 0xb8b0, 0xfefe, 0xa8d2, 0xe3bd, 0x1, 0x1);
        gbc.writeMem(0xb813, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xaced, gbc.sp());
        EXPECT(0xb815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb813));
        EXPECT(0x7d, gbc.readMem(0xb814));
        // CB 7D 01F2
        gbc.setState(0x261a, 0x5c49, 0x8f80, 0xb274, 0xd65f, 0xaf60, 0x0, 0x0);
        gbc.writeMem(0x261a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5c49, gbc.sp());
        EXPECT(0x261c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01F3
        gbc.setState(0xec93, 0x6c3a, 0x1960, 0xc156, 0x1225, 0x6d46, 0x0, 0x0);
        gbc.writeMem(0xec93, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6c3a, gbc.sp());
        EXPECT(0xec95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec93));
        EXPECT(0x7d, gbc.readMem(0xec94));
        // CB 7D 01F4
        gbc.setState(0x1e9, 0x3db3, 0x59b0, 0xfcb, 0xe44d, 0x27fb, 0x1, 0x1);
        gbc.writeMem(0x1e9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3db3, gbc.sp());
        EXPECT(0x1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01F5
        gbc.setState(0x2602, 0xee9d, 0xebf0, 0xe8a5, 0xb3b1, 0xcd64, 0x1, 0x1);
        gbc.writeMem(0x2602, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xee9d, gbc.sp());
        EXPECT(0x2604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01F6
        gbc.setState(0x8222, 0xb9b, 0x4a30, 0xd934, 0xcf91, 0x74c2, 0x0, 0x0);
        gbc.writeMem(0x8222, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb9b, gbc.sp());
        EXPECT(0x8224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8222));
        EXPECT(0x7d, gbc.readMem(0x8223));
        // CB 7D 01F7
        gbc.setState(0x4f9b, 0xd48c, 0xb510, 0xb406, 0x8627, 0xf5b3, 0x0, 0x1);
        gbc.writeMem(0x4f9b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd48c, gbc.sp());
        EXPECT(0x4f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01F8
        gbc.setState(0x5e3, 0xb13d, 0x57b0, 0xfca7, 0x4eeb, 0x8006, 0x1, 0x1);
        gbc.writeMem(0x5e3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb13d, gbc.sp());
        EXPECT(0x5e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01F9
        gbc.setState(0x964d, 0xd8ac, 0xec30, 0xc978, 0xd32b, 0x5a4d, 0x0, 0x1);
        gbc.writeMem(0x964d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd8ac, gbc.sp());
        EXPECT(0x964f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x964d));
        EXPECT(0x7d, gbc.readMem(0x964e));
        // CB 7D 01FA
        gbc.setState(0x407, 0x25b2, 0x7810, 0x7d4c, 0x47ea, 0x88cc, 0x0, 0x1);
        gbc.writeMem(0x407, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x25b2, gbc.sp());
        EXPECT(0x409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01FB
        gbc.setState(0x3806, 0xf62b, 0x6940, 0x2c5b, 0xbf9f, 0xd2b6, 0x0, 0x0);
        gbc.writeMem(0x3806, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf62b, gbc.sp());
        EXPECT(0x3808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 01FC
        gbc.setState(0xc630, 0xece4, 0x83b0, 0xdcdd, 0x8c60, 0x7229, 0x1, 0x0);
        gbc.writeMem(0xc630, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xece4, gbc.sp());
        EXPECT(0xc632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc630));
        EXPECT(0x7d, gbc.readMem(0xc631));
        // CB 7D 01FD
        gbc.setState(0x72d0, 0x52b1, 0xa270, 0xaa5b, 0x915, 0x83b3, 0x1, 0x1);
        gbc.writeMem(0x72d0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x52b1, gbc.sp());
        EXPECT(0x72d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 01FE
        gbc.setState(0xe2fe, 0x6dc3, 0xc1c0, 0xf70e, 0xd7fe, 0xcb24, 0x0, 0x0);
        gbc.writeMem(0xe2fe, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6dc3, gbc.sp());
        EXPECT(0xe300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2fe));
        EXPECT(0x7d, gbc.readMem(0xe2ff));
        // CB 7D 01FF
        gbc.setState(0x2064, 0x9b51, 0x4910, 0xf507, 0x8b90, 0x8aaa, 0x1, 0x1);
        gbc.writeMem(0x2064, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9b51, gbc.sp());
        EXPECT(0x2066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0200
        gbc.setState(0x8c9c, 0x2d61, 0xdae0, 0x8ef0, 0xad83, 0x2bd5, 0x1, 0x1);
        gbc.writeMem(0x8c9c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2d61, gbc.sp());
        EXPECT(0x8c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9c));
        EXPECT(0x7d, gbc.readMem(0x8c9d));
        // CB 7D 0201
        gbc.setState(0xccca, 0xdae8, 0x3c50, 0xefcc, 0x6bb, 0xe914, 0x0, 0x0);
        gbc.writeMem(0xccca, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdae8, gbc.sp());
        EXPECT(0xcccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccca));
        EXPECT(0x7d, gbc.readMem(0xcccb));
        // CB 7D 0202
        gbc.setState(0x5547, 0x36f7, 0xe210, 0x5f1c, 0x72f1, 0xd13b, 0x0, 0x1);
        gbc.writeMem(0x5547, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x36f7, gbc.sp());
        EXPECT(0x5549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0203
        gbc.setState(0x7760, 0x734b, 0xc260, 0x86c7, 0x12bb, 0x2e32, 0x1, 0x0);
        gbc.writeMem(0x7760, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x734b, gbc.sp());
        EXPECT(0x7762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0204
        gbc.setState(0x937d, 0x87ce, 0x70e0, 0x1eb8, 0xd783, 0xf46d, 0x1, 0x1);
        gbc.writeMem(0x937d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x87ce, gbc.sp());
        EXPECT(0x937f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937d));
        EXPECT(0x7d, gbc.readMem(0x937e));
        // CB 7D 0205
        gbc.setState(0x6bf9, 0x56e0, 0x6830, 0x5357, 0x7bd1, 0x80eb, 0x0, 0x1);
        gbc.writeMem(0x6bf9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x56e0, gbc.sp());
        EXPECT(0x6bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0206
        gbc.setState(0xb935, 0xa7f6, 0x9cb0, 0x912, 0xb39e, 0x7cf0, 0x0, 0x1);
        gbc.writeMem(0xb935, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa7f6, gbc.sp());
        EXPECT(0xb937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb935));
        EXPECT(0x7d, gbc.readMem(0xb936));
        // CB 7D 0207
        gbc.setState(0xd070, 0x5584, 0xa80, 0x7f9e, 0x3cda, 0xf8d, 0x0, 0x1);
        gbc.writeMem(0xd070, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5584, gbc.sp());
        EXPECT(0xd072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd070));
        EXPECT(0x7d, gbc.readMem(0xd071));
        // CB 7D 0208
        gbc.setState(0xafb3, 0x1e26, 0xc10, 0x2619, 0xc854, 0xac1f, 0x1, 0x1);
        gbc.writeMem(0xafb3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1e26, gbc.sp());
        EXPECT(0xafb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb3));
        EXPECT(0x7d, gbc.readMem(0xafb4));
        // CB 7D 0209
        gbc.setState(0x49cb, 0xe193, 0x1e30, 0x1609, 0xe7be, 0x172f, 0x1, 0x0);
        gbc.writeMem(0x49cb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe193, gbc.sp());
        EXPECT(0x49cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 020A
        gbc.setState(0xe026, 0xbc5b, 0xa100, 0x53da, 0xe793, 0x2d44, 0x0, 0x1);
        gbc.writeMem(0xe026, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbc5b, gbc.sp());
        EXPECT(0xe028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe026));
        EXPECT(0x7d, gbc.readMem(0xe027));
        // CB 7D 020B
        gbc.setState(0xa530, 0xbbc5, 0xf9a0, 0xf4fc, 0x2fa4, 0x5148, 0x1, 0x0);
        gbc.writeMem(0xa530, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbbc5, gbc.sp());
        EXPECT(0xa532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa530));
        EXPECT(0x7d, gbc.readMem(0xa531));
        // CB 7D 020D
        gbc.setState(0xcdf0, 0x4c2d, 0x65a0, 0xcebf, 0xf07f, 0x52eb, 0x0, 0x1);
        gbc.writeMem(0xcdf0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4c2d, gbc.sp());
        EXPECT(0xcdf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf0));
        EXPECT(0x7d, gbc.readMem(0xcdf1));
        // CB 7D 020E
        gbc.setState(0xb342, 0x5236, 0x6f60, 0x7ef7, 0xb19c, 0xba2a, 0x0, 0x1);
        gbc.writeMem(0xb342, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5236, gbc.sp());
        EXPECT(0xb344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb342));
        EXPECT(0x7d, gbc.readMem(0xb343));
        // CB 7D 020F
        gbc.setState(0xbfd1, 0xf0ca, 0x65c0, 0x3e60, 0x44fd, 0x5f10, 0x0, 0x1);
        gbc.writeMem(0xbfd1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf0ca, gbc.sp());
        EXPECT(0xbfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd1));
        EXPECT(0x7d, gbc.readMem(0xbfd2));
        // CB 7D 0210
        gbc.setState(0x7f04, 0x4514, 0x600, 0xb89a, 0x80a2, 0x997d, 0x1, 0x0);
        gbc.writeMem(0x7f04, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4514, gbc.sp());
        EXPECT(0x7f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0211
        gbc.setState(0x8d2, 0xedd4, 0x8480, 0x872f, 0xb7c4, 0x2767, 0x1, 0x1);
        gbc.writeMem(0x8d2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xedd4, gbc.sp());
        EXPECT(0x8d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0212
        gbc.setState(0x8ad6, 0xd253, 0xe440, 0xedd9, 0x80dd, 0xde75, 0x1, 0x0);
        gbc.writeMem(0x8ad6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd253, gbc.sp());
        EXPECT(0x8ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad6));
        EXPECT(0x7d, gbc.readMem(0x8ad7));
        // CB 7D 0213
        gbc.setState(0xcb50, 0x1580, 0x9600, 0x4878, 0x2e61, 0x161d, 0x1, 0x1);
        gbc.writeMem(0xcb50, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1580, gbc.sp());
        EXPECT(0xcb52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb50));
        EXPECT(0x7d, gbc.readMem(0xcb51));
        // CB 7D 0214
        gbc.setState(0x57e9, 0x4f23, 0x7220, 0xb5a9, 0x7f29, 0x9b1a, 0x1, 0x0);
        gbc.writeMem(0x57e9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4f23, gbc.sp());
        EXPECT(0x57eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0215
        gbc.setState(0x73d8, 0x5aa8, 0x700, 0x4a9c, 0x5950, 0xa30c, 0x1, 0x1);
        gbc.writeMem(0x73d8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5aa8, gbc.sp());
        EXPECT(0x73da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0216
        gbc.setState(0xbb71, 0x4840, 0x17f0, 0x64fa, 0x8773, 0x9420, 0x1, 0x0);
        gbc.writeMem(0xbb71, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4840, gbc.sp());
        EXPECT(0xbb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb71));
        EXPECT(0x7d, gbc.readMem(0xbb72));
        // CB 7D 0217
        gbc.setState(0x8d1f, 0x9f27, 0x240, 0x2469, 0x594a, 0xe439, 0x1, 0x0);
        gbc.writeMem(0x8d1f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9f27, gbc.sp());
        EXPECT(0x8d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d1f));
        EXPECT(0x7d, gbc.readMem(0x8d20));
        // CB 7D 0218
        gbc.setState(0x86a1, 0x60fc, 0x5480, 0xc2de, 0x1604, 0x4a64, 0x1, 0x1);
        gbc.writeMem(0x86a1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x60fc, gbc.sp());
        EXPECT(0x86a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a1));
        EXPECT(0x7d, gbc.readMem(0x86a2));
        // CB 7D 0219
        gbc.setState(0xe966, 0xf41f, 0x2df0, 0x9187, 0x3921, 0x13c, 0x0, 0x0);
        gbc.writeMem(0xe966, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf41f, gbc.sp());
        EXPECT(0xe968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe966));
        EXPECT(0x7d, gbc.readMem(0xe967));
        // CB 7D 021A
        gbc.setState(0x115d, 0x4738, 0xdf60, 0xa88a, 0x43fd, 0x8554, 0x0, 0x1);
        gbc.writeMem(0x115d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4738, gbc.sp());
        EXPECT(0x115f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 021B
        gbc.setState(0x1166, 0x1378, 0x32c0, 0x9a2, 0xe6ad, 0x6e6e, 0x0, 0x1);
        gbc.writeMem(0x1166, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1378, gbc.sp());
        EXPECT(0x1168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 021C
        gbc.setState(0xc188, 0xf4fb, 0x3140, 0x22b3, 0xea30, 0x7fa5, 0x1, 0x1);
        gbc.writeMem(0xc188, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf4fb, gbc.sp());
        EXPECT(0xc18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc188));
        EXPECT(0x7d, gbc.readMem(0xc189));
        // CB 7D 021D
        gbc.setState(0x38f6, 0x7ed2, 0xd0f0, 0x3ca0, 0xb98a, 0x25af, 0x0, 0x0);
        gbc.writeMem(0x38f6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7ed2, gbc.sp());
        EXPECT(0x38f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 021E
        gbc.setState(0x4746, 0xa5b6, 0xfca0, 0x32d2, 0x3f63, 0x21ab, 0x1, 0x0);
        gbc.writeMem(0x4746, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa5b6, gbc.sp());
        EXPECT(0x4748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 021F
        gbc.setState(0x7ce6, 0x678e, 0xaa0, 0x4256, 0x4cf5, 0xc876, 0x1, 0x1);
        gbc.writeMem(0x7ce6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x678e, gbc.sp());
        EXPECT(0x7ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0220
        gbc.setState(0xa621, 0x8f2, 0x6fa0, 0x8f0a, 0x8abf, 0xcd43, 0x1, 0x1);
        gbc.writeMem(0xa621, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8f2, gbc.sp());
        EXPECT(0xa623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa621));
        EXPECT(0x7d, gbc.readMem(0xa622));
        // CB 7D 0221
        gbc.setState(0x9d25, 0xedb5, 0x9fb0, 0x25de, 0x64bf, 0xd35b, 0x1, 0x1);
        gbc.writeMem(0x9d25, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xedb5, gbc.sp());
        EXPECT(0x9d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d25));
        EXPECT(0x7d, gbc.readMem(0x9d26));
        // CB 7D 0222
        gbc.setState(0xad2e, 0xc6a1, 0x28b0, 0x7906, 0x200f, 0x32c7, 0x0, 0x1);
        gbc.writeMem(0xad2e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc6a1, gbc.sp());
        EXPECT(0xad30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2e));
        EXPECT(0x7d, gbc.readMem(0xad2f));
        // CB 7D 0223
        gbc.setState(0x45b4, 0x2096, 0x2fc0, 0x2c8f, 0xc634, 0x460f, 0x1, 0x1);
        gbc.writeMem(0x45b4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2096, gbc.sp());
        EXPECT(0x45b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0224
        gbc.setState(0xcc4a, 0x303e, 0xbf40, 0xdfed, 0x9e49, 0xa559, 0x1, 0x1);
        gbc.writeMem(0xcc4a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x303e, gbc.sp());
        EXPECT(0xcc4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4a));
        EXPECT(0x7d, gbc.readMem(0xcc4b));
        // CB 7D 0225
        gbc.setState(0x8207, 0x7c7c, 0x9b0, 0x5a7c, 0xcb21, 0x173e, 0x0, 0x0);
        gbc.writeMem(0x8207, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7c7c, gbc.sp());
        EXPECT(0x8209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8207));
        EXPECT(0x7d, gbc.readMem(0x8208));
        // CB 7D 0226
        gbc.setState(0x264, 0x242e, 0x1370, 0xc5e2, 0x223d, 0x7193, 0x0, 0x1);
        gbc.writeMem(0x264, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x242e, gbc.sp());
        EXPECT(0x266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0227
        gbc.setState(0xa5e2, 0x3fd8, 0x2560, 0x9d95, 0x28bb, 0x5512, 0x0, 0x1);
        gbc.writeMem(0xa5e2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3fd8, gbc.sp());
        EXPECT(0xa5e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e2));
        EXPECT(0x7d, gbc.readMem(0xa5e3));
        // CB 7D 0228
        gbc.setState(0xad8f, 0x76a3, 0x1160, 0x165b, 0xa67d, 0xfe3, 0x1, 0x1);
        gbc.writeMem(0xad8f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x76a3, gbc.sp());
        EXPECT(0xad91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad8f));
        EXPECT(0x7d, gbc.readMem(0xad90));
        // CB 7D 0229
        gbc.setState(0xb221, 0xd82, 0xbf00, 0xaedc, 0x4bf4, 0x3136, 0x1, 0x1);
        gbc.writeMem(0xb221, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0xb223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb221));
        EXPECT(0x7d, gbc.readMem(0xb222));
        // CB 7D 022A
        gbc.setState(0xb0e5, 0xecfc, 0xd7e0, 0xb0d6, 0x288, 0xe202, 0x0, 0x1);
        gbc.writeMem(0xb0e5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xecfc, gbc.sp());
        EXPECT(0xb0e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e5));
        EXPECT(0x7d, gbc.readMem(0xb0e6));
        // CB 7D 022B
        gbc.setState(0x3317, 0xcc13, 0x2560, 0x5158, 0xc4ff, 0x8787, 0x1, 0x0);
        gbc.writeMem(0x3317, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcc13, gbc.sp());
        EXPECT(0x3319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 022C
        gbc.setState(0x2cbb, 0x1f85, 0xc720, 0xddba, 0x7e58, 0x4183, 0x0, 0x1);
        gbc.writeMem(0x2cbb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1f85, gbc.sp());
        EXPECT(0x2cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 022E
        gbc.setState(0x41ae, 0x1479, 0xaa40, 0x34c1, 0x4afc, 0x44a6, 0x0, 0x0);
        gbc.writeMem(0x41ae, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1479, gbc.sp());
        EXPECT(0x41b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 022F
        gbc.setState(0xb1df, 0xc7b0, 0x1350, 0xba57, 0xd336, 0x3585, 0x1, 0x1);
        gbc.writeMem(0xb1df, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc7b0, gbc.sp());
        EXPECT(0xb1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1df));
        EXPECT(0x7d, gbc.readMem(0xb1e0));
        // CB 7D 0230
        gbc.setState(0x7f3f, 0x140c, 0x73b0, 0x60fd, 0x521, 0x8ad6, 0x0, 0x0);
        gbc.writeMem(0x7f3f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x140c, gbc.sp());
        EXPECT(0x7f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0231
        gbc.setState(0xae34, 0xd235, 0x5b00, 0xe618, 0x3802, 0xe367, 0x0, 0x0);
        gbc.writeMem(0xae34, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd235, gbc.sp());
        EXPECT(0xae36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae34));
        EXPECT(0x7d, gbc.readMem(0xae35));
        // CB 7D 0232
        gbc.setState(0x40ec, 0x68d0, 0x7cd0, 0x68a9, 0x9316, 0x9af4, 0x1, 0x0);
        gbc.writeMem(0x40ec, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x68d0, gbc.sp());
        EXPECT(0x40ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0233
        gbc.setState(0x78cf, 0xba9f, 0x27f0, 0x9804, 0x4fd9, 0xa39f, 0x0, 0x1);
        gbc.writeMem(0x78cf, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xba9f, gbc.sp());
        EXPECT(0x78d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0234
        gbc.setState(0x86f8, 0x653c, 0xe6b0, 0xbd56, 0xf85, 0xc15a, 0x1, 0x0);
        gbc.writeMem(0x86f8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x653c, gbc.sp());
        EXPECT(0x86fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f8));
        EXPECT(0x7d, gbc.readMem(0x86f9));
        // CB 7D 0235
        gbc.setState(0x46bd, 0xaf6c, 0xa120, 0xb921, 0x8b56, 0x5838, 0x0, 0x1);
        gbc.writeMem(0x46bd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaf6c, gbc.sp());
        EXPECT(0x46bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0236
        gbc.setState(0x2c1f, 0x724a, 0xa810, 0xe8d4, 0x8c99, 0xb441, 0x1, 0x0);
        gbc.writeMem(0x2c1f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x724a, gbc.sp());
        EXPECT(0x2c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0237
        gbc.setState(0xcb49, 0x7b2c, 0xa5e0, 0xf7b1, 0x92fb, 0xf552, 0x0, 0x0);
        gbc.writeMem(0xcb49, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7b2c, gbc.sp());
        EXPECT(0xcb4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb49));
        EXPECT(0x7d, gbc.readMem(0xcb4a));
        // CB 7D 0238
        gbc.setState(0x297e, 0x735, 0x6de0, 0x2c9a, 0x5896, 0xd8f2, 0x0, 0x0);
        gbc.writeMem(0x297e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x735, gbc.sp());
        EXPECT(0x2980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0239
        gbc.setState(0x4f15, 0xd288, 0x5010, 0xc91c, 0xd1aa, 0x388, 0x1, 0x0);
        gbc.writeMem(0x4f15, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd288, gbc.sp());
        EXPECT(0x4f17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 023A
        gbc.setState(0xd2c4, 0x8aaf, 0x1660, 0x4716, 0x9d89, 0x85c, 0x0, 0x1);
        gbc.writeMem(0xd2c4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8aaf, gbc.sp());
        EXPECT(0xd2c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c4));
        EXPECT(0x7d, gbc.readMem(0xd2c5));
        // CB 7D 023B
        gbc.setState(0x9f5f, 0x8f92, 0xa800, 0xb33e, 0x783b, 0xd721, 0x1, 0x1);
        gbc.writeMem(0x9f5f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8f92, gbc.sp());
        EXPECT(0x9f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5f));
        EXPECT(0x7d, gbc.readMem(0x9f60));
        // CB 7D 023C
        gbc.setState(0x4ad5, 0xb0b0, 0xc7f0, 0x90bc, 0x1aaf, 0x484c, 0x1, 0x0);
        gbc.writeMem(0x4ad5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb0b0, gbc.sp());
        EXPECT(0x4ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 023E
        gbc.setState(0xac2c, 0x9dec, 0x50c0, 0x7b51, 0x8de9, 0x94f2, 0x1, 0x1);
        gbc.writeMem(0xac2c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9dec, gbc.sp());
        EXPECT(0xac2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2c));
        EXPECT(0x7d, gbc.readMem(0xac2d));
        // CB 7D 023F
        gbc.setState(0x969f, 0xe992, 0x94a0, 0xbb05, 0x5e3f, 0xe0ec, 0x0, 0x1);
        gbc.writeMem(0x969f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe992, gbc.sp());
        EXPECT(0x96a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x969f));
        EXPECT(0x7d, gbc.readMem(0x96a0));
        // CB 7D 0240
        gbc.setState(0x2506, 0x8910, 0x400, 0x33ef, 0x8905, 0x15b4, 0x0, 0x0);
        gbc.writeMem(0x2506, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8910, gbc.sp());
        EXPECT(0x2508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0241
        gbc.setState(0xd21c, 0x3899, 0x2760, 0xf106, 0x650b, 0x2d0a, 0x1, 0x0);
        gbc.writeMem(0xd21c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3899, gbc.sp());
        EXPECT(0xd21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21c));
        EXPECT(0x7d, gbc.readMem(0xd21d));
        // CB 7D 0242
        gbc.setState(0xd97a, 0x5cbe, 0x51f0, 0xf48, 0x1201, 0x9581, 0x0, 0x0);
        gbc.writeMem(0xd97a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5cbe, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97a));
        EXPECT(0x7d, gbc.readMem(0xd97b));
        // CB 7D 0243
        gbc.setState(0x24e4, 0x8034, 0xa520, 0x3381, 0xed2, 0xea1c, 0x0, 0x0);
        gbc.writeMem(0x24e4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8034, gbc.sp());
        EXPECT(0x24e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0244
        gbc.setState(0x344b, 0xd421, 0x35e0, 0xf00, 0x1cb2, 0xbaa8, 0x0, 0x1);
        gbc.writeMem(0x344b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd421, gbc.sp());
        EXPECT(0x344d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0245
        gbc.setState(0x7d7a, 0x5a99, 0x6d20, 0xaa9c, 0xa594, 0xd26f, 0x1, 0x1);
        gbc.writeMem(0x7d7a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5a99, gbc.sp());
        EXPECT(0x7d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0246
        gbc.setState(0x405b, 0xa056, 0x4ca0, 0x14b2, 0x562c, 0x7b99, 0x0, 0x1);
        gbc.writeMem(0x405b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa056, gbc.sp());
        EXPECT(0x405d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0247
        gbc.setState(0x852a, 0x2ef7, 0x63b0, 0xca82, 0x1297, 0x9d30, 0x0, 0x0);
        gbc.writeMem(0x852a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2ef7, gbc.sp());
        EXPECT(0x852c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852a));
        EXPECT(0x7d, gbc.readMem(0x852b));
        // CB 7D 0248
        gbc.setState(0x8b81, 0xfdf0, 0x90f0, 0x5d8a, 0x6995, 0xb0ac, 0x0, 0x1);
        gbc.writeMem(0x8b81, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfdf0, gbc.sp());
        EXPECT(0x8b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b81));
        EXPECT(0x7d, gbc.readMem(0x8b82));
        // CB 7D 0249
        gbc.setState(0x77d2, 0x269d, 0x9a0, 0x1e7a, 0xf8c6, 0x4325, 0x0, 0x1);
        gbc.writeMem(0x77d2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x269d, gbc.sp());
        EXPECT(0x77d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 024A
        gbc.setState(0x657f, 0xa9d7, 0xa240, 0xc52a, 0x99cb, 0x2d4a, 0x0, 0x1);
        gbc.writeMem(0x657f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa9d7, gbc.sp());
        EXPECT(0x6581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 024B
        gbc.setState(0x709a, 0xd41c, 0xa050, 0x31ec, 0x6561, 0x869, 0x1, 0x1);
        gbc.writeMem(0x709a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd41c, gbc.sp());
        EXPECT(0x709c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 024C
        gbc.setState(0x9feb, 0x82fa, 0x2610, 0x7d11, 0xeb26, 0xe06d, 0x0, 0x0);
        gbc.writeMem(0x9feb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x82fa, gbc.sp());
        EXPECT(0x9fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9feb));
        EXPECT(0x7d, gbc.readMem(0x9fec));
        // CB 7D 024D
        gbc.setState(0x3fc2, 0xb45f, 0xc580, 0xe4c7, 0xd050, 0x6e6c, 0x0, 0x0);
        gbc.writeMem(0x3fc2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb45f, gbc.sp());
        EXPECT(0x3fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 024E
        gbc.setState(0xd889, 0xa25d, 0xc4d0, 0x6904, 0xadcb, 0xae02, 0x1, 0x1);
        gbc.writeMem(0xd889, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa25d, gbc.sp());
        EXPECT(0xd88b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd889));
        EXPECT(0x7d, gbc.readMem(0xd88a));
        // CB 7D 024F
        gbc.setState(0xcb4a, 0xe332, 0xce20, 0xee81, 0x3db, 0x60cd, 0x1, 0x1);
        gbc.writeMem(0xcb4a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe332, gbc.sp());
        EXPECT(0xcb4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4a));
        EXPECT(0x7d, gbc.readMem(0xcb4b));
        // CB 7D 0250
        gbc.setState(0x64b9, 0xd92f, 0xc4c0, 0x9a1f, 0x57a7, 0xd157, 0x0, 0x1);
        gbc.writeMem(0x64b9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd92f, gbc.sp());
        EXPECT(0x64bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0251
        gbc.setState(0x4df6, 0x4c6b, 0x92b0, 0xe0a5, 0x6ac2, 0x11f7, 0x1, 0x1);
        gbc.writeMem(0x4df6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4c6b, gbc.sp());
        EXPECT(0x4df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0252
        gbc.setState(0x2f61, 0xb94, 0x1000, 0xdc23, 0xd4f, 0x9dad, 0x0, 0x0);
        gbc.writeMem(0x2f61, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb94, gbc.sp());
        EXPECT(0x2f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0253
        gbc.setState(0xa6bc, 0x8c9, 0x57c0, 0xba53, 0xa963, 0x30d, 0x1, 0x0);
        gbc.writeMem(0xa6bc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8c9, gbc.sp());
        EXPECT(0xa6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6bc));
        EXPECT(0x7d, gbc.readMem(0xa6bd));
        // CB 7D 0254
        gbc.setState(0x9263, 0xd9a5, 0xd780, 0xa5da, 0x6bc7, 0x6f31, 0x0, 0x0);
        gbc.writeMem(0x9263, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd9a5, gbc.sp());
        EXPECT(0x9265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9263));
        EXPECT(0x7d, gbc.readMem(0x9264));
        // CB 7D 0255
        gbc.setState(0x280c, 0x4163, 0xf500, 0xdac5, 0xdb95, 0x37df, 0x1, 0x1);
        gbc.writeMem(0x280c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4163, gbc.sp());
        EXPECT(0x280e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0256
        gbc.setState(0xd912, 0x7ece, 0xea70, 0xf9fc, 0x9710, 0x5372, 0x1, 0x1);
        gbc.writeMem(0xd912, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7ece, gbc.sp());
        EXPECT(0xd914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd912));
        EXPECT(0x7d, gbc.readMem(0xd913));
        // CB 7D 0257
        gbc.setState(0x63d0, 0xed02, 0x9490, 0xd5da, 0x713f, 0xbfff, 0x0, 0x1);
        gbc.writeMem(0x63d0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xed02, gbc.sp());
        EXPECT(0x63d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0258
        gbc.setState(0x1937, 0xa7, 0xfef0, 0x3a27, 0x2ed9, 0xc3e7, 0x0, 0x1);
        gbc.writeMem(0x1937, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa7, gbc.sp());
        EXPECT(0x1939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0259
        gbc.setState(0xea8c, 0x53b8, 0x10d0, 0x1b99, 0x8af5, 0xc420, 0x1, 0x0);
        gbc.writeMem(0xea8c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x53b8, gbc.sp());
        EXPECT(0xea8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8c));
        EXPECT(0x7d, gbc.readMem(0xea8d));
        // CB 7D 025A
        gbc.setState(0xb45a, 0x415e, 0x8fe0, 0xf3da, 0xb10f, 0x1614, 0x1, 0x1);
        gbc.writeMem(0xb45a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x415e, gbc.sp());
        EXPECT(0xb45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb45a));
        EXPECT(0x7d, gbc.readMem(0xb45b));
        // CB 7D 025B
        gbc.setState(0x9fe9, 0x937d, 0xefe0, 0xa131, 0x9432, 0x6d71, 0x0, 0x0);
        gbc.writeMem(0x9fe9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x937d, gbc.sp());
        EXPECT(0x9feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe9));
        EXPECT(0x7d, gbc.readMem(0x9fea));
        // CB 7D 025C
        gbc.setState(0x467f, 0x58ee, 0x8c80, 0x45a, 0x98d0, 0x3d7e, 0x1, 0x1);
        gbc.writeMem(0x467f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x58ee, gbc.sp());
        EXPECT(0x4681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 025D
        gbc.setState(0xa5d5, 0x1eb7, 0x6370, 0x2809, 0x4f7a, 0x14b, 0x1, 0x1);
        gbc.writeMem(0xa5d5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1eb7, gbc.sp());
        EXPECT(0xa5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d5));
        EXPECT(0x7d, gbc.readMem(0xa5d6));
        // CB 7D 025E
        gbc.setState(0x8dc1, 0xb909, 0xdd90, 0xdb18, 0xe4d3, 0x8d40, 0x0, 0x1);
        gbc.writeMem(0x8dc1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb909, gbc.sp());
        EXPECT(0x8dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc1));
        EXPECT(0x7d, gbc.readMem(0x8dc2));
        // CB 7D 025F
        gbc.setState(0xcf3b, 0x9635, 0xf200, 0x4be7, 0x19d5, 0x8b4b, 0x1, 0x1);
        gbc.writeMem(0xcf3b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9635, gbc.sp());
        EXPECT(0xcf3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf3b));
        EXPECT(0x7d, gbc.readMem(0xcf3c));
        // CB 7D 0260
        gbc.setState(0x9fc7, 0xc691, 0x1e10, 0x5659, 0xa7dd, 0x798f, 0x1, 0x0);
        gbc.writeMem(0x9fc7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc691, gbc.sp());
        EXPECT(0x9fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc7));
        EXPECT(0x7d, gbc.readMem(0x9fc8));
        // CB 7D 0261
        gbc.setState(0x19c3, 0x1094, 0x7c20, 0x1eda, 0xe2a0, 0x5f31, 0x1, 0x0);
        gbc.writeMem(0x19c3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1094, gbc.sp());
        EXPECT(0x19c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0262
        gbc.setState(0xd0fc, 0xeff8, 0x4450, 0x8ab0, 0x8b5a, 0x9d5e, 0x1, 0x0);
        gbc.writeMem(0xd0fc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xeff8, gbc.sp());
        EXPECT(0xd0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0fc));
        EXPECT(0x7d, gbc.readMem(0xd0fd));
        // CB 7D 0263
        gbc.setState(0x310d, 0xd556, 0x6100, 0x911d, 0xd8c3, 0x11c9, 0x1, 0x1);
        gbc.writeMem(0x310d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd556, gbc.sp());
        EXPECT(0x310f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0264
        gbc.setState(0x4b8f, 0xe5bb, 0x5a80, 0xa8ea, 0xf015, 0xfcf0, 0x0, 0x0);
        gbc.writeMem(0x4b8f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe5bb, gbc.sp());
        EXPECT(0x4b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0265
        gbc.setState(0x70de, 0xfb71, 0x2890, 0xdba6, 0x2edc, 0x21ea, 0x1, 0x0);
        gbc.writeMem(0x70de, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfb71, gbc.sp());
        EXPECT(0x70e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0266
        gbc.setState(0xe79f, 0x544, 0x8290, 0x53cf, 0x8974, 0xb26e, 0x1, 0x1);
        gbc.writeMem(0xe79f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x544, gbc.sp());
        EXPECT(0xe7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79f));
        EXPECT(0x7d, gbc.readMem(0xe7a0));
        // CB 7D 0267
        gbc.setState(0x246e, 0x75b5, 0x5520, 0xa755, 0x2d89, 0xeab4, 0x0, 0x1);
        gbc.writeMem(0x246e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x75b5, gbc.sp());
        EXPECT(0x2470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0268
        gbc.setState(0xe364, 0x8671, 0x92d0, 0x59d7, 0xb14, 0x542b, 0x1, 0x1);
        gbc.writeMem(0xe364, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8671, gbc.sp());
        EXPECT(0xe366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe364));
        EXPECT(0x7d, gbc.readMem(0xe365));
        // CB 7D 0269
        gbc.setState(0xaf91, 0xd277, 0xbc90, 0x2ed9, 0x3f28, 0xf550, 0x0, 0x1);
        gbc.writeMem(0xaf91, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd277, gbc.sp());
        EXPECT(0xaf93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf91));
        EXPECT(0x7d, gbc.readMem(0xaf92));
        // CB 7D 026A
        gbc.setState(0x740d, 0x5920, 0xdc80, 0xe79c, 0xad5c, 0x819b, 0x0, 0x0);
        gbc.writeMem(0x740d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5920, gbc.sp());
        EXPECT(0x740f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 026B
        gbc.setState(0x8b55, 0x9c27, 0xfcb0, 0x91d6, 0x687d, 0x5103, 0x1, 0x1);
        gbc.writeMem(0x8b55, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9c27, gbc.sp());
        EXPECT(0x8b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b55));
        EXPECT(0x7d, gbc.readMem(0x8b56));
        // CB 7D 026C
        gbc.setState(0x9c97, 0x6bb4, 0x5cc0, 0x7fae, 0x9664, 0xdb9c, 0x0, 0x0);
        gbc.writeMem(0x9c97, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6bb4, gbc.sp());
        EXPECT(0x9c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c97));
        EXPECT(0x7d, gbc.readMem(0x9c98));
        // CB 7D 026D
        gbc.setState(0x72d, 0x4f66, 0x7bd0, 0x9fb6, 0xf572, 0xf273, 0x1, 0x1);
        gbc.writeMem(0x72d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4f66, gbc.sp());
        EXPECT(0x72f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 026E
        gbc.setState(0x6bca, 0xbd27, 0x1730, 0x59da, 0x5f95, 0x7a97, 0x1, 0x1);
        gbc.writeMem(0x6bca, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbd27, gbc.sp());
        EXPECT(0x6bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 026F
        gbc.setState(0x2061, 0x169d, 0x2270, 0xd5bb, 0xfae7, 0x90f1, 0x0, 0x1);
        gbc.writeMem(0x2061, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x169d, gbc.sp());
        EXPECT(0x2063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0270
        gbc.setState(0x3fe6, 0x29b0, 0x2fc0, 0x3c18, 0x6247, 0xdb3c, 0x0, 0x0);
        gbc.writeMem(0x3fe6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x29b0, gbc.sp());
        EXPECT(0x3fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0271
        gbc.setState(0x1266, 0xe145, 0x7430, 0xc520, 0x774, 0x796d, 0x0, 0x1);
        gbc.writeMem(0x1266, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe145, gbc.sp());
        EXPECT(0x1268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0272
        gbc.setState(0xeae0, 0xdc8, 0xb780, 0x1567, 0xb5d1, 0x743d, 0x1, 0x1);
        gbc.writeMem(0xeae0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdc8, gbc.sp());
        EXPECT(0xeae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae0));
        EXPECT(0x7d, gbc.readMem(0xeae1));
        // CB 7D 0273
        gbc.setState(0xdb80, 0x400, 0x3720, 0xb647, 0x905, 0xcb2d, 0x1, 0x1);
        gbc.writeMem(0xdb80, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x400, gbc.sp());
        EXPECT(0xdb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb80));
        EXPECT(0x7d, gbc.readMem(0xdb81));
        // CB 7D 0274
        gbc.setState(0xed78, 0xf62f, 0x1740, 0xe769, 0x5220, 0x1c4b, 0x1, 0x0);
        gbc.writeMem(0xed78, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf62f, gbc.sp());
        EXPECT(0xed7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed78));
        EXPECT(0x7d, gbc.readMem(0xed79));
        // CB 7D 0275
        gbc.setState(0x83a6, 0xe678, 0x24d0, 0x9efd, 0x86d7, 0x7b39, 0x0, 0x0);
        gbc.writeMem(0x83a6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe678, gbc.sp());
        EXPECT(0x83a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a6));
        EXPECT(0x7d, gbc.readMem(0x83a7));
        // CB 7D 0276
        gbc.setState(0x766e, 0xd779, 0x8a40, 0x5bba, 0xf495, 0x9574, 0x0, 0x1);
        gbc.writeMem(0x766e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd779, gbc.sp());
        EXPECT(0x7670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0277
        gbc.setState(0x1a33, 0x3e75, 0x7a00, 0xb7fb, 0xeb8e, 0x6379, 0x0, 0x1);
        gbc.writeMem(0x1a33, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3e75, gbc.sp());
        EXPECT(0x1a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0278
        gbc.setState(0x3137, 0xec44, 0x8030, 0xcd6f, 0xa20a, 0xc900, 0x1, 0x1);
        gbc.writeMem(0x3137, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xec44, gbc.sp());
        EXPECT(0x3139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 027A
        gbc.setState(0x2fdb, 0x5b0c, 0x2bb0, 0xfb88, 0x3917, 0x9507, 0x1, 0x0);
        gbc.writeMem(0x2fdb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5b0c, gbc.sp());
        EXPECT(0x2fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 027B
        gbc.setState(0xedad, 0x9a58, 0x4080, 0xd58f, 0xed57, 0x3ddf, 0x1, 0x0);
        gbc.writeMem(0xedad, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9a58, gbc.sp());
        EXPECT(0xedaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedad));
        EXPECT(0x7d, gbc.readMem(0xedae));
        // CB 7D 027C
        gbc.setState(0x7f80, 0x259b, 0x660, 0x2dce, 0x4a4d, 0x6f21, 0x1, 0x0);
        gbc.writeMem(0x7f80, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x259b, gbc.sp());
        EXPECT(0x7f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 027D
        gbc.setState(0xa591, 0xc9f2, 0x4c40, 0xd6a7, 0x110d, 0x9ba4, 0x1, 0x1);
        gbc.writeMem(0xa591, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc9f2, gbc.sp());
        EXPECT(0xa593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa591));
        EXPECT(0x7d, gbc.readMem(0xa592));
        // CB 7D 027E
        gbc.setState(0x9e5a, 0xdf1a, 0x890, 0x1398, 0x52e, 0x16e2, 0x0, 0x0);
        gbc.writeMem(0x9e5a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdf1a, gbc.sp());
        EXPECT(0x9e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e5a));
        EXPECT(0x7d, gbc.readMem(0x9e5b));
        // CB 7D 027F
        gbc.setState(0xbbb, 0x3f72, 0xdbb0, 0x7a5b, 0x3737, 0x9270, 0x1, 0x1);
        gbc.writeMem(0xbbb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3f72, gbc.sp());
        EXPECT(0xbbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0280
        gbc.setState(0x14ec, 0x5d5b, 0x2920, 0x49b6, 0xd619, 0xf595, 0x1, 0x0);
        gbc.writeMem(0x14ec, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5d5b, gbc.sp());
        EXPECT(0x14ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0281
        gbc.setState(0x6c10, 0x55db, 0xa7f0, 0xbf8d, 0x6d48, 0x43f9, 0x0, 0x1);
        gbc.writeMem(0x6c10, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x55db, gbc.sp());
        EXPECT(0x6c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0282
        gbc.setState(0xaf34, 0x79a4, 0xed20, 0xecf, 0xff56, 0x4d25, 0x1, 0x0);
        gbc.writeMem(0xaf34, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x79a4, gbc.sp());
        EXPECT(0xaf36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf34));
        EXPECT(0x7d, gbc.readMem(0xaf35));
        // CB 7D 0283
        gbc.setState(0xc388, 0xdf89, 0x1ee0, 0x5d39, 0xc2f6, 0x3ff6, 0x1, 0x0);
        gbc.writeMem(0xc388, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdf89, gbc.sp());
        EXPECT(0xc38a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc388));
        EXPECT(0x7d, gbc.readMem(0xc389));
        // CB 7D 0284
        gbc.setState(0x9b0c, 0x8b3a, 0x5d80, 0xd9f7, 0x8de5, 0x87aa, 0x1, 0x0);
        gbc.writeMem(0x9b0c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8b3a, gbc.sp());
        EXPECT(0x9b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0c));
        EXPECT(0x7d, gbc.readMem(0x9b0d));
        // CB 7D 0285
        gbc.setState(0x7bd8, 0xff9f, 0x8fa0, 0xee88, 0x3293, 0x773, 0x0, 0x0);
        gbc.writeMem(0x7bd8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xff9f, gbc.sp());
        EXPECT(0x7bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0286
        gbc.setState(0x7a87, 0xbb09, 0x1c60, 0x4985, 0xaf28, 0x84f6, 0x0, 0x1);
        gbc.writeMem(0x7a87, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbb09, gbc.sp());
        EXPECT(0x7a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0287
        gbc.setState(0xc290, 0xc87, 0x2b20, 0x63c8, 0x3618, 0x19d7, 0x0, 0x1);
        gbc.writeMem(0xc290, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc87, gbc.sp());
        EXPECT(0xc292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc290));
        EXPECT(0x7d, gbc.readMem(0xc291));
        // CB 7D 0288
        gbc.setState(0x62df, 0x68e8, 0x36d0, 0xc42c, 0x986f, 0x9f1, 0x0, 0x0);
        gbc.writeMem(0x62df, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x68e8, gbc.sp());
        EXPECT(0x62e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0289
        gbc.setState(0x7c2b, 0x6e03, 0x4470, 0xdc59, 0x3cf2, 0x505a, 0x1, 0x1);
        gbc.writeMem(0x7c2b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6e03, gbc.sp());
        EXPECT(0x7c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 028A
        gbc.setState(0x8a5a, 0x7405, 0xdf70, 0xd937, 0x8df0, 0xb9db, 0x1, 0x0);
        gbc.writeMem(0x8a5a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7405, gbc.sp());
        EXPECT(0x8a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a5a));
        EXPECT(0x7d, gbc.readMem(0x8a5b));
        // CB 7D 028B
        gbc.setState(0xd245, 0x9ace, 0x7690, 0xd7ea, 0x31f, 0x8fc2, 0x1, 0x0);
        gbc.writeMem(0xd245, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9ace, gbc.sp());
        EXPECT(0xd247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd245));
        EXPECT(0x7d, gbc.readMem(0xd246));
        // CB 7D 028C
        gbc.setState(0x2be0, 0x944b, 0xd10, 0x9682, 0xaf46, 0x168c, 0x0, 0x0);
        gbc.writeMem(0x2be0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x944b, gbc.sp());
        EXPECT(0x2be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 028D
        gbc.setState(0xa008, 0xbc3c, 0xc6a0, 0xc3e4, 0x1a92, 0x7f16, 0x0, 0x1);
        gbc.writeMem(0xa008, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbc3c, gbc.sp());
        EXPECT(0xa00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa008));
        EXPECT(0x7d, gbc.readMem(0xa009));
        // CB 7D 028E
        gbc.setState(0xacda, 0x773e, 0x70, 0xbc07, 0x48ef, 0x327, 0x1, 0x0);
        gbc.writeMem(0xacda, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x773e, gbc.sp());
        EXPECT(0xacdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacda));
        EXPECT(0x7d, gbc.readMem(0xacdb));
        // CB 7D 028F
        gbc.setState(0xe7da, 0x19a0, 0x5d10, 0xc187, 0x8745, 0x1ec4, 0x1, 0x1);
        gbc.writeMem(0xe7da, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x19a0, gbc.sp());
        EXPECT(0xe7dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7da));
        EXPECT(0x7d, gbc.readMem(0xe7db));
        // CB 7D 0290
        gbc.setState(0x8e61, 0x6baa, 0xfe50, 0xc6a, 0x94ae, 0xb345, 0x1, 0x0);
        gbc.writeMem(0x8e61, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6baa, gbc.sp());
        EXPECT(0x8e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e61));
        EXPECT(0x7d, gbc.readMem(0x8e62));
        // CB 7D 0291
        gbc.setState(0x402f, 0x6b61, 0x4490, 0x460c, 0x388, 0x1d16, 0x0, 0x1);
        gbc.writeMem(0x402f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6b61, gbc.sp());
        EXPECT(0x4031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0292
        gbc.setState(0x4ad4, 0x1784, 0x6ff0, 0xea59, 0x3762, 0xb8a2, 0x1, 0x0);
        gbc.writeMem(0x4ad4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1784, gbc.sp());
        EXPECT(0x4ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0293
        gbc.setState(0xe036, 0x3bc, 0xde30, 0x1768, 0x6977, 0xca3c, 0x0, 0x0);
        gbc.writeMem(0xe036, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3bc, gbc.sp());
        EXPECT(0xe038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe036));
        EXPECT(0x7d, gbc.readMem(0xe037));
        // CB 7D 0294
        gbc.setState(0x7002, 0x6b14, 0xa590, 0x3416, 0x15dc, 0xbf06, 0x1, 0x0);
        gbc.writeMem(0x7002, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6b14, gbc.sp());
        EXPECT(0x7004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0296
        gbc.setState(0x5fbf, 0x922e, 0x7d30, 0x43f1, 0xf8f6, 0x447f, 0x1, 0x0);
        gbc.writeMem(0x5fbf, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x922e, gbc.sp());
        EXPECT(0x5fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0297
        gbc.setState(0xd759, 0x6b9c, 0x5b60, 0xaba5, 0xf552, 0x9241, 0x0, 0x1);
        gbc.writeMem(0xd759, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6b9c, gbc.sp());
        EXPECT(0xd75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd759));
        EXPECT(0x7d, gbc.readMem(0xd75a));
        // CB 7D 0298
        gbc.setState(0xbe87, 0x47c3, 0xae60, 0x469c, 0xca61, 0xdf25, 0x1, 0x1);
        gbc.writeMem(0xbe87, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x47c3, gbc.sp());
        EXPECT(0xbe89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe87));
        EXPECT(0x7d, gbc.readMem(0xbe88));
        // CB 7D 0299
        gbc.setState(0xa4ef, 0xb8c5, 0x46a0, 0x5185, 0x11fb, 0x4082, 0x0, 0x0);
        gbc.writeMem(0xa4ef, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb8c5, gbc.sp());
        EXPECT(0xa4f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ef));
        EXPECT(0x7d, gbc.readMem(0xa4f0));
        // CB 7D 029A
        gbc.setState(0x2993, 0x973a, 0x4f40, 0x4603, 0xd9d1, 0xb9a6, 0x1, 0x1);
        gbc.writeMem(0x2993, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x973a, gbc.sp());
        EXPECT(0x2995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 029B
        gbc.setState(0x4971, 0xce5e, 0x8cb0, 0xe2ca, 0x3cec, 0xc8c7, 0x0, 0x1);
        gbc.writeMem(0x4971, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xce5e, gbc.sp());
        EXPECT(0x4973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 029C
        gbc.setState(0xaddb, 0xcd54, 0x3380, 0x30a2, 0x2542, 0xbc4e, 0x1, 0x1);
        gbc.writeMem(0xaddb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcd54, gbc.sp());
        EXPECT(0xaddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddb));
        EXPECT(0x7d, gbc.readMem(0xaddc));
        // CB 7D 029D
        gbc.setState(0x8c54, 0xd8e1, 0xf910, 0x10c1, 0xa038, 0xaab2, 0x1, 0x0);
        gbc.writeMem(0x8c54, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd8e1, gbc.sp());
        EXPECT(0x8c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c54));
        EXPECT(0x7d, gbc.readMem(0x8c55));
        // CB 7D 029E
        gbc.setState(0x64d7, 0xa015, 0xa440, 0x5dca, 0x8cae, 0x597d, 0x0, 0x1);
        gbc.writeMem(0x64d7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa015, gbc.sp());
        EXPECT(0x64d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 029F
        gbc.setState(0xcc91, 0x5bbf, 0x2e60, 0x90ee, 0x67b5, 0xc9f4, 0x1, 0x1);
        gbc.writeMem(0xcc91, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5bbf, gbc.sp());
        EXPECT(0xcc93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc91));
        EXPECT(0x7d, gbc.readMem(0xcc92));
        // CB 7D 02A0
        gbc.setState(0x2169, 0xf94d, 0x3ee0, 0x5238, 0xc4a7, 0x2d2d, 0x1, 0x0);
        gbc.writeMem(0x2169, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf94d, gbc.sp());
        EXPECT(0x216b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02A1
        gbc.setState(0x8123, 0xf2ef, 0x88a0, 0x943, 0x56f2, 0x4073, 0x0, 0x0);
        gbc.writeMem(0x8123, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf2ef, gbc.sp());
        EXPECT(0x8125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8123));
        EXPECT(0x7d, gbc.readMem(0x8124));
        // CB 7D 02A2
        gbc.setState(0xb9ae, 0x1113, 0x5a60, 0x1df9, 0xce67, 0xe1b6, 0x1, 0x1);
        gbc.writeMem(0xb9ae, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1113, gbc.sp());
        EXPECT(0xb9b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ae));
        EXPECT(0x7d, gbc.readMem(0xb9af));
        // CB 7D 02A3
        gbc.setState(0x6753, 0xe971, 0x7d0, 0xbe90, 0xc27a, 0xe7a1, 0x0, 0x0);
        gbc.writeMem(0x6753, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe971, gbc.sp());
        EXPECT(0x6755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02A4
        gbc.setState(0xe5a0, 0x5d4e, 0x4ab0, 0x9e5b, 0x2550, 0xae64, 0x0, 0x1);
        gbc.writeMem(0xe5a0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5d4e, gbc.sp());
        EXPECT(0xe5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a0));
        EXPECT(0x7d, gbc.readMem(0xe5a1));
        // CB 7D 02A5
        gbc.setState(0xb246, 0xa5d3, 0xb4f0, 0xbb1d, 0x413f, 0xabe3, 0x0, 0x0);
        gbc.writeMem(0xb246, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa5d3, gbc.sp());
        EXPECT(0xb248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb246));
        EXPECT(0x7d, gbc.readMem(0xb247));
        // CB 7D 02A6
        gbc.setState(0x8621, 0xf98b, 0x1b70, 0x2259, 0x65a6, 0xddec, 0x0, 0x1);
        gbc.writeMem(0x8621, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf98b, gbc.sp());
        EXPECT(0x8623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8621));
        EXPECT(0x7d, gbc.readMem(0x8622));
        // CB 7D 02A7
        gbc.setState(0x32cd, 0x3b58, 0xe60, 0xae17, 0xd6e5, 0x4922, 0x0, 0x1);
        gbc.writeMem(0x32cd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3b58, gbc.sp());
        EXPECT(0x32cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02A8
        gbc.setState(0xe3db, 0xa6a, 0x88b0, 0x58e5, 0xd473, 0x69f7, 0x1, 0x1);
        gbc.writeMem(0xe3db, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa6a, gbc.sp());
        EXPECT(0xe3dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3db));
        EXPECT(0x7d, gbc.readMem(0xe3dc));
        // CB 7D 02A9
        gbc.setState(0xe570, 0x7223, 0xa170, 0xfe14, 0x790a, 0x6c40, 0x1, 0x1);
        gbc.writeMem(0xe570, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7223, gbc.sp());
        EXPECT(0xe572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe570));
        EXPECT(0x7d, gbc.readMem(0xe571));
        // CB 7D 02AA
        gbc.setState(0x4fce, 0x295b, 0xd950, 0xc555, 0xb806, 0xfa4b, 0x1, 0x0);
        gbc.writeMem(0x4fce, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x295b, gbc.sp());
        EXPECT(0x4fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02AB
        gbc.setState(0x767a, 0x510b, 0xc5f0, 0x96a9, 0xcad0, 0x5125, 0x0, 0x1);
        gbc.writeMem(0x767a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x510b, gbc.sp());
        EXPECT(0x767c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02AC
        gbc.setState(0x9c90, 0xe0e5, 0xde0, 0xd7ce, 0xcb93, 0x6d6b, 0x1, 0x1);
        gbc.writeMem(0x9c90, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe0e5, gbc.sp());
        EXPECT(0x9c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c90));
        EXPECT(0x7d, gbc.readMem(0x9c91));
        // CB 7D 02AD
        gbc.setState(0xa534, 0xe9b8, 0xe260, 0x1087, 0x5bc8, 0x8712, 0x0, 0x0);
        gbc.writeMem(0xa534, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe9b8, gbc.sp());
        EXPECT(0xa536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa534));
        EXPECT(0x7d, gbc.readMem(0xa535));
        // CB 7D 02AE
        gbc.setState(0x1793, 0x39cc, 0xe4a0, 0xbb93, 0x977, 0x322a, 0x1, 0x0);
        gbc.writeMem(0x1793, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x39cc, gbc.sp());
        EXPECT(0x1795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02AF
        gbc.setState(0xb8e2, 0xdab4, 0x7840, 0x84d1, 0x76a7, 0xc159, 0x0, 0x0);
        gbc.writeMem(0xb8e2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdab4, gbc.sp());
        EXPECT(0xb8e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e2));
        EXPECT(0x7d, gbc.readMem(0xb8e3));
        // CB 7D 02B0
        gbc.setState(0x3d7a, 0x99a9, 0x1080, 0x15d5, 0xce9b, 0xaf8, 0x0, 0x1);
        gbc.writeMem(0x3d7a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x99a9, gbc.sp());
        EXPECT(0x3d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02B1
        gbc.setState(0xa4f6, 0x8f9b, 0x6930, 0x8f35, 0xea00, 0xced4, 0x1, 0x0);
        gbc.writeMem(0xa4f6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8f9b, gbc.sp());
        EXPECT(0xa4f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f6));
        EXPECT(0x7d, gbc.readMem(0xa4f7));
        // CB 7D 02B2
        gbc.setState(0x9f70, 0x486f, 0xb960, 0xf76, 0x50c8, 0xe7ee, 0x0, 0x0);
        gbc.writeMem(0x9f70, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x486f, gbc.sp());
        EXPECT(0x9f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f70));
        EXPECT(0x7d, gbc.readMem(0x9f71));
        // CB 7D 02B3
        gbc.setState(0xd2d2, 0xd7bf, 0xe3c0, 0x6bcd, 0xe36b, 0x3296, 0x1, 0x1);
        gbc.writeMem(0xd2d2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd7bf, gbc.sp());
        EXPECT(0xd2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d2));
        EXPECT(0x7d, gbc.readMem(0xd2d3));
        // CB 7D 02B4
        gbc.setState(0x2c0b, 0x94, 0x2d70, 0x1a0b, 0xe539, 0xb3fb, 0x0, 0x0);
        gbc.writeMem(0x2c0b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x94, gbc.sp());
        EXPECT(0x2c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02B5
        gbc.setState(0x44e7, 0xa93d, 0x4da0, 0xbafa, 0x47b9, 0x9826, 0x0, 0x1);
        gbc.writeMem(0x44e7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa93d, gbc.sp());
        EXPECT(0x44e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02B6
        gbc.setState(0x5c29, 0x4386, 0x4c10, 0xd886, 0xa26, 0xcb9, 0x0, 0x1);
        gbc.writeMem(0x5c29, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4386, gbc.sp());
        EXPECT(0x5c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02B7
        gbc.setState(0x41de, 0xe6dc, 0x1b30, 0x1572, 0xce4d, 0x5158, 0x0, 0x1);
        gbc.writeMem(0x41de, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe6dc, gbc.sp());
        EXPECT(0x41e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02B8
        gbc.setState(0x4e7f, 0x31b1, 0xd060, 0x5f00, 0x9fd6, 0xcbbc, 0x1, 0x1);
        gbc.writeMem(0x4e7f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x31b1, gbc.sp());
        EXPECT(0x4e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02B9
        gbc.setState(0xa606, 0x996b, 0x8e50, 0x7848, 0xe504, 0x964, 0x0, 0x1);
        gbc.writeMem(0xa606, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x996b, gbc.sp());
        EXPECT(0xa608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa606));
        EXPECT(0x7d, gbc.readMem(0xa607));
        // CB 7D 02BA
        gbc.setState(0x8e22, 0xee6f, 0x82d0, 0x2d57, 0x9979, 0xa3a, 0x0, 0x0);
        gbc.writeMem(0x8e22, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xee6f, gbc.sp());
        EXPECT(0x8e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e22));
        EXPECT(0x7d, gbc.readMem(0x8e23));
        // CB 7D 02BB
        gbc.setState(0x7348, 0x3942, 0x4ea0, 0xd31e, 0x764f, 0x4524, 0x1, 0x0);
        gbc.writeMem(0x7348, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3942, gbc.sp());
        EXPECT(0x734a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02BC
        gbc.setState(0xa1b0, 0xe191, 0xa480, 0xa04f, 0x7a09, 0x7f1d, 0x0, 0x0);
        gbc.writeMem(0xa1b0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe191, gbc.sp());
        EXPECT(0xa1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b0));
        EXPECT(0x7d, gbc.readMem(0xa1b1));
        // CB 7D 02BD
        gbc.setState(0x1b50, 0xda2f, 0x100, 0xe5fc, 0x238c, 0x86a8, 0x1, 0x1);
        gbc.writeMem(0x1b50, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xda2f, gbc.sp());
        EXPECT(0x1b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02BE
        gbc.setState(0x1c47, 0x9d88, 0x94a0, 0xa480, 0xc355, 0x2a35, 0x1, 0x0);
        gbc.writeMem(0x1c47, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9d88, gbc.sp());
        EXPECT(0x1c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02BF
        gbc.setState(0x8d95, 0x8a, 0x6da0, 0xc845, 0x3a63, 0x656, 0x1, 0x1);
        gbc.writeMem(0x8d95, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8a, gbc.sp());
        EXPECT(0x8d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d95));
        EXPECT(0x7d, gbc.readMem(0x8d96));
        // CB 7D 02C0
        gbc.setState(0x1d45, 0xe009, 0x29d0, 0xfc2a, 0x675, 0xfb8f, 0x1, 0x1);
        gbc.writeMem(0x1d45, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe009, gbc.sp());
        EXPECT(0x1d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02C1
        gbc.setState(0xd13e, 0x1349, 0x87c0, 0x138b, 0x5fd0, 0xbb31, 0x0, 0x0);
        gbc.writeMem(0xd13e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1349, gbc.sp());
        EXPECT(0xd140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd13e));
        EXPECT(0x7d, gbc.readMem(0xd13f));
        // CB 7D 02C2
        gbc.setState(0x64fb, 0xb62f, 0x4da0, 0x907e, 0x4b58, 0xae05, 0x1, 0x1);
        gbc.writeMem(0x64fb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb62f, gbc.sp());
        EXPECT(0x64fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02C3
        gbc.setState(0xa422, 0xb363, 0x1150, 0x74f9, 0xd900, 0x3db1, 0x0, 0x0);
        gbc.writeMem(0xa422, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb363, gbc.sp());
        EXPECT(0xa424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa422));
        EXPECT(0x7d, gbc.readMem(0xa423));
        // CB 7D 02C4
        gbc.setState(0x2093, 0xdaa8, 0xe560, 0xf453, 0x922b, 0x7aab, 0x0, 0x0);
        gbc.writeMem(0x2093, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdaa8, gbc.sp());
        EXPECT(0x2095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02C6
        gbc.setState(0xecb6, 0xd370, 0xfd70, 0xec13, 0x5256, 0xe7c3, 0x1, 0x0);
        gbc.writeMem(0xecb6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd370, gbc.sp());
        EXPECT(0xecb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb6));
        EXPECT(0x7d, gbc.readMem(0xecb7));
        // CB 7D 02C7
        gbc.setState(0x44c8, 0xc8c8, 0x38d0, 0x7767, 0xb6d0, 0x2e63, 0x0, 0x0);
        gbc.writeMem(0x44c8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc8c8, gbc.sp());
        EXPECT(0x44ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02C8
        gbc.setState(0xe01d, 0x4641, 0xbdb0, 0x58b8, 0x5c0f, 0xa871, 0x0, 0x1);
        gbc.writeMem(0xe01d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4641, gbc.sp());
        EXPECT(0xe01f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01d));
        EXPECT(0x7d, gbc.readMem(0xe01e));
        // CB 7D 02C9
        gbc.setState(0xe6a2, 0x899d, 0x7e50, 0x77e7, 0xe18, 0xfe69, 0x1, 0x0);
        gbc.writeMem(0xe6a2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x899d, gbc.sp());
        EXPECT(0xe6a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a2));
        EXPECT(0x7d, gbc.readMem(0xe6a3));
        // CB 7D 02CA
        gbc.setState(0x1740, 0x9e18, 0x9930, 0xe630, 0x13e, 0x2ca1, 0x1, 0x1);
        gbc.writeMem(0x1740, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9e18, gbc.sp());
        EXPECT(0x1742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02CB
        gbc.setState(0xe10c, 0xfac9, 0xd630, 0xf935, 0x7e6b, 0xe95d, 0x1, 0x0);
        gbc.writeMem(0xe10c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfac9, gbc.sp());
        EXPECT(0xe10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe10c));
        EXPECT(0x7d, gbc.readMem(0xe10d));
        // CB 7D 02CC
        gbc.setState(0x1d37, 0x9751, 0xfaf0, 0x7441, 0x9271, 0xa280, 0x0, 0x1);
        gbc.writeMem(0x1d37, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9751, gbc.sp());
        EXPECT(0x1d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02CD
        gbc.setState(0x75c, 0xf25e, 0x74a0, 0x27, 0xd346, 0x477b, 0x1, 0x1);
        gbc.writeMem(0x75c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf25e, gbc.sp());
        EXPECT(0x75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02CE
        gbc.setState(0x6495, 0x3f05, 0x6bd0, 0xd454, 0xf606, 0xefb5, 0x1, 0x0);
        gbc.writeMem(0x6495, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3f05, gbc.sp());
        EXPECT(0x6497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02CF
        gbc.setState(0x5ed3, 0xa127, 0x7d50, 0x17e9, 0xd36a, 0x7393, 0x1, 0x1);
        gbc.writeMem(0x5ed3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa127, gbc.sp());
        EXPECT(0x5ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02D1
        gbc.setState(0x61ce, 0x5c75, 0xdff0, 0xccd2, 0xed7e, 0xdb79, 0x0, 0x0);
        gbc.writeMem(0x61ce, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5c75, gbc.sp());
        EXPECT(0x61d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02D2
        gbc.setState(0x6c42, 0xa5b2, 0xfe0, 0xa8d1, 0x304, 0x693f, 0x1, 0x0);
        gbc.writeMem(0x6c42, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa5b2, gbc.sp());
        EXPECT(0x6c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02D3
        gbc.setState(0x10a1, 0x2fc, 0x3c30, 0xd143, 0xce86, 0xd6f7, 0x0, 0x0);
        gbc.writeMem(0x10a1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2fc, gbc.sp());
        EXPECT(0x10a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02D4
        gbc.setState(0x13c5, 0x363, 0xae70, 0xb0a7, 0x4b44, 0xb3bb, 0x0, 0x1);
        gbc.writeMem(0x13c5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x363, gbc.sp());
        EXPECT(0x13c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02D5
        gbc.setState(0x94be, 0x4024, 0xdb60, 0xf97, 0xcb57, 0xed8a, 0x1, 0x1);
        gbc.writeMem(0x94be, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4024, gbc.sp());
        EXPECT(0x94c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94be));
        EXPECT(0x7d, gbc.readMem(0x94bf));
        // CB 7D 02D6
        gbc.setState(0xaa95, 0x46de, 0xe950, 0x3004, 0x2a4f, 0x47e1, 0x1, 0x0);
        gbc.writeMem(0xaa95, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x46de, gbc.sp());
        EXPECT(0xaa97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa95));
        EXPECT(0x7d, gbc.readMem(0xaa96));
        // CB 7D 02D7
        gbc.setState(0x7e7, 0xbc5d, 0xa070, 0x7f51, 0xf3da, 0xec3c, 0x0, 0x0);
        gbc.writeMem(0x7e7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbc5d, gbc.sp());
        EXPECT(0x7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02D8
        gbc.setState(0xb719, 0xcd5, 0xb670, 0x89b0, 0x9a5, 0x3cda, 0x0, 0x0);
        gbc.writeMem(0xb719, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcd5, gbc.sp());
        EXPECT(0xb71b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb719));
        EXPECT(0x7d, gbc.readMem(0xb71a));
        // CB 7D 02D9
        gbc.setState(0xe455, 0x5b1c, 0x7760, 0x132c, 0x61e6, 0xafdb, 0x1, 0x0);
        gbc.writeMem(0xe455, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5b1c, gbc.sp());
        EXPECT(0xe457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe455));
        EXPECT(0x7d, gbc.readMem(0xe456));
        // CB 7D 02DA
        gbc.setState(0x6e60, 0xfa66, 0xe370, 0x7b7e, 0x3c35, 0x625c, 0x1, 0x1);
        gbc.writeMem(0x6e60, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfa66, gbc.sp());
        EXPECT(0x6e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02DB
        gbc.setState(0x2aba, 0xcc03, 0xa5d0, 0xf248, 0x38f9, 0x7aa8, 0x0, 0x1);
        gbc.writeMem(0x2aba, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcc03, gbc.sp());
        EXPECT(0x2abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02DC
        gbc.setState(0xe6d6, 0xc24, 0x85e0, 0x733b, 0xe6a5, 0x4139, 0x0, 0x0);
        gbc.writeMem(0xe6d6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc24, gbc.sp());
        EXPECT(0xe6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d6));
        EXPECT(0x7d, gbc.readMem(0xe6d7));
        // CB 7D 02DE
        gbc.setState(0x7538, 0xe4b, 0xf7e0, 0x6fc3, 0x8608, 0x58e4, 0x1, 0x0);
        gbc.writeMem(0x7538, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe4b, gbc.sp());
        EXPECT(0x753a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02DF
        gbc.setState(0xebfe, 0xe8d1, 0xfbf0, 0x2a3d, 0x6228, 0xbbc3, 0x0, 0x0);
        gbc.writeMem(0xebfe, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe8d1, gbc.sp());
        EXPECT(0xec00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfe));
        EXPECT(0x7d, gbc.readMem(0xebff));
        // CB 7D 02E0
        gbc.setState(0xa0e, 0x6396, 0x5df0, 0xacff, 0x758f, 0x1005, 0x1, 0x1);
        gbc.writeMem(0xa0e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6396, gbc.sp());
        EXPECT(0xa10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02E1
        gbc.setState(0x89db, 0xe11, 0x7d10, 0x5ed7, 0x867a, 0x1191, 0x1, 0x1);
        gbc.writeMem(0x89db, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe11, gbc.sp());
        EXPECT(0x89dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89db));
        EXPECT(0x7d, gbc.readMem(0x89dc));
        // CB 7D 02E2
        gbc.setState(0x71ca, 0x4358, 0x6fc0, 0x27a7, 0xe78c, 0x7666, 0x0, 0x0);
        gbc.writeMem(0x71ca, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4358, gbc.sp());
        EXPECT(0x71cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02E3
        gbc.setState(0x81be, 0xd9ca, 0xe370, 0x4096, 0x965a, 0x4e14, 0x1, 0x0);
        gbc.writeMem(0x81be, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd9ca, gbc.sp());
        EXPECT(0x81c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81be));
        EXPECT(0x7d, gbc.readMem(0x81bf));
        // CB 7D 02E4
        gbc.setState(0x6e0b, 0xedd7, 0x2800, 0x5c9a, 0xe007, 0xde5, 0x1, 0x0);
        gbc.writeMem(0x6e0b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xedd7, gbc.sp());
        EXPECT(0x6e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02E5
        gbc.setState(0x68e4, 0x335b, 0xe450, 0x6d14, 0x99dc, 0xad6e, 0x0, 0x0);
        gbc.writeMem(0x68e4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x335b, gbc.sp());
        EXPECT(0x68e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02E6
        gbc.setState(0xd99e, 0xe80, 0xbcc0, 0xf8f2, 0x1ac6, 0x1f80, 0x1, 0x0);
        gbc.writeMem(0xd99e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe80, gbc.sp());
        EXPECT(0xd9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99e));
        EXPECT(0x7d, gbc.readMem(0xd99f));
        // CB 7D 02E8
        gbc.setState(0x1c6, 0xd5c2, 0xcc20, 0xd65a, 0x45e7, 0x2757, 0x1, 0x1);
        gbc.writeMem(0x1c6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd5c2, gbc.sp());
        EXPECT(0x1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02E9
        gbc.setState(0x33de, 0x1a52, 0x5fc0, 0x5925, 0xe674, 0xef2c, 0x0, 0x1);
        gbc.writeMem(0x33de, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1a52, gbc.sp());
        EXPECT(0x33e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02EA
        gbc.setState(0x634e, 0x8348, 0xc8c0, 0xe2ad, 0x4450, 0x9c2b, 0x1, 0x0);
        gbc.writeMem(0x634e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8348, gbc.sp());
        EXPECT(0x6350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02EB
        gbc.setState(0x1263, 0x3b9d, 0xbe50, 0x14f7, 0xd229, 0x50b6, 0x0, 0x0);
        gbc.writeMem(0x1263, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3b9d, gbc.sp());
        EXPECT(0x1265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 02EC
        gbc.setState(0x9b8b, 0xf3d8, 0x9d90, 0xfc1a, 0x2c7d, 0xc0ac, 0x0, 0x0);
        gbc.writeMem(0x9b8b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf3d8, gbc.sp());
        EXPECT(0x9b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8b));
        EXPECT(0x7d, gbc.readMem(0x9b8c));
        // CB 7D 02EE
        gbc.setState(0x3427, 0x3e4e, 0xe340, 0x46a3, 0x8140, 0x3080, 0x1, 0x0);
        gbc.writeMem(0x3427, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3e4e, gbc.sp());
        EXPECT(0x3429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02EF
        gbc.setState(0x73fa, 0x2767, 0x2480, 0xb109, 0x5428, 0x9631, 0x0, 0x1);
        gbc.writeMem(0x73fa, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2767, gbc.sp());
        EXPECT(0x73fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02F0
        gbc.setState(0xdd0a, 0x1c83, 0xeaa0, 0x521a, 0xfaed, 0xa05e, 0x1, 0x0);
        gbc.writeMem(0xdd0a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1c83, gbc.sp());
        EXPECT(0xdd0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0a));
        EXPECT(0x7d, gbc.readMem(0xdd0b));
        // CB 7D 02F1
        gbc.setState(0x595b, 0x1c7f, 0x31e0, 0x5944, 0x8475, 0x7cc6, 0x1, 0x1);
        gbc.writeMem(0x595b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1c7f, gbc.sp());
        EXPECT(0x595d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02F4
        gbc.setState(0xa596, 0x676e, 0x67e0, 0x5182, 0x68d3, 0x4c12, 0x1, 0x1);
        gbc.writeMem(0xa596, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x676e, gbc.sp());
        EXPECT(0xa598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa596));
        EXPECT(0x7d, gbc.readMem(0xa597));
        // CB 7D 02F5
        gbc.setState(0x7df2, 0xb0a4, 0x1bc0, 0x2751, 0x92af, 0x76f5, 0x0, 0x0);
        gbc.writeMem(0x7df2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb0a4, gbc.sp());
        EXPECT(0x7df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02F6
        gbc.setState(0xc5ae, 0x7e8c, 0xce70, 0x6ec, 0xaf0c, 0x5620, 0x0, 0x0);
        gbc.writeMem(0xc5ae, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7e8c, gbc.sp());
        EXPECT(0xc5b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ae));
        EXPECT(0x7d, gbc.readMem(0xc5af));
        // CB 7D 02F7
        gbc.setState(0xcbeb, 0x5272, 0x9430, 0x5bb6, 0x8009, 0xf0c5, 0x0, 0x1);
        gbc.writeMem(0xcbeb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5272, gbc.sp());
        EXPECT(0xcbed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbeb));
        EXPECT(0x7d, gbc.readMem(0xcbec));
        // CB 7D 02F8
        gbc.setState(0x8cff, 0x884, 0x7fd0, 0x6b6c, 0x57e9, 0x7ab9, 0x1, 0x1);
        gbc.writeMem(0x8cff, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x884, gbc.sp());
        EXPECT(0x8d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cff));
        EXPECT(0x7d, gbc.readMem(0x8d00));
        // CB 7D 02F9
        gbc.setState(0x8264, 0xb56b, 0x2b0, 0x7024, 0x929a, 0x3712, 0x1, 0x1);
        gbc.writeMem(0x8264, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb56b, gbc.sp());
        EXPECT(0x8266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8264));
        EXPECT(0x7d, gbc.readMem(0x8265));
        // CB 7D 02FA
        gbc.setState(0xe56a, 0x162a, 0x7b30, 0x4214, 0xf6c5, 0x175e, 0x1, 0x1);
        gbc.writeMem(0xe56a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x162a, gbc.sp());
        EXPECT(0xe56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56a));
        EXPECT(0x7d, gbc.readMem(0xe56b));
        // CB 7D 02FB
        gbc.setState(0x42dd, 0x1005, 0x2e20, 0xd750, 0x2e97, 0xb5e6, 0x0, 0x1);
        gbc.writeMem(0x42dd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1005, gbc.sp());
        EXPECT(0x42df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02FC
        gbc.setState(0x87b9, 0x69a6, 0x6190, 0x82ba, 0x1d8b, 0xd143, 0x1, 0x0);
        gbc.writeMem(0x87b9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x69a6, gbc.sp());
        EXPECT(0x87bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b9));
        EXPECT(0x7d, gbc.readMem(0x87ba));
        // CB 7D 02FD
        gbc.setState(0x4d47, 0x4aa, 0xcec0, 0x4c3d, 0xd502, 0x37a0, 0x1, 0x1);
        gbc.writeMem(0x4d47, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4aa, gbc.sp());
        EXPECT(0x4d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02FE
        gbc.setState(0x5a87, 0xfddb, 0x59a0, 0xa6f1, 0x9e54, 0x7e78, 0x1, 0x0);
        gbc.writeMem(0x5a87, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfddb, gbc.sp());
        EXPECT(0x5a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 02FF
        gbc.setState(0x5ecc, 0x1971, 0xa940, 0xf0ae, 0x722e, 0xd496, 0x1, 0x1);
        gbc.writeMem(0x5ecc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1971, gbc.sp());
        EXPECT(0x5ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0300
        gbc.setState(0x121b, 0x45ae, 0xa710, 0x2af, 0xdd0c, 0x9850, 0x1, 0x1);
        gbc.writeMem(0x121b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x45ae, gbc.sp());
        EXPECT(0x121d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0301
        gbc.setState(0x7cce, 0x2357, 0x8930, 0x8914, 0x9cb7, 0xca42, 0x1, 0x0);
        gbc.writeMem(0x7cce, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2357, gbc.sp());
        EXPECT(0x7cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0302
        gbc.setState(0x154e, 0xb013, 0x2c90, 0xdfe8, 0xdddf, 0x2cda, 0x1, 0x1);
        gbc.writeMem(0x154e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb013, gbc.sp());
        EXPECT(0x1550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0303
        gbc.setState(0xbf4a, 0x6acc, 0x4c50, 0x3a28, 0xf020, 0xd8b6, 0x0, 0x0);
        gbc.writeMem(0xbf4a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6acc, gbc.sp());
        EXPECT(0xbf4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4a));
        EXPECT(0x7d, gbc.readMem(0xbf4b));
        // CB 7D 0304
        gbc.setState(0x78c0, 0x4506, 0x87e0, 0xd622, 0xba67, 0x7d68, 0x0, 0x1);
        gbc.writeMem(0x78c0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4506, gbc.sp());
        EXPECT(0x78c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0305
        gbc.setState(0x46ba, 0xece8, 0xb8e0, 0x77dd, 0xe1c3, 0x79cd, 0x0, 0x0);
        gbc.writeMem(0x46ba, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xece8, gbc.sp());
        EXPECT(0x46bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0306
        gbc.setState(0x8533, 0xa30d, 0x6840, 0x3768, 0x4ffa, 0x25d1, 0x0, 0x0);
        gbc.writeMem(0x8533, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa30d, gbc.sp());
        EXPECT(0x8535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8533));
        EXPECT(0x7d, gbc.readMem(0x8534));
        // CB 7D 0307
        gbc.setState(0x870, 0xb3db, 0x1e10, 0xdd29, 0xfe49, 0xa2fc, 0x1, 0x0);
        gbc.writeMem(0x870, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb3db, gbc.sp());
        EXPECT(0x872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0308
        gbc.setState(0xd082, 0x745, 0x470, 0xc4d0, 0xf9a9, 0x4879, 0x1, 0x1);
        gbc.writeMem(0xd082, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x745, gbc.sp());
        EXPECT(0xd084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd082));
        EXPECT(0x7d, gbc.readMem(0xd083));
        // CB 7D 0309
        gbc.setState(0x1899, 0xd946, 0x23c0, 0x9fc8, 0x66d4, 0x8886, 0x1, 0x1);
        gbc.writeMem(0x1899, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd946, gbc.sp());
        EXPECT(0x189b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 030A
        gbc.setState(0x27ed, 0x8aed, 0xcbc0, 0x6d1d, 0x5e64, 0xfb20, 0x0, 0x1);
        gbc.writeMem(0x27ed, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8aed, gbc.sp());
        EXPECT(0x27ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 030B
        gbc.setState(0x99c8, 0x892c, 0x7390, 0x2a06, 0x6841, 0xa2b3, 0x0, 0x0);
        gbc.writeMem(0x99c8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x892c, gbc.sp());
        EXPECT(0x99ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c8));
        EXPECT(0x7d, gbc.readMem(0x99c9));
        // CB 7D 030C
        gbc.setState(0x37fd, 0x6b31, 0xea80, 0x6223, 0x7321, 0x5f11, 0x1, 0x1);
        gbc.writeMem(0x37fd, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6b31, gbc.sp());
        EXPECT(0x37ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 030D
        gbc.setState(0x5944, 0x7136, 0x9070, 0x36da, 0x420d, 0x7e6e, 0x0, 0x1);
        gbc.writeMem(0x5944, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7136, gbc.sp());
        EXPECT(0x5946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 030E
        gbc.setState(0xd580, 0x7117, 0xc7c0, 0xefda, 0xbda, 0x32ee, 0x0, 0x1);
        gbc.writeMem(0xd580, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7117, gbc.sp());
        EXPECT(0xd582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd580));
        EXPECT(0x7d, gbc.readMem(0xd581));
        // CB 7D 030F
        gbc.setState(0x9b9c, 0x849f, 0xaa70, 0xd459, 0x4864, 0xb0a4, 0x1, 0x1);
        gbc.writeMem(0x9b9c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x849f, gbc.sp());
        EXPECT(0x9b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b9c));
        EXPECT(0x7d, gbc.readMem(0x9b9d));
        // CB 7D 0310
        gbc.setState(0xeea6, 0x732e, 0x36d0, 0x603, 0x7381, 0x2fe4, 0x0, 0x0);
        gbc.writeMem(0xeea6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x732e, gbc.sp());
        EXPECT(0xeea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea6));
        EXPECT(0x7d, gbc.readMem(0xeea7));
        // CB 7D 0311
        gbc.setState(0x2531, 0x67, 0x5b00, 0x641f, 0x642, 0x9b8e, 0x0, 0x1);
        gbc.writeMem(0x2531, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x67, gbc.sp());
        EXPECT(0x2533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0312
        gbc.setState(0x9c7b, 0x4d60, 0x93b0, 0x5734, 0xc406, 0x2b92, 0x0, 0x0);
        gbc.writeMem(0x9c7b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4d60, gbc.sp());
        EXPECT(0x9c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7b));
        EXPECT(0x7d, gbc.readMem(0x9c7c));
        // CB 7D 0313
        gbc.setState(0x6e5b, 0xb6f7, 0x6a40, 0xb8c6, 0x9837, 0xc0b7, 0x1, 0x0);
        gbc.writeMem(0x6e5b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb6f7, gbc.sp());
        EXPECT(0x6e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0314
        gbc.setState(0x5dbe, 0x1f9a, 0xaab0, 0x7106, 0xebe7, 0xc126, 0x0, 0x0);
        gbc.writeMem(0x5dbe, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1f9a, gbc.sp());
        EXPECT(0x5dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0315
        gbc.setState(0xede, 0x644b, 0x5e40, 0xea8a, 0x9a21, 0xf0e, 0x0, 0x0);
        gbc.writeMem(0xede, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x644b, gbc.sp());
        EXPECT(0xee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0316
        gbc.setState(0x9d2a, 0xa871, 0x9760, 0xfd66, 0xfa37, 0xab00, 0x0, 0x0);
        gbc.writeMem(0x9d2a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa871, gbc.sp());
        EXPECT(0x9d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2a));
        EXPECT(0x7d, gbc.readMem(0x9d2b));
        // CB 7D 0317
        gbc.setState(0x848, 0xdb4b, 0xd690, 0x6534, 0xda93, 0x26fe, 0x0, 0x1);
        gbc.writeMem(0x848, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdb4b, gbc.sp());
        EXPECT(0x84a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0318
        gbc.setState(0x9394, 0xb328, 0x9470, 0xdb81, 0x7a4, 0xecda, 0x0, 0x0);
        gbc.writeMem(0x9394, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb328, gbc.sp());
        EXPECT(0x9396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9394));
        EXPECT(0x7d, gbc.readMem(0x9395));
        // CB 7D 031B
        gbc.setState(0xb620, 0x51b9, 0xe4f0, 0x7efe, 0x598a, 0xf947, 0x1, 0x1);
        gbc.writeMem(0xb620, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x51b9, gbc.sp());
        EXPECT(0xb622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb620));
        EXPECT(0x7d, gbc.readMem(0xb621));
        // CB 7D 031C
        gbc.setState(0xe7c3, 0xd278, 0xca90, 0xd3d, 0x54ea, 0x4eb4, 0x1, 0x0);
        gbc.writeMem(0xe7c3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd278, gbc.sp());
        EXPECT(0xe7c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c3));
        EXPECT(0x7d, gbc.readMem(0xe7c4));
        // CB 7D 031D
        gbc.setState(0x84a, 0x3d2c, 0x1ec0, 0x1a9e, 0x4a8, 0x7fa4, 0x1, 0x1);
        gbc.writeMem(0x84a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3d2c, gbc.sp());
        EXPECT(0x84c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 031E
        gbc.setState(0x6d8d, 0xc5e3, 0x6c70, 0x1ad7, 0x7293, 0xda62, 0x1, 0x1);
        gbc.writeMem(0x6d8d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc5e3, gbc.sp());
        EXPECT(0x6d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 031F
        gbc.setState(0x146b, 0x8550, 0x6530, 0x9379, 0x1ebc, 0x86, 0x0, 0x1);
        gbc.writeMem(0x146b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8550, gbc.sp());
        EXPECT(0x146d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0320
        gbc.setState(0x9ad8, 0x3da9, 0x880, 0x675d, 0x41c0, 0xc10a, 0x0, 0x0);
        gbc.writeMem(0x9ad8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3da9, gbc.sp());
        EXPECT(0x9ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad8));
        EXPECT(0x7d, gbc.readMem(0x9ad9));
        // CB 7D 0321
        gbc.setState(0x2cb9, 0x9ed1, 0x6190, 0x230f, 0x1350, 0x11f3, 0x1, 0x0);
        gbc.writeMem(0x2cb9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9ed1, gbc.sp());
        EXPECT(0x2cbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0322
        gbc.setState(0xa946, 0xee, 0xb520, 0x3b42, 0xf032, 0x2715, 0x0, 0x0);
        gbc.writeMem(0xa946, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xee, gbc.sp());
        EXPECT(0xa948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa946));
        EXPECT(0x7d, gbc.readMem(0xa947));
        // CB 7D 0323
        gbc.setState(0x41f6, 0x486d, 0xa210, 0x342c, 0x15d8, 0xad77, 0x0, 0x1);
        gbc.writeMem(0x41f6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x486d, gbc.sp());
        EXPECT(0x41f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0324
        gbc.setState(0x2f40, 0xcb20, 0x27d0, 0xb428, 0xa947, 0xe894, 0x0, 0x0);
        gbc.writeMem(0x2f40, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcb20, gbc.sp());
        EXPECT(0x2f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0325
        gbc.setState(0x3c8a, 0xe4b0, 0xea90, 0x1a02, 0xb51e, 0xec70, 0x0, 0x1);
        gbc.writeMem(0x3c8a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe4b0, gbc.sp());
        EXPECT(0x3c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0326
        gbc.setState(0x1af0, 0xdd5f, 0x9280, 0xaea0, 0x44e2, 0xe743, 0x1, 0x1);
        gbc.writeMem(0x1af0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdd5f, gbc.sp());
        EXPECT(0x1af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0327
        gbc.setState(0x40f3, 0x1654, 0xf0f0, 0x6eac, 0x9c01, 0x554b, 0x1, 0x0);
        gbc.writeMem(0x40f3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1654, gbc.sp());
        EXPECT(0x40f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0328
        gbc.setState(0xd13c, 0xad13, 0x5380, 0xdee, 0x77ad, 0xd8d8, 0x0, 0x1);
        gbc.writeMem(0xd13c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xad13, gbc.sp());
        EXPECT(0xd13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd13c));
        EXPECT(0x7d, gbc.readMem(0xd13d));
        // CB 7D 0329
        gbc.setState(0x795c, 0x727c, 0xa4e0, 0xb2c3, 0x8cc2, 0xa41e, 0x1, 0x1);
        gbc.writeMem(0x795c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x727c, gbc.sp());
        EXPECT(0x795e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 032A
        gbc.setState(0x1cf5, 0x584a, 0x9250, 0x63bb, 0xe95c, 0x54e3, 0x0, 0x0);
        gbc.writeMem(0x1cf5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x584a, gbc.sp());
        EXPECT(0x1cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 032B
        gbc.setState(0x3758, 0xe2bc, 0x8fc0, 0x6dd3, 0x1cc5, 0xf346, 0x0, 0x0);
        gbc.writeMem(0x3758, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe2bc, gbc.sp());
        EXPECT(0x375a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 032C
        gbc.setState(0xe343, 0x31f, 0x43f0, 0x465f, 0x63de, 0x5401, 0x0, 0x1);
        gbc.writeMem(0xe343, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x31f, gbc.sp());
        EXPECT(0xe345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe343));
        EXPECT(0x7d, gbc.readMem(0xe344));
        // CB 7D 032D
        gbc.setState(0xe2be, 0x3142, 0xb270, 0x242d, 0x903c, 0xcd27, 0x0, 0x0);
        gbc.writeMem(0xe2be, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3142, gbc.sp());
        EXPECT(0xe2c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2be));
        EXPECT(0x7d, gbc.readMem(0xe2bf));
        // CB 7D 032E
        gbc.setState(0x6227, 0x9725, 0xb7b0, 0x1b9d, 0xd461, 0x4e7, 0x1, 0x0);
        gbc.writeMem(0x6227, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9725, gbc.sp());
        EXPECT(0x6229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 032F
        gbc.setState(0xdf6f, 0xe444, 0xbda0, 0x7e56, 0x798d, 0xb3bc, 0x0, 0x1);
        gbc.writeMem(0xdf6f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe444, gbc.sp());
        EXPECT(0xdf71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf6f));
        EXPECT(0x7d, gbc.readMem(0xdf70));
        // CB 7D 0330
        gbc.setState(0x8ce1, 0x48b3, 0xdbc0, 0xa88f, 0x579b, 0x921f, 0x1, 0x1);
        gbc.writeMem(0x8ce1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x48b3, gbc.sp());
        EXPECT(0x8ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce1));
        EXPECT(0x7d, gbc.readMem(0x8ce2));
        // CB 7D 0331
        gbc.setState(0xdafc, 0x23fa, 0x7c00, 0x41b3, 0xd594, 0xac63, 0x0, 0x1);
        gbc.writeMem(0xdafc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x23fa, gbc.sp());
        EXPECT(0xdafe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdafc));
        EXPECT(0x7d, gbc.readMem(0xdafd));
        // CB 7D 0332
        gbc.setState(0x62b5, 0xd4ad, 0x6ca0, 0x103d, 0x7d5f, 0xfc8f, 0x1, 0x1);
        gbc.writeMem(0x62b5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd4ad, gbc.sp());
        EXPECT(0x62b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0333
        gbc.setState(0x3bbf, 0xd0ba, 0xeb30, 0x729e, 0x2ceb, 0xa4aa, 0x0, 0x1);
        gbc.writeMem(0x3bbf, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd0ba, gbc.sp());
        EXPECT(0x3bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0334
        gbc.setState(0xb2f5, 0x39b5, 0x65f0, 0xad83, 0x5987, 0x96af, 0x0, 0x1);
        gbc.writeMem(0xb2f5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x39b5, gbc.sp());
        EXPECT(0xb2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f5));
        EXPECT(0x7d, gbc.readMem(0xb2f6));
        // CB 7D 0336
        gbc.setState(0x6865, 0xa871, 0x1af0, 0x3c1a, 0x30f0, 0x335f, 0x1, 0x0);
        gbc.writeMem(0x6865, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa871, gbc.sp());
        EXPECT(0x6867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0337
        gbc.setState(0xb9f6, 0x52d6, 0x150, 0xed98, 0xbb55, 0x9fbc, 0x1, 0x0);
        gbc.writeMem(0xb9f6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x52d6, gbc.sp());
        EXPECT(0xb9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f6));
        EXPECT(0x7d, gbc.readMem(0xb9f7));
        // CB 7D 0338
        gbc.setState(0xd42c, 0xcfe3, 0x8700, 0xefef, 0xa753, 0x6b05, 0x0, 0x1);
        gbc.writeMem(0xd42c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcfe3, gbc.sp());
        EXPECT(0xd42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd42c));
        EXPECT(0x7d, gbc.readMem(0xd42d));
        // CB 7D 0339
        gbc.setState(0x1d94, 0xcc6a, 0xa3a0, 0x56ef, 0xe490, 0x9664, 0x0, 0x0);
        gbc.writeMem(0x1d94, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcc6a, gbc.sp());
        EXPECT(0x1d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 033A
        gbc.setState(0xd066, 0x2e85, 0x46f0, 0x72ef, 0xd8ab, 0x8209, 0x1, 0x1);
        gbc.writeMem(0xd066, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2e85, gbc.sp());
        EXPECT(0xd068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd066));
        EXPECT(0x7d, gbc.readMem(0xd067));
        // CB 7D 033B
        gbc.setState(0x6233, 0xdfc1, 0x4a10, 0x3c5f, 0x662c, 0xdb4a, 0x1, 0x0);
        gbc.writeMem(0x6233, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdfc1, gbc.sp());
        EXPECT(0x6235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 033C
        gbc.setState(0x5a00, 0x426d, 0x4ea0, 0x3af5, 0xa037, 0xad7a, 0x1, 0x1);
        gbc.writeMem(0x5a00, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x426d, gbc.sp());
        EXPECT(0x5a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 033D
        gbc.setState(0x60d3, 0x25b, 0x63b0, 0xee8c, 0xf5fa, 0x8135, 0x1, 0x1);
        gbc.writeMem(0x60d3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x25b, gbc.sp());
        EXPECT(0x60d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 033E
        gbc.setState(0x10df, 0x76d7, 0xa040, 0xd5ec, 0x6631, 0x56ec, 0x0, 0x0);
        gbc.writeMem(0x10df, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x76d7, gbc.sp());
        EXPECT(0x10e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 033F
        gbc.setState(0xad6f, 0x8fe4, 0xbf10, 0xc0db, 0xac67, 0x3a02, 0x0, 0x0);
        gbc.writeMem(0xad6f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8fe4, gbc.sp());
        EXPECT(0xad71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad6f));
        EXPECT(0x7d, gbc.readMem(0xad70));
        // CB 7D 0340
        gbc.setState(0x1aca, 0x47bc, 0x2f80, 0x24dd, 0xb19e, 0x42f4, 0x0, 0x1);
        gbc.writeMem(0x1aca, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x47bc, gbc.sp());
        EXPECT(0x1acc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0341
        gbc.setState(0x5731, 0xfa25, 0xdce0, 0x942, 0x539f, 0xf9ce, 0x0, 0x1);
        gbc.writeMem(0x5731, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfa25, gbc.sp());
        EXPECT(0x5733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0342
        gbc.setState(0x19b4, 0x76f1, 0x8a30, 0x5a08, 0xf395, 0x7b6e, 0x0, 0x1);
        gbc.writeMem(0x19b4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x76f1, gbc.sp());
        EXPECT(0x19b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0343
        gbc.setState(0x3d82, 0xb79, 0xe020, 0x8f50, 0xe9fb, 0x5baf, 0x0, 0x1);
        gbc.writeMem(0x3d82, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb79, gbc.sp());
        EXPECT(0x3d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0344
        gbc.setState(0x13ee, 0x4f91, 0x1d0, 0xec0e, 0x9825, 0x9594, 0x0, 0x0);
        gbc.writeMem(0x13ee, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4f91, gbc.sp());
        EXPECT(0x13f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0345
        gbc.setState(0x8005, 0x7d21, 0x3b30, 0x6233, 0x82cc, 0xd90e, 0x0, 0x0);
        gbc.writeMem(0x8005, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7d21, gbc.sp());
        EXPECT(0x8007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8005));
        EXPECT(0x7d, gbc.readMem(0x8006));
        // CB 7D 0346
        gbc.setState(0x5d37, 0x837, 0xa4b0, 0x6768, 0xf251, 0x61f0, 0x0, 0x0);
        gbc.writeMem(0x5d37, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x837, gbc.sp());
        EXPECT(0x5d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0347
        gbc.setState(0xb823, 0x85c2, 0x1fa0, 0xc443, 0xfcce, 0xbbf9, 0x0, 0x0);
        gbc.writeMem(0xb823, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x85c2, gbc.sp());
        EXPECT(0xb825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb823));
        EXPECT(0x7d, gbc.readMem(0xb824));
        // CB 7D 0348
        gbc.setState(0x7de1, 0xf920, 0xcc60, 0x630d, 0xc348, 0x2679, 0x0, 0x0);
        gbc.writeMem(0x7de1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf920, gbc.sp());
        EXPECT(0x7de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 034A
        gbc.setState(0xe5c2, 0x49fa, 0x10f0, 0xdede, 0xe07e, 0xb73e, 0x0, 0x1);
        gbc.writeMem(0xe5c2, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x49fa, gbc.sp());
        EXPECT(0xe5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c2));
        EXPECT(0x7d, gbc.readMem(0xe5c3));
        // CB 7D 034B
        gbc.setState(0x41b9, 0xee7c, 0xcf0, 0x3c07, 0x70e, 0xf5dd, 0x0, 0x1);
        gbc.writeMem(0x41b9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xee7c, gbc.sp());
        EXPECT(0x41bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 034C
        gbc.setState(0x9b8f, 0xd19b, 0xb740, 0xa4f6, 0x64c0, 0xf8fc, 0x0, 0x1);
        gbc.writeMem(0x9b8f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd19b, gbc.sp());
        EXPECT(0x9b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8f));
        EXPECT(0x7d, gbc.readMem(0x9b90));
        // CB 7D 034D
        gbc.setState(0xd595, 0xef1f, 0x3fa0, 0x9947, 0x860e, 0x14be, 0x0, 0x1);
        gbc.writeMem(0xd595, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xef1f, gbc.sp());
        EXPECT(0xd597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd595));
        EXPECT(0x7d, gbc.readMem(0xd596));
        // CB 7D 034E
        gbc.setState(0xa0fe, 0x4a87, 0xc310, 0x15e3, 0x6a2d, 0x7d0a, 0x0, 0x1);
        gbc.writeMem(0xa0fe, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4a87, gbc.sp());
        EXPECT(0xa100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0fe));
        EXPECT(0x7d, gbc.readMem(0xa0ff));
        // CB 7D 0350
        gbc.setState(0x4891, 0xd805, 0xbf70, 0xb8b8, 0x36eb, 0x84b2, 0x1, 0x1);
        gbc.writeMem(0x4891, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd805, gbc.sp());
        EXPECT(0x4893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0351
        gbc.setState(0xe74a, 0xcf46, 0x1650, 0xe2c0, 0x6613, 0x71f4, 0x1, 0x0);
        gbc.writeMem(0xe74a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcf46, gbc.sp());
        EXPECT(0xe74c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74a));
        EXPECT(0x7d, gbc.readMem(0xe74b));
        // CB 7D 0352
        gbc.setState(0x99aa, 0x8de4, 0xe570, 0x63cc, 0x15bf, 0xe142, 0x0, 0x1);
        gbc.writeMem(0x99aa, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8de4, gbc.sp());
        EXPECT(0x99ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99aa));
        EXPECT(0x7d, gbc.readMem(0x99ab));
        // CB 7D 0353
        gbc.setState(0x7b0e, 0x1874, 0x300, 0x78ae, 0x7380, 0xf78b, 0x1, 0x0);
        gbc.writeMem(0x7b0e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1874, gbc.sp());
        EXPECT(0x7b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0354
        gbc.setState(0x4269, 0xe9cc, 0xbcf0, 0x4d58, 0x367d, 0xa80f, 0x1, 0x0);
        gbc.writeMem(0x4269, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe9cc, gbc.sp());
        EXPECT(0x426b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0355
        gbc.setState(0x62fa, 0xbadb, 0x7860, 0x8998, 0xdcff, 0xf1cc, 0x0, 0x0);
        gbc.writeMem(0x62fa, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbadb, gbc.sp());
        EXPECT(0x62fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0356
        gbc.setState(0x30f5, 0xe6e7, 0xe4e0, 0x1020, 0x175d, 0x7665, 0x0, 0x1);
        gbc.writeMem(0x30f5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe6e7, gbc.sp());
        EXPECT(0x30f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0357
        gbc.setState(0x9bda, 0xbd54, 0xef90, 0x4d45, 0x9c9c, 0x7358, 0x1, 0x0);
        gbc.writeMem(0x9bda, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbd54, gbc.sp());
        EXPECT(0x9bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bda));
        EXPECT(0x7d, gbc.readMem(0x9bdb));
        // CB 7D 0358
        gbc.setState(0xa13e, 0x9e88, 0x45f0, 0xa4a9, 0xfe93, 0x6698, 0x1, 0x0);
        gbc.writeMem(0xa13e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9e88, gbc.sp());
        EXPECT(0xa140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13e));
        EXPECT(0x7d, gbc.readMem(0xa13f));
        // CB 7D 0359
        gbc.setState(0x298, 0xd61c, 0xc730, 0xea67, 0x2d79, 0x7230, 0x1, 0x1);
        gbc.writeMem(0x298, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd61c, gbc.sp());
        EXPECT(0x29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 035A
        gbc.setState(0x469e, 0x353a, 0x1cd0, 0x428b, 0xafd2, 0x7349, 0x1, 0x0);
        gbc.writeMem(0x469e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x353a, gbc.sp());
        EXPECT(0x46a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 035B
        gbc.setState(0xa486, 0xf60e, 0x5190, 0xd76, 0x3b8d, 0xc4eb, 0x1, 0x0);
        gbc.writeMem(0xa486, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf60e, gbc.sp());
        EXPECT(0xa488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa486));
        EXPECT(0x7d, gbc.readMem(0xa487));
        // CB 7D 035C
        gbc.setState(0x31ba, 0x717c, 0x4440, 0xa3e0, 0xef09, 0xae98, 0x1, 0x0);
        gbc.writeMem(0x31ba, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x717c, gbc.sp());
        EXPECT(0x31bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 035D
        gbc.setState(0x62c4, 0xb1af, 0x1620, 0xee20, 0x561f, 0xec7f, 0x0, 0x1);
        gbc.writeMem(0x62c4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb1af, gbc.sp());
        EXPECT(0x62c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 035E
        gbc.setState(0x10ef, 0x26db, 0xeef0, 0x657, 0xd085, 0x439b, 0x0, 0x0);
        gbc.writeMem(0x10ef, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x26db, gbc.sp());
        EXPECT(0x10f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 035F
        gbc.setState(0x3b90, 0x2de, 0xd270, 0x800f, 0x8315, 0xdc1, 0x1, 0x1);
        gbc.writeMem(0x3b90, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2de, gbc.sp());
        EXPECT(0x3b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0360
        gbc.setState(0xcd1d, 0x19c1, 0x2e0, 0x4e5f, 0x87bf, 0xfd6b, 0x1, 0x0);
        gbc.writeMem(0xcd1d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x19c1, gbc.sp());
        EXPECT(0xcd1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd1d));
        EXPECT(0x7d, gbc.readMem(0xcd1e));
        // CB 7D 0361
        gbc.setState(0xbd37, 0x48a3, 0x3d40, 0x3f9c, 0x8835, 0xcd5, 0x0, 0x0);
        gbc.writeMem(0xbd37, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x48a3, gbc.sp());
        EXPECT(0xbd39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd37));
        EXPECT(0x7d, gbc.readMem(0xbd38));
        // CB 7D 0362
        gbc.setState(0x9d2d, 0x9eda, 0x7190, 0x7b24, 0xd494, 0x7c36, 0x0, 0x0);
        gbc.writeMem(0x9d2d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9eda, gbc.sp());
        EXPECT(0x9d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2d));
        EXPECT(0x7d, gbc.readMem(0x9d2e));
        // CB 7D 0363
        gbc.setState(0x2488, 0x9e, 0xef90, 0xa96e, 0x16f9, 0xd20, 0x1, 0x0);
        gbc.writeMem(0x2488, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9e, gbc.sp());
        EXPECT(0x248a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0364
        gbc.setState(0x5007, 0xbd10, 0x6900, 0x9080, 0x72bd, 0x725c, 0x1, 0x0);
        gbc.writeMem(0x5007, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbd10, gbc.sp());
        EXPECT(0x5009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0365
        gbc.setState(0x8ac8, 0x105d, 0xc570, 0x7de5, 0x6c99, 0xb34f, 0x0, 0x1);
        gbc.writeMem(0x8ac8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x105d, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac8));
        EXPECT(0x7d, gbc.readMem(0x8ac9));
        // CB 7D 0366
        gbc.setState(0x7639, 0x9e7d, 0x97c0, 0x2dda, 0x98f7, 0x805b, 0x1, 0x0);
        gbc.writeMem(0x7639, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9e7d, gbc.sp());
        EXPECT(0x763b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0367
        gbc.setState(0x406e, 0x5396, 0x5d20, 0x70ff, 0xd822, 0xc0fb, 0x1, 0x0);
        gbc.writeMem(0x406e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5396, gbc.sp());
        EXPECT(0x4070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0368
        gbc.setState(0xbe4b, 0xc3a8, 0x4e60, 0x19a7, 0x2599, 0x6124, 0x0, 0x1);
        gbc.writeMem(0xbe4b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc3a8, gbc.sp());
        EXPECT(0xbe4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4b));
        EXPECT(0x7d, gbc.readMem(0xbe4c));
        // CB 7D 0369
        gbc.setState(0xee1a, 0x474c, 0xb120, 0x841f, 0x2930, 0xbaa5, 0x1, 0x1);
        gbc.writeMem(0xee1a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x474c, gbc.sp());
        EXPECT(0xee1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee1a));
        EXPECT(0x7d, gbc.readMem(0xee1b));
        // CB 7D 036A
        gbc.setState(0xce7e, 0xf198, 0x39f0, 0xc328, 0x20db, 0x12f7, 0x1, 0x1);
        gbc.writeMem(0xce7e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf198, gbc.sp());
        EXPECT(0xce80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce7e));
        EXPECT(0x7d, gbc.readMem(0xce7f));
        // CB 7D 036B
        gbc.setState(0x7e5a, 0x4566, 0x2a40, 0x81eb, 0xcdb9, 0x835e, 0x1, 0x1);
        gbc.writeMem(0x7e5a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4566, gbc.sp());
        EXPECT(0x7e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 036C
        gbc.setState(0x50f, 0x2f16, 0xc840, 0xf3d, 0x9b51, 0x850, 0x0, 0x1);
        gbc.writeMem(0x50f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2f16, gbc.sp());
        EXPECT(0x511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 036D
        gbc.setState(0xd040, 0x4148, 0x4b60, 0x3af1, 0xaaf7, 0xd934, 0x0, 0x1);
        gbc.writeMem(0xd040, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4148, gbc.sp());
        EXPECT(0xd042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd040));
        EXPECT(0x7d, gbc.readMem(0xd041));
        // CB 7D 036E
        gbc.setState(0x1f10, 0x1221, 0x7a80, 0x7c52, 0x2cb3, 0xbf67, 0x0, 0x1);
        gbc.writeMem(0x1f10, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1221, gbc.sp());
        EXPECT(0x1f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 036F
        gbc.setState(0xa158, 0x97, 0x8510, 0x64ce, 0x5e40, 0xe037, 0x1, 0x0);
        gbc.writeMem(0xa158, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x97, gbc.sp());
        EXPECT(0xa15a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa158));
        EXPECT(0x7d, gbc.readMem(0xa159));
        // CB 7D 0370
        gbc.setState(0xb72d, 0x600d, 0xb750, 0xc7b8, 0x1e30, 0x9f77, 0x1, 0x1);
        gbc.writeMem(0xb72d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x600d, gbc.sp());
        EXPECT(0xb72f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72d));
        EXPECT(0x7d, gbc.readMem(0xb72e));
        // CB 7D 0371
        gbc.setState(0x12db, 0xfa45, 0x60b0, 0xff, 0x58af, 0xe56f, 0x1, 0x1);
        gbc.writeMem(0x12db, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfa45, gbc.sp());
        EXPECT(0x12dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0372
        gbc.setState(0x3d96, 0x7a02, 0x3b70, 0x11d1, 0x42d3, 0xf049, 0x1, 0x1);
        gbc.writeMem(0x3d96, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7a02, gbc.sp());
        EXPECT(0x3d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0373
        gbc.setState(0x5663, 0x98f4, 0xea20, 0x2f97, 0xce85, 0x9fa4, 0x1, 0x1);
        gbc.writeMem(0x5663, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x98f4, gbc.sp());
        EXPECT(0x5665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0374
        gbc.setState(0x5360, 0xbc68, 0xf2d0, 0xcb2c, 0x9b56, 0x8e12, 0x1, 0x1);
        gbc.writeMem(0x5360, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbc68, gbc.sp());
        EXPECT(0x5362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0375
        gbc.setState(0xccb8, 0x7e0b, 0x3700, 0x5cd0, 0x8041, 0xc915, 0x1, 0x1);
        gbc.writeMem(0xccb8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7e0b, gbc.sp());
        EXPECT(0xccba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb8));
        EXPECT(0x7d, gbc.readMem(0xccb9));
        // CB 7D 0376
        gbc.setState(0x7bb0, 0x56bc, 0xbb80, 0x82f7, 0x97c6, 0xcb71, 0x0, 0x0);
        gbc.writeMem(0x7bb0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x56bc, gbc.sp());
        EXPECT(0x7bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0377
        gbc.setState(0x2427, 0xff8f, 0xb740, 0x8f51, 0x3e1e, 0x6b1c, 0x1, 0x0);
        gbc.writeMem(0x2427, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xff8f, gbc.sp());
        EXPECT(0x2429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0378
        gbc.setState(0xcf31, 0x342f, 0xd030, 0xe9fa, 0x8469, 0x279, 0x1, 0x1);
        gbc.writeMem(0xcf31, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x342f, gbc.sp());
        EXPECT(0xcf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf31));
        EXPECT(0x7d, gbc.readMem(0xcf32));
        // CB 7D 0379
        gbc.setState(0x146, 0xf9c6, 0x6610, 0xcc34, 0xb561, 0xdc6d, 0x0, 0x1);
        gbc.writeMem(0x146, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf9c6, gbc.sp());
        EXPECT(0x148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 037A
        gbc.setState(0x62d0, 0xc7eb, 0x9340, 0xf8bf, 0xef2d, 0x2385, 0x0, 0x0);
        gbc.writeMem(0x62d0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc7eb, gbc.sp());
        EXPECT(0x62d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 037B
        gbc.setState(0x42b1, 0xeda0, 0xa50, 0xa278, 0x6a88, 0x4fbd, 0x0, 0x0);
        gbc.writeMem(0x42b1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xeda0, gbc.sp());
        EXPECT(0x42b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 037C
        gbc.setState(0x33f5, 0x53de, 0xcd30, 0xa3e1, 0xc9f4, 0x8156, 0x0, 0x0);
        gbc.writeMem(0x33f5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x53de, gbc.sp());
        EXPECT(0x33f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 037D
        gbc.setState(0xd3ba, 0x813a, 0x69f0, 0xa396, 0xdf38, 0xe2b1, 0x1, 0x1);
        gbc.writeMem(0xd3ba, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x813a, gbc.sp());
        EXPECT(0xd3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ba));
        EXPECT(0x7d, gbc.readMem(0xd3bb));
        // CB 7D 037E
        gbc.setState(0xa31e, 0xe0d3, 0xd220, 0xa89, 0x3d75, 0x3441, 0x0, 0x1);
        gbc.writeMem(0xa31e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe0d3, gbc.sp());
        EXPECT(0xa320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31e));
        EXPECT(0x7d, gbc.readMem(0xa31f));
        // CB 7D 037F
        gbc.setState(0xd4c1, 0x1dc6, 0x40b0, 0x6cfc, 0xcd1e, 0x8168, 0x0, 0x1);
        gbc.writeMem(0xd4c1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1dc6, gbc.sp());
        EXPECT(0xd4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c1));
        EXPECT(0x7d, gbc.readMem(0xd4c2));
        // CB 7D 0381
        gbc.setState(0xdd09, 0x3a29, 0xd820, 0x5194, 0xea86, 0xa22e, 0x0, 0x0);
        gbc.writeMem(0xdd09, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3a29, gbc.sp());
        EXPECT(0xdd0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd09));
        EXPECT(0x7d, gbc.readMem(0xdd0a));
        // CB 7D 0382
        gbc.setState(0x65db, 0xa420, 0xdb20, 0xe6dc, 0xdf0, 0x9ae6, 0x1, 0x0);
        gbc.writeMem(0x65db, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa420, gbc.sp());
        EXPECT(0x65dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0383
        gbc.setState(0x3327, 0x1d8e, 0x5cc0, 0x90bd, 0x5d66, 0x7053, 0x0, 0x0);
        gbc.writeMem(0x3327, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1d8e, gbc.sp());
        EXPECT(0x3329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0385
        gbc.setState(0x8428, 0x744d, 0x9540, 0x2f68, 0xb685, 0xa4, 0x1, 0x0);
        gbc.writeMem(0x8428, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x744d, gbc.sp());
        EXPECT(0x842a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8428));
        EXPECT(0x7d, gbc.readMem(0x8429));
        // CB 7D 0386
        gbc.setState(0xd5e8, 0xfb9a, 0x0, 0x72ae, 0xb26, 0xe860, 0x0, 0x1);
        gbc.writeMem(0xd5e8, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfb9a, gbc.sp());
        EXPECT(0xd5ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e8));
        EXPECT(0x7d, gbc.readMem(0xd5e9));
        // CB 7D 0387
        gbc.setState(0x764e, 0xdeac, 0xc8b0, 0xe83b, 0xa09a, 0xdf19, 0x1, 0x0);
        gbc.writeMem(0x764e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdeac, gbc.sp());
        EXPECT(0x7650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0388
        gbc.setState(0xaf73, 0x6acd, 0x8cf0, 0x44ef, 0x5142, 0xdd50, 0x1, 0x1);
        gbc.writeMem(0xaf73, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6acd, gbc.sp());
        EXPECT(0xaf75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf73));
        EXPECT(0x7d, gbc.readMem(0xaf74));
        // CB 7D 0389
        gbc.setState(0x61a6, 0xc872, 0xd140, 0x1bcc, 0xb504, 0x9053, 0x1, 0x0);
        gbc.writeMem(0x61a6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc872, gbc.sp());
        EXPECT(0x61a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 038A
        gbc.setState(0x14b9, 0x36f2, 0x8e20, 0xd81e, 0xdf72, 0x85c8, 0x1, 0x0);
        gbc.writeMem(0x14b9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x36f2, gbc.sp());
        EXPECT(0x14bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 038B
        gbc.setState(0x4038, 0xa1ab, 0xfec0, 0xe44f, 0x1147, 0x7b, 0x0, 0x0);
        gbc.writeMem(0x4038, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa1ab, gbc.sp());
        EXPECT(0x403a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 038C
        gbc.setState(0x7c3e, 0x192c, 0xd070, 0x58bd, 0x30c9, 0x536b, 0x0, 0x1);
        gbc.writeMem(0x7c3e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x192c, gbc.sp());
        EXPECT(0x7c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 038D
        gbc.setState(0xb902, 0x2129, 0xa170, 0x813c, 0xcaf5, 0xf92f, 0x0, 0x1);
        gbc.writeMem(0xb902, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2129, gbc.sp());
        EXPECT(0xb904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb902));
        EXPECT(0x7d, gbc.readMem(0xb903));
        // CB 7D 038E
        gbc.setState(0xcff7, 0x3098, 0xbf00, 0x8cda, 0x4233, 0xe10a, 0x1, 0x0);
        gbc.writeMem(0xcff7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3098, gbc.sp());
        EXPECT(0xcff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff7));
        EXPECT(0x7d, gbc.readMem(0xcff8));
        // CB 7D 038F
        gbc.setState(0x820b, 0x4f5e, 0xdb40, 0xb9f0, 0xd7fe, 0x2041, 0x0, 0x0);
        gbc.writeMem(0x820b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4f5e, gbc.sp());
        EXPECT(0x820d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x820b));
        EXPECT(0x7d, gbc.readMem(0x820c));
        // CB 7D 0390
        gbc.setState(0x5b6d, 0xcc52, 0xbca0, 0x89a3, 0x9a5d, 0x3f1d, 0x0, 0x1);
        gbc.writeMem(0x5b6d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcc52, gbc.sp());
        EXPECT(0x5b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0392
        gbc.setState(0x1447, 0xb424, 0x7cd0, 0xaa24, 0x484c, 0x5378, 0x0, 0x1);
        gbc.writeMem(0x1447, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb424, gbc.sp());
        EXPECT(0x1449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0393
        gbc.setState(0x67a0, 0x6d4a, 0xd160, 0x3a9d, 0x3159, 0x728c, 0x1, 0x1);
        gbc.writeMem(0x67a0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6d4a, gbc.sp());
        EXPECT(0x67a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0394
        gbc.setState(0x6305, 0x78f2, 0xd130, 0xb602, 0x506a, 0x4e96, 0x0, 0x0);
        gbc.writeMem(0x6305, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x78f2, gbc.sp());
        EXPECT(0x6307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0395
        gbc.setState(0x10a3, 0xac9d, 0x2dd0, 0x2766, 0x6588, 0x53b, 0x1, 0x0);
        gbc.writeMem(0x10a3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xac9d, gbc.sp());
        EXPECT(0x10a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0396
        gbc.setState(0x118e, 0x1c74, 0x7120, 0xbb35, 0x4dc2, 0xc247, 0x0, 0x0);
        gbc.writeMem(0x118e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1c74, gbc.sp());
        EXPECT(0x1190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 0397
        gbc.setState(0x9a64, 0xa296, 0x2d70, 0x246f, 0xc4f1, 0x3992, 0x0, 0x1);
        gbc.writeMem(0x9a64, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa296, gbc.sp());
        EXPECT(0x9a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a64));
        EXPECT(0x7d, gbc.readMem(0x9a65));
        // CB 7D 0398
        gbc.setState(0x7662, 0xec9b, 0xb590, 0xf043, 0xf49a, 0x3f48, 0x1, 0x0);
        gbc.writeMem(0x7662, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xec9b, gbc.sp());
        EXPECT(0x7664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 0399
        gbc.setState(0x3414, 0x469e, 0xbce0, 0x4ead, 0x9ac4, 0xfd24, 0x1, 0x0);
        gbc.writeMem(0x3414, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x469e, gbc.sp());
        EXPECT(0x3416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 039A
        gbc.setState(0x3b, 0x88be, 0x2520, 0x72c5, 0x81b4, 0x3620, 0x0, 0x1);
        gbc.writeMem(0x3b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x88be, gbc.sp());
        EXPECT(0x3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 039B
        gbc.setState(0x15e9, 0xad61, 0x9b40, 0x6082, 0xdde9, 0x1d2b, 0x0, 0x1);
        gbc.writeMem(0x15e9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xad61, gbc.sp());
        EXPECT(0x15eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 039C
        gbc.setState(0xbb0, 0xcc13, 0xf340, 0x72ec, 0x7637, 0xcc32, 0x1, 0x0);
        gbc.writeMem(0xbb0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcc13, gbc.sp());
        EXPECT(0xbb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 039D
        gbc.setState(0x3cf4, 0xc989, 0x2c60, 0xe981, 0x1f0d, 0xd033, 0x1, 0x1);
        gbc.writeMem(0x3cf4, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc989, gbc.sp());
        EXPECT(0x3cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 039E
        gbc.setState(0x530e, 0xe068, 0x4490, 0x962a, 0xcf22, 0xa51a, 0x1, 0x0);
        gbc.writeMem(0x530e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe068, gbc.sp());
        EXPECT(0x5310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 039F
        gbc.setState(0x7226, 0x438d, 0x82e0, 0x403b, 0xf77f, 0x3fc4, 0x0, 0x1);
        gbc.writeMem(0x7226, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x438d, gbc.sp());
        EXPECT(0x7228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03A0
        gbc.setState(0x6813, 0x1f87, 0x7390, 0x251a, 0x1e6d, 0xb5d0, 0x1, 0x1);
        gbc.writeMem(0x6813, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1f87, gbc.sp());
        EXPECT(0x6815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03A1
        gbc.setState(0xaf92, 0x7d3c, 0xe120, 0xe055, 0x8e8a, 0x92a5, 0x1, 0x0);
        gbc.writeMem(0xaf92, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7d3c, gbc.sp());
        EXPECT(0xaf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf92));
        EXPECT(0x7d, gbc.readMem(0xaf93));
        // CB 7D 03A2
        gbc.setState(0x27f6, 0xba68, 0xf8a0, 0x1251, 0xe2c0, 0xdaaf, 0x1, 0x1);
        gbc.writeMem(0x27f6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xba68, gbc.sp());
        EXPECT(0x27f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03A3
        gbc.setState(0xc38, 0x6492, 0x43a0, 0xce6, 0x234a, 0x396, 0x1, 0x0);
        gbc.writeMem(0xc38, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6492, gbc.sp());
        EXPECT(0xc3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03A4
        gbc.setState(0x7c7a, 0xd1a1, 0x8470, 0x1185, 0x9a12, 0xfcf5, 0x1, 0x0);
        gbc.writeMem(0x7c7a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd1a1, gbc.sp());
        EXPECT(0x7c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03A5
        gbc.setState(0x7f39, 0x16bb, 0x6700, 0x6279, 0x29ee, 0x5ef1, 0x1, 0x0);
        gbc.writeMem(0x7f39, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x16bb, gbc.sp());
        EXPECT(0x7f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03A6
        gbc.setState(0x5e71, 0x20e5, 0xf4f0, 0xde8a, 0xe3d5, 0x6886, 0x0, 0x1);
        gbc.writeMem(0x5e71, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x20e5, gbc.sp());
        EXPECT(0x5e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03A7
        gbc.setState(0x8111, 0xfa40, 0x6680, 0xd675, 0x82a9, 0xdd09, 0x0, 0x0);
        gbc.writeMem(0x8111, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfa40, gbc.sp());
        EXPECT(0x8113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8111));
        EXPECT(0x7d, gbc.readMem(0x8112));
        // CB 7D 03A8
        gbc.setState(0x9fdb, 0x7c34, 0x4510, 0x2ade, 0xb582, 0xdbba, 0x0, 0x1);
        gbc.writeMem(0x9fdb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7c34, gbc.sp());
        EXPECT(0x9fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fdb));
        EXPECT(0x7d, gbc.readMem(0x9fdc));
        // CB 7D 03A9
        gbc.setState(0x2b2b, 0x47cf, 0xa0c0, 0xbbe2, 0x15c7, 0xd888, 0x0, 0x0);
        gbc.writeMem(0x2b2b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x47cf, gbc.sp());
        EXPECT(0x2b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03AA
        gbc.setState(0xde88, 0xf90c, 0x6060, 0xbb4c, 0x2657, 0x7a8f, 0x1, 0x1);
        gbc.writeMem(0xde88, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf90c, gbc.sp());
        EXPECT(0xde8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde88));
        EXPECT(0x7d, gbc.readMem(0xde89));
        // CB 7D 03AB
        gbc.setState(0xa313, 0xba05, 0x3920, 0xb2b9, 0x913f, 0xfad0, 0x0, 0x1);
        gbc.writeMem(0xa313, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xba05, gbc.sp());
        EXPECT(0xa315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa313));
        EXPECT(0x7d, gbc.readMem(0xa314));
        // CB 7D 03AC
        gbc.setState(0xed56, 0x4d71, 0x4b0, 0x2871, 0xf2f1, 0x4df9, 0x1, 0x0);
        gbc.writeMem(0xed56, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4d71, gbc.sp());
        EXPECT(0xed58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed56));
        EXPECT(0x7d, gbc.readMem(0xed57));
        // CB 7D 03AD
        gbc.setState(0x1074, 0x404b, 0xd170, 0x4e78, 0xead1, 0xf8b8, 0x1, 0x0);
        gbc.writeMem(0x1074, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x404b, gbc.sp());
        EXPECT(0x1076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03AE
        gbc.setState(0x55c7, 0xdd0, 0xeb10, 0xa57, 0x146e, 0x6469, 0x1, 0x0);
        gbc.writeMem(0x55c7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdd0, gbc.sp());
        EXPECT(0x55c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03AF
        gbc.setState(0xc0dc, 0x148f, 0xf7b0, 0xd7ba, 0x12c6, 0x4514, 0x0, 0x1);
        gbc.writeMem(0xc0dc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x148f, gbc.sp());
        EXPECT(0xc0de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0dc));
        EXPECT(0x7d, gbc.readMem(0xc0dd));
        // CB 7D 03B0
        gbc.setState(0x3bd6, 0xe772, 0xaaf0, 0xbba1, 0xb4e6, 0xbd4c, 0x1, 0x1);
        gbc.writeMem(0x3bd6, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe772, gbc.sp());
        EXPECT(0x3bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03B1
        gbc.setState(0x5ef7, 0x5b95, 0x79e0, 0x99ad, 0x463e, 0xf6ce, 0x0, 0x1);
        gbc.writeMem(0x5ef7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5b95, gbc.sp());
        EXPECT(0x5ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03B2
        gbc.setState(0xc551, 0xa446, 0x1590, 0xf6b7, 0xa9d3, 0xaec5, 0x0, 0x1);
        gbc.writeMem(0xc551, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa446, gbc.sp());
        EXPECT(0xc553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc551));
        EXPECT(0x7d, gbc.readMem(0xc552));
        // CB 7D 03B3
        gbc.setState(0x3196, 0x849d, 0x26e0, 0x7170, 0x8b30, 0x9b06, 0x1, 0x1);
        gbc.writeMem(0x3196, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x849d, gbc.sp());
        EXPECT(0x3198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03B4
        gbc.setState(0xafb, 0x2b1d, 0x51d0, 0x5456, 0xe8e8, 0x5dd1, 0x1, 0x1);
        gbc.writeMem(0xafb, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2b1d, gbc.sp());
        EXPECT(0xafd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03B5
        gbc.setState(0x1570, 0x71e4, 0x9e0, 0x925f, 0x245d, 0x69bd, 0x1, 0x0);
        gbc.writeMem(0x1570, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x71e4, gbc.sp());
        EXPECT(0x1572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03B6
        gbc.setState(0x2e06, 0x7190, 0xb7f0, 0x1dd9, 0xecc8, 0xbf7f, 0x1, 0x1);
        gbc.writeMem(0x2e06, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7190, gbc.sp());
        EXPECT(0x2e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03B7
        gbc.setState(0x86b3, 0x183c, 0x4c70, 0x8662, 0xa079, 0xf3ba, 0x1, 0x0);
        gbc.writeMem(0x86b3, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x183c, gbc.sp());
        EXPECT(0x86b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b3));
        EXPECT(0x7d, gbc.readMem(0x86b4));
        // CB 7D 03B8
        gbc.setState(0xae24, 0xae2b, 0x97c0, 0x6150, 0x379b, 0x2d9, 0x1, 0x1);
        gbc.writeMem(0xae24, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xae2b, gbc.sp());
        EXPECT(0xae26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae24));
        EXPECT(0x7d, gbc.readMem(0xae25));
        // CB 7D 03B9
        gbc.setState(0x737c, 0x1219, 0x4810, 0x81e9, 0xc749, 0xeffc, 0x0, 0x0);
        gbc.writeMem(0x737c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1219, gbc.sp());
        EXPECT(0x737e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03BA
        gbc.setState(0xeb71, 0xf781, 0x15f0, 0x7229, 0xc345, 0x1cb0, 0x0, 0x0);
        gbc.writeMem(0xeb71, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf781, gbc.sp());
        EXPECT(0xeb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb71));
        EXPECT(0x7d, gbc.readMem(0xeb72));
        // CB 7D 03BB
        gbc.setState(0x27a9, 0x27e6, 0x6640, 0x9df9, 0x4e8f, 0x6e09, 0x1, 0x0);
        gbc.writeMem(0x27a9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x27e6, gbc.sp());
        EXPECT(0x27ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03BC
        gbc.setState(0x5206, 0xc2e8, 0x3330, 0x179f, 0x890d, 0xc024, 0x0, 0x0);
        gbc.writeMem(0x5206, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc2e8, gbc.sp());
        EXPECT(0x5208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03BD
        gbc.setState(0xc48, 0x9c1a, 0x3770, 0x6fd6, 0x1eb3, 0xd7b5, 0x0, 0x0);
        gbc.writeMem(0xc48, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9c1a, gbc.sp());
        EXPECT(0xc4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03BE
        gbc.setState(0xe6e9, 0x52f1, 0x8270, 0x53a, 0xbf61, 0xe55f, 0x1, 0x0);
        gbc.writeMem(0xe6e9, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x52f1, gbc.sp());
        EXPECT(0xe6eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e9));
        EXPECT(0x7d, gbc.readMem(0xe6ea));
        // CB 7D 03BF
        gbc.setState(0xd893, 0x2034, 0xa3c0, 0x3bda, 0x9d11, 0x6d55, 0x1, 0x0);
        gbc.writeMem(0xd893, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2034, gbc.sp());
        EXPECT(0xd895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd893));
        EXPECT(0x7d, gbc.readMem(0xd894));
        // CB 7D 03C0
        gbc.setState(0x5d38, 0xf024, 0xba50, 0xec77, 0xeb28, 0x501c, 0x0, 0x1);
        gbc.writeMem(0x5d38, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf024, gbc.sp());
        EXPECT(0x5d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03C1
        gbc.setState(0xe54, 0x48a1, 0x4960, 0xbeb8, 0x9cef, 0x65e2, 0x1, 0x0);
        gbc.writeMem(0xe54, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x48a1, gbc.sp());
        EXPECT(0xe56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03C2
        gbc.setState(0x4343, 0x965f, 0x7030, 0xbde0, 0x50be, 0x1821, 0x1, 0x0);
        gbc.writeMem(0x4343, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x965f, gbc.sp());
        EXPECT(0x4345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03C3
        gbc.setState(0x5f40, 0xaec4, 0xbef0, 0x169b, 0x19b7, 0xfaf6, 0x0, 0x1);
        gbc.writeMem(0x5f40, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xaec4, gbc.sp());
        EXPECT(0x5f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03C4
        gbc.setState(0x253c, 0xd1f2, 0x690, 0xfe9, 0x4143, 0x4380, 0x0, 0x1);
        gbc.writeMem(0x253c, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd1f2, gbc.sp());
        EXPECT(0x253e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03C5
        gbc.setState(0xbd75, 0x3ed9, 0xc320, 0xf339, 0xd91c, 0xca18, 0x0, 0x0);
        gbc.writeMem(0xbd75, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3ed9, gbc.sp());
        EXPECT(0xbd77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd75));
        EXPECT(0x7d, gbc.readMem(0xbd76));
        // CB 7D 03C6
        gbc.setState(0xcdbc, 0x4818, 0xe4d0, 0xdc67, 0x4972, 0xb566, 0x1, 0x0);
        gbc.writeMem(0xcdbc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4818, gbc.sp());
        EXPECT(0xcdbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdbc));
        EXPECT(0x7d, gbc.readMem(0xcdbd));
        // CB 7D 03C7
        gbc.setState(0x2a80, 0xef13, 0xcf50, 0x7f6b, 0x1e36, 0xb424, 0x1, 0x0);
        gbc.writeMem(0x2a80, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xef13, gbc.sp());
        EXPECT(0x2a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03C8
        gbc.setState(0x6549, 0x779d, 0x2530, 0xbc7a, 0x9d7d, 0x5ca3, 0x1, 0x1);
        gbc.writeMem(0x6549, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x779d, gbc.sp());
        EXPECT(0x654b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03C9
        gbc.setState(0xc49f, 0x7303, 0x5ad0, 0xa129, 0x2470, 0x3b45, 0x0, 0x0);
        gbc.writeMem(0xc49f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7303, gbc.sp());
        EXPECT(0xc4a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc49f));
        EXPECT(0x7d, gbc.readMem(0xc4a0));
        // CB 7D 03CA
        gbc.setState(0xc903, 0xc8db, 0x2c20, 0xc19b, 0xab99, 0x2d3e, 0x0, 0x0);
        gbc.writeMem(0xc903, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc8db, gbc.sp());
        EXPECT(0xc905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc903));
        EXPECT(0x7d, gbc.readMem(0xc904));
        // CB 7D 03CB
        gbc.setState(0x6f2b, 0x3122, 0x1d30, 0x56cd, 0x102a, 0xc3ae, 0x0, 0x1);
        gbc.writeMem(0x6f2b, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3122, gbc.sp());
        EXPECT(0x6f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03CC
        gbc.setState(0x88b5, 0x930d, 0xd730, 0x7d21, 0x9d66, 0x6225, 0x0, 0x1);
        gbc.writeMem(0x88b5, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x930d, gbc.sp());
        EXPECT(0x88b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b5));
        EXPECT(0x7d, gbc.readMem(0x88b6));
        // CB 7D 03CD
        gbc.setState(0x39c1, 0x7ec6, 0x6b20, 0x9ed5, 0xe633, 0x7749, 0x0, 0x1);
        gbc.writeMem(0x39c1, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7ec6, gbc.sp());
        EXPECT(0x39c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03CE
        gbc.setState(0x3175, 0x4999, 0xfc90, 0x2fdc, 0x7e99, 0xccbf, 0x1, 0x1);
        gbc.writeMem(0x3175, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4999, gbc.sp());
        EXPECT(0x3177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03D0
        gbc.setState(0xf00, 0x3655, 0x7610, 0x8597, 0x1d4e, 0xc6c, 0x1, 0x1);
        gbc.writeMem(0xf00, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3655, gbc.sp());
        EXPECT(0xf02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03D2
        gbc.setState(0x2d69, 0xb904, 0x2c20, 0x3b6c, 0x976a, 0x67d4, 0x0, 0x0);
        gbc.writeMem(0x2d69, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb904, gbc.sp());
        EXPECT(0x2d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03D3
        gbc.setState(0x1399, 0x77ee, 0xf720, 0xc6fa, 0x2b05, 0x7b90, 0x0, 0x1);
        gbc.writeMem(0x1399, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x77ee, gbc.sp());
        EXPECT(0x139b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03D4
        gbc.setState(0xc53d, 0xbb96, 0xdfa0, 0x5038, 0xa11c, 0x160a, 0x0, 0x0);
        gbc.writeMem(0xc53d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbb96, gbc.sp());
        EXPECT(0xc53f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc53d));
        EXPECT(0x7d, gbc.readMem(0xc53e));
        // CB 7D 03D5
        gbc.setState(0xcb1d, 0x5e06, 0xe280, 0x9e63, 0x5974, 0xf3c9, 0x1, 0x0);
        gbc.writeMem(0xcb1d, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5e06, gbc.sp());
        EXPECT(0xcb1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb1d));
        EXPECT(0x7d, gbc.readMem(0xcb1e));
        // CB 7D 03D6
        gbc.setState(0x464f, 0xed1, 0x2d70, 0x5abd, 0x9e3b, 0x13ff, 0x0, 0x1);
        gbc.writeMem(0x464f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xed1, gbc.sp());
        EXPECT(0x4651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03D7
        gbc.setState(0x5bd7, 0x3936, 0xb050, 0x1fa3, 0xb0b4, 0xc63f, 0x1, 0x0);
        gbc.writeMem(0x5bd7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3936, gbc.sp());
        EXPECT(0x5bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03D8
        gbc.setState(0x70df, 0x11e4, 0x3990, 0x817e, 0x559a, 0x8c74, 0x0, 0x1);
        gbc.writeMem(0x70df, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x11e4, gbc.sp());
        EXPECT(0x70e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03D9
        gbc.setState(0x14dc, 0x8308, 0x4440, 0x2ab, 0x2440, 0x8b0f, 0x0, 0x0);
        gbc.writeMem(0x14dc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8308, gbc.sp());
        EXPECT(0x14de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03DA
        gbc.setState(0x35fc, 0x72cd, 0x3d90, 0x663b, 0x4556, 0xb82a, 0x0, 0x0);
        gbc.writeMem(0x35fc, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x72cd, gbc.sp());
        EXPECT(0x35fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03DB
        gbc.setState(0x3bf7, 0x66f9, 0xab30, 0xfab4, 0xef4a, 0x9226, 0x1, 0x1);
        gbc.writeMem(0x3bf7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x66f9, gbc.sp());
        EXPECT(0x3bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03DC
        gbc.setState(0x33d0, 0xedd0, 0xa3e0, 0x68e5, 0x6017, 0xff7c, 0x1, 0x1);
        gbc.writeMem(0x33d0, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xedd0, gbc.sp());
        EXPECT(0x33d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03DD
        gbc.setState(0x5bd7, 0xf3f3, 0x6610, 0x6322, 0xa8d0, 0x348e, 0x0, 0x0);
        gbc.writeMem(0x5bd7, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf3f3, gbc.sp());
        EXPECT(0x5bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03DE
        gbc.setState(0x8c28, 0xe04a, 0x32a0, 0xf54, 0x6b49, 0x1041, 0x1, 0x0);
        gbc.writeMem(0x8c28, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe04a, gbc.sp());
        EXPECT(0x8c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c28));
        EXPECT(0x7d, gbc.readMem(0x8c29));
        // CB 7D 03DF
        gbc.setState(0x9f17, 0x55f9, 0x2cc0, 0x1b63, 0xcfdf, 0x472, 0x0, 0x1);
        gbc.writeMem(0x9f17, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x55f9, gbc.sp());
        EXPECT(0x9f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f17));
        EXPECT(0x7d, gbc.readMem(0x9f18));
        // CB 7D 03E0
        gbc.setState(0x3188, 0x9142, 0x59c0, 0xd8ab, 0x8a5c, 0x6fb9, 0x0, 0x1);
        gbc.writeMem(0x3188, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9142, gbc.sp());
        EXPECT(0x318a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7D 03E1
        gbc.setState(0x787f, 0xd7b2, 0x86b0, 0x99aa, 0xa55d, 0x3025, 0x1, 0x1);
        gbc.writeMem(0x787f, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd7b2, gbc.sp());
        EXPECT(0x7881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03E2
        gbc.setState(0xeb6e, 0x253d, 0xda00, 0x6b76, 0xbf60, 0x5a14, 0x1, 0x0);
        gbc.writeMem(0xeb6e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x253d, gbc.sp());
        EXPECT(0xeb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6e));
        EXPECT(0x7d, gbc.readMem(0xeb6f));
        // CB 7D 03E4
        gbc.setState(0x568a, 0x3852, 0x2390, 0xa622, 0x35e7, 0xa80a, 0x0, 0x0);
        gbc.writeMem(0x568a, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3852, gbc.sp());
        EXPECT(0x568c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7D 03E5
        gbc.setState(0xc210, 0x31cf, 0x4690, 0x9ddf, 0x5cbf, 0xbcdd, 0x1, 0x1);
        gbc.writeMem(0xc210, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x31cf, gbc.sp());
        EXPECT(0xc212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc210));
        EXPECT(0x7d, gbc.readMem(0xc211));
        // CB 7D 03E6
        gbc.setState(0xa7ff, 0x8f45, 0xb730, 0xd936, 0xc312, 0xdd81, 0x0, 0x0);
        gbc.writeMem(0xa7ff, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8f45, gbc.sp());
        EXPECT(0xa801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ff));
        EXPECT(0x7d, gbc.readMem(0xa800));
        // CB 7D 03E7
        gbc.setState(0x55e, 0xaf40, 0xa590, 0xd459, 0xf612, 0x8748, 0x1, 0x0);
        gbc.writeMem(0x55e, { 0xcb, 0x7d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaf40, gbc.sp());
        EXPECT(0x560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
