    TEST(gbcemu, opcode_cb_09) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 09 0000
        gbc.setState(0x4d31, 0xc2f6, 0xc100, 0x8519, 0xd0c7, 0x9920, 0x1, 0x1);
        gbc.writeMem(0x4d31, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc2f6, gbc.sp());
        EXPECT(0x4d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0001
        gbc.setState(0x6835, 0xd7a0, 0xf7b0, 0x639d, 0x94dd, 0x1bd0, 0x1, 0x1);
        gbc.writeMem(0x6835, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd7a0, gbc.sp());
        EXPECT(0x6837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0002
        gbc.setState(0xb7bf, 0x25cc, 0xb9b0, 0x5104, 0x6bbc, 0xdd9b, 0x0, 0x1);
        gbc.writeMem(0xb7bf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x25cc, gbc.sp());
        EXPECT(0xb7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7bf));
        EXPECT(0x9, gbc.readMem(0xb7c0));
        // CB 09 0003
        gbc.setState(0xe64c, 0xc9b2, 0x4150, 0xdb27, 0x13db, 0x4e96, 0x0, 0x0);
        gbc.writeMem(0xe64c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc9b2, gbc.sp());
        EXPECT(0xe64e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64c));
        EXPECT(0x9, gbc.readMem(0xe64d));
        // CB 09 0004
        gbc.setState(0x81f7, 0x466a, 0x4a90, 0xb82a, 0xc6fb, 0xcd3, 0x0, 0x0);
        gbc.writeMem(0x81f7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x466a, gbc.sp());
        EXPECT(0x81f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f7));
        EXPECT(0x9, gbc.readMem(0x81f8));
        // CB 09 0006
        gbc.setState(0x91fb, 0x355c, 0xbe50, 0x2e65, 0x173f, 0xb120, 0x1, 0x0);
        gbc.writeMem(0x91fb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x355c, gbc.sp());
        EXPECT(0x91fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fb));
        EXPECT(0x9, gbc.readMem(0x91fc));
        // CB 09 0007
        gbc.setState(0x954, 0xe518, 0x1440, 0x7982, 0xdbb0, 0x9186, 0x0, 0x0);
        gbc.writeMem(0x954, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe518, gbc.sp());
        EXPECT(0x956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0008
        gbc.setState(0x2930, 0x2774, 0x4a50, 0x17d4, 0x54d7, 0x93e1, 0x0, 0x1);
        gbc.writeMem(0x2930, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2774, gbc.sp());
        EXPECT(0x2932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0009
        gbc.setState(0x8744, 0x1943, 0xf710, 0x8e53, 0xf827, 0x4575, 0x1, 0x1);
        gbc.writeMem(0x8744, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1943, gbc.sp());
        EXPECT(0x8746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8744));
        EXPECT(0x9, gbc.readMem(0x8745));
        // CB 09 000A
        gbc.setState(0x7c5a, 0x9c9d, 0xeab0, 0xb87e, 0x29a2, 0xf20, 0x0, 0x0);
        gbc.writeMem(0x7c5a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9c9d, gbc.sp());
        EXPECT(0x7c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 000B
        gbc.setState(0xbb27, 0x971e, 0x4450, 0x5004, 0xae65, 0xe145, 0x0, 0x1);
        gbc.writeMem(0xbb27, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x971e, gbc.sp());
        EXPECT(0xbb29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb27));
        EXPECT(0x9, gbc.readMem(0xbb28));
        // CB 09 000C
        gbc.setState(0x5058, 0xc0f4, 0x8670, 0x197a, 0x5fa5, 0xb8a1, 0x0, 0x0);
        gbc.writeMem(0x5058, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc0f4, gbc.sp());
        EXPECT(0x505a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 000E
        gbc.setState(0xda6, 0xf4b, 0xb620, 0xa236, 0x2dce, 0x66ab, 0x1, 0x1);
        gbc.writeMem(0xda6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf4b, gbc.sp());
        EXPECT(0xda8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 000F
        gbc.setState(0xc3bf, 0x3522, 0xa6b0, 0x16f0, 0x63bf, 0x2a28, 0x1, 0x1);
        gbc.writeMem(0xc3bf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3522, gbc.sp());
        EXPECT(0xc3c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3bf));
        EXPECT(0x9, gbc.readMem(0xc3c0));
        // CB 09 0010
        gbc.setState(0x8901, 0x31c0, 0x94a0, 0x31e9, 0xb93a, 0x2f19, 0x0, 0x0);
        gbc.writeMem(0x8901, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x31c0, gbc.sp());
        EXPECT(0x8903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8901));
        EXPECT(0x9, gbc.readMem(0x8902));
        // CB 09 0011
        gbc.setState(0x718d, 0x7bdc, 0x4390, 0xdb4b, 0x30a8, 0x5156, 0x0, 0x0);
        gbc.writeMem(0x718d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7bdc, gbc.sp());
        EXPECT(0x718f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0012
        gbc.setState(0x4d80, 0xf8cc, 0x8e60, 0x5f18, 0x3f86, 0x3f36, 0x1, 0x1);
        gbc.writeMem(0x4d80, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf8cc, gbc.sp());
        EXPECT(0x4d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0013
        gbc.setState(0x9061, 0x27c5, 0x1c70, 0x6633, 0x2612, 0x64cc, 0x1, 0x0);
        gbc.writeMem(0x9061, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x27c5, gbc.sp());
        EXPECT(0x9063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9061));
        EXPECT(0x9, gbc.readMem(0x9062));
        // CB 09 0014
        gbc.setState(0xba52, 0x7891, 0x7030, 0x3cd4, 0x18c, 0x6980, 0x1, 0x0);
        gbc.writeMem(0xba52, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7891, gbc.sp());
        EXPECT(0xba54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba52));
        EXPECT(0x9, gbc.readMem(0xba53));
        // CB 09 0015
        gbc.setState(0x6a16, 0x9292, 0xbb00, 0x9fa1, 0xcc6a, 0xc326, 0x1, 0x1);
        gbc.writeMem(0x6a16, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9292, gbc.sp());
        EXPECT(0x6a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0016
        gbc.setState(0xed84, 0xc6c8, 0xbd20, 0xfa4c, 0xaa86, 0x96a4, 0x0, 0x1);
        gbc.writeMem(0xed84, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc6c8, gbc.sp());
        EXPECT(0xed86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed84));
        EXPECT(0x9, gbc.readMem(0xed85));
        // CB 09 0017
        gbc.setState(0xd56a, 0xf90c, 0x1630, 0x464e, 0x9c18, 0x8cca, 0x0, 0x0);
        gbc.writeMem(0xd56a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf90c, gbc.sp());
        EXPECT(0xd56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd56a));
        EXPECT(0x9, gbc.readMem(0xd56b));
        // CB 09 0018
        gbc.setState(0x16c, 0x7484, 0x8020, 0x71a3, 0xdc37, 0xd2f1, 0x0, 0x0);
        gbc.writeMem(0x16c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7484, gbc.sp());
        EXPECT(0x16e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0019
        gbc.setState(0xb0f5, 0x296c, 0x7b60, 0xfaa3, 0xb791, 0x1804, 0x0, 0x1);
        gbc.writeMem(0xb0f5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x296c, gbc.sp());
        EXPECT(0xb0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f5));
        EXPECT(0x9, gbc.readMem(0xb0f6));
        // CB 09 001A
        gbc.setState(0x27e9, 0x1c01, 0xd2a0, 0xc6c9, 0xd2d7, 0xbc5f, 0x0, 0x0);
        gbc.writeMem(0x27e9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1c01, gbc.sp());
        EXPECT(0x27eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 001B
        gbc.setState(0xeefe, 0x8dcc, 0x6b20, 0xa0b0, 0x1849, 0xc9b9, 0x0, 0x1);
        gbc.writeMem(0xeefe, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8dcc, gbc.sp());
        EXPECT(0xef00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeefe));
        EXPECT(0x9, gbc.readMem(0xeeff));
        // CB 09 001C
        gbc.setState(0x1736, 0xe24, 0xfaf0, 0x39d8, 0x1f2d, 0x5655, 0x0, 0x1);
        gbc.writeMem(0x1736, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe24, gbc.sp());
        EXPECT(0x1738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 001D
        gbc.setState(0x9cea, 0x421e, 0x5490, 0xb6cc, 0xa203, 0xc847, 0x1, 0x1);
        gbc.writeMem(0x9cea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x421e, gbc.sp());
        EXPECT(0x9cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cea));
        EXPECT(0x9, gbc.readMem(0x9ceb));
        // CB 09 001E
        gbc.setState(0xa671, 0x8068, 0x5f80, 0x9a83, 0xc6b0, 0xa7e2, 0x1, 0x1);
        gbc.writeMem(0xa671, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8068, gbc.sp());
        EXPECT(0xa673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa671));
        EXPECT(0x9, gbc.readMem(0xa672));
        // CB 09 001F
        gbc.setState(0x695d, 0x24ed, 0x2d50, 0xadf1, 0xb5c9, 0xe54, 0x0, 0x0);
        gbc.writeMem(0x695d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x24ed, gbc.sp());
        EXPECT(0x695f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0020
        gbc.setState(0x1853, 0x3da1, 0xcab0, 0x2986, 0x845a, 0x8f78, 0x1, 0x0);
        gbc.writeMem(0x1853, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3da1, gbc.sp());
        EXPECT(0x1855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0021
        gbc.setState(0xbd44, 0x4ad1, 0x7f80, 0xc342, 0x9a9d, 0x6555, 0x0, 0x0);
        gbc.writeMem(0xbd44, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4ad1, gbc.sp());
        EXPECT(0xbd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd44));
        EXPECT(0x9, gbc.readMem(0xbd45));
        // CB 09 0023
        gbc.setState(0x2978, 0x2044, 0x4f40, 0x7231, 0x962c, 0x838, 0x1, 0x1);
        gbc.writeMem(0x2978, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2044, gbc.sp());
        EXPECT(0x297a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0024
        gbc.setState(0xcaaf, 0x1c0, 0x1ad0, 0x7812, 0x62f5, 0x83ed, 0x1, 0x1);
        gbc.writeMem(0xcaaf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1c0, gbc.sp());
        EXPECT(0xcab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaaf));
        EXPECT(0x9, gbc.readMem(0xcab0));
        // CB 09 0025
        gbc.setState(0xd62, 0xcf95, 0xb4e0, 0xea6d, 0x39b8, 0xacc, 0x1, 0x1);
        gbc.writeMem(0xd62, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcf95, gbc.sp());
        EXPECT(0xd64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0026
        gbc.setState(0xec6e, 0xd030, 0x7130, 0xaa43, 0xfb39, 0xe6fa, 0x0, 0x1);
        gbc.writeMem(0xec6e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd030, gbc.sp());
        EXPECT(0xec70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec6e));
        EXPECT(0x9, gbc.readMem(0xec6f));
        // CB 09 0027
        gbc.setState(0x9dfa, 0x1db1, 0xfa90, 0xecc4, 0x4a81, 0xaa9a, 0x0, 0x0);
        gbc.writeMem(0x9dfa, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1db1, gbc.sp());
        EXPECT(0x9dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dfa));
        EXPECT(0x9, gbc.readMem(0x9dfb));
        // CB 09 0028
        gbc.setState(0xea42, 0x82af, 0x6400, 0x1699, 0x6e9c, 0xa611, 0x0, 0x0);
        gbc.writeMem(0xea42, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x82af, gbc.sp());
        EXPECT(0xea44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea42));
        EXPECT(0x9, gbc.readMem(0xea43));
        // CB 09 002A
        gbc.setState(0x3f4b, 0xd0c9, 0xc3a0, 0xe48, 0x62c4, 0xf5cd, 0x0, 0x1);
        gbc.writeMem(0x3f4b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd0c9, gbc.sp());
        EXPECT(0x3f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 002B
        gbc.setState(0x4a16, 0x3968, 0xba00, 0x5d5d, 0xb13e, 0xca4, 0x0, 0x1);
        gbc.writeMem(0x4a16, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3968, gbc.sp());
        EXPECT(0x4a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 002C
        gbc.setState(0x18c3, 0xfdf, 0x8e50, 0x6859, 0xd159, 0x7a1e, 0x0, 0x0);
        gbc.writeMem(0x18c3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfdf, gbc.sp());
        EXPECT(0x18c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 002D
        gbc.setState(0x1074, 0x446f, 0x6610, 0xc873, 0x39f7, 0x92d7, 0x1, 0x1);
        gbc.writeMem(0x1074, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x446f, gbc.sp());
        EXPECT(0x1076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 002E
        gbc.setState(0x64ba, 0x366f, 0x40d0, 0x3ae5, 0x257, 0x1682, 0x0, 0x1);
        gbc.writeMem(0x64ba, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x366f, gbc.sp());
        EXPECT(0x64bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 002F
        gbc.setState(0x8a20, 0x6b39, 0x6f40, 0x981b, 0xffca, 0x880c, 0x1, 0x0);
        gbc.writeMem(0x8a20, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6b39, gbc.sp());
        EXPECT(0x8a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a20));
        EXPECT(0x9, gbc.readMem(0x8a21));
        // CB 09 0030
        gbc.setState(0xf8b, 0x45ef, 0x6220, 0x9691, 0x192d, 0xb4c, 0x0, 0x1);
        gbc.writeMem(0xf8b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x45ef, gbc.sp());
        EXPECT(0xf8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0031
        gbc.setState(0x111c, 0x6cef, 0x60d0, 0x26f9, 0x7a66, 0x40ab, 0x1, 0x0);
        gbc.writeMem(0x111c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6cef, gbc.sp());
        EXPECT(0x111e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0032
        gbc.setState(0x1168, 0x73c8, 0x14a0, 0x6590, 0xe7c, 0x4a0d, 0x1, 0x1);
        gbc.writeMem(0x1168, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x73c8, gbc.sp());
        EXPECT(0x116a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0033
        gbc.setState(0x5fcf, 0x7639, 0x2db0, 0x7229, 0xe8e5, 0x9d8f, 0x1, 0x1);
        gbc.writeMem(0x5fcf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7639, gbc.sp());
        EXPECT(0x5fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0034
        gbc.setState(0x8b74, 0x20a4, 0x3fb0, 0x4743, 0xcb32, 0x8131, 0x0, 0x0);
        gbc.writeMem(0x8b74, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x20a4, gbc.sp());
        EXPECT(0x8b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b74));
        EXPECT(0x9, gbc.readMem(0x8b75));
        // CB 09 0035
        gbc.setState(0x7f2d, 0xb096, 0x3b00, 0x9c84, 0x229a, 0x77a9, 0x0, 0x0);
        gbc.writeMem(0x7f2d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb096, gbc.sp());
        EXPECT(0x7f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0036
        gbc.setState(0x2214, 0x1e35, 0x2170, 0x7280, 0xc58f, 0xa14a, 0x0, 0x0);
        gbc.writeMem(0x2214, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1e35, gbc.sp());
        EXPECT(0x2216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0037
        gbc.setState(0x2368, 0xba70, 0x5430, 0x4b19, 0x8082, 0x97c8, 0x1, 0x1);
        gbc.writeMem(0x2368, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xba70, gbc.sp());
        EXPECT(0x236a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0038
        gbc.setState(0xcb12, 0x5b6b, 0xcb90, 0xcb19, 0xd1b, 0x9469, 0x0, 0x0);
        gbc.writeMem(0xcb12, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5b6b, gbc.sp());
        EXPECT(0xcb14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb12));
        EXPECT(0x9, gbc.readMem(0xcb13));
        // CB 09 0039
        gbc.setState(0xabce, 0xfcb5, 0x4940, 0x82a8, 0xf014, 0x89e5, 0x1, 0x0);
        gbc.writeMem(0xabce, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfcb5, gbc.sp());
        EXPECT(0xabd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabce));
        EXPECT(0x9, gbc.readMem(0xabcf));
        // CB 09 003A
        gbc.setState(0x607f, 0x5945, 0x7510, 0xf13c, 0xd76f, 0xc9e6, 0x1, 0x0);
        gbc.writeMem(0x607f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5945, gbc.sp());
        EXPECT(0x6081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 003B
        gbc.setState(0x2f5, 0x4011, 0xe050, 0xa6c9, 0x9b02, 0x34c0, 0x1, 0x1);
        gbc.writeMem(0x2f5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4011, gbc.sp());
        EXPECT(0x2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 003C
        gbc.setState(0xd610, 0x52cf, 0xfa30, 0x4aca, 0x22fc, 0x96d6, 0x1, 0x1);
        gbc.writeMem(0xd610, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x52cf, gbc.sp());
        EXPECT(0xd612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd610));
        EXPECT(0x9, gbc.readMem(0xd611));
        // CB 09 003D
        gbc.setState(0x89e, 0x14cc, 0xa5a0, 0x6cb4, 0x6ebd, 0xa470, 0x0, 0x1);
        gbc.writeMem(0x89e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x14cc, gbc.sp());
        EXPECT(0x8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 003E
        gbc.setState(0xc1c0, 0x9ce, 0x8d50, 0xf151, 0x59d5, 0xe851, 0x0, 0x0);
        gbc.writeMem(0xc1c0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9ce, gbc.sp());
        EXPECT(0xc1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c0));
        EXPECT(0x9, gbc.readMem(0xc1c1));
        // CB 09 003F
        gbc.setState(0x24a7, 0x6284, 0xb1a0, 0x8b03, 0xa012, 0x8df7, 0x0, 0x1);
        gbc.writeMem(0x24a7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6284, gbc.sp());
        EXPECT(0x24a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0040
        gbc.setState(0x384e, 0x38ab, 0x6a50, 0x74fa, 0x2e45, 0x8bbe, 0x0, 0x0);
        gbc.writeMem(0x384e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x38ab, gbc.sp());
        EXPECT(0x3850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0041
        gbc.setState(0xd9a9, 0x9ebc, 0x7870, 0xf4cd, 0x9aae, 0xd7c7, 0x0, 0x1);
        gbc.writeMem(0xd9a9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9ebc, gbc.sp());
        EXPECT(0xd9ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a9));
        EXPECT(0x9, gbc.readMem(0xd9aa));
        // CB 09 0042
        gbc.setState(0x182b, 0x62f3, 0xd9f0, 0x163d, 0xc188, 0x7818, 0x0, 0x0);
        gbc.writeMem(0x182b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x62f3, gbc.sp());
        EXPECT(0x182d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0043
        gbc.setState(0xa2ba, 0x70e9, 0xdb80, 0x8858, 0x7ef8, 0x1830, 0x0, 0x1);
        gbc.writeMem(0xa2ba, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x70e9, gbc.sp());
        EXPECT(0xa2bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ba));
        EXPECT(0x9, gbc.readMem(0xa2bb));
        // CB 09 0044
        gbc.setState(0x1907, 0xc7c8, 0x90f0, 0x2e17, 0x7f94, 0x1d39, 0x1, 0x1);
        gbc.writeMem(0x1907, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc7c8, gbc.sp());
        EXPECT(0x1909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0045
        gbc.setState(0xedb1, 0x899b, 0xb510, 0x901e, 0x6d7, 0x80c6, 0x0, 0x0);
        gbc.writeMem(0xedb1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x899b, gbc.sp());
        EXPECT(0xedb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb1));
        EXPECT(0x9, gbc.readMem(0xedb2));
        // CB 09 0046
        gbc.setState(0xc437, 0xb710, 0xc550, 0x2382, 0x9524, 0xb366, 0x0, 0x1);
        gbc.writeMem(0xc437, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb710, gbc.sp());
        EXPECT(0xc439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc437));
        EXPECT(0x9, gbc.readMem(0xc438));
        // CB 09 0047
        gbc.setState(0xd2e7, 0xe208, 0xb100, 0x6424, 0x10b8, 0x6bc8, 0x0, 0x0);
        gbc.writeMem(0xd2e7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe208, gbc.sp());
        EXPECT(0xd2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e7));
        EXPECT(0x9, gbc.readMem(0xd2e8));
        // CB 09 0048
        gbc.setState(0x2431, 0x3a9f, 0x9740, 0x5b89, 0xb69b, 0xd76a, 0x1, 0x1);
        gbc.writeMem(0x2431, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3a9f, gbc.sp());
        EXPECT(0x2433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0049
        gbc.setState(0xc925, 0x700d, 0x52e0, 0x460b, 0x2660, 0xea02, 0x1, 0x1);
        gbc.writeMem(0xc925, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x700d, gbc.sp());
        EXPECT(0xc927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc925));
        EXPECT(0x9, gbc.readMem(0xc926));
        // CB 09 004A
        gbc.setState(0x3f87, 0xe0c3, 0x7e80, 0xdf08, 0xfa2f, 0x92d5, 0x1, 0x0);
        gbc.writeMem(0x3f87, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe0c3, gbc.sp());
        EXPECT(0x3f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 004C
        gbc.setState(0x1e04, 0xa13b, 0x7670, 0x6788, 0x4075, 0x9f49, 0x0, 0x1);
        gbc.writeMem(0x1e04, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa13b, gbc.sp());
        EXPECT(0x1e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 004D
        gbc.setState(0xe4f9, 0xecfa, 0xd730, 0x9d32, 0x5fb8, 0xce1c, 0x1, 0x0);
        gbc.writeMem(0xe4f9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xecfa, gbc.sp());
        EXPECT(0xe4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f9));
        EXPECT(0x9, gbc.readMem(0xe4fa));
        // CB 09 004E
        gbc.setState(0xae0d, 0xb690, 0x8090, 0x86f0, 0xc881, 0x7453, 0x0, 0x0);
        gbc.writeMem(0xae0d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb690, gbc.sp());
        EXPECT(0xae0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae0d));
        EXPECT(0x9, gbc.readMem(0xae0e));
        // CB 09 004F
        gbc.setState(0x8004, 0x3ddc, 0x7540, 0xb252, 0x4d5a, 0x32bc, 0x0, 0x1);
        gbc.writeMem(0x8004, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3ddc, gbc.sp());
        EXPECT(0x8006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8004));
        EXPECT(0x9, gbc.readMem(0x8005));
        // CB 09 0050
        gbc.setState(0xa604, 0x7314, 0x5ea0, 0xc224, 0x90d4, 0xf6bf, 0x1, 0x1);
        gbc.writeMem(0xa604, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7314, gbc.sp());
        EXPECT(0xa606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa604));
        EXPECT(0x9, gbc.readMem(0xa605));
        // CB 09 0051
        gbc.setState(0xdf2, 0xcb26, 0xccd0, 0x6366, 0x494a, 0x8be2, 0x1, 0x1);
        gbc.writeMem(0xdf2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcb26, gbc.sp());
        EXPECT(0xdf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0052
        gbc.setState(0x5e51, 0x2625, 0xcd90, 0x66e8, 0xfc07, 0x404b, 0x0, 0x1);
        gbc.writeMem(0x5e51, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2625, gbc.sp());
        EXPECT(0x5e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0053
        gbc.setState(0xc6c9, 0x3ebe, 0xf0e0, 0x611d, 0xed9a, 0xcda0, 0x0, 0x0);
        gbc.writeMem(0xc6c9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3ebe, gbc.sp());
        EXPECT(0xc6cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c9));
        EXPECT(0x9, gbc.readMem(0xc6ca));
        // CB 09 0054
        gbc.setState(0xb061, 0x5b2c, 0x6a90, 0x7f5c, 0xc3b9, 0xefa8, 0x1, 0x1);
        gbc.writeMem(0xb061, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5b2c, gbc.sp());
        EXPECT(0xb063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb061));
        EXPECT(0x9, gbc.readMem(0xb062));
        // CB 09 0055
        gbc.setState(0x577a, 0xe536, 0xb600, 0xb379, 0xc850, 0x4a7c, 0x1, 0x1);
        gbc.writeMem(0x577a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe536, gbc.sp());
        EXPECT(0x577c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0056
        gbc.setState(0x8f05, 0x61ec, 0xaf20, 0x373e, 0x7c47, 0xc3ed, 0x0, 0x0);
        gbc.writeMem(0x8f05, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x61ec, gbc.sp());
        EXPECT(0x8f07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f05));
        EXPECT(0x9, gbc.readMem(0x8f06));
        // CB 09 0057
        gbc.setState(0x88c2, 0x71fd, 0x4630, 0xa4a9, 0x3ffb, 0x934, 0x0, 0x0);
        gbc.writeMem(0x88c2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x71fd, gbc.sp());
        EXPECT(0x88c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c2));
        EXPECT(0x9, gbc.readMem(0x88c3));
        // CB 09 0058
        gbc.setState(0x63a5, 0x9639, 0xa810, 0x3d8f, 0x9d9b, 0x46f9, 0x0, 0x1);
        gbc.writeMem(0x63a5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9639, gbc.sp());
        EXPECT(0x63a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0059
        gbc.setState(0xb6ab, 0xfc76, 0x72e0, 0x73a0, 0xc17a, 0x788e, 0x0, 0x1);
        gbc.writeMem(0xb6ab, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfc76, gbc.sp());
        EXPECT(0xb6ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ab));
        EXPECT(0x9, gbc.readMem(0xb6ac));
        // CB 09 005A
        gbc.setState(0xd689, 0x249c, 0xc9a0, 0xdbe5, 0x88ad, 0xf03e, 0x1, 0x1);
        gbc.writeMem(0xd689, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x249c, gbc.sp());
        EXPECT(0xd68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd689));
        EXPECT(0x9, gbc.readMem(0xd68a));
        // CB 09 005B
        gbc.setState(0xaf3a, 0xc962, 0x2b0, 0x8eaa, 0xba12, 0xbb22, 0x1, 0x1);
        gbc.writeMem(0xaf3a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc962, gbc.sp());
        EXPECT(0xaf3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3a));
        EXPECT(0x9, gbc.readMem(0xaf3b));
        // CB 09 005C
        gbc.setState(0x5af7, 0xbebd, 0xe3c0, 0x8aff, 0x90fb, 0x8af6, 0x1, 0x0);
        gbc.writeMem(0x5af7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbebd, gbc.sp());
        EXPECT(0x5af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 005D
        gbc.setState(0x754f, 0xf0d9, 0xda30, 0x76cd, 0x4026, 0xd4ea, 0x0, 0x1);
        gbc.writeMem(0x754f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf0d9, gbc.sp());
        EXPECT(0x7551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 005E
        gbc.setState(0x3fc6, 0xbac1, 0xe1f0, 0x9066, 0xba3e, 0x2d2c, 0x1, 0x0);
        gbc.writeMem(0x3fc6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbac1, gbc.sp());
        EXPECT(0x3fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 005F
        gbc.setState(0x9951, 0xf0ae, 0x3b80, 0xc034, 0x8d2e, 0xbbb5, 0x1, 0x1);
        gbc.writeMem(0x9951, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf0ae, gbc.sp());
        EXPECT(0x9953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9951));
        EXPECT(0x9, gbc.readMem(0x9952));
        // CB 09 0060
        gbc.setState(0xe603, 0x4779, 0x1490, 0x5ea3, 0x1a1e, 0xf0c0, 0x1, 0x0);
        gbc.writeMem(0xe603, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4779, gbc.sp());
        EXPECT(0xe605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe603));
        EXPECT(0x9, gbc.readMem(0xe604));
        // CB 09 0061
        gbc.setState(0x1c81, 0xb193, 0xa580, 0x8cba, 0xef9e, 0x5578, 0x1, 0x1);
        gbc.writeMem(0x1c81, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb193, gbc.sp());
        EXPECT(0x1c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0062
        gbc.setState(0x1a17, 0x7eaa, 0x64e0, 0x7c64, 0xe7b8, 0x1bbc, 0x1, 0x0);
        gbc.writeMem(0x1a17, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7eaa, gbc.sp());
        EXPECT(0x1a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0063
        gbc.setState(0x684d, 0xffdf, 0xfb0, 0x98ec, 0x7eeb, 0x7881, 0x1, 0x1);
        gbc.writeMem(0x684d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xffdf, gbc.sp());
        EXPECT(0x684f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0064
        gbc.setState(0x7962, 0xb0b4, 0x8140, 0x1583, 0xedd8, 0x5740, 0x0, 0x0);
        gbc.writeMem(0x7962, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb0b4, gbc.sp());
        EXPECT(0x7964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0065
        gbc.setState(0x917d, 0x9415, 0x87b0, 0x7cff, 0x8c5a, 0xe375, 0x1, 0x0);
        gbc.writeMem(0x917d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9415, gbc.sp());
        EXPECT(0x917f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x917d));
        EXPECT(0x9, gbc.readMem(0x917e));
        // CB 09 0066
        gbc.setState(0xa0ab, 0x1b64, 0xede0, 0x59a2, 0xd3f8, 0xfa6f, 0x1, 0x1);
        gbc.writeMem(0xa0ab, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1b64, gbc.sp());
        EXPECT(0xa0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ab));
        EXPECT(0x9, gbc.readMem(0xa0ac));
        // CB 09 0067
        gbc.setState(0xddea, 0x21a6, 0x8750, 0xdc84, 0x2cc, 0x509, 0x0, 0x0);
        gbc.writeMem(0xddea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x21a6, gbc.sp());
        EXPECT(0xddec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddea));
        EXPECT(0x9, gbc.readMem(0xddeb));
        // CB 09 0068
        gbc.setState(0x723e, 0xa8e3, 0x1910, 0x4709, 0x21ad, 0xc702, 0x1, 0x0);
        gbc.writeMem(0x723e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa8e3, gbc.sp());
        EXPECT(0x7240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0069
        gbc.setState(0xbb26, 0x2262, 0x83c0, 0x4dbd, 0x80a0, 0xf7d9, 0x1, 0x0);
        gbc.writeMem(0xbb26, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2262, gbc.sp());
        EXPECT(0xbb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb26));
        EXPECT(0x9, gbc.readMem(0xbb27));
        // CB 09 006A
        gbc.setState(0x5851, 0xf34d, 0x46e0, 0xe19e, 0x579a, 0xb25c, 0x0, 0x1);
        gbc.writeMem(0x5851, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf34d, gbc.sp());
        EXPECT(0x5853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 006B
        gbc.setState(0x3f14, 0x3322, 0xb6b0, 0x5e00, 0x5e65, 0x29de, 0x0, 0x0);
        gbc.writeMem(0x3f14, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3322, gbc.sp());
        EXPECT(0x3f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 006C
        gbc.setState(0x735e, 0x80d0, 0x7100, 0x2afe, 0xb80d, 0x4a54, 0x1, 0x1);
        gbc.writeMem(0x735e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x80d0, gbc.sp());
        EXPECT(0x7360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 006D
        gbc.setState(0x8f8, 0x3cd6, 0x5a50, 0xa47e, 0x54f6, 0xa9a5, 0x0, 0x1);
        gbc.writeMem(0x8f8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3cd6, gbc.sp());
        EXPECT(0x8fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 006E
        gbc.setState(0x386f, 0xc263, 0x1ba0, 0x6357, 0x2ffb, 0x7368, 0x1, 0x0);
        gbc.writeMem(0x386f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc263, gbc.sp());
        EXPECT(0x3871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 006F
        gbc.setState(0x5990, 0x557f, 0x330, 0x563c, 0x6349, 0x6bec, 0x0, 0x1);
        gbc.writeMem(0x5990, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x557f, gbc.sp());
        EXPECT(0x5992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0070
        gbc.setState(0x3b98, 0x747a, 0x26d0, 0x5dd0, 0xa43c, 0x9615, 0x0, 0x1);
        gbc.writeMem(0x3b98, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x747a, gbc.sp());
        EXPECT(0x3b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0071
        gbc.setState(0x21e9, 0xf0dd, 0xc270, 0xf2ea, 0x6352, 0xf418, 0x0, 0x0);
        gbc.writeMem(0x21e9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf0dd, gbc.sp());
        EXPECT(0x21eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0072
        gbc.setState(0x97a6, 0xc506, 0x27b0, 0x5a95, 0xdb66, 0xe640, 0x0, 0x0);
        gbc.writeMem(0x97a6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc506, gbc.sp());
        EXPECT(0x97a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a6));
        EXPECT(0x9, gbc.readMem(0x97a7));
        // CB 09 0073
        gbc.setState(0xd379, 0x22f3, 0x1ff0, 0x4d35, 0xcfd9, 0x71d8, 0x1, 0x0);
        gbc.writeMem(0xd379, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x22f3, gbc.sp());
        EXPECT(0xd37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd379));
        EXPECT(0x9, gbc.readMem(0xd37a));
        // CB 09 0074
        gbc.setState(0xb9f1, 0xab89, 0xa250, 0x26f3, 0x5a55, 0x2156, 0x0, 0x0);
        gbc.writeMem(0xb9f1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xab89, gbc.sp());
        EXPECT(0xb9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f1));
        EXPECT(0x9, gbc.readMem(0xb9f2));
        // CB 09 0075
        gbc.setState(0xcfd4, 0xdda8, 0x66d0, 0x482d, 0x738, 0xa164, 0x0, 0x1);
        gbc.writeMem(0xcfd4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdda8, gbc.sp());
        EXPECT(0xcfd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd4));
        EXPECT(0x9, gbc.readMem(0xcfd5));
        // CB 09 0076
        gbc.setState(0x585a, 0xf4f4, 0x8ce0, 0x254a, 0xc6a9, 0xd277, 0x1, 0x1);
        gbc.writeMem(0x585a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf4f4, gbc.sp());
        EXPECT(0x585c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0077
        gbc.setState(0xd977, 0xfe2a, 0xacb0, 0x860, 0x2828, 0xf3d7, 0x1, 0x1);
        gbc.writeMem(0xd977, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfe2a, gbc.sp());
        EXPECT(0xd979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd977));
        EXPECT(0x9, gbc.readMem(0xd978));
        // CB 09 0078
        gbc.setState(0xca24, 0xe6fd, 0x7b60, 0xaf82, 0x602, 0x97fd, 0x0, 0x0);
        gbc.writeMem(0xca24, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe6fd, gbc.sp());
        EXPECT(0xca26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca24));
        EXPECT(0x9, gbc.readMem(0xca25));
        // CB 09 0079
        gbc.setState(0x117, 0xa56a, 0xd7e0, 0x476e, 0x5954, 0xec0b, 0x0, 0x1);
        gbc.writeMem(0x117, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa56a, gbc.sp());
        EXPECT(0x119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 007A
        gbc.setState(0x73f0, 0x9f35, 0x7790, 0x623f, 0xd4d3, 0x45a0, 0x1, 0x1);
        gbc.writeMem(0x73f0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9f35, gbc.sp());
        EXPECT(0x73f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 007B
        gbc.setState(0x21c4, 0xa4c3, 0xd7a0, 0x945f, 0x19a6, 0xe04f, 0x1, 0x1);
        gbc.writeMem(0x21c4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa4c3, gbc.sp());
        EXPECT(0x21c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 007C
        gbc.setState(0xafd5, 0x97ea, 0x12d0, 0x9e12, 0x5af3, 0x6884, 0x1, 0x0);
        gbc.writeMem(0xafd5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x97ea, gbc.sp());
        EXPECT(0xafd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd5));
        EXPECT(0x9, gbc.readMem(0xafd6));
        // CB 09 007D
        gbc.setState(0x9798, 0xe6a0, 0x21e0, 0xeb29, 0x186, 0x5ec9, 0x0, 0x0);
        gbc.writeMem(0x9798, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe6a0, gbc.sp());
        EXPECT(0x979a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9798));
        EXPECT(0x9, gbc.readMem(0x9799));
        // CB 09 007E
        gbc.setState(0xd9aa, 0xc9b0, 0x73e0, 0x2fbd, 0xfeae, 0x4d67, 0x1, 0x1);
        gbc.writeMem(0xd9aa, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc9b0, gbc.sp());
        EXPECT(0xd9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9aa));
        EXPECT(0x9, gbc.readMem(0xd9ab));
        // CB 09 007F
        gbc.setState(0x9db2, 0xa235, 0x1910, 0xde12, 0xea23, 0xecd2, 0x0, 0x1);
        gbc.writeMem(0x9db2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa235, gbc.sp());
        EXPECT(0x9db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db2));
        EXPECT(0x9, gbc.readMem(0x9db3));
        // CB 09 0080
        gbc.setState(0xd39a, 0xc220, 0xf030, 0x6f1c, 0x6056, 0xe2dc, 0x1, 0x0);
        gbc.writeMem(0xd39a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc220, gbc.sp());
        EXPECT(0xd39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd39a));
        EXPECT(0x9, gbc.readMem(0xd39b));
        // CB 09 0082
        gbc.setState(0x2301, 0x3562, 0x3280, 0x2fc9, 0x313f, 0xa5eb, 0x0, 0x1);
        gbc.writeMem(0x2301, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3562, gbc.sp());
        EXPECT(0x2303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0083
        gbc.setState(0x43ed, 0x5149, 0xf140, 0xfa59, 0x47c9, 0x4cb0, 0x1, 0x1);
        gbc.writeMem(0x43ed, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5149, gbc.sp());
        EXPECT(0x43ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0084
        gbc.setState(0xa484, 0x8931, 0xae40, 0x5f71, 0x7611, 0x1307, 0x0, 0x0);
        gbc.writeMem(0xa484, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8931, gbc.sp());
        EXPECT(0xa486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa484));
        EXPECT(0x9, gbc.readMem(0xa485));
        // CB 09 0085
        gbc.setState(0x417b, 0x4c77, 0xc730, 0x2218, 0xee14, 0x553d, 0x1, 0x0);
        gbc.writeMem(0x417b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4c77, gbc.sp());
        EXPECT(0x417d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0086
        gbc.setState(0x1783, 0x98af, 0x8850, 0x7c16, 0x587, 0xea75, 0x1, 0x0);
        gbc.writeMem(0x1783, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x98af, gbc.sp());
        EXPECT(0x1785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0087
        gbc.setState(0x4b48, 0xaeef, 0xa9e0, 0x7bbd, 0x8b22, 0x6675, 0x0, 0x0);
        gbc.writeMem(0x4b48, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xaeef, gbc.sp());
        EXPECT(0x4b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0088
        gbc.setState(0xd4dd, 0x7846, 0x4cc0, 0xf51b, 0x610, 0x20ec, 0x0, 0x1);
        gbc.writeMem(0xd4dd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7846, gbc.sp());
        EXPECT(0xd4df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4dd));
        EXPECT(0x9, gbc.readMem(0xd4de));
        // CB 09 0089
        gbc.setState(0x89bc, 0x9597, 0xd40, 0x6465, 0x519d, 0xc0d5, 0x0, 0x1);
        gbc.writeMem(0x89bc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9597, gbc.sp());
        EXPECT(0x89be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89bc));
        EXPECT(0x9, gbc.readMem(0x89bd));
        // CB 09 008A
        gbc.setState(0xac68, 0x7986, 0x40e0, 0xb46e, 0x3847, 0x6355, 0x1, 0x0);
        gbc.writeMem(0xac68, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7986, gbc.sp());
        EXPECT(0xac6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac68));
        EXPECT(0x9, gbc.readMem(0xac69));
        // CB 09 008C
        gbc.setState(0xb47d, 0xc474, 0x21c0, 0x428c, 0x809d, 0xda7b, 0x0, 0x1);
        gbc.writeMem(0xb47d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc474, gbc.sp());
        EXPECT(0xb47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb47d));
        EXPECT(0x9, gbc.readMem(0xb47e));
        // CB 09 008D
        gbc.setState(0x5175, 0x4ab2, 0x35d0, 0x535d, 0x7026, 0x468b, 0x1, 0x1);
        gbc.writeMem(0x5175, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4ab2, gbc.sp());
        EXPECT(0x5177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 008E
        gbc.setState(0x84a1, 0x6943, 0x6a20, 0x84d2, 0xde74, 0x2823, 0x1, 0x0);
        gbc.writeMem(0x84a1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6943, gbc.sp());
        EXPECT(0x84a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a1));
        EXPECT(0x9, gbc.readMem(0x84a2));
        // CB 09 008F
        gbc.setState(0xeffe, 0x16ae, 0x7a60, 0xed00, 0x72d0, 0x4612, 0x0, 0x1);
        gbc.writeMem(0xeffe, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x16ae, gbc.sp());
        EXPECT(0xf000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeffe));
        EXPECT(0x9, gbc.readMem(0xefff));
        // CB 09 0090
        gbc.setState(0x851, 0xab72, 0x6c20, 0x7676, 0x4f1f, 0xeb0d, 0x1, 0x1);
        gbc.writeMem(0x851, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xab72, gbc.sp());
        EXPECT(0x853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0092
        gbc.setState(0x6684, 0x767, 0x6f0, 0x9a95, 0xd5b2, 0xa497, 0x1, 0x1);
        gbc.writeMem(0x6684, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x767, gbc.sp());
        EXPECT(0x6686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0094
        gbc.setState(0x61b1, 0xd2f6, 0x2de0, 0xf2cc, 0x9bf6, 0x348b, 0x0, 0x1);
        gbc.writeMem(0x61b1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd2f6, gbc.sp());
        EXPECT(0x61b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0095
        gbc.setState(0x5a67, 0x4820, 0x4930, 0xd784, 0x7257, 0x8d57, 0x1, 0x0);
        gbc.writeMem(0x5a67, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4820, gbc.sp());
        EXPECT(0x5a69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0096
        gbc.setState(0x19cd, 0xaad2, 0x6990, 0x5c2, 0xe73d, 0x80c4, 0x0, 0x1);
        gbc.writeMem(0x19cd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaad2, gbc.sp());
        EXPECT(0x19cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0097
        gbc.setState(0xd515, 0xeae3, 0xda70, 0x2776, 0x1c5e, 0xf32c, 0x1, 0x0);
        gbc.writeMem(0xd515, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xeae3, gbc.sp());
        EXPECT(0xd517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd515));
        EXPECT(0x9, gbc.readMem(0xd516));
        // CB 09 0098
        gbc.setState(0xc2b2, 0x500, 0xb1b0, 0xb046, 0x54f6, 0x4bf1, 0x0, 0x0);
        gbc.writeMem(0xc2b2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x500, gbc.sp());
        EXPECT(0xc2b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b2));
        EXPECT(0x9, gbc.readMem(0xc2b3));
        // CB 09 0099
        gbc.setState(0xcf6d, 0xe8f6, 0xa6c0, 0x6b1, 0x8407, 0xe900, 0x1, 0x1);
        gbc.writeMem(0xcf6d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe8f6, gbc.sp());
        EXPECT(0xcf6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6d));
        EXPECT(0x9, gbc.readMem(0xcf6e));
        // CB 09 009A
        gbc.setState(0xa1f9, 0x2b99, 0x34f0, 0xe7c5, 0x4e60, 0x1edf, 0x0, 0x1);
        gbc.writeMem(0xa1f9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2b99, gbc.sp());
        EXPECT(0xa1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f9));
        EXPECT(0x9, gbc.readMem(0xa1fa));
        // CB 09 009B
        gbc.setState(0x4f3e, 0xb112, 0xb960, 0xb9f2, 0x4eda, 0xaf84, 0x1, 0x0);
        gbc.writeMem(0x4f3e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb112, gbc.sp());
        EXPECT(0x4f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 009C
        gbc.setState(0xe65c, 0xb4b, 0x2bf0, 0x1080, 0xba8c, 0xdafc, 0x0, 0x0);
        gbc.writeMem(0xe65c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb4b, gbc.sp());
        EXPECT(0xe65e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe65c));
        EXPECT(0x9, gbc.readMem(0xe65d));
        // CB 09 009D
        gbc.setState(0x8a30, 0x62a8, 0x5440, 0x8a5c, 0x30b1, 0xe1a7, 0x0, 0x0);
        gbc.writeMem(0x8a30, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x62a8, gbc.sp());
        EXPECT(0x8a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a30));
        EXPECT(0x9, gbc.readMem(0x8a31));
        // CB 09 009E
        gbc.setState(0xd9ce, 0xf851, 0x7790, 0x6b6b, 0x3dcc, 0xd9e0, 0x0, 0x0);
        gbc.writeMem(0xd9ce, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf851, gbc.sp());
        EXPECT(0xd9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ce));
        EXPECT(0x9, gbc.readMem(0xd9cf));
        // CB 09 009F
        gbc.setState(0x2f90, 0xa5c1, 0x4900, 0x49ae, 0x1c8a, 0x3246, 0x1, 0x0);
        gbc.writeMem(0x2f90, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa5c1, gbc.sp());
        EXPECT(0x2f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00A0
        gbc.setState(0x6ee4, 0xf13c, 0x8a70, 0x1f7a, 0x9250, 0x145a, 0x1, 0x1);
        gbc.writeMem(0x6ee4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf13c, gbc.sp());
        EXPECT(0x6ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00A1
        gbc.setState(0xc522, 0xc0a4, 0x1260, 0x139a, 0x4089, 0xe405, 0x0, 0x0);
        gbc.writeMem(0xc522, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc0a4, gbc.sp());
        EXPECT(0xc524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc522));
        EXPECT(0x9, gbc.readMem(0xc523));
        // CB 09 00A4
        gbc.setState(0xe04, 0xfe7b, 0xa310, 0xbb99, 0x7e64, 0x48df, 0x1, 0x1);
        gbc.writeMem(0xe04, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfe7b, gbc.sp());
        EXPECT(0xe06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00A5
        gbc.setState(0x7934, 0x2198, 0x5790, 0xd24, 0x65dd, 0x4738, 0x0, 0x0);
        gbc.writeMem(0x7934, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2198, gbc.sp());
        EXPECT(0x7936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00A6
        gbc.setState(0x9433, 0x4642, 0x5450, 0x5123, 0xde7f, 0x7d00, 0x0, 0x0);
        gbc.writeMem(0x9433, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4642, gbc.sp());
        EXPECT(0x9435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9433));
        EXPECT(0x9, gbc.readMem(0x9434));
        // CB 09 00A7
        gbc.setState(0x34, 0x8c03, 0xf330, 0x1eb7, 0x1c04, 0x7e93, 0x1, 0x1);
        gbc.writeMem(0x34, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8c03, gbc.sp());
        EXPECT(0x36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00A8
        gbc.setState(0x8ba2, 0x5351, 0x8d90, 0xd32, 0xd1a7, 0xb7f5, 0x1, 0x1);
        gbc.writeMem(0x8ba2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5351, gbc.sp());
        EXPECT(0x8ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba2));
        EXPECT(0x9, gbc.readMem(0x8ba3));
        // CB 09 00A9
        gbc.setState(0x8a4c, 0x9ca0, 0x1340, 0xf5d, 0xec94, 0x43f5, 0x1, 0x0);
        gbc.writeMem(0x8a4c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9ca0, gbc.sp());
        EXPECT(0x8a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4c));
        EXPECT(0x9, gbc.readMem(0x8a4d));
        // CB 09 00AA
        gbc.setState(0xb914, 0xd1e5, 0x3220, 0xd854, 0x9104, 0x5302, 0x0, 0x0);
        gbc.writeMem(0xb914, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd1e5, gbc.sp());
        EXPECT(0xb916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb914));
        EXPECT(0x9, gbc.readMem(0xb915));
        // CB 09 00AB
        gbc.setState(0x5279, 0xd89e, 0xa9c0, 0x86ea, 0xee8e, 0xefc0, 0x1, 0x1);
        gbc.writeMem(0x5279, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd89e, gbc.sp());
        EXPECT(0x527b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00AC
        gbc.setState(0x60ba, 0xf7f5, 0xacf0, 0x45f2, 0x36e3, 0xd0b9, 0x1, 0x0);
        gbc.writeMem(0x60ba, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf7f5, gbc.sp());
        EXPECT(0x60bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00AF
        gbc.setState(0xaa01, 0xf5d5, 0xed0, 0x91d1, 0xbbdd, 0x7887, 0x0, 0x0);
        gbc.writeMem(0xaa01, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf5d5, gbc.sp());
        EXPECT(0xaa03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa01));
        EXPECT(0x9, gbc.readMem(0xaa02));
        // CB 09 00B0
        gbc.setState(0x5e36, 0xec1f, 0x66e0, 0x4716, 0xe8e6, 0x2d98, 0x0, 0x1);
        gbc.writeMem(0x5e36, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xec1f, gbc.sp());
        EXPECT(0x5e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00B1
        gbc.setState(0x8987, 0x2e0c, 0x8cb0, 0xfcce, 0x71bf, 0x4743, 0x1, 0x1);
        gbc.writeMem(0x8987, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2e0c, gbc.sp());
        EXPECT(0x8989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8987));
        EXPECT(0x9, gbc.readMem(0x8988));
        // CB 09 00B2
        gbc.setState(0x7ac6, 0x37b, 0xf980, 0x48a3, 0x5468, 0x8cac, 0x1, 0x0);
        gbc.writeMem(0x7ac6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x37b, gbc.sp());
        EXPECT(0x7ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00B3
        gbc.setState(0x4702, 0x7f86, 0x6f60, 0xaaf, 0x1a11, 0x450a, 0x0, 0x1);
        gbc.writeMem(0x4702, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7f86, gbc.sp());
        EXPECT(0x4704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00B4
        gbc.setState(0x6907, 0x3a5, 0xf370, 0x9d2f, 0x83f, 0x70, 0x1, 0x0);
        gbc.writeMem(0x6907, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3a5, gbc.sp());
        EXPECT(0x6909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00B5
        gbc.setState(0x27e3, 0x3260, 0x3de0, 0xe411, 0xbefa, 0xcbc0, 0x0, 0x1);
        gbc.writeMem(0x27e3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0x27e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00B6
        gbc.setState(0xaabf, 0x86a2, 0x85b0, 0xc435, 0x9073, 0xdfde, 0x1, 0x1);
        gbc.writeMem(0xaabf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x86a2, gbc.sp());
        EXPECT(0xaac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaabf));
        EXPECT(0x9, gbc.readMem(0xaac0));
        // CB 09 00B8
        gbc.setState(0xce32, 0x8e73, 0x9b20, 0x8bad, 0x324d, 0x2c32, 0x1, 0x1);
        gbc.writeMem(0xce32, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8e73, gbc.sp());
        EXPECT(0xce34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce32));
        EXPECT(0x9, gbc.readMem(0xce33));
        // CB 09 00B9
        gbc.setState(0x8396, 0xc882, 0x8440, 0xeda2, 0x3a06, 0x836e, 0x1, 0x0);
        gbc.writeMem(0x8396, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc882, gbc.sp());
        EXPECT(0x8398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8396));
        EXPECT(0x9, gbc.readMem(0x8397));
        // CB 09 00BA
        gbc.setState(0x46a4, 0x96e1, 0x1160, 0x5366, 0x60ba, 0xe779, 0x0, 0x0);
        gbc.writeMem(0x46a4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x96e1, gbc.sp());
        EXPECT(0x46a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00BB
        gbc.setState(0xb6e, 0xf531, 0x3420, 0x63af, 0xcaa6, 0x2151, 0x0, 0x1);
        gbc.writeMem(0xb6e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf531, gbc.sp());
        EXPECT(0xb70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00BD
        gbc.setState(0x60a8, 0x8d6d, 0x6f60, 0xb62d, 0x2dab, 0x7c6a, 0x0, 0x0);
        gbc.writeMem(0x60a8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8d6d, gbc.sp());
        EXPECT(0x60aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00BE
        gbc.setState(0x8f04, 0xeec0, 0x6d70, 0xdc6e, 0x46ca, 0xd8aa, 0x0, 0x1);
        gbc.writeMem(0x8f04, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xeec0, gbc.sp());
        EXPECT(0x8f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f04));
        EXPECT(0x9, gbc.readMem(0x8f05));
        // CB 09 00BF
        gbc.setState(0xdef6, 0xa117, 0x2950, 0xaabf, 0x84a3, 0x896e, 0x1, 0x1);
        gbc.writeMem(0xdef6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa117, gbc.sp());
        EXPECT(0xdef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef6));
        EXPECT(0x9, gbc.readMem(0xdef7));
        // CB 09 00C1
        gbc.setState(0x117c, 0x89e4, 0x16f0, 0xafbd, 0xf1bb, 0x3f88, 0x0, 0x0);
        gbc.writeMem(0x117c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x89e4, gbc.sp());
        EXPECT(0x117e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00C2
        gbc.setState(0x7630, 0xb760, 0xe770, 0x8d42, 0xb433, 0x371a, 0x0, 0x1);
        gbc.writeMem(0x7630, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb760, gbc.sp());
        EXPECT(0x7632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00C3
        gbc.setState(0xe5d5, 0x56ff, 0xb210, 0xc901, 0xea16, 0x8b6a, 0x1, 0x1);
        gbc.writeMem(0xe5d5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x56ff, gbc.sp());
        EXPECT(0xe5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d5));
        EXPECT(0x9, gbc.readMem(0xe5d6));
        // CB 09 00C4
        gbc.setState(0x1a75, 0x237f, 0x96f0, 0xf666, 0xec8d, 0xfdfd, 0x1, 0x1);
        gbc.writeMem(0x1a75, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x237f, gbc.sp());
        EXPECT(0x1a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00C5
        gbc.setState(0xe14a, 0x4feb, 0x8fa0, 0x17ea, 0xf1de, 0x2a80, 0x0, 0x0);
        gbc.writeMem(0xe14a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4feb, gbc.sp());
        EXPECT(0xe14c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14a));
        EXPECT(0x9, gbc.readMem(0xe14b));
        // CB 09 00C7
        gbc.setState(0xafda, 0xc95e, 0x4080, 0xa98d, 0xd128, 0x844d, 0x1, 0x0);
        gbc.writeMem(0xafda, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc95e, gbc.sp());
        EXPECT(0xafdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafda));
        EXPECT(0x9, gbc.readMem(0xafdb));
        // CB 09 00C8
        gbc.setState(0xa03b, 0xaa9e, 0xe8b0, 0x783, 0xe0b2, 0xca02, 0x1, 0x0);
        gbc.writeMem(0xa03b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xaa9e, gbc.sp());
        EXPECT(0xa03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03b));
        EXPECT(0x9, gbc.readMem(0xa03c));
        // CB 09 00C9
        gbc.setState(0x8b16, 0xe20, 0xf010, 0x3a55, 0xef0e, 0xebbd, 0x1, 0x0);
        gbc.writeMem(0x8b16, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe20, gbc.sp());
        EXPECT(0x8b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b16));
        EXPECT(0x9, gbc.readMem(0x8b17));
        // CB 09 00CA
        gbc.setState(0xdc4e, 0x686f, 0x2f70, 0x8fff, 0xb2ed, 0xea52, 0x0, 0x0);
        gbc.writeMem(0xdc4e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x686f, gbc.sp());
        EXPECT(0xdc50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc4e));
        EXPECT(0x9, gbc.readMem(0xdc4f));
        // CB 09 00CB
        gbc.setState(0x2b34, 0x6332, 0x16f0, 0x84c2, 0x4750, 0x6006, 0x1, 0x0);
        gbc.writeMem(0x2b34, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6332, gbc.sp());
        EXPECT(0x2b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00CC
        gbc.setState(0x19cf, 0x47ca, 0x610, 0x590f, 0xc7d2, 0x1061, 0x1, 0x1);
        gbc.writeMem(0x19cf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x47ca, gbc.sp());
        EXPECT(0x19d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00CD
        gbc.setState(0x6cd3, 0xa39e, 0x3410, 0x535e, 0x451b, 0x954, 0x1, 0x0);
        gbc.writeMem(0x6cd3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa39e, gbc.sp());
        EXPECT(0x6cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00CE
        gbc.setState(0x3e53, 0x42d4, 0x2ba0, 0x488f, 0xb3e8, 0x3a5, 0x0, 0x1);
        gbc.writeMem(0x3e53, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x42d4, gbc.sp());
        EXPECT(0x3e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00CF
        gbc.setState(0x3052, 0x2e4a, 0x2790, 0x8425, 0x2b05, 0x3b44, 0x1, 0x0);
        gbc.writeMem(0x3052, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2e4a, gbc.sp());
        EXPECT(0x3054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00D0
        gbc.setState(0x2a0a, 0xf5c0, 0x3090, 0x5fcc, 0x2867, 0x6129, 0x1, 0x1);
        gbc.writeMem(0x2a0a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf5c0, gbc.sp());
        EXPECT(0x2a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00D1
        gbc.setState(0xefd0, 0x5e50, 0x1140, 0x9e54, 0x911a, 0xe163, 0x1, 0x0);
        gbc.writeMem(0xefd0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5e50, gbc.sp());
        EXPECT(0xefd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd0));
        EXPECT(0x9, gbc.readMem(0xefd1));
        // CB 09 00D2
        gbc.setState(0x8b4b, 0x6500, 0xbb20, 0xbd8b, 0x46a1, 0xdce4, 0x0, 0x1);
        gbc.writeMem(0x8b4b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6500, gbc.sp());
        EXPECT(0x8b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b4b));
        EXPECT(0x9, gbc.readMem(0x8b4c));
        // CB 09 00D3
        gbc.setState(0xe134, 0xaac, 0x30e0, 0x511e, 0x78de, 0xafe6, 0x1, 0x1);
        gbc.writeMem(0xe134, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xaac, gbc.sp());
        EXPECT(0xe136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe134));
        EXPECT(0x9, gbc.readMem(0xe135));
        // CB 09 00D4
        gbc.setState(0x70c3, 0xc0bf, 0xa190, 0x7cc9, 0x588b, 0x71dc, 0x0, 0x0);
        gbc.writeMem(0x70c3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc0bf, gbc.sp());
        EXPECT(0x70c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00D5
        gbc.setState(0x10a6, 0xc72, 0x2960, 0xe53, 0x7eee, 0x1975, 0x0, 0x0);
        gbc.writeMem(0x10a6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc72, gbc.sp());
        EXPECT(0x10a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00D6
        gbc.setState(0x7ace, 0x210e, 0xd1e0, 0x5487, 0x1a88, 0x99af, 0x0, 0x1);
        gbc.writeMem(0x7ace, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x210e, gbc.sp());
        EXPECT(0x7ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00D7
        gbc.setState(0xbc2b, 0x6a18, 0xdb60, 0x4bec, 0x63c1, 0x4ab8, 0x1, 0x0);
        gbc.writeMem(0xbc2b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6a18, gbc.sp());
        EXPECT(0xbc2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2b));
        EXPECT(0x9, gbc.readMem(0xbc2c));
        // CB 09 00D9
        gbc.setState(0x24bc, 0x9e58, 0xfb40, 0xc7d1, 0xec57, 0x934a, 0x0, 0x0);
        gbc.writeMem(0x24bc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9e58, gbc.sp());
        EXPECT(0x24be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00DA
        gbc.setState(0xe94a, 0x2d80, 0x810, 0x4a5b, 0x7ade, 0xbdaf, 0x0, 0x1);
        gbc.writeMem(0xe94a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2d80, gbc.sp());
        EXPECT(0xe94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe94a));
        EXPECT(0x9, gbc.readMem(0xe94b));
        // CB 09 00DB
        gbc.setState(0xca86, 0xb50d, 0x6e30, 0xdb69, 0xd774, 0x1fb0, 0x1, 0x0);
        gbc.writeMem(0xca86, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb50d, gbc.sp());
        EXPECT(0xca88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca86));
        EXPECT(0x9, gbc.readMem(0xca87));
        // CB 09 00DC
        gbc.setState(0x4e9a, 0x78d4, 0xd640, 0x7ccf, 0x93d0, 0xfe3d, 0x0, 0x1);
        gbc.writeMem(0x4e9a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x78d4, gbc.sp());
        EXPECT(0x4e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00DD
        gbc.setState(0x4702, 0xda80, 0x3d00, 0xd1e6, 0x5663, 0x5e96, 0x0, 0x0);
        gbc.writeMem(0x4702, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xda80, gbc.sp());
        EXPECT(0x4704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00DE
        gbc.setState(0x48b0, 0xaf38, 0x4050, 0x440b, 0x9106, 0x5110, 0x1, 0x1);
        gbc.writeMem(0x48b0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xaf38, gbc.sp());
        EXPECT(0x48b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00DF
        gbc.setState(0x2cdc, 0x32cd, 0x5690, 0x60bf, 0x3608, 0xe4fe, 0x1, 0x0);
        gbc.writeMem(0x2cdc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x32cd, gbc.sp());
        EXPECT(0x2cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00E0
        gbc.setState(0xb81, 0x6b47, 0x2860, 0xf4ab, 0x831c, 0xd7e7, 0x1, 0x1);
        gbc.writeMem(0xb81, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6b47, gbc.sp());
        EXPECT(0xb83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00E1
        gbc.setState(0x19cb, 0xa82e, 0xc3b0, 0x74cf, 0x6c78, 0x470c, 0x0, 0x1);
        gbc.writeMem(0x19cb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa82e, gbc.sp());
        EXPECT(0x19cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00E2
        gbc.setState(0x9a7c, 0xbe6e, 0x6170, 0xea0, 0xa809, 0x4bc7, 0x1, 0x1);
        gbc.writeMem(0x9a7c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbe6e, gbc.sp());
        EXPECT(0x9a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a7c));
        EXPECT(0x9, gbc.readMem(0x9a7d));
        // CB 09 00E3
        gbc.setState(0x6bc9, 0x8da2, 0xbc30, 0xfbbb, 0xbe93, 0x3335, 0x1, 0x1);
        gbc.writeMem(0x6bc9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8da2, gbc.sp());
        EXPECT(0x6bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00E4
        gbc.setState(0xa88d, 0xe83e, 0x3040, 0x16ea, 0x10f7, 0x1890, 0x1, 0x1);
        gbc.writeMem(0xa88d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe83e, gbc.sp());
        EXPECT(0xa88f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88d));
        EXPECT(0x9, gbc.readMem(0xa88e));
        // CB 09 00E5
        gbc.setState(0x5904, 0x2be9, 0x7ae0, 0x7e67, 0xd129, 0x464d, 0x1, 0x1);
        gbc.writeMem(0x5904, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2be9, gbc.sp());
        EXPECT(0x5906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00E6
        gbc.setState(0x9299, 0x649, 0x1900, 0xd3b2, 0x5f17, 0xf2c9, 0x1, 0x1);
        gbc.writeMem(0x9299, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x649, gbc.sp());
        EXPECT(0x929b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9299));
        EXPECT(0x9, gbc.readMem(0x929a));
        // CB 09 00E7
        gbc.setState(0x7863, 0x6605, 0xcb70, 0xb33f, 0x2acc, 0x687a, 0x0, 0x0);
        gbc.writeMem(0x7863, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6605, gbc.sp());
        EXPECT(0x7865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00E8
        gbc.setState(0x91cc, 0xb486, 0x75d0, 0x528c, 0xf98, 0xe8e1, 0x1, 0x0);
        gbc.writeMem(0x91cc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb486, gbc.sp());
        EXPECT(0x91ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91cc));
        EXPECT(0x9, gbc.readMem(0x91cd));
        // CB 09 00E9
        gbc.setState(0x2616, 0x42ab, 0xeb10, 0xb7a3, 0x7329, 0xf22e, 0x0, 0x1);
        gbc.writeMem(0x2616, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x42ab, gbc.sp());
        EXPECT(0x2618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00EA
        gbc.setState(0x5426, 0x8c62, 0xadc0, 0x6cb5, 0xfb41, 0x64bf, 0x0, 0x0);
        gbc.writeMem(0x5426, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8c62, gbc.sp());
        EXPECT(0x5428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00EB
        gbc.setState(0xdda4, 0xbde9, 0x86d0, 0x1b7b, 0xb883, 0xda2d, 0x0, 0x1);
        gbc.writeMem(0xdda4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbde9, gbc.sp());
        EXPECT(0xdda6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda4));
        EXPECT(0x9, gbc.readMem(0xdda5));
        // CB 09 00EC
        gbc.setState(0xca0d, 0x5c2a, 0x7ef0, 0x3fa2, 0xdc0c, 0x8787, 0x0, 0x0);
        gbc.writeMem(0xca0d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5c2a, gbc.sp());
        EXPECT(0xca0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca0d));
        EXPECT(0x9, gbc.readMem(0xca0e));
        // CB 09 00ED
        gbc.setState(0xe47, 0x555e, 0x7b80, 0xef5a, 0x8b10, 0xf4c7, 0x1, 0x0);
        gbc.writeMem(0xe47, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x555e, gbc.sp());
        EXPECT(0xe49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00EE
        gbc.setState(0xb4b0, 0x9f93, 0x2910, 0x65a3, 0x7ecd, 0x27e7, 0x0, 0x0);
        gbc.writeMem(0xb4b0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9f93, gbc.sp());
        EXPECT(0xb4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b0));
        EXPECT(0x9, gbc.readMem(0xb4b1));
        // CB 09 00EF
        gbc.setState(0x97b1, 0x5633, 0xf00, 0xea98, 0x7470, 0x7a1f, 0x0, 0x0);
        gbc.writeMem(0x97b1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5633, gbc.sp());
        EXPECT(0x97b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b1));
        EXPECT(0x9, gbc.readMem(0x97b2));
        // CB 09 00F0
        gbc.setState(0x733b, 0x8430, 0x1b60, 0x26b2, 0xa052, 0x5c6b, 0x1, 0x0);
        gbc.writeMem(0x733b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8430, gbc.sp());
        EXPECT(0x733d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00F1
        gbc.setState(0xcd1b, 0x1114, 0xba80, 0x778, 0x6f68, 0x757f, 0x1, 0x0);
        gbc.writeMem(0xcd1b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1114, gbc.sp());
        EXPECT(0xcd1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd1b));
        EXPECT(0x9, gbc.readMem(0xcd1c));
        // CB 09 00F2
        gbc.setState(0x7ad8, 0x19f1, 0x8280, 0xae98, 0x26b, 0x3e71, 0x1, 0x1);
        gbc.writeMem(0x7ad8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x19f1, gbc.sp());
        EXPECT(0x7ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00F3
        gbc.setState(0xe20d, 0x5bcd, 0xa130, 0xb4db, 0xa91f, 0xb0ad, 0x0, 0x0);
        gbc.writeMem(0xe20d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5bcd, gbc.sp());
        EXPECT(0xe20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20d));
        EXPECT(0x9, gbc.readMem(0xe20e));
        // CB 09 00F4
        gbc.setState(0x9608, 0xa7c9, 0xa1e0, 0x3c32, 0x6a3d, 0xee4e, 0x0, 0x0);
        gbc.writeMem(0x9608, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa7c9, gbc.sp());
        EXPECT(0x960a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9608));
        EXPECT(0x9, gbc.readMem(0x9609));
        // CB 09 00F5
        gbc.setState(0x1cd8, 0x585e, 0xd5f0, 0x903f, 0x7bb5, 0xcf81, 0x1, 0x0);
        gbc.writeMem(0x1cd8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x585e, gbc.sp());
        EXPECT(0x1cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00F6
        gbc.setState(0x4f0c, 0x80c3, 0x910, 0xb382, 0xd554, 0xa09d, 0x0, 0x1);
        gbc.writeMem(0x4f0c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x80c3, gbc.sp());
        EXPECT(0x4f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00F7
        gbc.setState(0x1883, 0x8dc7, 0x3470, 0x953e, 0xdb46, 0x68c3, 0x0, 0x1);
        gbc.writeMem(0x1883, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8dc7, gbc.sp());
        EXPECT(0x1885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00F8
        gbc.setState(0xe04b, 0x54f7, 0xcff0, 0x6465, 0xae2d, 0xeb7f, 0x0, 0x0);
        gbc.writeMem(0xe04b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x54f7, gbc.sp());
        EXPECT(0xe04d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe04b));
        EXPECT(0x9, gbc.readMem(0xe04c));
        // CB 09 00F9
        gbc.setState(0xae, 0xcf47, 0x2f50, 0x3ac9, 0x1348, 0xfee7, 0x0, 0x0);
        gbc.writeMem(0xae, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcf47, gbc.sp());
        EXPECT(0xb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00FA
        gbc.setState(0x5c1, 0x637d, 0xd3f0, 0xe1cf, 0x877c, 0x6055, 0x1, 0x1);
        gbc.writeMem(0x5c1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x637d, gbc.sp());
        EXPECT(0x5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 00FB
        gbc.setState(0xbd61, 0xfa30, 0xd090, 0xc6fc, 0xa275, 0xb5e, 0x0, 0x0);
        gbc.writeMem(0xbd61, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfa30, gbc.sp());
        EXPECT(0xbd63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd61));
        EXPECT(0x9, gbc.readMem(0xbd62));
        // CB 09 00FC
        gbc.setState(0x8582, 0xf206, 0x42d0, 0x6580, 0x8d39, 0xde76, 0x0, 0x0);
        gbc.writeMem(0x8582, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf206, gbc.sp());
        EXPECT(0x8584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8582));
        EXPECT(0x9, gbc.readMem(0x8583));
        // CB 09 00FD
        gbc.setState(0x346d, 0xe36, 0xd420, 0xa0d4, 0x3958, 0x4ccd, 0x0, 0x0);
        gbc.writeMem(0x346d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe36, gbc.sp());
        EXPECT(0x346f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00FE
        gbc.setState(0x7dca, 0x9b74, 0xf9f0, 0x701c, 0x511d, 0xc310, 0x1, 0x1);
        gbc.writeMem(0x7dca, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9b74, gbc.sp());
        EXPECT(0x7dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 00FF
        gbc.setState(0x3812, 0x8f8b, 0x1b30, 0x9ba1, 0x59ee, 0xdd79, 0x0, 0x1);
        gbc.writeMem(0x3812, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8f8b, gbc.sp());
        EXPECT(0x3814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0100
        gbc.setState(0xabfa, 0x5014, 0x52a0, 0x6d5d, 0x5fd6, 0x42f7, 0x1, 0x0);
        gbc.writeMem(0xabfa, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5014, gbc.sp());
        EXPECT(0xabfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabfa));
        EXPECT(0x9, gbc.readMem(0xabfb));
        // CB 09 0101
        gbc.setState(0xa71, 0xe2e4, 0x52c0, 0x3eec, 0xca8e, 0xcad, 0x1, 0x1);
        gbc.writeMem(0xa71, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe2e4, gbc.sp());
        EXPECT(0xa73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0102
        gbc.setState(0x8c2c, 0xc2a3, 0x4740, 0x6caa, 0x2270, 0xd512, 0x1, 0x1);
        gbc.writeMem(0x8c2c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc2a3, gbc.sp());
        EXPECT(0x8c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c2c));
        EXPECT(0x9, gbc.readMem(0x8c2d));
        // CB 09 0103
        gbc.setState(0x362d, 0x1115, 0x4b40, 0xf017, 0x4f8a, 0xccdc, 0x0, 0x1);
        gbc.writeMem(0x362d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1115, gbc.sp());
        EXPECT(0x362f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0104
        gbc.setState(0x98f4, 0xca21, 0xdeb0, 0x4d35, 0xe0d2, 0xde28, 0x1, 0x1);
        gbc.writeMem(0x98f4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xca21, gbc.sp());
        EXPECT(0x98f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f4));
        EXPECT(0x9, gbc.readMem(0x98f5));
        // CB 09 0105
        gbc.setState(0xc477, 0x37fe, 0x82a0, 0x5cb6, 0xdcba, 0x2d1a, 0x0, 0x0);
        gbc.writeMem(0xc477, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x37fe, gbc.sp());
        EXPECT(0xc479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc477));
        EXPECT(0x9, gbc.readMem(0xc478));
        // CB 09 0106
        gbc.setState(0x1e3a, 0x1e70, 0x38f0, 0x52f6, 0x143d, 0x7851, 0x0, 0x0);
        gbc.writeMem(0x1e3a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1e70, gbc.sp());
        EXPECT(0x1e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0108
        gbc.setState(0x88db, 0x44dc, 0x7e20, 0x9d8a, 0x17d6, 0x8924, 0x0, 0x0);
        gbc.writeMem(0x88db, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x44dc, gbc.sp());
        EXPECT(0x88dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88db));
        EXPECT(0x9, gbc.readMem(0x88dc));
        // CB 09 0109
        gbc.setState(0x5264, 0xfd9, 0x68b0, 0x1d79, 0xf400, 0xd3ef, 0x1, 0x1);
        gbc.writeMem(0x5264, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfd9, gbc.sp());
        EXPECT(0x5266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 010B
        gbc.setState(0xb1e9, 0xc024, 0x8170, 0x22da, 0xc7ad, 0x56a7, 0x1, 0x0);
        gbc.writeMem(0xb1e9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc024, gbc.sp());
        EXPECT(0xb1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e9));
        EXPECT(0x9, gbc.readMem(0xb1ea));
        // CB 09 010C
        gbc.setState(0x23d0, 0x6f52, 0x51d0, 0xf810, 0x5e1a, 0x3672, 0x1, 0x1);
        gbc.writeMem(0x23d0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6f52, gbc.sp());
        EXPECT(0x23d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 010D
        gbc.setState(0xd1f3, 0xb6c8, 0xd690, 0xea93, 0x5c3e, 0xa44, 0x1, 0x1);
        gbc.writeMem(0xd1f3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb6c8, gbc.sp());
        EXPECT(0xd1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f3));
        EXPECT(0x9, gbc.readMem(0xd1f4));
        // CB 09 010E
        gbc.setState(0xb3af, 0x8efe, 0x59a0, 0x8d83, 0x2332, 0x721, 0x1, 0x0);
        gbc.writeMem(0xb3af, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8efe, gbc.sp());
        EXPECT(0xb3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3af));
        EXPECT(0x9, gbc.readMem(0xb3b0));
        // CB 09 010F
        gbc.setState(0x46fb, 0x6429, 0xb850, 0x27e4, 0x6f62, 0x71fe, 0x0, 0x1);
        gbc.writeMem(0x46fb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6429, gbc.sp());
        EXPECT(0x46fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0110
        gbc.setState(0xad8c, 0xbaa0, 0xd720, 0x6adb, 0x7171, 0x2681, 0x0, 0x0);
        gbc.writeMem(0xad8c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbaa0, gbc.sp());
        EXPECT(0xad8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad8c));
        EXPECT(0x9, gbc.readMem(0xad8d));
        // CB 09 0111
        gbc.setState(0xb756, 0x3f26, 0x7f00, 0xea60, 0xeb64, 0x9fdc, 0x0, 0x1);
        gbc.writeMem(0xb756, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3f26, gbc.sp());
        EXPECT(0xb758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb756));
        EXPECT(0x9, gbc.readMem(0xb757));
        // CB 09 0112
        gbc.setState(0x619b, 0xbba1, 0x8dd0, 0xd508, 0x9ee9, 0x2702, 0x0, 0x0);
        gbc.writeMem(0x619b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbba1, gbc.sp());
        EXPECT(0x619d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0113
        gbc.setState(0x640d, 0x2c90, 0x5730, 0x26eb, 0xa54e, 0xe323, 0x1, 0x0);
        gbc.writeMem(0x640d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2c90, gbc.sp());
        EXPECT(0x640f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0114
        gbc.setState(0xea4c, 0x6ca0, 0x5f70, 0xbb6f, 0x8b35, 0x13b9, 0x0, 0x1);
        gbc.writeMem(0xea4c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6ca0, gbc.sp());
        EXPECT(0xea4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea4c));
        EXPECT(0x9, gbc.readMem(0xea4d));
        // CB 09 0115
        gbc.setState(0xc52c, 0x1f3b, 0xad00, 0x1b16, 0x2855, 0x46f9, 0x1, 0x0);
        gbc.writeMem(0xc52c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1f3b, gbc.sp());
        EXPECT(0xc52e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc52c));
        EXPECT(0x9, gbc.readMem(0xc52d));
        // CB 09 0116
        gbc.setState(0x2f84, 0xee31, 0xf530, 0x3ed1, 0xc609, 0xbf33, 0x0, 0x1);
        gbc.writeMem(0x2f84, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xee31, gbc.sp());
        EXPECT(0x2f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0117
        gbc.setState(0x8066, 0xbb47, 0xc180, 0xa2f3, 0x3ea1, 0x83c5, 0x0, 0x1);
        gbc.writeMem(0x8066, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbb47, gbc.sp());
        EXPECT(0x8068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8066));
        EXPECT(0x9, gbc.readMem(0x8067));
        // CB 09 0118
        gbc.setState(0x9dc6, 0x628d, 0x39d0, 0x42d1, 0x3885, 0x473a, 0x1, 0x1);
        gbc.writeMem(0x9dc6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x628d, gbc.sp());
        EXPECT(0x9dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc6));
        EXPECT(0x9, gbc.readMem(0x9dc7));
        // CB 09 0119
        gbc.setState(0x68eb, 0xe147, 0xc1c0, 0x9f35, 0x76d5, 0xfca1, 0x0, 0x0);
        gbc.writeMem(0x68eb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe147, gbc.sp());
        EXPECT(0x68ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 011B
        gbc.setState(0x651d, 0x4338, 0x1e50, 0x47c2, 0x1b0b, 0x28f4, 0x1, 0x0);
        gbc.writeMem(0x651d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4338, gbc.sp());
        EXPECT(0x651f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 011C
        gbc.setState(0x4a32, 0x7ad, 0x6d20, 0x16bb, 0x647d, 0x52b9, 0x1, 0x1);
        gbc.writeMem(0x4a32, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7ad, gbc.sp());
        EXPECT(0x4a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 011D
        gbc.setState(0x3e29, 0x7790, 0x330, 0x7230, 0x1456, 0x12df, 0x1, 0x1);
        gbc.writeMem(0x3e29, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7790, gbc.sp());
        EXPECT(0x3e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 011E
        gbc.setState(0x610c, 0x4be, 0x1d30, 0xdca, 0x8e0b, 0x6b03, 0x1, 0x1);
        gbc.writeMem(0x610c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4be, gbc.sp());
        EXPECT(0x610e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 011F
        gbc.setState(0x7064, 0x22e7, 0x79d0, 0x5b25, 0x708b, 0xf0a8, 0x0, 0x1);
        gbc.writeMem(0x7064, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x22e7, gbc.sp());
        EXPECT(0x7066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0120
        gbc.setState(0xed04, 0x9109, 0xbae0, 0x28cf, 0xa762, 0x67db, 0x1, 0x0);
        gbc.writeMem(0xed04, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9109, gbc.sp());
        EXPECT(0xed06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed04));
        EXPECT(0x9, gbc.readMem(0xed05));
        // CB 09 0121
        gbc.setState(0x8c89, 0x757c, 0x22d0, 0x2269, 0x5cfd, 0x19d7, 0x0, 0x0);
        gbc.writeMem(0x8c89, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x757c, gbc.sp());
        EXPECT(0x8c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c89));
        EXPECT(0x9, gbc.readMem(0x8c8a));
        // CB 09 0122
        gbc.setState(0x3ae4, 0xaef5, 0xc50, 0xa645, 0xaaf5, 0x4969, 0x1, 0x0);
        gbc.writeMem(0x3ae4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xaef5, gbc.sp());
        EXPECT(0x3ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0123
        gbc.setState(0xc249, 0x619, 0xde60, 0xf5cf, 0xbeff, 0x5af7, 0x1, 0x0);
        gbc.writeMem(0xc249, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x619, gbc.sp());
        EXPECT(0xc24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc249));
        EXPECT(0x9, gbc.readMem(0xc24a));
        // CB 09 0124
        gbc.setState(0x39fd, 0x3550, 0xdb80, 0x806a, 0xf672, 0x52f8, 0x1, 0x1);
        gbc.writeMem(0x39fd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3550, gbc.sp());
        EXPECT(0x39ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0125
        gbc.setState(0xebfb, 0x6f12, 0xb950, 0x5d2f, 0x4ca2, 0x3517, 0x0, 0x0);
        gbc.writeMem(0xebfb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6f12, gbc.sp());
        EXPECT(0xebfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfb));
        EXPECT(0x9, gbc.readMem(0xebfc));
        // CB 09 0126
        gbc.setState(0xb857, 0x37b9, 0xbab0, 0xee87, 0xc7f2, 0xd4b4, 0x1, 0x1);
        gbc.writeMem(0xb857, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x37b9, gbc.sp());
        EXPECT(0xb859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb857));
        EXPECT(0x9, gbc.readMem(0xb858));
        // CB 09 0127
        gbc.setState(0x18e9, 0x53ad, 0xb440, 0xbc94, 0xdd76, 0xf9bf, 0x0, 0x1);
        gbc.writeMem(0x18e9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x53ad, gbc.sp());
        EXPECT(0x18eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0128
        gbc.setState(0x219, 0x2d16, 0xc330, 0xa84d, 0xa6fe, 0xec5e, 0x0, 0x1);
        gbc.writeMem(0x219, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2d16, gbc.sp());
        EXPECT(0x21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0129
        gbc.setState(0x340f, 0xba85, 0x5290, 0x1cb8, 0x3bff, 0x4d7e, 0x1, 0x1);
        gbc.writeMem(0x340f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xba85, gbc.sp());
        EXPECT(0x3411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 012A
        gbc.setState(0x68bc, 0xc265, 0x63e0, 0x4691, 0x545a, 0x3cb5, 0x0, 0x0);
        gbc.writeMem(0x68bc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc265, gbc.sp());
        EXPECT(0x68be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 012B
        gbc.setState(0x3b3b, 0x72c2, 0x91a0, 0x3b4e, 0xabb2, 0x7f10, 0x1, 0x1);
        gbc.writeMem(0x3b3b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x72c2, gbc.sp());
        EXPECT(0x3b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 012C
        gbc.setState(0xb67a, 0x4f95, 0x44f0, 0x6de2, 0xa9dc, 0x8acc, 0x0, 0x0);
        gbc.writeMem(0xb67a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4f95, gbc.sp());
        EXPECT(0xb67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb67a));
        EXPECT(0x9, gbc.readMem(0xb67b));
        // CB 09 012D
        gbc.setState(0x270, 0xf65, 0x56d0, 0xd47, 0x4d38, 0x9db0, 0x0, 0x1);
        gbc.writeMem(0x270, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf65, gbc.sp());
        EXPECT(0x272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 012E
        gbc.setState(0xdd45, 0x60a1, 0xfcd0, 0x5a95, 0x3156, 0xb9aa, 0x0, 0x1);
        gbc.writeMem(0xdd45, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x60a1, gbc.sp());
        EXPECT(0xdd47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd45));
        EXPECT(0x9, gbc.readMem(0xdd46));
        // CB 09 012F
        gbc.setState(0xc767, 0x8ded, 0xb6a0, 0x4b5, 0xb0be, 0xee80, 0x0, 0x0);
        gbc.writeMem(0xc767, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8ded, gbc.sp());
        EXPECT(0xc769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc767));
        EXPECT(0x9, gbc.readMem(0xc768));
        // CB 09 0130
        gbc.setState(0xa9d, 0xf8b3, 0x7170, 0xa26f, 0x3d2e, 0xd3f9, 0x0, 0x0);
        gbc.writeMem(0xa9d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf8b3, gbc.sp());
        EXPECT(0xa9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0132
        gbc.setState(0xe0da, 0xac6d, 0x5d90, 0xae6e, 0x461d, 0x6f69, 0x0, 0x1);
        gbc.writeMem(0xe0da, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xac6d, gbc.sp());
        EXPECT(0xe0dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0da));
        EXPECT(0x9, gbc.readMem(0xe0db));
        // CB 09 0133
        gbc.setState(0x2b01, 0xd57, 0xb410, 0x43da, 0xc91c, 0xb5bf, 0x1, 0x0);
        gbc.writeMem(0x2b01, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd57, gbc.sp());
        EXPECT(0x2b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0134
        gbc.setState(0xdd5b, 0x982a, 0x37b0, 0xffff, 0x45b0, 0x5d3f, 0x1, 0x1);
        gbc.writeMem(0xdd5b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x982a, gbc.sp());
        EXPECT(0xdd5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd5b));
        EXPECT(0x9, gbc.readMem(0xdd5c));
        // CB 09 0135
        gbc.setState(0x946b, 0x85e9, 0x5ef0, 0x6624, 0x3eed, 0x48a, 0x0, 0x0);
        gbc.writeMem(0x946b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x85e9, gbc.sp());
        EXPECT(0x946d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946b));
        EXPECT(0x9, gbc.readMem(0x946c));
        // CB 09 0136
        gbc.setState(0x25af, 0x91c2, 0x8c60, 0x3e7f, 0x6094, 0x7189, 0x1, 0x1);
        gbc.writeMem(0x25af, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x91c2, gbc.sp());
        EXPECT(0x25b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0137
        gbc.setState(0x884b, 0x48d7, 0x3e90, 0xce, 0x1d7d, 0x9819, 0x1, 0x1);
        gbc.writeMem(0x884b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x48d7, gbc.sp());
        EXPECT(0x884d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884b));
        EXPECT(0x9, gbc.readMem(0x884c));
        // CB 09 0138
        gbc.setState(0x5abd, 0x75f4, 0xd2e0, 0x72c4, 0x57b3, 0x6389, 0x1, 0x1);
        gbc.writeMem(0x5abd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x75f4, gbc.sp());
        EXPECT(0x5abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0139
        gbc.setState(0xc40d, 0x6c36, 0xbf60, 0x2167, 0x2fb5, 0xa5f5, 0x1, 0x1);
        gbc.writeMem(0xc40d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6c36, gbc.sp());
        EXPECT(0xc40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc40d));
        EXPECT(0x9, gbc.readMem(0xc40e));
        // CB 09 013A
        gbc.setState(0xa460, 0x9ac0, 0x67e0, 0xd172, 0x8a5e, 0xdaf6, 0x0, 0x0);
        gbc.writeMem(0xa460, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9ac0, gbc.sp());
        EXPECT(0xa462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa460));
        EXPECT(0x9, gbc.readMem(0xa461));
        // CB 09 013B
        gbc.setState(0x48f7, 0x1025, 0xc70, 0x8148, 0x77c0, 0xddee, 0x1, 0x0);
        gbc.writeMem(0x48f7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1025, gbc.sp());
        EXPECT(0x48f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 013D
        gbc.setState(0xbf2b, 0x45d2, 0xff00, 0x7135, 0x104b, 0xd7ea, 0x0, 0x1);
        gbc.writeMem(0xbf2b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x45d2, gbc.sp());
        EXPECT(0xbf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf2b));
        EXPECT(0x9, gbc.readMem(0xbf2c));
        // CB 09 013E
        gbc.setState(0x22a0, 0xae86, 0x8bd0, 0x4a75, 0xe719, 0x1f46, 0x0, 0x0);
        gbc.writeMem(0x22a0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xae86, gbc.sp());
        EXPECT(0x22a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 013F
        gbc.setState(0x5797, 0x4db2, 0x9ad0, 0xc53d, 0x5a1b, 0x38f0, 0x0, 0x1);
        gbc.writeMem(0x5797, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4db2, gbc.sp());
        EXPECT(0x5799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0140
        gbc.setState(0x8773, 0xa538, 0xc110, 0x5e86, 0xe179, 0xf88a, 0x0, 0x0);
        gbc.writeMem(0x8773, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa538, gbc.sp());
        EXPECT(0x8775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8773));
        EXPECT(0x9, gbc.readMem(0x8774));
        // CB 09 0141
        gbc.setState(0xc346, 0xd3a2, 0x920, 0x6738, 0xed81, 0xb2e3, 0x0, 0x0);
        gbc.writeMem(0xc346, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd3a2, gbc.sp());
        EXPECT(0xc348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc346));
        EXPECT(0x9, gbc.readMem(0xc347));
        // CB 09 0142
        gbc.setState(0x859e, 0xf264, 0x8fe0, 0xc81a, 0xa26e, 0xb9f1, 0x1, 0x0);
        gbc.writeMem(0x859e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf264, gbc.sp());
        EXPECT(0x85a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x859e));
        EXPECT(0x9, gbc.readMem(0x859f));
        // CB 09 0143
        gbc.setState(0xe044, 0x4f56, 0xf070, 0x72f7, 0xeb02, 0xd467, 0x1, 0x0);
        gbc.writeMem(0xe044, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4f56, gbc.sp());
        EXPECT(0xe046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe044));
        EXPECT(0x9, gbc.readMem(0xe045));
        // CB 09 0144
        gbc.setState(0x8265, 0xd68, 0x15d0, 0x8868, 0xaf7a, 0x8f5e, 0x0, 0x1);
        gbc.writeMem(0x8265, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd68, gbc.sp());
        EXPECT(0x8267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8265));
        EXPECT(0x9, gbc.readMem(0x8266));
        // CB 09 0145
        gbc.setState(0x1b6e, 0xd198, 0xbbe0, 0x361d, 0xab7c, 0x6ffb, 0x1, 0x1);
        gbc.writeMem(0x1b6e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd198, gbc.sp());
        EXPECT(0x1b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0146
        gbc.setState(0x79d9, 0x9531, 0x9610, 0x1d2b, 0x1477, 0x3c15, 0x1, 0x1);
        gbc.writeMem(0x79d9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9531, gbc.sp());
        EXPECT(0x79db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0147
        gbc.setState(0x32a2, 0x7cee, 0x33a0, 0x910d, 0xefc5, 0x5776, 0x0, 0x0);
        gbc.writeMem(0x32a2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7cee, gbc.sp());
        EXPECT(0x32a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0148
        gbc.setState(0x9600, 0x2ef8, 0x2810, 0x2566, 0x967c, 0x8545, 0x0, 0x1);
        gbc.writeMem(0x9600, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2ef8, gbc.sp());
        EXPECT(0x9602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9600));
        EXPECT(0x9, gbc.readMem(0x9601));
        // CB 09 0149
        gbc.setState(0xc94e, 0x7ffe, 0x7f0, 0x8f5b, 0x8b3c, 0xd7a0, 0x1, 0x0);
        gbc.writeMem(0xc94e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7ffe, gbc.sp());
        EXPECT(0xc950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94e));
        EXPECT(0x9, gbc.readMem(0xc94f));
        // CB 09 014A
        gbc.setState(0x41e8, 0x2ea9, 0xae10, 0x6bac, 0xda48, 0x724a, 0x1, 0x1);
        gbc.writeMem(0x41e8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2ea9, gbc.sp());
        EXPECT(0x41ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 014B
        gbc.setState(0xaf96, 0x1ed4, 0x9e10, 0xdaf1, 0xd1e1, 0xed5c, 0x0, 0x1);
        gbc.writeMem(0xaf96, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1ed4, gbc.sp());
        EXPECT(0xaf98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf96));
        EXPECT(0x9, gbc.readMem(0xaf97));
        // CB 09 014C
        gbc.setState(0x3d4c, 0xbfd6, 0x7630, 0x8959, 0xa396, 0x9bda, 0x1, 0x0);
        gbc.writeMem(0x3d4c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbfd6, gbc.sp());
        EXPECT(0x3d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 014D
        gbc.setState(0x54a0, 0xa604, 0xd3c0, 0x26a, 0xc8cf, 0x386c, 0x0, 0x0);
        gbc.writeMem(0x54a0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa604, gbc.sp());
        EXPECT(0x54a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 014E
        gbc.setState(0x7b60, 0xf211, 0x4130, 0x9931, 0x4b0f, 0xd444, 0x1, 0x1);
        gbc.writeMem(0x7b60, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf211, gbc.sp());
        EXPECT(0x7b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0150
        gbc.setState(0x8721, 0x91a5, 0x4590, 0xe70a, 0xd1a1, 0x90b5, 0x1, 0x0);
        gbc.writeMem(0x8721, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x91a5, gbc.sp());
        EXPECT(0x8723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8721));
        EXPECT(0x9, gbc.readMem(0x8722));
        // CB 09 0151
        gbc.setState(0x1bb1, 0xa39c, 0x4e80, 0xe80b, 0xaf6e, 0x8aa3, 0x0, 0x1);
        gbc.writeMem(0x1bb1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa39c, gbc.sp());
        EXPECT(0x1bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0152
        gbc.setState(0x8400, 0x75b3, 0xb0e0, 0x2826, 0xd23b, 0xfae9, 0x1, 0x1);
        gbc.writeMem(0x8400, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x75b3, gbc.sp());
        EXPECT(0x8402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8400));
        EXPECT(0x9, gbc.readMem(0x8401));
        // CB 09 0153
        gbc.setState(0xdfb8, 0x4cfe, 0xb4a0, 0x9e93, 0xbc27, 0x7b90, 0x0, 0x0);
        gbc.writeMem(0xdfb8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4cfe, gbc.sp());
        EXPECT(0xdfba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb8));
        EXPECT(0x9, gbc.readMem(0xdfb9));
        // CB 09 0154
        gbc.setState(0x89a8, 0xdb33, 0x5050, 0x8aa, 0x68a3, 0x7da1, 0x0, 0x1);
        gbc.writeMem(0x89a8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdb33, gbc.sp());
        EXPECT(0x89aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a8));
        EXPECT(0x9, gbc.readMem(0x89a9));
        // CB 09 0155
        gbc.setState(0x8216, 0x3737, 0x98c0, 0x5505, 0x5814, 0x4106, 0x1, 0x0);
        gbc.writeMem(0x8216, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3737, gbc.sp());
        EXPECT(0x8218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8216));
        EXPECT(0x9, gbc.readMem(0x8217));
        // CB 09 0156
        gbc.setState(0xb964, 0xf4c9, 0x6af0, 0x5603, 0xb57c, 0x2576, 0x0, 0x0);
        gbc.writeMem(0xb964, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf4c9, gbc.sp());
        EXPECT(0xb966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb964));
        EXPECT(0x9, gbc.readMem(0xb965));
        // CB 09 0157
        gbc.setState(0x7d61, 0x6144, 0x5690, 0x7c35, 0xe74f, 0xc2f5, 0x0, 0x0);
        gbc.writeMem(0x7d61, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6144, gbc.sp());
        EXPECT(0x7d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0158
        gbc.setState(0xefd7, 0x6920, 0x9ee0, 0x2e1, 0xe605, 0x6957, 0x1, 0x0);
        gbc.writeMem(0xefd7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6920, gbc.sp());
        EXPECT(0xefd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd7));
        EXPECT(0x9, gbc.readMem(0xefd8));
        // CB 09 0159
        gbc.setState(0xc9c0, 0xbe41, 0x5d30, 0x74bf, 0xe1ce, 0x8, 0x1, 0x0);
        gbc.writeMem(0xc9c0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbe41, gbc.sp());
        EXPECT(0xc9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c0));
        EXPECT(0x9, gbc.readMem(0xc9c1));
        // CB 09 015A
        gbc.setState(0x17d7, 0x6639, 0x4530, 0x4305, 0x6b04, 0xea64, 0x0, 0x0);
        gbc.writeMem(0x17d7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6639, gbc.sp());
        EXPECT(0x17d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 015B
        gbc.setState(0x265d, 0x36e8, 0x5b40, 0x2289, 0x6a08, 0xe2e2, 0x0, 0x1);
        gbc.writeMem(0x265d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x36e8, gbc.sp());
        EXPECT(0x265f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 015C
        gbc.setState(0x40cb, 0x2591, 0x2270, 0x6067, 0xc4f6, 0xfed2, 0x1, 0x1);
        gbc.writeMem(0x40cb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2591, gbc.sp());
        EXPECT(0x40cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 015D
        gbc.setState(0x18cc, 0xc7b0, 0xe3f0, 0xf13f, 0x12da, 0x5af5, 0x0, 0x0);
        gbc.writeMem(0x18cc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc7b0, gbc.sp());
        EXPECT(0x18ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 015E
        gbc.setState(0xd706, 0x6a61, 0xc340, 0x37e2, 0x505a, 0x9bf7, 0x1, 0x0);
        gbc.writeMem(0xd706, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6a61, gbc.sp());
        EXPECT(0xd708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd706));
        EXPECT(0x9, gbc.readMem(0xd707));
        // CB 09 015F
        gbc.setState(0x4914, 0xc378, 0x8380, 0xe9b0, 0x9e5a, 0x88b3, 0x1, 0x1);
        gbc.writeMem(0x4914, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc378, gbc.sp());
        EXPECT(0x4916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0160
        gbc.setState(0x79de, 0xdfbc, 0x83d0, 0xa2c, 0xabfd, 0xceda, 0x1, 0x0);
        gbc.writeMem(0x79de, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdfbc, gbc.sp());
        EXPECT(0x79e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0161
        gbc.setState(0x6dab, 0x3529, 0xb360, 0xfc03, 0xb93, 0x65e2, 0x0, 0x1);
        gbc.writeMem(0x6dab, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3529, gbc.sp());
        EXPECT(0x6dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0162
        gbc.setState(0x699, 0x29eb, 0xb020, 0x7a93, 0x64c5, 0xa2c3, 0x1, 0x0);
        gbc.writeMem(0x699, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x29eb, gbc.sp());
        EXPECT(0x69b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0163
        gbc.setState(0x783c, 0xb402, 0xabb0, 0x4c18, 0xdedc, 0xd270, 0x1, 0x0);
        gbc.writeMem(0x783c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb402, gbc.sp());
        EXPECT(0x783e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0164
        gbc.setState(0x77b, 0xffe, 0x8c80, 0xacfb, 0x165f, 0x5bdc, 0x1, 0x1);
        gbc.writeMem(0x77b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xffe, gbc.sp());
        EXPECT(0x77d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0165
        gbc.setState(0x5197, 0xe725, 0x5b20, 0xfa59, 0xdce6, 0x2c01, 0x1, 0x0);
        gbc.writeMem(0x5197, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe725, gbc.sp());
        EXPECT(0x5199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0166
        gbc.setState(0x9669, 0x17ea, 0x8c40, 0x5957, 0x5e3a, 0x30bb, 0x0, 0x1);
        gbc.writeMem(0x9669, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x17ea, gbc.sp());
        EXPECT(0x966b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9669));
        EXPECT(0x9, gbc.readMem(0x966a));
        // CB 09 0167
        gbc.setState(0x4e71, 0xd02e, 0xb370, 0x74f1, 0xd7b5, 0x8d5a, 0x1, 0x1);
        gbc.writeMem(0x4e71, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd02e, gbc.sp());
        EXPECT(0x4e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0168
        gbc.setState(0x51c4, 0xb154, 0x7140, 0xbaa4, 0xa08a, 0x94fa, 0x1, 0x1);
        gbc.writeMem(0x51c4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb154, gbc.sp());
        EXPECT(0x51c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0169
        gbc.setState(0xe559, 0x4216, 0xf8c0, 0xa061, 0xfb05, 0xd842, 0x0, 0x0);
        gbc.writeMem(0xe559, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4216, gbc.sp());
        EXPECT(0xe55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe559));
        EXPECT(0x9, gbc.readMem(0xe55a));
        // CB 09 016A
        gbc.setState(0xabe2, 0x5d0b, 0x4140, 0x3cfd, 0x9a96, 0xdd39, 0x0, 0x1);
        gbc.writeMem(0xabe2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5d0b, gbc.sp());
        EXPECT(0xabe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe2));
        EXPECT(0x9, gbc.readMem(0xabe3));
        // CB 09 016B
        gbc.setState(0xa717, 0x2054, 0xb120, 0xe5f7, 0x4303, 0x2f39, 0x1, 0x0);
        gbc.writeMem(0xa717, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2054, gbc.sp());
        EXPECT(0xa719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa717));
        EXPECT(0x9, gbc.readMem(0xa718));
        // CB 09 016C
        gbc.setState(0x654d, 0x7bf7, 0xdf80, 0x6159, 0x78a5, 0x8b96, 0x1, 0x1);
        gbc.writeMem(0x654d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7bf7, gbc.sp());
        EXPECT(0x654f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 016D
        gbc.setState(0x7a6a, 0x466a, 0x8de0, 0x53cf, 0x32f, 0xb2d1, 0x0, 0x1);
        gbc.writeMem(0x7a6a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x466a, gbc.sp());
        EXPECT(0x7a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 016E
        gbc.setState(0x9693, 0x53bf, 0x7640, 0xa049, 0x1aeb, 0x6d1c, 0x1, 0x1);
        gbc.writeMem(0x9693, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x53bf, gbc.sp());
        EXPECT(0x9695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9693));
        EXPECT(0x9, gbc.readMem(0x9694));
        // CB 09 0170
        gbc.setState(0x3c75, 0xa20f, 0xb230, 0x85d5, 0xf030, 0x1b68, 0x0, 0x0);
        gbc.writeMem(0x3c75, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa20f, gbc.sp());
        EXPECT(0x3c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0171
        gbc.setState(0xef16, 0xad3b, 0xa630, 0x4454, 0x453d, 0x94b7, 0x0, 0x1);
        gbc.writeMem(0xef16, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xad3b, gbc.sp());
        EXPECT(0xef18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef16));
        EXPECT(0x9, gbc.readMem(0xef17));
        // CB 09 0172
        gbc.setState(0x8ac0, 0xc250, 0x7f80, 0x2ce, 0x5d8, 0xe24, 0x1, 0x0);
        gbc.writeMem(0x8ac0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc250, gbc.sp());
        EXPECT(0x8ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac0));
        EXPECT(0x9, gbc.readMem(0x8ac1));
        // CB 09 0173
        gbc.setState(0x3f74, 0x84bd, 0xe780, 0x81a4, 0x2598, 0x9ab9, 0x1, 0x1);
        gbc.writeMem(0x3f74, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x84bd, gbc.sp());
        EXPECT(0x3f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0174
        gbc.setState(0xece4, 0xd14f, 0x93c0, 0xe49c, 0x314c, 0xc0c6, 0x1, 0x0);
        gbc.writeMem(0xece4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd14f, gbc.sp());
        EXPECT(0xece6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece4));
        EXPECT(0x9, gbc.readMem(0xece5));
        // CB 09 0176
        gbc.setState(0x56bc, 0xfb55, 0x8bd0, 0x93cf, 0xb562, 0xab5a, 0x0, 0x0);
        gbc.writeMem(0x56bc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfb55, gbc.sp());
        EXPECT(0x56be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0177
        gbc.setState(0xd69f, 0x7553, 0xc510, 0xb795, 0xc304, 0x7ce1, 0x0, 0x1);
        gbc.writeMem(0xd69f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7553, gbc.sp());
        EXPECT(0xd6a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69f));
        EXPECT(0x9, gbc.readMem(0xd6a0));
        // CB 09 0178
        gbc.setState(0x638f, 0x25de, 0x5f00, 0x6d1d, 0xc861, 0xc9f8, 0x1, 0x0);
        gbc.writeMem(0x638f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x25de, gbc.sp());
        EXPECT(0x6391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0179
        gbc.setState(0x88f7, 0x68d2, 0xa990, 0x8f5, 0x16b, 0xca2c, 0x0, 0x0);
        gbc.writeMem(0x88f7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x68d2, gbc.sp());
        EXPECT(0x88f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f7));
        EXPECT(0x9, gbc.readMem(0x88f8));
        // CB 09 017A
        gbc.setState(0xd3ee, 0xc768, 0x68c0, 0xc1b8, 0x9c1f, 0xc63, 0x1, 0x1);
        gbc.writeMem(0xd3ee, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc768, gbc.sp());
        EXPECT(0xd3f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ee));
        EXPECT(0x9, gbc.readMem(0xd3ef));
        // CB 09 017B
        gbc.setState(0xd430, 0x92e1, 0xf5b0, 0x9191, 0xf8b3, 0xf96, 0x0, 0x0);
        gbc.writeMem(0xd430, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x92e1, gbc.sp());
        EXPECT(0xd432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd430));
        EXPECT(0x9, gbc.readMem(0xd431));
        // CB 09 017C
        gbc.setState(0x4841, 0x6bb3, 0xf530, 0xa176, 0xa54a, 0x27cb, 0x1, 0x1);
        gbc.writeMem(0x4841, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6bb3, gbc.sp());
        EXPECT(0x4843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 017D
        gbc.setState(0x7adc, 0x9931, 0xbbe0, 0xdb1, 0xc251, 0x2698, 0x0, 0x0);
        gbc.writeMem(0x7adc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9931, gbc.sp());
        EXPECT(0x7ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 017E
        gbc.setState(0xeb8f, 0xc43b, 0x8660, 0x6557, 0x48a8, 0x6302, 0x1, 0x0);
        gbc.writeMem(0xeb8f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc43b, gbc.sp());
        EXPECT(0xeb91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8f));
        EXPECT(0x9, gbc.readMem(0xeb90));
        // CB 09 017F
        gbc.setState(0x79e5, 0x2a66, 0xb7b0, 0x3a2d, 0xadbf, 0x6452, 0x0, 0x0);
        gbc.writeMem(0x79e5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2a66, gbc.sp());
        EXPECT(0x79e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0180
        gbc.setState(0xe744, 0x7d77, 0x7dd0, 0x3162, 0xdeb6, 0x4319, 0x1, 0x1);
        gbc.writeMem(0xe744, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7d77, gbc.sp());
        EXPECT(0xe746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe744));
        EXPECT(0x9, gbc.readMem(0xe745));
        // CB 09 0181
        gbc.setState(0xd328, 0x8883, 0x5910, 0xe5c6, 0xdda6, 0x238f, 0x0, 0x0);
        gbc.writeMem(0xd328, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8883, gbc.sp());
        EXPECT(0xd32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd328));
        EXPECT(0x9, gbc.readMem(0xd329));
        // CB 09 0182
        gbc.setState(0x1f35, 0x6add, 0xdcf0, 0x313, 0xfae6, 0x744b, 0x0, 0x0);
        gbc.writeMem(0x1f35, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6add, gbc.sp());
        EXPECT(0x1f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0183
        gbc.setState(0xe10, 0x8c60, 0xa3e0, 0xd74f, 0x8829, 0xd1c2, 0x1, 0x0);
        gbc.writeMem(0xe10, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8c60, gbc.sp());
        EXPECT(0xe12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0184
        gbc.setState(0x610f, 0xfbf1, 0x8dc0, 0x3526, 0x97c, 0xb677, 0x0, 0x0);
        gbc.writeMem(0x610f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfbf1, gbc.sp());
        EXPECT(0x6111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0185
        gbc.setState(0x9b83, 0xdb71, 0x3400, 0x8fa6, 0xf424, 0x3eaa, 0x0, 0x0);
        gbc.writeMem(0x9b83, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdb71, gbc.sp());
        EXPECT(0x9b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b83));
        EXPECT(0x9, gbc.readMem(0x9b84));
        // CB 09 0186
        gbc.setState(0x6354, 0xbcc1, 0x9410, 0xaaf3, 0xb90b, 0x7efb, 0x1, 0x1);
        gbc.writeMem(0x6354, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbcc1, gbc.sp());
        EXPECT(0x6356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0187
        gbc.setState(0x267f, 0x15cd, 0x34d0, 0x9bed, 0x9b93, 0xf2b7, 0x0, 0x1);
        gbc.writeMem(0x267f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x15cd, gbc.sp());
        EXPECT(0x2681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0188
        gbc.setState(0x5b14, 0x681e, 0xe890, 0x4465, 0x756d, 0xce5f, 0x0, 0x1);
        gbc.writeMem(0x5b14, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x681e, gbc.sp());
        EXPECT(0x5b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0189
        gbc.setState(0x41b0, 0x58d3, 0xe060, 0x4caa, 0xe630, 0x4261, 0x0, 0x1);
        gbc.writeMem(0x41b0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x58d3, gbc.sp());
        EXPECT(0x41b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 018A
        gbc.setState(0xaecd, 0xa86e, 0xa700, 0xd3f3, 0x7e28, 0x3720, 0x0, 0x1);
        gbc.writeMem(0xaecd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa86e, gbc.sp());
        EXPECT(0xaecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaecd));
        EXPECT(0x9, gbc.readMem(0xaece));
        // CB 09 018B
        gbc.setState(0x3f87, 0xa19f, 0x6050, 0x8149, 0x782b, 0x6e8, 0x1, 0x0);
        gbc.writeMem(0x3f87, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa19f, gbc.sp());
        EXPECT(0x3f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 018C
        gbc.setState(0x6126, 0xcce0, 0xcb10, 0xaf38, 0xc3b, 0xd602, 0x0, 0x1);
        gbc.writeMem(0x6126, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcce0, gbc.sp());
        EXPECT(0x6128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 018D
        gbc.setState(0xbd3d, 0xc588, 0x7d00, 0x56bc, 0x19ec, 0xe84f, 0x0, 0x0);
        gbc.writeMem(0xbd3d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc588, gbc.sp());
        EXPECT(0xbd3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd3d));
        EXPECT(0x9, gbc.readMem(0xbd3e));
        // CB 09 018E
        gbc.setState(0x4f96, 0x9e, 0x2bf0, 0xc3a4, 0x4a02, 0x1344, 0x0, 0x0);
        gbc.writeMem(0x4f96, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9e, gbc.sp());
        EXPECT(0x4f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 018F
        gbc.setState(0xe9a9, 0x45df, 0x89f0, 0x45a9, 0xac8b, 0x3a0b, 0x0, 0x0);
        gbc.writeMem(0xe9a9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x45df, gbc.sp());
        EXPECT(0xe9ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a9));
        EXPECT(0x9, gbc.readMem(0xe9aa));
        // CB 09 0190
        gbc.setState(0x6161, 0x339b, 0xd090, 0xf888, 0x1df, 0x87d2, 0x0, 0x1);
        gbc.writeMem(0x6161, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x339b, gbc.sp());
        EXPECT(0x6163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0191
        gbc.setState(0xde6d, 0xcd22, 0xe9f0, 0x266e, 0x18c6, 0x709c, 0x0, 0x0);
        gbc.writeMem(0xde6d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcd22, gbc.sp());
        EXPECT(0xde6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6d));
        EXPECT(0x9, gbc.readMem(0xde6e));
        // CB 09 0192
        gbc.setState(0x7931, 0xf9d4, 0x2150, 0xcf9f, 0xb792, 0xb2d7, 0x1, 0x1);
        gbc.writeMem(0x7931, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf9d4, gbc.sp());
        EXPECT(0x7933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0193
        gbc.setState(0x1143, 0xef4b, 0xac50, 0x8870, 0x2431, 0xcfb6, 0x0, 0x1);
        gbc.writeMem(0x1143, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xef4b, gbc.sp());
        EXPECT(0x1145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0194
        gbc.setState(0xed2e, 0xbcab, 0xbb0, 0x5d3b, 0x3d2a, 0x445b, 0x1, 0x1);
        gbc.writeMem(0xed2e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbcab, gbc.sp());
        EXPECT(0xed30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2e));
        EXPECT(0x9, gbc.readMem(0xed2f));
        // CB 09 0195
        gbc.setState(0xc5c, 0x52be, 0xb7a0, 0xed18, 0xa742, 0x77d8, 0x0, 0x0);
        gbc.writeMem(0xc5c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x52be, gbc.sp());
        EXPECT(0xc5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0196
        gbc.setState(0x6bb9, 0xa237, 0x7d50, 0xf2a2, 0xe628, 0xbf81, 0x1, 0x1);
        gbc.writeMem(0x6bb9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa237, gbc.sp());
        EXPECT(0x6bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0197
        gbc.setState(0x752, 0x702, 0x5190, 0x5931, 0xb, 0x190f, 0x1, 0x1);
        gbc.writeMem(0x752, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x702, gbc.sp());
        EXPECT(0x754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0198
        gbc.setState(0x6d25, 0x376b, 0x3a20, 0xe0a5, 0xea41, 0x32fc, 0x0, 0x1);
        gbc.writeMem(0x6d25, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x376b, gbc.sp());
        EXPECT(0x6d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0199
        gbc.setState(0x33f5, 0xe648, 0x1a10, 0x89c1, 0xf52b, 0xe49d, 0x1, 0x1);
        gbc.writeMem(0x33f5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe648, gbc.sp());
        EXPECT(0x33f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 019A
        gbc.setState(0x475b, 0x5335, 0xf550, 0xf3e0, 0xfc72, 0x53db, 0x0, 0x1);
        gbc.writeMem(0x475b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5335, gbc.sp());
        EXPECT(0x475d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 019C
        gbc.setState(0x379e, 0x65df, 0xedb0, 0xcc3e, 0xdb7d, 0xd7b2, 0x1, 0x1);
        gbc.writeMem(0x379e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x65df, gbc.sp());
        EXPECT(0x37a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 019D
        gbc.setState(0x8176, 0x884d, 0x73d0, 0x8d21, 0x1ef8, 0xd982, 0x0, 0x1);
        gbc.writeMem(0x8176, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x884d, gbc.sp());
        EXPECT(0x8178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8176));
        EXPECT(0x9, gbc.readMem(0x8177));
        // CB 09 019E
        gbc.setState(0xef27, 0x1df6, 0x83c0, 0xa761, 0x4507, 0xc03c, 0x1, 0x1);
        gbc.writeMem(0xef27, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1df6, gbc.sp());
        EXPECT(0xef29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef27));
        EXPECT(0x9, gbc.readMem(0xef28));
        // CB 09 019F
        gbc.setState(0xbde0, 0x8a6, 0xb6c0, 0x585a, 0x23a4, 0x7e27, 0x0, 0x1);
        gbc.writeMem(0xbde0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8a6, gbc.sp());
        EXPECT(0xbde2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde0));
        EXPECT(0x9, gbc.readMem(0xbde1));
        // CB 09 01A0
        gbc.setState(0x44cc, 0x84ef, 0x780, 0xbb97, 0x2aa7, 0x4be, 0x0, 0x0);
        gbc.writeMem(0x44cc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x84ef, gbc.sp());
        EXPECT(0x44ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01A1
        gbc.setState(0xa5c5, 0x402d, 0xda60, 0x5b7a, 0x2bf0, 0xd501, 0x1, 0x1);
        gbc.writeMem(0xa5c5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x402d, gbc.sp());
        EXPECT(0xa5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c5));
        EXPECT(0x9, gbc.readMem(0xa5c6));
        // CB 09 01A2
        gbc.setState(0x2150, 0x8665, 0x8f10, 0x2c2d, 0x4edb, 0x2273, 0x1, 0x1);
        gbc.writeMem(0x2150, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8665, gbc.sp());
        EXPECT(0x2152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01A3
        gbc.setState(0xde17, 0x9f39, 0x990, 0x88c9, 0x4ab6, 0xf5a, 0x1, 0x1);
        gbc.writeMem(0xde17, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9f39, gbc.sp());
        EXPECT(0xde19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde17));
        EXPECT(0x9, gbc.readMem(0xde18));
        // CB 09 01A4
        gbc.setState(0xa8c9, 0xec4e, 0x58e0, 0xc927, 0xf883, 0xfb1e, 0x0, 0x0);
        gbc.writeMem(0xa8c9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xec4e, gbc.sp());
        EXPECT(0xa8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c9));
        EXPECT(0x9, gbc.readMem(0xa8ca));
        // CB 09 01A5
        gbc.setState(0x8516, 0x9661, 0xbaf0, 0x2ef4, 0xa380, 0x4352, 0x1, 0x1);
        gbc.writeMem(0x8516, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9661, gbc.sp());
        EXPECT(0x8518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8516));
        EXPECT(0x9, gbc.readMem(0x8517));
        // CB 09 01A6
        gbc.setState(0x361, 0x314b, 0x1a40, 0x20c2, 0x3924, 0x58b4, 0x0, 0x1);
        gbc.writeMem(0x361, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x314b, gbc.sp());
        EXPECT(0x363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01A7
        gbc.setState(0x43f0, 0x5714, 0x61b0, 0xde60, 0x25b7, 0xb140, 0x1, 0x0);
        gbc.writeMem(0x43f0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5714, gbc.sp());
        EXPECT(0x43f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01A8
        gbc.setState(0x8f5d, 0x8ab, 0x26d0, 0xa773, 0x7130, 0x8a59, 0x1, 0x0);
        gbc.writeMem(0x8f5d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8ab, gbc.sp());
        EXPECT(0x8f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5d));
        EXPECT(0x9, gbc.readMem(0x8f5e));
        // CB 09 01A9
        gbc.setState(0xe87d, 0xe941, 0x35a0, 0x1e11, 0x94e7, 0xfee0, 0x0, 0x0);
        gbc.writeMem(0xe87d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe941, gbc.sp());
        EXPECT(0xe87f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe87d));
        EXPECT(0x9, gbc.readMem(0xe87e));
        // CB 09 01AA
        gbc.setState(0x2063, 0x28fc, 0xcb00, 0x3cd4, 0xf083, 0xc5bd, 0x1, 0x1);
        gbc.writeMem(0x2063, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x28fc, gbc.sp());
        EXPECT(0x2065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01AB
        gbc.setState(0xa95c, 0xf622, 0x9300, 0x3b87, 0x26cd, 0xc4b3, 0x0, 0x0);
        gbc.writeMem(0xa95c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf622, gbc.sp());
        EXPECT(0xa95e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95c));
        EXPECT(0x9, gbc.readMem(0xa95d));
        // CB 09 01AC
        gbc.setState(0x6235, 0x7f7, 0x7970, 0x4d95, 0x4a86, 0x10e4, 0x0, 0x0);
        gbc.writeMem(0x6235, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7f7, gbc.sp());
        EXPECT(0x6237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01AD
        gbc.setState(0x6824, 0x3810, 0x73c0, 0xd993, 0x66b1, 0x5f99, 0x1, 0x1);
        gbc.writeMem(0x6824, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3810, gbc.sp());
        EXPECT(0x6826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01AE
        gbc.setState(0x41c8, 0xfec0, 0x6810, 0x895e, 0x5928, 0xd924, 0x1, 0x0);
        gbc.writeMem(0x41c8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfec0, gbc.sp());
        EXPECT(0x41ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01AF
        gbc.setState(0x2574, 0x6d38, 0x7980, 0xa34d, 0xd77b, 0x12e9, 0x0, 0x0);
        gbc.writeMem(0x2574, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6d38, gbc.sp());
        EXPECT(0x2576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01B0
        gbc.setState(0x48dd, 0x727d, 0x4f50, 0x73c4, 0x64f9, 0x91ff, 0x1, 0x1);
        gbc.writeMem(0x48dd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x727d, gbc.sp());
        EXPECT(0x48df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01B1
        gbc.setState(0x52a9, 0x4bde, 0xb4c0, 0xd4cd, 0x5f43, 0x392b, 0x1, 0x1);
        gbc.writeMem(0x52a9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4bde, gbc.sp());
        EXPECT(0x52ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01B2
        gbc.setState(0x25df, 0x9baf, 0xa200, 0x8acc, 0x91d1, 0x4365, 0x0, 0x1);
        gbc.writeMem(0x25df, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9baf, gbc.sp());
        EXPECT(0x25e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01B3
        gbc.setState(0x458d, 0x9ce5, 0x5ed0, 0x5109, 0x868d, 0x8a45, 0x0, 0x0);
        gbc.writeMem(0x458d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9ce5, gbc.sp());
        EXPECT(0x458f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01B4
        gbc.setState(0x671c, 0x79ee, 0xbdb0, 0x17a5, 0xb7b5, 0x4528, 0x1, 0x0);
        gbc.writeMem(0x671c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x79ee, gbc.sp());
        EXPECT(0x671e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01B5
        gbc.setState(0xb497, 0x54cc, 0x4ac0, 0xc2c1, 0x80d1, 0x17dd, 0x0, 0x0);
        gbc.writeMem(0xb497, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x54cc, gbc.sp());
        EXPECT(0xb499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb497));
        EXPECT(0x9, gbc.readMem(0xb498));
        // CB 09 01B7
        gbc.setState(0x14b2, 0xae09, 0x2270, 0x4ac6, 0x83f3, 0x4939, 0x0, 0x0);
        gbc.writeMem(0x14b2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xae09, gbc.sp());
        EXPECT(0x14b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01B8
        gbc.setState(0x1bfb, 0x70c0, 0x3bf0, 0x512b, 0xd79d, 0x3014, 0x1, 0x0);
        gbc.writeMem(0x1bfb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x70c0, gbc.sp());
        EXPECT(0x1bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01B9
        gbc.setState(0xa928, 0x56ca, 0x6ae0, 0xd558, 0xbe93, 0xda1f, 0x0, 0x1);
        gbc.writeMem(0xa928, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x56ca, gbc.sp());
        EXPECT(0xa92a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa928));
        EXPECT(0x9, gbc.readMem(0xa929));
        // CB 09 01BA
        gbc.setState(0x5296, 0x7390, 0x1ab0, 0x33fd, 0x89ad, 0x5f4, 0x0, 0x1);
        gbc.writeMem(0x5296, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7390, gbc.sp());
        EXPECT(0x5298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01BB
        gbc.setState(0x3d81, 0x9dcd, 0xc260, 0x7d27, 0x63ad, 0x6c6c, 0x0, 0x1);
        gbc.writeMem(0x3d81, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9dcd, gbc.sp());
        EXPECT(0x3d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01BC
        gbc.setState(0xdac7, 0xe5e0, 0x4da0, 0x1feb, 0x7249, 0x56e1, 0x0, 0x0);
        gbc.writeMem(0xdac7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe5e0, gbc.sp());
        EXPECT(0xdac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac7));
        EXPECT(0x9, gbc.readMem(0xdac8));
        // CB 09 01BD
        gbc.setState(0x3f14, 0x93c4, 0xf8b0, 0x4de9, 0x73a3, 0x3ccb, 0x0, 0x1);
        gbc.writeMem(0x3f14, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x93c4, gbc.sp());
        EXPECT(0x3f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01BE
        gbc.setState(0xb091, 0xfc05, 0x38c0, 0x1ae6, 0x2eb1, 0x4ed3, 0x0, 0x0);
        gbc.writeMem(0xb091, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfc05, gbc.sp());
        EXPECT(0xb093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb091));
        EXPECT(0x9, gbc.readMem(0xb092));
        // CB 09 01BF
        gbc.setState(0xfd8, 0x9c5d, 0x3530, 0x11e4, 0xf624, 0xaed4, 0x1, 0x0);
        gbc.writeMem(0xfd8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9c5d, gbc.sp());
        EXPECT(0xfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01C0
        gbc.setState(0xba6c, 0xedfb, 0x9ec0, 0x12d2, 0xf26a, 0x2d7e, 0x0, 0x0);
        gbc.writeMem(0xba6c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xedfb, gbc.sp());
        EXPECT(0xba6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba6c));
        EXPECT(0x9, gbc.readMem(0xba6d));
        // CB 09 01C1
        gbc.setState(0x2554, 0x79f0, 0x3590, 0xdb69, 0x5ee4, 0x594a, 0x0, 0x1);
        gbc.writeMem(0x2554, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x79f0, gbc.sp());
        EXPECT(0x2556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01C2
        gbc.setState(0x69ef, 0x920f, 0xf2a0, 0xa920, 0xc848, 0x4709, 0x1, 0x0);
        gbc.writeMem(0x69ef, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x920f, gbc.sp());
        EXPECT(0x69f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01C3
        gbc.setState(0x2e7f, 0x65ad, 0xfb90, 0xca51, 0xe47f, 0x63ad, 0x1, 0x1);
        gbc.writeMem(0x2e7f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x65ad, gbc.sp());
        EXPECT(0x2e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01C4
        gbc.setState(0x34e6, 0x8457, 0x4190, 0x2e2e, 0x76cb, 0xc869, 0x0, 0x1);
        gbc.writeMem(0x34e6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8457, gbc.sp());
        EXPECT(0x34e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01C5
        gbc.setState(0x1016, 0x7d59, 0x6640, 0x8e49, 0x6fc6, 0xb0bd, 0x0, 0x0);
        gbc.writeMem(0x1016, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7d59, gbc.sp());
        EXPECT(0x1018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01C6
        gbc.setState(0x7f14, 0xe094, 0x36d0, 0xe041, 0x6b29, 0xcfc5, 0x0, 0x1);
        gbc.writeMem(0x7f14, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe094, gbc.sp());
        EXPECT(0x7f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01C7
        gbc.setState(0xba1c, 0xfd4, 0x2ea0, 0xa4c0, 0xc612, 0x4649, 0x0, 0x1);
        gbc.writeMem(0xba1c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfd4, gbc.sp());
        EXPECT(0xba1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1c));
        EXPECT(0x9, gbc.readMem(0xba1d));
        // CB 09 01C8
        gbc.setState(0xc27a, 0x48dd, 0xe5e0, 0x76d6, 0x4349, 0x5318, 0x1, 0x0);
        gbc.writeMem(0xc27a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x48dd, gbc.sp());
        EXPECT(0xc27c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc27a));
        EXPECT(0x9, gbc.readMem(0xc27b));
        // CB 09 01C9
        gbc.setState(0xe0c4, 0x9041, 0x17e0, 0x115d, 0x630, 0x8ac3, 0x0, 0x0);
        gbc.writeMem(0xe0c4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9041, gbc.sp());
        EXPECT(0xe0c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c4));
        EXPECT(0x9, gbc.readMem(0xe0c5));
        // CB 09 01CA
        gbc.setState(0xe998, 0x9be3, 0xb8b0, 0xe768, 0x2f9e, 0xfdd0, 0x0, 0x0);
        gbc.writeMem(0xe998, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9be3, gbc.sp());
        EXPECT(0xe99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe998));
        EXPECT(0x9, gbc.readMem(0xe999));
        // CB 09 01CB
        gbc.setState(0xbe53, 0xc2e4, 0x6ff0, 0x2fb0, 0xc474, 0xf390, 0x0, 0x0);
        gbc.writeMem(0xbe53, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc2e4, gbc.sp());
        EXPECT(0xbe55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe53));
        EXPECT(0x9, gbc.readMem(0xbe54));
        // CB 09 01CC
        gbc.setState(0x3c00, 0x7073, 0x3220, 0x5b32, 0xe2bb, 0xbee, 0x1, 0x1);
        gbc.writeMem(0x3c00, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7073, gbc.sp());
        EXPECT(0x3c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01CD
        gbc.setState(0x3663, 0xa378, 0xc7c0, 0xbb32, 0x6e83, 0x8c5a, 0x1, 0x0);
        gbc.writeMem(0x3663, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa378, gbc.sp());
        EXPECT(0x3665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01CE
        gbc.setState(0x76ca, 0x591f, 0xc370, 0x842d, 0xe3, 0x3a5d, 0x0, 0x1);
        gbc.writeMem(0x76ca, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x591f, gbc.sp());
        EXPECT(0x76cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01CF
        gbc.setState(0xe7e9, 0x4ec6, 0xdc0, 0x1613, 0xcc59, 0xff56, 0x1, 0x0);
        gbc.writeMem(0xe7e9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4ec6, gbc.sp());
        EXPECT(0xe7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e9));
        EXPECT(0x9, gbc.readMem(0xe7ea));
        // CB 09 01D0
        gbc.setState(0x2000, 0x8974, 0x9540, 0xc353, 0x1f74, 0x922e, 0x0, 0x1);
        gbc.writeMem(0x2000, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8974, gbc.sp());
        EXPECT(0x2002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01D1
        gbc.setState(0x3c43, 0x7e3, 0x5dd0, 0x29a1, 0xed39, 0xbc6c, 0x1, 0x0);
        gbc.writeMem(0x3c43, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7e3, gbc.sp());
        EXPECT(0x3c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01D2
        gbc.setState(0x6701, 0x320e, 0xb560, 0xaa5f, 0x1b70, 0xdd8b, 0x0, 0x1);
        gbc.writeMem(0x6701, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x320e, gbc.sp());
        EXPECT(0x6703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01D3
        gbc.setState(0x895, 0x6bc4, 0xe5e0, 0xd3b5, 0x896a, 0x43b7, 0x0, 0x1);
        gbc.writeMem(0x895, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6bc4, gbc.sp());
        EXPECT(0x897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01D4
        gbc.setState(0x9e9a, 0xb755, 0x9bb0, 0x4680, 0xecbf, 0x236a, 0x1, 0x1);
        gbc.writeMem(0x9e9a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb755, gbc.sp());
        EXPECT(0x9e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9a));
        EXPECT(0x9, gbc.readMem(0x9e9b));
        // CB 09 01D5
        gbc.setState(0x1c6, 0x4437, 0xe020, 0x8512, 0x7341, 0xdbe7, 0x1, 0x0);
        gbc.writeMem(0x1c6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4437, gbc.sp());
        EXPECT(0x1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01D6
        gbc.setState(0x8b93, 0x1c8a, 0xede0, 0x7bcd, 0x8a1d, 0xbe7, 0x0, 0x1);
        gbc.writeMem(0x8b93, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1c8a, gbc.sp());
        EXPECT(0x8b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b93));
        EXPECT(0x9, gbc.readMem(0x8b94));
        // CB 09 01D7
        gbc.setState(0x1f59, 0x2af0, 0xf730, 0x5e56, 0xc10a, 0x7af, 0x1, 0x0);
        gbc.writeMem(0x1f59, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2af0, gbc.sp());
        EXPECT(0x1f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01D8
        gbc.setState(0xb908, 0x3912, 0x38a0, 0x48e0, 0x2571, 0x2071, 0x0, 0x0);
        gbc.writeMem(0xb908, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3912, gbc.sp());
        EXPECT(0xb90a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb908));
        EXPECT(0x9, gbc.readMem(0xb909));
        // CB 09 01D9
        gbc.setState(0x8d3a, 0x3cb, 0x88f0, 0x9cbe, 0x6d0b, 0xc689, 0x0, 0x0);
        gbc.writeMem(0x8d3a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3cb, gbc.sp());
        EXPECT(0x8d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3a));
        EXPECT(0x9, gbc.readMem(0x8d3b));
        // CB 09 01DA
        gbc.setState(0xe9e5, 0xd2a7, 0x86e0, 0xf786, 0xf3a, 0x3ab0, 0x0, 0x0);
        gbc.writeMem(0xe9e5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd2a7, gbc.sp());
        EXPECT(0xe9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e5));
        EXPECT(0x9, gbc.readMem(0xe9e6));
        // CB 09 01DB
        gbc.setState(0xc218, 0x4fc9, 0x2350, 0x5247, 0xaf13, 0x9931, 0x0, 0x0);
        gbc.writeMem(0xc218, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4fc9, gbc.sp());
        EXPECT(0xc21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc218));
        EXPECT(0x9, gbc.readMem(0xc219));
        // CB 09 01DC
        gbc.setState(0x9308, 0x7b84, 0x1880, 0xcf10, 0xaf6f, 0xdb29, 0x1, 0x1);
        gbc.writeMem(0x9308, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7b84, gbc.sp());
        EXPECT(0x930a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9308));
        EXPECT(0x9, gbc.readMem(0x9309));
        // CB 09 01DD
        gbc.setState(0x2b70, 0xc220, 0x7080, 0x5c2e, 0x155, 0x1461, 0x1, 0x0);
        gbc.writeMem(0x2b70, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc220, gbc.sp());
        EXPECT(0x2b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01DE
        gbc.setState(0x99dd, 0x5bff, 0x9440, 0x830e, 0x3288, 0x2e9b, 0x1, 0x0);
        gbc.writeMem(0x99dd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5bff, gbc.sp());
        EXPECT(0x99df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99dd));
        EXPECT(0x9, gbc.readMem(0x99de));
        // CB 09 01DF
        gbc.setState(0x53a0, 0x2650, 0xb110, 0xad73, 0x7129, 0x94eb, 0x0, 0x0);
        gbc.writeMem(0x53a0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2650, gbc.sp());
        EXPECT(0x53a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01E0
        gbc.setState(0xc6ec, 0xbef3, 0x5de0, 0x2570, 0xbfc6, 0x9e96, 0x0, 0x0);
        gbc.writeMem(0xc6ec, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbef3, gbc.sp());
        EXPECT(0xc6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ec));
        EXPECT(0x9, gbc.readMem(0xc6ed));
        // CB 09 01E1
        gbc.setState(0xa263, 0xda39, 0x19f0, 0x4a1e, 0x8ea5, 0xbea5, 0x1, 0x0);
        gbc.writeMem(0xa263, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xda39, gbc.sp());
        EXPECT(0xa265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa263));
        EXPECT(0x9, gbc.readMem(0xa264));
        // CB 09 01E2
        gbc.setState(0x84af, 0x1a76, 0x15c0, 0x209c, 0xf37f, 0x836a, 0x1, 0x1);
        gbc.writeMem(0x84af, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1a76, gbc.sp());
        EXPECT(0x84b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84af));
        EXPECT(0x9, gbc.readMem(0x84b0));
        // CB 09 01E3
        gbc.setState(0x5a0d, 0x9a42, 0xd260, 0x92de, 0xdffb, 0xb3d6, 0x0, 0x1);
        gbc.writeMem(0x5a0d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9a42, gbc.sp());
        EXPECT(0x5a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01E4
        gbc.setState(0x7cc7, 0xe9e9, 0x5750, 0x878c, 0x155f, 0xdb26, 0x0, 0x1);
        gbc.writeMem(0x7cc7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe9e9, gbc.sp());
        EXPECT(0x7cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01E5
        gbc.setState(0x5cf8, 0x7fde, 0xd760, 0x6cea, 0x8069, 0x513b, 0x1, 0x0);
        gbc.writeMem(0x5cf8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7fde, gbc.sp());
        EXPECT(0x5cfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01E6
        gbc.setState(0xccf7, 0x98c4, 0xa6f0, 0x648e, 0x6bbe, 0x2c3d, 0x0, 0x1);
        gbc.writeMem(0xccf7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x98c4, gbc.sp());
        EXPECT(0xccf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf7));
        EXPECT(0x9, gbc.readMem(0xccf8));
        // CB 09 01E7
        gbc.setState(0x590e, 0x844d, 0x180, 0xd817, 0x9a3b, 0xfd3d, 0x1, 0x0);
        gbc.writeMem(0x590e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x844d, gbc.sp());
        EXPECT(0x5910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01E8
        gbc.setState(0xa13f, 0xb9f0, 0x140, 0x5a11, 0xbbe1, 0xd400, 0x1, 0x1);
        gbc.writeMem(0xa13f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb9f0, gbc.sp());
        EXPECT(0xa141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13f));
        EXPECT(0x9, gbc.readMem(0xa140));
        // CB 09 01E9
        gbc.setState(0xee6f, 0xe62b, 0xd620, 0xc3c3, 0x41dd, 0x824d, 0x0, 0x1);
        gbc.writeMem(0xee6f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe62b, gbc.sp());
        EXPECT(0xee71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee6f));
        EXPECT(0x9, gbc.readMem(0xee70));
        // CB 09 01EC
        gbc.setState(0x1132, 0xc98c, 0x73b0, 0xaf20, 0xab36, 0x3b7e, 0x1, 0x1);
        gbc.writeMem(0x1132, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc98c, gbc.sp());
        EXPECT(0x1134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01ED
        gbc.setState(0x61a3, 0xa076, 0x5640, 0x34ad, 0x51a, 0x8df5, 0x1, 0x1);
        gbc.writeMem(0x61a3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa076, gbc.sp());
        EXPECT(0x61a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01EE
        gbc.setState(0xbbac, 0x7076, 0xad80, 0x3cda, 0x57e8, 0x9a1c, 0x1, 0x1);
        gbc.writeMem(0xbbac, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7076, gbc.sp());
        EXPECT(0xbbae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbac));
        EXPECT(0x9, gbc.readMem(0xbbad));
        // CB 09 01EF
        gbc.setState(0x8e8f, 0xaeeb, 0x36a0, 0xcb1a, 0xbed3, 0x9bc5, 0x0, 0x0);
        gbc.writeMem(0x8e8f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xaeeb, gbc.sp());
        EXPECT(0x8e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e8f));
        EXPECT(0x9, gbc.readMem(0x8e90));
        // CB 09 01F0
        gbc.setState(0xe163, 0x8475, 0x6dc0, 0x521, 0x93de, 0xd6e6, 0x0, 0x0);
        gbc.writeMem(0xe163, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8475, gbc.sp());
        EXPECT(0xe165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe163));
        EXPECT(0x9, gbc.readMem(0xe164));
        // CB 09 01F1
        gbc.setState(0x67a4, 0x2c57, 0x3b00, 0xa0cc, 0x936b, 0x298d, 0x0, 0x1);
        gbc.writeMem(0x67a4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2c57, gbc.sp());
        EXPECT(0x67a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01F2
        gbc.setState(0xa2d1, 0xb4eb, 0x1f40, 0x1992, 0x8329, 0x7207, 0x0, 0x0);
        gbc.writeMem(0xa2d1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb4eb, gbc.sp());
        EXPECT(0xa2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d1));
        EXPECT(0x9, gbc.readMem(0xa2d2));
        // CB 09 01F4
        gbc.setState(0x90d1, 0x7863, 0x6250, 0xd0d6, 0x9e3c, 0x298, 0x1, 0x0);
        gbc.writeMem(0x90d1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7863, gbc.sp());
        EXPECT(0x90d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d1));
        EXPECT(0x9, gbc.readMem(0x90d2));
        // CB 09 01F5
        gbc.setState(0xaa03, 0xf3ec, 0x7a40, 0xaa1d, 0x86bc, 0x6f1b, 0x0, 0x0);
        gbc.writeMem(0xaa03, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf3ec, gbc.sp());
        EXPECT(0xaa05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa03));
        EXPECT(0x9, gbc.readMem(0xaa04));
        // CB 09 01F6
        gbc.setState(0x3e85, 0xbf32, 0x2560, 0x4afe, 0x1d76, 0xafe9, 0x1, 0x0);
        gbc.writeMem(0x3e85, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbf32, gbc.sp());
        EXPECT(0x3e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01F7
        gbc.setState(0x705a, 0x55eb, 0x6340, 0x9ce7, 0xa815, 0x10b8, 0x1, 0x1);
        gbc.writeMem(0x705a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x55eb, gbc.sp());
        EXPECT(0x705c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01F8
        gbc.setState(0x3239, 0x49a0, 0x6930, 0xec9a, 0xcc38, 0x9032, 0x0, 0x1);
        gbc.writeMem(0x3239, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x49a0, gbc.sp());
        EXPECT(0x323b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01F9
        gbc.setState(0xe114, 0xace2, 0xa860, 0x10a4, 0xd620, 0x62ad, 0x0, 0x0);
        gbc.writeMem(0xe114, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xace2, gbc.sp());
        EXPECT(0xe116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe114));
        EXPECT(0x9, gbc.readMem(0xe115));
        // CB 09 01FA
        gbc.setState(0x7b4e, 0x2771, 0xa5a0, 0xfff8, 0xce29, 0x8f0e, 0x0, 0x0);
        gbc.writeMem(0x7b4e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2771, gbc.sp());
        EXPECT(0x7b50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01FB
        gbc.setState(0x61a8, 0x497d, 0xf280, 0x7f07, 0x3891, 0x81ce, 0x1, 0x0);
        gbc.writeMem(0x61a8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x497d, gbc.sp());
        EXPECT(0x61aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01FC
        gbc.setState(0xe6a3, 0x62b4, 0x5310, 0x8ea1, 0x50d6, 0xdf04, 0x0, 0x1);
        gbc.writeMem(0xe6a3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x62b4, gbc.sp());
        EXPECT(0xe6a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a3));
        EXPECT(0x9, gbc.readMem(0xe6a4));
        // CB 09 01FD
        gbc.setState(0x24b, 0x86d0, 0x9e30, 0xa5fb, 0x3253, 0x1f36, 0x0, 0x1);
        gbc.writeMem(0x24b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x86d0, gbc.sp());
        EXPECT(0x24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 01FE
        gbc.setState(0x43f1, 0xfa2b, 0xf890, 0x677e, 0xd8be, 0x50b9, 0x0, 0x0);
        gbc.writeMem(0x43f1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfa2b, gbc.sp());
        EXPECT(0x43f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 01FF
        gbc.setState(0xd2e0, 0x54e6, 0x3c90, 0x8863, 0xb7d1, 0x277f, 0x1, 0x1);
        gbc.writeMem(0xd2e0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x54e6, gbc.sp());
        EXPECT(0xd2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e0));
        EXPECT(0x9, gbc.readMem(0xd2e1));
        // CB 09 0200
        gbc.setState(0x1cd9, 0x7e78, 0xa2d0, 0x89b3, 0x7875, 0x57a3, 0x0, 0x0);
        gbc.writeMem(0x1cd9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7e78, gbc.sp());
        EXPECT(0x1cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0201
        gbc.setState(0x9453, 0xa57e, 0x4300, 0xae40, 0xfc1f, 0x5d3c, 0x1, 0x0);
        gbc.writeMem(0x9453, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa57e, gbc.sp());
        EXPECT(0x9455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9453));
        EXPECT(0x9, gbc.readMem(0x9454));
        // CB 09 0202
        gbc.setState(0xd284, 0xfa8, 0x4860, 0x182d, 0x3442, 0xcbd6, 0x0, 0x0);
        gbc.writeMem(0xd284, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfa8, gbc.sp());
        EXPECT(0xd286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd284));
        EXPECT(0x9, gbc.readMem(0xd285));
        // CB 09 0203
        gbc.setState(0x1529, 0x56de, 0x9f70, 0x9ccc, 0x58c4, 0xa8bd, 0x1, 0x0);
        gbc.writeMem(0x1529, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x56de, gbc.sp());
        EXPECT(0x152b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0204
        gbc.setState(0x7e1f, 0xaa21, 0x6d60, 0x1376, 0xaa91, 0x3226, 0x1, 0x0);
        gbc.writeMem(0x7e1f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xaa21, gbc.sp());
        EXPECT(0x7e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0205
        gbc.setState(0x9f4b, 0x9b0c, 0x66c0, 0x3a6, 0x90f9, 0x1abe, 0x0, 0x0);
        gbc.writeMem(0x9f4b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9b0c, gbc.sp());
        EXPECT(0x9f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4b));
        EXPECT(0x9, gbc.readMem(0x9f4c));
        // CB 09 0206
        gbc.setState(0x34ea, 0x9261, 0xa090, 0x44d1, 0xcf56, 0x661a, 0x1, 0x0);
        gbc.writeMem(0x34ea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9261, gbc.sp());
        EXPECT(0x34ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0207
        gbc.setState(0xeea9, 0x5964, 0x5d70, 0xe5d6, 0x2e69, 0x27f6, 0x0, 0x1);
        gbc.writeMem(0xeea9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5964, gbc.sp());
        EXPECT(0xeeab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea9));
        EXPECT(0x9, gbc.readMem(0xeeaa));
        // CB 09 0208
        gbc.setState(0x2d01, 0x304d, 0xe490, 0x3963, 0x2dba, 0xca07, 0x0, 0x1);
        gbc.writeMem(0x2d01, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x304d, gbc.sp());
        EXPECT(0x2d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0209
        gbc.setState(0xe248, 0x4486, 0x7430, 0xf09a, 0x9223, 0xa2e6, 0x1, 0x1);
        gbc.writeMem(0xe248, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4486, gbc.sp());
        EXPECT(0xe24a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe248));
        EXPECT(0x9, gbc.readMem(0xe249));
        // CB 09 020A
        gbc.setState(0xa4db, 0x4b95, 0xc080, 0xc750, 0xfbcc, 0xd2b, 0x0, 0x1);
        gbc.writeMem(0xa4db, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4b95, gbc.sp());
        EXPECT(0xa4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4db));
        EXPECT(0x9, gbc.readMem(0xa4dc));
        // CB 09 020B
        gbc.setState(0xc50b, 0xed53, 0x1db0, 0xcee0, 0x84d0, 0xb91e, 0x0, 0x1);
        gbc.writeMem(0xc50b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xed53, gbc.sp());
        EXPECT(0xc50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50b));
        EXPECT(0x9, gbc.readMem(0xc50c));
        // CB 09 020C
        gbc.setState(0x1c4f, 0x8fd7, 0x79f0, 0x86f8, 0xb01d, 0x897c, 0x0, 0x0);
        gbc.writeMem(0x1c4f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8fd7, gbc.sp());
        EXPECT(0x1c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 020D
        gbc.setState(0x7e56, 0x24fe, 0x17a0, 0x41b9, 0x4d70, 0xf9fa, 0x1, 0x0);
        gbc.writeMem(0x7e56, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x24fe, gbc.sp());
        EXPECT(0x7e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 020E
        gbc.setState(0x2bb2, 0x1c78, 0x74c0, 0xe816, 0xf37d, 0x6b2c, 0x0, 0x1);
        gbc.writeMem(0x2bb2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1c78, gbc.sp());
        EXPECT(0x2bb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 020F
        gbc.setState(0x1b66, 0x2ef8, 0x66d0, 0x8ac1, 0x8ae, 0xafd5, 0x0, 0x1);
        gbc.writeMem(0x1b66, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2ef8, gbc.sp());
        EXPECT(0x1b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0210
        gbc.setState(0xe1f0, 0xeefb, 0x46c0, 0xdc8a, 0x49ec, 0x9af3, 0x0, 0x1);
        gbc.writeMem(0xe1f0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xeefb, gbc.sp());
        EXPECT(0xe1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f0));
        EXPECT(0x9, gbc.readMem(0xe1f1));
        // CB 09 0211
        gbc.setState(0x434, 0x51d0, 0xf90, 0xf17e, 0xf199, 0x1064, 0x0, 0x1);
        gbc.writeMem(0x434, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x51d0, gbc.sp());
        EXPECT(0x436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0214
        gbc.setState(0xaa10, 0x327c, 0xa8d0, 0x38f0, 0xaed2, 0x7d21, 0x0, 0x0);
        gbc.writeMem(0xaa10, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x327c, gbc.sp());
        EXPECT(0xaa12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa10));
        EXPECT(0x9, gbc.readMem(0xaa11));
        // CB 09 0215
        gbc.setState(0x3aeb, 0xb5bf, 0x5db0, 0x9822, 0x9fe0, 0x1c62, 0x1, 0x0);
        gbc.writeMem(0x3aeb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb5bf, gbc.sp());
        EXPECT(0x3aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0216
        gbc.setState(0x50d7, 0x9425, 0xbc80, 0x9d31, 0xa1f1, 0xac54, 0x1, 0x0);
        gbc.writeMem(0x50d7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9425, gbc.sp());
        EXPECT(0x50d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0217
        gbc.setState(0x7c18, 0x1ae4, 0xfa90, 0xa19a, 0x9596, 0xf2ec, 0x1, 0x0);
        gbc.writeMem(0x7c18, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1ae4, gbc.sp());
        EXPECT(0x7c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0218
        gbc.setState(0xc1b2, 0x4d66, 0xe910, 0x26b5, 0x14b3, 0x27f2, 0x0, 0x1);
        gbc.writeMem(0xc1b2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4d66, gbc.sp());
        EXPECT(0xc1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b2));
        EXPECT(0x9, gbc.readMem(0xc1b3));
        // CB 09 0219
        gbc.setState(0xcd68, 0x3e9, 0xfc70, 0xf2ab, 0xbc82, 0xf419, 0x0, 0x0);
        gbc.writeMem(0xcd68, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3e9, gbc.sp());
        EXPECT(0xcd6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd68));
        EXPECT(0x9, gbc.readMem(0xcd69));
        // CB 09 021A
        gbc.setState(0x421f, 0x34b9, 0xf790, 0xad95, 0xae06, 0xd378, 0x1, 0x0);
        gbc.writeMem(0x421f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x34b9, gbc.sp());
        EXPECT(0x4221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 021B
        gbc.setState(0xe527, 0x8709, 0x1b50, 0x99fa, 0xc581, 0x5d63, 0x1, 0x0);
        gbc.writeMem(0xe527, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8709, gbc.sp());
        EXPECT(0xe529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe527));
        EXPECT(0x9, gbc.readMem(0xe528));
        // CB 09 021C
        gbc.setState(0x76f8, 0x9b28, 0x4f80, 0x2c7, 0xd83a, 0x107d, 0x0, 0x1);
        gbc.writeMem(0x76f8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9b28, gbc.sp());
        EXPECT(0x76fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 021D
        gbc.setState(0x783e, 0xe446, 0x3230, 0x152, 0x25fa, 0xaeb7, 0x1, 0x1);
        gbc.writeMem(0x783e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe446, gbc.sp());
        EXPECT(0x7840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 021E
        gbc.setState(0x3f59, 0xf895, 0xb690, 0x3d05, 0x325d, 0x7e8f, 0x1, 0x0);
        gbc.writeMem(0x3f59, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf895, gbc.sp());
        EXPECT(0x3f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 021F
        gbc.setState(0x2ace, 0x1cf6, 0x2ce0, 0x6459, 0x84de, 0x572d, 0x1, 0x0);
        gbc.writeMem(0x2ace, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1cf6, gbc.sp());
        EXPECT(0x2ad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0220
        gbc.setState(0x825, 0x7fc1, 0x3740, 0xffed, 0xf8bb, 0x8486, 0x1, 0x1);
        gbc.writeMem(0x825, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7fc1, gbc.sp());
        EXPECT(0x827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0221
        gbc.setState(0x9df3, 0x1266, 0xfbf0, 0x911f, 0xaef2, 0xdaaa, 0x1, 0x0);
        gbc.writeMem(0x9df3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1266, gbc.sp());
        EXPECT(0x9df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df3));
        EXPECT(0x9, gbc.readMem(0x9df4));
        // CB 09 0222
        gbc.setState(0x26cd, 0x63be, 0xd690, 0xbce4, 0x9816, 0x61bb, 0x0, 0x0);
        gbc.writeMem(0x26cd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x63be, gbc.sp());
        EXPECT(0x26cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0224
        gbc.setState(0xbe75, 0xfee3, 0x7170, 0x975e, 0x2074, 0x524c, 0x0, 0x0);
        gbc.writeMem(0xbe75, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfee3, gbc.sp());
        EXPECT(0xbe77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe75));
        EXPECT(0x9, gbc.readMem(0xbe76));
        // CB 09 0225
        gbc.setState(0x4d51, 0x19be, 0x3e50, 0x9e96, 0x1cc5, 0x18db, 0x1, 0x0);
        gbc.writeMem(0x4d51, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x19be, gbc.sp());
        EXPECT(0x4d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0226
        gbc.setState(0xe394, 0xf623, 0xb60, 0x7229, 0x678b, 0xa1fc, 0x1, 0x1);
        gbc.writeMem(0xe394, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf623, gbc.sp());
        EXPECT(0xe396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe394));
        EXPECT(0x9, gbc.readMem(0xe395));
        // CB 09 0227
        gbc.setState(0x4c75, 0x5d8a, 0x8e60, 0xf033, 0xc187, 0x6017, 0x0, 0x1);
        gbc.writeMem(0x4c75, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5d8a, gbc.sp());
        EXPECT(0x4c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0228
        gbc.setState(0xa17, 0xf4b4, 0x1ca0, 0x5599, 0x765, 0xd5a8, 0x0, 0x0);
        gbc.writeMem(0xa17, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf4b4, gbc.sp());
        EXPECT(0xa19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0229
        gbc.setState(0x5216, 0xcab5, 0x4ba0, 0x2174, 0xd14f, 0x8066, 0x1, 0x0);
        gbc.writeMem(0x5216, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcab5, gbc.sp());
        EXPECT(0x5218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 022A
        gbc.setState(0x3219, 0x45ca, 0x2810, 0x7856, 0x722a, 0xa9c, 0x1, 0x0);
        gbc.writeMem(0x3219, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x45ca, gbc.sp());
        EXPECT(0x321b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 022B
        gbc.setState(0x77bc, 0xa9, 0x84d0, 0x31a8, 0xe315, 0x344, 0x1, 0x0);
        gbc.writeMem(0x77bc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa9, gbc.sp());
        EXPECT(0x77be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 022C
        gbc.setState(0xda94, 0x5c1a, 0x9ec0, 0xac10, 0x80dc, 0x5fe3, 0x0, 0x0);
        gbc.writeMem(0xda94, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5c1a, gbc.sp());
        EXPECT(0xda96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda94));
        EXPECT(0x9, gbc.readMem(0xda95));
        // CB 09 022D
        gbc.setState(0xb0aa, 0xd1e9, 0xb110, 0x3a55, 0x7257, 0x7762, 0x1, 0x0);
        gbc.writeMem(0xb0aa, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd1e9, gbc.sp());
        EXPECT(0xb0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0aa));
        EXPECT(0x9, gbc.readMem(0xb0ab));
        // CB 09 022E
        gbc.setState(0xb735, 0x49d4, 0x9e60, 0x1227, 0xa681, 0x9e44, 0x1, 0x0);
        gbc.writeMem(0xb735, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x49d4, gbc.sp());
        EXPECT(0xb737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb735));
        EXPECT(0x9, gbc.readMem(0xb736));
        // CB 09 022F
        gbc.setState(0x3d58, 0xe37a, 0x56c0, 0x47dd, 0x21a9, 0xf537, 0x1, 0x0);
        gbc.writeMem(0x3d58, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe37a, gbc.sp());
        EXPECT(0x3d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0230
        gbc.setState(0x3f50, 0xbe43, 0xcf10, 0xfeb5, 0xe680, 0x7303, 0x0, 0x1);
        gbc.writeMem(0x3f50, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbe43, gbc.sp());
        EXPECT(0x3f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0231
        gbc.setState(0x9b08, 0xfc2e, 0xc530, 0x5fc2, 0x2d78, 0xedde, 0x1, 0x0);
        gbc.writeMem(0x9b08, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfc2e, gbc.sp());
        EXPECT(0x9b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b08));
        EXPECT(0x9, gbc.readMem(0x9b09));
        // CB 09 0232
        gbc.setState(0x6545, 0xbb5d, 0x6d30, 0x44e7, 0x6045, 0x8e70, 0x0, 0x1);
        gbc.writeMem(0x6545, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbb5d, gbc.sp());
        EXPECT(0x6547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0233
        gbc.setState(0x8b78, 0x6ee2, 0x1be0, 0xdb9, 0x1b7c, 0xb800, 0x0, 0x1);
        gbc.writeMem(0x8b78, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6ee2, gbc.sp());
        EXPECT(0x8b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b78));
        EXPECT(0x9, gbc.readMem(0x8b79));
        // CB 09 0234
        gbc.setState(0xb7f5, 0x765d, 0x5f50, 0xb212, 0xd1fa, 0xa2cd, 0x0, 0x0);
        gbc.writeMem(0xb7f5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x765d, gbc.sp());
        EXPECT(0xb7f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f5));
        EXPECT(0x9, gbc.readMem(0xb7f6));
        // CB 09 0235
        gbc.setState(0x3ff9, 0xa1c7, 0x2820, 0x4f33, 0x7cd9, 0x9b70, 0x0, 0x0);
        gbc.writeMem(0x3ff9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa1c7, gbc.sp());
        EXPECT(0x3ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0236
        gbc.setState(0xd813, 0x212a, 0x60f0, 0xf60b, 0x3a86, 0xc510, 0x0, 0x1);
        gbc.writeMem(0xd813, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x212a, gbc.sp());
        EXPECT(0xd815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd813));
        EXPECT(0x9, gbc.readMem(0xd814));
        // CB 09 0237
        gbc.setState(0x55a8, 0x8444, 0xab10, 0x6907, 0xe0e9, 0xc4fd, 0x0, 0x0);
        gbc.writeMem(0x55a8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8444, gbc.sp());
        EXPECT(0x55aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0238
        gbc.setState(0x483e, 0xe3fa, 0x2c40, 0xab1c, 0x8f1f, 0x89c2, 0x1, 0x0);
        gbc.writeMem(0x483e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe3fa, gbc.sp());
        EXPECT(0x4840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0239
        gbc.setState(0xe4ea, 0x71b4, 0x70e0, 0x5cfc, 0x6981, 0x6682, 0x0, 0x1);
        gbc.writeMem(0xe4ea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x71b4, gbc.sp());
        EXPECT(0xe4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ea));
        EXPECT(0x9, gbc.readMem(0xe4eb));
        // CB 09 023A
        gbc.setState(0x4179, 0x705c, 0x70a0, 0x36ff, 0xaa1a, 0x25b, 0x1, 0x1);
        gbc.writeMem(0x4179, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x705c, gbc.sp());
        EXPECT(0x417b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 023B
        gbc.setState(0x32cd, 0xad03, 0xfa60, 0x9e50, 0x5d00, 0xcde9, 0x0, 0x0);
        gbc.writeMem(0x32cd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xad03, gbc.sp());
        EXPECT(0x32cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 023C
        gbc.setState(0x4c7e, 0x2081, 0x1060, 0x5871, 0x87a, 0x7722, 0x0, 0x0);
        gbc.writeMem(0x4c7e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2081, gbc.sp());
        EXPECT(0x4c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 023D
        gbc.setState(0x4ce1, 0x6e47, 0x8f00, 0x2466, 0xd95, 0x8d9f, 0x0, 0x1);
        gbc.writeMem(0x4ce1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6e47, gbc.sp());
        EXPECT(0x4ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 023E
        gbc.setState(0xd4e4, 0xfcba, 0xf800, 0xe3d2, 0x486d, 0xce0e, 0x0, 0x1);
        gbc.writeMem(0xd4e4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfcba, gbc.sp());
        EXPECT(0xd4e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e4));
        EXPECT(0x9, gbc.readMem(0xd4e5));
        // CB 09 023F
        gbc.setState(0x575d, 0xce09, 0xaa40, 0xc4d0, 0x1395, 0x38fa, 0x0, 0x0);
        gbc.writeMem(0x575d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xce09, gbc.sp());
        EXPECT(0x575f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0240
        gbc.setState(0x52af, 0x9ed0, 0x65e0, 0xba7e, 0x5af6, 0x2bf, 0x0, 0x0);
        gbc.writeMem(0x52af, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9ed0, gbc.sp());
        EXPECT(0x52b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0241
        gbc.setState(0xb834, 0x491, 0x1350, 0x1dc8, 0x9d92, 0xd580, 0x1, 0x0);
        gbc.writeMem(0xb834, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x491, gbc.sp());
        EXPECT(0xb836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb834));
        EXPECT(0x9, gbc.readMem(0xb835));
        // CB 09 0242
        gbc.setState(0x9147, 0x198b, 0x4e50, 0x468, 0x2b20, 0x485f, 0x0, 0x0);
        gbc.writeMem(0x9147, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x198b, gbc.sp());
        EXPECT(0x9149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9147));
        EXPECT(0x9, gbc.readMem(0x9148));
        // CB 09 0243
        gbc.setState(0x9052, 0xb265, 0x14a0, 0xb98f, 0x6c8a, 0x96d, 0x0, 0x1);
        gbc.writeMem(0x9052, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb265, gbc.sp());
        EXPECT(0x9054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9052));
        EXPECT(0x9, gbc.readMem(0x9053));
        // CB 09 0244
        gbc.setState(0x4ea2, 0x15cb, 0x8960, 0x5a35, 0xec0, 0xdc26, 0x1, 0x0);
        gbc.writeMem(0x4ea2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x15cb, gbc.sp());
        EXPECT(0x4ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0245
        gbc.setState(0x8c31, 0xd932, 0x9ef0, 0x395c, 0x9ff4, 0xad60, 0x0, 0x0);
        gbc.writeMem(0x8c31, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd932, gbc.sp());
        EXPECT(0x8c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c31));
        EXPECT(0x9, gbc.readMem(0x8c32));
        // CB 09 0246
        gbc.setState(0x891e, 0x7f43, 0xe030, 0xa5ed, 0x23d5, 0x6333, 0x0, 0x1);
        gbc.writeMem(0x891e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7f43, gbc.sp());
        EXPECT(0x8920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x891e));
        EXPECT(0x9, gbc.readMem(0x891f));
        // CB 09 0247
        gbc.setState(0xb92b, 0xa1a8, 0xd1f0, 0xbe13, 0x26c8, 0x85b7, 0x1, 0x1);
        gbc.writeMem(0xb92b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa1a8, gbc.sp());
        EXPECT(0xb92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb92b));
        EXPECT(0x9, gbc.readMem(0xb92c));
        // CB 09 0248
        gbc.setState(0xdbb, 0x37f5, 0x1730, 0x2343, 0x1750, 0xe8d5, 0x0, 0x1);
        gbc.writeMem(0xdbb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x37f5, gbc.sp());
        EXPECT(0xdbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0249
        gbc.setState(0x86ae, 0xc2be, 0x6aa0, 0xc9f3, 0x307f, 0x73fb, 0x1, 0x1);
        gbc.writeMem(0x86ae, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc2be, gbc.sp());
        EXPECT(0x86b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ae));
        EXPECT(0x9, gbc.readMem(0x86af));
        // CB 09 024A
        gbc.setState(0x6419, 0xd9fa, 0x76c0, 0x3333, 0x6a5, 0x9f85, 0x1, 0x0);
        gbc.writeMem(0x6419, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd9fa, gbc.sp());
        EXPECT(0x641b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 024B
        gbc.setState(0xa36e, 0xb103, 0x8990, 0x47a5, 0xdbb5, 0xd771, 0x0, 0x0);
        gbc.writeMem(0xa36e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb103, gbc.sp());
        EXPECT(0xa370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36e));
        EXPECT(0x9, gbc.readMem(0xa36f));
        // CB 09 024C
        gbc.setState(0xeb90, 0xe096, 0x8a50, 0x9d7e, 0xbae, 0x8e17, 0x1, 0x1);
        gbc.writeMem(0xeb90, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe096, gbc.sp());
        EXPECT(0xeb92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb90));
        EXPECT(0x9, gbc.readMem(0xeb91));
        // CB 09 024D
        gbc.setState(0x302e, 0x9fae, 0xd320, 0xba83, 0x2bfc, 0xc177, 0x1, 0x0);
        gbc.writeMem(0x302e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9fae, gbc.sp());
        EXPECT(0x3030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 024E
        gbc.setState(0x2889, 0x431, 0x5a20, 0x7a50, 0xa2ab, 0x9c03, 0x0, 0x1);
        gbc.writeMem(0x2889, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x431, gbc.sp());
        EXPECT(0x288b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 024F
        gbc.setState(0x402e, 0x2bb2, 0xaec0, 0xf1d2, 0xa2ff, 0x5b89, 0x0, 0x0);
        gbc.writeMem(0x402e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2bb2, gbc.sp());
        EXPECT(0x4030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0250
        gbc.setState(0x660, 0x7412, 0xcf0, 0xc43a, 0xabb8, 0xa927, 0x1, 0x0);
        gbc.writeMem(0x660, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7412, gbc.sp());
        EXPECT(0x662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0251
        gbc.setState(0x21d9, 0xacee, 0x8760, 0xe979, 0x6b44, 0x1575, 0x0, 0x1);
        gbc.writeMem(0x21d9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xacee, gbc.sp());
        EXPECT(0x21db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0252
        gbc.setState(0x854d, 0xc861, 0xbef0, 0x2d50, 0xc6ab, 0xe78, 0x1, 0x0);
        gbc.writeMem(0x854d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc861, gbc.sp());
        EXPECT(0x854f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854d));
        EXPECT(0x9, gbc.readMem(0x854e));
        // CB 09 0253
        gbc.setState(0x799, 0x935b, 0x9510, 0x8873, 0x148c, 0x4888, 0x0, 0x1);
        gbc.writeMem(0x799, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x935b, gbc.sp());
        EXPECT(0x79b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0254
        gbc.setState(0xfb1, 0xdcd4, 0xd620, 0xc48b, 0x4d1d, 0x1277, 0x1, 0x0);
        gbc.writeMem(0xfb1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdcd4, gbc.sp());
        EXPECT(0xfb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0256
        gbc.setState(0xc30e, 0x7c70, 0xe0a0, 0xf24a, 0xd2b8, 0xbc91, 0x0, 0x0);
        gbc.writeMem(0xc30e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7c70, gbc.sp());
        EXPECT(0xc310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30e));
        EXPECT(0x9, gbc.readMem(0xc30f));
        // CB 09 0257
        gbc.setState(0xee4e, 0xc604, 0x4040, 0x30f8, 0xe370, 0x224f, 0x0, 0x0);
        gbc.writeMem(0xee4e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc604, gbc.sp());
        EXPECT(0xee50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee4e));
        EXPECT(0x9, gbc.readMem(0xee4f));
        // CB 09 0258
        gbc.setState(0x6d96, 0x4c70, 0x8a80, 0x4514, 0x13ed, 0x381a, 0x0, 0x0);
        gbc.writeMem(0x6d96, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4c70, gbc.sp());
        EXPECT(0x6d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0259
        gbc.setState(0x9986, 0x23d4, 0x8630, 0xb0d9, 0x1911, 0xcdf9, 0x1, 0x0);
        gbc.writeMem(0x9986, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x23d4, gbc.sp());
        EXPECT(0x9988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9986));
        EXPECT(0x9, gbc.readMem(0x9987));
        // CB 09 025B
        gbc.setState(0x1095, 0xc326, 0xe870, 0x9aa7, 0xabed, 0x5a8e, 0x0, 0x0);
        gbc.writeMem(0x1095, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc326, gbc.sp());
        EXPECT(0x1097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 025C
        gbc.setState(0xc1d9, 0x57f7, 0xee0, 0x95fb, 0x3de2, 0x5716, 0x0, 0x1);
        gbc.writeMem(0xc1d9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x57f7, gbc.sp());
        EXPECT(0xc1db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d9));
        EXPECT(0x9, gbc.readMem(0xc1da));
        // CB 09 025D
        gbc.setState(0xd430, 0xe7ed, 0xa810, 0x3001, 0xf3b2, 0x6191, 0x0, 0x1);
        gbc.writeMem(0xd430, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe7ed, gbc.sp());
        EXPECT(0xd432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd430));
        EXPECT(0x9, gbc.readMem(0xd431));
        // CB 09 025E
        gbc.setState(0x5c09, 0x219a, 0x7600, 0x7127, 0xcb55, 0x3622, 0x0, 0x1);
        gbc.writeMem(0x5c09, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x219a, gbc.sp());
        EXPECT(0x5c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0260
        gbc.setState(0x92c4, 0x61a5, 0x84f0, 0xd46c, 0x291, 0x3af9, 0x1, 0x0);
        gbc.writeMem(0x92c4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x61a5, gbc.sp());
        EXPECT(0x92c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c4));
        EXPECT(0x9, gbc.readMem(0x92c5));
        // CB 09 0261
        gbc.setState(0x5d2b, 0xd361, 0xde50, 0x5dff, 0x5673, 0x1cdd, 0x1, 0x1);
        gbc.writeMem(0x5d2b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd361, gbc.sp());
        EXPECT(0x5d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0262
        gbc.setState(0xb10c, 0x5095, 0x64c0, 0xfb83, 0xe609, 0xefe1, 0x0, 0x1);
        gbc.writeMem(0xb10c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5095, gbc.sp());
        EXPECT(0xb10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10c));
        EXPECT(0x9, gbc.readMem(0xb10d));
        // CB 09 0263
        gbc.setState(0x4dab, 0x1995, 0x1600, 0xf4c9, 0x6e3c, 0xbe1c, 0x0, 0x0);
        gbc.writeMem(0x4dab, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1995, gbc.sp());
        EXPECT(0x4dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0264
        gbc.setState(0x959a, 0x2839, 0xb310, 0x4ae, 0x16c6, 0x5909, 0x0, 0x1);
        gbc.writeMem(0x959a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2839, gbc.sp());
        EXPECT(0x959c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x959a));
        EXPECT(0x9, gbc.readMem(0x959b));
        // CB 09 0265
        gbc.setState(0x196a, 0xc910, 0x9210, 0x539e, 0x9680, 0xba6a, 0x0, 0x1);
        gbc.writeMem(0x196a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc910, gbc.sp());
        EXPECT(0x196c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0266
        gbc.setState(0xb312, 0x94ce, 0xf600, 0x475, 0xbd2, 0x2ac1, 0x0, 0x0);
        gbc.writeMem(0xb312, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x94ce, gbc.sp());
        EXPECT(0xb314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb312));
        EXPECT(0x9, gbc.readMem(0xb313));
        // CB 09 0267
        gbc.setState(0xf18, 0xa988, 0x7080, 0x74f8, 0x8813, 0x84e1, 0x1, 0x1);
        gbc.writeMem(0xf18, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa988, gbc.sp());
        EXPECT(0xf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0268
        gbc.setState(0x2988, 0xa73d, 0xc3e0, 0x7ce2, 0x80ab, 0x5e53, 0x0, 0x0);
        gbc.writeMem(0x2988, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa73d, gbc.sp());
        EXPECT(0x298a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0269
        gbc.setState(0xa645, 0xe2fc, 0x8680, 0x4b49, 0x3e3, 0x6c9f, 0x0, 0x0);
        gbc.writeMem(0xa645, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe2fc, gbc.sp());
        EXPECT(0xa647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa645));
        EXPECT(0x9, gbc.readMem(0xa646));
        // CB 09 026A
        gbc.setState(0xa646, 0x4b33, 0x41b0, 0x5307, 0x34ce, 0xa1c2, 0x0, 0x0);
        gbc.writeMem(0xa646, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4b33, gbc.sp());
        EXPECT(0xa648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa646));
        EXPECT(0x9, gbc.readMem(0xa647));
        // CB 09 026B
        gbc.setState(0xcb49, 0xbe0, 0x2970, 0x656d, 0x8257, 0x5167, 0x0, 0x1);
        gbc.writeMem(0xcb49, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbe0, gbc.sp());
        EXPECT(0xcb4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb49));
        EXPECT(0x9, gbc.readMem(0xcb4a));
        // CB 09 026C
        gbc.setState(0x79cd, 0x9427, 0xbfd0, 0x4e4f, 0x6743, 0xd314, 0x0, 0x0);
        gbc.writeMem(0x79cd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9427, gbc.sp());
        EXPECT(0x79cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 026D
        gbc.setState(0x9ed1, 0x5b84, 0x5410, 0x69dc, 0xe4b3, 0xc135, 0x0, 0x1);
        gbc.writeMem(0x9ed1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5b84, gbc.sp());
        EXPECT(0x9ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed1));
        EXPECT(0x9, gbc.readMem(0x9ed2));
        // CB 09 026E
        gbc.setState(0xd1ad, 0x5e59, 0x6f10, 0x9474, 0x2dc9, 0x30fa, 0x1, 0x1);
        gbc.writeMem(0xd1ad, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5e59, gbc.sp());
        EXPECT(0xd1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ad));
        EXPECT(0x9, gbc.readMem(0xd1ae));
        // CB 09 026F
        gbc.setState(0x9395, 0x9a66, 0x4770, 0xb050, 0xcc07, 0x7aa2, 0x0, 0x1);
        gbc.writeMem(0x9395, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9a66, gbc.sp());
        EXPECT(0x9397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9395));
        EXPECT(0x9, gbc.readMem(0x9396));
        // CB 09 0270
        gbc.setState(0xa37f, 0x6ed9, 0xcb30, 0x39c9, 0x8075, 0x7080, 0x1, 0x1);
        gbc.writeMem(0xa37f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6ed9, gbc.sp());
        EXPECT(0xa381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37f));
        EXPECT(0x9, gbc.readMem(0xa380));
        // CB 09 0271
        gbc.setState(0xb30c, 0xefeb, 0xec10, 0xcd3d, 0x2d81, 0x9c2, 0x1, 0x0);
        gbc.writeMem(0xb30c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xefeb, gbc.sp());
        EXPECT(0xb30e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb30c));
        EXPECT(0x9, gbc.readMem(0xb30d));
        // CB 09 0272
        gbc.setState(0xc58b, 0xee45, 0x2fc0, 0x27bf, 0x2580, 0xf9ec, 0x0, 0x0);
        gbc.writeMem(0xc58b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xee45, gbc.sp());
        EXPECT(0xc58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58b));
        EXPECT(0x9, gbc.readMem(0xc58c));
        // CB 09 0273
        gbc.setState(0x5e1b, 0xc32f, 0xf10, 0x6212, 0xe42e, 0xa3b1, 0x1, 0x0);
        gbc.writeMem(0x5e1b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc32f, gbc.sp());
        EXPECT(0x5e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0274
        gbc.setState(0x2c6b, 0xbb95, 0x9800, 0xc6d5, 0x3cc, 0xdf07, 0x0, 0x1);
        gbc.writeMem(0x2c6b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbb95, gbc.sp());
        EXPECT(0x2c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0275
        gbc.setState(0xadfb, 0xa8fb, 0x57d0, 0xe86a, 0xa998, 0xc8a6, 0x0, 0x1);
        gbc.writeMem(0xadfb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa8fb, gbc.sp());
        EXPECT(0xadfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadfb));
        EXPECT(0x9, gbc.readMem(0xadfc));
        // CB 09 0276
        gbc.setState(0xda5e, 0x8367, 0x6e70, 0x8a51, 0xe9b, 0x7e78, 0x0, 0x1);
        gbc.writeMem(0xda5e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8367, gbc.sp());
        EXPECT(0xda60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5e));
        EXPECT(0x9, gbc.readMem(0xda5f));
        // CB 09 0277
        gbc.setState(0x1d3e, 0xafe2, 0x3af0, 0xd27d, 0xbad4, 0x7c70, 0x1, 0x1);
        gbc.writeMem(0x1d3e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xafe2, gbc.sp());
        EXPECT(0x1d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0278
        gbc.setState(0xaff1, 0xc1, 0x86a0, 0x6532, 0xf585, 0xd086, 0x0, 0x0);
        gbc.writeMem(0xaff1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc1, gbc.sp());
        EXPECT(0xaff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff1));
        EXPECT(0x9, gbc.readMem(0xaff2));
        // CB 09 0279
        gbc.setState(0xeb5c, 0x90cf, 0x3900, 0xd658, 0xd44d, 0xcb63, 0x1, 0x0);
        gbc.writeMem(0xeb5c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x90cf, gbc.sp());
        EXPECT(0xeb5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb5c));
        EXPECT(0x9, gbc.readMem(0xeb5d));
        // CB 09 027A
        gbc.setState(0xe5cc, 0x556c, 0x6760, 0x4e86, 0x10f9, 0x7b76, 0x0, 0x1);
        gbc.writeMem(0xe5cc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x556c, gbc.sp());
        EXPECT(0xe5ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5cc));
        EXPECT(0x9, gbc.readMem(0xe5cd));
        // CB 09 027B
        gbc.setState(0xad3e, 0xd07d, 0x7570, 0x1dcb, 0x9958, 0x227d, 0x1, 0x0);
        gbc.writeMem(0xad3e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd07d, gbc.sp());
        EXPECT(0xad40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad3e));
        EXPECT(0x9, gbc.readMem(0xad3f));
        // CB 09 027C
        gbc.setState(0x503, 0xc2a9, 0x6530, 0xc884, 0x3a48, 0x2a53, 0x0, 0x0);
        gbc.writeMem(0x503, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc2a9, gbc.sp());
        EXPECT(0x505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 027D
        gbc.setState(0xbbdd, 0x1f49, 0x4a70, 0xdcbe, 0xde2c, 0x9b2e, 0x0, 0x1);
        gbc.writeMem(0xbbdd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1f49, gbc.sp());
        EXPECT(0xbbdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbdd));
        EXPECT(0x9, gbc.readMem(0xbbde));
        // CB 09 027E
        gbc.setState(0x3e35, 0x39df, 0xcda0, 0x7f7c, 0xf30c, 0x2908, 0x0, 0x0);
        gbc.writeMem(0x3e35, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x39df, gbc.sp());
        EXPECT(0x3e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 027F
        gbc.setState(0x9199, 0x27fb, 0xa5a0, 0x4a94, 0x828e, 0x638f, 0x1, 0x0);
        gbc.writeMem(0x9199, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x27fb, gbc.sp());
        EXPECT(0x919b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9199));
        EXPECT(0x9, gbc.readMem(0x919a));
        // CB 09 0281
        gbc.setState(0x39ef, 0xe954, 0xd140, 0xc08e, 0xda51, 0x8fa8, 0x0, 0x0);
        gbc.writeMem(0x39ef, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe954, gbc.sp());
        EXPECT(0x39f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0282
        gbc.setState(0xc952, 0xec7f, 0x8440, 0x1bbb, 0x5192, 0x5a6c, 0x0, 0x1);
        gbc.writeMem(0xc952, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xec7f, gbc.sp());
        EXPECT(0xc954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc952));
        EXPECT(0x9, gbc.readMem(0xc953));
        // CB 09 0283
        gbc.setState(0x55cc, 0xb097, 0x7a10, 0x4514, 0xe1f0, 0x86e8, 0x1, 0x1);
        gbc.writeMem(0x55cc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb097, gbc.sp());
        EXPECT(0x55ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0284
        gbc.setState(0xd606, 0xb29, 0xfea0, 0xc9ef, 0x3d94, 0x2d74, 0x0, 0x0);
        gbc.writeMem(0xd606, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb29, gbc.sp());
        EXPECT(0xd608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd606));
        EXPECT(0x9, gbc.readMem(0xd607));
        // CB 09 0285
        gbc.setState(0x3fd, 0xde3f, 0xfaf0, 0xeb68, 0x4cf7, 0xd28a, 0x1, 0x1);
        gbc.writeMem(0x3fd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xde3f, gbc.sp());
        EXPECT(0x3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0286
        gbc.setState(0x3235, 0xe3fe, 0xcac0, 0x1f13, 0x74b3, 0xb3c7, 0x1, 0x0);
        gbc.writeMem(0x3235, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe3fe, gbc.sp());
        EXPECT(0x3237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0287
        gbc.setState(0xd348, 0x5648, 0x6c20, 0xbfb2, 0x29df, 0x2a11, 0x1, 0x0);
        gbc.writeMem(0xd348, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5648, gbc.sp());
        EXPECT(0xd34a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd348));
        EXPECT(0x9, gbc.readMem(0xd349));
        // CB 09 0288
        gbc.setState(0x35c9, 0xd2d4, 0x32f0, 0x9a37, 0xd53a, 0xaa87, 0x0, 0x1);
        gbc.writeMem(0x35c9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd2d4, gbc.sp());
        EXPECT(0x35cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0289
        gbc.setState(0x89b, 0x161c, 0x8dd0, 0xe9ca, 0x828d, 0x28fe, 0x0, 0x1);
        gbc.writeMem(0x89b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x161c, gbc.sp());
        EXPECT(0x89d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 028A
        gbc.setState(0x7027, 0xb129, 0x9150, 0x4fad, 0x53d6, 0xcfa3, 0x1, 0x0);
        gbc.writeMem(0x7027, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb129, gbc.sp());
        EXPECT(0x7029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 028B
        gbc.setState(0x40f6, 0x77a9, 0xc530, 0xc103, 0x723b, 0xf3bb, 0x1, 0x1);
        gbc.writeMem(0x40f6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x77a9, gbc.sp());
        EXPECT(0x40f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 028C
        gbc.setState(0x553b, 0x2f8b, 0xb710, 0x234a, 0x5f0f, 0x8b6f, 0x0, 0x1);
        gbc.writeMem(0x553b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2f8b, gbc.sp());
        EXPECT(0x553d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 028D
        gbc.setState(0x4611, 0x2e90, 0xe680, 0x9bb4, 0x5d9b, 0x4f9f, 0x0, 0x1);
        gbc.writeMem(0x4611, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2e90, gbc.sp());
        EXPECT(0x4613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 028E
        gbc.setState(0x5d62, 0x6f09, 0xd3f0, 0x12f2, 0x396c, 0x2386, 0x0, 0x0);
        gbc.writeMem(0x5d62, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6f09, gbc.sp());
        EXPECT(0x5d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 028F
        gbc.setState(0x689f, 0x805f, 0xfad0, 0xbd35, 0xd266, 0x807a, 0x0, 0x0);
        gbc.writeMem(0x689f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x805f, gbc.sp());
        EXPECT(0x68a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0290
        gbc.setState(0xc655, 0xfd95, 0x66e0, 0xecee, 0xba63, 0x8cd0, 0x1, 0x1);
        gbc.writeMem(0xc655, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfd95, gbc.sp());
        EXPECT(0xc657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc655));
        EXPECT(0x9, gbc.readMem(0xc656));
        // CB 09 0291
        gbc.setState(0x2e59, 0x3a08, 0x1190, 0x5bb8, 0xb397, 0xa6ac, 0x1, 0x1);
        gbc.writeMem(0x2e59, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3a08, gbc.sp());
        EXPECT(0x2e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0292
        gbc.setState(0xb14c, 0x7684, 0x8890, 0xa7ae, 0xc6f8, 0x9725, 0x0, 0x1);
        gbc.writeMem(0xb14c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7684, gbc.sp());
        EXPECT(0xb14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb14c));
        EXPECT(0x9, gbc.readMem(0xb14d));
        // CB 09 0293
        gbc.setState(0x5018, 0x3bb0, 0x78d0, 0x2a67, 0xf890, 0xb6b, 0x0, 0x0);
        gbc.writeMem(0x5018, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3bb0, gbc.sp());
        EXPECT(0x501a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0294
        gbc.setState(0x4d43, 0xd096, 0xcf70, 0xef98, 0x42be, 0xe44, 0x0, 0x0);
        gbc.writeMem(0x4d43, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd096, gbc.sp());
        EXPECT(0x4d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0295
        gbc.setState(0xb69, 0x69a5, 0xf220, 0x7b0a, 0x812d, 0xe818, 0x0, 0x1);
        gbc.writeMem(0xb69, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x69a5, gbc.sp());
        EXPECT(0xb6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0296
        gbc.setState(0xbcb0, 0xf958, 0x73c0, 0x15c0, 0xb62c, 0x24ae, 0x0, 0x0);
        gbc.writeMem(0xbcb0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf958, gbc.sp());
        EXPECT(0xbcb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb0));
        EXPECT(0x9, gbc.readMem(0xbcb1));
        // CB 09 0297
        gbc.setState(0x488e, 0x2c66, 0x8ab0, 0x6599, 0x4d55, 0x1585, 0x0, 0x1);
        gbc.writeMem(0x488e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2c66, gbc.sp());
        EXPECT(0x4890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0299
        gbc.setState(0xc94d, 0x187d, 0xcaa0, 0xa611, 0x69b3, 0x97d7, 0x1, 0x0);
        gbc.writeMem(0xc94d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x187d, gbc.sp());
        EXPECT(0xc94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94d));
        EXPECT(0x9, gbc.readMem(0xc94e));
        // CB 09 029A
        gbc.setState(0xe4f1, 0x4af4, 0x9870, 0x4ca5, 0x5e95, 0x7522, 0x0, 0x0);
        gbc.writeMem(0xe4f1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4af4, gbc.sp());
        EXPECT(0xe4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f1));
        EXPECT(0x9, gbc.readMem(0xe4f2));
        // CB 09 029B
        gbc.setState(0x4713, 0x800e, 0x8c40, 0x9f7c, 0x9e3f, 0xc993, 0x0, 0x1);
        gbc.writeMem(0x4713, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x800e, gbc.sp());
        EXPECT(0x4715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 029C
        gbc.setState(0x4b86, 0xff6d, 0xfb0, 0xd724, 0x5bc3, 0xd9a1, 0x1, 0x1);
        gbc.writeMem(0x4b86, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xff6d, gbc.sp());
        EXPECT(0x4b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 029D
        gbc.setState(0x7c48, 0xf965, 0x97a0, 0xf57c, 0x195d, 0x19a5, 0x0, 0x0);
        gbc.writeMem(0x7c48, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf965, gbc.sp());
        EXPECT(0x7c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 029F
        gbc.setState(0x8184, 0xbd30, 0x98b0, 0x7c27, 0x2c02, 0xb537, 0x0, 0x0);
        gbc.writeMem(0x8184, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbd30, gbc.sp());
        EXPECT(0x8186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8184));
        EXPECT(0x9, gbc.readMem(0x8185));
        // CB 09 02A0
        gbc.setState(0x4969, 0xab21, 0x6640, 0x9c55, 0xd93e, 0xf2c9, 0x1, 0x0);
        gbc.writeMem(0x4969, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xab21, gbc.sp());
        EXPECT(0x496b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02A1
        gbc.setState(0xc0dd, 0xc4d5, 0x8160, 0x60ea, 0x794b, 0xd661, 0x1, 0x0);
        gbc.writeMem(0xc0dd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc4d5, gbc.sp());
        EXPECT(0xc0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0dd));
        EXPECT(0x9, gbc.readMem(0xc0de));
        // CB 09 02A2
        gbc.setState(0xd21d, 0x2a79, 0x5e20, 0x5ca2, 0x79dc, 0x5dc9, 0x0, 0x0);
        gbc.writeMem(0xd21d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2a79, gbc.sp());
        EXPECT(0xd21f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21d));
        EXPECT(0x9, gbc.readMem(0xd21e));
        // CB 09 02A4
        gbc.setState(0x8b8, 0x430, 0x6ca0, 0x92bc, 0xfa2e, 0x32d3, 0x1, 0x1);
        gbc.writeMem(0x8b8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x430, gbc.sp());
        EXPECT(0x8ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02A5
        gbc.setState(0xe7cd, 0x5872, 0x18a0, 0x190e, 0x292, 0x5da9, 0x1, 0x1);
        gbc.writeMem(0xe7cd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5872, gbc.sp());
        EXPECT(0xe7cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7cd));
        EXPECT(0x9, gbc.readMem(0xe7ce));
        // CB 09 02A6
        gbc.setState(0x501d, 0xebcf, 0x7be0, 0x635b, 0x3da3, 0xd449, 0x0, 0x1);
        gbc.writeMem(0x501d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xebcf, gbc.sp());
        EXPECT(0x501f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02A7
        gbc.setState(0x52ec, 0x680a, 0x76b0, 0xf1ab, 0xb5f2, 0x47f0, 0x0, 0x1);
        gbc.writeMem(0x52ec, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x680a, gbc.sp());
        EXPECT(0x52ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02A8
        gbc.setState(0x68d0, 0xc8d3, 0x8990, 0x1114, 0xd5cf, 0x8da0, 0x0, 0x1);
        gbc.writeMem(0x68d0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc8d3, gbc.sp());
        EXPECT(0x68d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02A9
        gbc.setState(0x6642, 0xce0b, 0xc100, 0x32b3, 0x6b1a, 0xf0ae, 0x0, 0x1);
        gbc.writeMem(0x6642, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xce0b, gbc.sp());
        EXPECT(0x6644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02AA
        gbc.setState(0x56f1, 0x7bfa, 0xd3f0, 0xcb1e, 0xb533, 0xc7a, 0x1, 0x1);
        gbc.writeMem(0x56f1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7bfa, gbc.sp());
        EXPECT(0x56f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02AC
        gbc.setState(0x6736, 0x707f, 0xbe70, 0x820c, 0x7c13, 0x40ae, 0x1, 0x1);
        gbc.writeMem(0x6736, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x707f, gbc.sp());
        EXPECT(0x6738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02AD
        gbc.setState(0x25e7, 0x4909, 0xf7f0, 0x981f, 0xc7aa, 0xb7e6, 0x1, 0x0);
        gbc.writeMem(0x25e7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4909, gbc.sp());
        EXPECT(0x25e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02AE
        gbc.setState(0x4002, 0xb5c4, 0xa890, 0x1a6f, 0xa8d, 0x2a9a, 0x1, 0x0);
        gbc.writeMem(0x4002, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb5c4, gbc.sp());
        EXPECT(0x4004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02AF
        gbc.setState(0xacd4, 0x7b3c, 0x5310, 0xe9b3, 0x602a, 0x893e, 0x0, 0x0);
        gbc.writeMem(0xacd4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7b3c, gbc.sp());
        EXPECT(0xacd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd4));
        EXPECT(0x9, gbc.readMem(0xacd5));
        // CB 09 02B0
        gbc.setState(0x348e, 0x978d, 0x7010, 0xee26, 0xada9, 0x808a, 0x1, 0x0);
        gbc.writeMem(0x348e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x978d, gbc.sp());
        EXPECT(0x3490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02B1
        gbc.setState(0x318f, 0x7293, 0x7db0, 0x77c1, 0x4f23, 0x6a2a, 0x1, 0x1);
        gbc.writeMem(0x318f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7293, gbc.sp());
        EXPECT(0x3191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02B2
        gbc.setState(0x14cc, 0x7d18, 0x5210, 0x9e84, 0xcd6b, 0x5ff0, 0x0, 0x1);
        gbc.writeMem(0x14cc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7d18, gbc.sp());
        EXPECT(0x14ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02B3
        gbc.setState(0xc346, 0xd5eb, 0xc690, 0x6635, 0xbc0c, 0x51c8, 0x0, 0x0);
        gbc.writeMem(0xc346, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd5eb, gbc.sp());
        EXPECT(0xc348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc346));
        EXPECT(0x9, gbc.readMem(0xc347));
        // CB 09 02B4
        gbc.setState(0xb036, 0xe179, 0xd0b0, 0xbd2e, 0xf160, 0x6ad1, 0x1, 0x0);
        gbc.writeMem(0xb036, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe179, gbc.sp());
        EXPECT(0xb038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb036));
        EXPECT(0x9, gbc.readMem(0xb037));
        // CB 09 02B5
        gbc.setState(0x49d3, 0x47df, 0xa680, 0x7d67, 0xfe07, 0x3e17, 0x0, 0x1);
        gbc.writeMem(0x49d3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x47df, gbc.sp());
        EXPECT(0x49d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02B6
        gbc.setState(0x54ca, 0xfe0a, 0xd370, 0xf8b6, 0x2e5f, 0x9510, 0x1, 0x0);
        gbc.writeMem(0x54ca, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfe0a, gbc.sp());
        EXPECT(0x54cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02B8
        gbc.setState(0x8306, 0xfc54, 0x51f0, 0xa21, 0x6f41, 0x9e2c, 0x1, 0x1);
        gbc.writeMem(0x8306, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfc54, gbc.sp());
        EXPECT(0x8308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8306));
        EXPECT(0x9, gbc.readMem(0x8307));
        // CB 09 02B9
        gbc.setState(0x1434, 0x85a8, 0x1500, 0x2b83, 0x6156, 0xee4f, 0x1, 0x0);
        gbc.writeMem(0x1434, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x85a8, gbc.sp());
        EXPECT(0x1436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02BA
        gbc.setState(0x3d66, 0x4c6b, 0xdfc0, 0x216a, 0x2d8d, 0xb737, 0x0, 0x1);
        gbc.writeMem(0x3d66, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4c6b, gbc.sp());
        EXPECT(0x3d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02BB
        gbc.setState(0xa4c5, 0xc061, 0x7c20, 0x4b2d, 0x4a39, 0x8f4e, 0x1, 0x0);
        gbc.writeMem(0xa4c5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc061, gbc.sp());
        EXPECT(0xa4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c5));
        EXPECT(0x9, gbc.readMem(0xa4c6));
        // CB 09 02BC
        gbc.setState(0x8b92, 0xe9a6, 0xd8d0, 0xa38, 0xfb34, 0xb368, 0x0, 0x1);
        gbc.writeMem(0x8b92, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe9a6, gbc.sp());
        EXPECT(0x8b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b92));
        EXPECT(0x9, gbc.readMem(0x8b93));
        // CB 09 02BD
        gbc.setState(0xbf21, 0xe465, 0xdb70, 0xfe91, 0xa451, 0xd6be, 0x0, 0x1);
        gbc.writeMem(0xbf21, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe465, gbc.sp());
        EXPECT(0xbf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf21));
        EXPECT(0x9, gbc.readMem(0xbf22));
        // CB 09 02BF
        gbc.setState(0xafc3, 0x9400, 0x800, 0xdc6d, 0x25fe, 0x5020, 0x0, 0x1);
        gbc.writeMem(0xafc3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9400, gbc.sp());
        EXPECT(0xafc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc3));
        EXPECT(0x9, gbc.readMem(0xafc4));
        // CB 09 02C0
        gbc.setState(0x2570, 0x9b39, 0x580, 0x1a6d, 0xe844, 0x5a4b, 0x0, 0x1);
        gbc.writeMem(0x2570, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9b39, gbc.sp());
        EXPECT(0x2572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02C1
        gbc.setState(0x24b4, 0x68c9, 0xdea0, 0xf853, 0x48dc, 0xe075, 0x0, 0x1);
        gbc.writeMem(0x24b4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x68c9, gbc.sp());
        EXPECT(0x24b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02C2
        gbc.setState(0x933, 0x9d74, 0x3d0, 0xdaf6, 0x6777, 0x74ab, 0x0, 0x0);
        gbc.writeMem(0x933, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9d74, gbc.sp());
        EXPECT(0x935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02C3
        gbc.setState(0xc7f2, 0xc484, 0xf440, 0xd9fa, 0xb16d, 0x7b03, 0x0, 0x1);
        gbc.writeMem(0xc7f2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc484, gbc.sp());
        EXPECT(0xc7f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f2));
        EXPECT(0x9, gbc.readMem(0xc7f3));
        // CB 09 02C5
        gbc.setState(0x8799, 0x97c2, 0x2970, 0x82e9, 0x21d3, 0xae51, 0x0, 0x1);
        gbc.writeMem(0x8799, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x97c2, gbc.sp());
        EXPECT(0x879b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8799));
        EXPECT(0x9, gbc.readMem(0x879a));
        // CB 09 02C6
        gbc.setState(0x54f0, 0x4f17, 0x2e10, 0xbc35, 0x750c, 0xd274, 0x0, 0x0);
        gbc.writeMem(0x54f0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4f17, gbc.sp());
        EXPECT(0x54f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02C7
        gbc.setState(0xef9, 0x78e4, 0x6180, 0xa07a, 0x4461, 0xc34b, 0x0, 0x1);
        gbc.writeMem(0xef9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x78e4, gbc.sp());
        EXPECT(0xefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02C8
        gbc.setState(0xe212, 0xf828, 0x4390, 0x7b60, 0xfd19, 0x895f, 0x1, 0x1);
        gbc.writeMem(0xe212, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf828, gbc.sp());
        EXPECT(0xe214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe212));
        EXPECT(0x9, gbc.readMem(0xe213));
        // CB 09 02C9
        gbc.setState(0xc543, 0xb5de, 0xd650, 0x2309, 0x85ac, 0x3067, 0x1, 0x0);
        gbc.writeMem(0xc543, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb5de, gbc.sp());
        EXPECT(0xc545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc543));
        EXPECT(0x9, gbc.readMem(0xc544));
        // CB 09 02CA
        gbc.setState(0x452, 0x5fcc, 0x7230, 0x2bde, 0x4b15, 0x7a47, 0x1, 0x0);
        gbc.writeMem(0x452, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5fcc, gbc.sp());
        EXPECT(0x454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02CC
        gbc.setState(0xe75c, 0xc23, 0x810, 0xfaab, 0x8961, 0x5abc, 0x0, 0x1);
        gbc.writeMem(0xe75c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc23, gbc.sp());
        EXPECT(0xe75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75c));
        EXPECT(0x9, gbc.readMem(0xe75d));
        // CB 09 02CD
        gbc.setState(0x8c4, 0xbf81, 0x2ed0, 0x3d59, 0xd932, 0x7714, 0x0, 0x1);
        gbc.writeMem(0x8c4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbf81, gbc.sp());
        EXPECT(0x8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02CE
        gbc.setState(0xcd34, 0x234c, 0x21e0, 0xf835, 0x7763, 0xf47f, 0x1, 0x1);
        gbc.writeMem(0xcd34, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x234c, gbc.sp());
        EXPECT(0xcd36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd34));
        EXPECT(0x9, gbc.readMem(0xcd35));
        // CB 09 02CF
        gbc.setState(0xadc9, 0xd4ba, 0x2b20, 0x9b13, 0xdebe, 0x7b44, 0x0, 0x0);
        gbc.writeMem(0xadc9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd4ba, gbc.sp());
        EXPECT(0xadcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc9));
        EXPECT(0x9, gbc.readMem(0xadca));
        // CB 09 02D0
        gbc.setState(0xae54, 0x8598, 0xe190, 0x354e, 0x189f, 0xc6d6, 0x0, 0x1);
        gbc.writeMem(0xae54, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8598, gbc.sp());
        EXPECT(0xae56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae54));
        EXPECT(0x9, gbc.readMem(0xae55));
        // CB 09 02D1
        gbc.setState(0x126d, 0x48aa, 0xec80, 0x9786, 0x1e9e, 0xdc76, 0x1, 0x1);
        gbc.writeMem(0x126d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x48aa, gbc.sp());
        EXPECT(0x126f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02D2
        gbc.setState(0x5b07, 0x40df, 0xb380, 0xb33d, 0xb2e, 0x828c, 0x1, 0x0);
        gbc.writeMem(0x5b07, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x40df, gbc.sp());
        EXPECT(0x5b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02D3
        gbc.setState(0x6357, 0xd618, 0x160, 0x93, 0xb115, 0xb571, 0x1, 0x0);
        gbc.writeMem(0x6357, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd618, gbc.sp());
        EXPECT(0x6359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02D4
        gbc.setState(0x12, 0x3a6e, 0xa710, 0xff94, 0x4e94, 0x6abe, 0x0, 0x1);
        gbc.writeMem(0x12, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3a6e, gbc.sp());
        EXPECT(0x14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02D5
        gbc.setState(0x946e, 0x9d9b, 0xb260, 0x3cf8, 0x6ed, 0x7ed9, 0x0, 0x1);
        gbc.writeMem(0x946e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9d9b, gbc.sp());
        EXPECT(0x9470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946e));
        EXPECT(0x9, gbc.readMem(0x946f));
        // CB 09 02D6
        gbc.setState(0x9, 0x4dcb, 0x5040, 0x53db, 0x5655, 0x13c8, 0x0, 0x1);
        gbc.writeMem(0x9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4dcb, gbc.sp());
        EXPECT(0xb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02D7
        gbc.setState(0xeee4, 0x30f5, 0xd540, 0x6375, 0xb94b, 0x6a51, 0x1, 0x0);
        gbc.writeMem(0xeee4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x30f5, gbc.sp());
        EXPECT(0xeee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee4));
        EXPECT(0x9, gbc.readMem(0xeee5));
        // CB 09 02D8
        gbc.setState(0x15, 0xb3ea, 0x35d0, 0x88da, 0x94a3, 0xd05f, 0x0, 0x0);
        gbc.writeMem(0x15, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb3ea, gbc.sp());
        EXPECT(0x17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02D9
        gbc.setState(0x232a, 0x23c3, 0xd580, 0x2f9a, 0x5b51, 0xab23, 0x1, 0x1);
        gbc.writeMem(0x232a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x23c3, gbc.sp());
        EXPECT(0x232c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02DB
        gbc.setState(0x81de, 0x1855, 0x9de0, 0xd184, 0x74fe, 0x5d30, 0x0, 0x1);
        gbc.writeMem(0x81de, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1855, gbc.sp());
        EXPECT(0x81e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81de));
        EXPECT(0x9, gbc.readMem(0x81df));
        // CB 09 02DC
        gbc.setState(0xa99f, 0x20, 0xaa40, 0x11c1, 0x2856, 0xd7b1, 0x0, 0x0);
        gbc.writeMem(0xa99f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x20, gbc.sp());
        EXPECT(0xa9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99f));
        EXPECT(0x9, gbc.readMem(0xa9a0));
        // CB 09 02DD
        gbc.setState(0x5939, 0xb67a, 0x78a0, 0x57ca, 0xbbcb, 0x1173, 0x0, 0x1);
        gbc.writeMem(0x5939, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb67a, gbc.sp());
        EXPECT(0x593b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02DF
        gbc.setState(0xc4fd, 0x31bb, 0x49b0, 0x116a, 0xf7f3, 0x8a85, 0x1, 0x1);
        gbc.writeMem(0xc4fd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x31bb, gbc.sp());
        EXPECT(0xc4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4fd));
        EXPECT(0x9, gbc.readMem(0xc4fe));
        // CB 09 02E0
        gbc.setState(0x8fb5, 0x9e98, 0xb50, 0xca95, 0xe2fb, 0xf5f, 0x1, 0x0);
        gbc.writeMem(0x8fb5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9e98, gbc.sp());
        EXPECT(0x8fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb5));
        EXPECT(0x9, gbc.readMem(0x8fb6));
        // CB 09 02E1
        gbc.setState(0xee0e, 0x7df0, 0xa630, 0x1333, 0xf850, 0xccf, 0x0, 0x0);
        gbc.writeMem(0xee0e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7df0, gbc.sp());
        EXPECT(0xee10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee0e));
        EXPECT(0x9, gbc.readMem(0xee0f));
        // CB 09 02E2
        gbc.setState(0xdabe, 0xe5ac, 0x5b90, 0x94c7, 0xcae0, 0x2df8, 0x0, 0x1);
        gbc.writeMem(0xdabe, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe5ac, gbc.sp());
        EXPECT(0xdac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabe));
        EXPECT(0x9, gbc.readMem(0xdabf));
        // CB 09 02E3
        gbc.setState(0x966a, 0x727e, 0x10b0, 0xbdf3, 0x9296, 0x6f97, 0x1, 0x0);
        gbc.writeMem(0x966a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x727e, gbc.sp());
        EXPECT(0x966c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x966a));
        EXPECT(0x9, gbc.readMem(0x966b));
        // CB 09 02E4
        gbc.setState(0x7b73, 0xa980, 0xbb60, 0xbddc, 0x33cc, 0x97ea, 0x0, 0x0);
        gbc.writeMem(0x7b73, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa980, gbc.sp());
        EXPECT(0x7b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02E5
        gbc.setState(0x4977, 0x8352, 0xbd0, 0x15db, 0xb01d, 0xa884, 0x0, 0x1);
        gbc.writeMem(0x4977, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8352, gbc.sp());
        EXPECT(0x4979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02E6
        gbc.setState(0x39db, 0x1730, 0xc160, 0x8eee, 0xc82b, 0xfa2a, 0x0, 0x0);
        gbc.writeMem(0x39db, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1730, gbc.sp());
        EXPECT(0x39dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02E7
        gbc.setState(0xde91, 0xafd, 0x98e0, 0xbe53, 0xa77e, 0x58f, 0x0, 0x0);
        gbc.writeMem(0xde91, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xafd, gbc.sp());
        EXPECT(0xde93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde91));
        EXPECT(0x9, gbc.readMem(0xde92));
        // CB 09 02E8
        gbc.setState(0xa358, 0xd08, 0xfb0, 0xfcaf, 0xbd18, 0x2340, 0x0, 0x0);
        gbc.writeMem(0xa358, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd08, gbc.sp());
        EXPECT(0xa35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa358));
        EXPECT(0x9, gbc.readMem(0xa359));
        // CB 09 02E9
        gbc.setState(0x7951, 0x9e7b, 0x21a0, 0x84b9, 0xc060, 0x7817, 0x0, 0x1);
        gbc.writeMem(0x7951, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9e7b, gbc.sp());
        EXPECT(0x7953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02EA
        gbc.setState(0x32db, 0xc863, 0xed90, 0xff6e, 0x50c2, 0x8cc, 0x0, 0x0);
        gbc.writeMem(0x32db, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc863, gbc.sp());
        EXPECT(0x32dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02EB
        gbc.setState(0xd85c, 0x50cf, 0x5bc0, 0x1b97, 0x57e0, 0xbcfe, 0x0, 0x0);
        gbc.writeMem(0xd85c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x50cf, gbc.sp());
        EXPECT(0xd85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85c));
        EXPECT(0x9, gbc.readMem(0xd85d));
        // CB 09 02EC
        gbc.setState(0x5811, 0x68bc, 0x91a0, 0xecf2, 0x459c, 0x1a4d, 0x1, 0x0);
        gbc.writeMem(0x5811, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x68bc, gbc.sp());
        EXPECT(0x5813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02ED
        gbc.setState(0x9ebe, 0x9757, 0x3b30, 0x4c27, 0x1dd2, 0x67e3, 0x1, 0x1);
        gbc.writeMem(0x9ebe, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9757, gbc.sp());
        EXPECT(0x9ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ebe));
        EXPECT(0x9, gbc.readMem(0x9ebf));
        // CB 09 02EE
        gbc.setState(0x1ad4, 0x224c, 0xf650, 0x8e0f, 0x77b, 0xf499, 0x0, 0x1);
        gbc.writeMem(0x1ad4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x224c, gbc.sp());
        EXPECT(0x1ad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02EF
        gbc.setState(0xaebb, 0x6a91, 0x8b90, 0xe01c, 0x6dbc, 0xd852, 0x1, 0x1);
        gbc.writeMem(0xaebb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6a91, gbc.sp());
        EXPECT(0xaebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaebb));
        EXPECT(0x9, gbc.readMem(0xaebc));
        // CB 09 02F0
        gbc.setState(0xc8bd, 0xbd11, 0xdf90, 0x8690, 0x3481, 0x77f3, 0x0, 0x0);
        gbc.writeMem(0xc8bd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbd11, gbc.sp());
        EXPECT(0xc8bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8bd));
        EXPECT(0x9, gbc.readMem(0xc8be));
        // CB 09 02F1
        gbc.setState(0x1101, 0x54cd, 0xd7d0, 0xc562, 0xb04c, 0x3478, 0x0, 0x1);
        gbc.writeMem(0x1101, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x54cd, gbc.sp());
        EXPECT(0x1103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02F2
        gbc.setState(0xe3d, 0x4fb7, 0x9aa0, 0x53e, 0xad9e, 0x1d52, 0x1, 0x0);
        gbc.writeMem(0xe3d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4fb7, gbc.sp());
        EXPECT(0xe3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02F3
        gbc.setState(0x97e1, 0x2378, 0xf610, 0x138b, 0x63d8, 0xa431, 0x1, 0x1);
        gbc.writeMem(0x97e1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2378, gbc.sp());
        EXPECT(0x97e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e1));
        EXPECT(0x9, gbc.readMem(0x97e2));
        // CB 09 02F4
        gbc.setState(0xe63f, 0x5b2b, 0x60e0, 0x40b6, 0x3548, 0x7bf4, 0x0, 0x0);
        gbc.writeMem(0xe63f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5b2b, gbc.sp());
        EXPECT(0xe641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe63f));
        EXPECT(0x9, gbc.readMem(0xe640));
        // CB 09 02F5
        gbc.setState(0xc82d, 0x1bde, 0x1ce0, 0x7fcb, 0x7084, 0x8206, 0x0, 0x0);
        gbc.writeMem(0xc82d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1bde, gbc.sp());
        EXPECT(0xc82f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc82d));
        EXPECT(0x9, gbc.readMem(0xc82e));
        // CB 09 02F6
        gbc.setState(0x10f0, 0x3806, 0x4060, 0xb14, 0xbd77, 0x3a14, 0x0, 0x1);
        gbc.writeMem(0x10f0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3806, gbc.sp());
        EXPECT(0x10f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02F7
        gbc.setState(0xbe53, 0xedd9, 0xada0, 0x91ae, 0xf8d8, 0xbfec, 0x1, 0x1);
        gbc.writeMem(0xbe53, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xedd9, gbc.sp());
        EXPECT(0xbe55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe53));
        EXPECT(0x9, gbc.readMem(0xbe54));
        // CB 09 02F8
        gbc.setState(0x63da, 0x995a, 0x440, 0x94eb, 0x8f26, 0xb010, 0x1, 0x1);
        gbc.writeMem(0x63da, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x995a, gbc.sp());
        EXPECT(0x63dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 02F9
        gbc.setState(0x86d, 0x808c, 0x6b80, 0x29b8, 0x9d94, 0x1b79, 0x0, 0x1);
        gbc.writeMem(0x86d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x808c, gbc.sp());
        EXPECT(0x86f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02FA
        gbc.setState(0xbc69, 0xe6a4, 0x3210, 0x8d9b, 0x32f0, 0x79ba, 0x0, 0x0);
        gbc.writeMem(0xbc69, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe6a4, gbc.sp());
        EXPECT(0xbc6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc69));
        EXPECT(0x9, gbc.readMem(0xbc6a));
        // CB 09 02FB
        gbc.setState(0xda60, 0x7f18, 0x3b60, 0x7dfc, 0x16cc, 0x3f5f, 0x0, 0x0);
        gbc.writeMem(0xda60, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7f18, gbc.sp());
        EXPECT(0xda62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda60));
        EXPECT(0x9, gbc.readMem(0xda61));
        // CB 09 02FC
        gbc.setState(0xab17, 0xc554, 0xe940, 0x4118, 0xcb5e, 0x8d71, 0x1, 0x1);
        gbc.writeMem(0xab17, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc554, gbc.sp());
        EXPECT(0xab19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab17));
        EXPECT(0x9, gbc.readMem(0xab18));
        // CB 09 02FD
        gbc.setState(0x2098, 0xc25, 0x7490, 0xd7fe, 0xaa9f, 0x2d94, 0x0, 0x0);
        gbc.writeMem(0x2098, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc25, gbc.sp());
        EXPECT(0x209a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 02FE
        gbc.setState(0x9a23, 0xf0b6, 0xbd10, 0x3ef9, 0x33ba, 0x1d8, 0x1, 0x0);
        gbc.writeMem(0x9a23, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf0b6, gbc.sp());
        EXPECT(0x9a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a23));
        EXPECT(0x9, gbc.readMem(0x9a24));
        // CB 09 02FF
        gbc.setState(0x2090, 0x8d52, 0x7d30, 0x23a8, 0xf923, 0xcf1, 0x0, 0x0);
        gbc.writeMem(0x2090, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8d52, gbc.sp());
        EXPECT(0x2092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0300
        gbc.setState(0x7f06, 0x1195, 0x64b0, 0x76a9, 0x6fb5, 0xfdd7, 0x1, 0x1);
        gbc.writeMem(0x7f06, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1195, gbc.sp());
        EXPECT(0x7f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0301
        gbc.setState(0xbe48, 0x8e08, 0x1e80, 0xce50, 0xb9c7, 0x28f0, 0x0, 0x0);
        gbc.writeMem(0xbe48, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8e08, gbc.sp());
        EXPECT(0xbe4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe48));
        EXPECT(0x9, gbc.readMem(0xbe49));
        // CB 09 0302
        gbc.setState(0x8855, 0x74ce, 0xaed0, 0x5753, 0xa1d4, 0xe4a2, 0x0, 0x0);
        gbc.writeMem(0x8855, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x74ce, gbc.sp());
        EXPECT(0x8857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8855));
        EXPECT(0x9, gbc.readMem(0x8856));
        // CB 09 0303
        gbc.setState(0xc1cd, 0x4b8c, 0xf7d0, 0x3970, 0x7726, 0x9788, 0x0, 0x1);
        gbc.writeMem(0xc1cd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4b8c, gbc.sp());
        EXPECT(0xc1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1cd));
        EXPECT(0x9, gbc.readMem(0xc1ce));
        // CB 09 0304
        gbc.setState(0x8f07, 0x4d41, 0x7be0, 0xcf73, 0x9999, 0xe095, 0x1, 0x0);
        gbc.writeMem(0x8f07, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4d41, gbc.sp());
        EXPECT(0x8f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f07));
        EXPECT(0x9, gbc.readMem(0x8f08));
        // CB 09 0305
        gbc.setState(0xcae2, 0x5a70, 0xba60, 0xdec6, 0x615a, 0xaf2b, 0x1, 0x1);
        gbc.writeMem(0xcae2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5a70, gbc.sp());
        EXPECT(0xcae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae2));
        EXPECT(0x9, gbc.readMem(0xcae3));
        // CB 09 0306
        gbc.setState(0x5692, 0x4450, 0x7f50, 0x8ab0, 0xd99b, 0x3cff, 0x0, 0x0);
        gbc.writeMem(0x5692, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4450, gbc.sp());
        EXPECT(0x5694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0307
        gbc.setState(0x2319, 0xa853, 0xbcb0, 0x635d, 0x5081, 0x57d9, 0x0, 0x0);
        gbc.writeMem(0x2319, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa853, gbc.sp());
        EXPECT(0x231b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0308
        gbc.setState(0xd1bb, 0x8b99, 0x5f20, 0xfcde, 0x432b, 0x4bf9, 0x1, 0x1);
        gbc.writeMem(0xd1bb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8b99, gbc.sp());
        EXPECT(0xd1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bb));
        EXPECT(0x9, gbc.readMem(0xd1bc));
        // CB 09 0309
        gbc.setState(0x55d9, 0x743f, 0xa1d0, 0x7b45, 0x68b2, 0x4694, 0x0, 0x1);
        gbc.writeMem(0x55d9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x743f, gbc.sp());
        EXPECT(0x55db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 030A
        gbc.setState(0x13d8, 0x83d2, 0x1e50, 0x33a9, 0x7ff4, 0x4933, 0x1, 0x0);
        gbc.writeMem(0x13d8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x83d2, gbc.sp());
        EXPECT(0x13da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 030B
        gbc.setState(0xc152, 0xcf5e, 0x5bc0, 0xb3b7, 0xaa79, 0xa2a3, 0x1, 0x1);
        gbc.writeMem(0xc152, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcf5e, gbc.sp());
        EXPECT(0xc154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc152));
        EXPECT(0x9, gbc.readMem(0xc153));
        // CB 09 030C
        gbc.setState(0xba39, 0xc5d5, 0xc330, 0xfb46, 0x38c9, 0x4269, 0x0, 0x0);
        gbc.writeMem(0xba39, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc5d5, gbc.sp());
        EXPECT(0xba3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba39));
        EXPECT(0x9, gbc.readMem(0xba3a));
        // CB 09 030D
        gbc.setState(0x4338, 0x2022, 0xcaa0, 0x22f6, 0x312b, 0x6d3a, 0x1, 0x0);
        gbc.writeMem(0x4338, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2022, gbc.sp());
        EXPECT(0x433a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 030E
        gbc.setState(0xca2d, 0x66af, 0x40d0, 0xac9c, 0x9f02, 0x65b9, 0x1, 0x0);
        gbc.writeMem(0xca2d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x66af, gbc.sp());
        EXPECT(0xca2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2d));
        EXPECT(0x9, gbc.readMem(0xca2e));
        // CB 09 030F
        gbc.setState(0x680a, 0xa9b4, 0x7ea0, 0x3af8, 0x7cff, 0x53b9, 0x1, 0x1);
        gbc.writeMem(0x680a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa9b4, gbc.sp());
        EXPECT(0x680c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0310
        gbc.setState(0x23de, 0xa397, 0xb0, 0x589, 0xd5bd, 0x6565, 0x1, 0x1);
        gbc.writeMem(0x23de, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa397, gbc.sp());
        EXPECT(0x23e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0311
        gbc.setState(0x1a2d, 0x2120, 0xbcd0, 0x65db, 0xb959, 0x8b90, 0x1, 0x0);
        gbc.writeMem(0x1a2d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2120, gbc.sp());
        EXPECT(0x1a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0312
        gbc.setState(0xa992, 0xd1f7, 0xc330, 0x17af, 0x6159, 0x9ade, 0x1, 0x0);
        gbc.writeMem(0xa992, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd1f7, gbc.sp());
        EXPECT(0xa994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa992));
        EXPECT(0x9, gbc.readMem(0xa993));
        // CB 09 0313
        gbc.setState(0xcc05, 0xdaf9, 0x3d40, 0xd927, 0x1afb, 0xae04, 0x0, 0x1);
        gbc.writeMem(0xcc05, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdaf9, gbc.sp());
        EXPECT(0xcc07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc05));
        EXPECT(0x9, gbc.readMem(0xcc06));
        // CB 09 0314
        gbc.setState(0xe450, 0xab84, 0x2bb0, 0x7b97, 0x11da, 0x4f87, 0x0, 0x0);
        gbc.writeMem(0xe450, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xab84, gbc.sp());
        EXPECT(0xe452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe450));
        EXPECT(0x9, gbc.readMem(0xe451));
        // CB 09 0315
        gbc.setState(0xe7a3, 0xce37, 0xeaa0, 0xf2f7, 0x627a, 0x1826, 0x1, 0x1);
        gbc.writeMem(0xe7a3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xce37, gbc.sp());
        EXPECT(0xe7a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a3));
        EXPECT(0x9, gbc.readMem(0xe7a4));
        // CB 09 0316
        gbc.setState(0x2f0b, 0x5e97, 0xb980, 0x9da8, 0x5c3d, 0xc092, 0x0, 0x1);
        gbc.writeMem(0x2f0b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5e97, gbc.sp());
        EXPECT(0x2f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0317
        gbc.setState(0xcae7, 0x8609, 0xf660, 0x2a93, 0xa8a6, 0x908d, 0x1, 0x1);
        gbc.writeMem(0xcae7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8609, gbc.sp());
        EXPECT(0xcae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae7));
        EXPECT(0x9, gbc.readMem(0xcae8));
        // CB 09 0318
        gbc.setState(0xa4a9, 0x6cdd, 0x8d60, 0xe143, 0xcb05, 0xa8b4, 0x1, 0x1);
        gbc.writeMem(0xa4a9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6cdd, gbc.sp());
        EXPECT(0xa4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4a9));
        EXPECT(0x9, gbc.readMem(0xa4aa));
        // CB 09 0319
        gbc.setState(0x70bf, 0xf7ed, 0xc610, 0xa563, 0x8b31, 0xbe8e, 0x1, 0x1);
        gbc.writeMem(0x70bf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf7ed, gbc.sp());
        EXPECT(0x70c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 031A
        gbc.setState(0x5072, 0x6d23, 0xbf40, 0xffa, 0x38c6, 0xa197, 0x0, 0x0);
        gbc.writeMem(0x5072, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6d23, gbc.sp());
        EXPECT(0x5074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 031B
        gbc.setState(0xd9cb, 0xf934, 0x2880, 0x4b82, 0x94f4, 0x9b8b, 0x0, 0x1);
        gbc.writeMem(0xd9cb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf934, gbc.sp());
        EXPECT(0xd9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9cb));
        EXPECT(0x9, gbc.readMem(0xd9cc));
        // CB 09 031C
        gbc.setState(0xbed0, 0xe706, 0xaf90, 0x1bc2, 0xdbbf, 0x752d, 0x1, 0x1);
        gbc.writeMem(0xbed0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe706, gbc.sp());
        EXPECT(0xbed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed0));
        EXPECT(0x9, gbc.readMem(0xbed1));
        // CB 09 031D
        gbc.setState(0xd47e, 0xb61e, 0x6960, 0xb9a5, 0xd4c3, 0x96f9, 0x0, 0x1);
        gbc.writeMem(0xd47e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb61e, gbc.sp());
        EXPECT(0xd480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47e));
        EXPECT(0x9, gbc.readMem(0xd47f));
        // CB 09 031E
        gbc.setState(0x6ce4, 0xaf6f, 0xb600, 0x5af9, 0xc17d, 0xd541, 0x1, 0x0);
        gbc.writeMem(0x6ce4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xaf6f, gbc.sp());
        EXPECT(0x6ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 031F
        gbc.setState(0x3f95, 0x7c34, 0xddf0, 0x7676, 0x9cef, 0xa18b, 0x1, 0x1);
        gbc.writeMem(0x3f95, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7c34, gbc.sp());
        EXPECT(0x3f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0320
        gbc.setState(0x1b46, 0x9a29, 0x3850, 0xc194, 0x7f82, 0xbaa5, 0x0, 0x0);
        gbc.writeMem(0x1b46, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9a29, gbc.sp());
        EXPECT(0x1b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0321
        gbc.setState(0x5e8d, 0x8089, 0x7e10, 0x704c, 0x7fb3, 0x92b4, 0x0, 0x1);
        gbc.writeMem(0x5e8d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8089, gbc.sp());
        EXPECT(0x5e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0322
        gbc.setState(0x3830, 0x8c6c, 0xb6f0, 0xb971, 0x5b94, 0x94ec, 0x1, 0x0);
        gbc.writeMem(0x3830, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8c6c, gbc.sp());
        EXPECT(0x3832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0323
        gbc.setState(0xca34, 0xd6, 0x8150, 0x3e72, 0x303e, 0x398f, 0x0, 0x0);
        gbc.writeMem(0xca34, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd6, gbc.sp());
        EXPECT(0xca36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca34));
        EXPECT(0x9, gbc.readMem(0xca35));
        // CB 09 0324
        gbc.setState(0x1e9b, 0x8f5a, 0x6e50, 0x9fa7, 0x10f7, 0x8093, 0x0, 0x0);
        gbc.writeMem(0x1e9b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8f5a, gbc.sp());
        EXPECT(0x1e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0325
        gbc.setState(0x3a10, 0xb854, 0x1a40, 0x38dd, 0x8689, 0xd9fa, 0x1, 0x1);
        gbc.writeMem(0x3a10, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb854, gbc.sp());
        EXPECT(0x3a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0326
        gbc.setState(0xc89e, 0x9084, 0xed50, 0xb554, 0x6865, 0xc9b1, 0x0, 0x1);
        gbc.writeMem(0xc89e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9084, gbc.sp());
        EXPECT(0xc8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc89e));
        EXPECT(0x9, gbc.readMem(0xc89f));
        // CB 09 0327
        gbc.setState(0xc85e, 0x5779, 0xd2c0, 0x4470, 0xaa2f, 0x1371, 0x0, 0x0);
        gbc.writeMem(0xc85e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5779, gbc.sp());
        EXPECT(0xc860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc85e));
        EXPECT(0x9, gbc.readMem(0xc85f));
        // CB 09 0329
        gbc.setState(0xe850, 0xc66c, 0xaf80, 0xa96b, 0x3113, 0x72e3, 0x1, 0x0);
        gbc.writeMem(0xe850, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc66c, gbc.sp());
        EXPECT(0xe852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe850));
        EXPECT(0x9, gbc.readMem(0xe851));
        // CB 09 032A
        gbc.setState(0xd83c, 0x1c8a, 0x6d20, 0x3c76, 0x2699, 0x6e7b, 0x1, 0x1);
        gbc.writeMem(0xd83c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1c8a, gbc.sp());
        EXPECT(0xd83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd83c));
        EXPECT(0x9, gbc.readMem(0xd83d));
        // CB 09 032B
        gbc.setState(0xd98, 0xc139, 0xce90, 0x7eb5, 0x427b, 0x763e, 0x0, 0x1);
        gbc.writeMem(0xd98, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc139, gbc.sp());
        EXPECT(0xd9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 032C
        gbc.setState(0xbd92, 0x48b5, 0xeb50, 0x1403, 0xbba9, 0xa480, 0x1, 0x0);
        gbc.writeMem(0xbd92, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x48b5, gbc.sp());
        EXPECT(0xbd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd92));
        EXPECT(0x9, gbc.readMem(0xbd93));
        // CB 09 032D
        gbc.setState(0xeb21, 0x305f, 0xf880, 0x197b, 0x9c3a, 0xb5b2, 0x1, 0x0);
        gbc.writeMem(0xeb21, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x305f, gbc.sp());
        EXPECT(0xeb23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb21));
        EXPECT(0x9, gbc.readMem(0xeb22));
        // CB 09 032E
        gbc.setState(0x8898, 0x93ab, 0x9d0, 0x953b, 0xf9a2, 0xce34, 0x1, 0x1);
        gbc.writeMem(0x8898, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x93ab, gbc.sp());
        EXPECT(0x889a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8898));
        EXPECT(0x9, gbc.readMem(0x8899));
        // CB 09 032F
        gbc.setState(0xe989, 0xc9c3, 0xeaa0, 0xc059, 0x2ebd, 0xfdc7, 0x1, 0x1);
        gbc.writeMem(0xe989, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc9c3, gbc.sp());
        EXPECT(0xe98b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe989));
        EXPECT(0x9, gbc.readMem(0xe98a));
        // CB 09 0330
        gbc.setState(0x874b, 0xbf21, 0xabe0, 0xd7ca, 0xe5b6, 0xd6df, 0x0, 0x1);
        gbc.writeMem(0x874b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbf21, gbc.sp());
        EXPECT(0x874d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874b));
        EXPECT(0x9, gbc.readMem(0x874c));
        // CB 09 0331
        gbc.setState(0x5c44, 0x5ba0, 0xd770, 0x5c71, 0xf790, 0xb23, 0x1, 0x0);
        gbc.writeMem(0x5c44, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5ba0, gbc.sp());
        EXPECT(0x5c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0332
        gbc.setState(0xada9, 0xc971, 0x8cc0, 0xdfe7, 0x7606, 0x40a6, 0x1, 0x1);
        gbc.writeMem(0xada9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc971, gbc.sp());
        EXPECT(0xadab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada9));
        EXPECT(0x9, gbc.readMem(0xadaa));
        // CB 09 0333
        gbc.setState(0x8ee9, 0x9672, 0x4490, 0xc12, 0x9b0f, 0x33d1, 0x0, 0x1);
        gbc.writeMem(0x8ee9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9672, gbc.sp());
        EXPECT(0x8eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee9));
        EXPECT(0x9, gbc.readMem(0x8eea));
        // CB 09 0334
        gbc.setState(0x4f22, 0x8b47, 0x32d0, 0x9ecc, 0x9eed, 0xdd6e, 0x0, 0x0);
        gbc.writeMem(0x4f22, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8b47, gbc.sp());
        EXPECT(0x4f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0335
        gbc.setState(0x1902, 0x8c37, 0x2740, 0x7e5, 0xd1f9, 0x9de5, 0x0, 0x1);
        gbc.writeMem(0x1902, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8c37, gbc.sp());
        EXPECT(0x1904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0336
        gbc.setState(0x2f35, 0x5d1, 0x4090, 0x10a2, 0x650f, 0x4303, 0x1, 0x0);
        gbc.writeMem(0x2f35, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5d1, gbc.sp());
        EXPECT(0x2f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0337
        gbc.setState(0xa3f, 0x8236, 0xb6a0, 0xfd44, 0xa1f1, 0x181c, 0x1, 0x0);
        gbc.writeMem(0xa3f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8236, gbc.sp());
        EXPECT(0xa41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0338
        gbc.setState(0xc592, 0xaba5, 0xa080, 0xa506, 0x5e94, 0xba25, 0x0, 0x1);
        gbc.writeMem(0xc592, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xaba5, gbc.sp());
        EXPECT(0xc594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc592));
        EXPECT(0x9, gbc.readMem(0xc593));
        // CB 09 0339
        gbc.setState(0x7c4b, 0x9380, 0x3810, 0x1ec, 0x6805, 0xb47e, 0x0, 0x0);
        gbc.writeMem(0x7c4b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9380, gbc.sp());
        EXPECT(0x7c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 033A
        gbc.setState(0x597c, 0xaf96, 0x3c50, 0x416f, 0xbc40, 0x9c3f, 0x0, 0x1);
        gbc.writeMem(0x597c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xaf96, gbc.sp());
        EXPECT(0x597e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 033B
        gbc.setState(0x7f67, 0xc82b, 0xffa0, 0x4916, 0x3961, 0x9dd0, 0x0, 0x1);
        gbc.writeMem(0x7f67, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc82b, gbc.sp());
        EXPECT(0x7f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 033C
        gbc.setState(0xec45, 0xec24, 0xc0f0, 0x4dfd, 0x84ac, 0x4383, 0x1, 0x1);
        gbc.writeMem(0xec45, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xec24, gbc.sp());
        EXPECT(0xec47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec45));
        EXPECT(0x9, gbc.readMem(0xec46));
        // CB 09 033D
        gbc.setState(0x90c4, 0x214a, 0xe250, 0x7ea6, 0xdf73, 0xa49c, 0x0, 0x0);
        gbc.writeMem(0x90c4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x214a, gbc.sp());
        EXPECT(0x90c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c4));
        EXPECT(0x9, gbc.readMem(0x90c5));
        // CB 09 033E
        gbc.setState(0x511e, 0xb151, 0x8420, 0xbb4e, 0xf303, 0xf4e6, 0x1, 0x1);
        gbc.writeMem(0x511e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb151, gbc.sp());
        EXPECT(0x5120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 033F
        gbc.setState(0x69c3, 0x4663, 0xb960, 0x83d1, 0x498f, 0x7350, 0x0, 0x1);
        gbc.writeMem(0x69c3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4663, gbc.sp());
        EXPECT(0x69c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0341
        gbc.setState(0xdffe, 0x8884, 0x15d0, 0x1f68, 0x6bbf, 0xac1b, 0x0, 0x0);
        gbc.writeMem(0xdffe, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8884, gbc.sp());
        EXPECT(0xe000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdffe));
        EXPECT(0x9, gbc.readMem(0xdfff));
        // CB 09 0342
        gbc.setState(0xe0cf, 0xd82c, 0x13e0, 0x8623, 0x3723, 0x40e1, 0x0, 0x0);
        gbc.writeMem(0xe0cf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd82c, gbc.sp());
        EXPECT(0xe0d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0cf));
        EXPECT(0x9, gbc.readMem(0xe0d0));
        // CB 09 0343
        gbc.setState(0x553f, 0x1aec, 0x42b0, 0xf53, 0x41dc, 0x9db9, 0x0, 0x0);
        gbc.writeMem(0x553f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1aec, gbc.sp());
        EXPECT(0x5541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0344
        gbc.setState(0xe013, 0xfe18, 0xa10, 0x238a, 0x832a, 0xc5ca, 0x0, 0x0);
        gbc.writeMem(0xe013, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfe18, gbc.sp());
        EXPECT(0xe015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe013));
        EXPECT(0x9, gbc.readMem(0xe014));
        // CB 09 0345
        gbc.setState(0x3f8d, 0x126c, 0x9770, 0x5787, 0x4e37, 0x6f60, 0x1, 0x1);
        gbc.writeMem(0x3f8d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x126c, gbc.sp());
        EXPECT(0x3f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0346
        gbc.setState(0x52d, 0x415e, 0x9d0, 0xf820, 0x4a75, 0xc3ab, 0x1, 0x0);
        gbc.writeMem(0x52d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x415e, gbc.sp());
        EXPECT(0x52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0347
        gbc.setState(0x379, 0xdfe7, 0x9160, 0xb323, 0xb833, 0xced5, 0x1, 0x1);
        gbc.writeMem(0x379, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdfe7, gbc.sp());
        EXPECT(0x37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0348
        gbc.setState(0x3ea5, 0x930a, 0x6e70, 0x9445, 0xc2d8, 0x2568, 0x0, 0x1);
        gbc.writeMem(0x3ea5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x930a, gbc.sp());
        EXPECT(0x3ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0349
        gbc.setState(0x7818, 0x9c4b, 0xe390, 0x6f37, 0x37c7, 0x97ec, 0x0, 0x1);
        gbc.writeMem(0x7818, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9c4b, gbc.sp());
        EXPECT(0x781a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 034B
        gbc.setState(0x17df, 0x6d3a, 0x2f80, 0x7a91, 0xb54d, 0x521, 0x0, 0x1);
        gbc.writeMem(0x17df, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6d3a, gbc.sp());
        EXPECT(0x17e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 034C
        gbc.setState(0xafea, 0xefa6, 0xb500, 0xe3ea, 0x4f44, 0x36fb, 0x0, 0x0);
        gbc.writeMem(0xafea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xefa6, gbc.sp());
        EXPECT(0xafec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafea));
        EXPECT(0x9, gbc.readMem(0xafeb));
        // CB 09 034D
        gbc.setState(0x51bd, 0x8cff, 0xfa50, 0x3857, 0xf570, 0x4a81, 0x0, 0x0);
        gbc.writeMem(0x51bd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8cff, gbc.sp());
        EXPECT(0x51bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 034F
        gbc.setState(0xa49b, 0x598e, 0x310, 0xa3e, 0x9757, 0xd410, 0x0, 0x1);
        gbc.writeMem(0xa49b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x598e, gbc.sp());
        EXPECT(0xa49d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49b));
        EXPECT(0x9, gbc.readMem(0xa49c));
        // CB 09 0350
        gbc.setState(0xd753, 0x6067, 0x85a0, 0x808a, 0x561b, 0xbac0, 0x1, 0x1);
        gbc.writeMem(0xd753, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6067, gbc.sp());
        EXPECT(0xd755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd753));
        EXPECT(0x9, gbc.readMem(0xd754));
        // CB 09 0351
        gbc.setState(0x7a0c, 0xbf12, 0xef80, 0x2425, 0xd4f3, 0x97bc, 0x0, 0x1);
        gbc.writeMem(0x7a0c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbf12, gbc.sp());
        EXPECT(0x7a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0352
        gbc.setState(0x2261, 0xb39a, 0x9270, 0x46f2, 0x2b67, 0x816a, 0x0, 0x1);
        gbc.writeMem(0x2261, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb39a, gbc.sp());
        EXPECT(0x2263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0353
        gbc.setState(0x8cce, 0xb649, 0x330, 0x6f9f, 0x585c, 0xf67c, 0x1, 0x0);
        gbc.writeMem(0x8cce, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb649, gbc.sp());
        EXPECT(0x8cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cce));
        EXPECT(0x9, gbc.readMem(0x8ccf));
        // CB 09 0354
        gbc.setState(0x8130, 0x3156, 0x4a80, 0x774f, 0x327a, 0x7286, 0x1, 0x0);
        gbc.writeMem(0x8130, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3156, gbc.sp());
        EXPECT(0x8132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8130));
        EXPECT(0x9, gbc.readMem(0x8131));
        // CB 09 0355
        gbc.setState(0x6b7c, 0x796a, 0x8870, 0x107c, 0x1a7c, 0x9c85, 0x0, 0x0);
        gbc.writeMem(0x6b7c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x796a, gbc.sp());
        EXPECT(0x6b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0356
        gbc.setState(0x2599, 0xf118, 0x5890, 0x447c, 0x7e62, 0x5a3a, 0x0, 0x0);
        gbc.writeMem(0x2599, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf118, gbc.sp());
        EXPECT(0x259b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0357
        gbc.setState(0xcbe7, 0xd778, 0x1f50, 0x148a, 0x1d55, 0x9518, 0x1, 0x1);
        gbc.writeMem(0xcbe7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd778, gbc.sp());
        EXPECT(0xcbe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe7));
        EXPECT(0x9, gbc.readMem(0xcbe8));
        // CB 09 0358
        gbc.setState(0x3c30, 0x723f, 0xc0, 0xdffc, 0x2097, 0xb230, 0x0, 0x0);
        gbc.writeMem(0x3c30, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x723f, gbc.sp());
        EXPECT(0x3c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0359
        gbc.setState(0x56d3, 0x3a07, 0x59b0, 0xbf8d, 0x448, 0xf834, 0x0, 0x1);
        gbc.writeMem(0x56d3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3a07, gbc.sp());
        EXPECT(0x56d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 035A
        gbc.setState(0x6aaa, 0x7dbb, 0x4f60, 0x14d4, 0xa2e, 0xab5e, 0x1, 0x0);
        gbc.writeMem(0x6aaa, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7dbb, gbc.sp());
        EXPECT(0x6aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 035B
        gbc.setState(0x1e3a, 0xddb6, 0xf30, 0xd0e0, 0xfa59, 0x55ff, 0x1, 0x1);
        gbc.writeMem(0x1e3a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xddb6, gbc.sp());
        EXPECT(0x1e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 035C
        gbc.setState(0xefba, 0x62e3, 0x1ec0, 0x3448, 0x70e8, 0x9472, 0x0, 0x1);
        gbc.writeMem(0xefba, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x62e3, gbc.sp());
        EXPECT(0xefbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefba));
        EXPECT(0x9, gbc.readMem(0xefbb));
        // CB 09 035D
        gbc.setState(0x88df, 0x6c8f, 0x7df0, 0xb85c, 0x301f, 0x5593, 0x0, 0x0);
        gbc.writeMem(0x88df, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6c8f, gbc.sp());
        EXPECT(0x88e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88df));
        EXPECT(0x9, gbc.readMem(0x88e0));
        // CB 09 035E
        gbc.setState(0x892c, 0xfa9b, 0xc160, 0xba9f, 0xde05, 0xaa46, 0x1, 0x0);
        gbc.writeMem(0x892c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfa9b, gbc.sp());
        EXPECT(0x892e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x892c));
        EXPECT(0x9, gbc.readMem(0x892d));
        // CB 09 035F
        gbc.setState(0xd8ab, 0xc1a6, 0xeca0, 0x6457, 0x8b8f, 0x1f0b, 0x0, 0x1);
        gbc.writeMem(0xd8ab, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc1a6, gbc.sp());
        EXPECT(0xd8ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ab));
        EXPECT(0x9, gbc.readMem(0xd8ac));
        // CB 09 0360
        gbc.setState(0xe542, 0x1608, 0x5460, 0xcb2, 0x5b5c, 0xf47b, 0x1, 0x0);
        gbc.writeMem(0xe542, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1608, gbc.sp());
        EXPECT(0xe544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe542));
        EXPECT(0x9, gbc.readMem(0xe543));
        // CB 09 0361
        gbc.setState(0x1166, 0x24b1, 0x47a0, 0x9474, 0x9a21, 0x71a1, 0x0, 0x0);
        gbc.writeMem(0x1166, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x24b1, gbc.sp());
        EXPECT(0x1168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0362
        gbc.setState(0x5191, 0x2e10, 0x5650, 0x4ef8, 0xeb7a, 0x4226, 0x0, 0x0);
        gbc.writeMem(0x5191, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2e10, gbc.sp());
        EXPECT(0x5193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0363
        gbc.setState(0x31e7, 0x1cce, 0x5060, 0x3c5c, 0xf3d1, 0x5268, 0x0, 0x0);
        gbc.writeMem(0x31e7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1cce, gbc.sp());
        EXPECT(0x31e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0364
        gbc.setState(0xb243, 0x6a8b, 0x51c0, 0xae65, 0x6c54, 0x5674, 0x0, 0x0);
        gbc.writeMem(0xb243, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6a8b, gbc.sp());
        EXPECT(0xb245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb243));
        EXPECT(0x9, gbc.readMem(0xb244));
        // CB 09 0365
        gbc.setState(0xb42e, 0x8329, 0x5190, 0xdcff, 0x7ee5, 0x2d38, 0x1, 0x0);
        gbc.writeMem(0xb42e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8329, gbc.sp());
        EXPECT(0xb430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb42e));
        EXPECT(0x9, gbc.readMem(0xb42f));
        // CB 09 0366
        gbc.setState(0xcf54, 0xe6b1, 0x74d0, 0xb3d3, 0x5504, 0xc39b, 0x1, 0x0);
        gbc.writeMem(0xcf54, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe6b1, gbc.sp());
        EXPECT(0xcf56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf54));
        EXPECT(0x9, gbc.readMem(0xcf55));
        // CB 09 0367
        gbc.setState(0x14ae, 0x2b30, 0xefe0, 0x5640, 0x2745, 0x6d46, 0x1, 0x1);
        gbc.writeMem(0x14ae, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2b30, gbc.sp());
        EXPECT(0x14b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0368
        gbc.setState(0x3985, 0x3062, 0x71c0, 0xd07, 0xfe7c, 0xde8d, 0x1, 0x1);
        gbc.writeMem(0x3985, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3062, gbc.sp());
        EXPECT(0x3987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0369
        gbc.setState(0xc97e, 0x25a9, 0xf460, 0xd576, 0x3b34, 0xf1c7, 0x0, 0x1);
        gbc.writeMem(0xc97e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x25a9, gbc.sp());
        EXPECT(0xc980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc97e));
        EXPECT(0x9, gbc.readMem(0xc97f));
        // CB 09 036A
        gbc.setState(0x6048, 0xebfc, 0xab90, 0xd831, 0x9522, 0xb00a, 0x0, 0x0);
        gbc.writeMem(0x6048, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xebfc, gbc.sp());
        EXPECT(0x604a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 036B
        gbc.setState(0x93a8, 0x78c9, 0x6030, 0xa24d, 0xfb25, 0x1bc5, 0x1, 0x0);
        gbc.writeMem(0x93a8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x78c9, gbc.sp());
        EXPECT(0x93aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a8));
        EXPECT(0x9, gbc.readMem(0x93a9));
        // CB 09 036C
        gbc.setState(0x2793, 0xc79d, 0xc7e0, 0xa300, 0x193b, 0x52eb, 0x0, 0x1);
        gbc.writeMem(0x2793, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc79d, gbc.sp());
        EXPECT(0x2795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 036D
        gbc.setState(0x8300, 0x67ad, 0x4390, 0xe7c1, 0x9369, 0x5bfd, 0x1, 0x0);
        gbc.writeMem(0x8300, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x67ad, gbc.sp());
        EXPECT(0x8302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8300));
        EXPECT(0x9, gbc.readMem(0x8301));
        // CB 09 036E
        gbc.setState(0x5416, 0x8267, 0x5490, 0xe6b2, 0xd218, 0x39f7, 0x0, 0x0);
        gbc.writeMem(0x5416, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8267, gbc.sp());
        EXPECT(0x5418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 036F
        gbc.setState(0xd39e, 0xcbff, 0x84a0, 0x2de7, 0xf226, 0x6eeb, 0x1, 0x0);
        gbc.writeMem(0xd39e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcbff, gbc.sp());
        EXPECT(0xd3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd39e));
        EXPECT(0x9, gbc.readMem(0xd39f));
        // CB 09 0370
        gbc.setState(0xa2d, 0xccfa, 0x5160, 0xd4e4, 0x8d0, 0xb3ef, 0x1, 0x0);
        gbc.writeMem(0xa2d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xccfa, gbc.sp());
        EXPECT(0xa2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0372
        gbc.setState(0xb1d5, 0x1524, 0xae60, 0x6c8a, 0xeb3e, 0x52ce, 0x0, 0x0);
        gbc.writeMem(0xb1d5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1524, gbc.sp());
        EXPECT(0xb1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d5));
        EXPECT(0x9, gbc.readMem(0xb1d6));
        // CB 09 0373
        gbc.setState(0x12c8, 0x95b5, 0x8450, 0x7969, 0xe8df, 0x5cf8, 0x1, 0x0);
        gbc.writeMem(0x12c8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x95b5, gbc.sp());
        EXPECT(0x12ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0374
        gbc.setState(0xac98, 0x21a0, 0x8820, 0x2210, 0x2de8, 0xd50d, 0x0, 0x0);
        gbc.writeMem(0xac98, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x21a0, gbc.sp());
        EXPECT(0xac9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac98));
        EXPECT(0x9, gbc.readMem(0xac99));
        // CB 09 0375
        gbc.setState(0x38e9, 0x4eea, 0xccf0, 0x9c12, 0xcfa4, 0x386b, 0x0, 0x1);
        gbc.writeMem(0x38e9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4eea, gbc.sp());
        EXPECT(0x38eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0376
        gbc.setState(0x9876, 0xb648, 0x440, 0xbefc, 0x6d0a, 0x1690, 0x0, 0x0);
        gbc.writeMem(0x9876, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb648, gbc.sp());
        EXPECT(0x9878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9876));
        EXPECT(0x9, gbc.readMem(0x9877));
        // CB 09 0378
        gbc.setState(0xefc0, 0x90c1, 0xf9f0, 0x47eb, 0xd2cc, 0xd13, 0x1, 0x1);
        gbc.writeMem(0xefc0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x90c1, gbc.sp());
        EXPECT(0xefc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc0));
        EXPECT(0x9, gbc.readMem(0xefc1));
        // CB 09 0379
        gbc.setState(0x54c4, 0x37aa, 0xac40, 0x6175, 0xbc3e, 0x99d4, 0x0, 0x1);
        gbc.writeMem(0x54c4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x37aa, gbc.sp());
        EXPECT(0x54c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 037A
        gbc.setState(0x4a5c, 0xd09d, 0x9d0, 0xc012, 0x8163, 0x8c29, 0x1, 0x0);
        gbc.writeMem(0x4a5c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd09d, gbc.sp());
        EXPECT(0x4a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 037B
        gbc.setState(0xe2d2, 0x3000, 0x2b10, 0x24ee, 0x20e7, 0x7fc7, 0x0, 0x1);
        gbc.writeMem(0xe2d2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3000, gbc.sp());
        EXPECT(0xe2d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d2));
        EXPECT(0x9, gbc.readMem(0xe2d3));
        // CB 09 037C
        gbc.setState(0x2dc1, 0xd611, 0x1fd0, 0x8738, 0x362f, 0x223e, 0x1, 0x0);
        gbc.writeMem(0x2dc1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd611, gbc.sp());
        EXPECT(0x2dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 037D
        gbc.setState(0x1d80, 0x8c2e, 0xce00, 0xd33, 0xbbd7, 0xfbcf, 0x1, 0x1);
        gbc.writeMem(0x1d80, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8c2e, gbc.sp());
        EXPECT(0x1d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 037E
        gbc.setState(0xcd3, 0xe77c, 0x21c0, 0x48ea, 0xfa26, 0x4fa8, 0x1, 0x0);
        gbc.writeMem(0xcd3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe77c, gbc.sp());
        EXPECT(0xcd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 037F
        gbc.setState(0xcc69, 0xff14, 0x4d10, 0x19a, 0x21f3, 0xb6e0, 0x1, 0x0);
        gbc.writeMem(0xcc69, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xff14, gbc.sp());
        EXPECT(0xcc6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc69));
        EXPECT(0x9, gbc.readMem(0xcc6a));
        // CB 09 0380
        gbc.setState(0x6340, 0x98d2, 0x8000, 0x4424, 0x9063, 0x80c7, 0x0, 0x1);
        gbc.writeMem(0x6340, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x98d2, gbc.sp());
        EXPECT(0x6342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0381
        gbc.setState(0x5560, 0xab3e, 0xd010, 0xd79a, 0xcc58, 0x7f13, 0x1, 0x0);
        gbc.writeMem(0x5560, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xab3e, gbc.sp());
        EXPECT(0x5562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0382
        gbc.setState(0xb0ea, 0xe7be, 0xbe90, 0xe74e, 0x6afa, 0x4637, 0x1, 0x0);
        gbc.writeMem(0xb0ea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe7be, gbc.sp());
        EXPECT(0xb0ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ea));
        EXPECT(0x9, gbc.readMem(0xb0eb));
        // CB 09 0383
        gbc.setState(0x821b, 0x83, 0xfd10, 0x4b72, 0x17f5, 0x81af, 0x1, 0x0);
        gbc.writeMem(0x821b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x83, gbc.sp());
        EXPECT(0x821d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821b));
        EXPECT(0x9, gbc.readMem(0x821c));
        // CB 09 0384
        gbc.setState(0x1f5d, 0x1d7e, 0x5600, 0x4b72, 0x44ff, 0xcbf6, 0x0, 0x1);
        gbc.writeMem(0x1f5d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1d7e, gbc.sp());
        EXPECT(0x1f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0385
        gbc.setState(0x2f27, 0xdcb1, 0xa0d0, 0x5291, 0x486b, 0x2d7c, 0x0, 0x0);
        gbc.writeMem(0x2f27, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdcb1, gbc.sp());
        EXPECT(0x2f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0386
        gbc.setState(0x6e0, 0x50e9, 0xafe0, 0xeee8, 0xa258, 0xb396, 0x0, 0x1);
        gbc.writeMem(0x6e0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x50e9, gbc.sp());
        EXPECT(0x6e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0387
        gbc.setState(0x7f34, 0x7cdd, 0x9b40, 0x7f9a, 0xa61e, 0x2fd2, 0x1, 0x1);
        gbc.writeMem(0x7f34, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7cdd, gbc.sp());
        EXPECT(0x7f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0388
        gbc.setState(0xa7b6, 0x21, 0xcfd0, 0x57b3, 0xa4ad, 0xa596, 0x0, 0x0);
        gbc.writeMem(0xa7b6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x21, gbc.sp());
        EXPECT(0xa7b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b6));
        EXPECT(0x9, gbc.readMem(0xa7b7));
        // CB 09 0389
        gbc.setState(0x3495, 0xfff6, 0x6fc0, 0x224c, 0x36c7, 0x761a, 0x1, 0x1);
        gbc.writeMem(0x3495, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfff6, gbc.sp());
        EXPECT(0x3497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 038A
        gbc.setState(0xaff, 0x9e66, 0xb430, 0x34ea, 0x2f68, 0x36c1, 0x1, 0x1);
        gbc.writeMem(0xaff, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9e66, gbc.sp());
        EXPECT(0xb01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 038B
        gbc.setState(0x2b85, 0x524b, 0xf240, 0xf9c, 0x78f9, 0x611b, 0x1, 0x1);
        gbc.writeMem(0x2b85, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x524b, gbc.sp());
        EXPECT(0x2b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 038C
        gbc.setState(0xef0b, 0x8762, 0xf310, 0xc48b, 0x5eca, 0xec23, 0x0, 0x0);
        gbc.writeMem(0xef0b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8762, gbc.sp());
        EXPECT(0xef0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef0b));
        EXPECT(0x9, gbc.readMem(0xef0c));
        // CB 09 038D
        gbc.setState(0xea9b, 0xad9f, 0x4150, 0xa20f, 0x754d, 0x9461, 0x1, 0x0);
        gbc.writeMem(0xea9b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xad9f, gbc.sp());
        EXPECT(0xea9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea9b));
        EXPECT(0x9, gbc.readMem(0xea9c));
        // CB 09 038E
        gbc.setState(0xe076, 0x1c26, 0x2ea0, 0x45d3, 0x9bf5, 0x78d6, 0x1, 0x1);
        gbc.writeMem(0xe076, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1c26, gbc.sp());
        EXPECT(0xe078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe076));
        EXPECT(0x9, gbc.readMem(0xe077));
        // CB 09 038F
        gbc.setState(0xaf5f, 0xc8ba, 0x5290, 0x5094, 0x8cb0, 0x591e, 0x0, 0x1);
        gbc.writeMem(0xaf5f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc8ba, gbc.sp());
        EXPECT(0xaf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5f));
        EXPECT(0x9, gbc.readMem(0xaf60));
        // CB 09 0390
        gbc.setState(0x25ea, 0x42b, 0x2e20, 0x19df, 0x8c48, 0xf246, 0x1, 0x1);
        gbc.writeMem(0x25ea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x42b, gbc.sp());
        EXPECT(0x25ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0391
        gbc.setState(0x750a, 0x6bc7, 0x5000, 0x573, 0x3fbb, 0xb173, 0x1, 0x1);
        gbc.writeMem(0x750a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6bc7, gbc.sp());
        EXPECT(0x750c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0392
        gbc.setState(0xc2cd, 0xfa8b, 0x9c60, 0x1448, 0x2e27, 0x88d4, 0x1, 0x0);
        gbc.writeMem(0xc2cd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfa8b, gbc.sp());
        EXPECT(0xc2cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2cd));
        EXPECT(0x9, gbc.readMem(0xc2ce));
        // CB 09 0393
        gbc.setState(0x47eb, 0xa05f, 0xa0c0, 0x1016, 0x354d, 0x1e17, 0x0, 0x1);
        gbc.writeMem(0x47eb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa05f, gbc.sp());
        EXPECT(0x47ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0395
        gbc.setState(0x1618, 0x48c2, 0xbf40, 0xfc1e, 0xa5ff, 0xfc32, 0x0, 0x1);
        gbc.writeMem(0x1618, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x48c2, gbc.sp());
        EXPECT(0x161a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0396
        gbc.setState(0x59b4, 0x772d, 0xaa0, 0xacbe, 0x9f58, 0x8627, 0x0, 0x1);
        gbc.writeMem(0x59b4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x772d, gbc.sp());
        EXPECT(0x59b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 0397
        gbc.setState(0x399, 0x97b8, 0x10d0, 0x3227, 0xea51, 0x6980, 0x0, 0x0);
        gbc.writeMem(0x399, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x97b8, gbc.sp());
        EXPECT(0x39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 0398
        gbc.setState(0xdfb6, 0xff98, 0xdb70, 0xfd24, 0xf8f7, 0x8007, 0x1, 0x0);
        gbc.writeMem(0xdfb6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xff98, gbc.sp());
        EXPECT(0xdfb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb6));
        EXPECT(0x9, gbc.readMem(0xdfb7));
        // CB 09 0399
        gbc.setState(0x687c, 0x291b, 0x5470, 0xd4e8, 0x9eb1, 0x264d, 0x1, 0x0);
        gbc.writeMem(0x687c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x291b, gbc.sp());
        EXPECT(0x687e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 039A
        gbc.setState(0xd420, 0x57f7, 0xc2b0, 0xd577, 0x4c89, 0xfed1, 0x0, 0x1);
        gbc.writeMem(0xd420, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x57f7, gbc.sp());
        EXPECT(0xd422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd420));
        EXPECT(0x9, gbc.readMem(0xd421));
        // CB 09 039B
        gbc.setState(0xcf8f, 0xa68e, 0x2e0, 0xcb36, 0x913f, 0xc489, 0x0, 0x1);
        gbc.writeMem(0xcf8f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa68e, gbc.sp());
        EXPECT(0xcf91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf8f));
        EXPECT(0x9, gbc.readMem(0xcf90));
        // CB 09 039C
        gbc.setState(0x6ec1, 0xb205, 0xf1f0, 0x35aa, 0xf0ab, 0x5729, 0x0, 0x1);
        gbc.writeMem(0x6ec1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb205, gbc.sp());
        EXPECT(0x6ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 039D
        gbc.setState(0xd105, 0x5832, 0xca00, 0x9e77, 0x3690, 0xda7e, 0x0, 0x0);
        gbc.writeMem(0xd105, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5832, gbc.sp());
        EXPECT(0xd107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd105));
        EXPECT(0x9, gbc.readMem(0xd106));
        // CB 09 039E
        gbc.setState(0x8f59, 0xaf6a, 0x7490, 0x92f, 0x8b06, 0xe2f1, 0x1, 0x1);
        gbc.writeMem(0x8f59, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xaf6a, gbc.sp());
        EXPECT(0x8f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f59));
        EXPECT(0x9, gbc.readMem(0x8f5a));
        // CB 09 039F
        gbc.setState(0x4cfd, 0x95fb, 0x6bd0, 0xcd1, 0x1785, 0x3931, 0x1, 0x0);
        gbc.writeMem(0x4cfd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x95fb, gbc.sp());
        EXPECT(0x4cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03A0
        gbc.setState(0x255e, 0x6e7, 0x4e00, 0xe62, 0xcb18, 0x58f7, 0x1, 0x0);
        gbc.writeMem(0x255e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6e7, gbc.sp());
        EXPECT(0x2560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03A1
        gbc.setState(0xb95b, 0x5082, 0x4cc0, 0xaf7a, 0x35aa, 0xf35, 0x1, 0x1);
        gbc.writeMem(0xb95b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5082, gbc.sp());
        EXPECT(0xb95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb95b));
        EXPECT(0x9, gbc.readMem(0xb95c));
        // CB 09 03A2
        gbc.setState(0x503c, 0x8c61, 0x9c00, 0x96bc, 0xde6c, 0x2c89, 0x1, 0x1);
        gbc.writeMem(0x503c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8c61, gbc.sp());
        EXPECT(0x503e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03A3
        gbc.setState(0xe538, 0xc46b, 0xc4d0, 0x289f, 0xa506, 0xb55f, 0x0, 0x1);
        gbc.writeMem(0xe538, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc46b, gbc.sp());
        EXPECT(0xe53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe538));
        EXPECT(0x9, gbc.readMem(0xe539));
        // CB 09 03A4
        gbc.setState(0x14ea, 0xe213, 0xcc70, 0x81aa, 0x65f, 0x657e, 0x1, 0x0);
        gbc.writeMem(0x14ea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe213, gbc.sp());
        EXPECT(0x14ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03A5
        gbc.setState(0x1397, 0x8eb8, 0x5f10, 0xf33d, 0xf6f0, 0x8a8d, 0x0, 0x0);
        gbc.writeMem(0x1397, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8eb8, gbc.sp());
        EXPECT(0x1399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03A6
        gbc.setState(0xdb27, 0x39e7, 0x5970, 0x65b8, 0x7761, 0x15f9, 0x0, 0x1);
        gbc.writeMem(0xdb27, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x39e7, gbc.sp());
        EXPECT(0xdb29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb27));
        EXPECT(0x9, gbc.readMem(0xdb28));
        // CB 09 03A7
        gbc.setState(0xd55d, 0xba28, 0xfd60, 0xbb2e, 0x83cf, 0x92a2, 0x0, 0x1);
        gbc.writeMem(0xd55d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xba28, gbc.sp());
        EXPECT(0xd55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd55d));
        EXPECT(0x9, gbc.readMem(0xd55e));
        // CB 09 03A8
        gbc.setState(0x4c0f, 0x8953, 0xb2c0, 0x9ca4, 0xbb1d, 0xac59, 0x1, 0x0);
        gbc.writeMem(0x4c0f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8953, gbc.sp());
        EXPECT(0x4c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03A9
        gbc.setState(0xb7d4, 0x11e5, 0xb9e0, 0x203c, 0xac9b, 0x8a2a, 0x1, 0x1);
        gbc.writeMem(0xb7d4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x11e5, gbc.sp());
        EXPECT(0xb7d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d4));
        EXPECT(0x9, gbc.readMem(0xb7d5));
        // CB 09 03AA
        gbc.setState(0x2431, 0x7f90, 0x43a0, 0x50fa, 0x155b, 0x5e28, 0x0, 0x0);
        gbc.writeMem(0x2431, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7f90, gbc.sp());
        EXPECT(0x2433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03AB
        gbc.setState(0x14f9, 0xa207, 0x10, 0xb2bf, 0xf0be, 0xa611, 0x0, 0x1);
        gbc.writeMem(0x14f9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa207, gbc.sp());
        EXPECT(0x14fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03AC
        gbc.setState(0x6ad0, 0xb3cb, 0x6570, 0xbb21, 0x96b, 0x41c3, 0x1, 0x0);
        gbc.writeMem(0x6ad0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb3cb, gbc.sp());
        EXPECT(0x6ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03AD
        gbc.setState(0xcecc, 0x7b15, 0x87d0, 0x2d97, 0x8efc, 0x8e0c, 0x1, 0x1);
        gbc.writeMem(0xcecc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7b15, gbc.sp());
        EXPECT(0xcece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcecc));
        EXPECT(0x9, gbc.readMem(0xcecd));
        // CB 09 03AE
        gbc.setState(0x2a43, 0x5fbb, 0x3280, 0x6a51, 0x1369, 0xa41a, 0x0, 0x1);
        gbc.writeMem(0x2a43, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5fbb, gbc.sp());
        EXPECT(0x2a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03AF
        gbc.setState(0x9e30, 0xc62d, 0xda20, 0x91a1, 0x2a9b, 0xfea0, 0x1, 0x1);
        gbc.writeMem(0x9e30, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc62d, gbc.sp());
        EXPECT(0x9e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e30));
        EXPECT(0x9, gbc.readMem(0x9e31));
        // CB 09 03B0
        gbc.setState(0x6c86, 0x1cc, 0xbd20, 0x332b, 0xdaca, 0xc0ee, 0x1, 0x1);
        gbc.writeMem(0x6c86, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1cc, gbc.sp());
        EXPECT(0x6c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03B1
        gbc.setState(0xd427, 0x47ed, 0x9a0, 0x2c7a, 0x4477, 0xb8fb, 0x1, 0x1);
        gbc.writeMem(0xd427, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x47ed, gbc.sp());
        EXPECT(0xd429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd427));
        EXPECT(0x9, gbc.readMem(0xd428));
        // CB 09 03B2
        gbc.setState(0xc3ed, 0x6af0, 0xda20, 0x403f, 0xb64b, 0x49a7, 0x1, 0x1);
        gbc.writeMem(0xc3ed, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6af0, gbc.sp());
        EXPECT(0xc3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ed));
        EXPECT(0x9, gbc.readMem(0xc3ee));
        // CB 09 03B3
        gbc.setState(0xd6e, 0x27f0, 0xfde0, 0x1c65, 0x96dd, 0x7a4a, 0x0, 0x0);
        gbc.writeMem(0xd6e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x27f0, gbc.sp());
        EXPECT(0xd70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03B5
        gbc.setState(0xd01d, 0xf05d, 0x6c70, 0x3484, 0xdc51, 0x235d, 0x0, 0x0);
        gbc.writeMem(0xd01d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf05d, gbc.sp());
        EXPECT(0xd01f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01d));
        EXPECT(0x9, gbc.readMem(0xd01e));
        // CB 09 03B6
        gbc.setState(0x5115, 0xc1af, 0x5920, 0xc448, 0x59e5, 0x9c, 0x1, 0x0);
        gbc.writeMem(0x5115, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc1af, gbc.sp());
        EXPECT(0x5117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03B7
        gbc.setState(0x163e, 0xb82d, 0xa2b0, 0xcccb, 0x2730, 0xda3, 0x1, 0x1);
        gbc.writeMem(0x163e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb82d, gbc.sp());
        EXPECT(0x1640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03B8
        gbc.setState(0x2025, 0xa470, 0xbda0, 0x5d3b, 0xa8bc, 0xde13, 0x1, 0x0);
        gbc.writeMem(0x2025, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa470, gbc.sp());
        EXPECT(0x2027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03B9
        gbc.setState(0xdce3, 0xa466, 0x9c40, 0xeaaa, 0x489a, 0x7cf0, 0x1, 0x1);
        gbc.writeMem(0xdce3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa466, gbc.sp());
        EXPECT(0xdce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce3));
        EXPECT(0x9, gbc.readMem(0xdce4));
        // CB 09 03BA
        gbc.setState(0xb8e3, 0x3b3c, 0xe390, 0x8d69, 0xabde, 0xb000, 0x0, 0x1);
        gbc.writeMem(0xb8e3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3b3c, gbc.sp());
        EXPECT(0xb8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e3));
        EXPECT(0x9, gbc.readMem(0xb8e4));
        // CB 09 03BB
        gbc.setState(0x6e9a, 0xa884, 0x4160, 0x5fb, 0x6bbd, 0x8a21, 0x0, 0x0);
        gbc.writeMem(0x6e9a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa884, gbc.sp());
        EXPECT(0x6e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03BC
        gbc.setState(0x9dce, 0x95e9, 0xc8e0, 0x124a, 0x9544, 0x3301, 0x1, 0x0);
        gbc.writeMem(0x9dce, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x95e9, gbc.sp());
        EXPECT(0x9dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dce));
        EXPECT(0x9, gbc.readMem(0x9dcf));
        // CB 09 03BD
        gbc.setState(0xa3d9, 0xeef3, 0x8d20, 0xb78a, 0x5889, 0x7895, 0x1, 0x0);
        gbc.writeMem(0xa3d9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xeef3, gbc.sp());
        EXPECT(0xa3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d9));
        EXPECT(0x9, gbc.readMem(0xa3da));
        // CB 09 03BE
        gbc.setState(0xa159, 0x121e, 0x43e0, 0x62fd, 0x5681, 0x9e93, 0x1, 0x1);
        gbc.writeMem(0xa159, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x121e, gbc.sp());
        EXPECT(0xa15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa159));
        EXPECT(0x9, gbc.readMem(0xa15a));
        // CB 09 03BF
        gbc.setState(0xad8e, 0x1e13, 0xed00, 0x90d5, 0xcd54, 0x41cc, 0x0, 0x1);
        gbc.writeMem(0xad8e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1e13, gbc.sp());
        EXPECT(0xad90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad8e));
        EXPECT(0x9, gbc.readMem(0xad8f));
        // CB 09 03C0
        gbc.setState(0x1ca3, 0xbfac, 0x89f0, 0x6cbd, 0xf620, 0x6b1d, 0x0, 0x0);
        gbc.writeMem(0x1ca3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbfac, gbc.sp());
        EXPECT(0x1ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03C1
        gbc.setState(0x544b, 0x656, 0xdd90, 0x72bb, 0xca19, 0xe639, 0x1, 0x0);
        gbc.writeMem(0x544b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x656, gbc.sp());
        EXPECT(0x544d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03C2
        gbc.setState(0x7997, 0xaa56, 0x5860, 0xa1c1, 0x3f02, 0x85b7, 0x1, 0x0);
        gbc.writeMem(0x7997, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xaa56, gbc.sp());
        EXPECT(0x7999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03C3
        gbc.setState(0x99f8, 0x27a2, 0x49e0, 0x653a, 0x829c, 0x8fdc, 0x1, 0x0);
        gbc.writeMem(0x99f8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x27a2, gbc.sp());
        EXPECT(0x99fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f8));
        EXPECT(0x9, gbc.readMem(0x99f9));
        // CB 09 03C4
        gbc.setState(0x6d43, 0x66de, 0xe380, 0x73b9, 0x3623, 0x6e37, 0x0, 0x0);
        gbc.writeMem(0x6d43, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x66de, gbc.sp());
        EXPECT(0x6d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03C5
        gbc.setState(0x4226, 0x91f5, 0x60e0, 0xc269, 0x6686, 0xf3b1, 0x0, 0x0);
        gbc.writeMem(0x4226, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x91f5, gbc.sp());
        EXPECT(0x4228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03C6
        gbc.setState(0x49f3, 0x3b6b, 0xb9d0, 0x2fdd, 0xef28, 0x3b6c, 0x0, 0x1);
        gbc.writeMem(0x49f3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3b6b, gbc.sp());
        EXPECT(0x49f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03C7
        gbc.setState(0x6e1f, 0x821d, 0x7ee0, 0x4598, 0x7ba3, 0x6fdc, 0x1, 0x0);
        gbc.writeMem(0x6e1f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x821d, gbc.sp());
        EXPECT(0x6e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03C8
        gbc.setState(0xab4b, 0x28be, 0xe510, 0x3285, 0x80c4, 0x6c6d, 0x0, 0x0);
        gbc.writeMem(0xab4b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x28be, gbc.sp());
        EXPECT(0xab4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab4b));
        EXPECT(0x9, gbc.readMem(0xab4c));
        // CB 09 03C9
        gbc.setState(0x1edd, 0xceab, 0xd910, 0x9f82, 0x5c3e, 0xfa2f, 0x0, 0x1);
        gbc.writeMem(0x1edd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xceab, gbc.sp());
        EXPECT(0x1edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03CA
        gbc.setState(0x1eb1, 0xdb7c, 0xa0c0, 0x701b, 0xb400, 0x2fb6, 0x1, 0x0);
        gbc.writeMem(0x1eb1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdb7c, gbc.sp());
        EXPECT(0x1eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03CB
        gbc.setState(0x4997, 0x6836, 0xf170, 0x6f9a, 0x2ec, 0x2b09, 0x0, 0x0);
        gbc.writeMem(0x4997, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6836, gbc.sp());
        EXPECT(0x4999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03CC
        gbc.setState(0x4a3c, 0x8335, 0x9670, 0x4998, 0xf547, 0x797e, 0x0, 0x0);
        gbc.writeMem(0x4a3c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8335, gbc.sp());
        EXPECT(0x4a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03CD
        gbc.setState(0x5bd2, 0x1dbc, 0x2830, 0xbc73, 0x67a6, 0x3d4d, 0x0, 0x1);
        gbc.writeMem(0x5bd2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1dbc, gbc.sp());
        EXPECT(0x5bd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03CE
        gbc.setState(0x5cf9, 0xbb5a, 0x8b50, 0x90b3, 0x5eb2, 0x6ab2, 0x0, 0x0);
        gbc.writeMem(0x5cf9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbb5a, gbc.sp());
        EXPECT(0x5cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03CF
        gbc.setState(0x37e7, 0xb358, 0x4de0, 0x1fb3, 0x968f, 0x3b1d, 0x1, 0x1);
        gbc.writeMem(0x37e7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb358, gbc.sp());
        EXPECT(0x37e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03D0
        gbc.setState(0x4d1e, 0x165c, 0x4580, 0x3e75, 0x8e1d, 0xeed6, 0x1, 0x1);
        gbc.writeMem(0x4d1e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x165c, gbc.sp());
        EXPECT(0x4d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03D2
        gbc.setState(0xef82, 0xf1aa, 0x5790, 0xec9c, 0x9984, 0xf8a0, 0x1, 0x1);
        gbc.writeMem(0xef82, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf1aa, gbc.sp());
        EXPECT(0xef84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef82));
        EXPECT(0x9, gbc.readMem(0xef83));
        // CB 09 03D3
        gbc.setState(0xcf97, 0x83b7, 0xe870, 0xf403, 0xf8c9, 0x376f, 0x1, 0x1);
        gbc.writeMem(0xcf97, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x83b7, gbc.sp());
        EXPECT(0xcf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf97));
        EXPECT(0x9, gbc.readMem(0xcf98));
        // CB 09 03D4
        gbc.setState(0x5318, 0xf364, 0xafd0, 0xd6f2, 0xcf1d, 0xdb36, 0x0, 0x1);
        gbc.writeMem(0x5318, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf364, gbc.sp());
        EXPECT(0x531a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03D5
        gbc.setState(0xdf7e, 0x5742, 0x9b60, 0xa69, 0x5566, 0xa0f4, 0x1, 0x1);
        gbc.writeMem(0xdf7e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5742, gbc.sp());
        EXPECT(0xdf80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7e));
        EXPECT(0x9, gbc.readMem(0xdf7f));
        // CB 09 03D6
        gbc.setState(0x2ff5, 0x7481, 0x6410, 0xb992, 0x5e24, 0x7c64, 0x1, 0x0);
        gbc.writeMem(0x2ff5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7481, gbc.sp());
        EXPECT(0x2ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03D7
        gbc.setState(0x7adb, 0xe1a5, 0x7940, 0xd3c2, 0x4f68, 0xac7e, 0x1, 0x0);
        gbc.writeMem(0x7adb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe1a5, gbc.sp());
        EXPECT(0x7add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03D8
        gbc.setState(0x5d19, 0x4191, 0x6a40, 0xe0eb, 0xb7c4, 0xf56f, 0x0, 0x0);
        gbc.writeMem(0x5d19, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4191, gbc.sp());
        EXPECT(0x5d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03D9
        gbc.setState(0xed02, 0xffee, 0xe0f0, 0xc5d1, 0xc448, 0x458f, 0x0, 0x0);
        gbc.writeMem(0xed02, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xffee, gbc.sp());
        EXPECT(0xed04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed02));
        EXPECT(0x9, gbc.readMem(0xed03));
        // CB 09 03DA
        gbc.setState(0x207a, 0x59fd, 0x6140, 0xa033, 0x94a1, 0x324f, 0x1, 0x0);
        gbc.writeMem(0x207a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x59fd, gbc.sp());
        EXPECT(0x207c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03DC
        gbc.setState(0x7508, 0xcd20, 0x6940, 0xb29f, 0xf077, 0x75ac, 0x1, 0x0);
        gbc.writeMem(0x7508, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcd20, gbc.sp());
        EXPECT(0x750a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03DD
        gbc.setState(0x80bd, 0xd02a, 0x7b40, 0xd5a4, 0xee30, 0xc60b, 0x1, 0x0);
        gbc.writeMem(0x80bd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd02a, gbc.sp());
        EXPECT(0x80bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80bd));
        EXPECT(0x9, gbc.readMem(0x80be));
        // CB 09 03DE
        gbc.setState(0xdacd, 0xd4bd, 0x6230, 0x91ab, 0xf549, 0x11c1, 0x1, 0x1);
        gbc.writeMem(0xdacd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd4bd, gbc.sp());
        EXPECT(0xdacf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdacd));
        EXPECT(0x9, gbc.readMem(0xdace));
        // CB 09 03DF
        gbc.setState(0xc687, 0x784, 0xc7f0, 0xc913, 0x6f58, 0xbd61, 0x1, 0x1);
        gbc.writeMem(0xc687, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x784, gbc.sp());
        EXPECT(0xc689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc687));
        EXPECT(0x9, gbc.readMem(0xc688));
        // CB 09 03E0
        gbc.setState(0x938e, 0xd21d, 0xbc40, 0x8c30, 0x477, 0x3092, 0x0, 0x0);
        gbc.writeMem(0x938e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd21d, gbc.sp());
        EXPECT(0x9390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x938e));
        EXPECT(0x9, gbc.readMem(0x938f));
        // CB 09 03E1
        gbc.setState(0x1db2, 0x5a76, 0x3c0, 0x3797, 0x2f96, 0x65eb, 0x1, 0x1);
        gbc.writeMem(0x1db2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5a76, gbc.sp());
        EXPECT(0x1db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03E2
        gbc.setState(0xe5ff, 0xb2b9, 0xdc60, 0x55b6, 0xa556, 0xdd98, 0x0, 0x1);
        gbc.writeMem(0xe5ff, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb2b9, gbc.sp());
        EXPECT(0xe601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ff));
        EXPECT(0x9, gbc.readMem(0xe600));
        // CB 09 03E3
        gbc.setState(0x1352, 0x755b, 0x4bc0, 0xcb82, 0x308a, 0x20e6, 0x1, 0x1);
        gbc.writeMem(0x1352, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x755b, gbc.sp());
        EXPECT(0x1354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03E4
        gbc.setState(0x6ec3, 0x4dba, 0xf870, 0x1c0a, 0x72ab, 0x8bf3, 0x0, 0x0);
        gbc.writeMem(0x6ec3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4dba, gbc.sp());
        EXPECT(0x6ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 09 03E5
        gbc.setState(0xced0, 0x9fdf, 0x8460, 0x6c64, 0x6f5e, 0xf20f, 0x1, 0x0);
        gbc.writeMem(0xced0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9fdf, gbc.sp());
        EXPECT(0xced2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced0));
        EXPECT(0x9, gbc.readMem(0xced1));
        // CB 09 03E6
        gbc.setState(0x6f11, 0x2c3b, 0x31b0, 0x539, 0xea4d, 0xbeb0, 0x1, 0x0);
        gbc.writeMem(0x6f11, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2c3b, gbc.sp());
        EXPECT(0x6f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 09 03E7
        gbc.setState(0x6048, 0xa660, 0xda0, 0xf435, 0x168, 0x2657, 0x0, 0x0);
        gbc.writeMem(0x6048, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa660, gbc.sp());
        EXPECT(0x604a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
