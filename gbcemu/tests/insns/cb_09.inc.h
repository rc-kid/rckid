    TEST(gbcemu, opcode_cb_09) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 09 0000
        gbc.setState(0x4d31, 0xc2f6, 0xc100, 0x8519, 0xd0c7, 0x9920, 0x1, 0x1);
        gbc.writeMem(0x4d31, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc2f6);
        EXPECT(gbc.pc(), 0x4d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0001
        gbc.setState(0x6835, 0xd7a0, 0xf7b0, 0x639d, 0x94dd, 0x1bd0, 0x1, 0x1);
        gbc.writeMem(0x6835, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd7a0);
        EXPECT(gbc.pc(), 0x6837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0002
        gbc.setState(0xb7bf, 0x25cc, 0xb9b0, 0x5104, 0x6bbc, 0xdd9b, 0x0, 0x1);
        gbc.writeMem(0xb7bf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x25cc);
        EXPECT(gbc.pc(), 0xb7c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7bf), 0xcb);
        EXPECT(gbc.readMem(0xb7c0), 0x9);
        // CB 09 0003
        gbc.setState(0xe64c, 0xc9b2, 0x4150, 0xdb27, 0x13db, 0x4e96, 0x0, 0x0);
        gbc.writeMem(0xe64c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc9b2);
        EXPECT(gbc.pc(), 0xe64e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe64c), 0xcb);
        EXPECT(gbc.readMem(0xe64d), 0x9);
        // CB 09 0004
        gbc.setState(0x81f7, 0x466a, 0x4a90, 0xb82a, 0xc6fb, 0xcd3, 0x0, 0x0);
        gbc.writeMem(0x81f7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x466a);
        EXPECT(gbc.pc(), 0x81f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f7), 0xcb);
        EXPECT(gbc.readMem(0x81f8), 0x9);
        // CB 09 0006
        gbc.setState(0x91fb, 0x355c, 0xbe50, 0x2e65, 0x173f, 0xb120, 0x1, 0x0);
        gbc.writeMem(0x91fb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x355c);
        EXPECT(gbc.pc(), 0x91fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91fb), 0xcb);
        EXPECT(gbc.readMem(0x91fc), 0x9);
        // CB 09 0007
        gbc.setState(0x954, 0xe518, 0x1440, 0x7982, 0xdbb0, 0x9186, 0x0, 0x0);
        gbc.writeMem(0x954, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe518);
        EXPECT(gbc.pc(), 0x956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0008
        gbc.setState(0x2930, 0x2774, 0x4a50, 0x17d4, 0x54d7, 0x93e1, 0x0, 0x1);
        gbc.writeMem(0x2930, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2774);
        EXPECT(gbc.pc(), 0x2932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0009
        gbc.setState(0x8744, 0x1943, 0xf710, 0x8e53, 0xf827, 0x4575, 0x1, 0x1);
        gbc.writeMem(0x8744, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1943);
        EXPECT(gbc.pc(), 0x8746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8744), 0xcb);
        EXPECT(gbc.readMem(0x8745), 0x9);
        // CB 09 000A
        gbc.setState(0x7c5a, 0x9c9d, 0xeab0, 0xb87e, 0x29a2, 0xf20, 0x0, 0x0);
        gbc.writeMem(0x7c5a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9c9d);
        EXPECT(gbc.pc(), 0x7c5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 000B
        gbc.setState(0xbb27, 0x971e, 0x4450, 0x5004, 0xae65, 0xe145, 0x0, 0x1);
        gbc.writeMem(0xbb27, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x971e);
        EXPECT(gbc.pc(), 0xbb29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb27), 0xcb);
        EXPECT(gbc.readMem(0xbb28), 0x9);
        // CB 09 000C
        gbc.setState(0x5058, 0xc0f4, 0x8670, 0x197a, 0x5fa5, 0xb8a1, 0x0, 0x0);
        gbc.writeMem(0x5058, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc0f4);
        EXPECT(gbc.pc(), 0x505a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 000E
        gbc.setState(0xda6, 0xf4b, 0xb620, 0xa236, 0x2dce, 0x66ab, 0x1, 0x1);
        gbc.writeMem(0xda6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf4b);
        EXPECT(gbc.pc(), 0xda8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 000F
        gbc.setState(0xc3bf, 0x3522, 0xa6b0, 0x16f0, 0x63bf, 0x2a28, 0x1, 0x1);
        gbc.writeMem(0xc3bf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3522);
        EXPECT(gbc.pc(), 0xc3c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3bf), 0xcb);
        EXPECT(gbc.readMem(0xc3c0), 0x9);
        // CB 09 0010
        gbc.setState(0x8901, 0x31c0, 0x94a0, 0x31e9, 0xb93a, 0x2f19, 0x0, 0x0);
        gbc.writeMem(0x8901, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x31c0);
        EXPECT(gbc.pc(), 0x8903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8901), 0xcb);
        EXPECT(gbc.readMem(0x8902), 0x9);
        // CB 09 0011
        gbc.setState(0x718d, 0x7bdc, 0x4390, 0xdb4b, 0x30a8, 0x5156, 0x0, 0x0);
        gbc.writeMem(0x718d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7bdc);
        EXPECT(gbc.pc(), 0x718f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0012
        gbc.setState(0x4d80, 0xf8cc, 0x8e60, 0x5f18, 0x3f86, 0x3f36, 0x1, 0x1);
        gbc.writeMem(0x4d80, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf8cc);
        EXPECT(gbc.pc(), 0x4d82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0013
        gbc.setState(0x9061, 0x27c5, 0x1c70, 0x6633, 0x2612, 0x64cc, 0x1, 0x0);
        gbc.writeMem(0x9061, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x27c5);
        EXPECT(gbc.pc(), 0x9063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9061), 0xcb);
        EXPECT(gbc.readMem(0x9062), 0x9);
        // CB 09 0014
        gbc.setState(0xba52, 0x7891, 0x7030, 0x3cd4, 0x18c, 0x6980, 0x1, 0x0);
        gbc.writeMem(0xba52, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7891);
        EXPECT(gbc.pc(), 0xba54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba52), 0xcb);
        EXPECT(gbc.readMem(0xba53), 0x9);
        // CB 09 0015
        gbc.setState(0x6a16, 0x9292, 0xbb00, 0x9fa1, 0xcc6a, 0xc326, 0x1, 0x1);
        gbc.writeMem(0x6a16, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9292);
        EXPECT(gbc.pc(), 0x6a18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0016
        gbc.setState(0xed84, 0xc6c8, 0xbd20, 0xfa4c, 0xaa86, 0x96a4, 0x0, 0x1);
        gbc.writeMem(0xed84, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc6c8);
        EXPECT(gbc.pc(), 0xed86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed84), 0xcb);
        EXPECT(gbc.readMem(0xed85), 0x9);
        // CB 09 0017
        gbc.setState(0xd56a, 0xf90c, 0x1630, 0x464e, 0x9c18, 0x8cca, 0x0, 0x0);
        gbc.writeMem(0xd56a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf90c);
        EXPECT(gbc.pc(), 0xd56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd56a), 0xcb);
        EXPECT(gbc.readMem(0xd56b), 0x9);
        // CB 09 0018
        gbc.setState(0x16c, 0x7484, 0x8020, 0x71a3, 0xdc37, 0xd2f1, 0x0, 0x0);
        gbc.writeMem(0x16c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7484);
        EXPECT(gbc.pc(), 0x16e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0019
        gbc.setState(0xb0f5, 0x296c, 0x7b60, 0xfaa3, 0xb791, 0x1804, 0x0, 0x1);
        gbc.writeMem(0xb0f5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x296c);
        EXPECT(gbc.pc(), 0xb0f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0f5), 0xcb);
        EXPECT(gbc.readMem(0xb0f6), 0x9);
        // CB 09 001A
        gbc.setState(0x27e9, 0x1c01, 0xd2a0, 0xc6c9, 0xd2d7, 0xbc5f, 0x0, 0x0);
        gbc.writeMem(0x27e9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1c01);
        EXPECT(gbc.pc(), 0x27eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 001B
        gbc.setState(0xeefe, 0x8dcc, 0x6b20, 0xa0b0, 0x1849, 0xc9b9, 0x0, 0x1);
        gbc.writeMem(0xeefe, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8dcc);
        EXPECT(gbc.pc(), 0xef00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeefe), 0xcb);
        EXPECT(gbc.readMem(0xeeff), 0x9);
        // CB 09 001C
        gbc.setState(0x1736, 0xe24, 0xfaf0, 0x39d8, 0x1f2d, 0x5655, 0x0, 0x1);
        gbc.writeMem(0x1736, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe24);
        EXPECT(gbc.pc(), 0x1738);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 001D
        gbc.setState(0x9cea, 0x421e, 0x5490, 0xb6cc, 0xa203, 0xc847, 0x1, 0x1);
        gbc.writeMem(0x9cea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x421e);
        EXPECT(gbc.pc(), 0x9cec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cea), 0xcb);
        EXPECT(gbc.readMem(0x9ceb), 0x9);
        // CB 09 001E
        gbc.setState(0xa671, 0x8068, 0x5f80, 0x9a83, 0xc6b0, 0xa7e2, 0x1, 0x1);
        gbc.writeMem(0xa671, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8068);
        EXPECT(gbc.pc(), 0xa673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa671), 0xcb);
        EXPECT(gbc.readMem(0xa672), 0x9);
        // CB 09 001F
        gbc.setState(0x695d, 0x24ed, 0x2d50, 0xadf1, 0xb5c9, 0xe54, 0x0, 0x0);
        gbc.writeMem(0x695d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x24ed);
        EXPECT(gbc.pc(), 0x695f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0020
        gbc.setState(0x1853, 0x3da1, 0xcab0, 0x2986, 0x845a, 0x8f78, 0x1, 0x0);
        gbc.writeMem(0x1853, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3da1);
        EXPECT(gbc.pc(), 0x1855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0021
        gbc.setState(0xbd44, 0x4ad1, 0x7f80, 0xc342, 0x9a9d, 0x6555, 0x0, 0x0);
        gbc.writeMem(0xbd44, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4ad1);
        EXPECT(gbc.pc(), 0xbd46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd44), 0xcb);
        EXPECT(gbc.readMem(0xbd45), 0x9);
        // CB 09 0023
        gbc.setState(0x2978, 0x2044, 0x4f40, 0x7231, 0x962c, 0x838, 0x1, 0x1);
        gbc.writeMem(0x2978, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2044);
        EXPECT(gbc.pc(), 0x297a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0024
        gbc.setState(0xcaaf, 0x1c0, 0x1ad0, 0x7812, 0x62f5, 0x83ed, 0x1, 0x1);
        gbc.writeMem(0xcaaf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1c0);
        EXPECT(gbc.pc(), 0xcab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaaf), 0xcb);
        EXPECT(gbc.readMem(0xcab0), 0x9);
        // CB 09 0025
        gbc.setState(0xd62, 0xcf95, 0xb4e0, 0xea6d, 0x39b8, 0xacc, 0x1, 0x1);
        gbc.writeMem(0xd62, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xcf95);
        EXPECT(gbc.pc(), 0xd64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0026
        gbc.setState(0xec6e, 0xd030, 0x7130, 0xaa43, 0xfb39, 0xe6fa, 0x0, 0x1);
        gbc.writeMem(0xec6e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd030);
        EXPECT(gbc.pc(), 0xec70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec6e), 0xcb);
        EXPECT(gbc.readMem(0xec6f), 0x9);
        // CB 09 0027
        gbc.setState(0x9dfa, 0x1db1, 0xfa90, 0xecc4, 0x4a81, 0xaa9a, 0x0, 0x0);
        gbc.writeMem(0x9dfa, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1db1);
        EXPECT(gbc.pc(), 0x9dfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dfa), 0xcb);
        EXPECT(gbc.readMem(0x9dfb), 0x9);
        // CB 09 0028
        gbc.setState(0xea42, 0x82af, 0x6400, 0x1699, 0x6e9c, 0xa611, 0x0, 0x0);
        gbc.writeMem(0xea42, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x82af);
        EXPECT(gbc.pc(), 0xea44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea42), 0xcb);
        EXPECT(gbc.readMem(0xea43), 0x9);
        // CB 09 002A
        gbc.setState(0x3f4b, 0xd0c9, 0xc3a0, 0xe48, 0x62c4, 0xf5cd, 0x0, 0x1);
        gbc.writeMem(0x3f4b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd0c9);
        EXPECT(gbc.pc(), 0x3f4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 002B
        gbc.setState(0x4a16, 0x3968, 0xba00, 0x5d5d, 0xb13e, 0xca4, 0x0, 0x1);
        gbc.writeMem(0x4a16, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3968);
        EXPECT(gbc.pc(), 0x4a18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 002C
        gbc.setState(0x18c3, 0xfdf, 0x8e50, 0x6859, 0xd159, 0x7a1e, 0x0, 0x0);
        gbc.writeMem(0x18c3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfdf);
        EXPECT(gbc.pc(), 0x18c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 002D
        gbc.setState(0x1074, 0x446f, 0x6610, 0xc873, 0x39f7, 0x92d7, 0x1, 0x1);
        gbc.writeMem(0x1074, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x446f);
        EXPECT(gbc.pc(), 0x1076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 002E
        gbc.setState(0x64ba, 0x366f, 0x40d0, 0x3ae5, 0x257, 0x1682, 0x0, 0x1);
        gbc.writeMem(0x64ba, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x366f);
        EXPECT(gbc.pc(), 0x64bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 002F
        gbc.setState(0x8a20, 0x6b39, 0x6f40, 0x981b, 0xffca, 0x880c, 0x1, 0x0);
        gbc.writeMem(0x8a20, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x6b39);
        EXPECT(gbc.pc(), 0x8a22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a20), 0xcb);
        EXPECT(gbc.readMem(0x8a21), 0x9);
        // CB 09 0030
        gbc.setState(0xf8b, 0x45ef, 0x6220, 0x9691, 0x192d, 0xb4c, 0x0, 0x1);
        gbc.writeMem(0xf8b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x45ef);
        EXPECT(gbc.pc(), 0xf8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0031
        gbc.setState(0x111c, 0x6cef, 0x60d0, 0x26f9, 0x7a66, 0x40ab, 0x1, 0x0);
        gbc.writeMem(0x111c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6cef);
        EXPECT(gbc.pc(), 0x111e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0032
        gbc.setState(0x1168, 0x73c8, 0x14a0, 0x6590, 0xe7c, 0x4a0d, 0x1, 0x1);
        gbc.writeMem(0x1168, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x73c8);
        EXPECT(gbc.pc(), 0x116a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0033
        gbc.setState(0x5fcf, 0x7639, 0x2db0, 0x7229, 0xe8e5, 0x9d8f, 0x1, 0x1);
        gbc.writeMem(0x5fcf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7639);
        EXPECT(gbc.pc(), 0x5fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0034
        gbc.setState(0x8b74, 0x20a4, 0x3fb0, 0x4743, 0xcb32, 0x8131, 0x0, 0x0);
        gbc.writeMem(0x8b74, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x20a4);
        EXPECT(gbc.pc(), 0x8b76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b74), 0xcb);
        EXPECT(gbc.readMem(0x8b75), 0x9);
        // CB 09 0035
        gbc.setState(0x7f2d, 0xb096, 0x3b00, 0x9c84, 0x229a, 0x77a9, 0x0, 0x0);
        gbc.writeMem(0x7f2d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb096);
        EXPECT(gbc.pc(), 0x7f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0036
        gbc.setState(0x2214, 0x1e35, 0x2170, 0x7280, 0xc58f, 0xa14a, 0x0, 0x0);
        gbc.writeMem(0x2214, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1e35);
        EXPECT(gbc.pc(), 0x2216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0037
        gbc.setState(0x2368, 0xba70, 0x5430, 0x4b19, 0x8082, 0x97c8, 0x1, 0x1);
        gbc.writeMem(0x2368, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xba70);
        EXPECT(gbc.pc(), 0x236a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0038
        gbc.setState(0xcb12, 0x5b6b, 0xcb90, 0xcb19, 0xd1b, 0x9469, 0x0, 0x0);
        gbc.writeMem(0xcb12, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5b6b);
        EXPECT(gbc.pc(), 0xcb14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb12), 0xcb);
        EXPECT(gbc.readMem(0xcb13), 0x9);
        // CB 09 0039
        gbc.setState(0xabce, 0xfcb5, 0x4940, 0x82a8, 0xf014, 0x89e5, 0x1, 0x0);
        gbc.writeMem(0xabce, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfcb5);
        EXPECT(gbc.pc(), 0xabd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabce), 0xcb);
        EXPECT(gbc.readMem(0xabcf), 0x9);
        // CB 09 003A
        gbc.setState(0x607f, 0x5945, 0x7510, 0xf13c, 0xd76f, 0xc9e6, 0x1, 0x0);
        gbc.writeMem(0x607f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5945);
        EXPECT(gbc.pc(), 0x6081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 003B
        gbc.setState(0x2f5, 0x4011, 0xe050, 0xa6c9, 0x9b02, 0x34c0, 0x1, 0x1);
        gbc.writeMem(0x2f5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4011);
        EXPECT(gbc.pc(), 0x2f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 003C
        gbc.setState(0xd610, 0x52cf, 0xfa30, 0x4aca, 0x22fc, 0x96d6, 0x1, 0x1);
        gbc.writeMem(0xd610, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x52cf);
        EXPECT(gbc.pc(), 0xd612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd610), 0xcb);
        EXPECT(gbc.readMem(0xd611), 0x9);
        // CB 09 003D
        gbc.setState(0x89e, 0x14cc, 0xa5a0, 0x6cb4, 0x6ebd, 0xa470, 0x0, 0x1);
        gbc.writeMem(0x89e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x14cc);
        EXPECT(gbc.pc(), 0x8a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 003E
        gbc.setState(0xc1c0, 0x9ce, 0x8d50, 0xf151, 0x59d5, 0xe851, 0x0, 0x0);
        gbc.writeMem(0xc1c0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9ce);
        EXPECT(gbc.pc(), 0xc1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1c0), 0xcb);
        EXPECT(gbc.readMem(0xc1c1), 0x9);
        // CB 09 003F
        gbc.setState(0x24a7, 0x6284, 0xb1a0, 0x8b03, 0xa012, 0x8df7, 0x0, 0x1);
        gbc.writeMem(0x24a7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6284);
        EXPECT(gbc.pc(), 0x24a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0040
        gbc.setState(0x384e, 0x38ab, 0x6a50, 0x74fa, 0x2e45, 0x8bbe, 0x0, 0x0);
        gbc.writeMem(0x384e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x38ab);
        EXPECT(gbc.pc(), 0x3850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0041
        gbc.setState(0xd9a9, 0x9ebc, 0x7870, 0xf4cd, 0x9aae, 0xd7c7, 0x0, 0x1);
        gbc.writeMem(0xd9a9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9ebc);
        EXPECT(gbc.pc(), 0xd9ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a9), 0xcb);
        EXPECT(gbc.readMem(0xd9aa), 0x9);
        // CB 09 0042
        gbc.setState(0x182b, 0x62f3, 0xd9f0, 0x163d, 0xc188, 0x7818, 0x0, 0x0);
        gbc.writeMem(0x182b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x62f3);
        EXPECT(gbc.pc(), 0x182d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0043
        gbc.setState(0xa2ba, 0x70e9, 0xdb80, 0x8858, 0x7ef8, 0x1830, 0x0, 0x1);
        gbc.writeMem(0xa2ba, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x70e9);
        EXPECT(gbc.pc(), 0xa2bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ba), 0xcb);
        EXPECT(gbc.readMem(0xa2bb), 0x9);
        // CB 09 0044
        gbc.setState(0x1907, 0xc7c8, 0x90f0, 0x2e17, 0x7f94, 0x1d39, 0x1, 0x1);
        gbc.writeMem(0x1907, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc7c8);
        EXPECT(gbc.pc(), 0x1909);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0045
        gbc.setState(0xedb1, 0x899b, 0xb510, 0x901e, 0x6d7, 0x80c6, 0x0, 0x0);
        gbc.writeMem(0xedb1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x899b);
        EXPECT(gbc.pc(), 0xedb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb1), 0xcb);
        EXPECT(gbc.readMem(0xedb2), 0x9);
        // CB 09 0046
        gbc.setState(0xc437, 0xb710, 0xc550, 0x2382, 0x9524, 0xb366, 0x0, 0x1);
        gbc.writeMem(0xc437, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb710);
        EXPECT(gbc.pc(), 0xc439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc437), 0xcb);
        EXPECT(gbc.readMem(0xc438), 0x9);
        // CB 09 0047
        gbc.setState(0xd2e7, 0xe208, 0xb100, 0x6424, 0x10b8, 0x6bc8, 0x0, 0x0);
        gbc.writeMem(0xd2e7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe208);
        EXPECT(gbc.pc(), 0xd2e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e7), 0xcb);
        EXPECT(gbc.readMem(0xd2e8), 0x9);
        // CB 09 0048
        gbc.setState(0x2431, 0x3a9f, 0x9740, 0x5b89, 0xb69b, 0xd76a, 0x1, 0x1);
        gbc.writeMem(0x2431, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3a9f);
        EXPECT(gbc.pc(), 0x2433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0049
        gbc.setState(0xc925, 0x700d, 0x52e0, 0x460b, 0x2660, 0xea02, 0x1, 0x1);
        gbc.writeMem(0xc925, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x700d);
        EXPECT(gbc.pc(), 0xc927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc925), 0xcb);
        EXPECT(gbc.readMem(0xc926), 0x9);
        // CB 09 004A
        gbc.setState(0x3f87, 0xe0c3, 0x7e80, 0xdf08, 0xfa2f, 0x92d5, 0x1, 0x0);
        gbc.writeMem(0x3f87, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe0c3);
        EXPECT(gbc.pc(), 0x3f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 004C
        gbc.setState(0x1e04, 0xa13b, 0x7670, 0x6788, 0x4075, 0x9f49, 0x0, 0x1);
        gbc.writeMem(0x1e04, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa13b);
        EXPECT(gbc.pc(), 0x1e06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 004D
        gbc.setState(0xe4f9, 0xecfa, 0xd730, 0x9d32, 0x5fb8, 0xce1c, 0x1, 0x0);
        gbc.writeMem(0xe4f9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xecfa);
        EXPECT(gbc.pc(), 0xe4fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4f9), 0xcb);
        EXPECT(gbc.readMem(0xe4fa), 0x9);
        // CB 09 004E
        gbc.setState(0xae0d, 0xb690, 0x8090, 0x86f0, 0xc881, 0x7453, 0x0, 0x0);
        gbc.writeMem(0xae0d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb690);
        EXPECT(gbc.pc(), 0xae0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae0d), 0xcb);
        EXPECT(gbc.readMem(0xae0e), 0x9);
        // CB 09 004F
        gbc.setState(0x8004, 0x3ddc, 0x7540, 0xb252, 0x4d5a, 0x32bc, 0x0, 0x1);
        gbc.writeMem(0x8004, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3ddc);
        EXPECT(gbc.pc(), 0x8006);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8004), 0xcb);
        EXPECT(gbc.readMem(0x8005), 0x9);
        // CB 09 0050
        gbc.setState(0xa604, 0x7314, 0x5ea0, 0xc224, 0x90d4, 0xf6bf, 0x1, 0x1);
        gbc.writeMem(0xa604, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7314);
        EXPECT(gbc.pc(), 0xa606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa604), 0xcb);
        EXPECT(gbc.readMem(0xa605), 0x9);
        // CB 09 0051
        gbc.setState(0xdf2, 0xcb26, 0xccd0, 0x6366, 0x494a, 0x8be2, 0x1, 0x1);
        gbc.writeMem(0xdf2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xcb26);
        EXPECT(gbc.pc(), 0xdf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0052
        gbc.setState(0x5e51, 0x2625, 0xcd90, 0x66e8, 0xfc07, 0x404b, 0x0, 0x1);
        gbc.writeMem(0x5e51, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2625);
        EXPECT(gbc.pc(), 0x5e53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0053
        gbc.setState(0xc6c9, 0x3ebe, 0xf0e0, 0x611d, 0xed9a, 0xcda0, 0x0, 0x0);
        gbc.writeMem(0xc6c9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3ebe);
        EXPECT(gbc.pc(), 0xc6cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c9), 0xcb);
        EXPECT(gbc.readMem(0xc6ca), 0x9);
        // CB 09 0054
        gbc.setState(0xb061, 0x5b2c, 0x6a90, 0x7f5c, 0xc3b9, 0xefa8, 0x1, 0x1);
        gbc.writeMem(0xb061, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5b2c);
        EXPECT(gbc.pc(), 0xb063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb061), 0xcb);
        EXPECT(gbc.readMem(0xb062), 0x9);
        // CB 09 0055
        gbc.setState(0x577a, 0xe536, 0xb600, 0xb379, 0xc850, 0x4a7c, 0x1, 0x1);
        gbc.writeMem(0x577a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe536);
        EXPECT(gbc.pc(), 0x577c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0056
        gbc.setState(0x8f05, 0x61ec, 0xaf20, 0x373e, 0x7c47, 0xc3ed, 0x0, 0x0);
        gbc.writeMem(0x8f05, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x61ec);
        EXPECT(gbc.pc(), 0x8f07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f05), 0xcb);
        EXPECT(gbc.readMem(0x8f06), 0x9);
        // CB 09 0057
        gbc.setState(0x88c2, 0x71fd, 0x4630, 0xa4a9, 0x3ffb, 0x934, 0x0, 0x0);
        gbc.writeMem(0x88c2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x71fd);
        EXPECT(gbc.pc(), 0x88c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c2), 0xcb);
        EXPECT(gbc.readMem(0x88c3), 0x9);
        // CB 09 0058
        gbc.setState(0x63a5, 0x9639, 0xa810, 0x3d8f, 0x9d9b, 0x46f9, 0x0, 0x1);
        gbc.writeMem(0x63a5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9639);
        EXPECT(gbc.pc(), 0x63a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0059
        gbc.setState(0xb6ab, 0xfc76, 0x72e0, 0x73a0, 0xc17a, 0x788e, 0x0, 0x1);
        gbc.writeMem(0xb6ab, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xfc76);
        EXPECT(gbc.pc(), 0xb6ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ab), 0xcb);
        EXPECT(gbc.readMem(0xb6ac), 0x9);
        // CB 09 005A
        gbc.setState(0xd689, 0x249c, 0xc9a0, 0xdbe5, 0x88ad, 0xf03e, 0x1, 0x1);
        gbc.writeMem(0xd689, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x249c);
        EXPECT(gbc.pc(), 0xd68b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd689), 0xcb);
        EXPECT(gbc.readMem(0xd68a), 0x9);
        // CB 09 005B
        gbc.setState(0xaf3a, 0xc962, 0x2b0, 0x8eaa, 0xba12, 0xbb22, 0x1, 0x1);
        gbc.writeMem(0xaf3a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc962);
        EXPECT(gbc.pc(), 0xaf3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf3a), 0xcb);
        EXPECT(gbc.readMem(0xaf3b), 0x9);
        // CB 09 005C
        gbc.setState(0x5af7, 0xbebd, 0xe3c0, 0x8aff, 0x90fb, 0x8af6, 0x1, 0x0);
        gbc.writeMem(0x5af7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xbebd);
        EXPECT(gbc.pc(), 0x5af9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 005D
        gbc.setState(0x754f, 0xf0d9, 0xda30, 0x76cd, 0x4026, 0xd4ea, 0x0, 0x1);
        gbc.writeMem(0x754f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf0d9);
        EXPECT(gbc.pc(), 0x7551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 005E
        gbc.setState(0x3fc6, 0xbac1, 0xe1f0, 0x9066, 0xba3e, 0x2d2c, 0x1, 0x0);
        gbc.writeMem(0x3fc6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbac1);
        EXPECT(gbc.pc(), 0x3fc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 005F
        gbc.setState(0x9951, 0xf0ae, 0x3b80, 0xc034, 0x8d2e, 0xbbb5, 0x1, 0x1);
        gbc.writeMem(0x9951, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf0ae);
        EXPECT(gbc.pc(), 0x9953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9951), 0xcb);
        EXPECT(gbc.readMem(0x9952), 0x9);
        // CB 09 0060
        gbc.setState(0xe603, 0x4779, 0x1490, 0x5ea3, 0x1a1e, 0xf0c0, 0x1, 0x0);
        gbc.writeMem(0xe603, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4779);
        EXPECT(gbc.pc(), 0xe605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe603), 0xcb);
        EXPECT(gbc.readMem(0xe604), 0x9);
        // CB 09 0061
        gbc.setState(0x1c81, 0xb193, 0xa580, 0x8cba, 0xef9e, 0x5578, 0x1, 0x1);
        gbc.writeMem(0x1c81, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb193);
        EXPECT(gbc.pc(), 0x1c83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0062
        gbc.setState(0x1a17, 0x7eaa, 0x64e0, 0x7c64, 0xe7b8, 0x1bbc, 0x1, 0x0);
        gbc.writeMem(0x1a17, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7eaa);
        EXPECT(gbc.pc(), 0x1a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0063
        gbc.setState(0x684d, 0xffdf, 0xfb0, 0x98ec, 0x7eeb, 0x7881, 0x1, 0x1);
        gbc.writeMem(0x684d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xffdf);
        EXPECT(gbc.pc(), 0x684f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0064
        gbc.setState(0x7962, 0xb0b4, 0x8140, 0x1583, 0xedd8, 0x5740, 0x0, 0x0);
        gbc.writeMem(0x7962, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb0b4);
        EXPECT(gbc.pc(), 0x7964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0065
        gbc.setState(0x917d, 0x9415, 0x87b0, 0x7cff, 0x8c5a, 0xe375, 0x1, 0x0);
        gbc.writeMem(0x917d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9415);
        EXPECT(gbc.pc(), 0x917f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x917d), 0xcb);
        EXPECT(gbc.readMem(0x917e), 0x9);
        // CB 09 0066
        gbc.setState(0xa0ab, 0x1b64, 0xede0, 0x59a2, 0xd3f8, 0xfa6f, 0x1, 0x1);
        gbc.writeMem(0xa0ab, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1b64);
        EXPECT(gbc.pc(), 0xa0ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ab), 0xcb);
        EXPECT(gbc.readMem(0xa0ac), 0x9);
        // CB 09 0067
        gbc.setState(0xddea, 0x21a6, 0x8750, 0xdc84, 0x2cc, 0x509, 0x0, 0x0);
        gbc.writeMem(0xddea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x21a6);
        EXPECT(gbc.pc(), 0xddec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddea), 0xcb);
        EXPECT(gbc.readMem(0xddeb), 0x9);
        // CB 09 0068
        gbc.setState(0x723e, 0xa8e3, 0x1910, 0x4709, 0x21ad, 0xc702, 0x1, 0x0);
        gbc.writeMem(0x723e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa8e3);
        EXPECT(gbc.pc(), 0x7240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0069
        gbc.setState(0xbb26, 0x2262, 0x83c0, 0x4dbd, 0x80a0, 0xf7d9, 0x1, 0x0);
        gbc.writeMem(0xbb26, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2262);
        EXPECT(gbc.pc(), 0xbb28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb26), 0xcb);
        EXPECT(gbc.readMem(0xbb27), 0x9);
        // CB 09 006A
        gbc.setState(0x5851, 0xf34d, 0x46e0, 0xe19e, 0x579a, 0xb25c, 0x0, 0x1);
        gbc.writeMem(0x5851, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf34d);
        EXPECT(gbc.pc(), 0x5853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 006B
        gbc.setState(0x3f14, 0x3322, 0xb6b0, 0x5e00, 0x5e65, 0x29de, 0x0, 0x0);
        gbc.writeMem(0x3f14, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3322);
        EXPECT(gbc.pc(), 0x3f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 006C
        gbc.setState(0x735e, 0x80d0, 0x7100, 0x2afe, 0xb80d, 0x4a54, 0x1, 0x1);
        gbc.writeMem(0x735e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x80d0);
        EXPECT(gbc.pc(), 0x7360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 006D
        gbc.setState(0x8f8, 0x3cd6, 0x5a50, 0xa47e, 0x54f6, 0xa9a5, 0x0, 0x1);
        gbc.writeMem(0x8f8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3cd6);
        EXPECT(gbc.pc(), 0x8fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 006E
        gbc.setState(0x386f, 0xc263, 0x1ba0, 0x6357, 0x2ffb, 0x7368, 0x1, 0x0);
        gbc.writeMem(0x386f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc263);
        EXPECT(gbc.pc(), 0x3871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 006F
        gbc.setState(0x5990, 0x557f, 0x330, 0x563c, 0x6349, 0x6bec, 0x0, 0x1);
        gbc.writeMem(0x5990, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x557f);
        EXPECT(gbc.pc(), 0x5992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0070
        gbc.setState(0x3b98, 0x747a, 0x26d0, 0x5dd0, 0xa43c, 0x9615, 0x0, 0x1);
        gbc.writeMem(0x3b98, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x747a);
        EXPECT(gbc.pc(), 0x3b9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0071
        gbc.setState(0x21e9, 0xf0dd, 0xc270, 0xf2ea, 0x6352, 0xf418, 0x0, 0x0);
        gbc.writeMem(0x21e9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf0dd);
        EXPECT(gbc.pc(), 0x21eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0072
        gbc.setState(0x97a6, 0xc506, 0x27b0, 0x5a95, 0xdb66, 0xe640, 0x0, 0x0);
        gbc.writeMem(0x97a6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc506);
        EXPECT(gbc.pc(), 0x97a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a6), 0xcb);
        EXPECT(gbc.readMem(0x97a7), 0x9);
        // CB 09 0073
        gbc.setState(0xd379, 0x22f3, 0x1ff0, 0x4d35, 0xcfd9, 0x71d8, 0x1, 0x0);
        gbc.writeMem(0xd379, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x22f3);
        EXPECT(gbc.pc(), 0xd37b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd379), 0xcb);
        EXPECT(gbc.readMem(0xd37a), 0x9);
        // CB 09 0074
        gbc.setState(0xb9f1, 0xab89, 0xa250, 0x26f3, 0x5a55, 0x2156, 0x0, 0x0);
        gbc.writeMem(0xb9f1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xab89);
        EXPECT(gbc.pc(), 0xb9f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9f1), 0xcb);
        EXPECT(gbc.readMem(0xb9f2), 0x9);
        // CB 09 0075
        gbc.setState(0xcfd4, 0xdda8, 0x66d0, 0x482d, 0x738, 0xa164, 0x0, 0x1);
        gbc.writeMem(0xcfd4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xdda8);
        EXPECT(gbc.pc(), 0xcfd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd4), 0xcb);
        EXPECT(gbc.readMem(0xcfd5), 0x9);
        // CB 09 0076
        gbc.setState(0x585a, 0xf4f4, 0x8ce0, 0x254a, 0xc6a9, 0xd277, 0x1, 0x1);
        gbc.writeMem(0x585a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf4f4);
        EXPECT(gbc.pc(), 0x585c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0077
        gbc.setState(0xd977, 0xfe2a, 0xacb0, 0x860, 0x2828, 0xf3d7, 0x1, 0x1);
        gbc.writeMem(0xd977, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xfe2a);
        EXPECT(gbc.pc(), 0xd979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd977), 0xcb);
        EXPECT(gbc.readMem(0xd978), 0x9);
        // CB 09 0078
        gbc.setState(0xca24, 0xe6fd, 0x7b60, 0xaf82, 0x602, 0x97fd, 0x0, 0x0);
        gbc.writeMem(0xca24, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe6fd);
        EXPECT(gbc.pc(), 0xca26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca24), 0xcb);
        EXPECT(gbc.readMem(0xca25), 0x9);
        // CB 09 0079
        gbc.setState(0x117, 0xa56a, 0xd7e0, 0x476e, 0x5954, 0xec0b, 0x0, 0x1);
        gbc.writeMem(0x117, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa56a);
        EXPECT(gbc.pc(), 0x119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 007A
        gbc.setState(0x73f0, 0x9f35, 0x7790, 0x623f, 0xd4d3, 0x45a0, 0x1, 0x1);
        gbc.writeMem(0x73f0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9f35);
        EXPECT(gbc.pc(), 0x73f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 007B
        gbc.setState(0x21c4, 0xa4c3, 0xd7a0, 0x945f, 0x19a6, 0xe04f, 0x1, 0x1);
        gbc.writeMem(0x21c4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa4c3);
        EXPECT(gbc.pc(), 0x21c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 007C
        gbc.setState(0xafd5, 0x97ea, 0x12d0, 0x9e12, 0x5af3, 0x6884, 0x1, 0x0);
        gbc.writeMem(0xafd5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x97ea);
        EXPECT(gbc.pc(), 0xafd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd5), 0xcb);
        EXPECT(gbc.readMem(0xafd6), 0x9);
        // CB 09 007D
        gbc.setState(0x9798, 0xe6a0, 0x21e0, 0xeb29, 0x186, 0x5ec9, 0x0, 0x0);
        gbc.writeMem(0x9798, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe6a0);
        EXPECT(gbc.pc(), 0x979a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9798), 0xcb);
        EXPECT(gbc.readMem(0x9799), 0x9);
        // CB 09 007E
        gbc.setState(0xd9aa, 0xc9b0, 0x73e0, 0x2fbd, 0xfeae, 0x4d67, 0x1, 0x1);
        gbc.writeMem(0xd9aa, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc9b0);
        EXPECT(gbc.pc(), 0xd9ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9aa), 0xcb);
        EXPECT(gbc.readMem(0xd9ab), 0x9);
        // CB 09 007F
        gbc.setState(0x9db2, 0xa235, 0x1910, 0xde12, 0xea23, 0xecd2, 0x0, 0x1);
        gbc.writeMem(0x9db2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa235);
        EXPECT(gbc.pc(), 0x9db4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db2), 0xcb);
        EXPECT(gbc.readMem(0x9db3), 0x9);
        // CB 09 0080
        gbc.setState(0xd39a, 0xc220, 0xf030, 0x6f1c, 0x6056, 0xe2dc, 0x1, 0x0);
        gbc.writeMem(0xd39a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc220);
        EXPECT(gbc.pc(), 0xd39c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd39a), 0xcb);
        EXPECT(gbc.readMem(0xd39b), 0x9);
        // CB 09 0082
        gbc.setState(0x2301, 0x3562, 0x3280, 0x2fc9, 0x313f, 0xa5eb, 0x0, 0x1);
        gbc.writeMem(0x2301, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3562);
        EXPECT(gbc.pc(), 0x2303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0083
        gbc.setState(0x43ed, 0x5149, 0xf140, 0xfa59, 0x47c9, 0x4cb0, 0x1, 0x1);
        gbc.writeMem(0x43ed, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5149);
        EXPECT(gbc.pc(), 0x43ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0084
        gbc.setState(0xa484, 0x8931, 0xae40, 0x5f71, 0x7611, 0x1307, 0x0, 0x0);
        gbc.writeMem(0xa484, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8931);
        EXPECT(gbc.pc(), 0xa486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa484), 0xcb);
        EXPECT(gbc.readMem(0xa485), 0x9);
        // CB 09 0085
        gbc.setState(0x417b, 0x4c77, 0xc730, 0x2218, 0xee14, 0x553d, 0x1, 0x0);
        gbc.writeMem(0x417b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4c77);
        EXPECT(gbc.pc(), 0x417d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0086
        gbc.setState(0x1783, 0x98af, 0x8850, 0x7c16, 0x587, 0xea75, 0x1, 0x0);
        gbc.writeMem(0x1783, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x98af);
        EXPECT(gbc.pc(), 0x1785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0087
        gbc.setState(0x4b48, 0xaeef, 0xa9e0, 0x7bbd, 0x8b22, 0x6675, 0x0, 0x0);
        gbc.writeMem(0x4b48, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xaeef);
        EXPECT(gbc.pc(), 0x4b4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0088
        gbc.setState(0xd4dd, 0x7846, 0x4cc0, 0xf51b, 0x610, 0x20ec, 0x0, 0x1);
        gbc.writeMem(0xd4dd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7846);
        EXPECT(gbc.pc(), 0xd4df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4dd), 0xcb);
        EXPECT(gbc.readMem(0xd4de), 0x9);
        // CB 09 0089
        gbc.setState(0x89bc, 0x9597, 0xd40, 0x6465, 0x519d, 0xc0d5, 0x0, 0x1);
        gbc.writeMem(0x89bc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9597);
        EXPECT(gbc.pc(), 0x89be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89bc), 0xcb);
        EXPECT(gbc.readMem(0x89bd), 0x9);
        // CB 09 008A
        gbc.setState(0xac68, 0x7986, 0x40e0, 0xb46e, 0x3847, 0x6355, 0x1, 0x0);
        gbc.writeMem(0xac68, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7986);
        EXPECT(gbc.pc(), 0xac6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac68), 0xcb);
        EXPECT(gbc.readMem(0xac69), 0x9);
        // CB 09 008C
        gbc.setState(0xb47d, 0xc474, 0x21c0, 0x428c, 0x809d, 0xda7b, 0x0, 0x1);
        gbc.writeMem(0xb47d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc474);
        EXPECT(gbc.pc(), 0xb47f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb47d), 0xcb);
        EXPECT(gbc.readMem(0xb47e), 0x9);
        // CB 09 008D
        gbc.setState(0x5175, 0x4ab2, 0x35d0, 0x535d, 0x7026, 0x468b, 0x1, 0x1);
        gbc.writeMem(0x5175, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4ab2);
        EXPECT(gbc.pc(), 0x5177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 008E
        gbc.setState(0x84a1, 0x6943, 0x6a20, 0x84d2, 0xde74, 0x2823, 0x1, 0x0);
        gbc.writeMem(0x84a1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6943);
        EXPECT(gbc.pc(), 0x84a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a1), 0xcb);
        EXPECT(gbc.readMem(0x84a2), 0x9);
        // CB 09 008F
        gbc.setState(0xeffe, 0x16ae, 0x7a60, 0xed00, 0x72d0, 0x4612, 0x0, 0x1);
        gbc.writeMem(0xeffe, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x16ae);
        EXPECT(gbc.pc(), 0xf000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeffe), 0xcb);
        EXPECT(gbc.readMem(0xefff), 0x9);
        // CB 09 0090
        gbc.setState(0x851, 0xab72, 0x6c20, 0x7676, 0x4f1f, 0xeb0d, 0x1, 0x1);
        gbc.writeMem(0x851, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xab72);
        EXPECT(gbc.pc(), 0x853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0092
        gbc.setState(0x6684, 0x767, 0x6f0, 0x9a95, 0xd5b2, 0xa497, 0x1, 0x1);
        gbc.writeMem(0x6684, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x767);
        EXPECT(gbc.pc(), 0x6686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0094
        gbc.setState(0x61b1, 0xd2f6, 0x2de0, 0xf2cc, 0x9bf6, 0x348b, 0x0, 0x1);
        gbc.writeMem(0x61b1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd2f6);
        EXPECT(gbc.pc(), 0x61b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0095
        gbc.setState(0x5a67, 0x4820, 0x4930, 0xd784, 0x7257, 0x8d57, 0x1, 0x0);
        gbc.writeMem(0x5a67, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4820);
        EXPECT(gbc.pc(), 0x5a69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0096
        gbc.setState(0x19cd, 0xaad2, 0x6990, 0x5c2, 0xe73d, 0x80c4, 0x0, 0x1);
        gbc.writeMem(0x19cd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xaad2);
        EXPECT(gbc.pc(), 0x19cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0097
        gbc.setState(0xd515, 0xeae3, 0xda70, 0x2776, 0x1c5e, 0xf32c, 0x1, 0x0);
        gbc.writeMem(0xd515, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xeae3);
        EXPECT(gbc.pc(), 0xd517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd515), 0xcb);
        EXPECT(gbc.readMem(0xd516), 0x9);
        // CB 09 0098
        gbc.setState(0xc2b2, 0x500, 0xb1b0, 0xb046, 0x54f6, 0x4bf1, 0x0, 0x0);
        gbc.writeMem(0xc2b2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x500);
        EXPECT(gbc.pc(), 0xc2b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b2), 0xcb);
        EXPECT(gbc.readMem(0xc2b3), 0x9);
        // CB 09 0099
        gbc.setState(0xcf6d, 0xe8f6, 0xa6c0, 0x6b1, 0x8407, 0xe900, 0x1, 0x1);
        gbc.writeMem(0xcf6d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe8f6);
        EXPECT(gbc.pc(), 0xcf6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf6d), 0xcb);
        EXPECT(gbc.readMem(0xcf6e), 0x9);
        // CB 09 009A
        gbc.setState(0xa1f9, 0x2b99, 0x34f0, 0xe7c5, 0x4e60, 0x1edf, 0x0, 0x1);
        gbc.writeMem(0xa1f9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2b99);
        EXPECT(gbc.pc(), 0xa1fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f9), 0xcb);
        EXPECT(gbc.readMem(0xa1fa), 0x9);
        // CB 09 009B
        gbc.setState(0x4f3e, 0xb112, 0xb960, 0xb9f2, 0x4eda, 0xaf84, 0x1, 0x0);
        gbc.writeMem(0x4f3e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb112);
        EXPECT(gbc.pc(), 0x4f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 009C
        gbc.setState(0xe65c, 0xb4b, 0x2bf0, 0x1080, 0xba8c, 0xdafc, 0x0, 0x0);
        gbc.writeMem(0xe65c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb4b);
        EXPECT(gbc.pc(), 0xe65e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe65c), 0xcb);
        EXPECT(gbc.readMem(0xe65d), 0x9);
        // CB 09 009D
        gbc.setState(0x8a30, 0x62a8, 0x5440, 0x8a5c, 0x30b1, 0xe1a7, 0x0, 0x0);
        gbc.writeMem(0x8a30, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x62a8);
        EXPECT(gbc.pc(), 0x8a32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a30), 0xcb);
        EXPECT(gbc.readMem(0x8a31), 0x9);
        // CB 09 009E
        gbc.setState(0xd9ce, 0xf851, 0x7790, 0x6b6b, 0x3dcc, 0xd9e0, 0x0, 0x0);
        gbc.writeMem(0xd9ce, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf851);
        EXPECT(gbc.pc(), 0xd9d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9ce), 0xcb);
        EXPECT(gbc.readMem(0xd9cf), 0x9);
        // CB 09 009F
        gbc.setState(0x2f90, 0xa5c1, 0x4900, 0x49ae, 0x1c8a, 0x3246, 0x1, 0x0);
        gbc.writeMem(0x2f90, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa5c1);
        EXPECT(gbc.pc(), 0x2f92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00A0
        gbc.setState(0x6ee4, 0xf13c, 0x8a70, 0x1f7a, 0x9250, 0x145a, 0x1, 0x1);
        gbc.writeMem(0x6ee4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf13c);
        EXPECT(gbc.pc(), 0x6ee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00A1
        gbc.setState(0xc522, 0xc0a4, 0x1260, 0x139a, 0x4089, 0xe405, 0x0, 0x0);
        gbc.writeMem(0xc522, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc0a4);
        EXPECT(gbc.pc(), 0xc524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc522), 0xcb);
        EXPECT(gbc.readMem(0xc523), 0x9);
        // CB 09 00A4
        gbc.setState(0xe04, 0xfe7b, 0xa310, 0xbb99, 0x7e64, 0x48df, 0x1, 0x1);
        gbc.writeMem(0xe04, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfe7b);
        EXPECT(gbc.pc(), 0xe06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00A5
        gbc.setState(0x7934, 0x2198, 0x5790, 0xd24, 0x65dd, 0x4738, 0x0, 0x0);
        gbc.writeMem(0x7934, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2198);
        EXPECT(gbc.pc(), 0x7936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00A6
        gbc.setState(0x9433, 0x4642, 0x5450, 0x5123, 0xde7f, 0x7d00, 0x0, 0x0);
        gbc.writeMem(0x9433, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4642);
        EXPECT(gbc.pc(), 0x9435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9433), 0xcb);
        EXPECT(gbc.readMem(0x9434), 0x9);
        // CB 09 00A7
        gbc.setState(0x34, 0x8c03, 0xf330, 0x1eb7, 0x1c04, 0x7e93, 0x1, 0x1);
        gbc.writeMem(0x34, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8c03);
        EXPECT(gbc.pc(), 0x36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00A8
        gbc.setState(0x8ba2, 0x5351, 0x8d90, 0xd32, 0xd1a7, 0xb7f5, 0x1, 0x1);
        gbc.writeMem(0x8ba2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5351);
        EXPECT(gbc.pc(), 0x8ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba2), 0xcb);
        EXPECT(gbc.readMem(0x8ba3), 0x9);
        // CB 09 00A9
        gbc.setState(0x8a4c, 0x9ca0, 0x1340, 0xf5d, 0xec94, 0x43f5, 0x1, 0x0);
        gbc.writeMem(0x8a4c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9ca0);
        EXPECT(gbc.pc(), 0x8a4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a4c), 0xcb);
        EXPECT(gbc.readMem(0x8a4d), 0x9);
        // CB 09 00AA
        gbc.setState(0xb914, 0xd1e5, 0x3220, 0xd854, 0x9104, 0x5302, 0x0, 0x0);
        gbc.writeMem(0xb914, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd1e5);
        EXPECT(gbc.pc(), 0xb916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb914), 0xcb);
        EXPECT(gbc.readMem(0xb915), 0x9);
        // CB 09 00AB
        gbc.setState(0x5279, 0xd89e, 0xa9c0, 0x86ea, 0xee8e, 0xefc0, 0x1, 0x1);
        gbc.writeMem(0x5279, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd89e);
        EXPECT(gbc.pc(), 0x527b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00AC
        gbc.setState(0x60ba, 0xf7f5, 0xacf0, 0x45f2, 0x36e3, 0xd0b9, 0x1, 0x0);
        gbc.writeMem(0x60ba, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf7f5);
        EXPECT(gbc.pc(), 0x60bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00AF
        gbc.setState(0xaa01, 0xf5d5, 0xed0, 0x91d1, 0xbbdd, 0x7887, 0x0, 0x0);
        gbc.writeMem(0xaa01, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf5d5);
        EXPECT(gbc.pc(), 0xaa03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa01), 0xcb);
        EXPECT(gbc.readMem(0xaa02), 0x9);
        // CB 09 00B0
        gbc.setState(0x5e36, 0xec1f, 0x66e0, 0x4716, 0xe8e6, 0x2d98, 0x0, 0x1);
        gbc.writeMem(0x5e36, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xec1f);
        EXPECT(gbc.pc(), 0x5e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00B1
        gbc.setState(0x8987, 0x2e0c, 0x8cb0, 0xfcce, 0x71bf, 0x4743, 0x1, 0x1);
        gbc.writeMem(0x8987, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2e0c);
        EXPECT(gbc.pc(), 0x8989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8987), 0xcb);
        EXPECT(gbc.readMem(0x8988), 0x9);
        // CB 09 00B2
        gbc.setState(0x7ac6, 0x37b, 0xf980, 0x48a3, 0x5468, 0x8cac, 0x1, 0x0);
        gbc.writeMem(0x7ac6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x37b);
        EXPECT(gbc.pc(), 0x7ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00B3
        gbc.setState(0x4702, 0x7f86, 0x6f60, 0xaaf, 0x1a11, 0x450a, 0x0, 0x1);
        gbc.writeMem(0x4702, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7f86);
        EXPECT(gbc.pc(), 0x4704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00B4
        gbc.setState(0x6907, 0x3a5, 0xf370, 0x9d2f, 0x83f, 0x70, 0x1, 0x0);
        gbc.writeMem(0x6907, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3a5);
        EXPECT(gbc.pc(), 0x6909);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00B5
        gbc.setState(0x27e3, 0x3260, 0x3de0, 0xe411, 0xbefa, 0xcbc0, 0x0, 0x1);
        gbc.writeMem(0x27e3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3260);
        EXPECT(gbc.pc(), 0x27e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00B6
        gbc.setState(0xaabf, 0x86a2, 0x85b0, 0xc435, 0x9073, 0xdfde, 0x1, 0x1);
        gbc.writeMem(0xaabf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x86a2);
        EXPECT(gbc.pc(), 0xaac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaabf), 0xcb);
        EXPECT(gbc.readMem(0xaac0), 0x9);
        // CB 09 00B8
        gbc.setState(0xce32, 0x8e73, 0x9b20, 0x8bad, 0x324d, 0x2c32, 0x1, 0x1);
        gbc.writeMem(0xce32, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8e73);
        EXPECT(gbc.pc(), 0xce34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce32), 0xcb);
        EXPECT(gbc.readMem(0xce33), 0x9);
        // CB 09 00B9
        gbc.setState(0x8396, 0xc882, 0x8440, 0xeda2, 0x3a06, 0x836e, 0x1, 0x0);
        gbc.writeMem(0x8396, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc882);
        EXPECT(gbc.pc(), 0x8398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8396), 0xcb);
        EXPECT(gbc.readMem(0x8397), 0x9);
        // CB 09 00BA
        gbc.setState(0x46a4, 0x96e1, 0x1160, 0x5366, 0x60ba, 0xe779, 0x0, 0x0);
        gbc.writeMem(0x46a4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x96e1);
        EXPECT(gbc.pc(), 0x46a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00BB
        gbc.setState(0xb6e, 0xf531, 0x3420, 0x63af, 0xcaa6, 0x2151, 0x0, 0x1);
        gbc.writeMem(0xb6e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf531);
        EXPECT(gbc.pc(), 0xb70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00BD
        gbc.setState(0x60a8, 0x8d6d, 0x6f60, 0xb62d, 0x2dab, 0x7c6a, 0x0, 0x0);
        gbc.writeMem(0x60a8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8d6d);
        EXPECT(gbc.pc(), 0x60aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00BE
        gbc.setState(0x8f04, 0xeec0, 0x6d70, 0xdc6e, 0x46ca, 0xd8aa, 0x0, 0x1);
        gbc.writeMem(0x8f04, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xeec0);
        EXPECT(gbc.pc(), 0x8f06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f04), 0xcb);
        EXPECT(gbc.readMem(0x8f05), 0x9);
        // CB 09 00BF
        gbc.setState(0xdef6, 0xa117, 0x2950, 0xaabf, 0x84a3, 0x896e, 0x1, 0x1);
        gbc.writeMem(0xdef6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa117);
        EXPECT(gbc.pc(), 0xdef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdef6), 0xcb);
        EXPECT(gbc.readMem(0xdef7), 0x9);
        // CB 09 00C1
        gbc.setState(0x117c, 0x89e4, 0x16f0, 0xafbd, 0xf1bb, 0x3f88, 0x0, 0x0);
        gbc.writeMem(0x117c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x89e4);
        EXPECT(gbc.pc(), 0x117e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00C2
        gbc.setState(0x7630, 0xb760, 0xe770, 0x8d42, 0xb433, 0x371a, 0x0, 0x1);
        gbc.writeMem(0x7630, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb760);
        EXPECT(gbc.pc(), 0x7632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00C3
        gbc.setState(0xe5d5, 0x56ff, 0xb210, 0xc901, 0xea16, 0x8b6a, 0x1, 0x1);
        gbc.writeMem(0xe5d5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x56ff);
        EXPECT(gbc.pc(), 0xe5d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5d5), 0xcb);
        EXPECT(gbc.readMem(0xe5d6), 0x9);
        // CB 09 00C4
        gbc.setState(0x1a75, 0x237f, 0x96f0, 0xf666, 0xec8d, 0xfdfd, 0x1, 0x1);
        gbc.writeMem(0x1a75, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x237f);
        EXPECT(gbc.pc(), 0x1a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00C5
        gbc.setState(0xe14a, 0x4feb, 0x8fa0, 0x17ea, 0xf1de, 0x2a80, 0x0, 0x0);
        gbc.writeMem(0xe14a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4feb);
        EXPECT(gbc.pc(), 0xe14c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe14a), 0xcb);
        EXPECT(gbc.readMem(0xe14b), 0x9);
        // CB 09 00C7
        gbc.setState(0xafda, 0xc95e, 0x4080, 0xa98d, 0xd128, 0x844d, 0x1, 0x0);
        gbc.writeMem(0xafda, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc95e);
        EXPECT(gbc.pc(), 0xafdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafda), 0xcb);
        EXPECT(gbc.readMem(0xafdb), 0x9);
        // CB 09 00C8
        gbc.setState(0xa03b, 0xaa9e, 0xe8b0, 0x783, 0xe0b2, 0xca02, 0x1, 0x0);
        gbc.writeMem(0xa03b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xaa9e);
        EXPECT(gbc.pc(), 0xa03d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa03b), 0xcb);
        EXPECT(gbc.readMem(0xa03c), 0x9);
        // CB 09 00C9
        gbc.setState(0x8b16, 0xe20, 0xf010, 0x3a55, 0xef0e, 0xebbd, 0x1, 0x0);
        gbc.writeMem(0x8b16, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe20);
        EXPECT(gbc.pc(), 0x8b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b16), 0xcb);
        EXPECT(gbc.readMem(0x8b17), 0x9);
        // CB 09 00CA
        gbc.setState(0xdc4e, 0x686f, 0x2f70, 0x8fff, 0xb2ed, 0xea52, 0x0, 0x0);
        gbc.writeMem(0xdc4e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x686f);
        EXPECT(gbc.pc(), 0xdc50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc4e), 0xcb);
        EXPECT(gbc.readMem(0xdc4f), 0x9);
        // CB 09 00CB
        gbc.setState(0x2b34, 0x6332, 0x16f0, 0x84c2, 0x4750, 0x6006, 0x1, 0x0);
        gbc.writeMem(0x2b34, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6332);
        EXPECT(gbc.pc(), 0x2b36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00CC
        gbc.setState(0x19cf, 0x47ca, 0x610, 0x590f, 0xc7d2, 0x1061, 0x1, 0x1);
        gbc.writeMem(0x19cf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x47ca);
        EXPECT(gbc.pc(), 0x19d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00CD
        gbc.setState(0x6cd3, 0xa39e, 0x3410, 0x535e, 0x451b, 0x954, 0x1, 0x0);
        gbc.writeMem(0x6cd3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa39e);
        EXPECT(gbc.pc(), 0x6cd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00CE
        gbc.setState(0x3e53, 0x42d4, 0x2ba0, 0x488f, 0xb3e8, 0x3a5, 0x0, 0x1);
        gbc.writeMem(0x3e53, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x42d4);
        EXPECT(gbc.pc(), 0x3e55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00CF
        gbc.setState(0x3052, 0x2e4a, 0x2790, 0x8425, 0x2b05, 0x3b44, 0x1, 0x0);
        gbc.writeMem(0x3052, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2e4a);
        EXPECT(gbc.pc(), 0x3054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00D0
        gbc.setState(0x2a0a, 0xf5c0, 0x3090, 0x5fcc, 0x2867, 0x6129, 0x1, 0x1);
        gbc.writeMem(0x2a0a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf5c0);
        EXPECT(gbc.pc(), 0x2a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00D1
        gbc.setState(0xefd0, 0x5e50, 0x1140, 0x9e54, 0x911a, 0xe163, 0x1, 0x0);
        gbc.writeMem(0xefd0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5e50);
        EXPECT(gbc.pc(), 0xefd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefd0), 0xcb);
        EXPECT(gbc.readMem(0xefd1), 0x9);
        // CB 09 00D2
        gbc.setState(0x8b4b, 0x6500, 0xbb20, 0xbd8b, 0x46a1, 0xdce4, 0x0, 0x1);
        gbc.writeMem(0x8b4b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6500);
        EXPECT(gbc.pc(), 0x8b4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b4b), 0xcb);
        EXPECT(gbc.readMem(0x8b4c), 0x9);
        // CB 09 00D3
        gbc.setState(0xe134, 0xaac, 0x30e0, 0x511e, 0x78de, 0xafe6, 0x1, 0x1);
        gbc.writeMem(0xe134, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xaac);
        EXPECT(gbc.pc(), 0xe136);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe134), 0xcb);
        EXPECT(gbc.readMem(0xe135), 0x9);
        // CB 09 00D4
        gbc.setState(0x70c3, 0xc0bf, 0xa190, 0x7cc9, 0x588b, 0x71dc, 0x0, 0x0);
        gbc.writeMem(0x70c3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc0bf);
        EXPECT(gbc.pc(), 0x70c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00D5
        gbc.setState(0x10a6, 0xc72, 0x2960, 0xe53, 0x7eee, 0x1975, 0x0, 0x0);
        gbc.writeMem(0x10a6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc72);
        EXPECT(gbc.pc(), 0x10a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00D6
        gbc.setState(0x7ace, 0x210e, 0xd1e0, 0x5487, 0x1a88, 0x99af, 0x0, 0x1);
        gbc.writeMem(0x7ace, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x210e);
        EXPECT(gbc.pc(), 0x7ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00D7
        gbc.setState(0xbc2b, 0x6a18, 0xdb60, 0x4bec, 0x63c1, 0x4ab8, 0x1, 0x0);
        gbc.writeMem(0xbc2b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6a18);
        EXPECT(gbc.pc(), 0xbc2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2b), 0xcb);
        EXPECT(gbc.readMem(0xbc2c), 0x9);
        // CB 09 00D9
        gbc.setState(0x24bc, 0x9e58, 0xfb40, 0xc7d1, 0xec57, 0x934a, 0x0, 0x0);
        gbc.writeMem(0x24bc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9e58);
        EXPECT(gbc.pc(), 0x24be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00DA
        gbc.setState(0xe94a, 0x2d80, 0x810, 0x4a5b, 0x7ade, 0xbdaf, 0x0, 0x1);
        gbc.writeMem(0xe94a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2d80);
        EXPECT(gbc.pc(), 0xe94c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe94a), 0xcb);
        EXPECT(gbc.readMem(0xe94b), 0x9);
        // CB 09 00DB
        gbc.setState(0xca86, 0xb50d, 0x6e30, 0xdb69, 0xd774, 0x1fb0, 0x1, 0x0);
        gbc.writeMem(0xca86, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb50d);
        EXPECT(gbc.pc(), 0xca88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca86), 0xcb);
        EXPECT(gbc.readMem(0xca87), 0x9);
        // CB 09 00DC
        gbc.setState(0x4e9a, 0x78d4, 0xd640, 0x7ccf, 0x93d0, 0xfe3d, 0x0, 0x1);
        gbc.writeMem(0x4e9a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x78d4);
        EXPECT(gbc.pc(), 0x4e9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00DD
        gbc.setState(0x4702, 0xda80, 0x3d00, 0xd1e6, 0x5663, 0x5e96, 0x0, 0x0);
        gbc.writeMem(0x4702, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xda80);
        EXPECT(gbc.pc(), 0x4704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00DE
        gbc.setState(0x48b0, 0xaf38, 0x4050, 0x440b, 0x9106, 0x5110, 0x1, 0x1);
        gbc.writeMem(0x48b0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xaf38);
        EXPECT(gbc.pc(), 0x48b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00DF
        gbc.setState(0x2cdc, 0x32cd, 0x5690, 0x60bf, 0x3608, 0xe4fe, 0x1, 0x0);
        gbc.writeMem(0x2cdc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x32cd);
        EXPECT(gbc.pc(), 0x2cde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00E0
        gbc.setState(0xb81, 0x6b47, 0x2860, 0xf4ab, 0x831c, 0xd7e7, 0x1, 0x1);
        gbc.writeMem(0xb81, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6b47);
        EXPECT(gbc.pc(), 0xb83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00E1
        gbc.setState(0x19cb, 0xa82e, 0xc3b0, 0x74cf, 0x6c78, 0x470c, 0x0, 0x1);
        gbc.writeMem(0x19cb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa82e);
        EXPECT(gbc.pc(), 0x19cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00E2
        gbc.setState(0x9a7c, 0xbe6e, 0x6170, 0xea0, 0xa809, 0x4bc7, 0x1, 0x1);
        gbc.writeMem(0x9a7c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbe6e);
        EXPECT(gbc.pc(), 0x9a7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a7c), 0xcb);
        EXPECT(gbc.readMem(0x9a7d), 0x9);
        // CB 09 00E3
        gbc.setState(0x6bc9, 0x8da2, 0xbc30, 0xfbbb, 0xbe93, 0x3335, 0x1, 0x1);
        gbc.writeMem(0x6bc9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8da2);
        EXPECT(gbc.pc(), 0x6bcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00E4
        gbc.setState(0xa88d, 0xe83e, 0x3040, 0x16ea, 0x10f7, 0x1890, 0x1, 0x1);
        gbc.writeMem(0xa88d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe83e);
        EXPECT(gbc.pc(), 0xa88f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88d), 0xcb);
        EXPECT(gbc.readMem(0xa88e), 0x9);
        // CB 09 00E5
        gbc.setState(0x5904, 0x2be9, 0x7ae0, 0x7e67, 0xd129, 0x464d, 0x1, 0x1);
        gbc.writeMem(0x5904, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2be9);
        EXPECT(gbc.pc(), 0x5906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00E6
        gbc.setState(0x9299, 0x649, 0x1900, 0xd3b2, 0x5f17, 0xf2c9, 0x1, 0x1);
        gbc.writeMem(0x9299, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x649);
        EXPECT(gbc.pc(), 0x929b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9299), 0xcb);
        EXPECT(gbc.readMem(0x929a), 0x9);
        // CB 09 00E7
        gbc.setState(0x7863, 0x6605, 0xcb70, 0xb33f, 0x2acc, 0x687a, 0x0, 0x0);
        gbc.writeMem(0x7863, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6605);
        EXPECT(gbc.pc(), 0x7865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00E8
        gbc.setState(0x91cc, 0xb486, 0x75d0, 0x528c, 0xf98, 0xe8e1, 0x1, 0x0);
        gbc.writeMem(0x91cc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb486);
        EXPECT(gbc.pc(), 0x91ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91cc), 0xcb);
        EXPECT(gbc.readMem(0x91cd), 0x9);
        // CB 09 00E9
        gbc.setState(0x2616, 0x42ab, 0xeb10, 0xb7a3, 0x7329, 0xf22e, 0x0, 0x1);
        gbc.writeMem(0x2616, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x42ab);
        EXPECT(gbc.pc(), 0x2618);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00EA
        gbc.setState(0x5426, 0x8c62, 0xadc0, 0x6cb5, 0xfb41, 0x64bf, 0x0, 0x0);
        gbc.writeMem(0x5426, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8c62);
        EXPECT(gbc.pc(), 0x5428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00EB
        gbc.setState(0xdda4, 0xbde9, 0x86d0, 0x1b7b, 0xb883, 0xda2d, 0x0, 0x1);
        gbc.writeMem(0xdda4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xbde9);
        EXPECT(gbc.pc(), 0xdda6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdda4), 0xcb);
        EXPECT(gbc.readMem(0xdda5), 0x9);
        // CB 09 00EC
        gbc.setState(0xca0d, 0x5c2a, 0x7ef0, 0x3fa2, 0xdc0c, 0x8787, 0x0, 0x0);
        gbc.writeMem(0xca0d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5c2a);
        EXPECT(gbc.pc(), 0xca0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca0d), 0xcb);
        EXPECT(gbc.readMem(0xca0e), 0x9);
        // CB 09 00ED
        gbc.setState(0xe47, 0x555e, 0x7b80, 0xef5a, 0x8b10, 0xf4c7, 0x1, 0x0);
        gbc.writeMem(0xe47, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x555e);
        EXPECT(gbc.pc(), 0xe49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00EE
        gbc.setState(0xb4b0, 0x9f93, 0x2910, 0x65a3, 0x7ecd, 0x27e7, 0x0, 0x0);
        gbc.writeMem(0xb4b0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9f93);
        EXPECT(gbc.pc(), 0xb4b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b0), 0xcb);
        EXPECT(gbc.readMem(0xb4b1), 0x9);
        // CB 09 00EF
        gbc.setState(0x97b1, 0x5633, 0xf00, 0xea98, 0x7470, 0x7a1f, 0x0, 0x0);
        gbc.writeMem(0x97b1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5633);
        EXPECT(gbc.pc(), 0x97b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b1), 0xcb);
        EXPECT(gbc.readMem(0x97b2), 0x9);
        // CB 09 00F0
        gbc.setState(0x733b, 0x8430, 0x1b60, 0x26b2, 0xa052, 0x5c6b, 0x1, 0x0);
        gbc.writeMem(0x733b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8430);
        EXPECT(gbc.pc(), 0x733d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00F1
        gbc.setState(0xcd1b, 0x1114, 0xba80, 0x778, 0x6f68, 0x757f, 0x1, 0x0);
        gbc.writeMem(0xcd1b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1114);
        EXPECT(gbc.pc(), 0xcd1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd1b), 0xcb);
        EXPECT(gbc.readMem(0xcd1c), 0x9);
        // CB 09 00F2
        gbc.setState(0x7ad8, 0x19f1, 0x8280, 0xae98, 0x26b, 0x3e71, 0x1, 0x1);
        gbc.writeMem(0x7ad8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x19f1);
        EXPECT(gbc.pc(), 0x7ada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00F3
        gbc.setState(0xe20d, 0x5bcd, 0xa130, 0xb4db, 0xa91f, 0xb0ad, 0x0, 0x0);
        gbc.writeMem(0xe20d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5bcd);
        EXPECT(gbc.pc(), 0xe20f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe20d), 0xcb);
        EXPECT(gbc.readMem(0xe20e), 0x9);
        // CB 09 00F4
        gbc.setState(0x9608, 0xa7c9, 0xa1e0, 0x3c32, 0x6a3d, 0xee4e, 0x0, 0x0);
        gbc.writeMem(0x9608, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa7c9);
        EXPECT(gbc.pc(), 0x960a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9608), 0xcb);
        EXPECT(gbc.readMem(0x9609), 0x9);
        // CB 09 00F5
        gbc.setState(0x1cd8, 0x585e, 0xd5f0, 0x903f, 0x7bb5, 0xcf81, 0x1, 0x0);
        gbc.writeMem(0x1cd8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x585e);
        EXPECT(gbc.pc(), 0x1cda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00F6
        gbc.setState(0x4f0c, 0x80c3, 0x910, 0xb382, 0xd554, 0xa09d, 0x0, 0x1);
        gbc.writeMem(0x4f0c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x80c3);
        EXPECT(gbc.pc(), 0x4f0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00F7
        gbc.setState(0x1883, 0x8dc7, 0x3470, 0x953e, 0xdb46, 0x68c3, 0x0, 0x1);
        gbc.writeMem(0x1883, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8dc7);
        EXPECT(gbc.pc(), 0x1885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00F8
        gbc.setState(0xe04b, 0x54f7, 0xcff0, 0x6465, 0xae2d, 0xeb7f, 0x0, 0x0);
        gbc.writeMem(0xe04b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x54f7);
        EXPECT(gbc.pc(), 0xe04d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe04b), 0xcb);
        EXPECT(gbc.readMem(0xe04c), 0x9);
        // CB 09 00F9
        gbc.setState(0xae, 0xcf47, 0x2f50, 0x3ac9, 0x1348, 0xfee7, 0x0, 0x0);
        gbc.writeMem(0xae, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcf47);
        EXPECT(gbc.pc(), 0xb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00FA
        gbc.setState(0x5c1, 0x637d, 0xd3f0, 0xe1cf, 0x877c, 0x6055, 0x1, 0x1);
        gbc.writeMem(0x5c1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x637d);
        EXPECT(gbc.pc(), 0x5c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 00FB
        gbc.setState(0xbd61, 0xfa30, 0xd090, 0xc6fc, 0xa275, 0xb5e, 0x0, 0x0);
        gbc.writeMem(0xbd61, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xfa30);
        EXPECT(gbc.pc(), 0xbd63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd61), 0xcb);
        EXPECT(gbc.readMem(0xbd62), 0x9);
        // CB 09 00FC
        gbc.setState(0x8582, 0xf206, 0x42d0, 0x6580, 0x8d39, 0xde76, 0x0, 0x0);
        gbc.writeMem(0x8582, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf206);
        EXPECT(gbc.pc(), 0x8584);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8582), 0xcb);
        EXPECT(gbc.readMem(0x8583), 0x9);
        // CB 09 00FD
        gbc.setState(0x346d, 0xe36, 0xd420, 0xa0d4, 0x3958, 0x4ccd, 0x0, 0x0);
        gbc.writeMem(0x346d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe36);
        EXPECT(gbc.pc(), 0x346f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00FE
        gbc.setState(0x7dca, 0x9b74, 0xf9f0, 0x701c, 0x511d, 0xc310, 0x1, 0x1);
        gbc.writeMem(0x7dca, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9b74);
        EXPECT(gbc.pc(), 0x7dcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 00FF
        gbc.setState(0x3812, 0x8f8b, 0x1b30, 0x9ba1, 0x59ee, 0xdd79, 0x0, 0x1);
        gbc.writeMem(0x3812, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8f8b);
        EXPECT(gbc.pc(), 0x3814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0100
        gbc.setState(0xabfa, 0x5014, 0x52a0, 0x6d5d, 0x5fd6, 0x42f7, 0x1, 0x0);
        gbc.writeMem(0xabfa, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5014);
        EXPECT(gbc.pc(), 0xabfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabfa), 0xcb);
        EXPECT(gbc.readMem(0xabfb), 0x9);
        // CB 09 0101
        gbc.setState(0xa71, 0xe2e4, 0x52c0, 0x3eec, 0xca8e, 0xcad, 0x1, 0x1);
        gbc.writeMem(0xa71, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe2e4);
        EXPECT(gbc.pc(), 0xa73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0102
        gbc.setState(0x8c2c, 0xc2a3, 0x4740, 0x6caa, 0x2270, 0xd512, 0x1, 0x1);
        gbc.writeMem(0x8c2c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc2a3);
        EXPECT(gbc.pc(), 0x8c2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c2c), 0xcb);
        EXPECT(gbc.readMem(0x8c2d), 0x9);
        // CB 09 0103
        gbc.setState(0x362d, 0x1115, 0x4b40, 0xf017, 0x4f8a, 0xccdc, 0x0, 0x1);
        gbc.writeMem(0x362d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1115);
        EXPECT(gbc.pc(), 0x362f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0104
        gbc.setState(0x98f4, 0xca21, 0xdeb0, 0x4d35, 0xe0d2, 0xde28, 0x1, 0x1);
        gbc.writeMem(0x98f4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xca21);
        EXPECT(gbc.pc(), 0x98f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f4), 0xcb);
        EXPECT(gbc.readMem(0x98f5), 0x9);
        // CB 09 0105
        gbc.setState(0xc477, 0x37fe, 0x82a0, 0x5cb6, 0xdcba, 0x2d1a, 0x0, 0x0);
        gbc.writeMem(0xc477, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x37fe);
        EXPECT(gbc.pc(), 0xc479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc477), 0xcb);
        EXPECT(gbc.readMem(0xc478), 0x9);
        // CB 09 0106
        gbc.setState(0x1e3a, 0x1e70, 0x38f0, 0x52f6, 0x143d, 0x7851, 0x0, 0x0);
        gbc.writeMem(0x1e3a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1e70);
        EXPECT(gbc.pc(), 0x1e3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0108
        gbc.setState(0x88db, 0x44dc, 0x7e20, 0x9d8a, 0x17d6, 0x8924, 0x0, 0x0);
        gbc.writeMem(0x88db, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x44dc);
        EXPECT(gbc.pc(), 0x88dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88db), 0xcb);
        EXPECT(gbc.readMem(0x88dc), 0x9);
        // CB 09 0109
        gbc.setState(0x5264, 0xfd9, 0x68b0, 0x1d79, 0xf400, 0xd3ef, 0x1, 0x1);
        gbc.writeMem(0x5264, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xfd9);
        EXPECT(gbc.pc(), 0x5266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 010B
        gbc.setState(0xb1e9, 0xc024, 0x8170, 0x22da, 0xc7ad, 0x56a7, 0x1, 0x0);
        gbc.writeMem(0xb1e9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc024);
        EXPECT(gbc.pc(), 0xb1eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1e9), 0xcb);
        EXPECT(gbc.readMem(0xb1ea), 0x9);
        // CB 09 010C
        gbc.setState(0x23d0, 0x6f52, 0x51d0, 0xf810, 0x5e1a, 0x3672, 0x1, 0x1);
        gbc.writeMem(0x23d0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6f52);
        EXPECT(gbc.pc(), 0x23d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 010D
        gbc.setState(0xd1f3, 0xb6c8, 0xd690, 0xea93, 0x5c3e, 0xa44, 0x1, 0x1);
        gbc.writeMem(0xd1f3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb6c8);
        EXPECT(gbc.pc(), 0xd1f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1f3), 0xcb);
        EXPECT(gbc.readMem(0xd1f4), 0x9);
        // CB 09 010E
        gbc.setState(0xb3af, 0x8efe, 0x59a0, 0x8d83, 0x2332, 0x721, 0x1, 0x0);
        gbc.writeMem(0xb3af, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8efe);
        EXPECT(gbc.pc(), 0xb3b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3af), 0xcb);
        EXPECT(gbc.readMem(0xb3b0), 0x9);
        // CB 09 010F
        gbc.setState(0x46fb, 0x6429, 0xb850, 0x27e4, 0x6f62, 0x71fe, 0x0, 0x1);
        gbc.writeMem(0x46fb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6429);
        EXPECT(gbc.pc(), 0x46fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0110
        gbc.setState(0xad8c, 0xbaa0, 0xd720, 0x6adb, 0x7171, 0x2681, 0x0, 0x0);
        gbc.writeMem(0xad8c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xbaa0);
        EXPECT(gbc.pc(), 0xad8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad8c), 0xcb);
        EXPECT(gbc.readMem(0xad8d), 0x9);
        // CB 09 0111
        gbc.setState(0xb756, 0x3f26, 0x7f00, 0xea60, 0xeb64, 0x9fdc, 0x0, 0x1);
        gbc.writeMem(0xb756, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3f26);
        EXPECT(gbc.pc(), 0xb758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb756), 0xcb);
        EXPECT(gbc.readMem(0xb757), 0x9);
        // CB 09 0112
        gbc.setState(0x619b, 0xbba1, 0x8dd0, 0xd508, 0x9ee9, 0x2702, 0x0, 0x0);
        gbc.writeMem(0x619b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbba1);
        EXPECT(gbc.pc(), 0x619d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0113
        gbc.setState(0x640d, 0x2c90, 0x5730, 0x26eb, 0xa54e, 0xe323, 0x1, 0x0);
        gbc.writeMem(0x640d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2c90);
        EXPECT(gbc.pc(), 0x640f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0114
        gbc.setState(0xea4c, 0x6ca0, 0x5f70, 0xbb6f, 0x8b35, 0x13b9, 0x0, 0x1);
        gbc.writeMem(0xea4c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6ca0);
        EXPECT(gbc.pc(), 0xea4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea4c), 0xcb);
        EXPECT(gbc.readMem(0xea4d), 0x9);
        // CB 09 0115
        gbc.setState(0xc52c, 0x1f3b, 0xad00, 0x1b16, 0x2855, 0x46f9, 0x1, 0x0);
        gbc.writeMem(0xc52c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1f3b);
        EXPECT(gbc.pc(), 0xc52e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc52c), 0xcb);
        EXPECT(gbc.readMem(0xc52d), 0x9);
        // CB 09 0116
        gbc.setState(0x2f84, 0xee31, 0xf530, 0x3ed1, 0xc609, 0xbf33, 0x0, 0x1);
        gbc.writeMem(0x2f84, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xee31);
        EXPECT(gbc.pc(), 0x2f86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0117
        gbc.setState(0x8066, 0xbb47, 0xc180, 0xa2f3, 0x3ea1, 0x83c5, 0x0, 0x1);
        gbc.writeMem(0x8066, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xbb47);
        EXPECT(gbc.pc(), 0x8068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8066), 0xcb);
        EXPECT(gbc.readMem(0x8067), 0x9);
        // CB 09 0118
        gbc.setState(0x9dc6, 0x628d, 0x39d0, 0x42d1, 0x3885, 0x473a, 0x1, 0x1);
        gbc.writeMem(0x9dc6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x628d);
        EXPECT(gbc.pc(), 0x9dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc6), 0xcb);
        EXPECT(gbc.readMem(0x9dc7), 0x9);
        // CB 09 0119
        gbc.setState(0x68eb, 0xe147, 0xc1c0, 0x9f35, 0x76d5, 0xfca1, 0x0, 0x0);
        gbc.writeMem(0x68eb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe147);
        EXPECT(gbc.pc(), 0x68ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 011B
        gbc.setState(0x651d, 0x4338, 0x1e50, 0x47c2, 0x1b0b, 0x28f4, 0x1, 0x0);
        gbc.writeMem(0x651d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4338);
        EXPECT(gbc.pc(), 0x651f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 011C
        gbc.setState(0x4a32, 0x7ad, 0x6d20, 0x16bb, 0x647d, 0x52b9, 0x1, 0x1);
        gbc.writeMem(0x4a32, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7ad);
        EXPECT(gbc.pc(), 0x4a34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 011D
        gbc.setState(0x3e29, 0x7790, 0x330, 0x7230, 0x1456, 0x12df, 0x1, 0x1);
        gbc.writeMem(0x3e29, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7790);
        EXPECT(gbc.pc(), 0x3e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 011E
        gbc.setState(0x610c, 0x4be, 0x1d30, 0xdca, 0x8e0b, 0x6b03, 0x1, 0x1);
        gbc.writeMem(0x610c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4be);
        EXPECT(gbc.pc(), 0x610e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 011F
        gbc.setState(0x7064, 0x22e7, 0x79d0, 0x5b25, 0x708b, 0xf0a8, 0x0, 0x1);
        gbc.writeMem(0x7064, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x22e7);
        EXPECT(gbc.pc(), 0x7066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0120
        gbc.setState(0xed04, 0x9109, 0xbae0, 0x28cf, 0xa762, 0x67db, 0x1, 0x0);
        gbc.writeMem(0xed04, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9109);
        EXPECT(gbc.pc(), 0xed06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed04), 0xcb);
        EXPECT(gbc.readMem(0xed05), 0x9);
        // CB 09 0121
        gbc.setState(0x8c89, 0x757c, 0x22d0, 0x2269, 0x5cfd, 0x19d7, 0x0, 0x0);
        gbc.writeMem(0x8c89, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x757c);
        EXPECT(gbc.pc(), 0x8c8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c89), 0xcb);
        EXPECT(gbc.readMem(0x8c8a), 0x9);
        // CB 09 0122
        gbc.setState(0x3ae4, 0xaef5, 0xc50, 0xa645, 0xaaf5, 0x4969, 0x1, 0x0);
        gbc.writeMem(0x3ae4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xaef5);
        EXPECT(gbc.pc(), 0x3ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0123
        gbc.setState(0xc249, 0x619, 0xde60, 0xf5cf, 0xbeff, 0x5af7, 0x1, 0x0);
        gbc.writeMem(0xc249, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x619);
        EXPECT(gbc.pc(), 0xc24b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc249), 0xcb);
        EXPECT(gbc.readMem(0xc24a), 0x9);
        // CB 09 0124
        gbc.setState(0x39fd, 0x3550, 0xdb80, 0x806a, 0xf672, 0x52f8, 0x1, 0x1);
        gbc.writeMem(0x39fd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3550);
        EXPECT(gbc.pc(), 0x39ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0125
        gbc.setState(0xebfb, 0x6f12, 0xb950, 0x5d2f, 0x4ca2, 0x3517, 0x0, 0x0);
        gbc.writeMem(0xebfb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6f12);
        EXPECT(gbc.pc(), 0xebfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfb), 0xcb);
        EXPECT(gbc.readMem(0xebfc), 0x9);
        // CB 09 0126
        gbc.setState(0xb857, 0x37b9, 0xbab0, 0xee87, 0xc7f2, 0xd4b4, 0x1, 0x1);
        gbc.writeMem(0xb857, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x37b9);
        EXPECT(gbc.pc(), 0xb859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb857), 0xcb);
        EXPECT(gbc.readMem(0xb858), 0x9);
        // CB 09 0127
        gbc.setState(0x18e9, 0x53ad, 0xb440, 0xbc94, 0xdd76, 0xf9bf, 0x0, 0x1);
        gbc.writeMem(0x18e9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x53ad);
        EXPECT(gbc.pc(), 0x18eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0128
        gbc.setState(0x219, 0x2d16, 0xc330, 0xa84d, 0xa6fe, 0xec5e, 0x0, 0x1);
        gbc.writeMem(0x219, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2d16);
        EXPECT(gbc.pc(), 0x21b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0129
        gbc.setState(0x340f, 0xba85, 0x5290, 0x1cb8, 0x3bff, 0x4d7e, 0x1, 0x1);
        gbc.writeMem(0x340f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xba85);
        EXPECT(gbc.pc(), 0x3411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 012A
        gbc.setState(0x68bc, 0xc265, 0x63e0, 0x4691, 0x545a, 0x3cb5, 0x0, 0x0);
        gbc.writeMem(0x68bc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc265);
        EXPECT(gbc.pc(), 0x68be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 012B
        gbc.setState(0x3b3b, 0x72c2, 0x91a0, 0x3b4e, 0xabb2, 0x7f10, 0x1, 0x1);
        gbc.writeMem(0x3b3b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x72c2);
        EXPECT(gbc.pc(), 0x3b3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 012C
        gbc.setState(0xb67a, 0x4f95, 0x44f0, 0x6de2, 0xa9dc, 0x8acc, 0x0, 0x0);
        gbc.writeMem(0xb67a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4f95);
        EXPECT(gbc.pc(), 0xb67c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb67a), 0xcb);
        EXPECT(gbc.readMem(0xb67b), 0x9);
        // CB 09 012D
        gbc.setState(0x270, 0xf65, 0x56d0, 0xd47, 0x4d38, 0x9db0, 0x0, 0x1);
        gbc.writeMem(0x270, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf65);
        EXPECT(gbc.pc(), 0x272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 012E
        gbc.setState(0xdd45, 0x60a1, 0xfcd0, 0x5a95, 0x3156, 0xb9aa, 0x0, 0x1);
        gbc.writeMem(0xdd45, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x60a1);
        EXPECT(gbc.pc(), 0xdd47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd45), 0xcb);
        EXPECT(gbc.readMem(0xdd46), 0x9);
        // CB 09 012F
        gbc.setState(0xc767, 0x8ded, 0xb6a0, 0x4b5, 0xb0be, 0xee80, 0x0, 0x0);
        gbc.writeMem(0xc767, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8ded);
        EXPECT(gbc.pc(), 0xc769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc767), 0xcb);
        EXPECT(gbc.readMem(0xc768), 0x9);
        // CB 09 0130
        gbc.setState(0xa9d, 0xf8b3, 0x7170, 0xa26f, 0x3d2e, 0xd3f9, 0x0, 0x0);
        gbc.writeMem(0xa9d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf8b3);
        EXPECT(gbc.pc(), 0xa9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0132
        gbc.setState(0xe0da, 0xac6d, 0x5d90, 0xae6e, 0x461d, 0x6f69, 0x0, 0x1);
        gbc.writeMem(0xe0da, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xac6d);
        EXPECT(gbc.pc(), 0xe0dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0da), 0xcb);
        EXPECT(gbc.readMem(0xe0db), 0x9);
        // CB 09 0133
        gbc.setState(0x2b01, 0xd57, 0xb410, 0x43da, 0xc91c, 0xb5bf, 0x1, 0x0);
        gbc.writeMem(0x2b01, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd57);
        EXPECT(gbc.pc(), 0x2b03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0134
        gbc.setState(0xdd5b, 0x982a, 0x37b0, 0xffff, 0x45b0, 0x5d3f, 0x1, 0x1);
        gbc.writeMem(0xdd5b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x982a);
        EXPECT(gbc.pc(), 0xdd5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd5b), 0xcb);
        EXPECT(gbc.readMem(0xdd5c), 0x9);
        // CB 09 0135
        gbc.setState(0x946b, 0x85e9, 0x5ef0, 0x6624, 0x3eed, 0x48a, 0x0, 0x0);
        gbc.writeMem(0x946b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x85e9);
        EXPECT(gbc.pc(), 0x946d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x946b), 0xcb);
        EXPECT(gbc.readMem(0x946c), 0x9);
        // CB 09 0136
        gbc.setState(0x25af, 0x91c2, 0x8c60, 0x3e7f, 0x6094, 0x7189, 0x1, 0x1);
        gbc.writeMem(0x25af, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x91c2);
        EXPECT(gbc.pc(), 0x25b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0137
        gbc.setState(0x884b, 0x48d7, 0x3e90, 0xce, 0x1d7d, 0x9819, 0x1, 0x1);
        gbc.writeMem(0x884b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x48d7);
        EXPECT(gbc.pc(), 0x884d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x884b), 0xcb);
        EXPECT(gbc.readMem(0x884c), 0x9);
        // CB 09 0138
        gbc.setState(0x5abd, 0x75f4, 0xd2e0, 0x72c4, 0x57b3, 0x6389, 0x1, 0x1);
        gbc.writeMem(0x5abd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x75f4);
        EXPECT(gbc.pc(), 0x5abf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0139
        gbc.setState(0xc40d, 0x6c36, 0xbf60, 0x2167, 0x2fb5, 0xa5f5, 0x1, 0x1);
        gbc.writeMem(0xc40d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6c36);
        EXPECT(gbc.pc(), 0xc40f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc40d), 0xcb);
        EXPECT(gbc.readMem(0xc40e), 0x9);
        // CB 09 013A
        gbc.setState(0xa460, 0x9ac0, 0x67e0, 0xd172, 0x8a5e, 0xdaf6, 0x0, 0x0);
        gbc.writeMem(0xa460, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9ac0);
        EXPECT(gbc.pc(), 0xa462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa460), 0xcb);
        EXPECT(gbc.readMem(0xa461), 0x9);
        // CB 09 013B
        gbc.setState(0x48f7, 0x1025, 0xc70, 0x8148, 0x77c0, 0xddee, 0x1, 0x0);
        gbc.writeMem(0x48f7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1025);
        EXPECT(gbc.pc(), 0x48f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 013D
        gbc.setState(0xbf2b, 0x45d2, 0xff00, 0x7135, 0x104b, 0xd7ea, 0x0, 0x1);
        gbc.writeMem(0xbf2b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x45d2);
        EXPECT(gbc.pc(), 0xbf2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2b), 0xcb);
        EXPECT(gbc.readMem(0xbf2c), 0x9);
        // CB 09 013E
        gbc.setState(0x22a0, 0xae86, 0x8bd0, 0x4a75, 0xe719, 0x1f46, 0x0, 0x0);
        gbc.writeMem(0x22a0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xae86);
        EXPECT(gbc.pc(), 0x22a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 013F
        gbc.setState(0x5797, 0x4db2, 0x9ad0, 0xc53d, 0x5a1b, 0x38f0, 0x0, 0x1);
        gbc.writeMem(0x5797, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4db2);
        EXPECT(gbc.pc(), 0x5799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0140
        gbc.setState(0x8773, 0xa538, 0xc110, 0x5e86, 0xe179, 0xf88a, 0x0, 0x0);
        gbc.writeMem(0x8773, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa538);
        EXPECT(gbc.pc(), 0x8775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8773), 0xcb);
        EXPECT(gbc.readMem(0x8774), 0x9);
        // CB 09 0141
        gbc.setState(0xc346, 0xd3a2, 0x920, 0x6738, 0xed81, 0xb2e3, 0x0, 0x0);
        gbc.writeMem(0xc346, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd3a2);
        EXPECT(gbc.pc(), 0xc348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc346), 0xcb);
        EXPECT(gbc.readMem(0xc347), 0x9);
        // CB 09 0142
        gbc.setState(0x859e, 0xf264, 0x8fe0, 0xc81a, 0xa26e, 0xb9f1, 0x1, 0x0);
        gbc.writeMem(0x859e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf264);
        EXPECT(gbc.pc(), 0x85a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x859e), 0xcb);
        EXPECT(gbc.readMem(0x859f), 0x9);
        // CB 09 0143
        gbc.setState(0xe044, 0x4f56, 0xf070, 0x72f7, 0xeb02, 0xd467, 0x1, 0x0);
        gbc.writeMem(0xe044, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4f56);
        EXPECT(gbc.pc(), 0xe046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe044), 0xcb);
        EXPECT(gbc.readMem(0xe045), 0x9);
        // CB 09 0144
        gbc.setState(0x8265, 0xd68, 0x15d0, 0x8868, 0xaf7a, 0x8f5e, 0x0, 0x1);
        gbc.writeMem(0x8265, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd68);
        EXPECT(gbc.pc(), 0x8267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8265), 0xcb);
        EXPECT(gbc.readMem(0x8266), 0x9);
        // CB 09 0145
        gbc.setState(0x1b6e, 0xd198, 0xbbe0, 0x361d, 0xab7c, 0x6ffb, 0x1, 0x1);
        gbc.writeMem(0x1b6e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd198);
        EXPECT(gbc.pc(), 0x1b70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0146
        gbc.setState(0x79d9, 0x9531, 0x9610, 0x1d2b, 0x1477, 0x3c15, 0x1, 0x1);
        gbc.writeMem(0x79d9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9531);
        EXPECT(gbc.pc(), 0x79db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0147
        gbc.setState(0x32a2, 0x7cee, 0x33a0, 0x910d, 0xefc5, 0x5776, 0x0, 0x0);
        gbc.writeMem(0x32a2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7cee);
        EXPECT(gbc.pc(), 0x32a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0148
        gbc.setState(0x9600, 0x2ef8, 0x2810, 0x2566, 0x967c, 0x8545, 0x0, 0x1);
        gbc.writeMem(0x9600, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2ef8);
        EXPECT(gbc.pc(), 0x9602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9600), 0xcb);
        EXPECT(gbc.readMem(0x9601), 0x9);
        // CB 09 0149
        gbc.setState(0xc94e, 0x7ffe, 0x7f0, 0x8f5b, 0x8b3c, 0xd7a0, 0x1, 0x0);
        gbc.writeMem(0xc94e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7ffe);
        EXPECT(gbc.pc(), 0xc950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc94e), 0xcb);
        EXPECT(gbc.readMem(0xc94f), 0x9);
        // CB 09 014A
        gbc.setState(0x41e8, 0x2ea9, 0xae10, 0x6bac, 0xda48, 0x724a, 0x1, 0x1);
        gbc.writeMem(0x41e8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2ea9);
        EXPECT(gbc.pc(), 0x41ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 014B
        gbc.setState(0xaf96, 0x1ed4, 0x9e10, 0xdaf1, 0xd1e1, 0xed5c, 0x0, 0x1);
        gbc.writeMem(0xaf96, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1ed4);
        EXPECT(gbc.pc(), 0xaf98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf96), 0xcb);
        EXPECT(gbc.readMem(0xaf97), 0x9);
        // CB 09 014C
        gbc.setState(0x3d4c, 0xbfd6, 0x7630, 0x8959, 0xa396, 0x9bda, 0x1, 0x0);
        gbc.writeMem(0x3d4c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xbfd6);
        EXPECT(gbc.pc(), 0x3d4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 014D
        gbc.setState(0x54a0, 0xa604, 0xd3c0, 0x26a, 0xc8cf, 0x386c, 0x0, 0x0);
        gbc.writeMem(0x54a0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa604);
        EXPECT(gbc.pc(), 0x54a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 014E
        gbc.setState(0x7b60, 0xf211, 0x4130, 0x9931, 0x4b0f, 0xd444, 0x1, 0x1);
        gbc.writeMem(0x7b60, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf211);
        EXPECT(gbc.pc(), 0x7b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0150
        gbc.setState(0x8721, 0x91a5, 0x4590, 0xe70a, 0xd1a1, 0x90b5, 0x1, 0x0);
        gbc.writeMem(0x8721, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x91a5);
        EXPECT(gbc.pc(), 0x8723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8721), 0xcb);
        EXPECT(gbc.readMem(0x8722), 0x9);
        // CB 09 0151
        gbc.setState(0x1bb1, 0xa39c, 0x4e80, 0xe80b, 0xaf6e, 0x8aa3, 0x0, 0x1);
        gbc.writeMem(0x1bb1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa39c);
        EXPECT(gbc.pc(), 0x1bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0152
        gbc.setState(0x8400, 0x75b3, 0xb0e0, 0x2826, 0xd23b, 0xfae9, 0x1, 0x1);
        gbc.writeMem(0x8400, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x75b3);
        EXPECT(gbc.pc(), 0x8402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8400), 0xcb);
        EXPECT(gbc.readMem(0x8401), 0x9);
        // CB 09 0153
        gbc.setState(0xdfb8, 0x4cfe, 0xb4a0, 0x9e93, 0xbc27, 0x7b90, 0x0, 0x0);
        gbc.writeMem(0xdfb8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4cfe);
        EXPECT(gbc.pc(), 0xdfba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfb8), 0xcb);
        EXPECT(gbc.readMem(0xdfb9), 0x9);
        // CB 09 0154
        gbc.setState(0x89a8, 0xdb33, 0x5050, 0x8aa, 0x68a3, 0x7da1, 0x0, 0x1);
        gbc.writeMem(0x89a8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xdb33);
        EXPECT(gbc.pc(), 0x89aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a8), 0xcb);
        EXPECT(gbc.readMem(0x89a9), 0x9);
        // CB 09 0155
        gbc.setState(0x8216, 0x3737, 0x98c0, 0x5505, 0x5814, 0x4106, 0x1, 0x0);
        gbc.writeMem(0x8216, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3737);
        EXPECT(gbc.pc(), 0x8218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8216), 0xcb);
        EXPECT(gbc.readMem(0x8217), 0x9);
        // CB 09 0156
        gbc.setState(0xb964, 0xf4c9, 0x6af0, 0x5603, 0xb57c, 0x2576, 0x0, 0x0);
        gbc.writeMem(0xb964, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf4c9);
        EXPECT(gbc.pc(), 0xb966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb964), 0xcb);
        EXPECT(gbc.readMem(0xb965), 0x9);
        // CB 09 0157
        gbc.setState(0x7d61, 0x6144, 0x5690, 0x7c35, 0xe74f, 0xc2f5, 0x0, 0x0);
        gbc.writeMem(0x7d61, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6144);
        EXPECT(gbc.pc(), 0x7d63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0158
        gbc.setState(0xefd7, 0x6920, 0x9ee0, 0x2e1, 0xe605, 0x6957, 0x1, 0x0);
        gbc.writeMem(0xefd7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6920);
        EXPECT(gbc.pc(), 0xefd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd7), 0xcb);
        EXPECT(gbc.readMem(0xefd8), 0x9);
        // CB 09 0159
        gbc.setState(0xc9c0, 0xbe41, 0x5d30, 0x74bf, 0xe1ce, 0x8, 0x1, 0x0);
        gbc.writeMem(0xc9c0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xbe41);
        EXPECT(gbc.pc(), 0xc9c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c0), 0xcb);
        EXPECT(gbc.readMem(0xc9c1), 0x9);
        // CB 09 015A
        gbc.setState(0x17d7, 0x6639, 0x4530, 0x4305, 0x6b04, 0xea64, 0x0, 0x0);
        gbc.writeMem(0x17d7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6639);
        EXPECT(gbc.pc(), 0x17d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 015B
        gbc.setState(0x265d, 0x36e8, 0x5b40, 0x2289, 0x6a08, 0xe2e2, 0x0, 0x1);
        gbc.writeMem(0x265d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x36e8);
        EXPECT(gbc.pc(), 0x265f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 015C
        gbc.setState(0x40cb, 0x2591, 0x2270, 0x6067, 0xc4f6, 0xfed2, 0x1, 0x1);
        gbc.writeMem(0x40cb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2591);
        EXPECT(gbc.pc(), 0x40cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 015D
        gbc.setState(0x18cc, 0xc7b0, 0xe3f0, 0xf13f, 0x12da, 0x5af5, 0x0, 0x0);
        gbc.writeMem(0x18cc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc7b0);
        EXPECT(gbc.pc(), 0x18ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 015E
        gbc.setState(0xd706, 0x6a61, 0xc340, 0x37e2, 0x505a, 0x9bf7, 0x1, 0x0);
        gbc.writeMem(0xd706, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6a61);
        EXPECT(gbc.pc(), 0xd708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd706), 0xcb);
        EXPECT(gbc.readMem(0xd707), 0x9);
        // CB 09 015F
        gbc.setState(0x4914, 0xc378, 0x8380, 0xe9b0, 0x9e5a, 0x88b3, 0x1, 0x1);
        gbc.writeMem(0x4914, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc378);
        EXPECT(gbc.pc(), 0x4916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0160
        gbc.setState(0x79de, 0xdfbc, 0x83d0, 0xa2c, 0xabfd, 0xceda, 0x1, 0x0);
        gbc.writeMem(0x79de, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xdfbc);
        EXPECT(gbc.pc(), 0x79e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0161
        gbc.setState(0x6dab, 0x3529, 0xb360, 0xfc03, 0xb93, 0x65e2, 0x0, 0x1);
        gbc.writeMem(0x6dab, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3529);
        EXPECT(gbc.pc(), 0x6dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0162
        gbc.setState(0x699, 0x29eb, 0xb020, 0x7a93, 0x64c5, 0xa2c3, 0x1, 0x0);
        gbc.writeMem(0x699, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x29eb);
        EXPECT(gbc.pc(), 0x69b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0163
        gbc.setState(0x783c, 0xb402, 0xabb0, 0x4c18, 0xdedc, 0xd270, 0x1, 0x0);
        gbc.writeMem(0x783c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb402);
        EXPECT(gbc.pc(), 0x783e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0164
        gbc.setState(0x77b, 0xffe, 0x8c80, 0xacfb, 0x165f, 0x5bdc, 0x1, 0x1);
        gbc.writeMem(0x77b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xffe);
        EXPECT(gbc.pc(), 0x77d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0165
        gbc.setState(0x5197, 0xe725, 0x5b20, 0xfa59, 0xdce6, 0x2c01, 0x1, 0x0);
        gbc.writeMem(0x5197, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe725);
        EXPECT(gbc.pc(), 0x5199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0166
        gbc.setState(0x9669, 0x17ea, 0x8c40, 0x5957, 0x5e3a, 0x30bb, 0x0, 0x1);
        gbc.writeMem(0x9669, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x17ea);
        EXPECT(gbc.pc(), 0x966b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9669), 0xcb);
        EXPECT(gbc.readMem(0x966a), 0x9);
        // CB 09 0167
        gbc.setState(0x4e71, 0xd02e, 0xb370, 0x74f1, 0xd7b5, 0x8d5a, 0x1, 0x1);
        gbc.writeMem(0x4e71, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd02e);
        EXPECT(gbc.pc(), 0x4e73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0168
        gbc.setState(0x51c4, 0xb154, 0x7140, 0xbaa4, 0xa08a, 0x94fa, 0x1, 0x1);
        gbc.writeMem(0x51c4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb154);
        EXPECT(gbc.pc(), 0x51c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0169
        gbc.setState(0xe559, 0x4216, 0xf8c0, 0xa061, 0xfb05, 0xd842, 0x0, 0x0);
        gbc.writeMem(0xe559, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4216);
        EXPECT(gbc.pc(), 0xe55b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe559), 0xcb);
        EXPECT(gbc.readMem(0xe55a), 0x9);
        // CB 09 016A
        gbc.setState(0xabe2, 0x5d0b, 0x4140, 0x3cfd, 0x9a96, 0xdd39, 0x0, 0x1);
        gbc.writeMem(0xabe2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5d0b);
        EXPECT(gbc.pc(), 0xabe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabe2), 0xcb);
        EXPECT(gbc.readMem(0xabe3), 0x9);
        // CB 09 016B
        gbc.setState(0xa717, 0x2054, 0xb120, 0xe5f7, 0x4303, 0x2f39, 0x1, 0x0);
        gbc.writeMem(0xa717, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2054);
        EXPECT(gbc.pc(), 0xa719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa717), 0xcb);
        EXPECT(gbc.readMem(0xa718), 0x9);
        // CB 09 016C
        gbc.setState(0x654d, 0x7bf7, 0xdf80, 0x6159, 0x78a5, 0x8b96, 0x1, 0x1);
        gbc.writeMem(0x654d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7bf7);
        EXPECT(gbc.pc(), 0x654f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 016D
        gbc.setState(0x7a6a, 0x466a, 0x8de0, 0x53cf, 0x32f, 0xb2d1, 0x0, 0x1);
        gbc.writeMem(0x7a6a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x466a);
        EXPECT(gbc.pc(), 0x7a6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 016E
        gbc.setState(0x9693, 0x53bf, 0x7640, 0xa049, 0x1aeb, 0x6d1c, 0x1, 0x1);
        gbc.writeMem(0x9693, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x53bf);
        EXPECT(gbc.pc(), 0x9695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9693), 0xcb);
        EXPECT(gbc.readMem(0x9694), 0x9);
        // CB 09 0170
        gbc.setState(0x3c75, 0xa20f, 0xb230, 0x85d5, 0xf030, 0x1b68, 0x0, 0x0);
        gbc.writeMem(0x3c75, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa20f);
        EXPECT(gbc.pc(), 0x3c77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0171
        gbc.setState(0xef16, 0xad3b, 0xa630, 0x4454, 0x453d, 0x94b7, 0x0, 0x1);
        gbc.writeMem(0xef16, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xad3b);
        EXPECT(gbc.pc(), 0xef18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef16), 0xcb);
        EXPECT(gbc.readMem(0xef17), 0x9);
        // CB 09 0172
        gbc.setState(0x8ac0, 0xc250, 0x7f80, 0x2ce, 0x5d8, 0xe24, 0x1, 0x0);
        gbc.writeMem(0x8ac0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc250);
        EXPECT(gbc.pc(), 0x8ac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac0), 0xcb);
        EXPECT(gbc.readMem(0x8ac1), 0x9);
        // CB 09 0173
        gbc.setState(0x3f74, 0x84bd, 0xe780, 0x81a4, 0x2598, 0x9ab9, 0x1, 0x1);
        gbc.writeMem(0x3f74, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x84bd);
        EXPECT(gbc.pc(), 0x3f76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0174
        gbc.setState(0xece4, 0xd14f, 0x93c0, 0xe49c, 0x314c, 0xc0c6, 0x1, 0x0);
        gbc.writeMem(0xece4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd14f);
        EXPECT(gbc.pc(), 0xece6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece4), 0xcb);
        EXPECT(gbc.readMem(0xece5), 0x9);
        // CB 09 0176
        gbc.setState(0x56bc, 0xfb55, 0x8bd0, 0x93cf, 0xb562, 0xab5a, 0x0, 0x0);
        gbc.writeMem(0x56bc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfb55);
        EXPECT(gbc.pc(), 0x56be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0177
        gbc.setState(0xd69f, 0x7553, 0xc510, 0xb795, 0xc304, 0x7ce1, 0x0, 0x1);
        gbc.writeMem(0xd69f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7553);
        EXPECT(gbc.pc(), 0xd6a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd69f), 0xcb);
        EXPECT(gbc.readMem(0xd6a0), 0x9);
        // CB 09 0178
        gbc.setState(0x638f, 0x25de, 0x5f00, 0x6d1d, 0xc861, 0xc9f8, 0x1, 0x0);
        gbc.writeMem(0x638f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x25de);
        EXPECT(gbc.pc(), 0x6391);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0179
        gbc.setState(0x88f7, 0x68d2, 0xa990, 0x8f5, 0x16b, 0xca2c, 0x0, 0x0);
        gbc.writeMem(0x88f7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x68d2);
        EXPECT(gbc.pc(), 0x88f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88f7), 0xcb);
        EXPECT(gbc.readMem(0x88f8), 0x9);
        // CB 09 017A
        gbc.setState(0xd3ee, 0xc768, 0x68c0, 0xc1b8, 0x9c1f, 0xc63, 0x1, 0x1);
        gbc.writeMem(0xd3ee, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc768);
        EXPECT(gbc.pc(), 0xd3f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ee), 0xcb);
        EXPECT(gbc.readMem(0xd3ef), 0x9);
        // CB 09 017B
        gbc.setState(0xd430, 0x92e1, 0xf5b0, 0x9191, 0xf8b3, 0xf96, 0x0, 0x0);
        gbc.writeMem(0xd430, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x92e1);
        EXPECT(gbc.pc(), 0xd432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd430), 0xcb);
        EXPECT(gbc.readMem(0xd431), 0x9);
        // CB 09 017C
        gbc.setState(0x4841, 0x6bb3, 0xf530, 0xa176, 0xa54a, 0x27cb, 0x1, 0x1);
        gbc.writeMem(0x4841, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6bb3);
        EXPECT(gbc.pc(), 0x4843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 017D
        gbc.setState(0x7adc, 0x9931, 0xbbe0, 0xdb1, 0xc251, 0x2698, 0x0, 0x0);
        gbc.writeMem(0x7adc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9931);
        EXPECT(gbc.pc(), 0x7ade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 017E
        gbc.setState(0xeb8f, 0xc43b, 0x8660, 0x6557, 0x48a8, 0x6302, 0x1, 0x0);
        gbc.writeMem(0xeb8f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc43b);
        EXPECT(gbc.pc(), 0xeb91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb8f), 0xcb);
        EXPECT(gbc.readMem(0xeb90), 0x9);
        // CB 09 017F
        gbc.setState(0x79e5, 0x2a66, 0xb7b0, 0x3a2d, 0xadbf, 0x6452, 0x0, 0x0);
        gbc.writeMem(0x79e5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2a66);
        EXPECT(gbc.pc(), 0x79e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0180
        gbc.setState(0xe744, 0x7d77, 0x7dd0, 0x3162, 0xdeb6, 0x4319, 0x1, 0x1);
        gbc.writeMem(0xe744, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7d77);
        EXPECT(gbc.pc(), 0xe746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe744), 0xcb);
        EXPECT(gbc.readMem(0xe745), 0x9);
        // CB 09 0181
        gbc.setState(0xd328, 0x8883, 0x5910, 0xe5c6, 0xdda6, 0x238f, 0x0, 0x0);
        gbc.writeMem(0xd328, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8883);
        EXPECT(gbc.pc(), 0xd32a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd328), 0xcb);
        EXPECT(gbc.readMem(0xd329), 0x9);
        // CB 09 0182
        gbc.setState(0x1f35, 0x6add, 0xdcf0, 0x313, 0xfae6, 0x744b, 0x0, 0x0);
        gbc.writeMem(0x1f35, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6add);
        EXPECT(gbc.pc(), 0x1f37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0183
        gbc.setState(0xe10, 0x8c60, 0xa3e0, 0xd74f, 0x8829, 0xd1c2, 0x1, 0x0);
        gbc.writeMem(0xe10, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8c60);
        EXPECT(gbc.pc(), 0xe12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0184
        gbc.setState(0x610f, 0xfbf1, 0x8dc0, 0x3526, 0x97c, 0xb677, 0x0, 0x0);
        gbc.writeMem(0x610f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xfbf1);
        EXPECT(gbc.pc(), 0x6111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0185
        gbc.setState(0x9b83, 0xdb71, 0x3400, 0x8fa6, 0xf424, 0x3eaa, 0x0, 0x0);
        gbc.writeMem(0x9b83, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xdb71);
        EXPECT(gbc.pc(), 0x9b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b83), 0xcb);
        EXPECT(gbc.readMem(0x9b84), 0x9);
        // CB 09 0186
        gbc.setState(0x6354, 0xbcc1, 0x9410, 0xaaf3, 0xb90b, 0x7efb, 0x1, 0x1);
        gbc.writeMem(0x6354, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbcc1);
        EXPECT(gbc.pc(), 0x6356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0187
        gbc.setState(0x267f, 0x15cd, 0x34d0, 0x9bed, 0x9b93, 0xf2b7, 0x0, 0x1);
        gbc.writeMem(0x267f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x15cd);
        EXPECT(gbc.pc(), 0x2681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0188
        gbc.setState(0x5b14, 0x681e, 0xe890, 0x4465, 0x756d, 0xce5f, 0x0, 0x1);
        gbc.writeMem(0x5b14, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x681e);
        EXPECT(gbc.pc(), 0x5b16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0189
        gbc.setState(0x41b0, 0x58d3, 0xe060, 0x4caa, 0xe630, 0x4261, 0x0, 0x1);
        gbc.writeMem(0x41b0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x58d3);
        EXPECT(gbc.pc(), 0x41b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 018A
        gbc.setState(0xaecd, 0xa86e, 0xa700, 0xd3f3, 0x7e28, 0x3720, 0x0, 0x1);
        gbc.writeMem(0xaecd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa86e);
        EXPECT(gbc.pc(), 0xaecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaecd), 0xcb);
        EXPECT(gbc.readMem(0xaece), 0x9);
        // CB 09 018B
        gbc.setState(0x3f87, 0xa19f, 0x6050, 0x8149, 0x782b, 0x6e8, 0x1, 0x0);
        gbc.writeMem(0x3f87, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa19f);
        EXPECT(gbc.pc(), 0x3f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 018C
        gbc.setState(0x6126, 0xcce0, 0xcb10, 0xaf38, 0xc3b, 0xd602, 0x0, 0x1);
        gbc.writeMem(0x6126, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcce0);
        EXPECT(gbc.pc(), 0x6128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 018D
        gbc.setState(0xbd3d, 0xc588, 0x7d00, 0x56bc, 0x19ec, 0xe84f, 0x0, 0x0);
        gbc.writeMem(0xbd3d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc588);
        EXPECT(gbc.pc(), 0xbd3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd3d), 0xcb);
        EXPECT(gbc.readMem(0xbd3e), 0x9);
        // CB 09 018E
        gbc.setState(0x4f96, 0x9e, 0x2bf0, 0xc3a4, 0x4a02, 0x1344, 0x0, 0x0);
        gbc.writeMem(0x4f96, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9e);
        EXPECT(gbc.pc(), 0x4f98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 018F
        gbc.setState(0xe9a9, 0x45df, 0x89f0, 0x45a9, 0xac8b, 0x3a0b, 0x0, 0x0);
        gbc.writeMem(0xe9a9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x45df);
        EXPECT(gbc.pc(), 0xe9ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9a9), 0xcb);
        EXPECT(gbc.readMem(0xe9aa), 0x9);
        // CB 09 0190
        gbc.setState(0x6161, 0x339b, 0xd090, 0xf888, 0x1df, 0x87d2, 0x0, 0x1);
        gbc.writeMem(0x6161, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x339b);
        EXPECT(gbc.pc(), 0x6163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0191
        gbc.setState(0xde6d, 0xcd22, 0xe9f0, 0x266e, 0x18c6, 0x709c, 0x0, 0x0);
        gbc.writeMem(0xde6d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xcd22);
        EXPECT(gbc.pc(), 0xde6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde6d), 0xcb);
        EXPECT(gbc.readMem(0xde6e), 0x9);
        // CB 09 0192
        gbc.setState(0x7931, 0xf9d4, 0x2150, 0xcf9f, 0xb792, 0xb2d7, 0x1, 0x1);
        gbc.writeMem(0x7931, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf9d4);
        EXPECT(gbc.pc(), 0x7933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0193
        gbc.setState(0x1143, 0xef4b, 0xac50, 0x8870, 0x2431, 0xcfb6, 0x0, 0x1);
        gbc.writeMem(0x1143, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xef4b);
        EXPECT(gbc.pc(), 0x1145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0194
        gbc.setState(0xed2e, 0xbcab, 0xbb0, 0x5d3b, 0x3d2a, 0x445b, 0x1, 0x1);
        gbc.writeMem(0xed2e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xbcab);
        EXPECT(gbc.pc(), 0xed30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed2e), 0xcb);
        EXPECT(gbc.readMem(0xed2f), 0x9);
        // CB 09 0195
        gbc.setState(0xc5c, 0x52be, 0xb7a0, 0xed18, 0xa742, 0x77d8, 0x0, 0x0);
        gbc.writeMem(0xc5c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x52be);
        EXPECT(gbc.pc(), 0xc5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0196
        gbc.setState(0x6bb9, 0xa237, 0x7d50, 0xf2a2, 0xe628, 0xbf81, 0x1, 0x1);
        gbc.writeMem(0x6bb9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa237);
        EXPECT(gbc.pc(), 0x6bbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0197
        gbc.setState(0x752, 0x702, 0x5190, 0x5931, 0xb, 0x190f, 0x1, 0x1);
        gbc.writeMem(0x752, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x702);
        EXPECT(gbc.pc(), 0x754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0198
        gbc.setState(0x6d25, 0x376b, 0x3a20, 0xe0a5, 0xea41, 0x32fc, 0x0, 0x1);
        gbc.writeMem(0x6d25, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x376b);
        EXPECT(gbc.pc(), 0x6d27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0199
        gbc.setState(0x33f5, 0xe648, 0x1a10, 0x89c1, 0xf52b, 0xe49d, 0x1, 0x1);
        gbc.writeMem(0x33f5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe648);
        EXPECT(gbc.pc(), 0x33f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 019A
        gbc.setState(0x475b, 0x5335, 0xf550, 0xf3e0, 0xfc72, 0x53db, 0x0, 0x1);
        gbc.writeMem(0x475b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5335);
        EXPECT(gbc.pc(), 0x475d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 019C
        gbc.setState(0x379e, 0x65df, 0xedb0, 0xcc3e, 0xdb7d, 0xd7b2, 0x1, 0x1);
        gbc.writeMem(0x379e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x65df);
        EXPECT(gbc.pc(), 0x37a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 019D
        gbc.setState(0x8176, 0x884d, 0x73d0, 0x8d21, 0x1ef8, 0xd982, 0x0, 0x1);
        gbc.writeMem(0x8176, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x884d);
        EXPECT(gbc.pc(), 0x8178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8176), 0xcb);
        EXPECT(gbc.readMem(0x8177), 0x9);
        // CB 09 019E
        gbc.setState(0xef27, 0x1df6, 0x83c0, 0xa761, 0x4507, 0xc03c, 0x1, 0x1);
        gbc.writeMem(0xef27, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1df6);
        EXPECT(gbc.pc(), 0xef29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef27), 0xcb);
        EXPECT(gbc.readMem(0xef28), 0x9);
        // CB 09 019F
        gbc.setState(0xbde0, 0x8a6, 0xb6c0, 0x585a, 0x23a4, 0x7e27, 0x0, 0x1);
        gbc.writeMem(0xbde0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8a6);
        EXPECT(gbc.pc(), 0xbde2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde0), 0xcb);
        EXPECT(gbc.readMem(0xbde1), 0x9);
        // CB 09 01A0
        gbc.setState(0x44cc, 0x84ef, 0x780, 0xbb97, 0x2aa7, 0x4be, 0x0, 0x0);
        gbc.writeMem(0x44cc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x84ef);
        EXPECT(gbc.pc(), 0x44ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01A1
        gbc.setState(0xa5c5, 0x402d, 0xda60, 0x5b7a, 0x2bf0, 0xd501, 0x1, 0x1);
        gbc.writeMem(0xa5c5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x402d);
        EXPECT(gbc.pc(), 0xa5c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c5), 0xcb);
        EXPECT(gbc.readMem(0xa5c6), 0x9);
        // CB 09 01A2
        gbc.setState(0x2150, 0x8665, 0x8f10, 0x2c2d, 0x4edb, 0x2273, 0x1, 0x1);
        gbc.writeMem(0x2150, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8665);
        EXPECT(gbc.pc(), 0x2152);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01A3
        gbc.setState(0xde17, 0x9f39, 0x990, 0x88c9, 0x4ab6, 0xf5a, 0x1, 0x1);
        gbc.writeMem(0xde17, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9f39);
        EXPECT(gbc.pc(), 0xde19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde17), 0xcb);
        EXPECT(gbc.readMem(0xde18), 0x9);
        // CB 09 01A4
        gbc.setState(0xa8c9, 0xec4e, 0x58e0, 0xc927, 0xf883, 0xfb1e, 0x0, 0x0);
        gbc.writeMem(0xa8c9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xec4e);
        EXPECT(gbc.pc(), 0xa8cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c9), 0xcb);
        EXPECT(gbc.readMem(0xa8ca), 0x9);
        // CB 09 01A5
        gbc.setState(0x8516, 0x9661, 0xbaf0, 0x2ef4, 0xa380, 0x4352, 0x1, 0x1);
        gbc.writeMem(0x8516, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9661);
        EXPECT(gbc.pc(), 0x8518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8516), 0xcb);
        EXPECT(gbc.readMem(0x8517), 0x9);
        // CB 09 01A6
        gbc.setState(0x361, 0x314b, 0x1a40, 0x20c2, 0x3924, 0x58b4, 0x0, 0x1);
        gbc.writeMem(0x361, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x314b);
        EXPECT(gbc.pc(), 0x363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01A7
        gbc.setState(0x43f0, 0x5714, 0x61b0, 0xde60, 0x25b7, 0xb140, 0x1, 0x0);
        gbc.writeMem(0x43f0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5714);
        EXPECT(gbc.pc(), 0x43f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01A8
        gbc.setState(0x8f5d, 0x8ab, 0x26d0, 0xa773, 0x7130, 0x8a59, 0x1, 0x0);
        gbc.writeMem(0x8f5d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8ab);
        EXPECT(gbc.pc(), 0x8f5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f5d), 0xcb);
        EXPECT(gbc.readMem(0x8f5e), 0x9);
        // CB 09 01A9
        gbc.setState(0xe87d, 0xe941, 0x35a0, 0x1e11, 0x94e7, 0xfee0, 0x0, 0x0);
        gbc.writeMem(0xe87d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe941);
        EXPECT(gbc.pc(), 0xe87f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe87d), 0xcb);
        EXPECT(gbc.readMem(0xe87e), 0x9);
        // CB 09 01AA
        gbc.setState(0x2063, 0x28fc, 0xcb00, 0x3cd4, 0xf083, 0xc5bd, 0x1, 0x1);
        gbc.writeMem(0x2063, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x28fc);
        EXPECT(gbc.pc(), 0x2065);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01AB
        gbc.setState(0xa95c, 0xf622, 0x9300, 0x3b87, 0x26cd, 0xc4b3, 0x0, 0x0);
        gbc.writeMem(0xa95c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf622);
        EXPECT(gbc.pc(), 0xa95e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa95c), 0xcb);
        EXPECT(gbc.readMem(0xa95d), 0x9);
        // CB 09 01AC
        gbc.setState(0x6235, 0x7f7, 0x7970, 0x4d95, 0x4a86, 0x10e4, 0x0, 0x0);
        gbc.writeMem(0x6235, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7f7);
        EXPECT(gbc.pc(), 0x6237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01AD
        gbc.setState(0x6824, 0x3810, 0x73c0, 0xd993, 0x66b1, 0x5f99, 0x1, 0x1);
        gbc.writeMem(0x6824, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3810);
        EXPECT(gbc.pc(), 0x6826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01AE
        gbc.setState(0x41c8, 0xfec0, 0x6810, 0x895e, 0x5928, 0xd924, 0x1, 0x0);
        gbc.writeMem(0x41c8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xfec0);
        EXPECT(gbc.pc(), 0x41ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01AF
        gbc.setState(0x2574, 0x6d38, 0x7980, 0xa34d, 0xd77b, 0x12e9, 0x0, 0x0);
        gbc.writeMem(0x2574, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6d38);
        EXPECT(gbc.pc(), 0x2576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01B0
        gbc.setState(0x48dd, 0x727d, 0x4f50, 0x73c4, 0x64f9, 0x91ff, 0x1, 0x1);
        gbc.writeMem(0x48dd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x727d);
        EXPECT(gbc.pc(), 0x48df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01B1
        gbc.setState(0x52a9, 0x4bde, 0xb4c0, 0xd4cd, 0x5f43, 0x392b, 0x1, 0x1);
        gbc.writeMem(0x52a9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4bde);
        EXPECT(gbc.pc(), 0x52ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01B2
        gbc.setState(0x25df, 0x9baf, 0xa200, 0x8acc, 0x91d1, 0x4365, 0x0, 0x1);
        gbc.writeMem(0x25df, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9baf);
        EXPECT(gbc.pc(), 0x25e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01B3
        gbc.setState(0x458d, 0x9ce5, 0x5ed0, 0x5109, 0x868d, 0x8a45, 0x0, 0x0);
        gbc.writeMem(0x458d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9ce5);
        EXPECT(gbc.pc(), 0x458f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01B4
        gbc.setState(0x671c, 0x79ee, 0xbdb0, 0x17a5, 0xb7b5, 0x4528, 0x1, 0x0);
        gbc.writeMem(0x671c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x79ee);
        EXPECT(gbc.pc(), 0x671e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01B5
        gbc.setState(0xb497, 0x54cc, 0x4ac0, 0xc2c1, 0x80d1, 0x17dd, 0x0, 0x0);
        gbc.writeMem(0xb497, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x54cc);
        EXPECT(gbc.pc(), 0xb499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb497), 0xcb);
        EXPECT(gbc.readMem(0xb498), 0x9);
        // CB 09 01B7
        gbc.setState(0x14b2, 0xae09, 0x2270, 0x4ac6, 0x83f3, 0x4939, 0x0, 0x0);
        gbc.writeMem(0x14b2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xae09);
        EXPECT(gbc.pc(), 0x14b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01B8
        gbc.setState(0x1bfb, 0x70c0, 0x3bf0, 0x512b, 0xd79d, 0x3014, 0x1, 0x0);
        gbc.writeMem(0x1bfb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x70c0);
        EXPECT(gbc.pc(), 0x1bfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01B9
        gbc.setState(0xa928, 0x56ca, 0x6ae0, 0xd558, 0xbe93, 0xda1f, 0x0, 0x1);
        gbc.writeMem(0xa928, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x56ca);
        EXPECT(gbc.pc(), 0xa92a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa928), 0xcb);
        EXPECT(gbc.readMem(0xa929), 0x9);
        // CB 09 01BA
        gbc.setState(0x5296, 0x7390, 0x1ab0, 0x33fd, 0x89ad, 0x5f4, 0x0, 0x1);
        gbc.writeMem(0x5296, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7390);
        EXPECT(gbc.pc(), 0x5298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01BB
        gbc.setState(0x3d81, 0x9dcd, 0xc260, 0x7d27, 0x63ad, 0x6c6c, 0x0, 0x1);
        gbc.writeMem(0x3d81, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9dcd);
        EXPECT(gbc.pc(), 0x3d83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01BC
        gbc.setState(0xdac7, 0xe5e0, 0x4da0, 0x1feb, 0x7249, 0x56e1, 0x0, 0x0);
        gbc.writeMem(0xdac7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe5e0);
        EXPECT(gbc.pc(), 0xdac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdac7), 0xcb);
        EXPECT(gbc.readMem(0xdac8), 0x9);
        // CB 09 01BD
        gbc.setState(0x3f14, 0x93c4, 0xf8b0, 0x4de9, 0x73a3, 0x3ccb, 0x0, 0x1);
        gbc.writeMem(0x3f14, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x93c4);
        EXPECT(gbc.pc(), 0x3f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01BE
        gbc.setState(0xb091, 0xfc05, 0x38c0, 0x1ae6, 0x2eb1, 0x4ed3, 0x0, 0x0);
        gbc.writeMem(0xb091, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xfc05);
        EXPECT(gbc.pc(), 0xb093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb091), 0xcb);
        EXPECT(gbc.readMem(0xb092), 0x9);
        // CB 09 01BF
        gbc.setState(0xfd8, 0x9c5d, 0x3530, 0x11e4, 0xf624, 0xaed4, 0x1, 0x0);
        gbc.writeMem(0xfd8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9c5d);
        EXPECT(gbc.pc(), 0xfda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01C0
        gbc.setState(0xba6c, 0xedfb, 0x9ec0, 0x12d2, 0xf26a, 0x2d7e, 0x0, 0x0);
        gbc.writeMem(0xba6c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xedfb);
        EXPECT(gbc.pc(), 0xba6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba6c), 0xcb);
        EXPECT(gbc.readMem(0xba6d), 0x9);
        // CB 09 01C1
        gbc.setState(0x2554, 0x79f0, 0x3590, 0xdb69, 0x5ee4, 0x594a, 0x0, 0x1);
        gbc.writeMem(0x2554, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x79f0);
        EXPECT(gbc.pc(), 0x2556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01C2
        gbc.setState(0x69ef, 0x920f, 0xf2a0, 0xa920, 0xc848, 0x4709, 0x1, 0x0);
        gbc.writeMem(0x69ef, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x920f);
        EXPECT(gbc.pc(), 0x69f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01C3
        gbc.setState(0x2e7f, 0x65ad, 0xfb90, 0xca51, 0xe47f, 0x63ad, 0x1, 0x1);
        gbc.writeMem(0x2e7f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x65ad);
        EXPECT(gbc.pc(), 0x2e81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01C4
        gbc.setState(0x34e6, 0x8457, 0x4190, 0x2e2e, 0x76cb, 0xc869, 0x0, 0x1);
        gbc.writeMem(0x34e6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8457);
        EXPECT(gbc.pc(), 0x34e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01C5
        gbc.setState(0x1016, 0x7d59, 0x6640, 0x8e49, 0x6fc6, 0xb0bd, 0x0, 0x0);
        gbc.writeMem(0x1016, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7d59);
        EXPECT(gbc.pc(), 0x1018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01C6
        gbc.setState(0x7f14, 0xe094, 0x36d0, 0xe041, 0x6b29, 0xcfc5, 0x0, 0x1);
        gbc.writeMem(0x7f14, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe094);
        EXPECT(gbc.pc(), 0x7f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01C7
        gbc.setState(0xba1c, 0xfd4, 0x2ea0, 0xa4c0, 0xc612, 0x4649, 0x0, 0x1);
        gbc.writeMem(0xba1c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfd4);
        EXPECT(gbc.pc(), 0xba1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba1c), 0xcb);
        EXPECT(gbc.readMem(0xba1d), 0x9);
        // CB 09 01C8
        gbc.setState(0xc27a, 0x48dd, 0xe5e0, 0x76d6, 0x4349, 0x5318, 0x1, 0x0);
        gbc.writeMem(0xc27a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x48dd);
        EXPECT(gbc.pc(), 0xc27c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc27a), 0xcb);
        EXPECT(gbc.readMem(0xc27b), 0x9);
        // CB 09 01C9
        gbc.setState(0xe0c4, 0x9041, 0x17e0, 0x115d, 0x630, 0x8ac3, 0x0, 0x0);
        gbc.writeMem(0xe0c4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9041);
        EXPECT(gbc.pc(), 0xe0c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c4), 0xcb);
        EXPECT(gbc.readMem(0xe0c5), 0x9);
        // CB 09 01CA
        gbc.setState(0xe998, 0x9be3, 0xb8b0, 0xe768, 0x2f9e, 0xfdd0, 0x0, 0x0);
        gbc.writeMem(0xe998, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9be3);
        EXPECT(gbc.pc(), 0xe99a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe998), 0xcb);
        EXPECT(gbc.readMem(0xe999), 0x9);
        // CB 09 01CB
        gbc.setState(0xbe53, 0xc2e4, 0x6ff0, 0x2fb0, 0xc474, 0xf390, 0x0, 0x0);
        gbc.writeMem(0xbe53, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc2e4);
        EXPECT(gbc.pc(), 0xbe55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe53), 0xcb);
        EXPECT(gbc.readMem(0xbe54), 0x9);
        // CB 09 01CC
        gbc.setState(0x3c00, 0x7073, 0x3220, 0x5b32, 0xe2bb, 0xbee, 0x1, 0x1);
        gbc.writeMem(0x3c00, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7073);
        EXPECT(gbc.pc(), 0x3c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01CD
        gbc.setState(0x3663, 0xa378, 0xc7c0, 0xbb32, 0x6e83, 0x8c5a, 0x1, 0x0);
        gbc.writeMem(0x3663, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa378);
        EXPECT(gbc.pc(), 0x3665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01CE
        gbc.setState(0x76ca, 0x591f, 0xc370, 0x842d, 0xe3, 0x3a5d, 0x0, 0x1);
        gbc.writeMem(0x76ca, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x591f);
        EXPECT(gbc.pc(), 0x76cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01CF
        gbc.setState(0xe7e9, 0x4ec6, 0xdc0, 0x1613, 0xcc59, 0xff56, 0x1, 0x0);
        gbc.writeMem(0xe7e9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4ec6);
        EXPECT(gbc.pc(), 0xe7eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7e9), 0xcb);
        EXPECT(gbc.readMem(0xe7ea), 0x9);
        // CB 09 01D0
        gbc.setState(0x2000, 0x8974, 0x9540, 0xc353, 0x1f74, 0x922e, 0x0, 0x1);
        gbc.writeMem(0x2000, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8974);
        EXPECT(gbc.pc(), 0x2002);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01D1
        gbc.setState(0x3c43, 0x7e3, 0x5dd0, 0x29a1, 0xed39, 0xbc6c, 0x1, 0x0);
        gbc.writeMem(0x3c43, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7e3);
        EXPECT(gbc.pc(), 0x3c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01D2
        gbc.setState(0x6701, 0x320e, 0xb560, 0xaa5f, 0x1b70, 0xdd8b, 0x0, 0x1);
        gbc.writeMem(0x6701, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x320e);
        EXPECT(gbc.pc(), 0x6703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01D3
        gbc.setState(0x895, 0x6bc4, 0xe5e0, 0xd3b5, 0x896a, 0x43b7, 0x0, 0x1);
        gbc.writeMem(0x895, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6bc4);
        EXPECT(gbc.pc(), 0x897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01D4
        gbc.setState(0x9e9a, 0xb755, 0x9bb0, 0x4680, 0xecbf, 0x236a, 0x1, 0x1);
        gbc.writeMem(0x9e9a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb755);
        EXPECT(gbc.pc(), 0x9e9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e9a), 0xcb);
        EXPECT(gbc.readMem(0x9e9b), 0x9);
        // CB 09 01D5
        gbc.setState(0x1c6, 0x4437, 0xe020, 0x8512, 0x7341, 0xdbe7, 0x1, 0x0);
        gbc.writeMem(0x1c6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4437);
        EXPECT(gbc.pc(), 0x1c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01D6
        gbc.setState(0x8b93, 0x1c8a, 0xede0, 0x7bcd, 0x8a1d, 0xbe7, 0x0, 0x1);
        gbc.writeMem(0x8b93, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1c8a);
        EXPECT(gbc.pc(), 0x8b95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b93), 0xcb);
        EXPECT(gbc.readMem(0x8b94), 0x9);
        // CB 09 01D7
        gbc.setState(0x1f59, 0x2af0, 0xf730, 0x5e56, 0xc10a, 0x7af, 0x1, 0x0);
        gbc.writeMem(0x1f59, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2af0);
        EXPECT(gbc.pc(), 0x1f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01D8
        gbc.setState(0xb908, 0x3912, 0x38a0, 0x48e0, 0x2571, 0x2071, 0x0, 0x0);
        gbc.writeMem(0xb908, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3912);
        EXPECT(gbc.pc(), 0xb90a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb908), 0xcb);
        EXPECT(gbc.readMem(0xb909), 0x9);
        // CB 09 01D9
        gbc.setState(0x8d3a, 0x3cb, 0x88f0, 0x9cbe, 0x6d0b, 0xc689, 0x0, 0x0);
        gbc.writeMem(0x8d3a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3cb);
        EXPECT(gbc.pc(), 0x8d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d3a), 0xcb);
        EXPECT(gbc.readMem(0x8d3b), 0x9);
        // CB 09 01DA
        gbc.setState(0xe9e5, 0xd2a7, 0x86e0, 0xf786, 0xf3a, 0x3ab0, 0x0, 0x0);
        gbc.writeMem(0xe9e5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd2a7);
        EXPECT(gbc.pc(), 0xe9e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9e5), 0xcb);
        EXPECT(gbc.readMem(0xe9e6), 0x9);
        // CB 09 01DB
        gbc.setState(0xc218, 0x4fc9, 0x2350, 0x5247, 0xaf13, 0x9931, 0x0, 0x0);
        gbc.writeMem(0xc218, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4fc9);
        EXPECT(gbc.pc(), 0xc21a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc218), 0xcb);
        EXPECT(gbc.readMem(0xc219), 0x9);
        // CB 09 01DC
        gbc.setState(0x9308, 0x7b84, 0x1880, 0xcf10, 0xaf6f, 0xdb29, 0x1, 0x1);
        gbc.writeMem(0x9308, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7b84);
        EXPECT(gbc.pc(), 0x930a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9308), 0xcb);
        EXPECT(gbc.readMem(0x9309), 0x9);
        // CB 09 01DD
        gbc.setState(0x2b70, 0xc220, 0x7080, 0x5c2e, 0x155, 0x1461, 0x1, 0x0);
        gbc.writeMem(0x2b70, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc220);
        EXPECT(gbc.pc(), 0x2b72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01DE
        gbc.setState(0x99dd, 0x5bff, 0x9440, 0x830e, 0x3288, 0x2e9b, 0x1, 0x0);
        gbc.writeMem(0x99dd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5bff);
        EXPECT(gbc.pc(), 0x99df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99dd), 0xcb);
        EXPECT(gbc.readMem(0x99de), 0x9);
        // CB 09 01DF
        gbc.setState(0x53a0, 0x2650, 0xb110, 0xad73, 0x7129, 0x94eb, 0x0, 0x0);
        gbc.writeMem(0x53a0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2650);
        EXPECT(gbc.pc(), 0x53a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01E0
        gbc.setState(0xc6ec, 0xbef3, 0x5de0, 0x2570, 0xbfc6, 0x9e96, 0x0, 0x0);
        gbc.writeMem(0xc6ec, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbef3);
        EXPECT(gbc.pc(), 0xc6ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ec), 0xcb);
        EXPECT(gbc.readMem(0xc6ed), 0x9);
        // CB 09 01E1
        gbc.setState(0xa263, 0xda39, 0x19f0, 0x4a1e, 0x8ea5, 0xbea5, 0x1, 0x0);
        gbc.writeMem(0xa263, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xda39);
        EXPECT(gbc.pc(), 0xa265);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa263), 0xcb);
        EXPECT(gbc.readMem(0xa264), 0x9);
        // CB 09 01E2
        gbc.setState(0x84af, 0x1a76, 0x15c0, 0x209c, 0xf37f, 0x836a, 0x1, 0x1);
        gbc.writeMem(0x84af, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1a76);
        EXPECT(gbc.pc(), 0x84b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84af), 0xcb);
        EXPECT(gbc.readMem(0x84b0), 0x9);
        // CB 09 01E3
        gbc.setState(0x5a0d, 0x9a42, 0xd260, 0x92de, 0xdffb, 0xb3d6, 0x0, 0x1);
        gbc.writeMem(0x5a0d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9a42);
        EXPECT(gbc.pc(), 0x5a0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01E4
        gbc.setState(0x7cc7, 0xe9e9, 0x5750, 0x878c, 0x155f, 0xdb26, 0x0, 0x1);
        gbc.writeMem(0x7cc7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe9e9);
        EXPECT(gbc.pc(), 0x7cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01E5
        gbc.setState(0x5cf8, 0x7fde, 0xd760, 0x6cea, 0x8069, 0x513b, 0x1, 0x0);
        gbc.writeMem(0x5cf8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7fde);
        EXPECT(gbc.pc(), 0x5cfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01E6
        gbc.setState(0xccf7, 0x98c4, 0xa6f0, 0x648e, 0x6bbe, 0x2c3d, 0x0, 0x1);
        gbc.writeMem(0xccf7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x98c4);
        EXPECT(gbc.pc(), 0xccf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf7), 0xcb);
        EXPECT(gbc.readMem(0xccf8), 0x9);
        // CB 09 01E7
        gbc.setState(0x590e, 0x844d, 0x180, 0xd817, 0x9a3b, 0xfd3d, 0x1, 0x0);
        gbc.writeMem(0x590e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x844d);
        EXPECT(gbc.pc(), 0x5910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01E8
        gbc.setState(0xa13f, 0xb9f0, 0x140, 0x5a11, 0xbbe1, 0xd400, 0x1, 0x1);
        gbc.writeMem(0xa13f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb9f0);
        EXPECT(gbc.pc(), 0xa141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa13f), 0xcb);
        EXPECT(gbc.readMem(0xa140), 0x9);
        // CB 09 01E9
        gbc.setState(0xee6f, 0xe62b, 0xd620, 0xc3c3, 0x41dd, 0x824d, 0x0, 0x1);
        gbc.writeMem(0xee6f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe62b);
        EXPECT(gbc.pc(), 0xee71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee6f), 0xcb);
        EXPECT(gbc.readMem(0xee70), 0x9);
        // CB 09 01EC
        gbc.setState(0x1132, 0xc98c, 0x73b0, 0xaf20, 0xab36, 0x3b7e, 0x1, 0x1);
        gbc.writeMem(0x1132, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc98c);
        EXPECT(gbc.pc(), 0x1134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01ED
        gbc.setState(0x61a3, 0xa076, 0x5640, 0x34ad, 0x51a, 0x8df5, 0x1, 0x1);
        gbc.writeMem(0x61a3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa076);
        EXPECT(gbc.pc(), 0x61a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01EE
        gbc.setState(0xbbac, 0x7076, 0xad80, 0x3cda, 0x57e8, 0x9a1c, 0x1, 0x1);
        gbc.writeMem(0xbbac, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7076);
        EXPECT(gbc.pc(), 0xbbae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbac), 0xcb);
        EXPECT(gbc.readMem(0xbbad), 0x9);
        // CB 09 01EF
        gbc.setState(0x8e8f, 0xaeeb, 0x36a0, 0xcb1a, 0xbed3, 0x9bc5, 0x0, 0x0);
        gbc.writeMem(0x8e8f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xaeeb);
        EXPECT(gbc.pc(), 0x8e91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e8f), 0xcb);
        EXPECT(gbc.readMem(0x8e90), 0x9);
        // CB 09 01F0
        gbc.setState(0xe163, 0x8475, 0x6dc0, 0x521, 0x93de, 0xd6e6, 0x0, 0x0);
        gbc.writeMem(0xe163, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8475);
        EXPECT(gbc.pc(), 0xe165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe163), 0xcb);
        EXPECT(gbc.readMem(0xe164), 0x9);
        // CB 09 01F1
        gbc.setState(0x67a4, 0x2c57, 0x3b00, 0xa0cc, 0x936b, 0x298d, 0x0, 0x1);
        gbc.writeMem(0x67a4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2c57);
        EXPECT(gbc.pc(), 0x67a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01F2
        gbc.setState(0xa2d1, 0xb4eb, 0x1f40, 0x1992, 0x8329, 0x7207, 0x0, 0x0);
        gbc.writeMem(0xa2d1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb4eb);
        EXPECT(gbc.pc(), 0xa2d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d1), 0xcb);
        EXPECT(gbc.readMem(0xa2d2), 0x9);
        // CB 09 01F4
        gbc.setState(0x90d1, 0x7863, 0x6250, 0xd0d6, 0x9e3c, 0x298, 0x1, 0x0);
        gbc.writeMem(0x90d1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7863);
        EXPECT(gbc.pc(), 0x90d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d1), 0xcb);
        EXPECT(gbc.readMem(0x90d2), 0x9);
        // CB 09 01F5
        gbc.setState(0xaa03, 0xf3ec, 0x7a40, 0xaa1d, 0x86bc, 0x6f1b, 0x0, 0x0);
        gbc.writeMem(0xaa03, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf3ec);
        EXPECT(gbc.pc(), 0xaa05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa03), 0xcb);
        EXPECT(gbc.readMem(0xaa04), 0x9);
        // CB 09 01F6
        gbc.setState(0x3e85, 0xbf32, 0x2560, 0x4afe, 0x1d76, 0xafe9, 0x1, 0x0);
        gbc.writeMem(0x3e85, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbf32);
        EXPECT(gbc.pc(), 0x3e87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01F7
        gbc.setState(0x705a, 0x55eb, 0x6340, 0x9ce7, 0xa815, 0x10b8, 0x1, 0x1);
        gbc.writeMem(0x705a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x55eb);
        EXPECT(gbc.pc(), 0x705c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01F8
        gbc.setState(0x3239, 0x49a0, 0x6930, 0xec9a, 0xcc38, 0x9032, 0x0, 0x1);
        gbc.writeMem(0x3239, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x49a0);
        EXPECT(gbc.pc(), 0x323b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01F9
        gbc.setState(0xe114, 0xace2, 0xa860, 0x10a4, 0xd620, 0x62ad, 0x0, 0x0);
        gbc.writeMem(0xe114, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xace2);
        EXPECT(gbc.pc(), 0xe116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe114), 0xcb);
        EXPECT(gbc.readMem(0xe115), 0x9);
        // CB 09 01FA
        gbc.setState(0x7b4e, 0x2771, 0xa5a0, 0xfff8, 0xce29, 0x8f0e, 0x0, 0x0);
        gbc.writeMem(0x7b4e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2771);
        EXPECT(gbc.pc(), 0x7b50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01FB
        gbc.setState(0x61a8, 0x497d, 0xf280, 0x7f07, 0x3891, 0x81ce, 0x1, 0x0);
        gbc.writeMem(0x61a8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x497d);
        EXPECT(gbc.pc(), 0x61aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01FC
        gbc.setState(0xe6a3, 0x62b4, 0x5310, 0x8ea1, 0x50d6, 0xdf04, 0x0, 0x1);
        gbc.writeMem(0xe6a3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x62b4);
        EXPECT(gbc.pc(), 0xe6a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6a3), 0xcb);
        EXPECT(gbc.readMem(0xe6a4), 0x9);
        // CB 09 01FD
        gbc.setState(0x24b, 0x86d0, 0x9e30, 0xa5fb, 0x3253, 0x1f36, 0x0, 0x1);
        gbc.writeMem(0x24b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x86d0);
        EXPECT(gbc.pc(), 0x24d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 01FE
        gbc.setState(0x43f1, 0xfa2b, 0xf890, 0x677e, 0xd8be, 0x50b9, 0x0, 0x0);
        gbc.writeMem(0x43f1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xfa2b);
        EXPECT(gbc.pc(), 0x43f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 01FF
        gbc.setState(0xd2e0, 0x54e6, 0x3c90, 0x8863, 0xb7d1, 0x277f, 0x1, 0x1);
        gbc.writeMem(0xd2e0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x54e6);
        EXPECT(gbc.pc(), 0xd2e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2e0), 0xcb);
        EXPECT(gbc.readMem(0xd2e1), 0x9);
        // CB 09 0200
        gbc.setState(0x1cd9, 0x7e78, 0xa2d0, 0x89b3, 0x7875, 0x57a3, 0x0, 0x0);
        gbc.writeMem(0x1cd9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7e78);
        EXPECT(gbc.pc(), 0x1cdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0201
        gbc.setState(0x9453, 0xa57e, 0x4300, 0xae40, 0xfc1f, 0x5d3c, 0x1, 0x0);
        gbc.writeMem(0x9453, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa57e);
        EXPECT(gbc.pc(), 0x9455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9453), 0xcb);
        EXPECT(gbc.readMem(0x9454), 0x9);
        // CB 09 0202
        gbc.setState(0xd284, 0xfa8, 0x4860, 0x182d, 0x3442, 0xcbd6, 0x0, 0x0);
        gbc.writeMem(0xd284, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xfa8);
        EXPECT(gbc.pc(), 0xd286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd284), 0xcb);
        EXPECT(gbc.readMem(0xd285), 0x9);
        // CB 09 0203
        gbc.setState(0x1529, 0x56de, 0x9f70, 0x9ccc, 0x58c4, 0xa8bd, 0x1, 0x0);
        gbc.writeMem(0x1529, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x56de);
        EXPECT(gbc.pc(), 0x152b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0204
        gbc.setState(0x7e1f, 0xaa21, 0x6d60, 0x1376, 0xaa91, 0x3226, 0x1, 0x0);
        gbc.writeMem(0x7e1f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xaa21);
        EXPECT(gbc.pc(), 0x7e21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0205
        gbc.setState(0x9f4b, 0x9b0c, 0x66c0, 0x3a6, 0x90f9, 0x1abe, 0x0, 0x0);
        gbc.writeMem(0x9f4b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9b0c);
        EXPECT(gbc.pc(), 0x9f4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f4b), 0xcb);
        EXPECT(gbc.readMem(0x9f4c), 0x9);
        // CB 09 0206
        gbc.setState(0x34ea, 0x9261, 0xa090, 0x44d1, 0xcf56, 0x661a, 0x1, 0x0);
        gbc.writeMem(0x34ea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9261);
        EXPECT(gbc.pc(), 0x34ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0207
        gbc.setState(0xeea9, 0x5964, 0x5d70, 0xe5d6, 0x2e69, 0x27f6, 0x0, 0x1);
        gbc.writeMem(0xeea9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5964);
        EXPECT(gbc.pc(), 0xeeab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea9), 0xcb);
        EXPECT(gbc.readMem(0xeeaa), 0x9);
        // CB 09 0208
        gbc.setState(0x2d01, 0x304d, 0xe490, 0x3963, 0x2dba, 0xca07, 0x0, 0x1);
        gbc.writeMem(0x2d01, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x304d);
        EXPECT(gbc.pc(), 0x2d03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0209
        gbc.setState(0xe248, 0x4486, 0x7430, 0xf09a, 0x9223, 0xa2e6, 0x1, 0x1);
        gbc.writeMem(0xe248, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4486);
        EXPECT(gbc.pc(), 0xe24a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe248), 0xcb);
        EXPECT(gbc.readMem(0xe249), 0x9);
        // CB 09 020A
        gbc.setState(0xa4db, 0x4b95, 0xc080, 0xc750, 0xfbcc, 0xd2b, 0x0, 0x1);
        gbc.writeMem(0xa4db, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4b95);
        EXPECT(gbc.pc(), 0xa4dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4db), 0xcb);
        EXPECT(gbc.readMem(0xa4dc), 0x9);
        // CB 09 020B
        gbc.setState(0xc50b, 0xed53, 0x1db0, 0xcee0, 0x84d0, 0xb91e, 0x0, 0x1);
        gbc.writeMem(0xc50b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xed53);
        EXPECT(gbc.pc(), 0xc50d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc50b), 0xcb);
        EXPECT(gbc.readMem(0xc50c), 0x9);
        // CB 09 020C
        gbc.setState(0x1c4f, 0x8fd7, 0x79f0, 0x86f8, 0xb01d, 0x897c, 0x0, 0x0);
        gbc.writeMem(0x1c4f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8fd7);
        EXPECT(gbc.pc(), 0x1c51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 020D
        gbc.setState(0x7e56, 0x24fe, 0x17a0, 0x41b9, 0x4d70, 0xf9fa, 0x1, 0x0);
        gbc.writeMem(0x7e56, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x24fe);
        EXPECT(gbc.pc(), 0x7e58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 020E
        gbc.setState(0x2bb2, 0x1c78, 0x74c0, 0xe816, 0xf37d, 0x6b2c, 0x0, 0x1);
        gbc.writeMem(0x2bb2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1c78);
        EXPECT(gbc.pc(), 0x2bb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 020F
        gbc.setState(0x1b66, 0x2ef8, 0x66d0, 0x8ac1, 0x8ae, 0xafd5, 0x0, 0x1);
        gbc.writeMem(0x1b66, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2ef8);
        EXPECT(gbc.pc(), 0x1b68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0210
        gbc.setState(0xe1f0, 0xeefb, 0x46c0, 0xdc8a, 0x49ec, 0x9af3, 0x0, 0x1);
        gbc.writeMem(0xe1f0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xeefb);
        EXPECT(gbc.pc(), 0xe1f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f0), 0xcb);
        EXPECT(gbc.readMem(0xe1f1), 0x9);
        // CB 09 0211
        gbc.setState(0x434, 0x51d0, 0xf90, 0xf17e, 0xf199, 0x1064, 0x0, 0x1);
        gbc.writeMem(0x434, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x51d0);
        EXPECT(gbc.pc(), 0x436);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0214
        gbc.setState(0xaa10, 0x327c, 0xa8d0, 0x38f0, 0xaed2, 0x7d21, 0x0, 0x0);
        gbc.writeMem(0xaa10, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x327c);
        EXPECT(gbc.pc(), 0xaa12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa10), 0xcb);
        EXPECT(gbc.readMem(0xaa11), 0x9);
        // CB 09 0215
        gbc.setState(0x3aeb, 0xb5bf, 0x5db0, 0x9822, 0x9fe0, 0x1c62, 0x1, 0x0);
        gbc.writeMem(0x3aeb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb5bf);
        EXPECT(gbc.pc(), 0x3aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0216
        gbc.setState(0x50d7, 0x9425, 0xbc80, 0x9d31, 0xa1f1, 0xac54, 0x1, 0x0);
        gbc.writeMem(0x50d7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9425);
        EXPECT(gbc.pc(), 0x50d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0217
        gbc.setState(0x7c18, 0x1ae4, 0xfa90, 0xa19a, 0x9596, 0xf2ec, 0x1, 0x0);
        gbc.writeMem(0x7c18, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1ae4);
        EXPECT(gbc.pc(), 0x7c1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0218
        gbc.setState(0xc1b2, 0x4d66, 0xe910, 0x26b5, 0x14b3, 0x27f2, 0x0, 0x1);
        gbc.writeMem(0xc1b2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4d66);
        EXPECT(gbc.pc(), 0xc1b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1b2), 0xcb);
        EXPECT(gbc.readMem(0xc1b3), 0x9);
        // CB 09 0219
        gbc.setState(0xcd68, 0x3e9, 0xfc70, 0xf2ab, 0xbc82, 0xf419, 0x0, 0x0);
        gbc.writeMem(0xcd68, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3e9);
        EXPECT(gbc.pc(), 0xcd6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd68), 0xcb);
        EXPECT(gbc.readMem(0xcd69), 0x9);
        // CB 09 021A
        gbc.setState(0x421f, 0x34b9, 0xf790, 0xad95, 0xae06, 0xd378, 0x1, 0x0);
        gbc.writeMem(0x421f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x34b9);
        EXPECT(gbc.pc(), 0x4221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 021B
        gbc.setState(0xe527, 0x8709, 0x1b50, 0x99fa, 0xc581, 0x5d63, 0x1, 0x0);
        gbc.writeMem(0xe527, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8709);
        EXPECT(gbc.pc(), 0xe529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe527), 0xcb);
        EXPECT(gbc.readMem(0xe528), 0x9);
        // CB 09 021C
        gbc.setState(0x76f8, 0x9b28, 0x4f80, 0x2c7, 0xd83a, 0x107d, 0x0, 0x1);
        gbc.writeMem(0x76f8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9b28);
        EXPECT(gbc.pc(), 0x76fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 021D
        gbc.setState(0x783e, 0xe446, 0x3230, 0x152, 0x25fa, 0xaeb7, 0x1, 0x1);
        gbc.writeMem(0x783e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe446);
        EXPECT(gbc.pc(), 0x7840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 021E
        gbc.setState(0x3f59, 0xf895, 0xb690, 0x3d05, 0x325d, 0x7e8f, 0x1, 0x0);
        gbc.writeMem(0x3f59, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf895);
        EXPECT(gbc.pc(), 0x3f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 021F
        gbc.setState(0x2ace, 0x1cf6, 0x2ce0, 0x6459, 0x84de, 0x572d, 0x1, 0x0);
        gbc.writeMem(0x2ace, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1cf6);
        EXPECT(gbc.pc(), 0x2ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0220
        gbc.setState(0x825, 0x7fc1, 0x3740, 0xffed, 0xf8bb, 0x8486, 0x1, 0x1);
        gbc.writeMem(0x825, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7fc1);
        EXPECT(gbc.pc(), 0x827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0221
        gbc.setState(0x9df3, 0x1266, 0xfbf0, 0x911f, 0xaef2, 0xdaaa, 0x1, 0x0);
        gbc.writeMem(0x9df3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1266);
        EXPECT(gbc.pc(), 0x9df5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df3), 0xcb);
        EXPECT(gbc.readMem(0x9df4), 0x9);
        // CB 09 0222
        gbc.setState(0x26cd, 0x63be, 0xd690, 0xbce4, 0x9816, 0x61bb, 0x0, 0x0);
        gbc.writeMem(0x26cd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x63be);
        EXPECT(gbc.pc(), 0x26cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0224
        gbc.setState(0xbe75, 0xfee3, 0x7170, 0x975e, 0x2074, 0x524c, 0x0, 0x0);
        gbc.writeMem(0xbe75, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfee3);
        EXPECT(gbc.pc(), 0xbe77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe75), 0xcb);
        EXPECT(gbc.readMem(0xbe76), 0x9);
        // CB 09 0225
        gbc.setState(0x4d51, 0x19be, 0x3e50, 0x9e96, 0x1cc5, 0x18db, 0x1, 0x0);
        gbc.writeMem(0x4d51, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x19be);
        EXPECT(gbc.pc(), 0x4d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0226
        gbc.setState(0xe394, 0xf623, 0xb60, 0x7229, 0x678b, 0xa1fc, 0x1, 0x1);
        gbc.writeMem(0xe394, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf623);
        EXPECT(gbc.pc(), 0xe396);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe394), 0xcb);
        EXPECT(gbc.readMem(0xe395), 0x9);
        // CB 09 0227
        gbc.setState(0x4c75, 0x5d8a, 0x8e60, 0xf033, 0xc187, 0x6017, 0x0, 0x1);
        gbc.writeMem(0x4c75, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5d8a);
        EXPECT(gbc.pc(), 0x4c77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0228
        gbc.setState(0xa17, 0xf4b4, 0x1ca0, 0x5599, 0x765, 0xd5a8, 0x0, 0x0);
        gbc.writeMem(0xa17, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf4b4);
        EXPECT(gbc.pc(), 0xa19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0229
        gbc.setState(0x5216, 0xcab5, 0x4ba0, 0x2174, 0xd14f, 0x8066, 0x1, 0x0);
        gbc.writeMem(0x5216, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcab5);
        EXPECT(gbc.pc(), 0x5218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 022A
        gbc.setState(0x3219, 0x45ca, 0x2810, 0x7856, 0x722a, 0xa9c, 0x1, 0x0);
        gbc.writeMem(0x3219, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x45ca);
        EXPECT(gbc.pc(), 0x321b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 022B
        gbc.setState(0x77bc, 0xa9, 0x84d0, 0x31a8, 0xe315, 0x344, 0x1, 0x0);
        gbc.writeMem(0x77bc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa9);
        EXPECT(gbc.pc(), 0x77be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 022C
        gbc.setState(0xda94, 0x5c1a, 0x9ec0, 0xac10, 0x80dc, 0x5fe3, 0x0, 0x0);
        gbc.writeMem(0xda94, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5c1a);
        EXPECT(gbc.pc(), 0xda96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda94), 0xcb);
        EXPECT(gbc.readMem(0xda95), 0x9);
        // CB 09 022D
        gbc.setState(0xb0aa, 0xd1e9, 0xb110, 0x3a55, 0x7257, 0x7762, 0x1, 0x0);
        gbc.writeMem(0xb0aa, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd1e9);
        EXPECT(gbc.pc(), 0xb0ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0aa), 0xcb);
        EXPECT(gbc.readMem(0xb0ab), 0x9);
        // CB 09 022E
        gbc.setState(0xb735, 0x49d4, 0x9e60, 0x1227, 0xa681, 0x9e44, 0x1, 0x0);
        gbc.writeMem(0xb735, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x49d4);
        EXPECT(gbc.pc(), 0xb737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb735), 0xcb);
        EXPECT(gbc.readMem(0xb736), 0x9);
        // CB 09 022F
        gbc.setState(0x3d58, 0xe37a, 0x56c0, 0x47dd, 0x21a9, 0xf537, 0x1, 0x0);
        gbc.writeMem(0x3d58, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe37a);
        EXPECT(gbc.pc(), 0x3d5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0230
        gbc.setState(0x3f50, 0xbe43, 0xcf10, 0xfeb5, 0xe680, 0x7303, 0x0, 0x1);
        gbc.writeMem(0x3f50, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xbe43);
        EXPECT(gbc.pc(), 0x3f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0231
        gbc.setState(0x9b08, 0xfc2e, 0xc530, 0x5fc2, 0x2d78, 0xedde, 0x1, 0x0);
        gbc.writeMem(0x9b08, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfc2e);
        EXPECT(gbc.pc(), 0x9b0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b08), 0xcb);
        EXPECT(gbc.readMem(0x9b09), 0x9);
        // CB 09 0232
        gbc.setState(0x6545, 0xbb5d, 0x6d30, 0x44e7, 0x6045, 0x8e70, 0x0, 0x1);
        gbc.writeMem(0x6545, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbb5d);
        EXPECT(gbc.pc(), 0x6547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0233
        gbc.setState(0x8b78, 0x6ee2, 0x1be0, 0xdb9, 0x1b7c, 0xb800, 0x0, 0x1);
        gbc.writeMem(0x8b78, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6ee2);
        EXPECT(gbc.pc(), 0x8b7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b78), 0xcb);
        EXPECT(gbc.readMem(0x8b79), 0x9);
        // CB 09 0234
        gbc.setState(0xb7f5, 0x765d, 0x5f50, 0xb212, 0xd1fa, 0xa2cd, 0x0, 0x0);
        gbc.writeMem(0xb7f5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x765d);
        EXPECT(gbc.pc(), 0xb7f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7f5), 0xcb);
        EXPECT(gbc.readMem(0xb7f6), 0x9);
        // CB 09 0235
        gbc.setState(0x3ff9, 0xa1c7, 0x2820, 0x4f33, 0x7cd9, 0x9b70, 0x0, 0x0);
        gbc.writeMem(0x3ff9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa1c7);
        EXPECT(gbc.pc(), 0x3ffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0236
        gbc.setState(0xd813, 0x212a, 0x60f0, 0xf60b, 0x3a86, 0xc510, 0x0, 0x1);
        gbc.writeMem(0xd813, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x212a);
        EXPECT(gbc.pc(), 0xd815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd813), 0xcb);
        EXPECT(gbc.readMem(0xd814), 0x9);
        // CB 09 0237
        gbc.setState(0x55a8, 0x8444, 0xab10, 0x6907, 0xe0e9, 0xc4fd, 0x0, 0x0);
        gbc.writeMem(0x55a8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8444);
        EXPECT(gbc.pc(), 0x55aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0238
        gbc.setState(0x483e, 0xe3fa, 0x2c40, 0xab1c, 0x8f1f, 0x89c2, 0x1, 0x0);
        gbc.writeMem(0x483e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe3fa);
        EXPECT(gbc.pc(), 0x4840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0239
        gbc.setState(0xe4ea, 0x71b4, 0x70e0, 0x5cfc, 0x6981, 0x6682, 0x0, 0x1);
        gbc.writeMem(0xe4ea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x71b4);
        EXPECT(gbc.pc(), 0xe4ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ea), 0xcb);
        EXPECT(gbc.readMem(0xe4eb), 0x9);
        // CB 09 023A
        gbc.setState(0x4179, 0x705c, 0x70a0, 0x36ff, 0xaa1a, 0x25b, 0x1, 0x1);
        gbc.writeMem(0x4179, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x705c);
        EXPECT(gbc.pc(), 0x417b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 023B
        gbc.setState(0x32cd, 0xad03, 0xfa60, 0x9e50, 0x5d00, 0xcde9, 0x0, 0x0);
        gbc.writeMem(0x32cd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xad03);
        EXPECT(gbc.pc(), 0x32cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 023C
        gbc.setState(0x4c7e, 0x2081, 0x1060, 0x5871, 0x87a, 0x7722, 0x0, 0x0);
        gbc.writeMem(0x4c7e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2081);
        EXPECT(gbc.pc(), 0x4c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 023D
        gbc.setState(0x4ce1, 0x6e47, 0x8f00, 0x2466, 0xd95, 0x8d9f, 0x0, 0x1);
        gbc.writeMem(0x4ce1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6e47);
        EXPECT(gbc.pc(), 0x4ce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 023E
        gbc.setState(0xd4e4, 0xfcba, 0xf800, 0xe3d2, 0x486d, 0xce0e, 0x0, 0x1);
        gbc.writeMem(0xd4e4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xfcba);
        EXPECT(gbc.pc(), 0xd4e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e4), 0xcb);
        EXPECT(gbc.readMem(0xd4e5), 0x9);
        // CB 09 023F
        gbc.setState(0x575d, 0xce09, 0xaa40, 0xc4d0, 0x1395, 0x38fa, 0x0, 0x0);
        gbc.writeMem(0x575d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xce09);
        EXPECT(gbc.pc(), 0x575f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0240
        gbc.setState(0x52af, 0x9ed0, 0x65e0, 0xba7e, 0x5af6, 0x2bf, 0x0, 0x0);
        gbc.writeMem(0x52af, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9ed0);
        EXPECT(gbc.pc(), 0x52b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0241
        gbc.setState(0xb834, 0x491, 0x1350, 0x1dc8, 0x9d92, 0xd580, 0x1, 0x0);
        gbc.writeMem(0xb834, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x491);
        EXPECT(gbc.pc(), 0xb836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb834), 0xcb);
        EXPECT(gbc.readMem(0xb835), 0x9);
        // CB 09 0242
        gbc.setState(0x9147, 0x198b, 0x4e50, 0x468, 0x2b20, 0x485f, 0x0, 0x0);
        gbc.writeMem(0x9147, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x198b);
        EXPECT(gbc.pc(), 0x9149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9147), 0xcb);
        EXPECT(gbc.readMem(0x9148), 0x9);
        // CB 09 0243
        gbc.setState(0x9052, 0xb265, 0x14a0, 0xb98f, 0x6c8a, 0x96d, 0x0, 0x1);
        gbc.writeMem(0x9052, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb265);
        EXPECT(gbc.pc(), 0x9054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9052), 0xcb);
        EXPECT(gbc.readMem(0x9053), 0x9);
        // CB 09 0244
        gbc.setState(0x4ea2, 0x15cb, 0x8960, 0x5a35, 0xec0, 0xdc26, 0x1, 0x0);
        gbc.writeMem(0x4ea2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x15cb);
        EXPECT(gbc.pc(), 0x4ea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0245
        gbc.setState(0x8c31, 0xd932, 0x9ef0, 0x395c, 0x9ff4, 0xad60, 0x0, 0x0);
        gbc.writeMem(0x8c31, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd932);
        EXPECT(gbc.pc(), 0x8c33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c31), 0xcb);
        EXPECT(gbc.readMem(0x8c32), 0x9);
        // CB 09 0246
        gbc.setState(0x891e, 0x7f43, 0xe030, 0xa5ed, 0x23d5, 0x6333, 0x0, 0x1);
        gbc.writeMem(0x891e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7f43);
        EXPECT(gbc.pc(), 0x8920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x891e), 0xcb);
        EXPECT(gbc.readMem(0x891f), 0x9);
        // CB 09 0247
        gbc.setState(0xb92b, 0xa1a8, 0xd1f0, 0xbe13, 0x26c8, 0x85b7, 0x1, 0x1);
        gbc.writeMem(0xb92b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa1a8);
        EXPECT(gbc.pc(), 0xb92d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb92b), 0xcb);
        EXPECT(gbc.readMem(0xb92c), 0x9);
        // CB 09 0248
        gbc.setState(0xdbb, 0x37f5, 0x1730, 0x2343, 0x1750, 0xe8d5, 0x0, 0x1);
        gbc.writeMem(0xdbb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x37f5);
        EXPECT(gbc.pc(), 0xdbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0249
        gbc.setState(0x86ae, 0xc2be, 0x6aa0, 0xc9f3, 0x307f, 0x73fb, 0x1, 0x1);
        gbc.writeMem(0x86ae, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc2be);
        EXPECT(gbc.pc(), 0x86b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ae), 0xcb);
        EXPECT(gbc.readMem(0x86af), 0x9);
        // CB 09 024A
        gbc.setState(0x6419, 0xd9fa, 0x76c0, 0x3333, 0x6a5, 0x9f85, 0x1, 0x0);
        gbc.writeMem(0x6419, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd9fa);
        EXPECT(gbc.pc(), 0x641b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 024B
        gbc.setState(0xa36e, 0xb103, 0x8990, 0x47a5, 0xdbb5, 0xd771, 0x0, 0x0);
        gbc.writeMem(0xa36e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb103);
        EXPECT(gbc.pc(), 0xa370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa36e), 0xcb);
        EXPECT(gbc.readMem(0xa36f), 0x9);
        // CB 09 024C
        gbc.setState(0xeb90, 0xe096, 0x8a50, 0x9d7e, 0xbae, 0x8e17, 0x1, 0x1);
        gbc.writeMem(0xeb90, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe096);
        EXPECT(gbc.pc(), 0xeb92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb90), 0xcb);
        EXPECT(gbc.readMem(0xeb91), 0x9);
        // CB 09 024D
        gbc.setState(0x302e, 0x9fae, 0xd320, 0xba83, 0x2bfc, 0xc177, 0x1, 0x0);
        gbc.writeMem(0x302e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9fae);
        EXPECT(gbc.pc(), 0x3030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 024E
        gbc.setState(0x2889, 0x431, 0x5a20, 0x7a50, 0xa2ab, 0x9c03, 0x0, 0x1);
        gbc.writeMem(0x2889, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x431);
        EXPECT(gbc.pc(), 0x288b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 024F
        gbc.setState(0x402e, 0x2bb2, 0xaec0, 0xf1d2, 0xa2ff, 0x5b89, 0x0, 0x0);
        gbc.writeMem(0x402e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2bb2);
        EXPECT(gbc.pc(), 0x4030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0250
        gbc.setState(0x660, 0x7412, 0xcf0, 0xc43a, 0xabb8, 0xa927, 0x1, 0x0);
        gbc.writeMem(0x660, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7412);
        EXPECT(gbc.pc(), 0x662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0251
        gbc.setState(0x21d9, 0xacee, 0x8760, 0xe979, 0x6b44, 0x1575, 0x0, 0x1);
        gbc.writeMem(0x21d9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xacee);
        EXPECT(gbc.pc(), 0x21db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0252
        gbc.setState(0x854d, 0xc861, 0xbef0, 0x2d50, 0xc6ab, 0xe78, 0x1, 0x0);
        gbc.writeMem(0x854d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc861);
        EXPECT(gbc.pc(), 0x854f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x854d), 0xcb);
        EXPECT(gbc.readMem(0x854e), 0x9);
        // CB 09 0253
        gbc.setState(0x799, 0x935b, 0x9510, 0x8873, 0x148c, 0x4888, 0x0, 0x1);
        gbc.writeMem(0x799, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x935b);
        EXPECT(gbc.pc(), 0x79b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0254
        gbc.setState(0xfb1, 0xdcd4, 0xd620, 0xc48b, 0x4d1d, 0x1277, 0x1, 0x0);
        gbc.writeMem(0xfb1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xdcd4);
        EXPECT(gbc.pc(), 0xfb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0256
        gbc.setState(0xc30e, 0x7c70, 0xe0a0, 0xf24a, 0xd2b8, 0xbc91, 0x0, 0x0);
        gbc.writeMem(0xc30e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7c70);
        EXPECT(gbc.pc(), 0xc310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc30e), 0xcb);
        EXPECT(gbc.readMem(0xc30f), 0x9);
        // CB 09 0257
        gbc.setState(0xee4e, 0xc604, 0x4040, 0x30f8, 0xe370, 0x224f, 0x0, 0x0);
        gbc.writeMem(0xee4e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc604);
        EXPECT(gbc.pc(), 0xee50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee4e), 0xcb);
        EXPECT(gbc.readMem(0xee4f), 0x9);
        // CB 09 0258
        gbc.setState(0x6d96, 0x4c70, 0x8a80, 0x4514, 0x13ed, 0x381a, 0x0, 0x0);
        gbc.writeMem(0x6d96, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4c70);
        EXPECT(gbc.pc(), 0x6d98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0259
        gbc.setState(0x9986, 0x23d4, 0x8630, 0xb0d9, 0x1911, 0xcdf9, 0x1, 0x0);
        gbc.writeMem(0x9986, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x23d4);
        EXPECT(gbc.pc(), 0x9988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9986), 0xcb);
        EXPECT(gbc.readMem(0x9987), 0x9);
        // CB 09 025B
        gbc.setState(0x1095, 0xc326, 0xe870, 0x9aa7, 0xabed, 0x5a8e, 0x0, 0x0);
        gbc.writeMem(0x1095, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc326);
        EXPECT(gbc.pc(), 0x1097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 025C
        gbc.setState(0xc1d9, 0x57f7, 0xee0, 0x95fb, 0x3de2, 0x5716, 0x0, 0x1);
        gbc.writeMem(0xc1d9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x57f7);
        EXPECT(gbc.pc(), 0xc1db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d9), 0xcb);
        EXPECT(gbc.readMem(0xc1da), 0x9);
        // CB 09 025D
        gbc.setState(0xd430, 0xe7ed, 0xa810, 0x3001, 0xf3b2, 0x6191, 0x0, 0x1);
        gbc.writeMem(0xd430, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe7ed);
        EXPECT(gbc.pc(), 0xd432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd430), 0xcb);
        EXPECT(gbc.readMem(0xd431), 0x9);
        // CB 09 025E
        gbc.setState(0x5c09, 0x219a, 0x7600, 0x7127, 0xcb55, 0x3622, 0x0, 0x1);
        gbc.writeMem(0x5c09, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x219a);
        EXPECT(gbc.pc(), 0x5c0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0260
        gbc.setState(0x92c4, 0x61a5, 0x84f0, 0xd46c, 0x291, 0x3af9, 0x1, 0x0);
        gbc.writeMem(0x92c4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x61a5);
        EXPECT(gbc.pc(), 0x92c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c4), 0xcb);
        EXPECT(gbc.readMem(0x92c5), 0x9);
        // CB 09 0261
        gbc.setState(0x5d2b, 0xd361, 0xde50, 0x5dff, 0x5673, 0x1cdd, 0x1, 0x1);
        gbc.writeMem(0x5d2b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd361);
        EXPECT(gbc.pc(), 0x5d2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0262
        gbc.setState(0xb10c, 0x5095, 0x64c0, 0xfb83, 0xe609, 0xefe1, 0x0, 0x1);
        gbc.writeMem(0xb10c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5095);
        EXPECT(gbc.pc(), 0xb10e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb10c), 0xcb);
        EXPECT(gbc.readMem(0xb10d), 0x9);
        // CB 09 0263
        gbc.setState(0x4dab, 0x1995, 0x1600, 0xf4c9, 0x6e3c, 0xbe1c, 0x0, 0x0);
        gbc.writeMem(0x4dab, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1995);
        EXPECT(gbc.pc(), 0x4dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0264
        gbc.setState(0x959a, 0x2839, 0xb310, 0x4ae, 0x16c6, 0x5909, 0x0, 0x1);
        gbc.writeMem(0x959a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2839);
        EXPECT(gbc.pc(), 0x959c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x959a), 0xcb);
        EXPECT(gbc.readMem(0x959b), 0x9);
        // CB 09 0265
        gbc.setState(0x196a, 0xc910, 0x9210, 0x539e, 0x9680, 0xba6a, 0x0, 0x1);
        gbc.writeMem(0x196a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc910);
        EXPECT(gbc.pc(), 0x196c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0266
        gbc.setState(0xb312, 0x94ce, 0xf600, 0x475, 0xbd2, 0x2ac1, 0x0, 0x0);
        gbc.writeMem(0xb312, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x94ce);
        EXPECT(gbc.pc(), 0xb314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb312), 0xcb);
        EXPECT(gbc.readMem(0xb313), 0x9);
        // CB 09 0267
        gbc.setState(0xf18, 0xa988, 0x7080, 0x74f8, 0x8813, 0x84e1, 0x1, 0x1);
        gbc.writeMem(0xf18, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa988);
        EXPECT(gbc.pc(), 0xf1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0268
        gbc.setState(0x2988, 0xa73d, 0xc3e0, 0x7ce2, 0x80ab, 0x5e53, 0x0, 0x0);
        gbc.writeMem(0x2988, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa73d);
        EXPECT(gbc.pc(), 0x298a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0269
        gbc.setState(0xa645, 0xe2fc, 0x8680, 0x4b49, 0x3e3, 0x6c9f, 0x0, 0x0);
        gbc.writeMem(0xa645, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe2fc);
        EXPECT(gbc.pc(), 0xa647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa645), 0xcb);
        EXPECT(gbc.readMem(0xa646), 0x9);
        // CB 09 026A
        gbc.setState(0xa646, 0x4b33, 0x41b0, 0x5307, 0x34ce, 0xa1c2, 0x0, 0x0);
        gbc.writeMem(0xa646, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4b33);
        EXPECT(gbc.pc(), 0xa648);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa646), 0xcb);
        EXPECT(gbc.readMem(0xa647), 0x9);
        // CB 09 026B
        gbc.setState(0xcb49, 0xbe0, 0x2970, 0x656d, 0x8257, 0x5167, 0x0, 0x1);
        gbc.writeMem(0xcb49, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbe0);
        EXPECT(gbc.pc(), 0xcb4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb49), 0xcb);
        EXPECT(gbc.readMem(0xcb4a), 0x9);
        // CB 09 026C
        gbc.setState(0x79cd, 0x9427, 0xbfd0, 0x4e4f, 0x6743, 0xd314, 0x0, 0x0);
        gbc.writeMem(0x79cd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9427);
        EXPECT(gbc.pc(), 0x79cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 026D
        gbc.setState(0x9ed1, 0x5b84, 0x5410, 0x69dc, 0xe4b3, 0xc135, 0x0, 0x1);
        gbc.writeMem(0x9ed1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5b84);
        EXPECT(gbc.pc(), 0x9ed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ed1), 0xcb);
        EXPECT(gbc.readMem(0x9ed2), 0x9);
        // CB 09 026E
        gbc.setState(0xd1ad, 0x5e59, 0x6f10, 0x9474, 0x2dc9, 0x30fa, 0x1, 0x1);
        gbc.writeMem(0xd1ad, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5e59);
        EXPECT(gbc.pc(), 0xd1af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ad), 0xcb);
        EXPECT(gbc.readMem(0xd1ae), 0x9);
        // CB 09 026F
        gbc.setState(0x9395, 0x9a66, 0x4770, 0xb050, 0xcc07, 0x7aa2, 0x0, 0x1);
        gbc.writeMem(0x9395, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9a66);
        EXPECT(gbc.pc(), 0x9397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9395), 0xcb);
        EXPECT(gbc.readMem(0x9396), 0x9);
        // CB 09 0270
        gbc.setState(0xa37f, 0x6ed9, 0xcb30, 0x39c9, 0x8075, 0x7080, 0x1, 0x1);
        gbc.writeMem(0xa37f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6ed9);
        EXPECT(gbc.pc(), 0xa381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa37f), 0xcb);
        EXPECT(gbc.readMem(0xa380), 0x9);
        // CB 09 0271
        gbc.setState(0xb30c, 0xefeb, 0xec10, 0xcd3d, 0x2d81, 0x9c2, 0x1, 0x0);
        gbc.writeMem(0xb30c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xefeb);
        EXPECT(gbc.pc(), 0xb30e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb30c), 0xcb);
        EXPECT(gbc.readMem(0xb30d), 0x9);
        // CB 09 0272
        gbc.setState(0xc58b, 0xee45, 0x2fc0, 0x27bf, 0x2580, 0xf9ec, 0x0, 0x0);
        gbc.writeMem(0xc58b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xee45);
        EXPECT(gbc.pc(), 0xc58d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc58b), 0xcb);
        EXPECT(gbc.readMem(0xc58c), 0x9);
        // CB 09 0273
        gbc.setState(0x5e1b, 0xc32f, 0xf10, 0x6212, 0xe42e, 0xa3b1, 0x1, 0x0);
        gbc.writeMem(0x5e1b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc32f);
        EXPECT(gbc.pc(), 0x5e1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0274
        gbc.setState(0x2c6b, 0xbb95, 0x9800, 0xc6d5, 0x3cc, 0xdf07, 0x0, 0x1);
        gbc.writeMem(0x2c6b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbb95);
        EXPECT(gbc.pc(), 0x2c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0275
        gbc.setState(0xadfb, 0xa8fb, 0x57d0, 0xe86a, 0xa998, 0xc8a6, 0x0, 0x1);
        gbc.writeMem(0xadfb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa8fb);
        EXPECT(gbc.pc(), 0xadfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadfb), 0xcb);
        EXPECT(gbc.readMem(0xadfc), 0x9);
        // CB 09 0276
        gbc.setState(0xda5e, 0x8367, 0x6e70, 0x8a51, 0xe9b, 0x7e78, 0x0, 0x1);
        gbc.writeMem(0xda5e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8367);
        EXPECT(gbc.pc(), 0xda60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda5e), 0xcb);
        EXPECT(gbc.readMem(0xda5f), 0x9);
        // CB 09 0277
        gbc.setState(0x1d3e, 0xafe2, 0x3af0, 0xd27d, 0xbad4, 0x7c70, 0x1, 0x1);
        gbc.writeMem(0x1d3e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xafe2);
        EXPECT(gbc.pc(), 0x1d40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0278
        gbc.setState(0xaff1, 0xc1, 0x86a0, 0x6532, 0xf585, 0xd086, 0x0, 0x0);
        gbc.writeMem(0xaff1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc1);
        EXPECT(gbc.pc(), 0xaff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaff1), 0xcb);
        EXPECT(gbc.readMem(0xaff2), 0x9);
        // CB 09 0279
        gbc.setState(0xeb5c, 0x90cf, 0x3900, 0xd658, 0xd44d, 0xcb63, 0x1, 0x0);
        gbc.writeMem(0xeb5c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x90cf);
        EXPECT(gbc.pc(), 0xeb5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb5c), 0xcb);
        EXPECT(gbc.readMem(0xeb5d), 0x9);
        // CB 09 027A
        gbc.setState(0xe5cc, 0x556c, 0x6760, 0x4e86, 0x10f9, 0x7b76, 0x0, 0x1);
        gbc.writeMem(0xe5cc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x556c);
        EXPECT(gbc.pc(), 0xe5ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5cc), 0xcb);
        EXPECT(gbc.readMem(0xe5cd), 0x9);
        // CB 09 027B
        gbc.setState(0xad3e, 0xd07d, 0x7570, 0x1dcb, 0x9958, 0x227d, 0x1, 0x0);
        gbc.writeMem(0xad3e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd07d);
        EXPECT(gbc.pc(), 0xad40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad3e), 0xcb);
        EXPECT(gbc.readMem(0xad3f), 0x9);
        // CB 09 027C
        gbc.setState(0x503, 0xc2a9, 0x6530, 0xc884, 0x3a48, 0x2a53, 0x0, 0x0);
        gbc.writeMem(0x503, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc2a9);
        EXPECT(gbc.pc(), 0x505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 027D
        gbc.setState(0xbbdd, 0x1f49, 0x4a70, 0xdcbe, 0xde2c, 0x9b2e, 0x0, 0x1);
        gbc.writeMem(0xbbdd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1f49);
        EXPECT(gbc.pc(), 0xbbdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbdd), 0xcb);
        EXPECT(gbc.readMem(0xbbde), 0x9);
        // CB 09 027E
        gbc.setState(0x3e35, 0x39df, 0xcda0, 0x7f7c, 0xf30c, 0x2908, 0x0, 0x0);
        gbc.writeMem(0x3e35, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x39df);
        EXPECT(gbc.pc(), 0x3e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 027F
        gbc.setState(0x9199, 0x27fb, 0xa5a0, 0x4a94, 0x828e, 0x638f, 0x1, 0x0);
        gbc.writeMem(0x9199, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x27fb);
        EXPECT(gbc.pc(), 0x919b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9199), 0xcb);
        EXPECT(gbc.readMem(0x919a), 0x9);
        // CB 09 0281
        gbc.setState(0x39ef, 0xe954, 0xd140, 0xc08e, 0xda51, 0x8fa8, 0x0, 0x0);
        gbc.writeMem(0x39ef, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe954);
        EXPECT(gbc.pc(), 0x39f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0282
        gbc.setState(0xc952, 0xec7f, 0x8440, 0x1bbb, 0x5192, 0x5a6c, 0x0, 0x1);
        gbc.writeMem(0xc952, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xec7f);
        EXPECT(gbc.pc(), 0xc954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc952), 0xcb);
        EXPECT(gbc.readMem(0xc953), 0x9);
        // CB 09 0283
        gbc.setState(0x55cc, 0xb097, 0x7a10, 0x4514, 0xe1f0, 0x86e8, 0x1, 0x1);
        gbc.writeMem(0x55cc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb097);
        EXPECT(gbc.pc(), 0x55ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0284
        gbc.setState(0xd606, 0xb29, 0xfea0, 0xc9ef, 0x3d94, 0x2d74, 0x0, 0x0);
        gbc.writeMem(0xd606, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb29);
        EXPECT(gbc.pc(), 0xd608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd606), 0xcb);
        EXPECT(gbc.readMem(0xd607), 0x9);
        // CB 09 0285
        gbc.setState(0x3fd, 0xde3f, 0xfaf0, 0xeb68, 0x4cf7, 0xd28a, 0x1, 0x1);
        gbc.writeMem(0x3fd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xde3f);
        EXPECT(gbc.pc(), 0x3ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0286
        gbc.setState(0x3235, 0xe3fe, 0xcac0, 0x1f13, 0x74b3, 0xb3c7, 0x1, 0x0);
        gbc.writeMem(0x3235, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe3fe);
        EXPECT(gbc.pc(), 0x3237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0287
        gbc.setState(0xd348, 0x5648, 0x6c20, 0xbfb2, 0x29df, 0x2a11, 0x1, 0x0);
        gbc.writeMem(0xd348, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5648);
        EXPECT(gbc.pc(), 0xd34a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd348), 0xcb);
        EXPECT(gbc.readMem(0xd349), 0x9);
        // CB 09 0288
        gbc.setState(0x35c9, 0xd2d4, 0x32f0, 0x9a37, 0xd53a, 0xaa87, 0x0, 0x1);
        gbc.writeMem(0x35c9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd2d4);
        EXPECT(gbc.pc(), 0x35cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0289
        gbc.setState(0x89b, 0x161c, 0x8dd0, 0xe9ca, 0x828d, 0x28fe, 0x0, 0x1);
        gbc.writeMem(0x89b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x161c);
        EXPECT(gbc.pc(), 0x89d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 028A
        gbc.setState(0x7027, 0xb129, 0x9150, 0x4fad, 0x53d6, 0xcfa3, 0x1, 0x0);
        gbc.writeMem(0x7027, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb129);
        EXPECT(gbc.pc(), 0x7029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 028B
        gbc.setState(0x40f6, 0x77a9, 0xc530, 0xc103, 0x723b, 0xf3bb, 0x1, 0x1);
        gbc.writeMem(0x40f6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x77a9);
        EXPECT(gbc.pc(), 0x40f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 028C
        gbc.setState(0x553b, 0x2f8b, 0xb710, 0x234a, 0x5f0f, 0x8b6f, 0x0, 0x1);
        gbc.writeMem(0x553b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2f8b);
        EXPECT(gbc.pc(), 0x553d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 028D
        gbc.setState(0x4611, 0x2e90, 0xe680, 0x9bb4, 0x5d9b, 0x4f9f, 0x0, 0x1);
        gbc.writeMem(0x4611, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2e90);
        EXPECT(gbc.pc(), 0x4613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 028E
        gbc.setState(0x5d62, 0x6f09, 0xd3f0, 0x12f2, 0x396c, 0x2386, 0x0, 0x0);
        gbc.writeMem(0x5d62, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6f09);
        EXPECT(gbc.pc(), 0x5d64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 028F
        gbc.setState(0x689f, 0x805f, 0xfad0, 0xbd35, 0xd266, 0x807a, 0x0, 0x0);
        gbc.writeMem(0x689f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x805f);
        EXPECT(gbc.pc(), 0x68a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0290
        gbc.setState(0xc655, 0xfd95, 0x66e0, 0xecee, 0xba63, 0x8cd0, 0x1, 0x1);
        gbc.writeMem(0xc655, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xfd95);
        EXPECT(gbc.pc(), 0xc657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc655), 0xcb);
        EXPECT(gbc.readMem(0xc656), 0x9);
        // CB 09 0291
        gbc.setState(0x2e59, 0x3a08, 0x1190, 0x5bb8, 0xb397, 0xa6ac, 0x1, 0x1);
        gbc.writeMem(0x2e59, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3a08);
        EXPECT(gbc.pc(), 0x2e5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0292
        gbc.setState(0xb14c, 0x7684, 0x8890, 0xa7ae, 0xc6f8, 0x9725, 0x0, 0x1);
        gbc.writeMem(0xb14c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7684);
        EXPECT(gbc.pc(), 0xb14e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb14c), 0xcb);
        EXPECT(gbc.readMem(0xb14d), 0x9);
        // CB 09 0293
        gbc.setState(0x5018, 0x3bb0, 0x78d0, 0x2a67, 0xf890, 0xb6b, 0x0, 0x0);
        gbc.writeMem(0x5018, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3bb0);
        EXPECT(gbc.pc(), 0x501a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0294
        gbc.setState(0x4d43, 0xd096, 0xcf70, 0xef98, 0x42be, 0xe44, 0x0, 0x0);
        gbc.writeMem(0x4d43, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd096);
        EXPECT(gbc.pc(), 0x4d45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0295
        gbc.setState(0xb69, 0x69a5, 0xf220, 0x7b0a, 0x812d, 0xe818, 0x0, 0x1);
        gbc.writeMem(0xb69, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x69a5);
        EXPECT(gbc.pc(), 0xb6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0296
        gbc.setState(0xbcb0, 0xf958, 0x73c0, 0x15c0, 0xb62c, 0x24ae, 0x0, 0x0);
        gbc.writeMem(0xbcb0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf958);
        EXPECT(gbc.pc(), 0xbcb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcb0), 0xcb);
        EXPECT(gbc.readMem(0xbcb1), 0x9);
        // CB 09 0297
        gbc.setState(0x488e, 0x2c66, 0x8ab0, 0x6599, 0x4d55, 0x1585, 0x0, 0x1);
        gbc.writeMem(0x488e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2c66);
        EXPECT(gbc.pc(), 0x4890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0299
        gbc.setState(0xc94d, 0x187d, 0xcaa0, 0xa611, 0x69b3, 0x97d7, 0x1, 0x0);
        gbc.writeMem(0xc94d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x187d);
        EXPECT(gbc.pc(), 0xc94f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc94d), 0xcb);
        EXPECT(gbc.readMem(0xc94e), 0x9);
        // CB 09 029A
        gbc.setState(0xe4f1, 0x4af4, 0x9870, 0x4ca5, 0x5e95, 0x7522, 0x0, 0x0);
        gbc.writeMem(0xe4f1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4af4);
        EXPECT(gbc.pc(), 0xe4f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4f1), 0xcb);
        EXPECT(gbc.readMem(0xe4f2), 0x9);
        // CB 09 029B
        gbc.setState(0x4713, 0x800e, 0x8c40, 0x9f7c, 0x9e3f, 0xc993, 0x0, 0x1);
        gbc.writeMem(0x4713, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x800e);
        EXPECT(gbc.pc(), 0x4715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 029C
        gbc.setState(0x4b86, 0xff6d, 0xfb0, 0xd724, 0x5bc3, 0xd9a1, 0x1, 0x1);
        gbc.writeMem(0x4b86, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xff6d);
        EXPECT(gbc.pc(), 0x4b88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 029D
        gbc.setState(0x7c48, 0xf965, 0x97a0, 0xf57c, 0x195d, 0x19a5, 0x0, 0x0);
        gbc.writeMem(0x7c48, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf965);
        EXPECT(gbc.pc(), 0x7c4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 029F
        gbc.setState(0x8184, 0xbd30, 0x98b0, 0x7c27, 0x2c02, 0xb537, 0x0, 0x0);
        gbc.writeMem(0x8184, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xbd30);
        EXPECT(gbc.pc(), 0x8186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8184), 0xcb);
        EXPECT(gbc.readMem(0x8185), 0x9);
        // CB 09 02A0
        gbc.setState(0x4969, 0xab21, 0x6640, 0x9c55, 0xd93e, 0xf2c9, 0x1, 0x0);
        gbc.writeMem(0x4969, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xab21);
        EXPECT(gbc.pc(), 0x496b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02A1
        gbc.setState(0xc0dd, 0xc4d5, 0x8160, 0x60ea, 0x794b, 0xd661, 0x1, 0x0);
        gbc.writeMem(0xc0dd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc4d5);
        EXPECT(gbc.pc(), 0xc0df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0dd), 0xcb);
        EXPECT(gbc.readMem(0xc0de), 0x9);
        // CB 09 02A2
        gbc.setState(0xd21d, 0x2a79, 0x5e20, 0x5ca2, 0x79dc, 0x5dc9, 0x0, 0x0);
        gbc.writeMem(0xd21d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2a79);
        EXPECT(gbc.pc(), 0xd21f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd21d), 0xcb);
        EXPECT(gbc.readMem(0xd21e), 0x9);
        // CB 09 02A4
        gbc.setState(0x8b8, 0x430, 0x6ca0, 0x92bc, 0xfa2e, 0x32d3, 0x1, 0x1);
        gbc.writeMem(0x8b8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x430);
        EXPECT(gbc.pc(), 0x8ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02A5
        gbc.setState(0xe7cd, 0x5872, 0x18a0, 0x190e, 0x292, 0x5da9, 0x1, 0x1);
        gbc.writeMem(0xe7cd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5872);
        EXPECT(gbc.pc(), 0xe7cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7cd), 0xcb);
        EXPECT(gbc.readMem(0xe7ce), 0x9);
        // CB 09 02A6
        gbc.setState(0x501d, 0xebcf, 0x7be0, 0x635b, 0x3da3, 0xd449, 0x0, 0x1);
        gbc.writeMem(0x501d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xebcf);
        EXPECT(gbc.pc(), 0x501f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02A7
        gbc.setState(0x52ec, 0x680a, 0x76b0, 0xf1ab, 0xb5f2, 0x47f0, 0x0, 0x1);
        gbc.writeMem(0x52ec, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x680a);
        EXPECT(gbc.pc(), 0x52ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02A8
        gbc.setState(0x68d0, 0xc8d3, 0x8990, 0x1114, 0xd5cf, 0x8da0, 0x0, 0x1);
        gbc.writeMem(0x68d0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc8d3);
        EXPECT(gbc.pc(), 0x68d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02A9
        gbc.setState(0x6642, 0xce0b, 0xc100, 0x32b3, 0x6b1a, 0xf0ae, 0x0, 0x1);
        gbc.writeMem(0x6642, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xce0b);
        EXPECT(gbc.pc(), 0x6644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02AA
        gbc.setState(0x56f1, 0x7bfa, 0xd3f0, 0xcb1e, 0xb533, 0xc7a, 0x1, 0x1);
        gbc.writeMem(0x56f1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7bfa);
        EXPECT(gbc.pc(), 0x56f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02AC
        gbc.setState(0x6736, 0x707f, 0xbe70, 0x820c, 0x7c13, 0x40ae, 0x1, 0x1);
        gbc.writeMem(0x6736, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x707f);
        EXPECT(gbc.pc(), 0x6738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02AD
        gbc.setState(0x25e7, 0x4909, 0xf7f0, 0x981f, 0xc7aa, 0xb7e6, 0x1, 0x0);
        gbc.writeMem(0x25e7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4909);
        EXPECT(gbc.pc(), 0x25e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02AE
        gbc.setState(0x4002, 0xb5c4, 0xa890, 0x1a6f, 0xa8d, 0x2a9a, 0x1, 0x0);
        gbc.writeMem(0x4002, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb5c4);
        EXPECT(gbc.pc(), 0x4004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02AF
        gbc.setState(0xacd4, 0x7b3c, 0x5310, 0xe9b3, 0x602a, 0x893e, 0x0, 0x0);
        gbc.writeMem(0xacd4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7b3c);
        EXPECT(gbc.pc(), 0xacd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacd4), 0xcb);
        EXPECT(gbc.readMem(0xacd5), 0x9);
        // CB 09 02B0
        gbc.setState(0x348e, 0x978d, 0x7010, 0xee26, 0xada9, 0x808a, 0x1, 0x0);
        gbc.writeMem(0x348e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x978d);
        EXPECT(gbc.pc(), 0x3490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02B1
        gbc.setState(0x318f, 0x7293, 0x7db0, 0x77c1, 0x4f23, 0x6a2a, 0x1, 0x1);
        gbc.writeMem(0x318f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7293);
        EXPECT(gbc.pc(), 0x3191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02B2
        gbc.setState(0x14cc, 0x7d18, 0x5210, 0x9e84, 0xcd6b, 0x5ff0, 0x0, 0x1);
        gbc.writeMem(0x14cc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7d18);
        EXPECT(gbc.pc(), 0x14ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02B3
        gbc.setState(0xc346, 0xd5eb, 0xc690, 0x6635, 0xbc0c, 0x51c8, 0x0, 0x0);
        gbc.writeMem(0xc346, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd5eb);
        EXPECT(gbc.pc(), 0xc348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc346), 0xcb);
        EXPECT(gbc.readMem(0xc347), 0x9);
        // CB 09 02B4
        gbc.setState(0xb036, 0xe179, 0xd0b0, 0xbd2e, 0xf160, 0x6ad1, 0x1, 0x0);
        gbc.writeMem(0xb036, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe179);
        EXPECT(gbc.pc(), 0xb038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb036), 0xcb);
        EXPECT(gbc.readMem(0xb037), 0x9);
        // CB 09 02B5
        gbc.setState(0x49d3, 0x47df, 0xa680, 0x7d67, 0xfe07, 0x3e17, 0x0, 0x1);
        gbc.writeMem(0x49d3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x47df);
        EXPECT(gbc.pc(), 0x49d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02B6
        gbc.setState(0x54ca, 0xfe0a, 0xd370, 0xf8b6, 0x2e5f, 0x9510, 0x1, 0x0);
        gbc.writeMem(0x54ca, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfe0a);
        EXPECT(gbc.pc(), 0x54cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02B8
        gbc.setState(0x8306, 0xfc54, 0x51f0, 0xa21, 0x6f41, 0x9e2c, 0x1, 0x1);
        gbc.writeMem(0x8306, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfc54);
        EXPECT(gbc.pc(), 0x8308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8306), 0xcb);
        EXPECT(gbc.readMem(0x8307), 0x9);
        // CB 09 02B9
        gbc.setState(0x1434, 0x85a8, 0x1500, 0x2b83, 0x6156, 0xee4f, 0x1, 0x0);
        gbc.writeMem(0x1434, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x85a8);
        EXPECT(gbc.pc(), 0x1436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02BA
        gbc.setState(0x3d66, 0x4c6b, 0xdfc0, 0x216a, 0x2d8d, 0xb737, 0x0, 0x1);
        gbc.writeMem(0x3d66, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4c6b);
        EXPECT(gbc.pc(), 0x3d68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02BB
        gbc.setState(0xa4c5, 0xc061, 0x7c20, 0x4b2d, 0x4a39, 0x8f4e, 0x1, 0x0);
        gbc.writeMem(0xa4c5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc061);
        EXPECT(gbc.pc(), 0xa4c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c5), 0xcb);
        EXPECT(gbc.readMem(0xa4c6), 0x9);
        // CB 09 02BC
        gbc.setState(0x8b92, 0xe9a6, 0xd8d0, 0xa38, 0xfb34, 0xb368, 0x0, 0x1);
        gbc.writeMem(0x8b92, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe9a6);
        EXPECT(gbc.pc(), 0x8b94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b92), 0xcb);
        EXPECT(gbc.readMem(0x8b93), 0x9);
        // CB 09 02BD
        gbc.setState(0xbf21, 0xe465, 0xdb70, 0xfe91, 0xa451, 0xd6be, 0x0, 0x1);
        gbc.writeMem(0xbf21, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe465);
        EXPECT(gbc.pc(), 0xbf23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf21), 0xcb);
        EXPECT(gbc.readMem(0xbf22), 0x9);
        // CB 09 02BF
        gbc.setState(0xafc3, 0x9400, 0x800, 0xdc6d, 0x25fe, 0x5020, 0x0, 0x1);
        gbc.writeMem(0xafc3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9400);
        EXPECT(gbc.pc(), 0xafc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc3), 0xcb);
        EXPECT(gbc.readMem(0xafc4), 0x9);
        // CB 09 02C0
        gbc.setState(0x2570, 0x9b39, 0x580, 0x1a6d, 0xe844, 0x5a4b, 0x0, 0x1);
        gbc.writeMem(0x2570, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9b39);
        EXPECT(gbc.pc(), 0x2572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02C1
        gbc.setState(0x24b4, 0x68c9, 0xdea0, 0xf853, 0x48dc, 0xe075, 0x0, 0x1);
        gbc.writeMem(0x24b4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x68c9);
        EXPECT(gbc.pc(), 0x24b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02C2
        gbc.setState(0x933, 0x9d74, 0x3d0, 0xdaf6, 0x6777, 0x74ab, 0x0, 0x0);
        gbc.writeMem(0x933, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9d74);
        EXPECT(gbc.pc(), 0x935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02C3
        gbc.setState(0xc7f2, 0xc484, 0xf440, 0xd9fa, 0xb16d, 0x7b03, 0x0, 0x1);
        gbc.writeMem(0xc7f2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc484);
        EXPECT(gbc.pc(), 0xc7f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f2), 0xcb);
        EXPECT(gbc.readMem(0xc7f3), 0x9);
        // CB 09 02C5
        gbc.setState(0x8799, 0x97c2, 0x2970, 0x82e9, 0x21d3, 0xae51, 0x0, 0x1);
        gbc.writeMem(0x8799, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x97c2);
        EXPECT(gbc.pc(), 0x879b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8799), 0xcb);
        EXPECT(gbc.readMem(0x879a), 0x9);
        // CB 09 02C6
        gbc.setState(0x54f0, 0x4f17, 0x2e10, 0xbc35, 0x750c, 0xd274, 0x0, 0x0);
        gbc.writeMem(0x54f0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4f17);
        EXPECT(gbc.pc(), 0x54f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02C7
        gbc.setState(0xef9, 0x78e4, 0x6180, 0xa07a, 0x4461, 0xc34b, 0x0, 0x1);
        gbc.writeMem(0xef9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x78e4);
        EXPECT(gbc.pc(), 0xefb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02C8
        gbc.setState(0xe212, 0xf828, 0x4390, 0x7b60, 0xfd19, 0x895f, 0x1, 0x1);
        gbc.writeMem(0xe212, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf828);
        EXPECT(gbc.pc(), 0xe214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe212), 0xcb);
        EXPECT(gbc.readMem(0xe213), 0x9);
        // CB 09 02C9
        gbc.setState(0xc543, 0xb5de, 0xd650, 0x2309, 0x85ac, 0x3067, 0x1, 0x0);
        gbc.writeMem(0xc543, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb5de);
        EXPECT(gbc.pc(), 0xc545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc543), 0xcb);
        EXPECT(gbc.readMem(0xc544), 0x9);
        // CB 09 02CA
        gbc.setState(0x452, 0x5fcc, 0x7230, 0x2bde, 0x4b15, 0x7a47, 0x1, 0x0);
        gbc.writeMem(0x452, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5fcc);
        EXPECT(gbc.pc(), 0x454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02CC
        gbc.setState(0xe75c, 0xc23, 0x810, 0xfaab, 0x8961, 0x5abc, 0x0, 0x1);
        gbc.writeMem(0xe75c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc23);
        EXPECT(gbc.pc(), 0xe75e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe75c), 0xcb);
        EXPECT(gbc.readMem(0xe75d), 0x9);
        // CB 09 02CD
        gbc.setState(0x8c4, 0xbf81, 0x2ed0, 0x3d59, 0xd932, 0x7714, 0x0, 0x1);
        gbc.writeMem(0x8c4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xbf81);
        EXPECT(gbc.pc(), 0x8c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02CE
        gbc.setState(0xcd34, 0x234c, 0x21e0, 0xf835, 0x7763, 0xf47f, 0x1, 0x1);
        gbc.writeMem(0xcd34, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x234c);
        EXPECT(gbc.pc(), 0xcd36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd34), 0xcb);
        EXPECT(gbc.readMem(0xcd35), 0x9);
        // CB 09 02CF
        gbc.setState(0xadc9, 0xd4ba, 0x2b20, 0x9b13, 0xdebe, 0x7b44, 0x0, 0x0);
        gbc.writeMem(0xadc9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd4ba);
        EXPECT(gbc.pc(), 0xadcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadc9), 0xcb);
        EXPECT(gbc.readMem(0xadca), 0x9);
        // CB 09 02D0
        gbc.setState(0xae54, 0x8598, 0xe190, 0x354e, 0x189f, 0xc6d6, 0x0, 0x1);
        gbc.writeMem(0xae54, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8598);
        EXPECT(gbc.pc(), 0xae56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae54), 0xcb);
        EXPECT(gbc.readMem(0xae55), 0x9);
        // CB 09 02D1
        gbc.setState(0x126d, 0x48aa, 0xec80, 0x9786, 0x1e9e, 0xdc76, 0x1, 0x1);
        gbc.writeMem(0x126d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x48aa);
        EXPECT(gbc.pc(), 0x126f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02D2
        gbc.setState(0x5b07, 0x40df, 0xb380, 0xb33d, 0xb2e, 0x828c, 0x1, 0x0);
        gbc.writeMem(0x5b07, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x40df);
        EXPECT(gbc.pc(), 0x5b09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02D3
        gbc.setState(0x6357, 0xd618, 0x160, 0x93, 0xb115, 0xb571, 0x1, 0x0);
        gbc.writeMem(0x6357, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd618);
        EXPECT(gbc.pc(), 0x6359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02D4
        gbc.setState(0x12, 0x3a6e, 0xa710, 0xff94, 0x4e94, 0x6abe, 0x0, 0x1);
        gbc.writeMem(0x12, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3a6e);
        EXPECT(gbc.pc(), 0x14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02D5
        gbc.setState(0x946e, 0x9d9b, 0xb260, 0x3cf8, 0x6ed, 0x7ed9, 0x0, 0x1);
        gbc.writeMem(0x946e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9d9b);
        EXPECT(gbc.pc(), 0x9470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x946e), 0xcb);
        EXPECT(gbc.readMem(0x946f), 0x9);
        // CB 09 02D6
        gbc.setState(0x9, 0x4dcb, 0x5040, 0x53db, 0x5655, 0x13c8, 0x0, 0x1);
        gbc.writeMem(0x9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4dcb);
        EXPECT(gbc.pc(), 0xb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02D7
        gbc.setState(0xeee4, 0x30f5, 0xd540, 0x6375, 0xb94b, 0x6a51, 0x1, 0x0);
        gbc.writeMem(0xeee4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x30f5);
        EXPECT(gbc.pc(), 0xeee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeee4), 0xcb);
        EXPECT(gbc.readMem(0xeee5), 0x9);
        // CB 09 02D8
        gbc.setState(0x15, 0xb3ea, 0x35d0, 0x88da, 0x94a3, 0xd05f, 0x0, 0x0);
        gbc.writeMem(0x15, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb3ea);
        EXPECT(gbc.pc(), 0x17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02D9
        gbc.setState(0x232a, 0x23c3, 0xd580, 0x2f9a, 0x5b51, 0xab23, 0x1, 0x1);
        gbc.writeMem(0x232a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x23c3);
        EXPECT(gbc.pc(), 0x232c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02DB
        gbc.setState(0x81de, 0x1855, 0x9de0, 0xd184, 0x74fe, 0x5d30, 0x0, 0x1);
        gbc.writeMem(0x81de, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1855);
        EXPECT(gbc.pc(), 0x81e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81de), 0xcb);
        EXPECT(gbc.readMem(0x81df), 0x9);
        // CB 09 02DC
        gbc.setState(0xa99f, 0x20, 0xaa40, 0x11c1, 0x2856, 0xd7b1, 0x0, 0x0);
        gbc.writeMem(0xa99f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x20);
        EXPECT(gbc.pc(), 0xa9a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa99f), 0xcb);
        EXPECT(gbc.readMem(0xa9a0), 0x9);
        // CB 09 02DD
        gbc.setState(0x5939, 0xb67a, 0x78a0, 0x57ca, 0xbbcb, 0x1173, 0x0, 0x1);
        gbc.writeMem(0x5939, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xb67a);
        EXPECT(gbc.pc(), 0x593b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02DF
        gbc.setState(0xc4fd, 0x31bb, 0x49b0, 0x116a, 0xf7f3, 0x8a85, 0x1, 0x1);
        gbc.writeMem(0xc4fd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x31bb);
        EXPECT(gbc.pc(), 0xc4ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4fd), 0xcb);
        EXPECT(gbc.readMem(0xc4fe), 0x9);
        // CB 09 02E0
        gbc.setState(0x8fb5, 0x9e98, 0xb50, 0xca95, 0xe2fb, 0xf5f, 0x1, 0x0);
        gbc.writeMem(0x8fb5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9e98);
        EXPECT(gbc.pc(), 0x8fb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fb5), 0xcb);
        EXPECT(gbc.readMem(0x8fb6), 0x9);
        // CB 09 02E1
        gbc.setState(0xee0e, 0x7df0, 0xa630, 0x1333, 0xf850, 0xccf, 0x0, 0x0);
        gbc.writeMem(0xee0e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7df0);
        EXPECT(gbc.pc(), 0xee10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee0e), 0xcb);
        EXPECT(gbc.readMem(0xee0f), 0x9);
        // CB 09 02E2
        gbc.setState(0xdabe, 0xe5ac, 0x5b90, 0x94c7, 0xcae0, 0x2df8, 0x0, 0x1);
        gbc.writeMem(0xdabe, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe5ac);
        EXPECT(gbc.pc(), 0xdac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdabe), 0xcb);
        EXPECT(gbc.readMem(0xdabf), 0x9);
        // CB 09 02E3
        gbc.setState(0x966a, 0x727e, 0x10b0, 0xbdf3, 0x9296, 0x6f97, 0x1, 0x0);
        gbc.writeMem(0x966a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x727e);
        EXPECT(gbc.pc(), 0x966c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x966a), 0xcb);
        EXPECT(gbc.readMem(0x966b), 0x9);
        // CB 09 02E4
        gbc.setState(0x7b73, 0xa980, 0xbb60, 0xbddc, 0x33cc, 0x97ea, 0x0, 0x0);
        gbc.writeMem(0x7b73, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa980);
        EXPECT(gbc.pc(), 0x7b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02E5
        gbc.setState(0x4977, 0x8352, 0xbd0, 0x15db, 0xb01d, 0xa884, 0x0, 0x1);
        gbc.writeMem(0x4977, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8352);
        EXPECT(gbc.pc(), 0x4979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02E6
        gbc.setState(0x39db, 0x1730, 0xc160, 0x8eee, 0xc82b, 0xfa2a, 0x0, 0x0);
        gbc.writeMem(0x39db, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1730);
        EXPECT(gbc.pc(), 0x39dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02E7
        gbc.setState(0xde91, 0xafd, 0x98e0, 0xbe53, 0xa77e, 0x58f, 0x0, 0x0);
        gbc.writeMem(0xde91, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xafd);
        EXPECT(gbc.pc(), 0xde93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde91), 0xcb);
        EXPECT(gbc.readMem(0xde92), 0x9);
        // CB 09 02E8
        gbc.setState(0xa358, 0xd08, 0xfb0, 0xfcaf, 0xbd18, 0x2340, 0x0, 0x0);
        gbc.writeMem(0xa358, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd08);
        EXPECT(gbc.pc(), 0xa35a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa358), 0xcb);
        EXPECT(gbc.readMem(0xa359), 0x9);
        // CB 09 02E9
        gbc.setState(0x7951, 0x9e7b, 0x21a0, 0x84b9, 0xc060, 0x7817, 0x0, 0x1);
        gbc.writeMem(0x7951, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9e7b);
        EXPECT(gbc.pc(), 0x7953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02EA
        gbc.setState(0x32db, 0xc863, 0xed90, 0xff6e, 0x50c2, 0x8cc, 0x0, 0x0);
        gbc.writeMem(0x32db, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc863);
        EXPECT(gbc.pc(), 0x32dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02EB
        gbc.setState(0xd85c, 0x50cf, 0x5bc0, 0x1b97, 0x57e0, 0xbcfe, 0x0, 0x0);
        gbc.writeMem(0xd85c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x50cf);
        EXPECT(gbc.pc(), 0xd85e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd85c), 0xcb);
        EXPECT(gbc.readMem(0xd85d), 0x9);
        // CB 09 02EC
        gbc.setState(0x5811, 0x68bc, 0x91a0, 0xecf2, 0x459c, 0x1a4d, 0x1, 0x0);
        gbc.writeMem(0x5811, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x68bc);
        EXPECT(gbc.pc(), 0x5813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02ED
        gbc.setState(0x9ebe, 0x9757, 0x3b30, 0x4c27, 0x1dd2, 0x67e3, 0x1, 0x1);
        gbc.writeMem(0x9ebe, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9757);
        EXPECT(gbc.pc(), 0x9ec0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ebe), 0xcb);
        EXPECT(gbc.readMem(0x9ebf), 0x9);
        // CB 09 02EE
        gbc.setState(0x1ad4, 0x224c, 0xf650, 0x8e0f, 0x77b, 0xf499, 0x0, 0x1);
        gbc.writeMem(0x1ad4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x224c);
        EXPECT(gbc.pc(), 0x1ad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02EF
        gbc.setState(0xaebb, 0x6a91, 0x8b90, 0xe01c, 0x6dbc, 0xd852, 0x1, 0x1);
        gbc.writeMem(0xaebb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6a91);
        EXPECT(gbc.pc(), 0xaebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaebb), 0xcb);
        EXPECT(gbc.readMem(0xaebc), 0x9);
        // CB 09 02F0
        gbc.setState(0xc8bd, 0xbd11, 0xdf90, 0x8690, 0x3481, 0x77f3, 0x0, 0x0);
        gbc.writeMem(0xc8bd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbd11);
        EXPECT(gbc.pc(), 0xc8bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8bd), 0xcb);
        EXPECT(gbc.readMem(0xc8be), 0x9);
        // CB 09 02F1
        gbc.setState(0x1101, 0x54cd, 0xd7d0, 0xc562, 0xb04c, 0x3478, 0x0, 0x1);
        gbc.writeMem(0x1101, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x54cd);
        EXPECT(gbc.pc(), 0x1103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02F2
        gbc.setState(0xe3d, 0x4fb7, 0x9aa0, 0x53e, 0xad9e, 0x1d52, 0x1, 0x0);
        gbc.writeMem(0xe3d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4fb7);
        EXPECT(gbc.pc(), 0xe3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02F3
        gbc.setState(0x97e1, 0x2378, 0xf610, 0x138b, 0x63d8, 0xa431, 0x1, 0x1);
        gbc.writeMem(0x97e1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2378);
        EXPECT(gbc.pc(), 0x97e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97e1), 0xcb);
        EXPECT(gbc.readMem(0x97e2), 0x9);
        // CB 09 02F4
        gbc.setState(0xe63f, 0x5b2b, 0x60e0, 0x40b6, 0x3548, 0x7bf4, 0x0, 0x0);
        gbc.writeMem(0xe63f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5b2b);
        EXPECT(gbc.pc(), 0xe641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe63f), 0xcb);
        EXPECT(gbc.readMem(0xe640), 0x9);
        // CB 09 02F5
        gbc.setState(0xc82d, 0x1bde, 0x1ce0, 0x7fcb, 0x7084, 0x8206, 0x0, 0x0);
        gbc.writeMem(0xc82d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1bde);
        EXPECT(gbc.pc(), 0xc82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc82d), 0xcb);
        EXPECT(gbc.readMem(0xc82e), 0x9);
        // CB 09 02F6
        gbc.setState(0x10f0, 0x3806, 0x4060, 0xb14, 0xbd77, 0x3a14, 0x0, 0x1);
        gbc.writeMem(0x10f0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3806);
        EXPECT(gbc.pc(), 0x10f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02F7
        gbc.setState(0xbe53, 0xedd9, 0xada0, 0x91ae, 0xf8d8, 0xbfec, 0x1, 0x1);
        gbc.writeMem(0xbe53, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xedd9);
        EXPECT(gbc.pc(), 0xbe55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe53), 0xcb);
        EXPECT(gbc.readMem(0xbe54), 0x9);
        // CB 09 02F8
        gbc.setState(0x63da, 0x995a, 0x440, 0x94eb, 0x8f26, 0xb010, 0x1, 0x1);
        gbc.writeMem(0x63da, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x995a);
        EXPECT(gbc.pc(), 0x63dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 02F9
        gbc.setState(0x86d, 0x808c, 0x6b80, 0x29b8, 0x9d94, 0x1b79, 0x0, 0x1);
        gbc.writeMem(0x86d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x808c);
        EXPECT(gbc.pc(), 0x86f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02FA
        gbc.setState(0xbc69, 0xe6a4, 0x3210, 0x8d9b, 0x32f0, 0x79ba, 0x0, 0x0);
        gbc.writeMem(0xbc69, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe6a4);
        EXPECT(gbc.pc(), 0xbc6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc69), 0xcb);
        EXPECT(gbc.readMem(0xbc6a), 0x9);
        // CB 09 02FB
        gbc.setState(0xda60, 0x7f18, 0x3b60, 0x7dfc, 0x16cc, 0x3f5f, 0x0, 0x0);
        gbc.writeMem(0xda60, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7f18);
        EXPECT(gbc.pc(), 0xda62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda60), 0xcb);
        EXPECT(gbc.readMem(0xda61), 0x9);
        // CB 09 02FC
        gbc.setState(0xab17, 0xc554, 0xe940, 0x4118, 0xcb5e, 0x8d71, 0x1, 0x1);
        gbc.writeMem(0xab17, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc554);
        EXPECT(gbc.pc(), 0xab19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab17), 0xcb);
        EXPECT(gbc.readMem(0xab18), 0x9);
        // CB 09 02FD
        gbc.setState(0x2098, 0xc25, 0x7490, 0xd7fe, 0xaa9f, 0x2d94, 0x0, 0x0);
        gbc.writeMem(0x2098, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc25);
        EXPECT(gbc.pc(), 0x209a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 02FE
        gbc.setState(0x9a23, 0xf0b6, 0xbd10, 0x3ef9, 0x33ba, 0x1d8, 0x1, 0x0);
        gbc.writeMem(0x9a23, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf0b6);
        EXPECT(gbc.pc(), 0x9a25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a23), 0xcb);
        EXPECT(gbc.readMem(0x9a24), 0x9);
        // CB 09 02FF
        gbc.setState(0x2090, 0x8d52, 0x7d30, 0x23a8, 0xf923, 0xcf1, 0x0, 0x0);
        gbc.writeMem(0x2090, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8d52);
        EXPECT(gbc.pc(), 0x2092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0300
        gbc.setState(0x7f06, 0x1195, 0x64b0, 0x76a9, 0x6fb5, 0xfdd7, 0x1, 0x1);
        gbc.writeMem(0x7f06, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1195);
        EXPECT(gbc.pc(), 0x7f08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0301
        gbc.setState(0xbe48, 0x8e08, 0x1e80, 0xce50, 0xb9c7, 0x28f0, 0x0, 0x0);
        gbc.writeMem(0xbe48, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8e08);
        EXPECT(gbc.pc(), 0xbe4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe48), 0xcb);
        EXPECT(gbc.readMem(0xbe49), 0x9);
        // CB 09 0302
        gbc.setState(0x8855, 0x74ce, 0xaed0, 0x5753, 0xa1d4, 0xe4a2, 0x0, 0x0);
        gbc.writeMem(0x8855, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x74ce);
        EXPECT(gbc.pc(), 0x8857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8855), 0xcb);
        EXPECT(gbc.readMem(0x8856), 0x9);
        // CB 09 0303
        gbc.setState(0xc1cd, 0x4b8c, 0xf7d0, 0x3970, 0x7726, 0x9788, 0x0, 0x1);
        gbc.writeMem(0xc1cd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4b8c);
        EXPECT(gbc.pc(), 0xc1cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1cd), 0xcb);
        EXPECT(gbc.readMem(0xc1ce), 0x9);
        // CB 09 0304
        gbc.setState(0x8f07, 0x4d41, 0x7be0, 0xcf73, 0x9999, 0xe095, 0x1, 0x0);
        gbc.writeMem(0x8f07, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4d41);
        EXPECT(gbc.pc(), 0x8f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f07), 0xcb);
        EXPECT(gbc.readMem(0x8f08), 0x9);
        // CB 09 0305
        gbc.setState(0xcae2, 0x5a70, 0xba60, 0xdec6, 0x615a, 0xaf2b, 0x1, 0x1);
        gbc.writeMem(0xcae2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5a70);
        EXPECT(gbc.pc(), 0xcae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae2), 0xcb);
        EXPECT(gbc.readMem(0xcae3), 0x9);
        // CB 09 0306
        gbc.setState(0x5692, 0x4450, 0x7f50, 0x8ab0, 0xd99b, 0x3cff, 0x0, 0x0);
        gbc.writeMem(0x5692, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4450);
        EXPECT(gbc.pc(), 0x5694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0307
        gbc.setState(0x2319, 0xa853, 0xbcb0, 0x635d, 0x5081, 0x57d9, 0x0, 0x0);
        gbc.writeMem(0x2319, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa853);
        EXPECT(gbc.pc(), 0x231b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0308
        gbc.setState(0xd1bb, 0x8b99, 0x5f20, 0xfcde, 0x432b, 0x4bf9, 0x1, 0x1);
        gbc.writeMem(0xd1bb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8b99);
        EXPECT(gbc.pc(), 0xd1bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1bb), 0xcb);
        EXPECT(gbc.readMem(0xd1bc), 0x9);
        // CB 09 0309
        gbc.setState(0x55d9, 0x743f, 0xa1d0, 0x7b45, 0x68b2, 0x4694, 0x0, 0x1);
        gbc.writeMem(0x55d9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x743f);
        EXPECT(gbc.pc(), 0x55db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 030A
        gbc.setState(0x13d8, 0x83d2, 0x1e50, 0x33a9, 0x7ff4, 0x4933, 0x1, 0x0);
        gbc.writeMem(0x13d8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x83d2);
        EXPECT(gbc.pc(), 0x13da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 030B
        gbc.setState(0xc152, 0xcf5e, 0x5bc0, 0xb3b7, 0xaa79, 0xa2a3, 0x1, 0x1);
        gbc.writeMem(0xc152, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xcf5e);
        EXPECT(gbc.pc(), 0xc154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc152), 0xcb);
        EXPECT(gbc.readMem(0xc153), 0x9);
        // CB 09 030C
        gbc.setState(0xba39, 0xc5d5, 0xc330, 0xfb46, 0x38c9, 0x4269, 0x0, 0x0);
        gbc.writeMem(0xba39, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc5d5);
        EXPECT(gbc.pc(), 0xba3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba39), 0xcb);
        EXPECT(gbc.readMem(0xba3a), 0x9);
        // CB 09 030D
        gbc.setState(0x4338, 0x2022, 0xcaa0, 0x22f6, 0x312b, 0x6d3a, 0x1, 0x0);
        gbc.writeMem(0x4338, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2022);
        EXPECT(gbc.pc(), 0x433a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 030E
        gbc.setState(0xca2d, 0x66af, 0x40d0, 0xac9c, 0x9f02, 0x65b9, 0x1, 0x0);
        gbc.writeMem(0xca2d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x66af);
        EXPECT(gbc.pc(), 0xca2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca2d), 0xcb);
        EXPECT(gbc.readMem(0xca2e), 0x9);
        // CB 09 030F
        gbc.setState(0x680a, 0xa9b4, 0x7ea0, 0x3af8, 0x7cff, 0x53b9, 0x1, 0x1);
        gbc.writeMem(0x680a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa9b4);
        EXPECT(gbc.pc(), 0x680c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0310
        gbc.setState(0x23de, 0xa397, 0xb0, 0x589, 0xd5bd, 0x6565, 0x1, 0x1);
        gbc.writeMem(0x23de, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa397);
        EXPECT(gbc.pc(), 0x23e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0311
        gbc.setState(0x1a2d, 0x2120, 0xbcd0, 0x65db, 0xb959, 0x8b90, 0x1, 0x0);
        gbc.writeMem(0x1a2d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2120);
        EXPECT(gbc.pc(), 0x1a2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0312
        gbc.setState(0xa992, 0xd1f7, 0xc330, 0x17af, 0x6159, 0x9ade, 0x1, 0x0);
        gbc.writeMem(0xa992, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd1f7);
        EXPECT(gbc.pc(), 0xa994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa992), 0xcb);
        EXPECT(gbc.readMem(0xa993), 0x9);
        // CB 09 0313
        gbc.setState(0xcc05, 0xdaf9, 0x3d40, 0xd927, 0x1afb, 0xae04, 0x0, 0x1);
        gbc.writeMem(0xcc05, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xdaf9);
        EXPECT(gbc.pc(), 0xcc07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc05), 0xcb);
        EXPECT(gbc.readMem(0xcc06), 0x9);
        // CB 09 0314
        gbc.setState(0xe450, 0xab84, 0x2bb0, 0x7b97, 0x11da, 0x4f87, 0x0, 0x0);
        gbc.writeMem(0xe450, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xab84);
        EXPECT(gbc.pc(), 0xe452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe450), 0xcb);
        EXPECT(gbc.readMem(0xe451), 0x9);
        // CB 09 0315
        gbc.setState(0xe7a3, 0xce37, 0xeaa0, 0xf2f7, 0x627a, 0x1826, 0x1, 0x1);
        gbc.writeMem(0xe7a3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xce37);
        EXPECT(gbc.pc(), 0xe7a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7a3), 0xcb);
        EXPECT(gbc.readMem(0xe7a4), 0x9);
        // CB 09 0316
        gbc.setState(0x2f0b, 0x5e97, 0xb980, 0x9da8, 0x5c3d, 0xc092, 0x0, 0x1);
        gbc.writeMem(0x2f0b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5e97);
        EXPECT(gbc.pc(), 0x2f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0317
        gbc.setState(0xcae7, 0x8609, 0xf660, 0x2a93, 0xa8a6, 0x908d, 0x1, 0x1);
        gbc.writeMem(0xcae7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8609);
        EXPECT(gbc.pc(), 0xcae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcae7), 0xcb);
        EXPECT(gbc.readMem(0xcae8), 0x9);
        // CB 09 0318
        gbc.setState(0xa4a9, 0x6cdd, 0x8d60, 0xe143, 0xcb05, 0xa8b4, 0x1, 0x1);
        gbc.writeMem(0xa4a9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6cdd);
        EXPECT(gbc.pc(), 0xa4ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a9), 0xcb);
        EXPECT(gbc.readMem(0xa4aa), 0x9);
        // CB 09 0319
        gbc.setState(0x70bf, 0xf7ed, 0xc610, 0xa563, 0x8b31, 0xbe8e, 0x1, 0x1);
        gbc.writeMem(0x70bf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf7ed);
        EXPECT(gbc.pc(), 0x70c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 031A
        gbc.setState(0x5072, 0x6d23, 0xbf40, 0xffa, 0x38c6, 0xa197, 0x0, 0x0);
        gbc.writeMem(0x5072, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6d23);
        EXPECT(gbc.pc(), 0x5074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 031B
        gbc.setState(0xd9cb, 0xf934, 0x2880, 0x4b82, 0x94f4, 0x9b8b, 0x0, 0x1);
        gbc.writeMem(0xd9cb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf934);
        EXPECT(gbc.pc(), 0xd9cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9cb), 0xcb);
        EXPECT(gbc.readMem(0xd9cc), 0x9);
        // CB 09 031C
        gbc.setState(0xbed0, 0xe706, 0xaf90, 0x1bc2, 0xdbbf, 0x752d, 0x1, 0x1);
        gbc.writeMem(0xbed0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe706);
        EXPECT(gbc.pc(), 0xbed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed0), 0xcb);
        EXPECT(gbc.readMem(0xbed1), 0x9);
        // CB 09 031D
        gbc.setState(0xd47e, 0xb61e, 0x6960, 0xb9a5, 0xd4c3, 0x96f9, 0x0, 0x1);
        gbc.writeMem(0xd47e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb61e);
        EXPECT(gbc.pc(), 0xd480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47e), 0xcb);
        EXPECT(gbc.readMem(0xd47f), 0x9);
        // CB 09 031E
        gbc.setState(0x6ce4, 0xaf6f, 0xb600, 0x5af9, 0xc17d, 0xd541, 0x1, 0x0);
        gbc.writeMem(0x6ce4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xaf6f);
        EXPECT(gbc.pc(), 0x6ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 031F
        gbc.setState(0x3f95, 0x7c34, 0xddf0, 0x7676, 0x9cef, 0xa18b, 0x1, 0x1);
        gbc.writeMem(0x3f95, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7c34);
        EXPECT(gbc.pc(), 0x3f97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0320
        gbc.setState(0x1b46, 0x9a29, 0x3850, 0xc194, 0x7f82, 0xbaa5, 0x0, 0x0);
        gbc.writeMem(0x1b46, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9a29);
        EXPECT(gbc.pc(), 0x1b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0321
        gbc.setState(0x5e8d, 0x8089, 0x7e10, 0x704c, 0x7fb3, 0x92b4, 0x0, 0x1);
        gbc.writeMem(0x5e8d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8089);
        EXPECT(gbc.pc(), 0x5e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0322
        gbc.setState(0x3830, 0x8c6c, 0xb6f0, 0xb971, 0x5b94, 0x94ec, 0x1, 0x0);
        gbc.writeMem(0x3830, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8c6c);
        EXPECT(gbc.pc(), 0x3832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0323
        gbc.setState(0xca34, 0xd6, 0x8150, 0x3e72, 0x303e, 0x398f, 0x0, 0x0);
        gbc.writeMem(0xca34, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd6);
        EXPECT(gbc.pc(), 0xca36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca34), 0xcb);
        EXPECT(gbc.readMem(0xca35), 0x9);
        // CB 09 0324
        gbc.setState(0x1e9b, 0x8f5a, 0x6e50, 0x9fa7, 0x10f7, 0x8093, 0x0, 0x0);
        gbc.writeMem(0x1e9b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8f5a);
        EXPECT(gbc.pc(), 0x1e9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0325
        gbc.setState(0x3a10, 0xb854, 0x1a40, 0x38dd, 0x8689, 0xd9fa, 0x1, 0x1);
        gbc.writeMem(0x3a10, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb854);
        EXPECT(gbc.pc(), 0x3a12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0326
        gbc.setState(0xc89e, 0x9084, 0xed50, 0xb554, 0x6865, 0xc9b1, 0x0, 0x1);
        gbc.writeMem(0xc89e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9084);
        EXPECT(gbc.pc(), 0xc8a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc89e), 0xcb);
        EXPECT(gbc.readMem(0xc89f), 0x9);
        // CB 09 0327
        gbc.setState(0xc85e, 0x5779, 0xd2c0, 0x4470, 0xaa2f, 0x1371, 0x0, 0x0);
        gbc.writeMem(0xc85e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5779);
        EXPECT(gbc.pc(), 0xc860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc85e), 0xcb);
        EXPECT(gbc.readMem(0xc85f), 0x9);
        // CB 09 0329
        gbc.setState(0xe850, 0xc66c, 0xaf80, 0xa96b, 0x3113, 0x72e3, 0x1, 0x0);
        gbc.writeMem(0xe850, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc66c);
        EXPECT(gbc.pc(), 0xe852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe850), 0xcb);
        EXPECT(gbc.readMem(0xe851), 0x9);
        // CB 09 032A
        gbc.setState(0xd83c, 0x1c8a, 0x6d20, 0x3c76, 0x2699, 0x6e7b, 0x1, 0x1);
        gbc.writeMem(0xd83c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1c8a);
        EXPECT(gbc.pc(), 0xd83e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd83c), 0xcb);
        EXPECT(gbc.readMem(0xd83d), 0x9);
        // CB 09 032B
        gbc.setState(0xd98, 0xc139, 0xce90, 0x7eb5, 0x427b, 0x763e, 0x0, 0x1);
        gbc.writeMem(0xd98, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc139);
        EXPECT(gbc.pc(), 0xd9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 032C
        gbc.setState(0xbd92, 0x48b5, 0xeb50, 0x1403, 0xbba9, 0xa480, 0x1, 0x0);
        gbc.writeMem(0xbd92, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x48b5);
        EXPECT(gbc.pc(), 0xbd94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd92), 0xcb);
        EXPECT(gbc.readMem(0xbd93), 0x9);
        // CB 09 032D
        gbc.setState(0xeb21, 0x305f, 0xf880, 0x197b, 0x9c3a, 0xb5b2, 0x1, 0x0);
        gbc.writeMem(0xeb21, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x305f);
        EXPECT(gbc.pc(), 0xeb23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb21), 0xcb);
        EXPECT(gbc.readMem(0xeb22), 0x9);
        // CB 09 032E
        gbc.setState(0x8898, 0x93ab, 0x9d0, 0x953b, 0xf9a2, 0xce34, 0x1, 0x1);
        gbc.writeMem(0x8898, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x93ab);
        EXPECT(gbc.pc(), 0x889a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8898), 0xcb);
        EXPECT(gbc.readMem(0x8899), 0x9);
        // CB 09 032F
        gbc.setState(0xe989, 0xc9c3, 0xeaa0, 0xc059, 0x2ebd, 0xfdc7, 0x1, 0x1);
        gbc.writeMem(0xe989, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc9c3);
        EXPECT(gbc.pc(), 0xe98b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe989), 0xcb);
        EXPECT(gbc.readMem(0xe98a), 0x9);
        // CB 09 0330
        gbc.setState(0x874b, 0xbf21, 0xabe0, 0xd7ca, 0xe5b6, 0xd6df, 0x0, 0x1);
        gbc.writeMem(0x874b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xbf21);
        EXPECT(gbc.pc(), 0x874d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x874b), 0xcb);
        EXPECT(gbc.readMem(0x874c), 0x9);
        // CB 09 0331
        gbc.setState(0x5c44, 0x5ba0, 0xd770, 0x5c71, 0xf790, 0xb23, 0x1, 0x0);
        gbc.writeMem(0x5c44, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5ba0);
        EXPECT(gbc.pc(), 0x5c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0332
        gbc.setState(0xada9, 0xc971, 0x8cc0, 0xdfe7, 0x7606, 0x40a6, 0x1, 0x1);
        gbc.writeMem(0xada9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc971);
        EXPECT(gbc.pc(), 0xadab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xada9), 0xcb);
        EXPECT(gbc.readMem(0xadaa), 0x9);
        // CB 09 0333
        gbc.setState(0x8ee9, 0x9672, 0x4490, 0xc12, 0x9b0f, 0x33d1, 0x0, 0x1);
        gbc.writeMem(0x8ee9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9672);
        EXPECT(gbc.pc(), 0x8eeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee9), 0xcb);
        EXPECT(gbc.readMem(0x8eea), 0x9);
        // CB 09 0334
        gbc.setState(0x4f22, 0x8b47, 0x32d0, 0x9ecc, 0x9eed, 0xdd6e, 0x0, 0x0);
        gbc.writeMem(0x4f22, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8b47);
        EXPECT(gbc.pc(), 0x4f24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0335
        gbc.setState(0x1902, 0x8c37, 0x2740, 0x7e5, 0xd1f9, 0x9de5, 0x0, 0x1);
        gbc.writeMem(0x1902, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8c37);
        EXPECT(gbc.pc(), 0x1904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0336
        gbc.setState(0x2f35, 0x5d1, 0x4090, 0x10a2, 0x650f, 0x4303, 0x1, 0x0);
        gbc.writeMem(0x2f35, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5d1);
        EXPECT(gbc.pc(), 0x2f37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0337
        gbc.setState(0xa3f, 0x8236, 0xb6a0, 0xfd44, 0xa1f1, 0x181c, 0x1, 0x0);
        gbc.writeMem(0xa3f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8236);
        EXPECT(gbc.pc(), 0xa41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0338
        gbc.setState(0xc592, 0xaba5, 0xa080, 0xa506, 0x5e94, 0xba25, 0x0, 0x1);
        gbc.writeMem(0xc592, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xaba5);
        EXPECT(gbc.pc(), 0xc594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc592), 0xcb);
        EXPECT(gbc.readMem(0xc593), 0x9);
        // CB 09 0339
        gbc.setState(0x7c4b, 0x9380, 0x3810, 0x1ec, 0x6805, 0xb47e, 0x0, 0x0);
        gbc.writeMem(0x7c4b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9380);
        EXPECT(gbc.pc(), 0x7c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 033A
        gbc.setState(0x597c, 0xaf96, 0x3c50, 0x416f, 0xbc40, 0x9c3f, 0x0, 0x1);
        gbc.writeMem(0x597c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xaf96);
        EXPECT(gbc.pc(), 0x597e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 033B
        gbc.setState(0x7f67, 0xc82b, 0xffa0, 0x4916, 0x3961, 0x9dd0, 0x0, 0x1);
        gbc.writeMem(0x7f67, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc82b);
        EXPECT(gbc.pc(), 0x7f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 033C
        gbc.setState(0xec45, 0xec24, 0xc0f0, 0x4dfd, 0x84ac, 0x4383, 0x1, 0x1);
        gbc.writeMem(0xec45, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xec24);
        EXPECT(gbc.pc(), 0xec47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec45), 0xcb);
        EXPECT(gbc.readMem(0xec46), 0x9);
        // CB 09 033D
        gbc.setState(0x90c4, 0x214a, 0xe250, 0x7ea6, 0xdf73, 0xa49c, 0x0, 0x0);
        gbc.writeMem(0x90c4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x214a);
        EXPECT(gbc.pc(), 0x90c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c4), 0xcb);
        EXPECT(gbc.readMem(0x90c5), 0x9);
        // CB 09 033E
        gbc.setState(0x511e, 0xb151, 0x8420, 0xbb4e, 0xf303, 0xf4e6, 0x1, 0x1);
        gbc.writeMem(0x511e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb151);
        EXPECT(gbc.pc(), 0x5120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 033F
        gbc.setState(0x69c3, 0x4663, 0xb960, 0x83d1, 0x498f, 0x7350, 0x0, 0x1);
        gbc.writeMem(0x69c3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4663);
        EXPECT(gbc.pc(), 0x69c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0341
        gbc.setState(0xdffe, 0x8884, 0x15d0, 0x1f68, 0x6bbf, 0xac1b, 0x0, 0x0);
        gbc.writeMem(0xdffe, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8884);
        EXPECT(gbc.pc(), 0xe000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdffe), 0xcb);
        EXPECT(gbc.readMem(0xdfff), 0x9);
        // CB 09 0342
        gbc.setState(0xe0cf, 0xd82c, 0x13e0, 0x8623, 0x3723, 0x40e1, 0x0, 0x0);
        gbc.writeMem(0xe0cf, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd82c);
        EXPECT(gbc.pc(), 0xe0d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0cf), 0xcb);
        EXPECT(gbc.readMem(0xe0d0), 0x9);
        // CB 09 0343
        gbc.setState(0x553f, 0x1aec, 0x42b0, 0xf53, 0x41dc, 0x9db9, 0x0, 0x0);
        gbc.writeMem(0x553f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1aec);
        EXPECT(gbc.pc(), 0x5541);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0344
        gbc.setState(0xe013, 0xfe18, 0xa10, 0x238a, 0x832a, 0xc5ca, 0x0, 0x0);
        gbc.writeMem(0xe013, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xfe18);
        EXPECT(gbc.pc(), 0xe015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe013), 0xcb);
        EXPECT(gbc.readMem(0xe014), 0x9);
        // CB 09 0345
        gbc.setState(0x3f8d, 0x126c, 0x9770, 0x5787, 0x4e37, 0x6f60, 0x1, 0x1);
        gbc.writeMem(0x3f8d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x126c);
        EXPECT(gbc.pc(), 0x3f8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0346
        gbc.setState(0x52d, 0x415e, 0x9d0, 0xf820, 0x4a75, 0xc3ab, 0x1, 0x0);
        gbc.writeMem(0x52d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x415e);
        EXPECT(gbc.pc(), 0x52f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0347
        gbc.setState(0x379, 0xdfe7, 0x9160, 0xb323, 0xb833, 0xced5, 0x1, 0x1);
        gbc.writeMem(0x379, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdfe7);
        EXPECT(gbc.pc(), 0x37b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0348
        gbc.setState(0x3ea5, 0x930a, 0x6e70, 0x9445, 0xc2d8, 0x2568, 0x0, 0x1);
        gbc.writeMem(0x3ea5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x930a);
        EXPECT(gbc.pc(), 0x3ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0349
        gbc.setState(0x7818, 0x9c4b, 0xe390, 0x6f37, 0x37c7, 0x97ec, 0x0, 0x1);
        gbc.writeMem(0x7818, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9c4b);
        EXPECT(gbc.pc(), 0x781a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 034B
        gbc.setState(0x17df, 0x6d3a, 0x2f80, 0x7a91, 0xb54d, 0x521, 0x0, 0x1);
        gbc.writeMem(0x17df, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6d3a);
        EXPECT(gbc.pc(), 0x17e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 034C
        gbc.setState(0xafea, 0xefa6, 0xb500, 0xe3ea, 0x4f44, 0x36fb, 0x0, 0x0);
        gbc.writeMem(0xafea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xefa6);
        EXPECT(gbc.pc(), 0xafec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafea), 0xcb);
        EXPECT(gbc.readMem(0xafeb), 0x9);
        // CB 09 034D
        gbc.setState(0x51bd, 0x8cff, 0xfa50, 0x3857, 0xf570, 0x4a81, 0x0, 0x0);
        gbc.writeMem(0x51bd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8cff);
        EXPECT(gbc.pc(), 0x51bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 034F
        gbc.setState(0xa49b, 0x598e, 0x310, 0xa3e, 0x9757, 0xd410, 0x0, 0x1);
        gbc.writeMem(0xa49b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x598e);
        EXPECT(gbc.pc(), 0xa49d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49b), 0xcb);
        EXPECT(gbc.readMem(0xa49c), 0x9);
        // CB 09 0350
        gbc.setState(0xd753, 0x6067, 0x85a0, 0x808a, 0x561b, 0xbac0, 0x1, 0x1);
        gbc.writeMem(0xd753, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6067);
        EXPECT(gbc.pc(), 0xd755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd753), 0xcb);
        EXPECT(gbc.readMem(0xd754), 0x9);
        // CB 09 0351
        gbc.setState(0x7a0c, 0xbf12, 0xef80, 0x2425, 0xd4f3, 0x97bc, 0x0, 0x1);
        gbc.writeMem(0x7a0c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbf12);
        EXPECT(gbc.pc(), 0x7a0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0352
        gbc.setState(0x2261, 0xb39a, 0x9270, 0x46f2, 0x2b67, 0x816a, 0x0, 0x1);
        gbc.writeMem(0x2261, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb39a);
        EXPECT(gbc.pc(), 0x2263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0353
        gbc.setState(0x8cce, 0xb649, 0x330, 0x6f9f, 0x585c, 0xf67c, 0x1, 0x0);
        gbc.writeMem(0x8cce, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb649);
        EXPECT(gbc.pc(), 0x8cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cce), 0xcb);
        EXPECT(gbc.readMem(0x8ccf), 0x9);
        // CB 09 0354
        gbc.setState(0x8130, 0x3156, 0x4a80, 0x774f, 0x327a, 0x7286, 0x1, 0x0);
        gbc.writeMem(0x8130, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3156);
        EXPECT(gbc.pc(), 0x8132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8130), 0xcb);
        EXPECT(gbc.readMem(0x8131), 0x9);
        // CB 09 0355
        gbc.setState(0x6b7c, 0x796a, 0x8870, 0x107c, 0x1a7c, 0x9c85, 0x0, 0x0);
        gbc.writeMem(0x6b7c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x796a);
        EXPECT(gbc.pc(), 0x6b7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0356
        gbc.setState(0x2599, 0xf118, 0x5890, 0x447c, 0x7e62, 0x5a3a, 0x0, 0x0);
        gbc.writeMem(0x2599, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf118);
        EXPECT(gbc.pc(), 0x259b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0357
        gbc.setState(0xcbe7, 0xd778, 0x1f50, 0x148a, 0x1d55, 0x9518, 0x1, 0x1);
        gbc.writeMem(0xcbe7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd778);
        EXPECT(gbc.pc(), 0xcbe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbe7), 0xcb);
        EXPECT(gbc.readMem(0xcbe8), 0x9);
        // CB 09 0358
        gbc.setState(0x3c30, 0x723f, 0xc0, 0xdffc, 0x2097, 0xb230, 0x0, 0x0);
        gbc.writeMem(0x3c30, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x723f);
        EXPECT(gbc.pc(), 0x3c32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0359
        gbc.setState(0x56d3, 0x3a07, 0x59b0, 0xbf8d, 0x448, 0xf834, 0x0, 0x1);
        gbc.writeMem(0x56d3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3a07);
        EXPECT(gbc.pc(), 0x56d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 035A
        gbc.setState(0x6aaa, 0x7dbb, 0x4f60, 0x14d4, 0xa2e, 0xab5e, 0x1, 0x0);
        gbc.writeMem(0x6aaa, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7dbb);
        EXPECT(gbc.pc(), 0x6aac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 035B
        gbc.setState(0x1e3a, 0xddb6, 0xf30, 0xd0e0, 0xfa59, 0x55ff, 0x1, 0x1);
        gbc.writeMem(0x1e3a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xddb6);
        EXPECT(gbc.pc(), 0x1e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 035C
        gbc.setState(0xefba, 0x62e3, 0x1ec0, 0x3448, 0x70e8, 0x9472, 0x0, 0x1);
        gbc.writeMem(0xefba, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x62e3);
        EXPECT(gbc.pc(), 0xefbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefba), 0xcb);
        EXPECT(gbc.readMem(0xefbb), 0x9);
        // CB 09 035D
        gbc.setState(0x88df, 0x6c8f, 0x7df0, 0xb85c, 0x301f, 0x5593, 0x0, 0x0);
        gbc.writeMem(0x88df, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6c8f);
        EXPECT(gbc.pc(), 0x88e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88df), 0xcb);
        EXPECT(gbc.readMem(0x88e0), 0x9);
        // CB 09 035E
        gbc.setState(0x892c, 0xfa9b, 0xc160, 0xba9f, 0xde05, 0xaa46, 0x1, 0x0);
        gbc.writeMem(0x892c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfa9b);
        EXPECT(gbc.pc(), 0x892e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x892c), 0xcb);
        EXPECT(gbc.readMem(0x892d), 0x9);
        // CB 09 035F
        gbc.setState(0xd8ab, 0xc1a6, 0xeca0, 0x6457, 0x8b8f, 0x1f0b, 0x0, 0x1);
        gbc.writeMem(0xd8ab, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc1a6);
        EXPECT(gbc.pc(), 0xd8ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8ab), 0xcb);
        EXPECT(gbc.readMem(0xd8ac), 0x9);
        // CB 09 0360
        gbc.setState(0xe542, 0x1608, 0x5460, 0xcb2, 0x5b5c, 0xf47b, 0x1, 0x0);
        gbc.writeMem(0xe542, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1608);
        EXPECT(gbc.pc(), 0xe544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe542), 0xcb);
        EXPECT(gbc.readMem(0xe543), 0x9);
        // CB 09 0361
        gbc.setState(0x1166, 0x24b1, 0x47a0, 0x9474, 0x9a21, 0x71a1, 0x0, 0x0);
        gbc.writeMem(0x1166, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x24b1);
        EXPECT(gbc.pc(), 0x1168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0362
        gbc.setState(0x5191, 0x2e10, 0x5650, 0x4ef8, 0xeb7a, 0x4226, 0x0, 0x0);
        gbc.writeMem(0x5191, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2e10);
        EXPECT(gbc.pc(), 0x5193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0363
        gbc.setState(0x31e7, 0x1cce, 0x5060, 0x3c5c, 0xf3d1, 0x5268, 0x0, 0x0);
        gbc.writeMem(0x31e7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1cce);
        EXPECT(gbc.pc(), 0x31e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0364
        gbc.setState(0xb243, 0x6a8b, 0x51c0, 0xae65, 0x6c54, 0x5674, 0x0, 0x0);
        gbc.writeMem(0xb243, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6a8b);
        EXPECT(gbc.pc(), 0xb245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb243), 0xcb);
        EXPECT(gbc.readMem(0xb244), 0x9);
        // CB 09 0365
        gbc.setState(0xb42e, 0x8329, 0x5190, 0xdcff, 0x7ee5, 0x2d38, 0x1, 0x0);
        gbc.writeMem(0xb42e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8329);
        EXPECT(gbc.pc(), 0xb430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb42e), 0xcb);
        EXPECT(gbc.readMem(0xb42f), 0x9);
        // CB 09 0366
        gbc.setState(0xcf54, 0xe6b1, 0x74d0, 0xb3d3, 0x5504, 0xc39b, 0x1, 0x0);
        gbc.writeMem(0xcf54, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe6b1);
        EXPECT(gbc.pc(), 0xcf56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf54), 0xcb);
        EXPECT(gbc.readMem(0xcf55), 0x9);
        // CB 09 0367
        gbc.setState(0x14ae, 0x2b30, 0xefe0, 0x5640, 0x2745, 0x6d46, 0x1, 0x1);
        gbc.writeMem(0x14ae, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2b30);
        EXPECT(gbc.pc(), 0x14b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0368
        gbc.setState(0x3985, 0x3062, 0x71c0, 0xd07, 0xfe7c, 0xde8d, 0x1, 0x1);
        gbc.writeMem(0x3985, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3062);
        EXPECT(gbc.pc(), 0x3987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0369
        gbc.setState(0xc97e, 0x25a9, 0xf460, 0xd576, 0x3b34, 0xf1c7, 0x0, 0x1);
        gbc.writeMem(0xc97e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x25a9);
        EXPECT(gbc.pc(), 0xc980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc97e), 0xcb);
        EXPECT(gbc.readMem(0xc97f), 0x9);
        // CB 09 036A
        gbc.setState(0x6048, 0xebfc, 0xab90, 0xd831, 0x9522, 0xb00a, 0x0, 0x0);
        gbc.writeMem(0x6048, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xebfc);
        EXPECT(gbc.pc(), 0x604a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 036B
        gbc.setState(0x93a8, 0x78c9, 0x6030, 0xa24d, 0xfb25, 0x1bc5, 0x1, 0x0);
        gbc.writeMem(0x93a8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x78c9);
        EXPECT(gbc.pc(), 0x93aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93a8), 0xcb);
        EXPECT(gbc.readMem(0x93a9), 0x9);
        // CB 09 036C
        gbc.setState(0x2793, 0xc79d, 0xc7e0, 0xa300, 0x193b, 0x52eb, 0x0, 0x1);
        gbc.writeMem(0x2793, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc79d);
        EXPECT(gbc.pc(), 0x2795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 036D
        gbc.setState(0x8300, 0x67ad, 0x4390, 0xe7c1, 0x9369, 0x5bfd, 0x1, 0x0);
        gbc.writeMem(0x8300, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x67ad);
        EXPECT(gbc.pc(), 0x8302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8300), 0xcb);
        EXPECT(gbc.readMem(0x8301), 0x9);
        // CB 09 036E
        gbc.setState(0x5416, 0x8267, 0x5490, 0xe6b2, 0xd218, 0x39f7, 0x0, 0x0);
        gbc.writeMem(0x5416, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8267);
        EXPECT(gbc.pc(), 0x5418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 036F
        gbc.setState(0xd39e, 0xcbff, 0x84a0, 0x2de7, 0xf226, 0x6eeb, 0x1, 0x0);
        gbc.writeMem(0xd39e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xcbff);
        EXPECT(gbc.pc(), 0xd3a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd39e), 0xcb);
        EXPECT(gbc.readMem(0xd39f), 0x9);
        // CB 09 0370
        gbc.setState(0xa2d, 0xccfa, 0x5160, 0xd4e4, 0x8d0, 0xb3ef, 0x1, 0x0);
        gbc.writeMem(0xa2d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xccfa);
        EXPECT(gbc.pc(), 0xa2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0372
        gbc.setState(0xb1d5, 0x1524, 0xae60, 0x6c8a, 0xeb3e, 0x52ce, 0x0, 0x0);
        gbc.writeMem(0xb1d5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1524);
        EXPECT(gbc.pc(), 0xb1d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1d5), 0xcb);
        EXPECT(gbc.readMem(0xb1d6), 0x9);
        // CB 09 0373
        gbc.setState(0x12c8, 0x95b5, 0x8450, 0x7969, 0xe8df, 0x5cf8, 0x1, 0x0);
        gbc.writeMem(0x12c8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x95b5);
        EXPECT(gbc.pc(), 0x12ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0374
        gbc.setState(0xac98, 0x21a0, 0x8820, 0x2210, 0x2de8, 0xd50d, 0x0, 0x0);
        gbc.writeMem(0xac98, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x21a0);
        EXPECT(gbc.pc(), 0xac9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac98), 0xcb);
        EXPECT(gbc.readMem(0xac99), 0x9);
        // CB 09 0375
        gbc.setState(0x38e9, 0x4eea, 0xccf0, 0x9c12, 0xcfa4, 0x386b, 0x0, 0x1);
        gbc.writeMem(0x38e9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4eea);
        EXPECT(gbc.pc(), 0x38eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0376
        gbc.setState(0x9876, 0xb648, 0x440, 0xbefc, 0x6d0a, 0x1690, 0x0, 0x0);
        gbc.writeMem(0x9876, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb648);
        EXPECT(gbc.pc(), 0x9878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9876), 0xcb);
        EXPECT(gbc.readMem(0x9877), 0x9);
        // CB 09 0378
        gbc.setState(0xefc0, 0x90c1, 0xf9f0, 0x47eb, 0xd2cc, 0xd13, 0x1, 0x1);
        gbc.writeMem(0xefc0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x90c1);
        EXPECT(gbc.pc(), 0xefc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefc0), 0xcb);
        EXPECT(gbc.readMem(0xefc1), 0x9);
        // CB 09 0379
        gbc.setState(0x54c4, 0x37aa, 0xac40, 0x6175, 0xbc3e, 0x99d4, 0x0, 0x1);
        gbc.writeMem(0x54c4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x37aa);
        EXPECT(gbc.pc(), 0x54c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 037A
        gbc.setState(0x4a5c, 0xd09d, 0x9d0, 0xc012, 0x8163, 0x8c29, 0x1, 0x0);
        gbc.writeMem(0x4a5c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd09d);
        EXPECT(gbc.pc(), 0x4a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 037B
        gbc.setState(0xe2d2, 0x3000, 0x2b10, 0x24ee, 0x20e7, 0x7fc7, 0x0, 0x1);
        gbc.writeMem(0xe2d2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3000);
        EXPECT(gbc.pc(), 0xe2d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2d2), 0xcb);
        EXPECT(gbc.readMem(0xe2d3), 0x9);
        // CB 09 037C
        gbc.setState(0x2dc1, 0xd611, 0x1fd0, 0x8738, 0x362f, 0x223e, 0x1, 0x0);
        gbc.writeMem(0x2dc1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd611);
        EXPECT(gbc.pc(), 0x2dc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 037D
        gbc.setState(0x1d80, 0x8c2e, 0xce00, 0xd33, 0xbbd7, 0xfbcf, 0x1, 0x1);
        gbc.writeMem(0x1d80, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8c2e);
        EXPECT(gbc.pc(), 0x1d82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 037E
        gbc.setState(0xcd3, 0xe77c, 0x21c0, 0x48ea, 0xfa26, 0x4fa8, 0x1, 0x0);
        gbc.writeMem(0xcd3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe77c);
        EXPECT(gbc.pc(), 0xcd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 037F
        gbc.setState(0xcc69, 0xff14, 0x4d10, 0x19a, 0x21f3, 0xb6e0, 0x1, 0x0);
        gbc.writeMem(0xcc69, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xff14);
        EXPECT(gbc.pc(), 0xcc6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc69), 0xcb);
        EXPECT(gbc.readMem(0xcc6a), 0x9);
        // CB 09 0380
        gbc.setState(0x6340, 0x98d2, 0x8000, 0x4424, 0x9063, 0x80c7, 0x0, 0x1);
        gbc.writeMem(0x6340, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x98d2);
        EXPECT(gbc.pc(), 0x6342);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0381
        gbc.setState(0x5560, 0xab3e, 0xd010, 0xd79a, 0xcc58, 0x7f13, 0x1, 0x0);
        gbc.writeMem(0x5560, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xab3e);
        EXPECT(gbc.pc(), 0x5562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0382
        gbc.setState(0xb0ea, 0xe7be, 0xbe90, 0xe74e, 0x6afa, 0x4637, 0x1, 0x0);
        gbc.writeMem(0xb0ea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe7be);
        EXPECT(gbc.pc(), 0xb0ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ea), 0xcb);
        EXPECT(gbc.readMem(0xb0eb), 0x9);
        // CB 09 0383
        gbc.setState(0x821b, 0x83, 0xfd10, 0x4b72, 0x17f5, 0x81af, 0x1, 0x0);
        gbc.writeMem(0x821b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x83);
        EXPECT(gbc.pc(), 0x821d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821b), 0xcb);
        EXPECT(gbc.readMem(0x821c), 0x9);
        // CB 09 0384
        gbc.setState(0x1f5d, 0x1d7e, 0x5600, 0x4b72, 0x44ff, 0xcbf6, 0x0, 0x1);
        gbc.writeMem(0x1f5d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1d7e);
        EXPECT(gbc.pc(), 0x1f5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0385
        gbc.setState(0x2f27, 0xdcb1, 0xa0d0, 0x5291, 0x486b, 0x2d7c, 0x0, 0x0);
        gbc.writeMem(0x2f27, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdcb1);
        EXPECT(gbc.pc(), 0x2f29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0386
        gbc.setState(0x6e0, 0x50e9, 0xafe0, 0xeee8, 0xa258, 0xb396, 0x0, 0x1);
        gbc.writeMem(0x6e0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x50e9);
        EXPECT(gbc.pc(), 0x6e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0387
        gbc.setState(0x7f34, 0x7cdd, 0x9b40, 0x7f9a, 0xa61e, 0x2fd2, 0x1, 0x1);
        gbc.writeMem(0x7f34, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7cdd);
        EXPECT(gbc.pc(), 0x7f36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0388
        gbc.setState(0xa7b6, 0x21, 0xcfd0, 0x57b3, 0xa4ad, 0xa596, 0x0, 0x0);
        gbc.writeMem(0xa7b6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x21);
        EXPECT(gbc.pc(), 0xa7b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b6), 0xcb);
        EXPECT(gbc.readMem(0xa7b7), 0x9);
        // CB 09 0389
        gbc.setState(0x3495, 0xfff6, 0x6fc0, 0x224c, 0x36c7, 0x761a, 0x1, 0x1);
        gbc.writeMem(0x3495, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xfff6);
        EXPECT(gbc.pc(), 0x3497);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 038A
        gbc.setState(0xaff, 0x9e66, 0xb430, 0x34ea, 0x2f68, 0x36c1, 0x1, 0x1);
        gbc.writeMem(0xaff, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9e66);
        EXPECT(gbc.pc(), 0xb01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 038B
        gbc.setState(0x2b85, 0x524b, 0xf240, 0xf9c, 0x78f9, 0x611b, 0x1, 0x1);
        gbc.writeMem(0x2b85, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x524b);
        EXPECT(gbc.pc(), 0x2b87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 038C
        gbc.setState(0xef0b, 0x8762, 0xf310, 0xc48b, 0x5eca, 0xec23, 0x0, 0x0);
        gbc.writeMem(0xef0b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8762);
        EXPECT(gbc.pc(), 0xef0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef0b), 0xcb);
        EXPECT(gbc.readMem(0xef0c), 0x9);
        // CB 09 038D
        gbc.setState(0xea9b, 0xad9f, 0x4150, 0xa20f, 0x754d, 0x9461, 0x1, 0x0);
        gbc.writeMem(0xea9b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xad9f);
        EXPECT(gbc.pc(), 0xea9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea9b), 0xcb);
        EXPECT(gbc.readMem(0xea9c), 0x9);
        // CB 09 038E
        gbc.setState(0xe076, 0x1c26, 0x2ea0, 0x45d3, 0x9bf5, 0x78d6, 0x1, 0x1);
        gbc.writeMem(0xe076, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1c26);
        EXPECT(gbc.pc(), 0xe078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe076), 0xcb);
        EXPECT(gbc.readMem(0xe077), 0x9);
        // CB 09 038F
        gbc.setState(0xaf5f, 0xc8ba, 0x5290, 0x5094, 0x8cb0, 0x591e, 0x0, 0x1);
        gbc.writeMem(0xaf5f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc8ba);
        EXPECT(gbc.pc(), 0xaf61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf5f), 0xcb);
        EXPECT(gbc.readMem(0xaf60), 0x9);
        // CB 09 0390
        gbc.setState(0x25ea, 0x42b, 0x2e20, 0x19df, 0x8c48, 0xf246, 0x1, 0x1);
        gbc.writeMem(0x25ea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x42b);
        EXPECT(gbc.pc(), 0x25ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0391
        gbc.setState(0x750a, 0x6bc7, 0x5000, 0x573, 0x3fbb, 0xb173, 0x1, 0x1);
        gbc.writeMem(0x750a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6bc7);
        EXPECT(gbc.pc(), 0x750c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0392
        gbc.setState(0xc2cd, 0xfa8b, 0x9c60, 0x1448, 0x2e27, 0x88d4, 0x1, 0x0);
        gbc.writeMem(0xc2cd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfa8b);
        EXPECT(gbc.pc(), 0xc2cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2cd), 0xcb);
        EXPECT(gbc.readMem(0xc2ce), 0x9);
        // CB 09 0393
        gbc.setState(0x47eb, 0xa05f, 0xa0c0, 0x1016, 0x354d, 0x1e17, 0x0, 0x1);
        gbc.writeMem(0x47eb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa05f);
        EXPECT(gbc.pc(), 0x47ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0395
        gbc.setState(0x1618, 0x48c2, 0xbf40, 0xfc1e, 0xa5ff, 0xfc32, 0x0, 0x1);
        gbc.writeMem(0x1618, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x48c2);
        EXPECT(gbc.pc(), 0x161a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0396
        gbc.setState(0x59b4, 0x772d, 0xaa0, 0xacbe, 0x9f58, 0x8627, 0x0, 0x1);
        gbc.writeMem(0x59b4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x772d);
        EXPECT(gbc.pc(), 0x59b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 0397
        gbc.setState(0x399, 0x97b8, 0x10d0, 0x3227, 0xea51, 0x6980, 0x0, 0x0);
        gbc.writeMem(0x399, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x97b8);
        EXPECT(gbc.pc(), 0x39b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 0398
        gbc.setState(0xdfb6, 0xff98, 0xdb70, 0xfd24, 0xf8f7, 0x8007, 0x1, 0x0);
        gbc.writeMem(0xdfb6, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xff98);
        EXPECT(gbc.pc(), 0xdfb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb6), 0xcb);
        EXPECT(gbc.readMem(0xdfb7), 0x9);
        // CB 09 0399
        gbc.setState(0x687c, 0x291b, 0x5470, 0xd4e8, 0x9eb1, 0x264d, 0x1, 0x0);
        gbc.writeMem(0x687c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x291b);
        EXPECT(gbc.pc(), 0x687e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 039A
        gbc.setState(0xd420, 0x57f7, 0xc2b0, 0xd577, 0x4c89, 0xfed1, 0x0, 0x1);
        gbc.writeMem(0xd420, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x57f7);
        EXPECT(gbc.pc(), 0xd422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd420), 0xcb);
        EXPECT(gbc.readMem(0xd421), 0x9);
        // CB 09 039B
        gbc.setState(0xcf8f, 0xa68e, 0x2e0, 0xcb36, 0x913f, 0xc489, 0x0, 0x1);
        gbc.writeMem(0xcf8f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa68e);
        EXPECT(gbc.pc(), 0xcf91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf8f), 0xcb);
        EXPECT(gbc.readMem(0xcf90), 0x9);
        // CB 09 039C
        gbc.setState(0x6ec1, 0xb205, 0xf1f0, 0x35aa, 0xf0ab, 0x5729, 0x0, 0x1);
        gbc.writeMem(0x6ec1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb205);
        EXPECT(gbc.pc(), 0x6ec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 039D
        gbc.setState(0xd105, 0x5832, 0xca00, 0x9e77, 0x3690, 0xda7e, 0x0, 0x0);
        gbc.writeMem(0xd105, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5832);
        EXPECT(gbc.pc(), 0xd107);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd105), 0xcb);
        EXPECT(gbc.readMem(0xd106), 0x9);
        // CB 09 039E
        gbc.setState(0x8f59, 0xaf6a, 0x7490, 0x92f, 0x8b06, 0xe2f1, 0x1, 0x1);
        gbc.writeMem(0x8f59, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xaf6a);
        EXPECT(gbc.pc(), 0x8f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f59), 0xcb);
        EXPECT(gbc.readMem(0x8f5a), 0x9);
        // CB 09 039F
        gbc.setState(0x4cfd, 0x95fb, 0x6bd0, 0xcd1, 0x1785, 0x3931, 0x1, 0x0);
        gbc.writeMem(0x4cfd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x95fb);
        EXPECT(gbc.pc(), 0x4cff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03A0
        gbc.setState(0x255e, 0x6e7, 0x4e00, 0xe62, 0xcb18, 0x58f7, 0x1, 0x0);
        gbc.writeMem(0x255e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6e7);
        EXPECT(gbc.pc(), 0x2560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03A1
        gbc.setState(0xb95b, 0x5082, 0x4cc0, 0xaf7a, 0x35aa, 0xf35, 0x1, 0x1);
        gbc.writeMem(0xb95b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5082);
        EXPECT(gbc.pc(), 0xb95d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb95b), 0xcb);
        EXPECT(gbc.readMem(0xb95c), 0x9);
        // CB 09 03A2
        gbc.setState(0x503c, 0x8c61, 0x9c00, 0x96bc, 0xde6c, 0x2c89, 0x1, 0x1);
        gbc.writeMem(0x503c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8c61);
        EXPECT(gbc.pc(), 0x503e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03A3
        gbc.setState(0xe538, 0xc46b, 0xc4d0, 0x289f, 0xa506, 0xb55f, 0x0, 0x1);
        gbc.writeMem(0xe538, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc46b);
        EXPECT(gbc.pc(), 0xe53a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe538), 0xcb);
        EXPECT(gbc.readMem(0xe539), 0x9);
        // CB 09 03A4
        gbc.setState(0x14ea, 0xe213, 0xcc70, 0x81aa, 0x65f, 0x657e, 0x1, 0x0);
        gbc.writeMem(0x14ea, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe213);
        EXPECT(gbc.pc(), 0x14ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03A5
        gbc.setState(0x1397, 0x8eb8, 0x5f10, 0xf33d, 0xf6f0, 0x8a8d, 0x0, 0x0);
        gbc.writeMem(0x1397, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8eb8);
        EXPECT(gbc.pc(), 0x1399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03A6
        gbc.setState(0xdb27, 0x39e7, 0x5970, 0x65b8, 0x7761, 0x15f9, 0x0, 0x1);
        gbc.writeMem(0xdb27, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x39e7);
        EXPECT(gbc.pc(), 0xdb29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb27), 0xcb);
        EXPECT(gbc.readMem(0xdb28), 0x9);
        // CB 09 03A7
        gbc.setState(0xd55d, 0xba28, 0xfd60, 0xbb2e, 0x83cf, 0x92a2, 0x0, 0x1);
        gbc.writeMem(0xd55d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xba28);
        EXPECT(gbc.pc(), 0xd55f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd55d), 0xcb);
        EXPECT(gbc.readMem(0xd55e), 0x9);
        // CB 09 03A8
        gbc.setState(0x4c0f, 0x8953, 0xb2c0, 0x9ca4, 0xbb1d, 0xac59, 0x1, 0x0);
        gbc.writeMem(0x4c0f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8953);
        EXPECT(gbc.pc(), 0x4c11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03A9
        gbc.setState(0xb7d4, 0x11e5, 0xb9e0, 0x203c, 0xac9b, 0x8a2a, 0x1, 0x1);
        gbc.writeMem(0xb7d4, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x11e5);
        EXPECT(gbc.pc(), 0xb7d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d4), 0xcb);
        EXPECT(gbc.readMem(0xb7d5), 0x9);
        // CB 09 03AA
        gbc.setState(0x2431, 0x7f90, 0x43a0, 0x50fa, 0x155b, 0x5e28, 0x0, 0x0);
        gbc.writeMem(0x2431, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7f90);
        EXPECT(gbc.pc(), 0x2433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03AB
        gbc.setState(0x14f9, 0xa207, 0x10, 0xb2bf, 0xf0be, 0xa611, 0x0, 0x1);
        gbc.writeMem(0x14f9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa207);
        EXPECT(gbc.pc(), 0x14fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03AC
        gbc.setState(0x6ad0, 0xb3cb, 0x6570, 0xbb21, 0x96b, 0x41c3, 0x1, 0x0);
        gbc.writeMem(0x6ad0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb3cb);
        EXPECT(gbc.pc(), 0x6ad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03AD
        gbc.setState(0xcecc, 0x7b15, 0x87d0, 0x2d97, 0x8efc, 0x8e0c, 0x1, 0x1);
        gbc.writeMem(0xcecc, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7b15);
        EXPECT(gbc.pc(), 0xcece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcecc), 0xcb);
        EXPECT(gbc.readMem(0xcecd), 0x9);
        // CB 09 03AE
        gbc.setState(0x2a43, 0x5fbb, 0x3280, 0x6a51, 0x1369, 0xa41a, 0x0, 0x1);
        gbc.writeMem(0x2a43, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5fbb);
        EXPECT(gbc.pc(), 0x2a45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03AF
        gbc.setState(0x9e30, 0xc62d, 0xda20, 0x91a1, 0x2a9b, 0xfea0, 0x1, 0x1);
        gbc.writeMem(0x9e30, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc62d);
        EXPECT(gbc.pc(), 0x9e32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e30), 0xcb);
        EXPECT(gbc.readMem(0x9e31), 0x9);
        // CB 09 03B0
        gbc.setState(0x6c86, 0x1cc, 0xbd20, 0x332b, 0xdaca, 0xc0ee, 0x1, 0x1);
        gbc.writeMem(0x6c86, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1cc);
        EXPECT(gbc.pc(), 0x6c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03B1
        gbc.setState(0xd427, 0x47ed, 0x9a0, 0x2c7a, 0x4477, 0xb8fb, 0x1, 0x1);
        gbc.writeMem(0xd427, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x47ed);
        EXPECT(gbc.pc(), 0xd429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd427), 0xcb);
        EXPECT(gbc.readMem(0xd428), 0x9);
        // CB 09 03B2
        gbc.setState(0xc3ed, 0x6af0, 0xda20, 0x403f, 0xb64b, 0x49a7, 0x1, 0x1);
        gbc.writeMem(0xc3ed, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6af0);
        EXPECT(gbc.pc(), 0xc3ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3ed), 0xcb);
        EXPECT(gbc.readMem(0xc3ee), 0x9);
        // CB 09 03B3
        gbc.setState(0xd6e, 0x27f0, 0xfde0, 0x1c65, 0x96dd, 0x7a4a, 0x0, 0x0);
        gbc.writeMem(0xd6e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x27f0);
        EXPECT(gbc.pc(), 0xd70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03B5
        gbc.setState(0xd01d, 0xf05d, 0x6c70, 0x3484, 0xdc51, 0x235d, 0x0, 0x0);
        gbc.writeMem(0xd01d, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf05d);
        EXPECT(gbc.pc(), 0xd01f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd01d), 0xcb);
        EXPECT(gbc.readMem(0xd01e), 0x9);
        // CB 09 03B6
        gbc.setState(0x5115, 0xc1af, 0x5920, 0xc448, 0x59e5, 0x9c, 0x1, 0x0);
        gbc.writeMem(0x5115, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc1af);
        EXPECT(gbc.pc(), 0x5117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03B7
        gbc.setState(0x163e, 0xb82d, 0xa2b0, 0xcccb, 0x2730, 0xda3, 0x1, 0x1);
        gbc.writeMem(0x163e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb82d);
        EXPECT(gbc.pc(), 0x1640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03B8
        gbc.setState(0x2025, 0xa470, 0xbda0, 0x5d3b, 0xa8bc, 0xde13, 0x1, 0x0);
        gbc.writeMem(0x2025, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa470);
        EXPECT(gbc.pc(), 0x2027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03B9
        gbc.setState(0xdce3, 0xa466, 0x9c40, 0xeaaa, 0x489a, 0x7cf0, 0x1, 0x1);
        gbc.writeMem(0xdce3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa466);
        EXPECT(gbc.pc(), 0xdce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce3), 0xcb);
        EXPECT(gbc.readMem(0xdce4), 0x9);
        // CB 09 03BA
        gbc.setState(0xb8e3, 0x3b3c, 0xe390, 0x8d69, 0xabde, 0xb000, 0x0, 0x1);
        gbc.writeMem(0xb8e3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3b3c);
        EXPECT(gbc.pc(), 0xb8e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8e3), 0xcb);
        EXPECT(gbc.readMem(0xb8e4), 0x9);
        // CB 09 03BB
        gbc.setState(0x6e9a, 0xa884, 0x4160, 0x5fb, 0x6bbd, 0x8a21, 0x0, 0x0);
        gbc.writeMem(0x6e9a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa884);
        EXPECT(gbc.pc(), 0x6e9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03BC
        gbc.setState(0x9dce, 0x95e9, 0xc8e0, 0x124a, 0x9544, 0x3301, 0x1, 0x0);
        gbc.writeMem(0x9dce, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x95e9);
        EXPECT(gbc.pc(), 0x9dd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dce), 0xcb);
        EXPECT(gbc.readMem(0x9dcf), 0x9);
        // CB 09 03BD
        gbc.setState(0xa3d9, 0xeef3, 0x8d20, 0xb78a, 0x5889, 0x7895, 0x1, 0x0);
        gbc.writeMem(0xa3d9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xeef3);
        EXPECT(gbc.pc(), 0xa3db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d9), 0xcb);
        EXPECT(gbc.readMem(0xa3da), 0x9);
        // CB 09 03BE
        gbc.setState(0xa159, 0x121e, 0x43e0, 0x62fd, 0x5681, 0x9e93, 0x1, 0x1);
        gbc.writeMem(0xa159, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x121e);
        EXPECT(gbc.pc(), 0xa15b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa159), 0xcb);
        EXPECT(gbc.readMem(0xa15a), 0x9);
        // CB 09 03BF
        gbc.setState(0xad8e, 0x1e13, 0xed00, 0x90d5, 0xcd54, 0x41cc, 0x0, 0x1);
        gbc.writeMem(0xad8e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1e13);
        EXPECT(gbc.pc(), 0xad90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad8e), 0xcb);
        EXPECT(gbc.readMem(0xad8f), 0x9);
        // CB 09 03C0
        gbc.setState(0x1ca3, 0xbfac, 0x89f0, 0x6cbd, 0xf620, 0x6b1d, 0x0, 0x0);
        gbc.writeMem(0x1ca3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbfac);
        EXPECT(gbc.pc(), 0x1ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03C1
        gbc.setState(0x544b, 0x656, 0xdd90, 0x72bb, 0xca19, 0xe639, 0x1, 0x0);
        gbc.writeMem(0x544b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x656);
        EXPECT(gbc.pc(), 0x544d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03C2
        gbc.setState(0x7997, 0xaa56, 0x5860, 0xa1c1, 0x3f02, 0x85b7, 0x1, 0x0);
        gbc.writeMem(0x7997, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xaa56);
        EXPECT(gbc.pc(), 0x7999);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03C3
        gbc.setState(0x99f8, 0x27a2, 0x49e0, 0x653a, 0x829c, 0x8fdc, 0x1, 0x0);
        gbc.writeMem(0x99f8, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x27a2);
        EXPECT(gbc.pc(), 0x99fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f8), 0xcb);
        EXPECT(gbc.readMem(0x99f9), 0x9);
        // CB 09 03C4
        gbc.setState(0x6d43, 0x66de, 0xe380, 0x73b9, 0x3623, 0x6e37, 0x0, 0x0);
        gbc.writeMem(0x6d43, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x66de);
        EXPECT(gbc.pc(), 0x6d45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03C5
        gbc.setState(0x4226, 0x91f5, 0x60e0, 0xc269, 0x6686, 0xf3b1, 0x0, 0x0);
        gbc.writeMem(0x4226, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x91f5);
        EXPECT(gbc.pc(), 0x4228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03C6
        gbc.setState(0x49f3, 0x3b6b, 0xb9d0, 0x2fdd, 0xef28, 0x3b6c, 0x0, 0x1);
        gbc.writeMem(0x49f3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3b6b);
        EXPECT(gbc.pc(), 0x49f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03C7
        gbc.setState(0x6e1f, 0x821d, 0x7ee0, 0x4598, 0x7ba3, 0x6fdc, 0x1, 0x0);
        gbc.writeMem(0x6e1f, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x821d);
        EXPECT(gbc.pc(), 0x6e21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03C8
        gbc.setState(0xab4b, 0x28be, 0xe510, 0x3285, 0x80c4, 0x6c6d, 0x0, 0x0);
        gbc.writeMem(0xab4b, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x28be);
        EXPECT(gbc.pc(), 0xab4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab4b), 0xcb);
        EXPECT(gbc.readMem(0xab4c), 0x9);
        // CB 09 03C9
        gbc.setState(0x1edd, 0xceab, 0xd910, 0x9f82, 0x5c3e, 0xfa2f, 0x0, 0x1);
        gbc.writeMem(0x1edd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xceab);
        EXPECT(gbc.pc(), 0x1edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03CA
        gbc.setState(0x1eb1, 0xdb7c, 0xa0c0, 0x701b, 0xb400, 0x2fb6, 0x1, 0x0);
        gbc.writeMem(0x1eb1, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdb7c);
        EXPECT(gbc.pc(), 0x1eb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03CB
        gbc.setState(0x4997, 0x6836, 0xf170, 0x6f9a, 0x2ec, 0x2b09, 0x0, 0x0);
        gbc.writeMem(0x4997, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6836);
        EXPECT(gbc.pc(), 0x4999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03CC
        gbc.setState(0x4a3c, 0x8335, 0x9670, 0x4998, 0xf547, 0x797e, 0x0, 0x0);
        gbc.writeMem(0x4a3c, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8335);
        EXPECT(gbc.pc(), 0x4a3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03CD
        gbc.setState(0x5bd2, 0x1dbc, 0x2830, 0xbc73, 0x67a6, 0x3d4d, 0x0, 0x1);
        gbc.writeMem(0x5bd2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1dbc);
        EXPECT(gbc.pc(), 0x5bd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03CE
        gbc.setState(0x5cf9, 0xbb5a, 0x8b50, 0x90b3, 0x5eb2, 0x6ab2, 0x0, 0x0);
        gbc.writeMem(0x5cf9, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbb5a);
        EXPECT(gbc.pc(), 0x5cfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03CF
        gbc.setState(0x37e7, 0xb358, 0x4de0, 0x1fb3, 0x968f, 0x3b1d, 0x1, 0x1);
        gbc.writeMem(0x37e7, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb358);
        EXPECT(gbc.pc(), 0x37e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03D0
        gbc.setState(0x4d1e, 0x165c, 0x4580, 0x3e75, 0x8e1d, 0xeed6, 0x1, 0x1);
        gbc.writeMem(0x4d1e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x165c);
        EXPECT(gbc.pc(), 0x4d20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03D2
        gbc.setState(0xef82, 0xf1aa, 0x5790, 0xec9c, 0x9984, 0xf8a0, 0x1, 0x1);
        gbc.writeMem(0xef82, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf1aa);
        EXPECT(gbc.pc(), 0xef84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef82), 0xcb);
        EXPECT(gbc.readMem(0xef83), 0x9);
        // CB 09 03D3
        gbc.setState(0xcf97, 0x83b7, 0xe870, 0xf403, 0xf8c9, 0x376f, 0x1, 0x1);
        gbc.writeMem(0xcf97, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x83b7);
        EXPECT(gbc.pc(), 0xcf99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf97), 0xcb);
        EXPECT(gbc.readMem(0xcf98), 0x9);
        // CB 09 03D4
        gbc.setState(0x5318, 0xf364, 0xafd0, 0xd6f2, 0xcf1d, 0xdb36, 0x0, 0x1);
        gbc.writeMem(0x5318, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf364);
        EXPECT(gbc.pc(), 0x531a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03D5
        gbc.setState(0xdf7e, 0x5742, 0x9b60, 0xa69, 0x5566, 0xa0f4, 0x1, 0x1);
        gbc.writeMem(0xdf7e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5742);
        EXPECT(gbc.pc(), 0xdf80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf7e), 0xcb);
        EXPECT(gbc.readMem(0xdf7f), 0x9);
        // CB 09 03D6
        gbc.setState(0x2ff5, 0x7481, 0x6410, 0xb992, 0x5e24, 0x7c64, 0x1, 0x0);
        gbc.writeMem(0x2ff5, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7481);
        EXPECT(gbc.pc(), 0x2ff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03D7
        gbc.setState(0x7adb, 0xe1a5, 0x7940, 0xd3c2, 0x4f68, 0xac7e, 0x1, 0x0);
        gbc.writeMem(0x7adb, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe1a5);
        EXPECT(gbc.pc(), 0x7add);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03D8
        gbc.setState(0x5d19, 0x4191, 0x6a40, 0xe0eb, 0xb7c4, 0xf56f, 0x0, 0x0);
        gbc.writeMem(0x5d19, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4191);
        EXPECT(gbc.pc(), 0x5d1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03D9
        gbc.setState(0xed02, 0xffee, 0xe0f0, 0xc5d1, 0xc448, 0x458f, 0x0, 0x0);
        gbc.writeMem(0xed02, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xffee);
        EXPECT(gbc.pc(), 0xed04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed02), 0xcb);
        EXPECT(gbc.readMem(0xed03), 0x9);
        // CB 09 03DA
        gbc.setState(0x207a, 0x59fd, 0x6140, 0xa033, 0x94a1, 0x324f, 0x1, 0x0);
        gbc.writeMem(0x207a, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x59fd);
        EXPECT(gbc.pc(), 0x207c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03DC
        gbc.setState(0x7508, 0xcd20, 0x6940, 0xb29f, 0xf077, 0x75ac, 0x1, 0x0);
        gbc.writeMem(0x7508, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xcd20);
        EXPECT(gbc.pc(), 0x750a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03DD
        gbc.setState(0x80bd, 0xd02a, 0x7b40, 0xd5a4, 0xee30, 0xc60b, 0x1, 0x0);
        gbc.writeMem(0x80bd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd02a);
        EXPECT(gbc.pc(), 0x80bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80bd), 0xcb);
        EXPECT(gbc.readMem(0x80be), 0x9);
        // CB 09 03DE
        gbc.setState(0xdacd, 0xd4bd, 0x6230, 0x91ab, 0xf549, 0x11c1, 0x1, 0x1);
        gbc.writeMem(0xdacd, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd4bd);
        EXPECT(gbc.pc(), 0xdacf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdacd), 0xcb);
        EXPECT(gbc.readMem(0xdace), 0x9);
        // CB 09 03DF
        gbc.setState(0xc687, 0x784, 0xc7f0, 0xc913, 0x6f58, 0xbd61, 0x1, 0x1);
        gbc.writeMem(0xc687, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x784);
        EXPECT(gbc.pc(), 0xc689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc687), 0xcb);
        EXPECT(gbc.readMem(0xc688), 0x9);
        // CB 09 03E0
        gbc.setState(0x938e, 0xd21d, 0xbc40, 0x8c30, 0x477, 0x3092, 0x0, 0x0);
        gbc.writeMem(0x938e, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd21d);
        EXPECT(gbc.pc(), 0x9390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938e), 0xcb);
        EXPECT(gbc.readMem(0x938f), 0x9);
        // CB 09 03E1
        gbc.setState(0x1db2, 0x5a76, 0x3c0, 0x3797, 0x2f96, 0x65eb, 0x1, 0x1);
        gbc.writeMem(0x1db2, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5a76);
        EXPECT(gbc.pc(), 0x1db4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03E2
        gbc.setState(0xe5ff, 0xb2b9, 0xdc60, 0x55b6, 0xa556, 0xdd98, 0x0, 0x1);
        gbc.writeMem(0xe5ff, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb2b9);
        EXPECT(gbc.pc(), 0xe601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ff), 0xcb);
        EXPECT(gbc.readMem(0xe600), 0x9);
        // CB 09 03E3
        gbc.setState(0x1352, 0x755b, 0x4bc0, 0xcb82, 0x308a, 0x20e6, 0x1, 0x1);
        gbc.writeMem(0x1352, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x755b);
        EXPECT(gbc.pc(), 0x1354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03E4
        gbc.setState(0x6ec3, 0x4dba, 0xf870, 0x1c0a, 0x72ab, 0x8bf3, 0x0, 0x0);
        gbc.writeMem(0x6ec3, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4dba);
        EXPECT(gbc.pc(), 0x6ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 09 03E5
        gbc.setState(0xced0, 0x9fdf, 0x8460, 0x6c64, 0x6f5e, 0xf20f, 0x1, 0x0);
        gbc.writeMem(0xced0, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9fdf);
        EXPECT(gbc.pc(), 0xced2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced0), 0xcb);
        EXPECT(gbc.readMem(0xced1), 0x9);
        // CB 09 03E6
        gbc.setState(0x6f11, 0x2c3b, 0x31b0, 0x539, 0xea4d, 0xbeb0, 0x1, 0x0);
        gbc.writeMem(0x6f11, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2c3b);
        EXPECT(gbc.pc(), 0x6f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 09 03E7
        gbc.setState(0x6048, 0xa660, 0xda0, 0xf435, 0x168, 0x2657, 0x0, 0x0);
        gbc.writeMem(0x6048, { 0xcb, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa660);
        EXPECT(gbc.pc(), 0x604a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
    }
