    TEST(gbcemu, opcode_da) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // DA 0000
        gbc.setState(0x88bb, 0xfca, 0x5780, 0x61ad, 0x6ac9, 0x211f, 0x0, 0x0);
        gbc.writeMem(0x88bb, { 0xda, 0xd7, 0x5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfca, gbc.sp());
        EXPECT(0x88be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x88bb));
        EXPECT(0xd7, gbc.readMem(0x88bc));
        EXPECT(0x5, gbc.readMem(0x88bd));
        // DA 0001
        gbc.setState(0xd303, 0xf276, 0xed20, 0x8922, 0x23ab, 0x8e5c, 0x0, 0x1);
        gbc.writeMem(0xd303, { 0xda, 0x97, 0xa7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf276, gbc.sp());
        EXPECT(0xd306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd303));
        EXPECT(0x97, gbc.readMem(0xd304));
        EXPECT(0xa7, gbc.readMem(0xd305));
        // DA 0002
        gbc.setState(0xc2c7, 0x3a5f, 0x56a0, 0x1a68, 0x76c3, 0x5b1a, 0x0, 0x1);
        gbc.writeMem(0xc2c7, { 0xda, 0x3a, 0xf3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3a5f, gbc.sp());
        EXPECT(0xc2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc2c7));
        EXPECT(0x3a, gbc.readMem(0xc2c8));
        EXPECT(0xf3, gbc.readMem(0xc2c9));
        // DA 0003
        gbc.setState(0x808b, 0x84e4, 0x6e00, 0xb67c, 0xb158, 0xc020, 0x0, 0x0);
        gbc.writeMem(0x808b, { 0xda, 0xec, 0x3f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x84e4, gbc.sp());
        EXPECT(0x808e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x808b));
        EXPECT(0xec, gbc.readMem(0x808c));
        EXPECT(0x3f, gbc.readMem(0x808d));
        // DA 0004
        gbc.setState(0x122a, 0x9dba, 0xd410, 0x1067, 0x8ce8, 0x215b, 0x0, 0x0);
        gbc.writeMem(0x122a, { 0xda, 0xa8, 0x7a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9dba, gbc.sp());
        EXPECT(0x7aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0005
        gbc.setState(0x13fe, 0x16c2, 0xb7d0, 0xc52d, 0x7852, 0xa005, 0x0, 0x0);
        gbc.writeMem(0x13fe, { 0xda, 0xab, 0xe9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x16c2, gbc.sp());
        EXPECT(0xe9ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0006
        gbc.setState(0xbc1a, 0x3be2, 0x76c0, 0xb5eb, 0x93e2, 0x8b5a, 0x1, 0x0);
        gbc.writeMem(0xbc1a, { 0xda, 0xfa, 0xb4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3be2, gbc.sp());
        EXPECT(0xbc1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbc1a));
        EXPECT(0xfa, gbc.readMem(0xbc1b));
        EXPECT(0xb4, gbc.readMem(0xbc1c));
        // DA 0007
        gbc.setState(0xb7c0, 0x3582, 0xb420, 0x2bf9, 0x7bf0, 0xb8f9, 0x0, 0x0);
        gbc.writeMem(0xb7c0, { 0xda, 0xd0, 0x4d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3582, gbc.sp());
        EXPECT(0xb7c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb7c0));
        EXPECT(0xd0, gbc.readMem(0xb7c1));
        EXPECT(0x4d, gbc.readMem(0xb7c2));
        // DA 0008
        gbc.setState(0x63a4, 0xd0b6, 0x5380, 0x27ce, 0x3372, 0x3b99, 0x1, 0x0);
        gbc.writeMem(0x63a4, { 0xda, 0x8f, 0x26 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd0b6, gbc.sp());
        EXPECT(0x63a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0009
        gbc.setState(0xbd0e, 0x1f0c, 0x6630, 0xf661, 0xfbf2, 0x9a31, 0x1, 0x1);
        gbc.writeMem(0xbd0e, { 0xda, 0x8f, 0x8a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1f0c, gbc.sp());
        EXPECT(0x8a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbd0e));
        EXPECT(0x8f, gbc.readMem(0xbd0f));
        EXPECT(0x8a, gbc.readMem(0xbd10));
        // DA 000A
        gbc.setState(0x4664, 0x98fc, 0x4f80, 0xbbf6, 0xb06f, 0xd570, 0x0, 0x0);
        gbc.writeMem(0x4664, { 0xda, 0x6, 0x1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x98fc, gbc.sp());
        EXPECT(0x4667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 000B
        gbc.setState(0x82a4, 0x99c4, 0x8540, 0xe0af, 0x1777, 0xac93, 0x1, 0x1);
        gbc.writeMem(0x82a4, { 0xda, 0x10, 0xac });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x99c4, gbc.sp());
        EXPECT(0x82a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x82a4));
        EXPECT(0x10, gbc.readMem(0x82a5));
        EXPECT(0xac, gbc.readMem(0x82a6));
        // DA 000C
        gbc.setState(0x9192, 0xd7e2, 0x1c80, 0x8fbf, 0xfba0, 0x904e, 0x1, 0x1);
        gbc.writeMem(0x9192, { 0xda, 0x37, 0xbf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd7e2, gbc.sp());
        EXPECT(0x9195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9192));
        EXPECT(0x37, gbc.readMem(0x9193));
        EXPECT(0xbf, gbc.readMem(0x9194));
        // DA 000D
        gbc.setState(0xe5b6, 0xe0e1, 0xf7c0, 0x31df, 0x107f, 0x3d48, 0x1, 0x0);
        gbc.writeMem(0xe5b6, { 0xda, 0xcb, 0x3d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe0e1, gbc.sp());
        EXPECT(0xe5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe5b6));
        EXPECT(0xcb, gbc.readMem(0xe5b7));
        EXPECT(0x3d, gbc.readMem(0xe5b8));
        // DA 000E
        gbc.setState(0x6eb9, 0xd4f6, 0x5730, 0xe731, 0x20cf, 0xde00, 0x1, 0x0);
        gbc.writeMem(0x6eb9, { 0xda, 0xa4, 0xce });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd4f6, gbc.sp());
        EXPECT(0xcea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0010
        gbc.setState(0xb77a, 0xd28, 0x6ae0, 0x2e7f, 0x60af, 0xb006, 0x0, 0x0);
        gbc.writeMem(0xb77a, { 0xda, 0x39, 0x17 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd28, gbc.sp());
        EXPECT(0xb77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb77a));
        EXPECT(0x39, gbc.readMem(0xb77b));
        EXPECT(0x17, gbc.readMem(0xb77c));
        // DA 0011
        gbc.setState(0x9415, 0xe97c, 0x4b30, 0xf87f, 0xf095, 0x8aa9, 0x0, 0x0);
        gbc.writeMem(0x9415, { 0xda, 0x2d, 0xe });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe97c, gbc.sp());
        EXPECT(0xe2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9415));
        EXPECT(0x2d, gbc.readMem(0x9416));
        EXPECT(0xe, gbc.readMem(0x9417));
        // DA 0012
        gbc.setState(0x9db6, 0x5f9d, 0x53f0, 0x99f1, 0x14a9, 0x809, 0x1, 0x0);
        gbc.writeMem(0x9db6, { 0xda, 0x73, 0x88 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5f9d, gbc.sp());
        EXPECT(0x8873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9db6));
        EXPECT(0x73, gbc.readMem(0x9db7));
        EXPECT(0x88, gbc.readMem(0x9db8));
        // DA 0013
        gbc.setState(0x5bfc, 0x2b4a, 0x2cb0, 0x5064, 0x4573, 0xf753, 0x1, 0x1);
        gbc.writeMem(0x5bfc, { 0xda, 0xee, 0x69 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2b4a, gbc.sp());
        EXPECT(0x69ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0014
        gbc.setState(0x58ea, 0x9d24, 0xd970, 0x2671, 0xacf9, 0xc1b3, 0x0, 0x1);
        gbc.writeMem(0x58ea, { 0xda, 0xed, 0x10 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9d24, gbc.sp());
        EXPECT(0x10ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0015
        gbc.setState(0x4793, 0xb72c, 0x3000, 0x66fe, 0xefb9, 0x8b60, 0x1, 0x0);
        gbc.writeMem(0x4793, { 0xda, 0x46, 0xe0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb72c, gbc.sp());
        EXPECT(0x4796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0016
        gbc.setState(0x5cf, 0x5c5f, 0x2d70, 0x3b39, 0x4460, 0xca10, 0x1, 0x0);
        gbc.writeMem(0x5cf, { 0xda, 0x11, 0x1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5c5f, gbc.sp());
        EXPECT(0x111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0017
        gbc.setState(0xf8f, 0x9682, 0x2f0, 0xc81, 0x3d11, 0x7c65, 0x1, 0x0);
        gbc.writeMem(0xf8f, { 0xda, 0x54, 0x7a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9682, gbc.sp());
        EXPECT(0x7a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0018
        gbc.setState(0x3bc, 0x9b08, 0x8de0, 0xf338, 0xb63a, 0xfec2, 0x0, 0x0);
        gbc.writeMem(0x3bc, { 0xda, 0xe5, 0x58 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9b08, gbc.sp());
        EXPECT(0x3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 001A
        gbc.setState(0x6ee8, 0x575e, 0x7260, 0xc87, 0x6e6e, 0xf340, 0x0, 0x0);
        gbc.writeMem(0x6ee8, { 0xda, 0xb3, 0x23 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x575e, gbc.sp());
        EXPECT(0x6eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 001B
        gbc.setState(0x7466, 0x8536, 0xffc0, 0x75d7, 0x8acf, 0xa4f3, 0x0, 0x0);
        gbc.writeMem(0x7466, { 0xda, 0x7e, 0x86 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8536, gbc.sp());
        EXPECT(0x7469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 001C
        gbc.setState(0xde47, 0xf18a, 0x2a20, 0xb765, 0xc4b8, 0x1fde, 0x0, 0x0);
        gbc.writeMem(0xde47, { 0xda, 0x8b, 0x3d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf18a, gbc.sp());
        EXPECT(0xde4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xde47));
        EXPECT(0x8b, gbc.readMem(0xde48));
        EXPECT(0x3d, gbc.readMem(0xde49));
        // DA 001D
        gbc.setState(0x45d3, 0x15f3, 0x8ff0, 0x8054, 0x7557, 0xe3a7, 0x0, 0x0);
        gbc.writeMem(0x45d3, { 0xda, 0x4f, 0xfd });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x15f3, gbc.sp());
        EXPECT(0xfd4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 001E
        gbc.setState(0x1c0, 0x4243, 0x8660, 0x6cd1, 0xf2d8, 0x2e99, 0x1, 0x1);
        gbc.writeMem(0x1c0, { 0xda, 0x9d, 0xc5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4243, gbc.sp());
        EXPECT(0x1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 001F
        gbc.setState(0x5899, 0x461f, 0xbd20, 0xf1c3, 0x8fa4, 0x9f29, 0x0, 0x1);
        gbc.writeMem(0x5899, { 0xda, 0xe7, 0xdb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x461f, gbc.sp());
        EXPECT(0x589c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0020
        gbc.setState(0xafdc, 0x867, 0x3780, 0xc4c2, 0x453, 0x18da, 0x1, 0x1);
        gbc.writeMem(0xafdc, { 0xda, 0xd3, 0x12 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x867, gbc.sp());
        EXPECT(0xafdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xafdc));
        EXPECT(0xd3, gbc.readMem(0xafdd));
        EXPECT(0x12, gbc.readMem(0xafde));
        // DA 0021
        gbc.setState(0xd0c9, 0x38f9, 0x7cb0, 0xcdd4, 0x2819, 0xb5e9, 0x0, 0x1);
        gbc.writeMem(0xd0c9, { 0xda, 0xf0, 0x67 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x38f9, gbc.sp());
        EXPECT(0x67f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd0c9));
        EXPECT(0xf0, gbc.readMem(0xd0ca));
        EXPECT(0x67, gbc.readMem(0xd0cb));
        // DA 0022
        gbc.setState(0x1d45, 0x7ec5, 0xe90, 0x1651, 0xbb0e, 0x8b49, 0x1, 0x1);
        gbc.writeMem(0x1d45, { 0xda, 0x74, 0x71 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7ec5, gbc.sp());
        EXPECT(0x7174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0023
        gbc.setState(0x2576, 0x7e37, 0xe0a0, 0xeec9, 0x59cd, 0x205, 0x0, 0x0);
        gbc.writeMem(0x2576, { 0xda, 0x44, 0x60 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7e37, gbc.sp());
        EXPECT(0x2579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0024
        gbc.setState(0x78ab, 0xbdec, 0x7260, 0xb2f9, 0x68ba, 0x7365, 0x1, 0x1);
        gbc.writeMem(0x78ab, { 0xda, 0x91, 0xac });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbdec, gbc.sp());
        EXPECT(0x78ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0025
        gbc.setState(0x1d68, 0x923c, 0xfce0, 0x5898, 0x18fd, 0xbc0b, 0x0, 0x0);
        gbc.writeMem(0x1d68, { 0xda, 0xea, 0x2c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x923c, gbc.sp());
        EXPECT(0x1d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0026
        gbc.setState(0x393c, 0x248b, 0x38b0, 0xbd14, 0x5007, 0x9b80, 0x1, 0x1);
        gbc.writeMem(0x393c, { 0xda, 0x3b, 0xdc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x248b, gbc.sp());
        EXPECT(0xdc3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0028
        gbc.setState(0xdc07, 0x3381, 0x3550, 0x3b78, 0xd4e4, 0xb951, 0x0, 0x1);
        gbc.writeMem(0xdc07, { 0xda, 0x16, 0xd3 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3381, gbc.sp());
        EXPECT(0xd316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdc07));
        EXPECT(0x16, gbc.readMem(0xdc08));
        EXPECT(0xd3, gbc.readMem(0xdc09));
        // DA 0029
        gbc.setState(0xe724, 0xef3e, 0x1fe0, 0x33c6, 0x2a96, 0xeac, 0x1, 0x1);
        gbc.writeMem(0xe724, { 0xda, 0xb0, 0x90 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xef3e, gbc.sp());
        EXPECT(0xe727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe724));
        EXPECT(0xb0, gbc.readMem(0xe725));
        EXPECT(0x90, gbc.readMem(0xe726));
        // DA 002A
        gbc.setState(0x201c, 0xd596, 0x2b40, 0x30b, 0xf3ec, 0x247d, 0x0, 0x1);
        gbc.writeMem(0x201c, { 0xda, 0xc4, 0xaf });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd596, gbc.sp());
        EXPECT(0x201f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 002B
        gbc.setState(0xae45, 0x177b, 0x4880, 0x7dd3, 0x335c, 0x4fc7, 0x0, 0x0);
        gbc.writeMem(0xae45, { 0xda, 0x83, 0xe7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x177b, gbc.sp());
        EXPECT(0xae48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xae45));
        EXPECT(0x83, gbc.readMem(0xae46));
        EXPECT(0xe7, gbc.readMem(0xae47));
        // DA 002C
        gbc.setState(0x42a9, 0x54ab, 0x5e0, 0x7cb6, 0xce28, 0xcd4c, 0x0, 0x1);
        gbc.writeMem(0x42a9, { 0xda, 0x74, 0x15 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x54ab, gbc.sp());
        EXPECT(0x42ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 002D
        gbc.setState(0x63c3, 0xa8ad, 0xd570, 0xdafc, 0x7dab, 0x770e, 0x0, 0x0);
        gbc.writeMem(0x63c3, { 0xda, 0x4e, 0x5d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa8ad, gbc.sp());
        EXPECT(0x5d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 002E
        gbc.setState(0x30a3, 0x177a, 0x6eb0, 0x5d71, 0x8375, 0xa38b, 0x1, 0x1);
        gbc.writeMem(0x30a3, { 0xda, 0x8d, 0x2b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x177a, gbc.sp());
        EXPECT(0x2b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 002F
        gbc.setState(0xe3c5, 0xb009, 0x5bb0, 0x8f2f, 0x8f81, 0x41f, 0x1, 0x1);
        gbc.writeMem(0xe3c5, { 0xda, 0x73, 0x91 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb009, gbc.sp());
        EXPECT(0x9173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe3c5));
        EXPECT(0x73, gbc.readMem(0xe3c6));
        EXPECT(0x91, gbc.readMem(0xe3c7));
        // DA 0031
        gbc.setState(0xbe6b, 0x2eb1, 0xd5c0, 0x8fac, 0x9b0c, 0x7263, 0x0, 0x1);
        gbc.writeMem(0xbe6b, { 0xda, 0x60, 0x5d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2eb1, gbc.sp());
        EXPECT(0xbe6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbe6b));
        EXPECT(0x60, gbc.readMem(0xbe6c));
        EXPECT(0x5d, gbc.readMem(0xbe6d));
        // DA 0032
        gbc.setState(0x20ef, 0xe5b1, 0xa210, 0x8d4e, 0xa492, 0x5521, 0x0, 0x0);
        gbc.writeMem(0x20ef, { 0xda, 0xb8, 0xe3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe5b1, gbc.sp());
        EXPECT(0xe3b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0033
        gbc.setState(0x5b2f, 0xf0e6, 0x5000, 0xb2ba, 0xd77e, 0xa76d, 0x1, 0x1);
        gbc.writeMem(0x5b2f, { 0xda, 0x47, 0xb8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf0e6, gbc.sp());
        EXPECT(0x5b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0034
        gbc.setState(0x1002, 0x929a, 0x71a0, 0x4adb, 0x33ad, 0x445f, 0x1, 0x1);
        gbc.writeMem(0x1002, { 0xda, 0xc6, 0x2d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x929a, gbc.sp());
        EXPECT(0x1005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0035
        gbc.setState(0x6c0f, 0x547b, 0x7a10, 0xe72c, 0xf49d, 0x5694, 0x1, 0x0);
        gbc.writeMem(0x6c0f, { 0xda, 0x2e, 0x1c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x547b, gbc.sp());
        EXPECT(0x1c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0036
        gbc.setState(0x2b65, 0xb84a, 0xc3c0, 0x954b, 0xdc3e, 0xe4ac, 0x1, 0x0);
        gbc.writeMem(0x2b65, { 0xda, 0x1b, 0x72 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb84a, gbc.sp());
        EXPECT(0x2b68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0037
        gbc.setState(0xb44, 0x611b, 0x8e70, 0xdcd7, 0x378a, 0x65b8, 0x0, 0x1);
        gbc.writeMem(0xb44, { 0xda, 0x7e, 0x1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x611b, gbc.sp());
        EXPECT(0x17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0038
        gbc.setState(0x9efd, 0x4184, 0x7240, 0x53b4, 0x3e22, 0xf1cf, 0x0, 0x1);
        gbc.writeMem(0x9efd, { 0xda, 0x97, 0x4c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4184, gbc.sp());
        EXPECT(0x9f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9efd));
        EXPECT(0x97, gbc.readMem(0x9efe));
        EXPECT(0x4c, gbc.readMem(0x9eff));
        // DA 0039
        gbc.setState(0x67fb, 0xb6e4, 0xd360, 0xe362, 0xf3f2, 0xc28c, 0x0, 0x0);
        gbc.writeMem(0x67fb, { 0xda, 0xb3, 0x99 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb6e4, gbc.sp());
        EXPECT(0x67fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 003A
        gbc.setState(0x7448, 0xc0b, 0x8790, 0x87a2, 0x6cb7, 0x418a, 0x0, 0x1);
        gbc.writeMem(0x7448, { 0xda, 0x27, 0x58 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc0b, gbc.sp());
        EXPECT(0x5827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 003B
        gbc.setState(0xa505, 0x31a0, 0x4a30, 0xcd51, 0x1f2, 0x8a8, 0x1, 0x1);
        gbc.writeMem(0xa505, { 0xda, 0x96, 0xfc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x31a0, gbc.sp());
        EXPECT(0xfc96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa505));
        EXPECT(0x96, gbc.readMem(0xa506));
        EXPECT(0xfc, gbc.readMem(0xa507));
        // DA 003C
        gbc.setState(0x406f, 0x9d82, 0x6ac0, 0xff0c, 0xfc13, 0x6261, 0x0, 0x1);
        gbc.writeMem(0x406f, { 0xda, 0x9b, 0xb4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9d82, gbc.sp());
        EXPECT(0x4072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 003D
        gbc.setState(0x58f, 0x5667, 0x2660, 0x5c24, 0xe8ce, 0xb529, 0x1, 0x0);
        gbc.writeMem(0x58f, { 0xda, 0x91, 0xf6 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5667, gbc.sp());
        EXPECT(0x592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 003E
        gbc.setState(0xde0e, 0xc4cf, 0x72f0, 0x29cc, 0x2565, 0xde1f, 0x0, 0x0);
        gbc.writeMem(0xde0e, { 0xda, 0x81, 0x41 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc4cf, gbc.sp());
        EXPECT(0x4181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xde0e));
        EXPECT(0x81, gbc.readMem(0xde0f));
        EXPECT(0x41, gbc.readMem(0xde10));
        // DA 003F
        gbc.setState(0xb3, 0x99ed, 0x2580, 0xf84e, 0x5d79, 0x8c5f, 0x0, 0x1);
        gbc.writeMem(0xb3, { 0xda, 0x22, 0xa5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x99ed, gbc.sp());
        EXPECT(0xb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0040
        gbc.setState(0x5e75, 0xacee, 0xd6a0, 0x8b5e, 0x163, 0xc075, 0x0, 0x1);
        gbc.writeMem(0x5e75, { 0xda, 0xd6, 0xe4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xacee, gbc.sp());
        EXPECT(0x5e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0041
        gbc.setState(0xcbe0, 0x7cd7, 0x8730, 0x9e92, 0x4dfe, 0xa027, 0x1, 0x1);
        gbc.writeMem(0xcbe0, { 0xda, 0xe5, 0x7b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7cd7, gbc.sp());
        EXPECT(0x7be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcbe0));
        EXPECT(0xe5, gbc.readMem(0xcbe1));
        EXPECT(0x7b, gbc.readMem(0xcbe2));
        // DA 0042
        gbc.setState(0x33da, 0x8681, 0x3f0, 0x1e, 0xe19, 0x33f2, 0x1, 0x0);
        gbc.writeMem(0x33da, { 0xda, 0xda, 0x54 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8681, gbc.sp());
        EXPECT(0x54da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0043
        gbc.setState(0x4a1e, 0x4ea3, 0x50c0, 0x2c25, 0x6730, 0xd59c, 0x0, 0x0);
        gbc.writeMem(0x4a1e, { 0xda, 0x53, 0x10 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4ea3, gbc.sp());
        EXPECT(0x4a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0044
        gbc.setState(0xe3cb, 0xdd38, 0x4200, 0x8088, 0x4b09, 0xee14, 0x1, 0x0);
        gbc.writeMem(0xe3cb, { 0xda, 0xcc, 0x84 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdd38, gbc.sp());
        EXPECT(0xe3ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe3cb));
        EXPECT(0xcc, gbc.readMem(0xe3cc));
        EXPECT(0x84, gbc.readMem(0xe3cd));
        // DA 0045
        gbc.setState(0x3b8d, 0x98f3, 0x5110, 0x7ab0, 0x11f1, 0xa39d, 0x1, 0x0);
        gbc.writeMem(0x3b8d, { 0xda, 0x59, 0x8a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x98f3, gbc.sp());
        EXPECT(0x8a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0046
        gbc.setState(0x6e24, 0xd5b4, 0x6480, 0xf051, 0x7c3, 0x1e27, 0x1, 0x1);
        gbc.writeMem(0x6e24, { 0xda, 0xf2, 0x60 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd5b4, gbc.sp());
        EXPECT(0x6e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0047
        gbc.setState(0x58e1, 0xd496, 0xa9d0, 0x7dd4, 0x4dea, 0x113d, 0x1, 0x0);
        gbc.writeMem(0x58e1, { 0xda, 0x21, 0x48 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd496, gbc.sp());
        EXPECT(0x4821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0048
        gbc.setState(0xbada, 0x330e, 0xdca0, 0x48c0, 0xf744, 0x761d, 0x0, 0x0);
        gbc.writeMem(0xbada, { 0xda, 0xee, 0xdb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x330e, gbc.sp());
        EXPECT(0xbadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbada));
        EXPECT(0xee, gbc.readMem(0xbadb));
        EXPECT(0xdb, gbc.readMem(0xbadc));
        // DA 0049
        gbc.setState(0x9fe, 0x9d56, 0xb3d0, 0xe175, 0x2793, 0x349, 0x0, 0x1);
        gbc.writeMem(0x9fe, { 0xda, 0x3a, 0xeb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9d56, gbc.sp());
        EXPECT(0xeb3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 004A
        gbc.setState(0x7071, 0x3b4e, 0x62a0, 0x7c4f, 0xfd1, 0x4e99, 0x1, 0x1);
        gbc.writeMem(0x7071, { 0xda, 0x4f, 0x98 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3b4e, gbc.sp());
        EXPECT(0x7074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 004C
        gbc.setState(0x2f60, 0xbe37, 0x64e0, 0xe38c, 0x9cbe, 0x9dc, 0x1, 0x1);
        gbc.writeMem(0x2f60, { 0xda, 0xe3, 0x7c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbe37, gbc.sp());
        EXPECT(0x2f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 004D
        gbc.setState(0xdef5, 0x65e3, 0x8c0, 0x1983, 0x2576, 0x38bd, 0x0, 0x0);
        gbc.writeMem(0xdef5, { 0xda, 0xa0, 0x8e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x65e3, gbc.sp());
        EXPECT(0xdef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdef5));
        EXPECT(0xa0, gbc.readMem(0xdef6));
        EXPECT(0x8e, gbc.readMem(0xdef7));
        // DA 004E
        gbc.setState(0x56fb, 0x46d1, 0x7380, 0x5a73, 0x4532, 0x9577, 0x1, 0x1);
        gbc.writeMem(0x56fb, { 0xda, 0xaf, 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x46d1, gbc.sp());
        EXPECT(0x56fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 004F
        gbc.setState(0x3ba4, 0x93dc, 0x4550, 0x3bd4, 0x9a32, 0x3a57, 0x1, 0x0);
        gbc.writeMem(0x3ba4, { 0xda, 0xa0, 0x3c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x93dc, gbc.sp());
        EXPECT(0x3ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0050
        gbc.setState(0xadc9, 0xf6fc, 0xafe0, 0xe5f, 0x66cc, 0x4f4d, 0x1, 0x1);
        gbc.writeMem(0xadc9, { 0xda, 0xb2, 0xa4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf6fc, gbc.sp());
        EXPECT(0xadcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xadc9));
        EXPECT(0xb2, gbc.readMem(0xadca));
        EXPECT(0xa4, gbc.readMem(0xadcb));
        // DA 0051
        gbc.setState(0x4d84, 0x6615, 0x9c70, 0x1993, 0x1e2a, 0xb5f, 0x1, 0x1);
        gbc.writeMem(0x4d84, { 0xda, 0x90, 0x3d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6615, gbc.sp());
        EXPECT(0x3d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0052
        gbc.setState(0xa9fe, 0xd39, 0x9c20, 0x9ace, 0x4443, 0x14a7, 0x1, 0x0);
        gbc.writeMem(0xa9fe, { 0xda, 0x19, 0x50 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd39, gbc.sp());
        EXPECT(0xaa01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa9fe));
        EXPECT(0x19, gbc.readMem(0xa9ff));
        EXPECT(0x50, gbc.readMem(0xaa00));
        // DA 0053
        gbc.setState(0x4155, 0xaa5c, 0x2a30, 0xa637, 0xad1, 0xaac, 0x0, 0x1);
        gbc.writeMem(0x4155, { 0xda, 0x3c, 0x9a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xaa5c, gbc.sp());
        EXPECT(0x9a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0054
        gbc.setState(0x4136, 0xa229, 0xb2c0, 0xd150, 0x3a41, 0x90c, 0x0, 0x0);
        gbc.writeMem(0x4136, { 0xda, 0x6c, 0x8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa229, gbc.sp());
        EXPECT(0x4139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0055
        gbc.setState(0x1cd2, 0x6e57, 0x49d0, 0x2989, 0xb37d, 0x605a, 0x1, 0x0);
        gbc.writeMem(0x1cd2, { 0xda, 0x1a, 0x2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6e57, gbc.sp());
        EXPECT(0x21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0056
        gbc.setState(0x2dc, 0x750e, 0x4ba0, 0x37a6, 0xbaef, 0x6a57, 0x0, 0x0);
        gbc.writeMem(0x2dc, { 0xda, 0xd7, 0x22 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x750e, gbc.sp());
        EXPECT(0x2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0057
        gbc.setState(0xb209, 0x7a16, 0x3870, 0x51e6, 0x14d7, 0x5b3b, 0x1, 0x1);
        gbc.writeMem(0xb209, { 0xda, 0x4e, 0x5e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7a16, gbc.sp());
        EXPECT(0x5e4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb209));
        EXPECT(0x4e, gbc.readMem(0xb20a));
        EXPECT(0x5e, gbc.readMem(0xb20b));
        // DA 0058
        gbc.setState(0x5d26, 0xc4d1, 0x5f90, 0xfda8, 0xd7c3, 0xca07, 0x1, 0x1);
        gbc.writeMem(0x5d26, { 0xda, 0x29, 0x45 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc4d1, gbc.sp());
        EXPECT(0x4529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0059
        gbc.setState(0x8a92, 0xbc0a, 0xf430, 0x1581, 0xcadc, 0x1e06, 0x1, 0x0);
        gbc.writeMem(0x8a92, { 0xda, 0x54, 0x12 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbc0a, gbc.sp());
        EXPECT(0x1254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8a92));
        EXPECT(0x54, gbc.readMem(0x8a93));
        EXPECT(0x12, gbc.readMem(0x8a94));
        // DA 005A
        gbc.setState(0x3866, 0x2896, 0x3d80, 0x8a98, 0x6c7a, 0xcb10, 0x0, 0x1);
        gbc.writeMem(0x3866, { 0xda, 0x91, 0x24 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2896, gbc.sp());
        EXPECT(0x3869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 005B
        gbc.setState(0x49e8, 0xa556, 0xdf90, 0x6604, 0x5eb2, 0xf0c5, 0x1, 0x1);
        gbc.writeMem(0x49e8, { 0xda, 0x5b, 0xd8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa556, gbc.sp());
        EXPECT(0xd85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 005C
        gbc.setState(0xb4e5, 0xe7bc, 0x8320, 0xe2ab, 0x947e, 0x83f2, 0x1, 0x0);
        gbc.writeMem(0xb4e5, { 0xda, 0xaa, 0xfe });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe7bc, gbc.sp());
        EXPECT(0xb4e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb4e5));
        EXPECT(0xaa, gbc.readMem(0xb4e6));
        EXPECT(0xfe, gbc.readMem(0xb4e7));
        // DA 005D
        gbc.setState(0x7538, 0x56d9, 0x1b20, 0x715c, 0x1894, 0x8e99, 0x0, 0x0);
        gbc.writeMem(0x7538, { 0xda, 0xed, 0xdc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x56d9, gbc.sp());
        EXPECT(0x753b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 005E
        gbc.setState(0xedf6, 0xaaf3, 0x41b0, 0x92bc, 0xfb5f, 0x8fa2, 0x1, 0x0);
        gbc.writeMem(0xedf6, { 0xda, 0xb0, 0xa9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaaf3, gbc.sp());
        EXPECT(0xa9b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xedf6));
        EXPECT(0xb0, gbc.readMem(0xedf7));
        EXPECT(0xa9, gbc.readMem(0xedf8));
        // DA 005F
        gbc.setState(0xead, 0x5745, 0xab20, 0xe2c, 0xe45, 0x71f7, 0x0, 0x0);
        gbc.writeMem(0xead, { 0xda, 0x2d, 0xe5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5745, gbc.sp());
        EXPECT(0xeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0060
        gbc.setState(0x8c70, 0x4bfc, 0x2240, 0x39cc, 0x820e, 0xf1eb, 0x0, 0x0);
        gbc.writeMem(0x8c70, { 0xda, 0x93, 0xad });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4bfc, gbc.sp());
        EXPECT(0x8c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8c70));
        EXPECT(0x93, gbc.readMem(0x8c71));
        EXPECT(0xad, gbc.readMem(0x8c72));
        // DA 0061
        gbc.setState(0x6e0c, 0x56b5, 0x8e40, 0x5d2b, 0x4773, 0xee40, 0x1, 0x1);
        gbc.writeMem(0x6e0c, { 0xda, 0xa1, 0x7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x56b5, gbc.sp());
        EXPECT(0x6e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0062
        gbc.setState(0x6c60, 0x6628, 0x4d20, 0x9ada, 0x76c1, 0xa17a, 0x1, 0x0);
        gbc.writeMem(0x6c60, { 0xda, 0xd3, 0xcf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6628, gbc.sp());
        EXPECT(0x6c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0063
        gbc.setState(0x408f, 0xa753, 0xf320, 0xb6dd, 0xdf6b, 0x3bf6, 0x0, 0x1);
        gbc.writeMem(0x408f, { 0xda, 0x19, 0xe7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa753, gbc.sp());
        EXPECT(0x4092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0064
        gbc.setState(0xeb54, 0x58d0, 0xa830, 0x3a2e, 0x6012, 0x70ae, 0x1, 0x0);
        gbc.writeMem(0xeb54, { 0xda, 0xf1, 0x6b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x58d0, gbc.sp());
        EXPECT(0x6bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xeb54));
        EXPECT(0xf1, gbc.readMem(0xeb55));
        EXPECT(0x6b, gbc.readMem(0xeb56));
        // DA 0065
        gbc.setState(0xb568, 0x9a84, 0x8be0, 0xe7fa, 0x79d3, 0xf0a6, 0x0, 0x1);
        gbc.writeMem(0xb568, { 0xda, 0xe3, 0x21 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9a84, gbc.sp());
        EXPECT(0xb56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb568));
        EXPECT(0xe3, gbc.readMem(0xb569));
        EXPECT(0x21, gbc.readMem(0xb56a));
        // DA 0066
        gbc.setState(0x2a4b, 0x1df6, 0xba0, 0xc7e8, 0x4bfb, 0x67a4, 0x0, 0x0);
        gbc.writeMem(0x2a4b, { 0xda, 0x63, 0xa9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1df6, gbc.sp());
        EXPECT(0x2a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0067
        gbc.setState(0x2468, 0x3af8, 0x74c0, 0x9959, 0x7cd, 0x45df, 0x0, 0x1);
        gbc.writeMem(0x2468, { 0xda, 0x89, 0x65 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3af8, gbc.sp());
        EXPECT(0x246b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0068
        gbc.setState(0xf3c, 0x6bf4, 0xf6d0, 0xb4d0, 0x79da, 0x4c7d, 0x0, 0x0);
        gbc.writeMem(0xf3c, { 0xda, 0xfc, 0x38 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6bf4, gbc.sp());
        EXPECT(0x38fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0069
        gbc.setState(0x7fb7, 0xde0a, 0x81d0, 0x51dd, 0xadd6, 0x51b8, 0x1, 0x1);
        gbc.writeMem(0x7fb7, { 0xda, 0x1c, 0x50 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xde0a, gbc.sp());
        EXPECT(0x501c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 006A
        gbc.setState(0xc5e9, 0x43dc, 0xbcc0, 0xfbc0, 0x5052, 0x1c78, 0x0, 0x0);
        gbc.writeMem(0xc5e9, { 0xda, 0xae, 0x14 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x43dc, gbc.sp());
        EXPECT(0xc5ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc5e9));
        EXPECT(0xae, gbc.readMem(0xc5ea));
        EXPECT(0x14, gbc.readMem(0xc5eb));
        // DA 006B
        gbc.setState(0x5bb0, 0xcc6b, 0xb970, 0x2f21, 0x4eed, 0xdf65, 0x1, 0x0);
        gbc.writeMem(0x5bb0, { 0xda, 0xbf, 0x69 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcc6b, gbc.sp());
        EXPECT(0x69bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 006C
        gbc.setState(0xa1cf, 0xc88d, 0x5560, 0x777f, 0x95c8, 0x5aa0, 0x0, 0x0);
        gbc.writeMem(0xa1cf, { 0xda, 0xeb, 0xe6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc88d, gbc.sp());
        EXPECT(0xa1d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa1cf));
        EXPECT(0xeb, gbc.readMem(0xa1d0));
        EXPECT(0xe6, gbc.readMem(0xa1d1));
        // DA 006D
        gbc.setState(0x5e0f, 0xd890, 0x5870, 0xee00, 0x379d, 0xaed0, 0x1, 0x0);
        gbc.writeMem(0x5e0f, { 0xda, 0x5e, 0x40 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd890, gbc.sp());
        EXPECT(0x405e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 006E
        gbc.setState(0x565f, 0xbe76, 0x5f00, 0x2fa8, 0x7c42, 0x711f, 0x0, 0x0);
        gbc.writeMem(0x565f, { 0xda, 0x3b, 0x7f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbe76, gbc.sp());
        EXPECT(0x5662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 006F
        gbc.setState(0x3c14, 0x8632, 0xaac0, 0xd66a, 0xc24a, 0x4fd1, 0x1, 0x1);
        gbc.writeMem(0x3c14, { 0xda, 0xe0, 0x6d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8632, gbc.sp());
        EXPECT(0x3c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0070
        gbc.setState(0x9531, 0xa88c, 0x61f0, 0xa98c, 0x682d, 0x4cbd, 0x0, 0x1);
        gbc.writeMem(0x9531, { 0xda, 0x96, 0xc2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa88c, gbc.sp());
        EXPECT(0xc296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9531));
        EXPECT(0x96, gbc.readMem(0x9532));
        EXPECT(0xc2, gbc.readMem(0x9533));
        // DA 0071
        gbc.setState(0x6302, 0xb527, 0xdb00, 0xc4a2, 0x5fde, 0x15de, 0x0, 0x0);
        gbc.writeMem(0x6302, { 0xda, 0x76, 0xcd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb527, gbc.sp());
        EXPECT(0x6305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0072
        gbc.setState(0x7911, 0xa1d7, 0x3ba0, 0xbf0, 0x883c, 0x3f15, 0x0, 0x1);
        gbc.writeMem(0x7911, { 0xda, 0x49, 0x15 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa1d7, gbc.sp());
        EXPECT(0x7914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0073
        gbc.setState(0x2b11, 0xed9b, 0x9c20, 0xb9db, 0x1216, 0x26a5, 0x1, 0x1);
        gbc.writeMem(0x2b11, { 0xda, 0xd6, 0x36 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xed9b, gbc.sp());
        EXPECT(0x2b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0074
        gbc.setState(0xdaa6, 0x347f, 0x46e0, 0xeb5e, 0x4a38, 0x2059, 0x0, 0x1);
        gbc.writeMem(0xdaa6, { 0xda, 0x10, 0x1e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x347f, gbc.sp());
        EXPECT(0xdaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdaa6));
        EXPECT(0x10, gbc.readMem(0xdaa7));
        EXPECT(0x1e, gbc.readMem(0xdaa8));
        // DA 0075
        gbc.setState(0xdd53, 0x2092, 0x8ff0, 0x80b1, 0x330, 0x7986, 0x0, 0x1);
        gbc.writeMem(0xdd53, { 0xda, 0x0, 0xd9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2092, gbc.sp());
        EXPECT(0xd900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdd53));
        EXPECT(0x0, gbc.readMem(0xdd54));
        EXPECT(0xd9, gbc.readMem(0xdd55));
        // DA 0076
        gbc.setState(0xe74, 0xb703, 0x3810, 0xc067, 0xb922, 0x2cee, 0x1, 0x1);
        gbc.writeMem(0xe74, { 0xda, 0x1a, 0x58 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb703, gbc.sp());
        EXPECT(0x581a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0077
        gbc.setState(0xdabe, 0xa368, 0x8760, 0x81dd, 0x57d2, 0x2cfb, 0x0, 0x0);
        gbc.writeMem(0xdabe, { 0xda, 0x49, 0x2c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa368, gbc.sp());
        EXPECT(0xdac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdabe));
        EXPECT(0x49, gbc.readMem(0xdabf));
        EXPECT(0x2c, gbc.readMem(0xdac0));
        // DA 0078
        gbc.setState(0xece9, 0xe825, 0x5650, 0xcfbd, 0xad0f, 0x7f7b, 0x1, 0x0);
        gbc.writeMem(0xece9, { 0xda, 0xc3, 0xa1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe825, gbc.sp());
        EXPECT(0xa1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xece9));
        EXPECT(0xc3, gbc.readMem(0xecea));
        EXPECT(0xa1, gbc.readMem(0xeceb));
        // DA 0079
        gbc.setState(0xbc65, 0xb126, 0xc2b0, 0x660a, 0xb00a, 0xb36a, 0x1, 0x1);
        gbc.writeMem(0xbc65, { 0xda, 0x21, 0x26 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb126, gbc.sp());
        EXPECT(0x2621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbc65));
        EXPECT(0x21, gbc.readMem(0xbc66));
        EXPECT(0x26, gbc.readMem(0xbc67));
        // DA 007A
        gbc.setState(0x6d3c, 0xa3c, 0xdf60, 0xf591, 0xceb8, 0x9520, 0x0, 0x1);
        gbc.writeMem(0x6d3c, { 0xda, 0xc5, 0xc2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa3c, gbc.sp());
        EXPECT(0x6d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 007B
        gbc.setState(0x5c5a, 0x82a4, 0xabe0, 0xdc28, 0x4b6f, 0x7980, 0x1, 0x0);
        gbc.writeMem(0x5c5a, { 0xda, 0x4e, 0x49 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x82a4, gbc.sp());
        EXPECT(0x5c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 007C
        gbc.setState(0x1f3a, 0x5101, 0x1ba0, 0xfd20, 0xd068, 0x58d8, 0x1, 0x1);
        gbc.writeMem(0x1f3a, { 0xda, 0xf8, 0x5a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5101, gbc.sp());
        EXPECT(0x1f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 007D
        gbc.setState(0xb175, 0xabee, 0x6800, 0x3f53, 0x96a0, 0x7a0e, 0x1, 0x0);
        gbc.writeMem(0xb175, { 0xda, 0xb7, 0x98 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xabee, gbc.sp());
        EXPECT(0xb178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb175));
        EXPECT(0xb7, gbc.readMem(0xb176));
        EXPECT(0x98, gbc.readMem(0xb177));
        // DA 007E
        gbc.setState(0xe025, 0xb5de, 0x46e0, 0x35e8, 0x9e1e, 0x82b1, 0x1, 0x0);
        gbc.writeMem(0xe025, { 0xda, 0xed, 0xfb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb5de, gbc.sp());
        EXPECT(0xe028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe025));
        EXPECT(0xed, gbc.readMem(0xe026));
        EXPECT(0xfb, gbc.readMem(0xe027));
        // DA 0080
        gbc.setState(0x1c41, 0xb5f, 0x1780, 0xdca9, 0x928d, 0x680b, 0x0, 0x0);
        gbc.writeMem(0x1c41, { 0xda, 0x51, 0xb5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb5f, gbc.sp());
        EXPECT(0x1c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0081
        gbc.setState(0xba57, 0x5df9, 0x9d70, 0x2e8d, 0xa1e2, 0xd247, 0x1, 0x1);
        gbc.writeMem(0xba57, { 0xda, 0x9f, 0x12 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5df9, gbc.sp());
        EXPECT(0x129f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xba57));
        EXPECT(0x9f, gbc.readMem(0xba58));
        EXPECT(0x12, gbc.readMem(0xba59));
        // DA 0082
        gbc.setState(0xdde3, 0x9a8, 0x9150, 0xf67c, 0x1929, 0x9f5, 0x0, 0x1);
        gbc.writeMem(0xdde3, { 0xda, 0xb8, 0x74 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9a8, gbc.sp());
        EXPECT(0x74b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdde3));
        EXPECT(0xb8, gbc.readMem(0xdde4));
        EXPECT(0x74, gbc.readMem(0xdde5));
        // DA 0083
        gbc.setState(0xabac, 0x3ed7, 0xfb80, 0x8799, 0x9756, 0x47b5, 0x1, 0x1);
        gbc.writeMem(0xabac, { 0xda, 0x81, 0xd6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3ed7, gbc.sp());
        EXPECT(0xabaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xabac));
        EXPECT(0x81, gbc.readMem(0xabad));
        EXPECT(0xd6, gbc.readMem(0xabae));
        // DA 0084
        gbc.setState(0x1b8a, 0x382f, 0x67e0, 0xc528, 0x70a1, 0xe71e, 0x0, 0x1);
        gbc.writeMem(0x1b8a, { 0xda, 0x5a, 0x5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x382f, gbc.sp());
        EXPECT(0x1b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0085
        gbc.setState(0xeac0, 0x976f, 0xba80, 0x6aea, 0x7a72, 0xef28, 0x0, 0x1);
        gbc.writeMem(0xeac0, { 0xda, 0x9f, 0xf5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x976f, gbc.sp());
        EXPECT(0xeac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xeac0));
        EXPECT(0x9f, gbc.readMem(0xeac1));
        EXPECT(0xf5, gbc.readMem(0xeac2));
        // DA 0087
        gbc.setState(0x66e7, 0x59b, 0xcb80, 0xd6e7, 0xd0a9, 0xea4c, 0x0, 0x1);
        gbc.writeMem(0x66e7, { 0xda, 0xa0, 0x68 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x59b, gbc.sp());
        EXPECT(0x66ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0088
        gbc.setState(0xd9f0, 0x4f5e, 0x21b0, 0xbc87, 0x9ec9, 0x452d, 0x1, 0x0);
        gbc.writeMem(0xd9f0, { 0xda, 0x61, 0xdd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4f5e, gbc.sp());
        EXPECT(0xdd61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd9f0));
        EXPECT(0x61, gbc.readMem(0xd9f1));
        EXPECT(0xdd, gbc.readMem(0xd9f2));
        // DA 0089
        gbc.setState(0xd14d, 0x6ff4, 0x5990, 0xbea6, 0xb5c9, 0x7999, 0x1, 0x1);
        gbc.writeMem(0xd14d, { 0xda, 0xff, 0x73 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6ff4, gbc.sp());
        EXPECT(0x73ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd14d));
        EXPECT(0xff, gbc.readMem(0xd14e));
        EXPECT(0x73, gbc.readMem(0xd14f));
        // DA 008A
        gbc.setState(0xe949, 0x7964, 0x4330, 0x7dae, 0xdd35, 0xe941, 0x1, 0x0);
        gbc.writeMem(0xe949, { 0xda, 0x4f, 0x6e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7964, gbc.sp());
        EXPECT(0x6e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe949));
        EXPECT(0x4f, gbc.readMem(0xe94a));
        EXPECT(0x6e, gbc.readMem(0xe94b));
        // DA 008B
        gbc.setState(0xee0, 0xf2de, 0x4890, 0x8d45, 0x6604, 0xebdb, 0x1, 0x1);
        gbc.writeMem(0xee0, { 0xda, 0xd5, 0x8e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf2de, gbc.sp());
        EXPECT(0x8ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 008D
        gbc.setState(0x2ed8, 0x61fc, 0xa680, 0x18cd, 0x3950, 0x2dbd, 0x0, 0x0);
        gbc.writeMem(0x2ed8, { 0xda, 0x61, 0xbb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x61fc, gbc.sp());
        EXPECT(0x2edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 008E
        gbc.setState(0x1ae6, 0x13c0, 0xcf70, 0xd8e8, 0xa28b, 0x1f83, 0x1, 0x1);
        gbc.writeMem(0x1ae6, { 0xda, 0xbc, 0x88 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x13c0, gbc.sp());
        EXPECT(0x88bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 008F
        gbc.setState(0xec80, 0x4a6f, 0x1790, 0xad19, 0x6273, 0x9d74, 0x1, 0x0);
        gbc.writeMem(0xec80, { 0xda, 0x2c, 0x7a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4a6f, gbc.sp());
        EXPECT(0x7a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xec80));
        EXPECT(0x2c, gbc.readMem(0xec81));
        EXPECT(0x7a, gbc.readMem(0xec82));
        // DA 0090
        gbc.setState(0xba66, 0x3ecf, 0xf5a0, 0xaaff, 0x95f9, 0x9e4, 0x0, 0x1);
        gbc.writeMem(0xba66, { 0xda, 0xc8, 0xd6 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3ecf, gbc.sp());
        EXPECT(0xba69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xba66));
        EXPECT(0xc8, gbc.readMem(0xba67));
        EXPECT(0xd6, gbc.readMem(0xba68));
        // DA 0091
        gbc.setState(0x22a4, 0x4270, 0x6f50, 0x73ba, 0x6df2, 0x7592, 0x1, 0x1);
        gbc.writeMem(0x22a4, { 0xda, 0x23, 0x3d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4270, gbc.sp());
        EXPECT(0x3d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0092
        gbc.setState(0x6a77, 0xb5d8, 0xe480, 0x1df5, 0x5dd9, 0xc6bf, 0x1, 0x0);
        gbc.writeMem(0x6a77, { 0xda, 0xa1, 0x1f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb5d8, gbc.sp());
        EXPECT(0x6a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0093
        gbc.setState(0x2ec5, 0xc841, 0xd100, 0xa0af, 0x9ca0, 0xec31, 0x1, 0x0);
        gbc.writeMem(0x2ec5, { 0xda, 0x4c, 0xc3 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc841, gbc.sp());
        EXPECT(0x2ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0094
        gbc.setState(0x58e9, 0x484, 0x6d20, 0x7c43, 0x4a4c, 0xd1ef, 0x1, 0x1);
        gbc.writeMem(0x58e9, { 0xda, 0x7e, 0xed });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x484, gbc.sp());
        EXPECT(0x58ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0095
        gbc.setState(0x4670, 0x7e88, 0x5190, 0x7edd, 0xe9a8, 0xebe3, 0x1, 0x1);
        gbc.writeMem(0x4670, { 0xda, 0xa5, 0xd6 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7e88, gbc.sp());
        EXPECT(0xd6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0096
        gbc.setState(0xe103, 0x98ea, 0x53a0, 0xa776, 0x2e05, 0xb7b6, 0x0, 0x1);
        gbc.writeMem(0xe103, { 0xda, 0xc2, 0xea });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x98ea, gbc.sp());
        EXPECT(0xe106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe103));
        EXPECT(0xc2, gbc.readMem(0xe104));
        EXPECT(0xea, gbc.readMem(0xe105));
        // DA 0098
        gbc.setState(0xd0d1, 0xb068, 0xdee0, 0x4ac3, 0x385, 0x193, 0x0, 0x1);
        gbc.writeMem(0xd0d1, { 0xda, 0x2b, 0x70 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb068, gbc.sp());
        EXPECT(0xd0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd0d1));
        EXPECT(0x2b, gbc.readMem(0xd0d2));
        EXPECT(0x70, gbc.readMem(0xd0d3));
        // DA 0099
        gbc.setState(0xb3ad, 0x8477, 0x8740, 0xdda7, 0x9f53, 0x6c96, 0x1, 0x0);
        gbc.writeMem(0xb3ad, { 0xda, 0xa1, 0xe2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8477, gbc.sp());
        EXPECT(0xb3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb3ad));
        EXPECT(0xa1, gbc.readMem(0xb3ae));
        EXPECT(0xe2, gbc.readMem(0xb3af));
        // DA 009A
        gbc.setState(0x735b, 0xd8b2, 0xc300, 0x549f, 0x3668, 0x2ebc, 0x1, 0x1);
        gbc.writeMem(0x735b, { 0xda, 0x89, 0x51 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd8b2, gbc.sp());
        EXPECT(0x735e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 009B
        gbc.setState(0x49, 0xdcd5, 0xdc70, 0xd94e, 0x8bbc, 0x9bfd, 0x1, 0x1);
        gbc.writeMem(0x49, { 0xda, 0xee, 0x1d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdcd5, gbc.sp());
        EXPECT(0x1dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 009C
        gbc.setState(0xa122, 0xf88e, 0xffb0, 0x690f, 0x4a6f, 0x9c2e, 0x1, 0x0);
        gbc.writeMem(0xa122, { 0xda, 0x56, 0xa5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf88e, gbc.sp());
        EXPECT(0xa556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa122));
        EXPECT(0x56, gbc.readMem(0xa123));
        EXPECT(0xa5, gbc.readMem(0xa124));
        // DA 009D
        gbc.setState(0xa1d4, 0xe923, 0x7180, 0xc6e6, 0x448a, 0x7547, 0x1, 0x0);
        gbc.writeMem(0xa1d4, { 0xda, 0xcd, 0x4f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe923, gbc.sp());
        EXPECT(0xa1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa1d4));
        EXPECT(0xcd, gbc.readMem(0xa1d5));
        EXPECT(0x4f, gbc.readMem(0xa1d6));
        // DA 009E
        gbc.setState(0xaf65, 0x553a, 0x4f80, 0x68ad, 0x1634, 0xd373, 0x0, 0x0);
        gbc.writeMem(0xaf65, { 0xda, 0x41, 0x15 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x553a, gbc.sp());
        EXPECT(0xaf68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaf65));
        EXPECT(0x41, gbc.readMem(0xaf66));
        EXPECT(0x15, gbc.readMem(0xaf67));
        // DA 009F
        gbc.setState(0x251a, 0x923e, 0xfee0, 0x35c, 0x533b, 0x5bc6, 0x0, 0x0);
        gbc.writeMem(0x251a, { 0xda, 0x0, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x923e, gbc.sp());
        EXPECT(0x251d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00A0
        gbc.setState(0xcf37, 0xdd73, 0xed40, 0x4683, 0x3760, 0xe965, 0x0, 0x1);
        gbc.writeMem(0xcf37, { 0xda, 0x2f, 0xbb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdd73, gbc.sp());
        EXPECT(0xcf3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcf37));
        EXPECT(0x2f, gbc.readMem(0xcf38));
        EXPECT(0xbb, gbc.readMem(0xcf39));
        // DA 00A1
        gbc.setState(0x60d1, 0xb5b3, 0xbf80, 0x73b4, 0xf2a1, 0x23a, 0x1, 0x0);
        gbc.writeMem(0x60d1, { 0xda, 0x10, 0xa4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb5b3, gbc.sp());
        EXPECT(0x60d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00A2
        gbc.setState(0xbb4e, 0xb800, 0x3b90, 0x925c, 0x9982, 0xc473, 0x1, 0x0);
        gbc.writeMem(0xbb4e, { 0xda, 0x11, 0x69 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb800, gbc.sp());
        EXPECT(0x6911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbb4e));
        EXPECT(0x11, gbc.readMem(0xbb4f));
        EXPECT(0x69, gbc.readMem(0xbb50));
        // DA 00A3
        gbc.setState(0xb7cb, 0x3f08, 0xe2f0, 0x463f, 0xb047, 0x420d, 0x1, 0x1);
        gbc.writeMem(0xb7cb, { 0xda, 0xc0, 0xd2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3f08, gbc.sp());
        EXPECT(0xd2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb7cb));
        EXPECT(0xc0, gbc.readMem(0xb7cc));
        EXPECT(0xd2, gbc.readMem(0xb7cd));
        // DA 00A4
        gbc.setState(0xa974, 0x4cd7, 0xa1b0, 0x4236, 0xddbe, 0x97a6, 0x1, 0x1);
        gbc.writeMem(0xa974, { 0xda, 0x5e, 0x44 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4cd7, gbc.sp());
        EXPECT(0x445e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa974));
        EXPECT(0x5e, gbc.readMem(0xa975));
        EXPECT(0x44, gbc.readMem(0xa976));
        // DA 00A5
        gbc.setState(0x5693, 0xbb87, 0xbf40, 0xc343, 0x8052, 0x7e00, 0x0, 0x1);
        gbc.writeMem(0x5693, { 0xda, 0xb1, 0x16 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbb87, gbc.sp());
        EXPECT(0x5696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00A6
        gbc.setState(0xd4c1, 0x4f7d, 0x9d40, 0x42fa, 0xd949, 0x3c9f, 0x1, 0x0);
        gbc.writeMem(0xd4c1, { 0xda, 0x87, 0xb5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4f7d, gbc.sp());
        EXPECT(0xd4c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd4c1));
        EXPECT(0x87, gbc.readMem(0xd4c2));
        EXPECT(0xb5, gbc.readMem(0xd4c3));
        // DA 00A7
        gbc.setState(0x99ee, 0xb415, 0x41b0, 0xfda7, 0xc4c8, 0x9e84, 0x1, 0x0);
        gbc.writeMem(0x99ee, { 0xda, 0x2e, 0x90 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb415, gbc.sp());
        EXPECT(0x902e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x99ee));
        EXPECT(0x2e, gbc.readMem(0x99ef));
        EXPECT(0x90, gbc.readMem(0x99f0));
        // DA 00A8
        gbc.setState(0xca5, 0xc458, 0x80, 0x2946, 0xa172, 0xc0c9, 0x0, 0x0);
        gbc.writeMem(0xca5, { 0xda, 0x68, 0x6a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc458, gbc.sp());
        EXPECT(0xca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00A9
        gbc.setState(0x799d, 0x83c7, 0xe480, 0xd270, 0x6d05, 0xe6fe, 0x0, 0x0);
        gbc.writeMem(0x799d, { 0xda, 0x7, 0xab });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x83c7, gbc.sp());
        EXPECT(0x79a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00AA
        gbc.setState(0x239a, 0xc6b2, 0xbca0, 0x2782, 0x3577, 0xa41c, 0x0, 0x0);
        gbc.writeMem(0x239a, { 0xda, 0x5e, 0x63 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc6b2, gbc.sp());
        EXPECT(0x239d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00AB
        gbc.setState(0xb9f6, 0x2dee, 0xda0, 0x63e5, 0xf8cc, 0x5ba8, 0x1, 0x0);
        gbc.writeMem(0xb9f6, { 0xda, 0xd8, 0x5e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2dee, gbc.sp());
        EXPECT(0xb9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb9f6));
        EXPECT(0xd8, gbc.readMem(0xb9f7));
        EXPECT(0x5e, gbc.readMem(0xb9f8));
        // DA 00AC
        gbc.setState(0x3ae2, 0xba8e, 0x51d0, 0x7666, 0x3528, 0xcdc5, 0x0, 0x1);
        gbc.writeMem(0x3ae2, { 0xda, 0xe1, 0x19 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xba8e, gbc.sp());
        EXPECT(0x19e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00AD
        gbc.setState(0xc96c, 0x892e, 0xc300, 0xa8b6, 0x969, 0x8deb, 0x1, 0x1);
        gbc.writeMem(0xc96c, { 0xda, 0x2e, 0x6b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x892e, gbc.sp());
        EXPECT(0xc96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc96c));
        EXPECT(0x2e, gbc.readMem(0xc96d));
        EXPECT(0x6b, gbc.readMem(0xc96e));
        // DA 00AE
        gbc.setState(0x8a2e, 0xf3b3, 0x4dd0, 0xf8e8, 0x62a0, 0x242, 0x0, 0x1);
        gbc.writeMem(0x8a2e, { 0xda, 0xba, 0xba });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf3b3, gbc.sp());
        EXPECT(0xbaba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8a2e));
        EXPECT(0xba, gbc.readMem(0x8a2f));
        EXPECT(0xba, gbc.readMem(0x8a30));
        // DA 00AF
        gbc.setState(0x4853, 0x41d2, 0x3fa0, 0x7d5, 0x8f31, 0x3615, 0x1, 0x0);
        gbc.writeMem(0x4853, { 0xda, 0x2d, 0x5f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x41d2, gbc.sp());
        EXPECT(0x4856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00B0
        gbc.setState(0x47c9, 0x4c95, 0x8f70, 0x760e, 0xaf57, 0xdbb3, 0x1, 0x0);
        gbc.writeMem(0x47c9, { 0xda, 0x6b, 0xec });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4c95, gbc.sp());
        EXPECT(0xec6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00B1
        gbc.setState(0x2361, 0xc1a9, 0xa440, 0x8ced, 0x3de3, 0xd465, 0x0, 0x0);
        gbc.writeMem(0x2361, { 0xda, 0x7f, 0x8e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc1a9, gbc.sp());
        EXPECT(0x2364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00B2
        gbc.setState(0x5cd1, 0x1510, 0x2010, 0x261, 0x54e0, 0xeb58, 0x0, 0x0);
        gbc.writeMem(0x5cd1, { 0xda, 0xa3, 0xc6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1510, gbc.sp());
        EXPECT(0xc6a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00B3
        gbc.setState(0x6b0c, 0x5e63, 0x5010, 0x605a, 0x2e20, 0xa655, 0x1, 0x0);
        gbc.writeMem(0x6b0c, { 0xda, 0x4f, 0xb0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5e63, gbc.sp());
        EXPECT(0xb04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00B4
        gbc.setState(0xe0b8, 0xce74, 0x8410, 0xbabb, 0x198, 0x891c, 0x0, 0x0);
        gbc.writeMem(0xe0b8, { 0xda, 0xed, 0xa3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xce74, gbc.sp());
        EXPECT(0xa3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe0b8));
        EXPECT(0xed, gbc.readMem(0xe0b9));
        EXPECT(0xa3, gbc.readMem(0xe0ba));
        // DA 00B5
        gbc.setState(0xc294, 0x5a4b, 0xe3e0, 0x2eb8, 0xea23, 0x3850, 0x1, 0x0);
        gbc.writeMem(0xc294, { 0xda, 0x32, 0x31 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5a4b, gbc.sp());
        EXPECT(0xc297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc294));
        EXPECT(0x32, gbc.readMem(0xc295));
        EXPECT(0x31, gbc.readMem(0xc296));
        // DA 00B6
        gbc.setState(0x712a, 0x9aca, 0x8540, 0x9b4e, 0xfb05, 0x926a, 0x1, 0x0);
        gbc.writeMem(0x712a, { 0xda, 0xb6, 0xa6 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9aca, gbc.sp());
        EXPECT(0x712d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00B7
        gbc.setState(0x109d, 0xb921, 0xda70, 0xbfab, 0xff6e, 0x43d0, 0x1, 0x1);
        gbc.writeMem(0x109d, { 0xda, 0xb1, 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb921, gbc.sp());
        EXPECT(0xb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00B8
        gbc.setState(0xd2b8, 0x1a0, 0x58f0, 0x7aa7, 0xbd09, 0xcc8c, 0x1, 0x0);
        gbc.writeMem(0xd2b8, { 0xda, 0xa, 0xd1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1a0, gbc.sp());
        EXPECT(0xd10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd2b8));
        EXPECT(0xa, gbc.readMem(0xd2b9));
        EXPECT(0xd1, gbc.readMem(0xd2ba));
        // DA 00B9
        gbc.setState(0x5b2f, 0x9b70, 0x5e00, 0x862b, 0x9a53, 0xf6b5, 0x0, 0x1);
        gbc.writeMem(0x5b2f, { 0xda, 0x47, 0xb8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9b70, gbc.sp());
        EXPECT(0x5b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00BA
        gbc.setState(0x19a7, 0xda9b, 0x2730, 0xcf45, 0x6ca3, 0x3039, 0x1, 0x0);
        gbc.writeMem(0x19a7, { 0xda, 0xa6, 0xd4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xda9b, gbc.sp());
        EXPECT(0xd4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00BB
        gbc.setState(0x542d, 0xcdd9, 0x9550, 0xff93, 0x2f0f, 0x440d, 0x1, 0x1);
        gbc.writeMem(0x542d, { 0xda, 0x54, 0xa0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcdd9, gbc.sp());
        EXPECT(0xa054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00BC
        gbc.setState(0x535b, 0x9d0a, 0xfcb0, 0x229e, 0xe311, 0x7284, 0x0, 0x1);
        gbc.writeMem(0x535b, { 0xda, 0x42, 0x41 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9d0a, gbc.sp());
        EXPECT(0x4142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00BD
        gbc.setState(0x2ae9, 0xdd3, 0x68c0, 0x1ad2, 0x5d17, 0x79ef, 0x1, 0x0);
        gbc.writeMem(0x2ae9, { 0xda, 0x5d, 0xe5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdd3, gbc.sp());
        EXPECT(0x2aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00BE
        gbc.setState(0xed5, 0xf74b, 0xc0d0, 0x6fdb, 0x1dcc, 0x96bb, 0x1, 0x1);
        gbc.writeMem(0xed5, { 0xda, 0xd6, 0x18 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf74b, gbc.sp());
        EXPECT(0x18d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00BF
        gbc.setState(0x7a93, 0xf82f, 0x9e90, 0xc128, 0xdc3f, 0xc85c, 0x1, 0x1);
        gbc.writeMem(0x7a93, { 0xda, 0xc2, 0x7f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf82f, gbc.sp());
        EXPECT(0x7fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00C0
        gbc.setState(0xc6a5, 0xcef2, 0x5ba0, 0x2d23, 0x3740, 0xea6c, 0x1, 0x1);
        gbc.writeMem(0xc6a5, { 0xda, 0x1f, 0x3c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcef2, gbc.sp());
        EXPECT(0xc6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc6a5));
        EXPECT(0x1f, gbc.readMem(0xc6a6));
        EXPECT(0x3c, gbc.readMem(0xc6a7));
        // DA 00C1
        gbc.setState(0xe780, 0x998e, 0xb3a0, 0x2073, 0x3d8b, 0x39b6, 0x1, 0x0);
        gbc.writeMem(0xe780, { 0xda, 0x41, 0x1e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x998e, gbc.sp());
        EXPECT(0xe783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe780));
        EXPECT(0x41, gbc.readMem(0xe781));
        EXPECT(0x1e, gbc.readMem(0xe782));
        // DA 00C2
        gbc.setState(0xdc89, 0x978a, 0x80f0, 0xdced, 0x5db8, 0x1355, 0x1, 0x0);
        gbc.writeMem(0xdc89, { 0xda, 0xe5, 0x24 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x978a, gbc.sp());
        EXPECT(0x24e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdc89));
        EXPECT(0xe5, gbc.readMem(0xdc8a));
        EXPECT(0x24, gbc.readMem(0xdc8b));
        // DA 00C3
        gbc.setState(0x7769, 0x670e, 0x77b0, 0x3de0, 0x8868, 0x3bd9, 0x0, 0x1);
        gbc.writeMem(0x7769, { 0xda, 0xb2, 0x17 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x670e, gbc.sp());
        EXPECT(0x17b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00C4
        gbc.setState(0x5715, 0x1fc5, 0xdf30, 0xb26b, 0xe0f1, 0x9ec9, 0x1, 0x0);
        gbc.writeMem(0x5715, { 0xda, 0x20, 0xbf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1fc5, gbc.sp());
        EXPECT(0xbf20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00C5
        gbc.setState(0x94ed, 0x17e4, 0x3780, 0xa8c9, 0x74ec, 0x9dd6, 0x0, 0x0);
        gbc.writeMem(0x94ed, { 0xda, 0x7a, 0xde });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x17e4, gbc.sp());
        EXPECT(0x94f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x94ed));
        EXPECT(0x7a, gbc.readMem(0x94ee));
        EXPECT(0xde, gbc.readMem(0x94ef));
        // DA 00C6
        gbc.setState(0x3a1b, 0x349d, 0x30, 0xddc8, 0xefdd, 0x37aa, 0x0, 0x0);
        gbc.writeMem(0x3a1b, { 0xda, 0xb8, 0x91 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x349d, gbc.sp());
        EXPECT(0x91b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00C7
        gbc.setState(0x6f3d, 0x64a5, 0xc460, 0x1498, 0x3635, 0xf4f3, 0x0, 0x1);
        gbc.writeMem(0x6f3d, { 0xda, 0x48, 0xe8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x64a5, gbc.sp());
        EXPECT(0x6f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00C8
        gbc.setState(0x490c, 0x2269, 0xd9d0, 0xf6db, 0xc164, 0x8353, 0x1, 0x1);
        gbc.writeMem(0x490c, { 0xda, 0xbb, 0xe9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2269, gbc.sp());
        EXPECT(0xe9bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00C9
        gbc.setState(0x6530, 0x94df, 0xb660, 0x60e2, 0xba99, 0x7902, 0x1, 0x1);
        gbc.writeMem(0x6530, { 0xda, 0xc, 0x38 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x94df, gbc.sp());
        EXPECT(0x6533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00CA
        gbc.setState(0x456c, 0x9099, 0x4f00, 0x6908, 0x2a9, 0x186, 0x0, 0x1);
        gbc.writeMem(0x456c, { 0xda, 0xaf, 0xe1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9099, gbc.sp());
        EXPECT(0x456f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00CC
        gbc.setState(0x3c3f, 0x7305, 0x5120, 0x6213, 0x978c, 0xf998, 0x0, 0x1);
        gbc.writeMem(0x3c3f, { 0xda, 0xa5, 0x1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7305, gbc.sp());
        EXPECT(0x3c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00CE
        gbc.setState(0x9d64, 0xbecb, 0xa4b0, 0x8bda, 0x8c62, 0xcb44, 0x0, 0x1);
        gbc.writeMem(0x9d64, { 0xda, 0xf4, 0x2a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbecb, gbc.sp());
        EXPECT(0x2af4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9d64));
        EXPECT(0xf4, gbc.readMem(0x9d65));
        EXPECT(0x2a, gbc.readMem(0x9d66));
        // DA 00CF
        gbc.setState(0xa9ef, 0x17ea, 0x49c0, 0xdfa3, 0xc41, 0xfb6c, 0x0, 0x1);
        gbc.writeMem(0xa9ef, { 0xda, 0x3f, 0x89 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x17ea, gbc.sp());
        EXPECT(0xa9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa9ef));
        EXPECT(0x3f, gbc.readMem(0xa9f0));
        EXPECT(0x89, gbc.readMem(0xa9f1));
        // DA 00D0
        gbc.setState(0xadcb, 0x42c5, 0x8bd0, 0x3c48, 0x2243, 0xe8a3, 0x0, 0x1);
        gbc.writeMem(0xadcb, { 0xda, 0x99, 0xe6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x42c5, gbc.sp());
        EXPECT(0xe699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xadcb));
        EXPECT(0x99, gbc.readMem(0xadcc));
        EXPECT(0xe6, gbc.readMem(0xadcd));
        // DA 00D1
        gbc.setState(0xd298, 0x4eca, 0xade0, 0x99e8, 0x5966, 0x5dc0, 0x1, 0x1);
        gbc.writeMem(0xd298, { 0xda, 0x7c, 0x84 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4eca, gbc.sp());
        EXPECT(0xd29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd298));
        EXPECT(0x7c, gbc.readMem(0xd299));
        EXPECT(0x84, gbc.readMem(0xd29a));
        // DA 00D3
        gbc.setState(0x5bd4, 0xb7cd, 0xbbf0, 0xa2cf, 0xce85, 0x4f0e, 0x0, 0x1);
        gbc.writeMem(0x5bd4, { 0xda, 0xb0, 0xe5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb7cd, gbc.sp());
        EXPECT(0xe5b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00D4
        gbc.setState(0x9a42, 0x21cb, 0x4df0, 0x75d5, 0xd9f1, 0x55fe, 0x0, 0x0);
        gbc.writeMem(0x9a42, { 0xda, 0xc6, 0x50 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x21cb, gbc.sp());
        EXPECT(0x50c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9a42));
        EXPECT(0xc6, gbc.readMem(0x9a43));
        EXPECT(0x50, gbc.readMem(0x9a44));
        // DA 00D5
        gbc.setState(0xddcc, 0x410, 0x6b20, 0x24f6, 0xcd56, 0x356e, 0x0, 0x0);
        gbc.writeMem(0xddcc, { 0xda, 0xdc, 0xa0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x410, gbc.sp());
        EXPECT(0xddcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xddcc));
        EXPECT(0xdc, gbc.readMem(0xddcd));
        EXPECT(0xa0, gbc.readMem(0xddce));
        // DA 00D6
        gbc.setState(0xa189, 0x1297, 0x43f0, 0x4deb, 0xbb32, 0xb6b8, 0x1, 0x0);
        gbc.writeMem(0xa189, { 0xda, 0x94, 0x3a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1297, gbc.sp());
        EXPECT(0x3a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa189));
        EXPECT(0x94, gbc.readMem(0xa18a));
        EXPECT(0x3a, gbc.readMem(0xa18b));
        // DA 00D7
        gbc.setState(0x137e, 0x417f, 0xa620, 0xd842, 0x971f, 0x7d01, 0x0, 0x0);
        gbc.writeMem(0x137e, { 0xda, 0x92, 0xce });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x417f, gbc.sp());
        EXPECT(0x1381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00D8
        gbc.setState(0x63df, 0x64f6, 0x5270, 0x664c, 0xcc9e, 0x84a4, 0x1, 0x1);
        gbc.writeMem(0x63df, { 0xda, 0x21, 0x7c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x64f6, gbc.sp());
        EXPECT(0x7c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00D9
        gbc.setState(0x73d1, 0xaa8f, 0xb6c0, 0x4b39, 0x5fc6, 0xe29c, 0x1, 0x1);
        gbc.writeMem(0x73d1, { 0xda, 0x4c, 0x7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xaa8f, gbc.sp());
        EXPECT(0x73d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00DA
        gbc.setState(0x52, 0x887f, 0x4460, 0x8ff, 0x94af, 0x5920, 0x0, 0x0);
        gbc.writeMem(0x52, { 0xda, 0xdd, 0xf1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x887f, gbc.sp());
        EXPECT(0x55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00DB
        gbc.setState(0x7b9c, 0xdb78, 0x4a30, 0x8f3b, 0xedda, 0x6e3a, 0x0, 0x1);
        gbc.writeMem(0x7b9c, { 0xda, 0xf6, 0x88 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdb78, gbc.sp());
        EXPECT(0x88f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00DC
        gbc.setState(0xef82, 0x2811, 0xe000, 0x15bd, 0xe3ba, 0xddb8, 0x1, 0x1);
        gbc.writeMem(0xef82, { 0xda, 0x6c, 0xd4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2811, gbc.sp());
        EXPECT(0xef85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xef82));
        EXPECT(0x6c, gbc.readMem(0xef83));
        EXPECT(0xd4, gbc.readMem(0xef84));
        // DA 00DD
        gbc.setState(0xaa9e, 0x764a, 0x2070, 0x482c, 0x10a1, 0xa6ef, 0x1, 0x0);
        gbc.writeMem(0xaa9e, { 0xda, 0xa4, 0xa1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x764a, gbc.sp());
        EXPECT(0xa1a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaa9e));
        EXPECT(0xa4, gbc.readMem(0xaa9f));
        EXPECT(0xa1, gbc.readMem(0xaaa0));
        // DA 00DE
        gbc.setState(0x1fa9, 0xf3cb, 0xb680, 0xa15f, 0xb209, 0x56ad, 0x1, 0x1);
        gbc.writeMem(0x1fa9, { 0xda, 0x3c, 0xb5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf3cb, gbc.sp());
        EXPECT(0x1fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00DF
        gbc.setState(0x6887, 0xc17b, 0x4370, 0x9a17, 0x99f8, 0xe28d, 0x1, 0x1);
        gbc.writeMem(0x6887, { 0xda, 0x2c, 0x85 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc17b, gbc.sp());
        EXPECT(0x852c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00E0
        gbc.setState(0x312, 0xbf9c, 0xa3c0, 0xf639, 0x854e, 0x5b96, 0x1, 0x1);
        gbc.writeMem(0x312, { 0xda, 0x57, 0x74 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbf9c, gbc.sp());
        EXPECT(0x315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00E1
        gbc.setState(0x311c, 0x2a6b, 0x5820, 0x67f, 0xee21, 0x666b, 0x0, 0x1);
        gbc.writeMem(0x311c, { 0xda, 0xc7, 0x17 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2a6b, gbc.sp());
        EXPECT(0x311f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00E2
        gbc.setState(0x307e, 0xf2ea, 0xdf10, 0x457c, 0xde9b, 0x4373, 0x1, 0x0);
        gbc.writeMem(0x307e, { 0xda, 0x9d, 0x60 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf2ea, gbc.sp());
        EXPECT(0x609d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00E3
        gbc.setState(0xc08, 0x425c, 0xed0, 0x7a02, 0x5ff7, 0xc46a, 0x1, 0x0);
        gbc.writeMem(0xc08, { 0xda, 0x12, 0x48 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x425c, gbc.sp());
        EXPECT(0x4812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00E4
        gbc.setState(0xa1bf, 0x8ef8, 0xf170, 0xc1fa, 0x2400, 0xa8d, 0x1, 0x1);
        gbc.writeMem(0xa1bf, { 0xda, 0x82, 0xf8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8ef8, gbc.sp());
        EXPECT(0xf882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa1bf));
        EXPECT(0x82, gbc.readMem(0xa1c0));
        EXPECT(0xf8, gbc.readMem(0xa1c1));
        // DA 00E5
        gbc.setState(0xe7d, 0x976, 0xf0b0, 0x6e85, 0x5a24, 0xab25, 0x1, 0x1);
        gbc.writeMem(0xe7d, { 0xda, 0xd5, 0xe7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x976, gbc.sp());
        EXPECT(0xe7d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00E6
        gbc.setState(0x964e, 0x12da, 0xa900, 0xfc80, 0x1b19, 0x4e6e, 0x0, 0x1);
        gbc.writeMem(0x964e, { 0xda, 0xd6, 0xf7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x12da, gbc.sp());
        EXPECT(0x9651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x964e));
        EXPECT(0xd6, gbc.readMem(0x964f));
        EXPECT(0xf7, gbc.readMem(0x9650));
        // DA 00E8
        gbc.setState(0xa199, 0x1041, 0x6760, 0x208, 0xb6e1, 0xb74d, 0x1, 0x0);
        gbc.writeMem(0xa199, { 0xda, 0xf3, 0x36 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1041, gbc.sp());
        EXPECT(0xa19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa199));
        EXPECT(0xf3, gbc.readMem(0xa19a));
        EXPECT(0x36, gbc.readMem(0xa19b));
        // DA 00E9
        gbc.setState(0x1868, 0x3c54, 0xf4c0, 0xb3ff, 0xa601, 0x8a6f, 0x0, 0x1);
        gbc.writeMem(0x1868, { 0xda, 0x53, 0x27 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3c54, gbc.sp());
        EXPECT(0x186b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00EA
        gbc.setState(0x4461, 0xc32e, 0x42f0, 0x5886, 0xe3f1, 0x27bb, 0x1, 0x1);
        gbc.writeMem(0x4461, { 0xda, 0x27, 0x1c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc32e, gbc.sp());
        EXPECT(0x1c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00EB
        gbc.setState(0x4ce7, 0xe315, 0x2330, 0xa81f, 0xf008, 0x2f14, 0x0, 0x1);
        gbc.writeMem(0x4ce7, { 0xda, 0x2f, 0x3f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe315, gbc.sp());
        EXPECT(0x3f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00EC
        gbc.setState(0x186b, 0xb921, 0xa30, 0xcfd6, 0xa26, 0x73bc, 0x0, 0x1);
        gbc.writeMem(0x186b, { 0xda, 0x45, 0x6d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb921, gbc.sp());
        EXPECT(0x6d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00ED
        gbc.setState(0x1b21, 0x500c, 0x9720, 0x442a, 0xed40, 0xad67, 0x0, 0x0);
        gbc.writeMem(0x1b21, { 0xda, 0xb8, 0xbf });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x500c, gbc.sp());
        EXPECT(0x1b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00EE
        gbc.setState(0x693a, 0x7ca1, 0xfc10, 0x588b, 0x4886, 0x1a70, 0x1, 0x1);
        gbc.writeMem(0x693a, { 0xda, 0xa2, 0x7f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7ca1, gbc.sp());
        EXPECT(0x7fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00EF
        gbc.setState(0xc6e7, 0xdb49, 0xc230, 0x2231, 0x1ed4, 0x4f68, 0x1, 0x1);
        gbc.writeMem(0xc6e7, { 0xda, 0xf1, 0xc0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdb49, gbc.sp());
        EXPECT(0xc0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc6e7));
        EXPECT(0xf1, gbc.readMem(0xc6e8));
        EXPECT(0xc0, gbc.readMem(0xc6e9));
        // DA 00F0
        gbc.setState(0xc6ec, 0x5b01, 0xaef0, 0x6c10, 0xf2cf, 0x76ac, 0x0, 0x1);
        gbc.writeMem(0xc6ec, { 0xda, 0x4, 0xa5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5b01, gbc.sp());
        EXPECT(0xa504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc6ec));
        EXPECT(0x4, gbc.readMem(0xc6ed));
        EXPECT(0xa5, gbc.readMem(0xc6ee));
        // DA 00F1
        gbc.setState(0x74ad, 0x5997, 0xb200, 0xc3e6, 0x891b, 0x4b7d, 0x1, 0x0);
        gbc.writeMem(0x74ad, { 0xda, 0x6b, 0xa2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5997, gbc.sp());
        EXPECT(0x74b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00F2
        gbc.setState(0xcc70, 0x1cef, 0xe1c0, 0xcb8e, 0xda63, 0xa48, 0x1, 0x1);
        gbc.writeMem(0xcc70, { 0xda, 0x51, 0xa2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1cef, gbc.sp());
        EXPECT(0xcc73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcc70));
        EXPECT(0x51, gbc.readMem(0xcc71));
        EXPECT(0xa2, gbc.readMem(0xcc72));
        // DA 00F3
        gbc.setState(0xc84d, 0x207e, 0xf340, 0x111a, 0xcc6d, 0x4aca, 0x1, 0x0);
        gbc.writeMem(0xc84d, { 0xda, 0x72, 0x31 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x207e, gbc.sp());
        EXPECT(0xc850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc84d));
        EXPECT(0x72, gbc.readMem(0xc84e));
        EXPECT(0x31, gbc.readMem(0xc84f));
        // DA 00F4
        gbc.setState(0x8f7e, 0xb90d, 0x3790, 0x4d43, 0x501e, 0xff30, 0x0, 0x1);
        gbc.writeMem(0x8f7e, { 0xda, 0x11, 0xd3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb90d, gbc.sp());
        EXPECT(0xd311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8f7e));
        EXPECT(0x11, gbc.readMem(0x8f7f));
        EXPECT(0xd3, gbc.readMem(0x8f80));
        // DA 00F5
        gbc.setState(0xb4f6, 0x57e2, 0x7ad0, 0xd188, 0x8b27, 0x608a, 0x1, 0x1);
        gbc.writeMem(0xb4f6, { 0xda, 0x19, 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x57e2, gbc.sp());
        EXPECT(0x5719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb4f6));
        EXPECT(0x19, gbc.readMem(0xb4f7));
        EXPECT(0x57, gbc.readMem(0xb4f8));
        // DA 00F6
        gbc.setState(0x4de6, 0x801a, 0x5570, 0x7126, 0x5ef6, 0x8ca4, 0x1, 0x1);
        gbc.writeMem(0x4de6, { 0xda, 0x78, 0xfb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x801a, gbc.sp());
        EXPECT(0xfb78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00F7
        gbc.setState(0x66d4, 0x7519, 0x4df0, 0x534f, 0xfe57, 0x81e8, 0x1, 0x1);
        gbc.writeMem(0x66d4, { 0xda, 0x5f, 0xc5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7519, gbc.sp());
        EXPECT(0xc55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 00FA
        gbc.setState(0x4b6e, 0x4a43, 0xa6a0, 0x5933, 0xe28f, 0xdb03, 0x1, 0x1);
        gbc.writeMem(0x4b6e, { 0xda, 0xda, 0xa3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4a43, gbc.sp());
        EXPECT(0x4b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00FB
        gbc.setState(0x6c06, 0x3291, 0x84e0, 0xda38, 0xeb9, 0x4d40, 0x1, 0x1);
        gbc.writeMem(0x6c06, { 0xda, 0x16, 0x5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3291, gbc.sp());
        EXPECT(0x6c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00FC
        gbc.setState(0x8927, 0xafde, 0xcc20, 0xbf3c, 0x2ab3, 0x9f52, 0x0, 0x0);
        gbc.writeMem(0x8927, { 0xda, 0x22, 0xa2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xafde, gbc.sp());
        EXPECT(0x892a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8927));
        EXPECT(0x22, gbc.readMem(0x8928));
        EXPECT(0xa2, gbc.readMem(0x8929));
        // DA 00FD
        gbc.setState(0x7cbe, 0xcf7c, 0x3e20, 0xcf70, 0x14dd, 0x81e5, 0x1, 0x1);
        gbc.writeMem(0x7cbe, { 0xda, 0x1, 0x25 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcf7c, gbc.sp());
        EXPECT(0x7cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 00FE
        gbc.setState(0xa447, 0xad40, 0xe810, 0x3eb, 0xfd59, 0x5deb, 0x0, 0x1);
        gbc.writeMem(0xa447, { 0xda, 0xfa, 0x85 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xad40, gbc.sp());
        EXPECT(0x85fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa447));
        EXPECT(0xfa, gbc.readMem(0xa448));
        EXPECT(0x85, gbc.readMem(0xa449));
        // DA 00FF
        gbc.setState(0xd0ca, 0x2c0f, 0x990, 0xf9c3, 0x47c, 0x50c, 0x1, 0x1);
        gbc.writeMem(0xd0ca, { 0xda, 0x67, 0xfe });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2c0f, gbc.sp());
        EXPECT(0xfe67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd0ca));
        EXPECT(0x67, gbc.readMem(0xd0cb));
        EXPECT(0xfe, gbc.readMem(0xd0cc));
        // DA 0100
        gbc.setState(0x7a11, 0xd0a8, 0xb2e0, 0xfd57, 0x8bf9, 0xbcca, 0x0, 0x1);
        gbc.writeMem(0x7a11, { 0xda, 0x75, 0xfc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd0a8, gbc.sp());
        EXPECT(0x7a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0101
        gbc.setState(0xc1e9, 0xeb88, 0x140, 0x4efe, 0x27f5, 0x560f, 0x1, 0x0);
        gbc.writeMem(0xc1e9, { 0xda, 0x57, 0x14 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xeb88, gbc.sp());
        EXPECT(0xc1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc1e9));
        EXPECT(0x57, gbc.readMem(0xc1ea));
        EXPECT(0x14, gbc.readMem(0xc1eb));
        // DA 0102
        gbc.setState(0xd23f, 0x99ab, 0xa2d0, 0x6658, 0x45d0, 0xea34, 0x0, 0x0);
        gbc.writeMem(0xd23f, { 0xda, 0x2a, 0x6 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x99ab, gbc.sp());
        EXPECT(0x62a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd23f));
        EXPECT(0x2a, gbc.readMem(0xd240));
        EXPECT(0x6, gbc.readMem(0xd241));
        // DA 0103
        gbc.setState(0x418d, 0xd3c3, 0x4700, 0x8d6c, 0xd10f, 0xe0d4, 0x0, 0x1);
        gbc.writeMem(0x418d, { 0xda, 0xbe, 0xc3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd3c3, gbc.sp());
        EXPECT(0x4190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0104
        gbc.setState(0x182, 0x30ed, 0x8ba0, 0xb3f, 0x11d7, 0x8d51, 0x0, 0x0);
        gbc.writeMem(0x182, { 0xda, 0xb4, 0x64 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x30ed, gbc.sp());
        EXPECT(0x185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0105
        gbc.setState(0x1c8b, 0xcc76, 0x6c40, 0x900e, 0x904a, 0xbbaf, 0x1, 0x0);
        gbc.writeMem(0x1c8b, { 0xda, 0x24, 0xbc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcc76, gbc.sp());
        EXPECT(0x1c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0106
        gbc.setState(0x86c6, 0x964a, 0x8570, 0xcaae, 0x1b0d, 0xfe85, 0x0, 0x0);
        gbc.writeMem(0x86c6, { 0xda, 0xd8, 0x65 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x964a, gbc.sp());
        EXPECT(0x65d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x86c6));
        EXPECT(0xd8, gbc.readMem(0x86c7));
        EXPECT(0x65, gbc.readMem(0x86c8));
        // DA 0107
        gbc.setState(0x7a95, 0xee1c, 0x5020, 0x8396, 0xa7b4, 0xb08f, 0x1, 0x1);
        gbc.writeMem(0x7a95, { 0xda, 0x36, 0x10 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xee1c, gbc.sp());
        EXPECT(0x7a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0108
        gbc.setState(0xc7cd, 0x9a5a, 0xe870, 0xa353, 0xd5c2, 0x2383, 0x1, 0x1);
        gbc.writeMem(0xc7cd, { 0xda, 0x19, 0xb0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9a5a, gbc.sp());
        EXPECT(0xb019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc7cd));
        EXPECT(0x19, gbc.readMem(0xc7ce));
        EXPECT(0xb0, gbc.readMem(0xc7cf));
        // DA 0109
        gbc.setState(0x5ecf, 0x580c, 0x29f0, 0x2d38, 0xbd1, 0x1a5b, 0x1, 0x1);
        gbc.writeMem(0x5ecf, { 0xda, 0xca, 0x33 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x580c, gbc.sp());
        EXPECT(0x33ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 010A
        gbc.setState(0xc747, 0x755f, 0xd740, 0xf4cd, 0x5833, 0xb5d7, 0x1, 0x1);
        gbc.writeMem(0xc747, { 0xda, 0x9b, 0x95 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x755f, gbc.sp());
        EXPECT(0xc74a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc747));
        EXPECT(0x9b, gbc.readMem(0xc748));
        EXPECT(0x95, gbc.readMem(0xc749));
        // DA 010B
        gbc.setState(0x620f, 0xa191, 0xe300, 0xeb70, 0xbf06, 0x6eec, 0x1, 0x0);
        gbc.writeMem(0x620f, { 0xda, 0x61, 0x18 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa191, gbc.sp());
        EXPECT(0x6212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 010C
        gbc.setState(0x616, 0x4611, 0x94f0, 0x468c, 0xbaf0, 0xa3a, 0x1, 0x0);
        gbc.writeMem(0x616, { 0xda, 0x1b, 0x76 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4611, gbc.sp());
        EXPECT(0x761b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 010D
        gbc.setState(0x775c, 0xa400, 0x8880, 0xf3a6, 0x8505, 0x193b, 0x1, 0x0);
        gbc.writeMem(0x775c, { 0xda, 0x2d, 0xbd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa400, gbc.sp());
        EXPECT(0x775f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 010E
        gbc.setState(0x4cb5, 0xdd, 0x87b0, 0xb421, 0x7b15, 0xf9d7, 0x1, 0x0);
        gbc.writeMem(0x4cb5, { 0xda, 0xd9, 0x79 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdd, gbc.sp());
        EXPECT(0x79d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0110
        gbc.setState(0x7724, 0xb521, 0xf150, 0xcddc, 0x2d57, 0xbb14, 0x1, 0x1);
        gbc.writeMem(0x7724, { 0xda, 0xdf, 0x27 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb521, gbc.sp());
        EXPECT(0x27df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0111
        gbc.setState(0x6807, 0xe20e, 0x60e0, 0x927a, 0x72e8, 0xe9f3, 0x0, 0x1);
        gbc.writeMem(0x6807, { 0xda, 0x86, 0x61 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe20e, gbc.sp());
        EXPECT(0x680a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0112
        gbc.setState(0xefcf, 0x437f, 0x8fa0, 0x76dc, 0xf1e3, 0x78b2, 0x1, 0x0);
        gbc.writeMem(0xefcf, { 0xda, 0x9d, 0x98 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x437f, gbc.sp());
        EXPECT(0xefd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xefcf));
        EXPECT(0x9d, gbc.readMem(0xefd0));
        EXPECT(0x98, gbc.readMem(0xefd1));
        // DA 0113
        gbc.setState(0x2aaa, 0x3982, 0xc9b0, 0xa846, 0xec72, 0xbf9f, 0x0, 0x0);
        gbc.writeMem(0x2aaa, { 0xda, 0xbd, 0xef });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3982, gbc.sp());
        EXPECT(0xefbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0114
        gbc.setState(0x91e3, 0x33bd, 0x7700, 0x1471, 0x83fc, 0x7153, 0x0, 0x1);
        gbc.writeMem(0x91e3, { 0xda, 0x8b, 0xe1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x33bd, gbc.sp());
        EXPECT(0x91e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x91e3));
        EXPECT(0x8b, gbc.readMem(0x91e4));
        EXPECT(0xe1, gbc.readMem(0x91e5));
        // DA 0115
        gbc.setState(0xc923, 0xb2e0, 0xa540, 0x640e, 0x7c7d, 0x8a0, 0x1, 0x1);
        gbc.writeMem(0xc923, { 0xda, 0xb2, 0xfc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb2e0, gbc.sp());
        EXPECT(0xc926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc923));
        EXPECT(0xb2, gbc.readMem(0xc924));
        EXPECT(0xfc, gbc.readMem(0xc925));
        // DA 0116
        gbc.setState(0x675, 0x738, 0x9f00, 0x54d0, 0xdc3a, 0xaf09, 0x0, 0x1);
        gbc.writeMem(0x675, { 0xda, 0xad, 0x33 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x738, gbc.sp());
        EXPECT(0x678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0117
        gbc.setState(0x5a4a, 0x864d, 0xd870, 0xa5fc, 0x7745, 0xb292, 0x0, 0x0);
        gbc.writeMem(0x5a4a, { 0xda, 0x86, 0x1a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x864d, gbc.sp());
        EXPECT(0x1a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0118
        gbc.setState(0xd8dd, 0x4347, 0x9790, 0x1823, 0x658, 0xc8dd, 0x0, 0x1);
        gbc.writeMem(0xd8dd, { 0xda, 0x71, 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4347, gbc.sp());
        EXPECT(0x571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd8dd));
        EXPECT(0x71, gbc.readMem(0xd8de));
        EXPECT(0x5, gbc.readMem(0xd8df));
        // DA 0119
        gbc.setState(0xcdcf, 0x34fd, 0x3ed0, 0x7888, 0x6b5a, 0x493a, 0x1, 0x1);
        gbc.writeMem(0xcdcf, { 0xda, 0xec, 0xc1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x34fd, gbc.sp());
        EXPECT(0xc1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcdcf));
        EXPECT(0xec, gbc.readMem(0xcdd0));
        EXPECT(0xc1, gbc.readMem(0xcdd1));
        // DA 011A
        gbc.setState(0x766e, 0xa9cc, 0xb650, 0x30f8, 0x91ea, 0xb1ff, 0x0, 0x0);
        gbc.writeMem(0x766e, { 0xda, 0xf2, 0x6b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa9cc, gbc.sp());
        EXPECT(0x6bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 011B
        gbc.setState(0x72d3, 0x554a, 0xec90, 0xe975, 0xb977, 0x9620, 0x1, 0x0);
        gbc.writeMem(0x72d3, { 0xda, 0xbe, 0x4b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x554a, gbc.sp());
        EXPECT(0x4bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 011C
        gbc.setState(0xe659, 0x96f0, 0xbd20, 0xca8b, 0x1a37, 0x2e1b, 0x0, 0x1);
        gbc.writeMem(0xe659, { 0xda, 0xaf, 0xe9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x96f0, gbc.sp());
        EXPECT(0xe65c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe659));
        EXPECT(0xaf, gbc.readMem(0xe65a));
        EXPECT(0xe9, gbc.readMem(0xe65b));
        // DA 011E
        gbc.setState(0xc4c2, 0xbb29, 0x5150, 0x7752, 0xcd1d, 0xbf5e, 0x0, 0x1);
        gbc.writeMem(0xc4c2, { 0xda, 0xc6, 0x88 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbb29, gbc.sp());
        EXPECT(0x88c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc4c2));
        EXPECT(0xc6, gbc.readMem(0xc4c3));
        EXPECT(0x88, gbc.readMem(0xc4c4));
        // DA 011F
        gbc.setState(0xe889, 0x2b0f, 0x3020, 0x4cf3, 0x993c, 0x6010, 0x1, 0x0);
        gbc.writeMem(0xe889, { 0xda, 0x7c, 0xf2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2b0f, gbc.sp());
        EXPECT(0xe88c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe889));
        EXPECT(0x7c, gbc.readMem(0xe88a));
        EXPECT(0xf2, gbc.readMem(0xe88b));
        // DA 0120
        gbc.setState(0xa991, 0x8a19, 0x2c70, 0x6b09, 0xd8e4, 0x17c1, 0x1, 0x0);
        gbc.writeMem(0xa991, { 0xda, 0xeb, 0xc9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8a19, gbc.sp());
        EXPECT(0xc9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa991));
        EXPECT(0xeb, gbc.readMem(0xa992));
        EXPECT(0xc9, gbc.readMem(0xa993));
        // DA 0121
        gbc.setState(0x41e, 0x227d, 0x4260, 0x2b78, 0x84eb, 0x17c0, 0x0, 0x1);
        gbc.writeMem(0x41e, { 0xda, 0xf5, 0x21 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x227d, gbc.sp());
        EXPECT(0x421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0122
        gbc.setState(0x7876, 0x557d, 0xbaa0, 0x71e4, 0x2463, 0x583a, 0x0, 0x0);
        gbc.writeMem(0x7876, { 0xda, 0x5a, 0xef });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x557d, gbc.sp());
        EXPECT(0x7879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0123
        gbc.setState(0xd65b, 0x6df2, 0x6050, 0x8c7d, 0x2b77, 0xff75, 0x0, 0x0);
        gbc.writeMem(0xd65b, { 0xda, 0xe6, 0xd0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6df2, gbc.sp());
        EXPECT(0xd0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd65b));
        EXPECT(0xe6, gbc.readMem(0xd65c));
        EXPECT(0xd0, gbc.readMem(0xd65d));
        // DA 0124
        gbc.setState(0x9563, 0x514, 0x18e0, 0xbaaf, 0x9a12, 0x2001, 0x0, 0x1);
        gbc.writeMem(0x9563, { 0xda, 0x4e, 0x3b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x514, gbc.sp());
        EXPECT(0x9566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9563));
        EXPECT(0x4e, gbc.readMem(0x9564));
        EXPECT(0x3b, gbc.readMem(0x9565));
        // DA 0125
        gbc.setState(0x27e2, 0xa901, 0xadb0, 0xda96, 0xe34b, 0xeed8, 0x0, 0x1);
        gbc.writeMem(0x27e2, { 0xda, 0x7f, 0xe4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa901, gbc.sp());
        EXPECT(0xe47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0126
        gbc.setState(0xe800, 0xd743, 0xfea0, 0x281e, 0x3447, 0xec9e, 0x1, 0x1);
        gbc.writeMem(0xe800, { 0xda, 0xca, 0xc8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd743, gbc.sp());
        EXPECT(0xe803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe800));
        EXPECT(0xca, gbc.readMem(0xe801));
        EXPECT(0xc8, gbc.readMem(0xe802));
        // DA 0127
        gbc.setState(0x5417, 0x9226, 0xd500, 0x7e63, 0x2bd2, 0xbfdd, 0x1, 0x0);
        gbc.writeMem(0x5417, { 0xda, 0x5, 0xb9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9226, gbc.sp());
        EXPECT(0x541a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0128
        gbc.setState(0x7241, 0xca43, 0x8e00, 0x96cf, 0x4fdc, 0xd4a7, 0x0, 0x1);
        gbc.writeMem(0x7241, { 0xda, 0xf5, 0xb5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xca43, gbc.sp());
        EXPECT(0x7244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0129
        gbc.setState(0xca70, 0xf0bc, 0xd270, 0x1700, 0x1c7d, 0x143, 0x1, 0x1);
        gbc.writeMem(0xca70, { 0xda, 0x1e, 0x55 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf0bc, gbc.sp());
        EXPECT(0x551e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xca70));
        EXPECT(0x1e, gbc.readMem(0xca71));
        EXPECT(0x55, gbc.readMem(0xca72));
        // DA 012A
        gbc.setState(0xcb2a, 0xc15b, 0xa810, 0x4820, 0x6b2f, 0x4593, 0x1, 0x1);
        gbc.writeMem(0xcb2a, { 0xda, 0xd, 0x6a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc15b, gbc.sp());
        EXPECT(0x6a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcb2a));
        EXPECT(0xd, gbc.readMem(0xcb2b));
        EXPECT(0x6a, gbc.readMem(0xcb2c));
        // DA 012B
        gbc.setState(0xb268, 0xe8b9, 0xbd20, 0x2e4a, 0xfdcf, 0x8a6b, 0x1, 0x1);
        gbc.writeMem(0xb268, { 0xda, 0x93, 0x25 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe8b9, gbc.sp());
        EXPECT(0xb26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb268));
        EXPECT(0x93, gbc.readMem(0xb269));
        EXPECT(0x25, gbc.readMem(0xb26a));
        // DA 012C
        gbc.setState(0x31ec, 0xdc08, 0xfeb0, 0x461, 0x732e, 0x3c31, 0x1, 0x0);
        gbc.writeMem(0x31ec, { 0xda, 0x48, 0x8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdc08, gbc.sp());
        EXPECT(0x848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 012D
        gbc.setState(0xcf64, 0x6a09, 0xe350, 0x5f21, 0xa8d6, 0xd978, 0x1, 0x1);
        gbc.writeMem(0xcf64, { 0xda, 0xa6, 0xfe });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6a09, gbc.sp());
        EXPECT(0xfea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcf64));
        EXPECT(0xa6, gbc.readMem(0xcf65));
        EXPECT(0xfe, gbc.readMem(0xcf66));
        // DA 012E
        gbc.setState(0xe862, 0x2612, 0x4b80, 0x4e31, 0x35ae, 0xcb64, 0x0, 0x1);
        gbc.writeMem(0xe862, { 0xda, 0xc0, 0xbd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2612, gbc.sp());
        EXPECT(0xe865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe862));
        EXPECT(0xc0, gbc.readMem(0xe863));
        EXPECT(0xbd, gbc.readMem(0xe864));
        // DA 012F
        gbc.setState(0x7914, 0xef89, 0xec70, 0x7366, 0x3f9, 0x3b47, 0x1, 0x1);
        gbc.writeMem(0x7914, { 0xda, 0x25, 0xf3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xef89, gbc.sp());
        EXPECT(0xf325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0130
        gbc.setState(0x1e95, 0x1edc, 0x9e70, 0xf7d5, 0xe7ac, 0xcf2d, 0x0, 0x1);
        gbc.writeMem(0x1e95, { 0xda, 0xac, 0x22 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1edc, gbc.sp());
        EXPECT(0x22ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0131
        gbc.setState(0x885a, 0xc700, 0xea40, 0x9a6, 0x988e, 0x83dc, 0x1, 0x1);
        gbc.writeMem(0x885a, { 0xda, 0x90, 0x6 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc700, gbc.sp());
        EXPECT(0x885d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x885a));
        EXPECT(0x90, gbc.readMem(0x885b));
        EXPECT(0x6, gbc.readMem(0x885c));
        // DA 0132
        gbc.setState(0xd8b3, 0x56d5, 0xf750, 0xa0ce, 0x9fc5, 0xe645, 0x0, 0x0);
        gbc.writeMem(0xd8b3, { 0xda, 0x3f, 0x3c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x56d5, gbc.sp());
        EXPECT(0x3c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd8b3));
        EXPECT(0x3f, gbc.readMem(0xd8b4));
        EXPECT(0x3c, gbc.readMem(0xd8b5));
        // DA 0133
        gbc.setState(0xc5df, 0x9812, 0xc980, 0x2161, 0x783b, 0x5a23, 0x0, 0x1);
        gbc.writeMem(0xc5df, { 0xda, 0x3a, 0x87 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9812, gbc.sp());
        EXPECT(0xc5e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc5df));
        EXPECT(0x3a, gbc.readMem(0xc5e0));
        EXPECT(0x87, gbc.readMem(0xc5e1));
        // DA 0134
        gbc.setState(0x56c1, 0x497e, 0x9e70, 0x78d9, 0xc7bf, 0x4d3e, 0x0, 0x0);
        gbc.writeMem(0x56c1, { 0xda, 0xe, 0xd6 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x497e, gbc.sp());
        EXPECT(0xd60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0135
        gbc.setState(0xd99c, 0x6ee3, 0xb510, 0xe548, 0x73f3, 0x8046, 0x1, 0x1);
        gbc.writeMem(0xd99c, { 0xda, 0x75, 0xa6 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6ee3, gbc.sp());
        EXPECT(0xa675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd99c));
        EXPECT(0x75, gbc.readMem(0xd99d));
        EXPECT(0xa6, gbc.readMem(0xd99e));
        // DA 0136
        gbc.setState(0x1b1b, 0xa9b7, 0xcaf0, 0xb10e, 0x5746, 0xe3f1, 0x0, 0x0);
        gbc.writeMem(0x1b1b, { 0xda, 0x6b, 0xe0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa9b7, gbc.sp());
        EXPECT(0xe06b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0137
        gbc.setState(0x4ef9, 0xb6e5, 0xdd90, 0x3d7f, 0x4931, 0x5dc3, 0x0, 0x0);
        gbc.writeMem(0x4ef9, { 0xda, 0xf7, 0x5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb6e5, gbc.sp());
        EXPECT(0x5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0138
        gbc.setState(0xd420, 0x60, 0x2370, 0xdf7b, 0x9282, 0x9c50, 0x0, 0x1);
        gbc.writeMem(0xd420, { 0xda, 0xc3, 0x8f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x60, gbc.sp());
        EXPECT(0x8fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd420));
        EXPECT(0xc3, gbc.readMem(0xd421));
        EXPECT(0x8f, gbc.readMem(0xd422));
        // DA 0139
        gbc.setState(0xe3d8, 0x6ece, 0x1240, 0x3dcd, 0x8f41, 0x1949, 0x1, 0x1);
        gbc.writeMem(0xe3d8, { 0xda, 0xe5, 0xe9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6ece, gbc.sp());
        EXPECT(0xe3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe3d8));
        EXPECT(0xe5, gbc.readMem(0xe3d9));
        EXPECT(0xe9, gbc.readMem(0xe3da));
        // DA 013A
        gbc.setState(0x26f5, 0x96fd, 0xac40, 0xcbe9, 0x22e2, 0xf91e, 0x0, 0x1);
        gbc.writeMem(0x26f5, { 0xda, 0x53, 0x4e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x96fd, gbc.sp());
        EXPECT(0x26f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 013B
        gbc.setState(0xaecf, 0xba20, 0x1ee0, 0x1d8e, 0xdbfa, 0xa070, 0x1, 0x1);
        gbc.writeMem(0xaecf, { 0xda, 0xd7, 0xdf });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xba20, gbc.sp());
        EXPECT(0xaed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaecf));
        EXPECT(0xd7, gbc.readMem(0xaed0));
        EXPECT(0xdf, gbc.readMem(0xaed1));
        // DA 013C
        gbc.setState(0x5a5a, 0x7971, 0x5540, 0x3382, 0xa70e, 0x6a63, 0x1, 0x0);
        gbc.writeMem(0x5a5a, { 0xda, 0x12, 0xb8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7971, gbc.sp());
        EXPECT(0x5a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 013D
        gbc.setState(0xd103, 0xf533, 0x40, 0x429a, 0x6160, 0x99b4, 0x1, 0x0);
        gbc.writeMem(0xd103, { 0xda, 0x4f, 0x5f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf533, gbc.sp());
        EXPECT(0xd106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd103));
        EXPECT(0x4f, gbc.readMem(0xd104));
        EXPECT(0x5f, gbc.readMem(0xd105));
        // DA 013E
        gbc.setState(0x5096, 0x14f3, 0x29f0, 0xc6e8, 0xa82, 0xa7d3, 0x1, 0x0);
        gbc.writeMem(0x5096, { 0xda, 0x94, 0x6 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x14f3, gbc.sp());
        EXPECT(0x694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 013F
        gbc.setState(0x4127, 0x8019, 0x1700, 0x4b26, 0x8e31, 0x6555, 0x0, 0x0);
        gbc.writeMem(0x4127, { 0xda, 0xd1, 0x53 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8019, gbc.sp());
        EXPECT(0x412a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0140
        gbc.setState(0x4494, 0xa037, 0xf3b0, 0xf08a, 0xf6d4, 0x12c7, 0x0, 0x0);
        gbc.writeMem(0x4494, { 0xda, 0x9b, 0x9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa037, gbc.sp());
        EXPECT(0x99b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0141
        gbc.setState(0x1bc9, 0x6589, 0x4aa0, 0xb5d7, 0xc8d9, 0x35b7, 0x0, 0x0);
        gbc.writeMem(0x1bc9, { 0xda, 0x79, 0x29 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6589, gbc.sp());
        EXPECT(0x1bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0142
        gbc.setState(0x134c, 0x4d62, 0x1140, 0x430, 0x83f2, 0x9983, 0x0, 0x1);
        gbc.writeMem(0x134c, { 0xda, 0x21, 0x70 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4d62, gbc.sp());
        EXPECT(0x134f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0143
        gbc.setState(0x3ce, 0xd413, 0xa140, 0x9a27, 0x4995, 0xaac4, 0x0, 0x1);
        gbc.writeMem(0x3ce, { 0xda, 0x45, 0x1c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd413, gbc.sp());
        EXPECT(0x3d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0144
        gbc.setState(0x536d, 0xbd21, 0x3360, 0x9b0b, 0xfedf, 0xd787, 0x1, 0x0);
        gbc.writeMem(0x536d, { 0xda, 0x77, 0xb7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbd21, gbc.sp());
        EXPECT(0x5370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0145
        gbc.setState(0x1d2c, 0xae27, 0xf740, 0xa7b4, 0x4f35, 0x28de, 0x1, 0x1);
        gbc.writeMem(0x1d2c, { 0xda, 0x2b, 0x49 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xae27, gbc.sp());
        EXPECT(0x1d2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0146
        gbc.setState(0x4c8f, 0x93de, 0x4380, 0xbe57, 0x7d96, 0xd846, 0x1, 0x0);
        gbc.writeMem(0x4c8f, { 0xda, 0x8c, 0x80 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x93de, gbc.sp());
        EXPECT(0x4c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0147
        gbc.setState(0x4be7, 0x1931, 0xa2f0, 0xe1e3, 0xd2e0, 0xb1cd, 0x0, 0x1);
        gbc.writeMem(0x4be7, { 0xda, 0xb2, 0x2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1931, gbc.sp());
        EXPECT(0x2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0148
        gbc.setState(0x638f, 0x6b17, 0x3da0, 0x1ba9, 0x7d28, 0x5774, 0x0, 0x0);
        gbc.writeMem(0x638f, { 0xda, 0xc5, 0x56 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6b17, gbc.sp());
        EXPECT(0x6392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0149
        gbc.setState(0xb52a, 0x68e0, 0xcb10, 0x5e06, 0x6cf4, 0x3446, 0x1, 0x0);
        gbc.writeMem(0xb52a, { 0xda, 0x69, 0x23 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x68e0, gbc.sp());
        EXPECT(0x2369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb52a));
        EXPECT(0x69, gbc.readMem(0xb52b));
        EXPECT(0x23, gbc.readMem(0xb52c));
        // DA 014A
        gbc.setState(0xe10, 0xb94d, 0x4430, 0x1cad, 0x8a20, 0x83f2, 0x0, 0x0);
        gbc.writeMem(0xe10, { 0xda, 0x39, 0xc4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb94d, gbc.sp());
        EXPECT(0xc439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 014B
        gbc.setState(0xb96a, 0x1ae6, 0xe7b0, 0x1237, 0x3c75, 0x810, 0x0, 0x0);
        gbc.writeMem(0xb96a, { 0xda, 0xf7, 0xa5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1ae6, gbc.sp());
        EXPECT(0xa5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb96a));
        EXPECT(0xf7, gbc.readMem(0xb96b));
        EXPECT(0xa5, gbc.readMem(0xb96c));
        // DA 014C
        gbc.setState(0xee1e, 0x39ff, 0x27a0, 0x79a9, 0x8c0a, 0xfdf6, 0x0, 0x0);
        gbc.writeMem(0xee1e, { 0xda, 0xc6, 0x9c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x39ff, gbc.sp());
        EXPECT(0xee21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xee1e));
        EXPECT(0xc6, gbc.readMem(0xee1f));
        EXPECT(0x9c, gbc.readMem(0xee20));
        // DA 014D
        gbc.setState(0x4c8a, 0x44b9, 0x2ee0, 0x5d56, 0xb411, 0xde05, 0x0, 0x0);
        gbc.writeMem(0x4c8a, { 0xda, 0x9a, 0xb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x44b9, gbc.sp());
        EXPECT(0x4c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 014E
        gbc.setState(0xe22d, 0xb740, 0x3310, 0xe621, 0x6ff3, 0xf293, 0x1, 0x1);
        gbc.writeMem(0xe22d, { 0xda, 0xce, 0x5f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb740, gbc.sp());
        EXPECT(0x5fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe22d));
        EXPECT(0xce, gbc.readMem(0xe22e));
        EXPECT(0x5f, gbc.readMem(0xe22f));
        // DA 014F
        gbc.setState(0x6d62, 0x3438, 0x39d0, 0x683b, 0x569b, 0xe1e4, 0x1, 0x0);
        gbc.writeMem(0x6d62, { 0xda, 0x7c, 0xb2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3438, gbc.sp());
        EXPECT(0xb27c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0150
        gbc.setState(0x239d, 0x6d05, 0xe9a0, 0xa62f, 0xda09, 0x6208, 0x0, 0x1);
        gbc.writeMem(0x239d, { 0xda, 0x2d, 0x18 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6d05, gbc.sp());
        EXPECT(0x23a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0151
        gbc.setState(0x8de3, 0x9b6f, 0xf930, 0x5e6, 0xe1de, 0x849b, 0x0, 0x0);
        gbc.writeMem(0x8de3, { 0xda, 0xa4, 0x72 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9b6f, gbc.sp());
        EXPECT(0x72a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8de3));
        EXPECT(0xa4, gbc.readMem(0x8de4));
        EXPECT(0x72, gbc.readMem(0x8de5));
        // DA 0152
        gbc.setState(0x781, 0x8e17, 0x2eb0, 0x8b6b, 0xec9, 0xad44, 0x0, 0x1);
        gbc.writeMem(0x781, { 0xda, 0x3f, 0x72 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8e17, gbc.sp());
        EXPECT(0x723f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0153
        gbc.setState(0x4f07, 0x95fc, 0x42e0, 0x2141, 0x21ec, 0x9a0e, 0x1, 0x1);
        gbc.writeMem(0x4f07, { 0xda, 0x93, 0x34 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x95fc, gbc.sp());
        EXPECT(0x4f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0154
        gbc.setState(0x4503, 0x2117, 0x1690, 0x473a, 0x6b64, 0x4268, 0x0, 0x0);
        gbc.writeMem(0x4503, { 0xda, 0x1e, 0x98 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2117, gbc.sp());
        EXPECT(0x981e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0155
        gbc.setState(0x4825, 0x6266, 0x5a50, 0x4da5, 0xa4c4, 0xbbc8, 0x0, 0x0);
        gbc.writeMem(0x4825, { 0xda, 0x50, 0x2b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6266, gbc.sp());
        EXPECT(0x2b50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0156
        gbc.setState(0xa6af, 0xa161, 0x5720, 0x8dfd, 0x747e, 0x7a00, 0x0, 0x0);
        gbc.writeMem(0xa6af, { 0xda, 0xb2, 0x15 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa161, gbc.sp());
        EXPECT(0xa6b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa6af));
        EXPECT(0xb2, gbc.readMem(0xa6b0));
        EXPECT(0x15, gbc.readMem(0xa6b1));
        // DA 0157
        gbc.setState(0x76ab, 0xc68f, 0x4e90, 0x9651, 0x634b, 0x4f95, 0x1, 0x0);
        gbc.writeMem(0x76ab, { 0xda, 0x84, 0xcd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc68f, gbc.sp());
        EXPECT(0xcd84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0158
        gbc.setState(0x2779, 0x4321, 0x19d0, 0x7f10, 0x3b98, 0xe323, 0x1, 0x1);
        gbc.writeMem(0x2779, { 0xda, 0x53, 0x32 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4321, gbc.sp());
        EXPECT(0x3253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0159
        gbc.setState(0x3933, 0xc7f8, 0xab70, 0xb875, 0xe802, 0x128e, 0x0, 0x1);
        gbc.writeMem(0x3933, { 0xda, 0xed, 0x9f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc7f8, gbc.sp());
        EXPECT(0x9fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 015A
        gbc.setState(0x51b7, 0xeb35, 0x3ce0, 0x5e2e, 0x1ba1, 0x9cb5, 0x0, 0x1);
        gbc.writeMem(0x51b7, { 0xda, 0x2f, 0x49 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xeb35, gbc.sp());
        EXPECT(0x51ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 015C
        gbc.setState(0xe9f0, 0xaecc, 0x6540, 0xc99d, 0xb648, 0x918e, 0x0, 0x1);
        gbc.writeMem(0xe9f0, { 0xda, 0xc6, 0x97 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xaecc, gbc.sp());
        EXPECT(0xe9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe9f0));
        EXPECT(0xc6, gbc.readMem(0xe9f1));
        EXPECT(0x97, gbc.readMem(0xe9f2));
        // DA 015D
        gbc.setState(0x54ed, 0x165, 0xcdc0, 0x8398, 0x554, 0x574e, 0x1, 0x0);
        gbc.writeMem(0x54ed, { 0xda, 0xe, 0x2e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x165, gbc.sp());
        EXPECT(0x54f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 015E
        gbc.setState(0x3b4a, 0x778a, 0xf870, 0x7b3d, 0x4d39, 0x98c2, 0x0, 0x1);
        gbc.writeMem(0x3b4a, { 0xda, 0xaf, 0x7d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x778a, gbc.sp());
        EXPECT(0x7daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 015F
        gbc.setState(0xdfd2, 0xaa8c, 0xa5b0, 0x3cc5, 0x3341, 0x1238, 0x1, 0x1);
        gbc.writeMem(0xdfd2, { 0xda, 0xbe, 0x6b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaa8c, gbc.sp());
        EXPECT(0x6bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdfd2));
        EXPECT(0xbe, gbc.readMem(0xdfd3));
        EXPECT(0x6b, gbc.readMem(0xdfd4));
        // DA 0160
        gbc.setState(0x249b, 0xb216, 0x3490, 0x4f09, 0x34a8, 0xfcb5, 0x0, 0x0);
        gbc.writeMem(0x249b, { 0xda, 0xc0, 0x83 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb216, gbc.sp());
        EXPECT(0x83c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0161
        gbc.setState(0xca3a, 0x9cc8, 0x2f20, 0xf8be, 0x17b0, 0x20d5, 0x1, 0x0);
        gbc.writeMem(0xca3a, { 0xda, 0x22, 0xa0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9cc8, gbc.sp());
        EXPECT(0xca3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xca3a));
        EXPECT(0x22, gbc.readMem(0xca3b));
        EXPECT(0xa0, gbc.readMem(0xca3c));
        // DA 0163
        gbc.setState(0x3c02, 0xbac, 0xcaa0, 0xfc8c, 0x1808, 0x6267, 0x0, 0x1);
        gbc.writeMem(0x3c02, { 0xda, 0x80, 0x4e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbac, gbc.sp());
        EXPECT(0x3c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0164
        gbc.setState(0x13bf, 0xc591, 0x4e20, 0xab33, 0x76bf, 0xd59b, 0x0, 0x0);
        gbc.writeMem(0x13bf, { 0xda, 0xb5, 0xe9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc591, gbc.sp());
        EXPECT(0x13c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0165
        gbc.setState(0xd64f, 0x9d93, 0x340, 0x5955, 0xe05, 0x4ee8, 0x1, 0x1);
        gbc.writeMem(0xd64f, { 0xda, 0xb, 0x12 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9d93, gbc.sp());
        EXPECT(0xd652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd64f));
        EXPECT(0xb, gbc.readMem(0xd650));
        EXPECT(0x12, gbc.readMem(0xd651));
        // DA 0166
        gbc.setState(0xc4f7, 0x5e28, 0xd720, 0xe5d3, 0x2af6, 0x401a, 0x1, 0x0);
        gbc.writeMem(0xc4f7, { 0xda, 0x50, 0xcf });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5e28, gbc.sp());
        EXPECT(0xc4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc4f7));
        EXPECT(0x50, gbc.readMem(0xc4f8));
        EXPECT(0xcf, gbc.readMem(0xc4f9));
        // DA 0167
        gbc.setState(0x11f6, 0xf448, 0xeb50, 0xc931, 0xb954, 0xbe89, 0x0, 0x0);
        gbc.writeMem(0x11f6, { 0xda, 0x9c, 0x23 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf448, gbc.sp());
        EXPECT(0x239c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0168
        gbc.setState(0xe635, 0x8c11, 0x51f0, 0x83d5, 0x2087, 0x10c1, 0x0, 0x1);
        gbc.writeMem(0xe635, { 0xda, 0xc9, 0x86 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8c11, gbc.sp());
        EXPECT(0x86c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe635));
        EXPECT(0xc9, gbc.readMem(0xe636));
        EXPECT(0x86, gbc.readMem(0xe637));
        // DA 016A
        gbc.setState(0x2069, 0xdc9e, 0x8bc0, 0x9ffc, 0xdd78, 0xade0, 0x1, 0x1);
        gbc.writeMem(0x2069, { 0xda, 0x43, 0x30 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdc9e, gbc.sp());
        EXPECT(0x206c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 016B
        gbc.setState(0x6424, 0x1714, 0xeb40, 0x90e0, 0xbb9c, 0xec95, 0x1, 0x0);
        gbc.writeMem(0x6424, { 0xda, 0x89, 0xf6 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1714, gbc.sp());
        EXPECT(0x6427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 016C
        gbc.setState(0xc139, 0x9647, 0x6350, 0xcb65, 0x8996, 0x8bf4, 0x1, 0x0);
        gbc.writeMem(0xc139, { 0xda, 0xbf, 0xe8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9647, gbc.sp());
        EXPECT(0xe8bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc139));
        EXPECT(0xbf, gbc.readMem(0xc13a));
        EXPECT(0xe8, gbc.readMem(0xc13b));
        // DA 016D
        gbc.setState(0x2ca3, 0x821e, 0xcc80, 0x2d59, 0xe4c2, 0xe7d0, 0x0, 0x0);
        gbc.writeMem(0x2ca3, { 0xda, 0x45, 0xe3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x821e, gbc.sp());
        EXPECT(0x2ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 016E
        gbc.setState(0x698f, 0xc225, 0xf320, 0xce72, 0x6217, 0x9586, 0x1, 0x1);
        gbc.writeMem(0x698f, { 0xda, 0xf, 0x7d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc225, gbc.sp());
        EXPECT(0x6992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 016F
        gbc.setState(0x8703, 0x452f, 0x5130, 0x4c78, 0xbf57, 0xed0c, 0x0, 0x0);
        gbc.writeMem(0x8703, { 0xda, 0xf2, 0x41 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x452f, gbc.sp());
        EXPECT(0x41f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8703));
        EXPECT(0xf2, gbc.readMem(0x8704));
        EXPECT(0x41, gbc.readMem(0x8705));
        // DA 0171
        gbc.setState(0x4976, 0x32ff, 0xb040, 0xe6a2, 0x50be, 0x8b72, 0x1, 0x1);
        gbc.writeMem(0x4976, { 0xda, 0x6d, 0xcc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x32ff, gbc.sp());
        EXPECT(0x4979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0172
        gbc.setState(0x928d, 0xe3e1, 0xa4f0, 0x5a95, 0xaf8c, 0xe5aa, 0x1, 0x1);
        gbc.writeMem(0x928d, { 0xda, 0x4, 0xc8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe3e1, gbc.sp());
        EXPECT(0xc804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x928d));
        EXPECT(0x4, gbc.readMem(0x928e));
        EXPECT(0xc8, gbc.readMem(0x928f));
        // DA 0173
        gbc.setState(0x9019, 0x8bec, 0x3470, 0xfb39, 0x488b, 0xd619, 0x1, 0x0);
        gbc.writeMem(0x9019, { 0xda, 0x51, 0xe8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8bec, gbc.sp());
        EXPECT(0xe851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9019));
        EXPECT(0x51, gbc.readMem(0x901a));
        EXPECT(0xe8, gbc.readMem(0x901b));
        // DA 0174
        gbc.setState(0x4624, 0x1a6d, 0x9c10, 0x6c1f, 0x2ad0, 0x6573, 0x0, 0x1);
        gbc.writeMem(0x4624, { 0xda, 0x46, 0x33 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1a6d, gbc.sp());
        EXPECT(0x3346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0175
        gbc.setState(0x5bb, 0xecc4, 0xbf30, 0x8ff2, 0xfd40, 0xe33f, 0x1, 0x0);
        gbc.writeMem(0x5bb, { 0xda, 0x75, 0xe1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xecc4, gbc.sp());
        EXPECT(0xe175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0176
        gbc.setState(0xf0d, 0x4f9d, 0x6540, 0x8eb5, 0x10dd, 0xe82e, 0x1, 0x1);
        gbc.writeMem(0xf0d, { 0xda, 0x2a, 0xba });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4f9d, gbc.sp());
        EXPECT(0xf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0177
        gbc.setState(0x3577, 0xa16d, 0x14f0, 0x574c, 0x35b3, 0x3daa, 0x0, 0x1);
        gbc.writeMem(0x3577, { 0xda, 0xfc, 0x6c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa16d, gbc.sp());
        EXPECT(0x6cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0178
        gbc.setState(0x358c, 0xe665, 0x6af0, 0x270a, 0xfe01, 0x5d75, 0x1, 0x1);
        gbc.writeMem(0x358c, { 0xda, 0xd6, 0x83 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe665, gbc.sp());
        EXPECT(0x83d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0179
        gbc.setState(0x3edb, 0x6242, 0xeb60, 0xcae2, 0xcf9a, 0x427a, 0x0, 0x1);
        gbc.writeMem(0x3edb, { 0xda, 0xbf, 0x6d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6242, gbc.sp());
        EXPECT(0x3ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 017A
        gbc.setState(0xad9b, 0xb055, 0x82a0, 0xb4fd, 0x5d2e, 0xd7a0, 0x0, 0x0);
        gbc.writeMem(0xad9b, { 0xda, 0xd9, 0x8d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb055, gbc.sp());
        EXPECT(0xad9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xad9b));
        EXPECT(0xd9, gbc.readMem(0xad9c));
        EXPECT(0x8d, gbc.readMem(0xad9d));
        // DA 017B
        gbc.setState(0x832e, 0xd4a3, 0x15e0, 0xb343, 0x4991, 0x581, 0x0, 0x0);
        gbc.writeMem(0x832e, { 0xda, 0x33, 0x65 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd4a3, gbc.sp());
        EXPECT(0x8331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x832e));
        EXPECT(0x33, gbc.readMem(0x832f));
        EXPECT(0x65, gbc.readMem(0x8330));
        // DA 017C
        gbc.setState(0xca09, 0xfb65, 0x2d40, 0x334f, 0x4203, 0x129e, 0x0, 0x0);
        gbc.writeMem(0xca09, { 0xda, 0x38, 0x27 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfb65, gbc.sp());
        EXPECT(0xca0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xca09));
        EXPECT(0x38, gbc.readMem(0xca0a));
        EXPECT(0x27, gbc.readMem(0xca0b));
        // DA 017D
        gbc.setState(0x7c2d, 0x1e50, 0x8ad0, 0xdd0e, 0xe9e8, 0xabe, 0x0, 0x1);
        gbc.writeMem(0x7c2d, { 0xda, 0x86, 0xf6 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1e50, gbc.sp());
        EXPECT(0xf686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 017E
        gbc.setState(0xd5a0, 0x7d48, 0x3110, 0x822a, 0x772c, 0x4c12, 0x0, 0x1);
        gbc.writeMem(0xd5a0, { 0xda, 0x89, 0x6d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7d48, gbc.sp());
        EXPECT(0x6d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd5a0));
        EXPECT(0x89, gbc.readMem(0xd5a1));
        EXPECT(0x6d, gbc.readMem(0xd5a2));
        // DA 017F
        gbc.setState(0x59d1, 0x5a47, 0x3630, 0x6f91, 0x56b, 0x6f55, 0x1, 0x1);
        gbc.writeMem(0x59d1, { 0xda, 0xed, 0xc5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5a47, gbc.sp());
        EXPECT(0xc5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0180
        gbc.setState(0x6a19, 0x9619, 0xf90, 0x9f35, 0x9866, 0xcc49, 0x0, 0x1);
        gbc.writeMem(0x6a19, { 0xda, 0xd4, 0x24 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9619, gbc.sp());
        EXPECT(0x24d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0181
        gbc.setState(0x3b33, 0x3251, 0x1450, 0x3d4a, 0x620, 0xa8d5, 0x0, 0x1);
        gbc.writeMem(0x3b33, { 0xda, 0x2d, 0x79 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3251, gbc.sp());
        EXPECT(0x792d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0182
        gbc.setState(0x1f02, 0x9927, 0xf5f0, 0x9462, 0xdf04, 0xedaf, 0x1, 0x0);
        gbc.writeMem(0x1f02, { 0xda, 0xd4, 0x5f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9927, gbc.sp());
        EXPECT(0x5fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0184
        gbc.setState(0x6ace, 0x9d2f, 0x5500, 0xa33e, 0x7416, 0x1012, 0x1, 0x0);
        gbc.writeMem(0x6ace, { 0xda, 0x81, 0xb9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9d2f, gbc.sp());
        EXPECT(0x6ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0185
        gbc.setState(0x47f6, 0xd4c2, 0x61d0, 0x4ab4, 0x77e6, 0x1252, 0x1, 0x1);
        gbc.writeMem(0x47f6, { 0xda, 0xb7, 0xaf });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd4c2, gbc.sp());
        EXPECT(0xafb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0186
        gbc.setState(0x96e0, 0x2b53, 0x3b90, 0xbb9c, 0xb8ea, 0xb313, 0x0, 0x0);
        gbc.writeMem(0x96e0, { 0xda, 0xf1, 0x2e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2b53, gbc.sp());
        EXPECT(0x2ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x96e0));
        EXPECT(0xf1, gbc.readMem(0x96e1));
        EXPECT(0x2e, gbc.readMem(0x96e2));
        // DA 0187
        gbc.setState(0x4d9a, 0x9f0a, 0x1420, 0x6fe7, 0x4d74, 0x7b73, 0x0, 0x0);
        gbc.writeMem(0x4d9a, { 0xda, 0x3e, 0xbc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9f0a, gbc.sp());
        EXPECT(0x4d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0188
        gbc.setState(0x981b, 0x6f82, 0xd420, 0xb2c8, 0x3645, 0x23f7, 0x1, 0x1);
        gbc.writeMem(0x981b, { 0xda, 0x91, 0xc3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6f82, gbc.sp());
        EXPECT(0x981e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x981b));
        EXPECT(0x91, gbc.readMem(0x981c));
        EXPECT(0xc3, gbc.readMem(0x981d));
        // DA 0189
        gbc.setState(0x276d, 0xfb9a, 0xf370, 0xbf2a, 0x5f4c, 0x7101, 0x1, 0x0);
        gbc.writeMem(0x276d, { 0xda, 0x6b, 0x5c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfb9a, gbc.sp());
        EXPECT(0x5c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 018A
        gbc.setState(0xdea2, 0x2c80, 0x3f80, 0xd929, 0xf0c5, 0xc8a7, 0x0, 0x0);
        gbc.writeMem(0xdea2, { 0xda, 0x62, 0x69 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2c80, gbc.sp());
        EXPECT(0xdea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdea2));
        EXPECT(0x62, gbc.readMem(0xdea3));
        EXPECT(0x69, gbc.readMem(0xdea4));
        // DA 018B
        gbc.setState(0xc1b9, 0xbb4b, 0x90d0, 0x93ca, 0x414d, 0x1214, 0x1, 0x0);
        gbc.writeMem(0xc1b9, { 0xda, 0x76, 0xf0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbb4b, gbc.sp());
        EXPECT(0xf076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc1b9));
        EXPECT(0x76, gbc.readMem(0xc1ba));
        EXPECT(0xf0, gbc.readMem(0xc1bb));
        // DA 018C
        gbc.setState(0xbc78, 0x4198, 0xfca0, 0xeeb9, 0xc191, 0xb5d3, 0x0, 0x0);
        gbc.writeMem(0xbc78, { 0xda, 0xa4, 0x24 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4198, gbc.sp());
        EXPECT(0xbc7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbc78));
        EXPECT(0xa4, gbc.readMem(0xbc79));
        EXPECT(0x24, gbc.readMem(0xbc7a));
        // DA 018D
        gbc.setState(0xcb4c, 0xe98d, 0x9570, 0x61a2, 0x9f59, 0xcb12, 0x1, 0x1);
        gbc.writeMem(0xcb4c, { 0xda, 0x71, 0x43 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe98d, gbc.sp());
        EXPECT(0x4371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcb4c));
        EXPECT(0x71, gbc.readMem(0xcb4d));
        EXPECT(0x43, gbc.readMem(0xcb4e));
        // DA 018E
        gbc.setState(0x57c4, 0xa8fa, 0x70a0, 0x18a8, 0x11e1, 0xb560, 0x1, 0x0);
        gbc.writeMem(0x57c4, { 0xda, 0xff, 0x6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa8fa, gbc.sp());
        EXPECT(0x57c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 018F
        gbc.setState(0xd728, 0x5588, 0x8510, 0x7b48, 0x8716, 0x1dad, 0x0, 0x1);
        gbc.writeMem(0xd728, { 0xda, 0x98, 0xcf });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5588, gbc.sp());
        EXPECT(0xcf98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd728));
        EXPECT(0x98, gbc.readMem(0xd729));
        EXPECT(0xcf, gbc.readMem(0xd72a));
        // DA 0190
        gbc.setState(0x33c9, 0x9cb4, 0x8190, 0x5767, 0x9ebb, 0x53b3, 0x1, 0x0);
        gbc.writeMem(0x33c9, { 0xda, 0xa4, 0xe });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9cb4, gbc.sp());
        EXPECT(0xea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0191
        gbc.setState(0x5ba6, 0x5fd6, 0x2e30, 0x3cb7, 0x702b, 0xb9ec, 0x1, 0x0);
        gbc.writeMem(0x5ba6, { 0xda, 0xc0, 0xda });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5fd6, gbc.sp());
        EXPECT(0xdac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0192
        gbc.setState(0x8afa, 0xaa46, 0x4c20, 0x69ab, 0x3fd4, 0xad34, 0x0, 0x0);
        gbc.writeMem(0x8afa, { 0xda, 0xa, 0xbd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xaa46, gbc.sp());
        EXPECT(0x8afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8afa));
        EXPECT(0xa, gbc.readMem(0x8afb));
        EXPECT(0xbd, gbc.readMem(0x8afc));
        // DA 0193
        gbc.setState(0x81c5, 0x7076, 0xe890, 0xbdfb, 0x1d9c, 0xadaa, 0x0, 0x0);
        gbc.writeMem(0x81c5, { 0xda, 0x3a, 0xf3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7076, gbc.sp());
        EXPECT(0xf33a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x81c5));
        EXPECT(0x3a, gbc.readMem(0x81c6));
        EXPECT(0xf3, gbc.readMem(0x81c7));
        // DA 0194
        gbc.setState(0x63a9, 0xdc81, 0xecb0, 0xea48, 0x33d0, 0x67ba, 0x1, 0x1);
        gbc.writeMem(0x63a9, { 0xda, 0xdb, 0x5c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdc81, gbc.sp());
        EXPECT(0x5cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0195
        gbc.setState(0x3da5, 0xb16e, 0xf3e0, 0xe2df, 0xa666, 0xe759, 0x1, 0x0);
        gbc.writeMem(0x3da5, { 0xda, 0xd7, 0xfd });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb16e, gbc.sp());
        EXPECT(0x3da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0197
        gbc.setState(0x5e50, 0x610c, 0x3c50, 0x3f7b, 0xfd97, 0xf47e, 0x1, 0x1);
        gbc.writeMem(0x5e50, { 0xda, 0x3c, 0x94 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x610c, gbc.sp());
        EXPECT(0x943c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0198
        gbc.setState(0xc259, 0x1818, 0xaeb0, 0xf3b, 0x1eda, 0xec6d, 0x0, 0x1);
        gbc.writeMem(0xc259, { 0xda, 0x5b, 0x88 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1818, gbc.sp());
        EXPECT(0x885b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc259));
        EXPECT(0x5b, gbc.readMem(0xc25a));
        EXPECT(0x88, gbc.readMem(0xc25b));
        // DA 0199
        gbc.setState(0xbc16, 0x1824, 0x60d0, 0xb35, 0xdb63, 0x8541, 0x0, 0x1);
        gbc.writeMem(0xbc16, { 0xda, 0x9b, 0x8b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1824, gbc.sp());
        EXPECT(0x8b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbc16));
        EXPECT(0x9b, gbc.readMem(0xbc17));
        EXPECT(0x8b, gbc.readMem(0xbc18));
        // DA 019A
        gbc.setState(0xb26a, 0x42cb, 0x9a70, 0x7ecf, 0x9e0a, 0xfa6b, 0x0, 0x0);
        gbc.writeMem(0xb26a, { 0xda, 0x7a, 0xa3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x42cb, gbc.sp());
        EXPECT(0xa37a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb26a));
        EXPECT(0x7a, gbc.readMem(0xb26b));
        EXPECT(0xa3, gbc.readMem(0xb26c));
        // DA 019B
        gbc.setState(0xa5a2, 0x8030, 0xb830, 0xe535, 0x2c32, 0x275f, 0x0, 0x0);
        gbc.writeMem(0xa5a2, { 0xda, 0xee, 0x59 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8030, gbc.sp());
        EXPECT(0x59ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa5a2));
        EXPECT(0xee, gbc.readMem(0xa5a3));
        EXPECT(0x59, gbc.readMem(0xa5a4));
        // DA 019C
        gbc.setState(0x63ba, 0x88cd, 0x97f0, 0xe1e, 0xd496, 0x3c2f, 0x1, 0x1);
        gbc.writeMem(0x63ba, { 0xda, 0x87, 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x88cd, gbc.sp());
        EXPECT(0x9c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 019D
        gbc.setState(0xebbd, 0x5dfc, 0xdc00, 0xe195, 0x412a, 0x6b56, 0x1, 0x0);
        gbc.writeMem(0xebbd, { 0xda, 0x16, 0x41 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5dfc, gbc.sp());
        EXPECT(0xebc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xebbd));
        EXPECT(0x16, gbc.readMem(0xebbe));
        EXPECT(0x41, gbc.readMem(0xebbf));
        // DA 019F
        gbc.setState(0x4915, 0x763e, 0xa070, 0xb0d2, 0xe625, 0xd25f, 0x0, 0x0);
        gbc.writeMem(0x4915, { 0xda, 0x24, 0x6b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x763e, gbc.sp());
        EXPECT(0x6b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01A0
        gbc.setState(0x6894, 0x3eb8, 0xc730, 0x8c97, 0xc5ac, 0xdc7, 0x1, 0x0);
        gbc.writeMem(0x6894, { 0xda, 0x42, 0xd8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3eb8, gbc.sp());
        EXPECT(0xd842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01A1
        gbc.setState(0x7d6b, 0xd6e4, 0x4ee0, 0x406d, 0x42f0, 0xb294, 0x1, 0x0);
        gbc.writeMem(0x7d6b, { 0xda, 0x68, 0x26 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd6e4, gbc.sp());
        EXPECT(0x7d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01A2
        gbc.setState(0xd012, 0xf306, 0x7670, 0x4382, 0x1cd1, 0x20a3, 0x1, 0x0);
        gbc.writeMem(0xd012, { 0xda, 0x71, 0xcb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf306, gbc.sp());
        EXPECT(0xcb71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd012));
        EXPECT(0x71, gbc.readMem(0xd013));
        EXPECT(0xcb, gbc.readMem(0xd014));
        // DA 01A3
        gbc.setState(0xb3c2, 0xd6a0, 0xa0f0, 0x5723, 0x8d8f, 0x2c6b, 0x1, 0x1);
        gbc.writeMem(0xb3c2, { 0xda, 0x2a, 0x36 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd6a0, gbc.sp());
        EXPECT(0x362a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb3c2));
        EXPECT(0x2a, gbc.readMem(0xb3c3));
        EXPECT(0x36, gbc.readMem(0xb3c4));
        // DA 01A4
        gbc.setState(0x8b3f, 0xa755, 0xb5d0, 0xe5e6, 0x290d, 0xd67b, 0x0, 0x0);
        gbc.writeMem(0x8b3f, { 0xda, 0x7c, 0x64 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa755, gbc.sp());
        EXPECT(0x647c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8b3f));
        EXPECT(0x7c, gbc.readMem(0x8b40));
        EXPECT(0x64, gbc.readMem(0x8b41));
        // DA 01A5
        gbc.setState(0xaf16, 0x15ed, 0x5e30, 0xdc70, 0xea88, 0x63e7, 0x1, 0x1);
        gbc.writeMem(0xaf16, { 0xda, 0xa4, 0xc1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x15ed, gbc.sp());
        EXPECT(0xc1a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaf16));
        EXPECT(0xa4, gbc.readMem(0xaf17));
        EXPECT(0xc1, gbc.readMem(0xaf18));
        // DA 01A6
        gbc.setState(0x5cc2, 0xf063, 0x36d0, 0x38ef, 0xcdb5, 0x26cf, 0x1, 0x1);
        gbc.writeMem(0x5cc2, { 0xda, 0x34, 0x72 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf063, gbc.sp());
        EXPECT(0x7234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01A7
        gbc.setState(0xb8e8, 0xbbbc, 0xbbf0, 0x4a1, 0xe9a3, 0x4104, 0x1, 0x0);
        gbc.writeMem(0xb8e8, { 0xda, 0x3e, 0x8c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbbbc, gbc.sp());
        EXPECT(0x8c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb8e8));
        EXPECT(0x3e, gbc.readMem(0xb8e9));
        EXPECT(0x8c, gbc.readMem(0xb8ea));
        // DA 01A8
        gbc.setState(0x27fb, 0x402b, 0xf3f0, 0x6cc3, 0x2c76, 0x5d4f, 0x0, 0x1);
        gbc.writeMem(0x27fb, { 0xda, 0xb1, 0xb6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x402b, gbc.sp());
        EXPECT(0xb6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01A9
        gbc.setState(0xe9c, 0xef8e, 0x74c0, 0xfdaa, 0x37ec, 0xeb98, 0x1, 0x0);
        gbc.writeMem(0xe9c, { 0xda, 0x2f, 0x5b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xef8e, gbc.sp());
        EXPECT(0xe9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01AA
        gbc.setState(0x4b64, 0x52fc, 0xf6c0, 0xb068, 0x5659, 0xb4e7, 0x0, 0x0);
        gbc.writeMem(0x4b64, { 0xda, 0x5c, 0x53 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x52fc, gbc.sp());
        EXPECT(0x4b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01AB
        gbc.setState(0x8b7e, 0x7740, 0x9ab0, 0x683a, 0x3532, 0x8164, 0x1, 0x1);
        gbc.writeMem(0x8b7e, { 0xda, 0x41, 0xa1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7740, gbc.sp());
        EXPECT(0xa141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8b7e));
        EXPECT(0x41, gbc.readMem(0x8b7f));
        EXPECT(0xa1, gbc.readMem(0x8b80));
        // DA 01AC
        gbc.setState(0x46e2, 0x7d00, 0x7a80, 0x5ad, 0x4c9, 0xa84, 0x0, 0x1);
        gbc.writeMem(0x46e2, { 0xda, 0xa7, 0x93 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7d00, gbc.sp());
        EXPECT(0x46e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01AD
        gbc.setState(0xaaff, 0x383b, 0x33f0, 0x69a4, 0xc53, 0xcb36, 0x0, 0x1);
        gbc.writeMem(0xaaff, { 0xda, 0x51, 0xce });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x383b, gbc.sp());
        EXPECT(0xce51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaaff));
        EXPECT(0x51, gbc.readMem(0xab00));
        EXPECT(0xce, gbc.readMem(0xab01));
        // DA 01AE
        gbc.setState(0x3d56, 0x1e6d, 0x1810, 0xdd66, 0x7e0b, 0xa811, 0x1, 0x1);
        gbc.writeMem(0x3d56, { 0xda, 0xef, 0xb2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1e6d, gbc.sp());
        EXPECT(0xb2ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01AF
        gbc.setState(0x5679, 0x7d4d, 0x85a0, 0xc18e, 0x229d, 0x7744, 0x0, 0x1);
        gbc.writeMem(0x5679, { 0xda, 0x3a, 0xe7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7d4d, gbc.sp());
        EXPECT(0x567c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01B0
        gbc.setState(0x8138, 0xbc87, 0xc790, 0x4bd2, 0x807d, 0x33dd, 0x0, 0x1);
        gbc.writeMem(0x8138, { 0xda, 0x3e, 0xa8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbc87, gbc.sp());
        EXPECT(0xa83e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8138));
        EXPECT(0x3e, gbc.readMem(0x8139));
        EXPECT(0xa8, gbc.readMem(0x813a));
        // DA 01B1
        gbc.setState(0x1337, 0x121c, 0x41a0, 0xc02a, 0xeae8, 0x3557, 0x1, 0x1);
        gbc.writeMem(0x1337, { 0xda, 0xd5, 0x18 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x121c, gbc.sp());
        EXPECT(0x133a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01B2
        gbc.setState(0x694d, 0x50c0, 0x6ec0, 0x5dff, 0x86bb, 0x398c, 0x0, 0x0);
        gbc.writeMem(0x694d, { 0xda, 0xf1, 0x96 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x50c0, gbc.sp());
        EXPECT(0x6950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01B3
        gbc.setState(0x218f, 0x52f1, 0xd200, 0x9454, 0x1317, 0x2c0e, 0x1, 0x1);
        gbc.writeMem(0x218f, { 0xda, 0x32, 0x79 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x52f1, gbc.sp());
        EXPECT(0x2192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01B5
        gbc.setState(0x95ea, 0xd33d, 0xf550, 0xe557, 0x5463, 0x36c2, 0x1, 0x1);
        gbc.writeMem(0x95ea, { 0xda, 0x19, 0xf });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd33d, gbc.sp());
        EXPECT(0xf19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x95ea));
        EXPECT(0x19, gbc.readMem(0x95eb));
        EXPECT(0xf, gbc.readMem(0x95ec));
        // DA 01B6
        gbc.setState(0xe6c1, 0x695b, 0xfb0, 0xeb7b, 0x44ec, 0xc772, 0x1, 0x0);
        gbc.writeMem(0xe6c1, { 0xda, 0xbf, 0x33 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x695b, gbc.sp());
        EXPECT(0x33bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe6c1));
        EXPECT(0xbf, gbc.readMem(0xe6c2));
        EXPECT(0x33, gbc.readMem(0xe6c3));
        // DA 01B7
        gbc.setState(0xe9d8, 0x87e8, 0xb4c0, 0xaef4, 0x182a, 0x2f43, 0x0, 0x1);
        gbc.writeMem(0xe9d8, { 0xda, 0x2c, 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x87e8, gbc.sp());
        EXPECT(0xe9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe9d8));
        EXPECT(0x2c, gbc.readMem(0xe9d9));
        EXPECT(0xb7, gbc.readMem(0xe9da));
        // DA 01B8
        gbc.setState(0xcc01, 0x392b, 0x2ea0, 0x35c8, 0x9776, 0xede1, 0x0, 0x0);
        gbc.writeMem(0xcc01, { 0xda, 0x5a, 0x37 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x392b, gbc.sp());
        EXPECT(0xcc04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcc01));
        EXPECT(0x5a, gbc.readMem(0xcc02));
        EXPECT(0x37, gbc.readMem(0xcc03));
        // DA 01B9
        gbc.setState(0x270, 0xee64, 0xa70, 0x6e66, 0x4935, 0x4402, 0x1, 0x1);
        gbc.writeMem(0x270, { 0xda, 0xa4, 0xc8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xee64, gbc.sp());
        EXPECT(0xc8a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01BA
        gbc.setState(0x379, 0x9c46, 0x2080, 0x3be3, 0x8a32, 0xa31d, 0x1, 0x0);
        gbc.writeMem(0x379, { 0xda, 0x56, 0x16 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9c46, gbc.sp());
        EXPECT(0x37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01BB
        gbc.setState(0xca9, 0xdfce, 0x3a80, 0xe52d, 0x2a3d, 0xca95, 0x1, 0x1);
        gbc.writeMem(0xca9, { 0xda, 0xbf, 0x97 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdfce, gbc.sp());
        EXPECT(0xcac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01BC
        gbc.setState(0xcaf9, 0x7229, 0xcc00, 0x5229, 0xd904, 0x3813, 0x1, 0x0);
        gbc.writeMem(0xcaf9, { 0xda, 0x9, 0x2e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7229, gbc.sp());
        EXPECT(0xcafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcaf9));
        EXPECT(0x9, gbc.readMem(0xcafa));
        EXPECT(0x2e, gbc.readMem(0xcafb));
        // DA 01BD
        gbc.setState(0x52fd, 0xf9b3, 0xd4a0, 0xfdcc, 0x4880, 0x28c4, 0x0, 0x1);
        gbc.writeMem(0x52fd, { 0xda, 0x40, 0x24 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf9b3, gbc.sp());
        EXPECT(0x5300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01BE
        gbc.setState(0xd290, 0xa74f, 0xad30, 0x426c, 0xf1b, 0xed11, 0x1, 0x1);
        gbc.writeMem(0xd290, { 0xda, 0x55, 0x47 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa74f, gbc.sp());
        EXPECT(0x4755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd290));
        EXPECT(0x55, gbc.readMem(0xd291));
        EXPECT(0x47, gbc.readMem(0xd292));
        // DA 01BF
        gbc.setState(0x952f, 0x81b1, 0xdae0, 0x49d, 0xd130, 0x1b21, 0x1, 0x1);
        gbc.writeMem(0x952f, { 0xda, 0xc5, 0x46 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x81b1, gbc.sp());
        EXPECT(0x9532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x952f));
        EXPECT(0xc5, gbc.readMem(0x9530));
        EXPECT(0x46, gbc.readMem(0x9531));
        // DA 01C0
        gbc.setState(0xde1d, 0x4640, 0x7d90, 0x5e0e, 0xaa36, 0x652, 0x0, 0x1);
        gbc.writeMem(0xde1d, { 0xda, 0x67, 0x5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4640, gbc.sp());
        EXPECT(0x567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xde1d));
        EXPECT(0x67, gbc.readMem(0xde1e));
        EXPECT(0x5, gbc.readMem(0xde1f));
        // DA 01C2
        gbc.setState(0xe582, 0x16ed, 0x8770, 0xa6fa, 0x4158, 0x75a0, 0x0, 0x1);
        gbc.writeMem(0xe582, { 0xda, 0x8f, 0x4f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x16ed, gbc.sp());
        EXPECT(0x4f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe582));
        EXPECT(0x8f, gbc.readMem(0xe583));
        EXPECT(0x4f, gbc.readMem(0xe584));
        // DA 01C3
        gbc.setState(0xd685, 0x5f1f, 0x7b70, 0xf074, 0xf8e9, 0xd8cc, 0x1, 0x0);
        gbc.writeMem(0xd685, { 0xda, 0x2c, 0x14 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5f1f, gbc.sp());
        EXPECT(0x142c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd685));
        EXPECT(0x2c, gbc.readMem(0xd686));
        EXPECT(0x14, gbc.readMem(0xd687));
        // DA 01C4
        gbc.setState(0xdfe8, 0xae2d, 0x2370, 0x88dc, 0x35b7, 0xad89, 0x0, 0x1);
        gbc.writeMem(0xdfe8, { 0xda, 0x1f, 0x37 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xae2d, gbc.sp());
        EXPECT(0x371f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdfe8));
        EXPECT(0x1f, gbc.readMem(0xdfe9));
        EXPECT(0x37, gbc.readMem(0xdfea));
        // DA 01C5
        gbc.setState(0xdf67, 0xf19d, 0x3a0, 0x1445, 0xedb8, 0xdb3d, 0x1, 0x1);
        gbc.writeMem(0xdf67, { 0xda, 0xe6, 0x37 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf19d, gbc.sp());
        EXPECT(0xdf6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdf67));
        EXPECT(0xe6, gbc.readMem(0xdf68));
        EXPECT(0x37, gbc.readMem(0xdf69));
        // DA 01C7
        gbc.setState(0x14ab, 0x143b, 0x9420, 0xe0a, 0x487a, 0x3988, 0x0, 0x0);
        gbc.writeMem(0x14ab, { 0xda, 0x49, 0x6c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x143b, gbc.sp());
        EXPECT(0x14ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01C8
        gbc.setState(0xc083, 0x8f5, 0xd7f0, 0xca0, 0x9702, 0xbadc, 0x1, 0x0);
        gbc.writeMem(0xc083, { 0xda, 0x99, 0x43 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8f5, gbc.sp());
        EXPECT(0x4399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc083));
        EXPECT(0x99, gbc.readMem(0xc084));
        EXPECT(0x43, gbc.readMem(0xc085));
        // DA 01C9
        gbc.setState(0x5237, 0x6049, 0x1f0, 0xbd46, 0x9b51, 0xc1e6, 0x0, 0x0);
        gbc.writeMem(0x5237, { 0xda, 0xdb, 0xf2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6049, gbc.sp());
        EXPECT(0xf2db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01CA
        gbc.setState(0x70ee, 0x4a0a, 0x15e0, 0x2b23, 0x24d3, 0x7a9, 0x0, 0x1);
        gbc.writeMem(0x70ee, { 0xda, 0xa6, 0xcc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4a0a, gbc.sp());
        EXPECT(0x70f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01CB
        gbc.setState(0x1ad, 0x50f0, 0xe250, 0xb6fe, 0x1c7f, 0xb557, 0x0, 0x1);
        gbc.writeMem(0x1ad, { 0xda, 0x3d, 0xc8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x50f0, gbc.sp());
        EXPECT(0xc83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01CC
        gbc.setState(0x8435, 0x8ad1, 0x9c90, 0x4b10, 0x470, 0xd960, 0x0, 0x1);
        gbc.writeMem(0x8435, { 0xda, 0x2b, 0xbb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8ad1, gbc.sp());
        EXPECT(0xbb2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8435));
        EXPECT(0x2b, gbc.readMem(0x8436));
        EXPECT(0xbb, gbc.readMem(0x8437));
        // DA 01CE
        gbc.setState(0x7c73, 0x14cb, 0x2fb0, 0x3f13, 0x142a, 0x9c5, 0x1, 0x1);
        gbc.writeMem(0x7c73, { 0xda, 0xee, 0x30 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x14cb, gbc.sp());
        EXPECT(0x30ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01CF
        gbc.setState(0xc633, 0xa0cc, 0xb120, 0x357e, 0x2898, 0xd56d, 0x1, 0x1);
        gbc.writeMem(0xc633, { 0xda, 0x9c, 0xe6 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa0cc, gbc.sp());
        EXPECT(0xc636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc633));
        EXPECT(0x9c, gbc.readMem(0xc634));
        EXPECT(0xe6, gbc.readMem(0xc635));
        // DA 01D0
        gbc.setState(0xcc99, 0x83b8, 0xee10, 0xc40f, 0xb1f5, 0xb209, 0x1, 0x1);
        gbc.writeMem(0xcc99, { 0xda, 0x73, 0x4f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x83b8, gbc.sp());
        EXPECT(0x4f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcc99));
        EXPECT(0x73, gbc.readMem(0xcc9a));
        EXPECT(0x4f, gbc.readMem(0xcc9b));
        // DA 01D1
        gbc.setState(0x6e80, 0xbc69, 0xdb20, 0xcf4d, 0xb1a9, 0xb871, 0x0, 0x0);
        gbc.writeMem(0x6e80, { 0xda, 0xbc, 0xed });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbc69, gbc.sp());
        EXPECT(0x6e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01D2
        gbc.setState(0x91ac, 0xe11d, 0xa570, 0xdaa1, 0x723f, 0x608f, 0x0, 0x0);
        gbc.writeMem(0x91ac, { 0xda, 0x98, 0x75 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe11d, gbc.sp());
        EXPECT(0x7598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x91ac));
        EXPECT(0x98, gbc.readMem(0x91ad));
        EXPECT(0x75, gbc.readMem(0x91ae));
        // DA 01D3
        gbc.setState(0xeb71, 0xd61c, 0x4f20, 0x8078, 0xe678, 0xa67c, 0x1, 0x0);
        gbc.writeMem(0xeb71, { 0xda, 0x52, 0x80 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd61c, gbc.sp());
        EXPECT(0xeb74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xeb71));
        EXPECT(0x52, gbc.readMem(0xeb72));
        EXPECT(0x80, gbc.readMem(0xeb73));
        // DA 01D6
        gbc.setState(0xcc27, 0xfe53, 0x3b30, 0xca16, 0x1b6e, 0xe452, 0x0, 0x1);
        gbc.writeMem(0xcc27, { 0xda, 0xaf, 0x65 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfe53, gbc.sp());
        EXPECT(0x65af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcc27));
        EXPECT(0xaf, gbc.readMem(0xcc28));
        EXPECT(0x65, gbc.readMem(0xcc29));
        // DA 01D7
        gbc.setState(0xd4d1, 0xbac3, 0xa350, 0x85d6, 0x700a, 0x957, 0x1, 0x1);
        gbc.writeMem(0xd4d1, { 0xda, 0xc1, 0xdb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbac3, gbc.sp());
        EXPECT(0xdbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd4d1));
        EXPECT(0xc1, gbc.readMem(0xd4d2));
        EXPECT(0xdb, gbc.readMem(0xd4d3));
        // DA 01D8
        gbc.setState(0x2d4d, 0xfaa5, 0x98a0, 0x1fba, 0xc3c3, 0x60ae, 0x1, 0x1);
        gbc.writeMem(0x2d4d, { 0xda, 0xd, 0x8b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfaa5, gbc.sp());
        EXPECT(0x2d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01D9
        gbc.setState(0x8e72, 0x8d48, 0x82b0, 0x6507, 0xda41, 0x8b8c, 0x0, 0x1);
        gbc.writeMem(0x8e72, { 0xda, 0x7f, 0xde });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8d48, gbc.sp());
        EXPECT(0xde7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8e72));
        EXPECT(0x7f, gbc.readMem(0x8e73));
        EXPECT(0xde, gbc.readMem(0x8e74));
        // DA 01DA
        gbc.setState(0x1a1f, 0xffef, 0xaf50, 0x820, 0x9010, 0xfdfd, 0x1, 0x1);
        gbc.writeMem(0x1a1f, { 0xda, 0x22, 0xfc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xffef, gbc.sp());
        EXPECT(0xfc22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01DB
        gbc.setState(0x688, 0x12fa, 0x4560, 0x4dc8, 0x9c7e, 0x586d, 0x1, 0x0);
        gbc.writeMem(0x688, { 0xda, 0x38, 0x64 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x12fa, gbc.sp());
        EXPECT(0x68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01DC
        gbc.setState(0xebc3, 0x2bae, 0xb4c0, 0x2d31, 0x9217, 0x35a4, 0x1, 0x0);
        gbc.writeMem(0xebc3, { 0xda, 0xc7, 0xf4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2bae, gbc.sp());
        EXPECT(0xebc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xebc3));
        EXPECT(0xc7, gbc.readMem(0xebc4));
        EXPECT(0xf4, gbc.readMem(0xebc5));
        // DA 01DD
        gbc.setState(0x2d94, 0xc5a8, 0xe110, 0xb5bb, 0x829d, 0x8873, 0x0, 0x1);
        gbc.writeMem(0x2d94, { 0xda, 0x6f, 0x66 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc5a8, gbc.sp());
        EXPECT(0x666f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01DE
        gbc.setState(0x61cd, 0xd4f9, 0xdd60, 0x3446, 0xf73, 0x94e, 0x1, 0x1);
        gbc.writeMem(0x61cd, { 0xda, 0xd9, 0x9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd4f9, gbc.sp());
        EXPECT(0x61d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01DF
        gbc.setState(0x5c88, 0xbe83, 0xdee0, 0xeada, 0x8d74, 0x7e32, 0x1, 0x1);
        gbc.writeMem(0x5c88, { 0xda, 0x78, 0x52 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbe83, gbc.sp());
        EXPECT(0x5c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01E0
        gbc.setState(0x8d01, 0x5c25, 0x3a80, 0x57ea, 0xec64, 0x7ea5, 0x1, 0x1);
        gbc.writeMem(0x8d01, { 0xda, 0xaa, 0x9b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5c25, gbc.sp());
        EXPECT(0x8d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8d01));
        EXPECT(0xaa, gbc.readMem(0x8d02));
        EXPECT(0x9b, gbc.readMem(0x8d03));
        // DA 01E1
        gbc.setState(0xbb0b, 0x39d0, 0x7660, 0xb957, 0x913d, 0xfd5d, 0x1, 0x1);
        gbc.writeMem(0xbb0b, { 0xda, 0xf, 0x67 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x39d0, gbc.sp());
        EXPECT(0xbb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbb0b));
        EXPECT(0xf, gbc.readMem(0xbb0c));
        EXPECT(0x67, gbc.readMem(0xbb0d));
        // DA 01E2
        gbc.setState(0x6043, 0xe8c0, 0xa090, 0xd113, 0x5d61, 0x3842, 0x0, 0x0);
        gbc.writeMem(0x6043, { 0xda, 0x64, 0x52 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe8c0, gbc.sp());
        EXPECT(0x5264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01E3
        gbc.setState(0xed12, 0x757e, 0xb150, 0xdc72, 0x21f9, 0xa77f, 0x1, 0x1);
        gbc.writeMem(0xed12, { 0xda, 0x27, 0xf1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x757e, gbc.sp());
        EXPECT(0xf127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xed12));
        EXPECT(0x27, gbc.readMem(0xed13));
        EXPECT(0xf1, gbc.readMem(0xed14));
        // DA 01E4
        gbc.setState(0x76d9, 0xb8f1, 0x5c30, 0x9537, 0xc0b2, 0xe001, 0x0, 0x0);
        gbc.writeMem(0x76d9, { 0xda, 0xee, 0xe7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb8f1, gbc.sp());
        EXPECT(0xe7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01E5
        gbc.setState(0x54d9, 0x9e3b, 0x12a0, 0xb0b9, 0x9d81, 0x8787, 0x1, 0x0);
        gbc.writeMem(0x54d9, { 0xda, 0xf4, 0x2b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9e3b, gbc.sp());
        EXPECT(0x54dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01E6
        gbc.setState(0x768f, 0x5b4a, 0x88d0, 0xce00, 0x5a7f, 0xa39e, 0x0, 0x0);
        gbc.writeMem(0x768f, { 0xda, 0xdd, 0xfd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5b4a, gbc.sp());
        EXPECT(0xfddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01E7
        gbc.setState(0x862b, 0x3794, 0x27e0, 0xa095, 0x19ad, 0x15bc, 0x0, 0x0);
        gbc.writeMem(0x862b, { 0xda, 0xb8, 0xd9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3794, gbc.sp());
        EXPECT(0x862e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x862b));
        EXPECT(0xb8, gbc.readMem(0x862c));
        EXPECT(0xd9, gbc.readMem(0x862d));
        // DA 01E8
        gbc.setState(0x4766, 0x1eaa, 0x790, 0x8276, 0xac15, 0x9e20, 0x1, 0x1);
        gbc.writeMem(0x4766, { 0xda, 0x67, 0x42 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1eaa, gbc.sp());
        EXPECT(0x4267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01EA
        gbc.setState(0x904, 0xba9e, 0x7df0, 0xb663, 0x2ac9, 0x22a, 0x0, 0x0);
        gbc.writeMem(0x904, { 0xda, 0x88, 0xe9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xba9e, gbc.sp());
        EXPECT(0xe988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01EB
        gbc.setState(0x6910, 0x1650, 0xcda0, 0xcf15, 0x570f, 0xf4ff, 0x1, 0x0);
        gbc.writeMem(0x6910, { 0xda, 0x53, 0x53 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1650, gbc.sp());
        EXPECT(0x6913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01ED
        gbc.setState(0xada8, 0xf1c, 0xd30, 0xca8d, 0xc37a, 0xaeb9, 0x0, 0x0);
        gbc.writeMem(0xada8, { 0xda, 0x7f, 0xd2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf1c, gbc.sp());
        EXPECT(0xd27f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xada8));
        EXPECT(0x7f, gbc.readMem(0xada9));
        EXPECT(0xd2, gbc.readMem(0xadaa));
        // DA 01EE
        gbc.setState(0x5d0e, 0x6405, 0x6be0, 0xd2a1, 0xd6ff, 0x400a, 0x0, 0x0);
        gbc.writeMem(0x5d0e, { 0xda, 0x5d, 0x93 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6405, gbc.sp());
        EXPECT(0x5d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01EF
        gbc.setState(0x6034, 0x6153, 0xb610, 0x2b40, 0xd4de, 0xbcfc, 0x1, 0x0);
        gbc.writeMem(0x6034, { 0xda, 0xa3, 0x48 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6153, gbc.sp());
        EXPECT(0x48a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01F0
        gbc.setState(0x645c, 0xaf2a, 0x24d0, 0x7741, 0x7a60, 0xf8d1, 0x1, 0x0);
        gbc.writeMem(0x645c, { 0xda, 0x5a, 0xd2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaf2a, gbc.sp());
        EXPECT(0xd25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01F1
        gbc.setState(0x50f7, 0xfea6, 0x8880, 0x4c88, 0x9aea, 0x7e2a, 0x1, 0x0);
        gbc.writeMem(0x50f7, { 0xda, 0x61, 0x24 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfea6, gbc.sp());
        EXPECT(0x50fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01F2
        gbc.setState(0xd154, 0xaa24, 0x5dd0, 0x769d, 0x9041, 0x3ef3, 0x1, 0x0);
        gbc.writeMem(0xd154, { 0xda, 0x3b, 0x97 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xaa24, gbc.sp());
        EXPECT(0x973b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd154));
        EXPECT(0x3b, gbc.readMem(0xd155));
        EXPECT(0x97, gbc.readMem(0xd156));
        // DA 01F3
        gbc.setState(0x4110, 0x95a6, 0x53c0, 0x7053, 0x68b1, 0xf95c, 0x0, 0x1);
        gbc.writeMem(0x4110, { 0xda, 0xd1, 0xe8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x95a6, gbc.sp());
        EXPECT(0x4113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01F4
        gbc.setState(0x43e6, 0xb961, 0xaf00, 0x7919, 0xb6d5, 0xb8c7, 0x1, 0x0);
        gbc.writeMem(0x43e6, { 0xda, 0xd1, 0xcd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb961, gbc.sp());
        EXPECT(0x43e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01F5
        gbc.setState(0x57e7, 0x825e, 0x36e0, 0xc1b9, 0x9182, 0x3b24, 0x0, 0x0);
        gbc.writeMem(0x57e7, { 0xda, 0x1a, 0xb8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x825e, gbc.sp());
        EXPECT(0x57ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01F6
        gbc.setState(0xb9c2, 0xd542, 0xae50, 0x6627, 0xb789, 0xb007, 0x0, 0x1);
        gbc.writeMem(0xb9c2, { 0xda, 0x13, 0x3d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd542, gbc.sp());
        EXPECT(0x3d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb9c2));
        EXPECT(0x13, gbc.readMem(0xb9c3));
        EXPECT(0x3d, gbc.readMem(0xb9c4));
        // DA 01F7
        gbc.setState(0x5827, 0xa720, 0xc430, 0x2437, 0x44ad, 0xbe50, 0x0, 0x1);
        gbc.writeMem(0x5827, { 0xda, 0x85, 0x4d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa720, gbc.sp());
        EXPECT(0x4d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01F8
        gbc.setState(0x24c0, 0x4f50, 0x3400, 0xc2a5, 0x1b7f, 0x479, 0x0, 0x1);
        gbc.writeMem(0x24c0, { 0xda, 0xf9, 0xd4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4f50, gbc.sp());
        EXPECT(0x24c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01F9
        gbc.setState(0xb6c, 0x17a2, 0x9960, 0x7aea, 0x1bf0, 0x3320, 0x1, 0x1);
        gbc.writeMem(0xb6c, { 0xda, 0xd9, 0x4f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x17a2, gbc.sp());
        EXPECT(0xb6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 01FA
        gbc.setState(0xaa0b, 0x8571, 0x3080, 0x5842, 0x4067, 0x93c4, 0x1, 0x0);
        gbc.writeMem(0xaa0b, { 0xda, 0xc8, 0xda });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8571, gbc.sp());
        EXPECT(0xaa0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaa0b));
        EXPECT(0xc8, gbc.readMem(0xaa0c));
        EXPECT(0xda, gbc.readMem(0xaa0d));
        // DA 01FB
        gbc.setState(0xcf2c, 0xecee, 0xb4c0, 0xccfa, 0xfd41, 0x89a0, 0x1, 0x1);
        gbc.writeMem(0xcf2c, { 0xda, 0x73, 0x30 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xecee, gbc.sp());
        EXPECT(0xcf2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcf2c));
        EXPECT(0x73, gbc.readMem(0xcf2d));
        EXPECT(0x30, gbc.readMem(0xcf2e));
        // DA 01FC
        gbc.setState(0x2bcf, 0x4f41, 0x8270, 0x6eef, 0xfe39, 0xd466, 0x1, 0x1);
        gbc.writeMem(0x2bcf, { 0xda, 0xf5, 0x18 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4f41, gbc.sp());
        EXPECT(0x18f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01FD
        gbc.setState(0x5602, 0x4c62, 0x3ad0, 0x7a69, 0xb915, 0xbacd, 0x1, 0x1);
        gbc.writeMem(0x5602, { 0xda, 0x76, 0x2a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4c62, gbc.sp());
        EXPECT(0x2a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 01FE
        gbc.setState(0xdcc0, 0x401, 0x4ba0, 0xdced, 0xf0fd, 0x654c, 0x0, 0x0);
        gbc.writeMem(0xdcc0, { 0xda, 0x18, 0x4d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x401, gbc.sp());
        EXPECT(0xdcc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdcc0));
        EXPECT(0x18, gbc.readMem(0xdcc1));
        EXPECT(0x4d, gbc.readMem(0xdcc2));
        // DA 01FF
        gbc.setState(0x58de, 0x9f3f, 0xcb80, 0xba82, 0x26ce, 0xbd3a, 0x0, 0x0);
        gbc.writeMem(0x58de, { 0xda, 0xa1, 0x22 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9f3f, gbc.sp());
        EXPECT(0x58e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0200
        gbc.setState(0xddf3, 0x5d95, 0xcd40, 0x7be0, 0x59fb, 0x3d1f, 0x0, 0x1);
        gbc.writeMem(0xddf3, { 0xda, 0x3a, 0x21 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5d95, gbc.sp());
        EXPECT(0xddf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xddf3));
        EXPECT(0x3a, gbc.readMem(0xddf4));
        EXPECT(0x21, gbc.readMem(0xddf5));
        // DA 0201
        gbc.setState(0x4602, 0x7ef, 0x4aa0, 0x3210, 0x90be, 0xf0ca, 0x1, 0x0);
        gbc.writeMem(0x4602, { 0xda, 0x67, 0x41 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7ef, gbc.sp());
        EXPECT(0x4605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0202
        gbc.setState(0xc939, 0x1d3a, 0x6b20, 0x6ed2, 0xb62b, 0xaa7d, 0x0, 0x0);
        gbc.writeMem(0xc939, { 0xda, 0xf5, 0xbd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1d3a, gbc.sp());
        EXPECT(0xc93c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc939));
        EXPECT(0xf5, gbc.readMem(0xc93a));
        EXPECT(0xbd, gbc.readMem(0xc93b));
        // DA 0203
        gbc.setState(0x221, 0x9d58, 0x8900, 0x5b5e, 0xfea2, 0xdc73, 0x1, 0x0);
        gbc.writeMem(0x221, { 0xda, 0x4d, 0x95 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9d58, gbc.sp());
        EXPECT(0x224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0204
        gbc.setState(0xb58d, 0xcede, 0x3e10, 0x24da, 0x6c15, 0x45ea, 0x0, 0x0);
        gbc.writeMem(0xb58d, { 0xda, 0x56, 0x56 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcede, gbc.sp());
        EXPECT(0x5656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb58d));
        EXPECT(0x56, gbc.readMem(0xb58e));
        EXPECT(0x56, gbc.readMem(0xb58f));
        // DA 0205
        gbc.setState(0x7b44, 0xfd1e, 0xf960, 0x7d61, 0xbd51, 0x755c, 0x1, 0x1);
        gbc.writeMem(0x7b44, { 0xda, 0x66, 0x9e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfd1e, gbc.sp());
        EXPECT(0x7b47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0206
        gbc.setState(0x699a, 0x1088, 0x5120, 0xffa1, 0x9a8, 0x5860, 0x1, 0x1);
        gbc.writeMem(0x699a, { 0xda, 0x52, 0xfe });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1088, gbc.sp());
        EXPECT(0x699d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0207
        gbc.setState(0x540c, 0xae3a, 0x9b60, 0xf38b, 0xc88e, 0xd495, 0x0, 0x0);
        gbc.writeMem(0x540c, { 0xda, 0xc4, 0x23 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xae3a, gbc.sp());
        EXPECT(0x540f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0208
        gbc.setState(0x61d7, 0xa3d7, 0xb880, 0x1bb8, 0xb060, 0xf8c2, 0x0, 0x0);
        gbc.writeMem(0x61d7, { 0xda, 0x6c, 0x18 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa3d7, gbc.sp());
        EXPECT(0x61da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0209
        gbc.setState(0xa22f, 0xa0c7, 0xac20, 0xad51, 0xdb40, 0xefa7, 0x1, 0x1);
        gbc.writeMem(0xa22f, { 0xda, 0xa7, 0x76 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa0c7, gbc.sp());
        EXPECT(0xa232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa22f));
        EXPECT(0xa7, gbc.readMem(0xa230));
        EXPECT(0x76, gbc.readMem(0xa231));
        // DA 020A
        gbc.setState(0xe7b5, 0xe1e0, 0x780, 0x431, 0x8b60, 0xf3ae, 0x0, 0x1);
        gbc.writeMem(0xe7b5, { 0xda, 0xec, 0xab });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe1e0, gbc.sp());
        EXPECT(0xe7b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe7b5));
        EXPECT(0xec, gbc.readMem(0xe7b6));
        EXPECT(0xab, gbc.readMem(0xe7b7));
        // DA 020B
        gbc.setState(0xa060, 0xe308, 0xb410, 0xe1e1, 0x7b58, 0x8ee, 0x1, 0x0);
        gbc.writeMem(0xa060, { 0xda, 0x3f, 0xba });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe308, gbc.sp());
        EXPECT(0xba3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa060));
        EXPECT(0x3f, gbc.readMem(0xa061));
        EXPECT(0xba, gbc.readMem(0xa062));
        // DA 020C
        gbc.setState(0x8228, 0x7433, 0x3b20, 0x507d, 0x4e82, 0xab68, 0x0, 0x0);
        gbc.writeMem(0x8228, { 0xda, 0x1, 0xc4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7433, gbc.sp());
        EXPECT(0x822b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8228));
        EXPECT(0x1, gbc.readMem(0x8229));
        EXPECT(0xc4, gbc.readMem(0x822a));
        // DA 020D
        gbc.setState(0xcf4a, 0xf5a9, 0xd2f0, 0x5cf9, 0xa76e, 0x94e3, 0x1, 0x1);
        gbc.writeMem(0xcf4a, { 0xda, 0xd8, 0xd3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf5a9, gbc.sp());
        EXPECT(0xd3d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcf4a));
        EXPECT(0xd8, gbc.readMem(0xcf4b));
        EXPECT(0xd3, gbc.readMem(0xcf4c));
        // DA 020E
        gbc.setState(0xc0e8, 0x1581, 0xbb10, 0x36c1, 0x6cc7, 0xbe86, 0x1, 0x0);
        gbc.writeMem(0xc0e8, { 0xda, 0x8d, 0xbe });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1581, gbc.sp());
        EXPECT(0xbe8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc0e8));
        EXPECT(0x8d, gbc.readMem(0xc0e9));
        EXPECT(0xbe, gbc.readMem(0xc0ea));
        // DA 020F
        gbc.setState(0x189d, 0xd657, 0x5430, 0x38e9, 0xea03, 0xb5cd, 0x1, 0x0);
        gbc.writeMem(0x189d, { 0xda, 0x36, 0x77 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd657, gbc.sp());
        EXPECT(0x7736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0210
        gbc.setState(0x7dab, 0xc64d, 0x5020, 0xda6b, 0x80ab, 0x6b83, 0x1, 0x1);
        gbc.writeMem(0x7dab, { 0xda, 0xaf, 0xc7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc64d, gbc.sp());
        EXPECT(0x7dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0211
        gbc.setState(0x609f, 0x8f01, 0x4500, 0xe430, 0x3ee2, 0xa108, 0x0, 0x0);
        gbc.writeMem(0x609f, { 0xda, 0x67, 0x28 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8f01, gbc.sp());
        EXPECT(0x60a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0212
        gbc.setState(0xaf54, 0xeaaf, 0x1ff0, 0xc0de, 0xdc94, 0x63ec, 0x0, 0x0);
        gbc.writeMem(0xaf54, { 0xda, 0xbb, 0x3f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xeaaf, gbc.sp());
        EXPECT(0x3fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaf54));
        EXPECT(0xbb, gbc.readMem(0xaf55));
        EXPECT(0x3f, gbc.readMem(0xaf56));
        // DA 0213
        gbc.setState(0x6a4, 0xcdfb, 0x60d0, 0xf072, 0xa2ba, 0x41ba, 0x1, 0x1);
        gbc.writeMem(0x6a4, { 0xda, 0xc1, 0xcb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcdfb, gbc.sp());
        EXPECT(0xcbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0214
        gbc.setState(0x9e2e, 0x8da2, 0x7150, 0xf90c, 0xae1e, 0xb197, 0x0, 0x1);
        gbc.writeMem(0x9e2e, { 0xda, 0xf7, 0xd7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8da2, gbc.sp());
        EXPECT(0xd7f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9e2e));
        EXPECT(0xf7, gbc.readMem(0x9e2f));
        EXPECT(0xd7, gbc.readMem(0x9e30));
        // DA 0215
        gbc.setState(0xb024, 0xd849, 0x5fb0, 0x568d, 0x21c7, 0xfc42, 0x0, 0x1);
        gbc.writeMem(0xb024, { 0xda, 0x9e, 0x82 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd849, gbc.sp());
        EXPECT(0x829e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb024));
        EXPECT(0x9e, gbc.readMem(0xb025));
        EXPECT(0x82, gbc.readMem(0xb026));
        // DA 0216
        gbc.setState(0x12d6, 0x270e, 0xe840, 0xaae8, 0x9e0, 0xf85e, 0x0, 0x1);
        gbc.writeMem(0x12d6, { 0xda, 0x33, 0x39 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x270e, gbc.sp());
        EXPECT(0x12d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0217
        gbc.setState(0xdf33, 0xc7c2, 0xa220, 0x9729, 0x8e4b, 0xb5e6, 0x0, 0x0);
        gbc.writeMem(0xdf33, { 0xda, 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc7c2, gbc.sp());
        EXPECT(0xdf36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdf33));
        EXPECT(0xcb, gbc.readMem(0xdf34));
        EXPECT(0xc3, gbc.readMem(0xdf35));
        // DA 0218
        gbc.setState(0x71c6, 0xc656, 0x7c40, 0x7e92, 0x6975, 0x5aa2, 0x0, 0x1);
        gbc.writeMem(0x71c6, { 0xda, 0xc0, 0x98 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc656, gbc.sp());
        EXPECT(0x71c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0219
        gbc.setState(0xdf29, 0xa2f1, 0xd740, 0x9d41, 0xb314, 0x762e, 0x1, 0x1);
        gbc.writeMem(0xdf29, { 0xda, 0x6e, 0x20 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa2f1, gbc.sp());
        EXPECT(0xdf2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdf29));
        EXPECT(0x6e, gbc.readMem(0xdf2a));
        EXPECT(0x20, gbc.readMem(0xdf2b));
        // DA 021A
        gbc.setState(0x2c94, 0x49e, 0xed80, 0xf345, 0x910b, 0xa636, 0x1, 0x1);
        gbc.writeMem(0x2c94, { 0xda, 0xa9, 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x49e, gbc.sp());
        EXPECT(0x2c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 021B
        gbc.setState(0x6d90, 0xf244, 0x9110, 0xd52d, 0xce85, 0xdf7a, 0x0, 0x1);
        gbc.writeMem(0x6d90, { 0xda, 0xa3, 0x66 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf244, gbc.sp());
        EXPECT(0x66a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 021C
        gbc.setState(0x13af, 0xd649, 0xdd90, 0x9873, 0x33f9, 0xed97, 0x1, 0x1);
        gbc.writeMem(0x13af, { 0xda, 0x4b, 0x35 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd649, gbc.sp());
        EXPECT(0x354b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 021D
        gbc.setState(0x474d, 0x50d0, 0xb880, 0x71a2, 0x267d, 0x32ab, 0x0, 0x1);
        gbc.writeMem(0x474d, { 0xda, 0x19, 0x92 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x50d0, gbc.sp());
        EXPECT(0x4750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 021E
        gbc.setState(0x4f1, 0x7d8f, 0x69a0, 0x7be7, 0x2614, 0x18be, 0x0, 0x1);
        gbc.writeMem(0x4f1, { 0xda, 0x9e, 0x80 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7d8f, gbc.sp());
        EXPECT(0x4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 021F
        gbc.setState(0xb184, 0x157a, 0x3680, 0x3ec5, 0x49cf, 0xf199, 0x1, 0x0);
        gbc.writeMem(0xb184, { 0xda, 0x2b, 0xf4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x157a, gbc.sp());
        EXPECT(0xb187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb184));
        EXPECT(0x2b, gbc.readMem(0xb185));
        EXPECT(0xf4, gbc.readMem(0xb186));
        // DA 0220
        gbc.setState(0xd4fe, 0xe4e4, 0x6960, 0xf046, 0xa152, 0xc6b9, 0x1, 0x0);
        gbc.writeMem(0xd4fe, { 0xda, 0x53, 0xdd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe4e4, gbc.sp());
        EXPECT(0xd501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd4fe));
        EXPECT(0x53, gbc.readMem(0xd4ff));
        EXPECT(0xdd, gbc.readMem(0xd500));
        // DA 0221
        gbc.setState(0xe197, 0xb5e3, 0xd410, 0x69d5, 0x15fc, 0xf777, 0x0, 0x1);
        gbc.writeMem(0xe197, { 0xda, 0xfa, 0xa5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb5e3, gbc.sp());
        EXPECT(0xa5fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe197));
        EXPECT(0xfa, gbc.readMem(0xe198));
        EXPECT(0xa5, gbc.readMem(0xe199));
        // DA 0222
        gbc.setState(0xc791, 0xe60b, 0xcf80, 0xc614, 0xd86b, 0xeaae, 0x1, 0x1);
        gbc.writeMem(0xc791, { 0xda, 0x39, 0xc0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe60b, gbc.sp());
        EXPECT(0xc794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc791));
        EXPECT(0x39, gbc.readMem(0xc792));
        EXPECT(0xc0, gbc.readMem(0xc793));
        // DA 0223
        gbc.setState(0xa35a, 0x6fa8, 0xf4e0, 0xde60, 0x3808, 0x3dd2, 0x0, 0x0);
        gbc.writeMem(0xa35a, { 0xda, 0xd2, 0x4e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6fa8, gbc.sp());
        EXPECT(0xa35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa35a));
        EXPECT(0xd2, gbc.readMem(0xa35b));
        EXPECT(0x4e, gbc.readMem(0xa35c));
        // DA 0224
        gbc.setState(0x6647, 0x9474, 0x6d30, 0xa28d, 0x6ee6, 0x3d8d, 0x1, 0x0);
        gbc.writeMem(0x6647, { 0xda, 0xd1, 0x78 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9474, gbc.sp());
        EXPECT(0x78d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0225
        gbc.setState(0x3cfe, 0xe261, 0x1320, 0x78d9, 0xc30e, 0xe72e, 0x1, 0x1);
        gbc.writeMem(0x3cfe, { 0xda, 0xd7, 0x31 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe261, gbc.sp());
        EXPECT(0x3d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0226
        gbc.setState(0xe973, 0xa670, 0xf510, 0xf7fd, 0x539a, 0x8c48, 0x0, 0x0);
        gbc.writeMem(0xe973, { 0xda, 0x63, 0xac });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa670, gbc.sp());
        EXPECT(0xac63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe973));
        EXPECT(0x63, gbc.readMem(0xe974));
        EXPECT(0xac, gbc.readMem(0xe975));
        // DA 0227
        gbc.setState(0x413e, 0xdce1, 0x31f0, 0xfd46, 0x6cc1, 0x31f, 0x1, 0x1);
        gbc.writeMem(0x413e, { 0xda, 0xc2, 0xc3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdce1, gbc.sp());
        EXPECT(0xc3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0228
        gbc.setState(0xcad5, 0xb1e8, 0x8a80, 0x5da, 0x3df7, 0xdf7d, 0x1, 0x0);
        gbc.writeMem(0xcad5, { 0xda, 0x72, 0x7d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb1e8, gbc.sp());
        EXPECT(0xcad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcad5));
        EXPECT(0x72, gbc.readMem(0xcad6));
        EXPECT(0x7d, gbc.readMem(0xcad7));
        // DA 0229
        gbc.setState(0x65bf, 0x9f71, 0x76c0, 0xb92, 0x98c5, 0x14dd, 0x1, 0x1);
        gbc.writeMem(0x65bf, { 0xda, 0xaf, 0x39 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9f71, gbc.sp());
        EXPECT(0x65c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 022A
        gbc.setState(0xca3a, 0xc09a, 0x8a30, 0xdbe8, 0x59d1, 0x6c2, 0x1, 0x1);
        gbc.writeMem(0xca3a, { 0xda, 0x22, 0xa0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc09a, gbc.sp());
        EXPECT(0xa022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xca3a));
        EXPECT(0x22, gbc.readMem(0xca3b));
        EXPECT(0xa0, gbc.readMem(0xca3c));
        // DA 022B
        gbc.setState(0xadb9, 0x4508, 0x2050, 0x5981, 0x6c53, 0xa91c, 0x1, 0x0);
        gbc.writeMem(0xadb9, { 0xda, 0x40, 0x35 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4508, gbc.sp());
        EXPECT(0x3540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xadb9));
        EXPECT(0x40, gbc.readMem(0xadba));
        EXPECT(0x35, gbc.readMem(0xadbb));
        // DA 022C
        gbc.setState(0xdc25, 0x1c0c, 0xf2d0, 0x6147, 0xbb7f, 0xe82a, 0x1, 0x0);
        gbc.writeMem(0xdc25, { 0xda, 0x8c, 0xe5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1c0c, gbc.sp());
        EXPECT(0xe58c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdc25));
        EXPECT(0x8c, gbc.readMem(0xdc26));
        EXPECT(0xe5, gbc.readMem(0xdc27));
        // DA 022D
        gbc.setState(0x17dc, 0x8071, 0x6d50, 0xfd8d, 0x8de0, 0x2f4, 0x0, 0x1);
        gbc.writeMem(0x17dc, { 0xda, 0x1e, 0xd3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8071, gbc.sp());
        EXPECT(0xd31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 022E
        gbc.setState(0x4a76, 0x9272, 0x30e0, 0x5bf, 0xb23c, 0xe6b9, 0x0, 0x1);
        gbc.writeMem(0x4a76, { 0xda, 0x60, 0x5a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9272, gbc.sp());
        EXPECT(0x4a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 022F
        gbc.setState(0x48e7, 0xa743, 0x35a0, 0x50f8, 0xb338, 0x8add, 0x1, 0x0);
        gbc.writeMem(0x48e7, { 0xda, 0x76, 0x2c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa743, gbc.sp());
        EXPECT(0x48ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0230
        gbc.setState(0x3e9, 0xdcba, 0x6e30, 0x9b07, 0xd7d8, 0xc339, 0x0, 0x0);
        gbc.writeMem(0x3e9, { 0xda, 0x57, 0x34 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xdcba, gbc.sp());
        EXPECT(0x3457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0231
        gbc.setState(0xa585, 0xa358, 0xf8e0, 0x3f3b, 0xc6ba, 0xdbb1, 0x1, 0x0);
        gbc.writeMem(0xa585, { 0xda, 0xd3, 0x43 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa358, gbc.sp());
        EXPECT(0xa588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa585));
        EXPECT(0xd3, gbc.readMem(0xa586));
        EXPECT(0x43, gbc.readMem(0xa587));
        // DA 0232
        gbc.setState(0xa02b, 0xdd8a, 0x3ab0, 0xbfde, 0x4eea, 0x301d, 0x1, 0x0);
        gbc.writeMem(0xa02b, { 0xda, 0x25, 0xc7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdd8a, gbc.sp());
        EXPECT(0xc725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa02b));
        EXPECT(0x25, gbc.readMem(0xa02c));
        EXPECT(0xc7, gbc.readMem(0xa02d));
        // DA 0233
        gbc.setState(0x1eac, 0xbba4, 0x2640, 0x9259, 0x3f0, 0xf71d, 0x1, 0x0);
        gbc.writeMem(0x1eac, { 0xda, 0x4d, 0x8e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbba4, gbc.sp());
        EXPECT(0x1eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0234
        gbc.setState(0xa423, 0xd30e, 0xe950, 0xd11f, 0xe186, 0x2fbe, 0x0, 0x1);
        gbc.writeMem(0xa423, { 0xda, 0xd1, 0xa7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd30e, gbc.sp());
        EXPECT(0xa7d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa423));
        EXPECT(0xd1, gbc.readMem(0xa424));
        EXPECT(0xa7, gbc.readMem(0xa425));
        // DA 0235
        gbc.setState(0xe6b, 0xc218, 0xee80, 0xecb8, 0x79f7, 0xe0d4, 0x0, 0x1);
        gbc.writeMem(0xe6b, { 0xda, 0x4d, 0x4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc218, gbc.sp());
        EXPECT(0xe6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0236
        gbc.setState(0x3206, 0x1f64, 0x6e00, 0x9897, 0xcca0, 0x95de, 0x1, 0x1);
        gbc.writeMem(0x3206, { 0xda, 0x45, 0x17 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1f64, gbc.sp());
        EXPECT(0x3209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0237
        gbc.setState(0x33cb, 0x1268, 0xa960, 0x3c64, 0x7ff7, 0x6c9b, 0x1, 0x1);
        gbc.writeMem(0x33cb, { 0xda, 0x5c, 0xcc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1268, gbc.sp());
        EXPECT(0x33ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0238
        gbc.setState(0x915c, 0x19dc, 0xa800, 0x7d72, 0x11a, 0x3bc0, 0x0, 0x0);
        gbc.writeMem(0x915c, { 0xda, 0xd2, 0xc5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x19dc, gbc.sp());
        EXPECT(0x915f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x915c));
        EXPECT(0xd2, gbc.readMem(0x915d));
        EXPECT(0xc5, gbc.readMem(0x915e));
        // DA 0239
        gbc.setState(0x46a, 0x13fb, 0x8490, 0xf5e7, 0x9444, 0x43e2, 0x1, 0x1);
        gbc.writeMem(0x46a, { 0xda, 0x2e, 0xa2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x13fb, gbc.sp());
        EXPECT(0xa22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 023A
        gbc.setState(0xda27, 0x3f99, 0x81f0, 0x8379, 0xec70, 0xf5ae, 0x1, 0x0);
        gbc.writeMem(0xda27, { 0xda, 0xea, 0x25 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3f99, gbc.sp());
        EXPECT(0x25ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xda27));
        EXPECT(0xea, gbc.readMem(0xda28));
        EXPECT(0x25, gbc.readMem(0xda29));
        // DA 023B
        gbc.setState(0x6e88, 0xa19b, 0x8ef0, 0xb6d3, 0x68c2, 0x8161, 0x1, 0x1);
        gbc.writeMem(0x6e88, { 0xda, 0x9e, 0x30 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa19b, gbc.sp());
        EXPECT(0x309e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 023C
        gbc.setState(0xcbba, 0x9899, 0x2150, 0x1274, 0x1ea3, 0x537f, 0x0, 0x0);
        gbc.writeMem(0xcbba, { 0xda, 0xbb, 0x9a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9899, gbc.sp());
        EXPECT(0x9abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcbba));
        EXPECT(0xbb, gbc.readMem(0xcbbb));
        EXPECT(0x9a, gbc.readMem(0xcbbc));
        // DA 023D
        gbc.setState(0x83fc, 0x6b56, 0x9370, 0xa706, 0x2b6e, 0x31b9, 0x1, 0x1);
        gbc.writeMem(0x83fc, { 0xda, 0x93, 0x9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6b56, gbc.sp());
        EXPECT(0x993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x83fc));
        EXPECT(0x93, gbc.readMem(0x83fd));
        EXPECT(0x9, gbc.readMem(0x83fe));
        // DA 023E
        gbc.setState(0xe270, 0xee54, 0x5dc0, 0x3c5a, 0xe615, 0xf647, 0x0, 0x0);
        gbc.writeMem(0xe270, { 0xda, 0x79, 0x99 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xee54, gbc.sp());
        EXPECT(0xe273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe270));
        EXPECT(0x79, gbc.readMem(0xe271));
        EXPECT(0x99, gbc.readMem(0xe272));
        // DA 023F
        gbc.setState(0x669, 0x3bf5, 0xbe0, 0x9207, 0xc9bf, 0xf0f7, 0x0, 0x1);
        gbc.writeMem(0x669, { 0xda, 0x6d, 0xf9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3bf5, gbc.sp());
        EXPECT(0x66c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0240
        gbc.setState(0x72f5, 0x69c6, 0xe310, 0x5430, 0x6a0d, 0x31ca, 0x0, 0x1);
        gbc.writeMem(0x72f5, { 0xda, 0xc6, 0xd9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x69c6, gbc.sp());
        EXPECT(0xd9c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0241
        gbc.setState(0x836e, 0x57c0, 0x9170, 0x9bec, 0x90e7, 0xa8ca, 0x1, 0x0);
        gbc.writeMem(0x836e, { 0xda, 0xd9, 0x5a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x57c0, gbc.sp());
        EXPECT(0x5ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x836e));
        EXPECT(0xd9, gbc.readMem(0x836f));
        EXPECT(0x5a, gbc.readMem(0x8370));
        // DA 0242
        gbc.setState(0x785e, 0xca7f, 0xe990, 0xd91c, 0xf79f, 0xfcc4, 0x0, 0x1);
        gbc.writeMem(0x785e, { 0xda, 0x63, 0x75 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xca7f, gbc.sp());
        EXPECT(0x7563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0243
        gbc.setState(0x906a, 0x670, 0x93d0, 0xf5ad, 0x9da1, 0x60c2, 0x1, 0x0);
        gbc.writeMem(0x906a, { 0xda, 0xd1, 0x84 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x670, gbc.sp());
        EXPECT(0x84d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x906a));
        EXPECT(0xd1, gbc.readMem(0x906b));
        EXPECT(0x84, gbc.readMem(0x906c));
        // DA 0244
        gbc.setState(0xcecb, 0x77f6, 0xc6e0, 0x8efc, 0x238d, 0x1c0f, 0x1, 0x0);
        gbc.writeMem(0xcecb, { 0xda, 0xc4, 0x45 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x77f6, gbc.sp());
        EXPECT(0xcece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcecb));
        EXPECT(0xc4, gbc.readMem(0xcecc));
        EXPECT(0x45, gbc.readMem(0xcecd));
        // DA 0246
        gbc.setState(0x39c3, 0x599d, 0x7a60, 0x466, 0x8f62, 0xd9c1, 0x0, 0x0);
        gbc.writeMem(0x39c3, { 0xda, 0xe0, 0xb4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x599d, gbc.sp());
        EXPECT(0x39c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0247
        gbc.setState(0xd32e, 0x8f16, 0x78f0, 0x27f8, 0x8a7d, 0xc732, 0x1, 0x1);
        gbc.writeMem(0xd32e, { 0xda, 0x36, 0x8a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8f16, gbc.sp());
        EXPECT(0x8a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd32e));
        EXPECT(0x36, gbc.readMem(0xd32f));
        EXPECT(0x8a, gbc.readMem(0xd330));
        // DA 0248
        gbc.setState(0x76ee, 0x27e2, 0x1a60, 0x9f05, 0x25eb, 0x1e49, 0x0, 0x1);
        gbc.writeMem(0x76ee, { 0xda, 0x8e, 0x4b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x27e2, gbc.sp());
        EXPECT(0x76f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0249
        gbc.setState(0x21d2, 0x2e73, 0x7960, 0xbd4c, 0x80b6, 0xa481, 0x0, 0x0);
        gbc.writeMem(0x21d2, { 0xda, 0x57, 0x2f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2e73, gbc.sp());
        EXPECT(0x21d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 024A
        gbc.setState(0x3427, 0xad08, 0xcff0, 0x9385, 0x773f, 0xbd66, 0x0, 0x0);
        gbc.writeMem(0x3427, { 0xda, 0x15, 0x22 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xad08, gbc.sp());
        EXPECT(0x2215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 024B
        gbc.setState(0x957d, 0xf1bf, 0xf90, 0xc173, 0xbdbd, 0x246a, 0x1, 0x1);
        gbc.writeMem(0x957d, { 0xda, 0xda, 0xc6 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf1bf, gbc.sp());
        EXPECT(0xc6da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x957d));
        EXPECT(0xda, gbc.readMem(0x957e));
        EXPECT(0xc6, gbc.readMem(0x957f));
        // DA 024C
        gbc.setState(0x8e40, 0x4ee5, 0xae90, 0xbc9d, 0x214f, 0xa415, 0x0, 0x1);
        gbc.writeMem(0x8e40, { 0xda, 0xd, 0x3b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4ee5, gbc.sp());
        EXPECT(0x3b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8e40));
        EXPECT(0xd, gbc.readMem(0x8e41));
        EXPECT(0x3b, gbc.readMem(0x8e42));
        // DA 024D
        gbc.setState(0x7b08, 0xfc22, 0x170, 0x42b, 0x9ede, 0xce0d, 0x1, 0x0);
        gbc.writeMem(0x7b08, { 0xda, 0x5e, 0x10 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfc22, gbc.sp());
        EXPECT(0x105e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 024E
        gbc.setState(0x5f50, 0xd6c3, 0x2130, 0xfc9b, 0xe3f2, 0xdee0, 0x0, 0x0);
        gbc.writeMem(0x5f50, { 0xda, 0x5e, 0xbb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd6c3, gbc.sp());
        EXPECT(0xbb5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 024F
        gbc.setState(0x2a1c, 0xe2b5, 0x4f60, 0xb550, 0xb0fe, 0x616e, 0x1, 0x1);
        gbc.writeMem(0x2a1c, { 0xda, 0x95, 0xb2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe2b5, gbc.sp());
        EXPECT(0x2a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0250
        gbc.setState(0x799b, 0x1442, 0xadd0, 0x678e, 0x4c5c, 0x7e36, 0x0, 0x1);
        gbc.writeMem(0x799b, { 0xda, 0x72, 0x15 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1442, gbc.sp());
        EXPECT(0x1572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0251
        gbc.setState(0xd396, 0x55e8, 0xf30, 0xf38a, 0x6fa6, 0xbba1, 0x0, 0x0);
        gbc.writeMem(0xd396, { 0xda, 0x55, 0xf9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x55e8, gbc.sp());
        EXPECT(0xf955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd396));
        EXPECT(0x55, gbc.readMem(0xd397));
        EXPECT(0xf9, gbc.readMem(0xd398));
        // DA 0252
        gbc.setState(0xd7fc, 0xfb38, 0xb5e0, 0x42c0, 0xe960, 0x9a, 0x1, 0x0);
        gbc.writeMem(0xd7fc, { 0xda, 0xfc, 0x15 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfb38, gbc.sp());
        EXPECT(0xd7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd7fc));
        EXPECT(0xfc, gbc.readMem(0xd7fd));
        EXPECT(0x15, gbc.readMem(0xd7fe));
        // DA 0253
        gbc.setState(0xb637, 0x8cae, 0x7d30, 0xa34c, 0x426f, 0x56d9, 0x1, 0x0);
        gbc.writeMem(0xb637, { 0xda, 0x32, 0xf0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8cae, gbc.sp());
        EXPECT(0xf032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb637));
        EXPECT(0x32, gbc.readMem(0xb638));
        EXPECT(0xf0, gbc.readMem(0xb639));
        // DA 0254
        gbc.setState(0x2ba, 0x8bb8, 0x7dd0, 0xe4d8, 0x4303, 0xc8bc, 0x1, 0x0);
        gbc.writeMem(0x2ba, { 0xda, 0xfd, 0xe });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8bb8, gbc.sp());
        EXPECT(0xefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0256
        gbc.setState(0x2e3c, 0x6a68, 0x5c90, 0x231f, 0xfda3, 0x122c, 0x0, 0x1);
        gbc.writeMem(0x2e3c, { 0xda, 0x43, 0xa5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6a68, gbc.sp());
        EXPECT(0xa543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0257
        gbc.setState(0xa322, 0xb884, 0xd950, 0xaab3, 0xfb6c, 0x3a26, 0x1, 0x1);
        gbc.writeMem(0xa322, { 0xda, 0x57, 0x2f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb884, gbc.sp());
        EXPECT(0x2f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa322));
        EXPECT(0x57, gbc.readMem(0xa323));
        EXPECT(0x2f, gbc.readMem(0xa324));
        // DA 0258
        gbc.setState(0x6635, 0xe1cc, 0xf650, 0xfd26, 0x8ec0, 0x3f70, 0x0, 0x0);
        gbc.writeMem(0x6635, { 0xda, 0x57, 0x1a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe1cc, gbc.sp());
        EXPECT(0x1a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0259
        gbc.setState(0xa1f5, 0xeaa9, 0xabe0, 0xd880, 0x3de3, 0xd5b4, 0x0, 0x0);
        gbc.writeMem(0xa1f5, { 0xda, 0xef, 0x9d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xeaa9, gbc.sp());
        EXPECT(0xa1f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa1f5));
        EXPECT(0xef, gbc.readMem(0xa1f6));
        EXPECT(0x9d, gbc.readMem(0xa1f7));
        // DA 025A
        gbc.setState(0x9fc, 0x3d4b, 0x8790, 0x88f3, 0x2ef3, 0x6f82, 0x0, 0x0);
        gbc.writeMem(0x9fc, { 0xda, 0x1d, 0xb6 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3d4b, gbc.sp());
        EXPECT(0xb61d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 025B
        gbc.setState(0x235, 0xab9e, 0xf540, 0x4f0a, 0x40ce, 0x1fe6, 0x1, 0x1);
        gbc.writeMem(0x235, { 0xda, 0xc3, 0x65 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xab9e, gbc.sp());
        EXPECT(0x238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 025C
        gbc.setState(0xa2bf, 0x9f80, 0xfc90, 0xb55a, 0x7d74, 0x11a0, 0x0, 0x0);
        gbc.writeMem(0xa2bf, { 0xda, 0x4c, 0x7d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9f80, gbc.sp());
        EXPECT(0x7d4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa2bf));
        EXPECT(0x4c, gbc.readMem(0xa2c0));
        EXPECT(0x7d, gbc.readMem(0xa2c1));
        // DA 025D
        gbc.setState(0xd32e, 0x18e7, 0xb400, 0x2e82, 0xbd0d, 0xa246, 0x0, 0x1);
        gbc.writeMem(0xd32e, { 0xda, 0x36, 0x8a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x18e7, gbc.sp());
        EXPECT(0xd331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd32e));
        EXPECT(0x36, gbc.readMem(0xd32f));
        EXPECT(0x8a, gbc.readMem(0xd330));
        // DA 025E
        gbc.setState(0x54d3, 0x80bc, 0x4b60, 0x90f1, 0xf94e, 0x34c6, 0x1, 0x0);
        gbc.writeMem(0x54d3, { 0xda, 0xcd, 0x64 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x80bc, gbc.sp());
        EXPECT(0x54d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 025F
        gbc.setState(0x2d68, 0x9702, 0x5660, 0xe544, 0x996e, 0x6c63, 0x0, 0x0);
        gbc.writeMem(0x2d68, { 0xda, 0x3e, 0xfd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9702, gbc.sp());
        EXPECT(0x2d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0261
        gbc.setState(0xc88, 0x9bfb, 0xc4c0, 0x8271, 0x8a19, 0x5b15, 0x1, 0x1);
        gbc.writeMem(0xc88, { 0xda, 0x61, 0x2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9bfb, gbc.sp());
        EXPECT(0xc8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0263
        gbc.setState(0x423b, 0x7556, 0x9400, 0xbee1, 0x823, 0xd611, 0x0, 0x1);
        gbc.writeMem(0x423b, { 0xda, 0x21, 0x5b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7556, gbc.sp());
        EXPECT(0x423e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0264
        gbc.setState(0x9c3d, 0x99bd, 0x73e0, 0xc68d, 0xdd49, 0x4234, 0x0, 0x0);
        gbc.writeMem(0x9c3d, { 0xda, 0xd9, 0x1c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x99bd, gbc.sp());
        EXPECT(0x9c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9c3d));
        EXPECT(0xd9, gbc.readMem(0x9c3e));
        EXPECT(0x1c, gbc.readMem(0x9c3f));
        // DA 0265
        gbc.setState(0x6967, 0x5a65, 0x4be0, 0xb177, 0xcbc0, 0x5a66, 0x1, 0x1);
        gbc.writeMem(0x6967, { 0xda, 0xb3, 0x4e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5a65, gbc.sp());
        EXPECT(0x696a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0266
        gbc.setState(0xee86, 0x5906, 0xe2a0, 0xa521, 0xd398, 0x9fd4, 0x0, 0x0);
        gbc.writeMem(0xee86, { 0xda, 0x1f, 0x61 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5906, gbc.sp());
        EXPECT(0xee89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xee86));
        EXPECT(0x1f, gbc.readMem(0xee87));
        EXPECT(0x61, gbc.readMem(0xee88));
        // DA 0267
        gbc.setState(0x9c36, 0xe098, 0x9ea0, 0xdc08, 0xfa50, 0x900a, 0x1, 0x0);
        gbc.writeMem(0x9c36, { 0xda, 0x8, 0x8d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe098, gbc.sp());
        EXPECT(0x9c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9c36));
        EXPECT(0x8, gbc.readMem(0x9c37));
        EXPECT(0x8d, gbc.readMem(0x9c38));
        // DA 0268
        gbc.setState(0x7b34, 0x5b5e, 0x2b00, 0xdce9, 0x9c96, 0xc1f0, 0x1, 0x1);
        gbc.writeMem(0x7b34, { 0xda, 0xe2, 0xae });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5b5e, gbc.sp());
        EXPECT(0x7b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0269
        gbc.setState(0x9c6b, 0xbef, 0xb930, 0x5f3e, 0xdd4, 0x4fc8, 0x1, 0x1);
        gbc.writeMem(0x9c6b, { 0xda, 0x26, 0xe5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbef, gbc.sp());
        EXPECT(0xe526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9c6b));
        EXPECT(0x26, gbc.readMem(0x9c6c));
        EXPECT(0xe5, gbc.readMem(0x9c6d));
        // DA 026A
        gbc.setState(0xa58f, 0xbed1, 0xe5b0, 0x9a71, 0xeb74, 0x232d, 0x0, 0x0);
        gbc.writeMem(0xa58f, { 0xda, 0x49, 0x82 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbed1, gbc.sp());
        EXPECT(0x8249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa58f));
        EXPECT(0x49, gbc.readMem(0xa590));
        EXPECT(0x82, gbc.readMem(0xa591));
        // DA 026B
        gbc.setState(0xbb36, 0x554e, 0x3320, 0x7df3, 0x59bb, 0x5b66, 0x1, 0x1);
        gbc.writeMem(0xbb36, { 0xda, 0x58, 0xd0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x554e, gbc.sp());
        EXPECT(0xbb39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbb36));
        EXPECT(0x58, gbc.readMem(0xbb37));
        EXPECT(0xd0, gbc.readMem(0xbb38));
        // DA 026C
        gbc.setState(0x6c86, 0xbf2b, 0xef0, 0xaa98, 0xf67f, 0xdfdd, 0x1, 0x0);
        gbc.writeMem(0x6c86, { 0xda, 0xc3, 0x1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbf2b, gbc.sp());
        EXPECT(0x1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 026D
        gbc.setState(0x162, 0x72d, 0x9a20, 0xa8f5, 0x3393, 0xfadf, 0x0, 0x1);
        gbc.writeMem(0x162, { 0xda, 0x52, 0x96 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x72d, gbc.sp());
        EXPECT(0x165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 026F
        gbc.setState(0xbd5f, 0xc168, 0x37a0, 0xf932, 0x3946, 0x8d7b, 0x1, 0x0);
        gbc.writeMem(0xbd5f, { 0xda, 0xcd, 0xef });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc168, gbc.sp());
        EXPECT(0xbd62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbd5f));
        EXPECT(0xcd, gbc.readMem(0xbd60));
        EXPECT(0xef, gbc.readMem(0xbd61));
        // DA 0270
        gbc.setState(0x707c, 0xecce, 0x1790, 0x3178, 0xe203, 0x2d70, 0x1, 0x0);
        gbc.writeMem(0x707c, { 0xda, 0x14, 0x4f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xecce, gbc.sp());
        EXPECT(0x4f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0271
        gbc.setState(0xb521, 0xab5b, 0xeb90, 0x753f, 0xe58d, 0x378, 0x1, 0x1);
        gbc.writeMem(0xb521, { 0xda, 0x4a, 0x7d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xab5b, gbc.sp());
        EXPECT(0x7d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb521));
        EXPECT(0x4a, gbc.readMem(0xb522));
        EXPECT(0x7d, gbc.readMem(0xb523));
        // DA 0272
        gbc.setState(0x332e, 0xca96, 0x3710, 0x1c6d, 0x6c94, 0xf998, 0x1, 0x1);
        gbc.writeMem(0x332e, { 0xda, 0x86, 0x7b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xca96, gbc.sp());
        EXPECT(0x7b86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0273
        gbc.setState(0xba7a, 0x7b30, 0xa080, 0x69ad, 0x99b5, 0xdf, 0x1, 0x1);
        gbc.writeMem(0xba7a, { 0xda, 0xdd, 0x3a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7b30, gbc.sp());
        EXPECT(0xba7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xba7a));
        EXPECT(0xdd, gbc.readMem(0xba7b));
        EXPECT(0x3a, gbc.readMem(0xba7c));
        // DA 0274
        gbc.setState(0xe0d1, 0x25ec, 0x6c30, 0xd821, 0x4063, 0xac52, 0x0, 0x1);
        gbc.writeMem(0xe0d1, { 0xda, 0xaf, 0x98 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x25ec, gbc.sp());
        EXPECT(0x98af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe0d1));
        EXPECT(0xaf, gbc.readMem(0xe0d2));
        EXPECT(0x98, gbc.readMem(0xe0d3));
        // DA 0275
        gbc.setState(0x5f7c, 0x6619, 0x8df0, 0xef3d, 0x728c, 0x60fd, 0x0, 0x1);
        gbc.writeMem(0x5f7c, { 0xda, 0x9b, 0xea });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6619, gbc.sp());
        EXPECT(0xea9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0276
        gbc.setState(0x2367, 0x18d9, 0x5a10, 0x5d61, 0xb5b5, 0xbfe1, 0x0, 0x1);
        gbc.writeMem(0x2367, { 0xda, 0xe3, 0x69 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x18d9, gbc.sp());
        EXPECT(0x69e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0277
        gbc.setState(0x22be, 0x8a10, 0x7210, 0xa227, 0x4133, 0xdc0b, 0x0, 0x0);
        gbc.writeMem(0x22be, { 0xda, 0x5b, 0xfe });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8a10, gbc.sp());
        EXPECT(0xfe5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0278
        gbc.setState(0x909c, 0x78ca, 0xdea0, 0x9da2, 0x2913, 0xb834, 0x1, 0x1);
        gbc.writeMem(0x909c, { 0xda, 0xd7, 0xb2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x78ca, gbc.sp());
        EXPECT(0x909f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x909c));
        EXPECT(0xd7, gbc.readMem(0x909d));
        EXPECT(0xb2, gbc.readMem(0x909e));
        // DA 0279
        gbc.setState(0x582f, 0x4b79, 0xa080, 0xc154, 0x6e51, 0x78d2, 0x0, 0x0);
        gbc.writeMem(0x582f, { 0xda, 0xa1, 0x8f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4b79, gbc.sp());
        EXPECT(0x5832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 027B
        gbc.setState(0xced8, 0x422c, 0x3270, 0x84fb, 0x8177, 0xe171, 0x1, 0x1);
        gbc.writeMem(0xced8, { 0xda, 0x9f, 0xb7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x422c, gbc.sp());
        EXPECT(0xb79f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xced8));
        EXPECT(0x9f, gbc.readMem(0xced9));
        EXPECT(0xb7, gbc.readMem(0xceda));
        // DA 027C
        gbc.setState(0x1472, 0xf142, 0x2e20, 0x390a, 0x3c0c, 0x5855, 0x0, 0x0);
        gbc.writeMem(0x1472, { 0xda, 0x1d, 0xe3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf142, gbc.sp());
        EXPECT(0x1475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 027D
        gbc.setState(0x46bd, 0x4250, 0x7bb0, 0x9ae8, 0x325a, 0x75f4, 0x1, 0x0);
        gbc.writeMem(0x46bd, { 0xda, 0x78, 0x8f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4250, gbc.sp());
        EXPECT(0x8f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 027F
        gbc.setState(0x1349, 0x4a6d, 0x1890, 0x8da3, 0xdaf7, 0x92fe, 0x0, 0x0);
        gbc.writeMem(0x1349, { 0xda, 0x24, 0x7a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4a6d, gbc.sp());
        EXPECT(0x7a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0280
        gbc.setState(0x2202, 0xc14c, 0x8330, 0x9e0c, 0x4558, 0xa4c0, 0x1, 0x0);
        gbc.writeMem(0x2202, { 0xda, 0x2, 0xd0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc14c, gbc.sp());
        EXPECT(0xd002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0281
        gbc.setState(0x83cb, 0x36fb, 0x74a0, 0x13a4, 0x59e4, 0x8de5, 0x0, 0x1);
        gbc.writeMem(0x83cb, { 0xda, 0x82, 0x77 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x36fb, gbc.sp());
        EXPECT(0x83ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x83cb));
        EXPECT(0x82, gbc.readMem(0x83cc));
        EXPECT(0x77, gbc.readMem(0x83cd));
        // DA 0282
        gbc.setState(0xa2da, 0x66c8, 0xa2c0, 0x8f88, 0x8797, 0x30b1, 0x0, 0x0);
        gbc.writeMem(0xa2da, { 0xda, 0x8a, 0x37 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x66c8, gbc.sp());
        EXPECT(0xa2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa2da));
        EXPECT(0x8a, gbc.readMem(0xa2db));
        EXPECT(0x37, gbc.readMem(0xa2dc));
        // DA 0283
        gbc.setState(0x884a, 0xf0ba, 0x6980, 0xe9c1, 0x7f69, 0xc7f4, 0x0, 0x1);
        gbc.writeMem(0x884a, { 0xda, 0xc3, 0xcd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf0ba, gbc.sp());
        EXPECT(0x884d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x884a));
        EXPECT(0xc3, gbc.readMem(0x884b));
        EXPECT(0xcd, gbc.readMem(0x884c));
        // DA 0284
        gbc.setState(0x2222, 0xda7e, 0x3560, 0xaaa8, 0xbb3, 0x145e, 0x0, 0x0);
        gbc.writeMem(0x2222, { 0xda, 0xf0, 0x3e });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xda7e, gbc.sp());
        EXPECT(0x2225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0286
        gbc.setState(0x9ae6, 0xaf68, 0x3250, 0x278f, 0xf81e, 0x6c09, 0x1, 0x0);
        gbc.writeMem(0x9ae6, { 0xda, 0xf6, 0xbc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xaf68, gbc.sp());
        EXPECT(0xbcf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9ae6));
        EXPECT(0xf6, gbc.readMem(0x9ae7));
        EXPECT(0xbc, gbc.readMem(0x9ae8));
        // DA 0287
        gbc.setState(0x165e, 0xd010, 0xf320, 0xb013, 0xb0f6, 0x2946, 0x1, 0x0);
        gbc.writeMem(0x165e, { 0xda, 0x3f, 0x24 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd010, gbc.sp());
        EXPECT(0x1661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0288
        gbc.setState(0x5f5e, 0x1109, 0x5fb0, 0x83ad, 0xbe0e, 0x322d, 0x0, 0x0);
        gbc.writeMem(0x5f5e, { 0xda, 0x5d, 0x1c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1109, gbc.sp());
        EXPECT(0x1c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0289
        gbc.setState(0x54fe, 0x9306, 0xfdd0, 0xe99f, 0x5f7e, 0xae46, 0x0, 0x0);
        gbc.writeMem(0x54fe, { 0xda, 0xd4, 0x35 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9306, gbc.sp());
        EXPECT(0x35d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 028A
        gbc.setState(0x4561, 0x493c, 0xfb40, 0x5bd3, 0xcc44, 0xa04d, 0x0, 0x1);
        gbc.writeMem(0x4561, { 0xda, 0x78, 0x51 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x493c, gbc.sp());
        EXPECT(0x4564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 028B
        gbc.setState(0x439c, 0xe6f4, 0x800, 0x8712, 0x4825, 0xe758, 0x0, 0x0);
        gbc.writeMem(0x439c, { 0xda, 0x19, 0x54 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe6f4, gbc.sp());
        EXPECT(0x439f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 028D
        gbc.setState(0xa9c8, 0xc1c8, 0xd350, 0x9683, 0x2e52, 0x9206, 0x0, 0x1);
        gbc.writeMem(0xa9c8, { 0xda, 0x9b, 0x4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc1c8, gbc.sp());
        EXPECT(0x49b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa9c8));
        EXPECT(0x9b, gbc.readMem(0xa9c9));
        EXPECT(0x4, gbc.readMem(0xa9ca));
        // DA 028E
        gbc.setState(0x5d3e, 0x1434, 0xd020, 0x777b, 0x6374, 0xcb73, 0x0, 0x0);
        gbc.writeMem(0x5d3e, { 0xda, 0xc, 0xa3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1434, gbc.sp());
        EXPECT(0x5d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 028F
        gbc.setState(0x61e0, 0x8b13, 0x91b0, 0x47cd, 0x2a57, 0x5170, 0x1, 0x1);
        gbc.writeMem(0x61e0, { 0xda, 0xd1, 0x15 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8b13, gbc.sp());
        EXPECT(0x15d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0290
        gbc.setState(0x1dc0, 0xc9ca, 0x22a0, 0x5994, 0xa8a4, 0x59ba, 0x1, 0x0);
        gbc.writeMem(0x1dc0, { 0xda, 0x51, 0xdd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc9ca, gbc.sp());
        EXPECT(0x1dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0291
        gbc.setState(0x280d, 0x5d37, 0xb8e0, 0xaf4a, 0xf8e3, 0x3319, 0x0, 0x0);
        gbc.writeMem(0x280d, { 0xda, 0x4f, 0xbf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5d37, gbc.sp());
        EXPECT(0x2810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0292
        gbc.setState(0xa740, 0x57ca, 0x23d0, 0x3469, 0x83a4, 0xa514, 0x0, 0x1);
        gbc.writeMem(0xa740, { 0xda, 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x57ca, gbc.sp());
        EXPECT(0xf7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa740));
        EXPECT(0xcb, gbc.readMem(0xa741));
        EXPECT(0xf7, gbc.readMem(0xa742));
        // DA 0293
        gbc.setState(0x64d2, 0x3204, 0xbe10, 0xd62c, 0xd303, 0x964c, 0x0, 0x1);
        gbc.writeMem(0x64d2, { 0xda, 0x2c, 0x2a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3204, gbc.sp());
        EXPECT(0x2a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0294
        gbc.setState(0x5ed9, 0xf871, 0x6990, 0x47c8, 0x95a4, 0x2a59, 0x0, 0x0);
        gbc.writeMem(0x5ed9, { 0xda, 0x31, 0x46 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf871, gbc.sp());
        EXPECT(0x4631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0295
        gbc.setState(0x4fbe, 0xe70f, 0xe2c0, 0x31c9, 0xbca7, 0xa801, 0x1, 0x0);
        gbc.writeMem(0x4fbe, { 0xda, 0x2e, 0x65 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe70f, gbc.sp());
        EXPECT(0x4fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0296
        gbc.setState(0x6670, 0xfdf3, 0x4bf0, 0x5f77, 0x331b, 0x9818, 0x1, 0x1);
        gbc.writeMem(0x6670, { 0xda, 0x18, 0x15 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfdf3, gbc.sp());
        EXPECT(0x1518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0297
        gbc.setState(0x85a2, 0xbb7c, 0xe300, 0x9e31, 0x45fc, 0x73d0, 0x1, 0x1);
        gbc.writeMem(0x85a2, { 0xda, 0x71, 0x1b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbb7c, gbc.sp());
        EXPECT(0x85a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x85a2));
        EXPECT(0x71, gbc.readMem(0x85a3));
        EXPECT(0x1b, gbc.readMem(0x85a4));
        // DA 0298
        gbc.setState(0x511a, 0x1d6c, 0xc2b0, 0xb8ae, 0x9cd9, 0x38ff, 0x0, 0x1);
        gbc.writeMem(0x511a, { 0xda, 0x49, 0xde });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1d6c, gbc.sp());
        EXPECT(0xde49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0299
        gbc.setState(0x7905, 0x3801, 0x9fb0, 0x9f70, 0x4c3c, 0x1485, 0x1, 0x0);
        gbc.writeMem(0x7905, { 0xda, 0xae, 0xe2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3801, gbc.sp());
        EXPECT(0xe2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 029A
        gbc.setState(0x1a50, 0x4d8d, 0x69e0, 0xeeff, 0xfdbe, 0xdd87, 0x0, 0x1);
        gbc.writeMem(0x1a50, { 0xda, 0xad, 0x8e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4d8d, gbc.sp());
        EXPECT(0x1a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 029B
        gbc.setState(0x3ffc, 0x2ae0, 0x7d0, 0x8781, 0x5b0c, 0x351a, 0x0, 0x0);
        gbc.writeMem(0x3ffc, { 0xda, 0x8a, 0xfe });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2ae0, gbc.sp());
        EXPECT(0xfe8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 029C
        gbc.setState(0xa6d6, 0xb387, 0xa970, 0x52f4, 0x4163, 0x6bcc, 0x0, 0x1);
        gbc.writeMem(0xa6d6, { 0xda, 0x58, 0x14 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb387, gbc.sp());
        EXPECT(0x1458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa6d6));
        EXPECT(0x58, gbc.readMem(0xa6d7));
        EXPECT(0x14, gbc.readMem(0xa6d8));
        // DA 029D
        gbc.setState(0xda34, 0x90da, 0x4500, 0xae13, 0x63fc, 0x3fdc, 0x0, 0x0);
        gbc.writeMem(0xda34, { 0xda, 0x57, 0xb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x90da, gbc.sp());
        EXPECT(0xda37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xda34));
        EXPECT(0x57, gbc.readMem(0xda35));
        EXPECT(0xb, gbc.readMem(0xda36));
        // DA 029E
        gbc.setState(0x4a39, 0x2c97, 0x85e0, 0x97e7, 0x279c, 0xa880, 0x1, 0x0);
        gbc.writeMem(0x4a39, { 0xda, 0xfd, 0x4b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2c97, gbc.sp());
        EXPECT(0x4a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 029F
        gbc.setState(0xeee6, 0x9c33, 0xb510, 0x858b, 0x1632, 0x589, 0x0, 0x1);
        gbc.writeMem(0xeee6, { 0xda, 0x4c, 0xab });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9c33, gbc.sp());
        EXPECT(0xab4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xeee6));
        EXPECT(0x4c, gbc.readMem(0xeee7));
        EXPECT(0xab, gbc.readMem(0xeee8));
        // DA 02A0
        gbc.setState(0x27ef, 0x677c, 0x9c40, 0xbf14, 0xadfb, 0xd7eb, 0x1, 0x0);
        gbc.writeMem(0x27ef, { 0xda, 0x30, 0xab });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x677c, gbc.sp());
        EXPECT(0x27f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02A1
        gbc.setState(0x4b29, 0xfd83, 0xd130, 0x8bc4, 0x8a0c, 0x4139, 0x0, 0x0);
        gbc.writeMem(0x4b29, { 0xda, 0xf7, 0xfa });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfd83, gbc.sp());
        EXPECT(0xfaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02A2
        gbc.setState(0x4f6f, 0x80b4, 0x25c0, 0x3520, 0x5858, 0x49cf, 0x0, 0x1);
        gbc.writeMem(0x4f6f, { 0xda, 0x72, 0x64 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x80b4, gbc.sp());
        EXPECT(0x4f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02A3
        gbc.setState(0x6dd0, 0x998b, 0x70a0, 0x9ec1, 0xea92, 0xef10, 0x1, 0x0);
        gbc.writeMem(0x6dd0, { 0xda, 0x73, 0x8e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x998b, gbc.sp());
        EXPECT(0x6dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02A4
        gbc.setState(0x50e9, 0x201b, 0x21f0, 0xb8f1, 0x2e50, 0x52da, 0x1, 0x1);
        gbc.writeMem(0x50e9, { 0xda, 0xb8, 0x74 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x201b, gbc.sp());
        EXPECT(0x74b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02A5
        gbc.setState(0x7e34, 0xc11f, 0x7940, 0xe921, 0x4edf, 0x297a, 0x0, 0x1);
        gbc.writeMem(0x7e34, { 0xda, 0x5d, 0xb9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc11f, gbc.sp());
        EXPECT(0x7e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02A6
        gbc.setState(0x2dae, 0x7009, 0x6fb0, 0x708f, 0x50ab, 0x4d41, 0x0, 0x0);
        gbc.writeMem(0x2dae, { 0xda, 0xda, 0xd6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7009, gbc.sp());
        EXPECT(0xd6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02A7
        gbc.setState(0x12c4, 0x360e, 0xa120, 0x75c6, 0x12a9, 0xa8f5, 0x0, 0x1);
        gbc.writeMem(0x12c4, { 0xda, 0xe8, 0x32 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x360e, gbc.sp());
        EXPECT(0x12c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02A8
        gbc.setState(0xb692, 0xacb4, 0x9b10, 0xfea3, 0xf97d, 0x3115, 0x1, 0x1);
        gbc.writeMem(0xb692, { 0xda, 0x29, 0xb0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xacb4, gbc.sp());
        EXPECT(0xb029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb692));
        EXPECT(0x29, gbc.readMem(0xb693));
        EXPECT(0xb0, gbc.readMem(0xb694));
        // DA 02A9
        gbc.setState(0x532, 0xfee0, 0xf620, 0xcd72, 0x9c17, 0x2e8b, 0x1, 0x0);
        gbc.writeMem(0x532, { 0xda, 0xd0, 0x71 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfee0, gbc.sp());
        EXPECT(0x535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02AA
        gbc.setState(0x325c, 0xfd39, 0x1db0, 0xb149, 0x4553, 0xa946, 0x1, 0x1);
        gbc.writeMem(0x325c, { 0xda, 0x12, 0x7c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfd39, gbc.sp());
        EXPECT(0x7c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02AB
        gbc.setState(0x9172, 0x319f, 0x8e10, 0xdc06, 0x7396, 0x88cf, 0x1, 0x0);
        gbc.writeMem(0x9172, { 0xda, 0x32, 0xa4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x319f, gbc.sp());
        EXPECT(0xa432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9172));
        EXPECT(0x32, gbc.readMem(0x9173));
        EXPECT(0xa4, gbc.readMem(0x9174));
        // DA 02AC
        gbc.setState(0x3a90, 0x9448, 0x9710, 0xc0b0, 0x88e0, 0xcab, 0x0, 0x1);
        gbc.writeMem(0x3a90, { 0xda, 0xda, 0xcd });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9448, gbc.sp());
        EXPECT(0xcdda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02AD
        gbc.setState(0x8952, 0x97a, 0xb050, 0x53e6, 0xc058, 0x458e, 0x0, 0x0);
        gbc.writeMem(0x8952, { 0xda, 0x3e, 0xf9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x97a, gbc.sp());
        EXPECT(0xf93e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8952));
        EXPECT(0x3e, gbc.readMem(0x8953));
        EXPECT(0xf9, gbc.readMem(0x8954));
        // DA 02AE
        gbc.setState(0x5d2e, 0x2430, 0x7b40, 0x7c75, 0x983a, 0x366b, 0x0, 0x1);
        gbc.writeMem(0x5d2e, { 0xda, 0xc7, 0x99 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2430, gbc.sp());
        EXPECT(0x5d31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02AF
        gbc.setState(0xc7c5, 0x392b, 0x1a00, 0xf54a, 0x94f, 0x8aa5, 0x1, 0x1);
        gbc.writeMem(0xc7c5, { 0xda, 0x77, 0xd1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x392b, gbc.sp());
        EXPECT(0xc7c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc7c5));
        EXPECT(0x77, gbc.readMem(0xc7c6));
        EXPECT(0xd1, gbc.readMem(0xc7c7));
        // DA 02B0
        gbc.setState(0x55c7, 0xe668, 0x1250, 0xb, 0xafe6, 0xf447, 0x1, 0x1);
        gbc.writeMem(0x55c7, { 0xda, 0x68, 0xd1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe668, gbc.sp());
        EXPECT(0xd168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02B1
        gbc.setState(0xe604, 0xe3ce, 0x7ab0, 0xd312, 0x3a09, 0xe6fc, 0x0, 0x0);
        gbc.writeMem(0xe604, { 0xda, 0x79, 0xb0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe3ce, gbc.sp());
        EXPECT(0xb079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe604));
        EXPECT(0x79, gbc.readMem(0xe605));
        EXPECT(0xb0, gbc.readMem(0xe606));
        // DA 02B2
        gbc.setState(0x9897, 0xbdf8, 0xd720, 0x2053, 0xb4e1, 0x7d2d, 0x0, 0x0);
        gbc.writeMem(0x9897, { 0xda, 0xb3, 0x17 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbdf8, gbc.sp());
        EXPECT(0x989a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9897));
        EXPECT(0xb3, gbc.readMem(0x9898));
        EXPECT(0x17, gbc.readMem(0x9899));
        // DA 02B3
        gbc.setState(0x30f8, 0xab9c, 0x2e50, 0xcd45, 0x5d04, 0x3dfa, 0x0, 0x1);
        gbc.writeMem(0x30f8, { 0xda, 0x1e, 0x77 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xab9c, gbc.sp());
        EXPECT(0x771e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02B4
        gbc.setState(0x36ef, 0xd046, 0x7c60, 0x82af, 0xfdca, 0x11dc, 0x1, 0x1);
        gbc.writeMem(0x36ef, { 0xda, 0xc9, 0xc6 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd046, gbc.sp());
        EXPECT(0x36f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02B5
        gbc.setState(0xcc9, 0x18e, 0x1680, 0xa57b, 0x445, 0x8b1f, 0x1, 0x0);
        gbc.writeMem(0xcc9, { 0xda, 0x8e, 0x2f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x18e, gbc.sp());
        EXPECT(0xccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02B6
        gbc.setState(0xd685, 0xf79e, 0x4c60, 0xfb5a, 0x8d15, 0x8314, 0x0, 0x0);
        gbc.writeMem(0xd685, { 0xda, 0x2c, 0x14 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf79e, gbc.sp());
        EXPECT(0xd688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd685));
        EXPECT(0x2c, gbc.readMem(0xd686));
        EXPECT(0x14, gbc.readMem(0xd687));
        // DA 02B7
        gbc.setState(0x920a, 0xf8a6, 0xd700, 0x87a7, 0xdc7c, 0x3536, 0x1, 0x1);
        gbc.writeMem(0x920a, { 0xda, 0xb4, 0x20 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf8a6, gbc.sp());
        EXPECT(0x920d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x920a));
        EXPECT(0xb4, gbc.readMem(0x920b));
        EXPECT(0x20, gbc.readMem(0x920c));
        // DA 02B8
        gbc.setState(0xbe13, 0x3e4c, 0xee30, 0xe928, 0xfd75, 0xb36e, 0x0, 0x1);
        gbc.writeMem(0xbe13, { 0xda, 0xb2, 0x23 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3e4c, gbc.sp());
        EXPECT(0x23b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbe13));
        EXPECT(0xb2, gbc.readMem(0xbe14));
        EXPECT(0x23, gbc.readMem(0xbe15));
        // DA 02B9
        gbc.setState(0x4a2b, 0x248a, 0x6ab0, 0x182d, 0xff22, 0xbaa0, 0x0, 0x0);
        gbc.writeMem(0x4a2b, { 0xda, 0x69, 0xf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x248a, gbc.sp());
        EXPECT(0xf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02BA
        gbc.setState(0x5d2e, 0x2007, 0xeca0, 0xca96, 0x410d, 0x827b, 0x1, 0x1);
        gbc.writeMem(0x5d2e, { 0xda, 0xc7, 0x99 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2007, gbc.sp());
        EXPECT(0x5d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02BB
        gbc.setState(0xa98a, 0xafd2, 0x5930, 0x24cd, 0x97fa, 0x3198, 0x1, 0x1);
        gbc.writeMem(0xa98a, { 0xda, 0x59, 0x54 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xafd2, gbc.sp());
        EXPECT(0x5459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa98a));
        EXPECT(0x59, gbc.readMem(0xa98b));
        EXPECT(0x54, gbc.readMem(0xa98c));
        // DA 02BC
        gbc.setState(0x5d01, 0x690a, 0xc800, 0x2e3b, 0x1f9f, 0x655d, 0x0, 0x0);
        gbc.writeMem(0x5d01, { 0xda, 0x4c, 0x41 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x690a, gbc.sp());
        EXPECT(0x5d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02BD
        gbc.setState(0xa867, 0xb062, 0x7bf0, 0xe479, 0x73bd, 0xdcff, 0x1, 0x1);
        gbc.writeMem(0xa867, { 0xda, 0x8d, 0x78 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb062, gbc.sp());
        EXPECT(0x788d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa867));
        EXPECT(0x8d, gbc.readMem(0xa868));
        EXPECT(0x78, gbc.readMem(0xa869));
        // DA 02BE
        gbc.setState(0x52c3, 0x9a87, 0x1640, 0xf576, 0xc9d9, 0xf7f3, 0x0, 0x0);
        gbc.writeMem(0x52c3, { 0xda, 0xc6, 0x6a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9a87, gbc.sp());
        EXPECT(0x52c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02BF
        gbc.setState(0xaea3, 0x9e95, 0xc240, 0xe89a, 0x5814, 0x8565, 0x1, 0x1);
        gbc.writeMem(0xaea3, { 0xda, 0xb5, 0x91 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9e95, gbc.sp());
        EXPECT(0xaea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaea3));
        EXPECT(0xb5, gbc.readMem(0xaea4));
        EXPECT(0x91, gbc.readMem(0xaea5));
        // DA 02C0
        gbc.setState(0xd412, 0xeeb3, 0xa710, 0x49f6, 0x72e0, 0xdbff, 0x1, 0x1);
        gbc.writeMem(0xd412, { 0xda, 0x52, 0x1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xeeb3, gbc.sp());
        EXPECT(0x152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd412));
        EXPECT(0x52, gbc.readMem(0xd413));
        EXPECT(0x1, gbc.readMem(0xd414));
        // DA 02C1
        gbc.setState(0x4295, 0xb70b, 0x73c0, 0x947b, 0xc817, 0xab24, 0x1, 0x0);
        gbc.writeMem(0x4295, { 0xda, 0xf, 0xb2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb70b, gbc.sp());
        EXPECT(0x4298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02C2
        gbc.setState(0x91d8, 0xf00, 0x2b30, 0x24c4, 0xf770, 0xf7a8, 0x1, 0x0);
        gbc.writeMem(0x91d8, { 0xda, 0x17, 0xdb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf00, gbc.sp());
        EXPECT(0xdb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x91d8));
        EXPECT(0x17, gbc.readMem(0x91d9));
        EXPECT(0xdb, gbc.readMem(0x91da));
        // DA 02C3
        gbc.setState(0xe309, 0x6876, 0xfca0, 0xa474, 0x669, 0xb78c, 0x1, 0x1);
        gbc.writeMem(0xe309, { 0xda, 0x97, 0xcc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6876, gbc.sp());
        EXPECT(0xe30c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe309));
        EXPECT(0x97, gbc.readMem(0xe30a));
        EXPECT(0xcc, gbc.readMem(0xe30b));
        // DA 02C4
        gbc.setState(0x6fc, 0xc0f4, 0xeab0, 0x1b04, 0xe3c9, 0xa458, 0x0, 0x1);
        gbc.writeMem(0x6fc, { 0xda, 0x14, 0x67 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc0f4, gbc.sp());
        EXPECT(0x6714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02C5
        gbc.setState(0x9c8, 0xb038, 0x8f10, 0x9159, 0x3811, 0x13ff, 0x1, 0x1);
        gbc.writeMem(0x9c8, { 0xda, 0x27, 0xff });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb038, gbc.sp());
        EXPECT(0xff27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02C6
        gbc.setState(0xa60b, 0x3660, 0x8150, 0x4ee7, 0x8fe4, 0x837c, 0x0, 0x1);
        gbc.writeMem(0xa60b, { 0xda, 0x9a, 0xf7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3660, gbc.sp());
        EXPECT(0xf79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa60b));
        EXPECT(0x9a, gbc.readMem(0xa60c));
        EXPECT(0xf7, gbc.readMem(0xa60d));
        // DA 02C7
        gbc.setState(0x3470, 0xe7a5, 0x9ee0, 0x8496, 0xf5a8, 0xdb5f, 0x0, 0x0);
        gbc.writeMem(0x3470, { 0xda, 0x88, 0x64 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe7a5, gbc.sp());
        EXPECT(0x3473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02C8
        gbc.setState(0xe66f, 0xf14, 0xb130, 0x9cf1, 0xf584, 0x22cb, 0x0, 0x0);
        gbc.writeMem(0xe66f, { 0xda, 0x49, 0x4d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf14, gbc.sp());
        EXPECT(0x4d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe66f));
        EXPECT(0x49, gbc.readMem(0xe670));
        EXPECT(0x4d, gbc.readMem(0xe671));
        // DA 02C9
        gbc.setState(0x2e90, 0x4e34, 0xeb0, 0x97cf, 0x6420, 0x551, 0x1, 0x1);
        gbc.writeMem(0x2e90, { 0xda, 0xc3, 0x32 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4e34, gbc.sp());
        EXPECT(0x32c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02CA
        gbc.setState(0x8e0f, 0xe8a9, 0x4060, 0x595b, 0xaa64, 0xa402, 0x1, 0x1);
        gbc.writeMem(0x8e0f, { 0xda, 0xd6, 0x53 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe8a9, gbc.sp());
        EXPECT(0x8e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8e0f));
        EXPECT(0xd6, gbc.readMem(0x8e10));
        EXPECT(0x53, gbc.readMem(0x8e11));
        // DA 02CC
        gbc.setState(0xb593, 0x2bd6, 0x26c0, 0x3ec5, 0x378f, 0x6d19, 0x0, 0x0);
        gbc.writeMem(0xb593, { 0xda, 0xdb, 0xcf });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2bd6, gbc.sp());
        EXPECT(0xb596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb593));
        EXPECT(0xdb, gbc.readMem(0xb594));
        EXPECT(0xcf, gbc.readMem(0xb595));
        // DA 02CD
        gbc.setState(0x372a, 0x7db5, 0x67e0, 0x77ea, 0xca9, 0xdb83, 0x0, 0x1);
        gbc.writeMem(0x372a, { 0xda, 0xe6, 0x5c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7db5, gbc.sp());
        EXPECT(0x372d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02CE
        gbc.setState(0x3ef1, 0x692e, 0xb470, 0xa0f5, 0xd76c, 0xbca5, 0x0, 0x1);
        gbc.writeMem(0x3ef1, { 0xda, 0xfe, 0xa6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x692e, gbc.sp());
        EXPECT(0xa6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02CF
        gbc.setState(0x1ee2, 0xef9f, 0x6a20, 0xf44b, 0x8ae6, 0x8ab8, 0x1, 0x1);
        gbc.writeMem(0x1ee2, { 0xda, 0x9c, 0xde });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xef9f, gbc.sp());
        EXPECT(0x1ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02D0
        gbc.setState(0x86ed, 0x288f, 0x86e0, 0xa0d0, 0xd676, 0x929c, 0x0, 0x1);
        gbc.writeMem(0x86ed, { 0xda, 0x59, 0x89 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x288f, gbc.sp());
        EXPECT(0x86f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x86ed));
        EXPECT(0x59, gbc.readMem(0x86ee));
        EXPECT(0x89, gbc.readMem(0x86ef));
        // DA 02D1
        gbc.setState(0xc499, 0xcacf, 0xc2e0, 0x8d00, 0xa11e, 0x72be, 0x0, 0x0);
        gbc.writeMem(0xc499, { 0xda, 0xb5, 0xaf });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcacf, gbc.sp());
        EXPECT(0xc49c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc499));
        EXPECT(0xb5, gbc.readMem(0xc49a));
        EXPECT(0xaf, gbc.readMem(0xc49b));
        // DA 02D2
        gbc.setState(0x7d47, 0x4d43, 0x8f0, 0x25b0, 0x79f9, 0xa1f3, 0x0, 0x0);
        gbc.writeMem(0x7d47, { 0xda, 0xca, 0x3c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4d43, gbc.sp());
        EXPECT(0x3cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02D3
        gbc.setState(0xb0cd, 0x771d, 0xa4c0, 0x6de6, 0x3ff1, 0xfae3, 0x1, 0x0);
        gbc.writeMem(0xb0cd, { 0xda, 0xf5, 0xd7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x771d, gbc.sp());
        EXPECT(0xb0d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb0cd));
        EXPECT(0xf5, gbc.readMem(0xb0ce));
        EXPECT(0xd7, gbc.readMem(0xb0cf));
        // DA 02D4
        gbc.setState(0x616e, 0x8de6, 0xad20, 0x816a, 0xcecf, 0xd693, 0x1, 0x0);
        gbc.writeMem(0x616e, { 0xda, 0x24, 0x85 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8de6, gbc.sp());
        EXPECT(0x6171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02D5
        gbc.setState(0x22f3, 0xdce9, 0xf4b0, 0x8f5f, 0x54d0, 0x4cf6, 0x1, 0x0);
        gbc.writeMem(0x22f3, { 0xda, 0x6a, 0xaa });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdce9, gbc.sp());
        EXPECT(0xaa6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02D6
        gbc.setState(0x86b8, 0x3ce4, 0x4580, 0x8a90, 0xa631, 0xcfed, 0x0, 0x1);
        gbc.writeMem(0x86b8, { 0xda, 0x65, 0xf4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3ce4, gbc.sp());
        EXPECT(0x86bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x86b8));
        EXPECT(0x65, gbc.readMem(0x86b9));
        EXPECT(0xf4, gbc.readMem(0x86ba));
        // DA 02D7
        gbc.setState(0xa46f, 0x2e1b, 0xc40, 0xb687, 0x89c1, 0xf708, 0x0, 0x0);
        gbc.writeMem(0xa46f, { 0xda, 0xdc, 0x21 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2e1b, gbc.sp());
        EXPECT(0xa472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa46f));
        EXPECT(0xdc, gbc.readMem(0xa470));
        EXPECT(0x21, gbc.readMem(0xa471));
        // DA 02D8
        gbc.setState(0xcccb, 0x3ae9, 0xfda0, 0x80de, 0x43cb, 0x14c5, 0x1, 0x0);
        gbc.writeMem(0xcccb, { 0xda, 0x94, 0x27 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3ae9, gbc.sp());
        EXPECT(0xccce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcccb));
        EXPECT(0x94, gbc.readMem(0xcccc));
        EXPECT(0x27, gbc.readMem(0xcccd));
        // DA 02D9
        gbc.setState(0x2c25, 0xce55, 0xb6d0, 0x9015, 0xf441, 0x3986, 0x1, 0x0);
        gbc.writeMem(0x2c25, { 0xda, 0x5a, 0xc7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xce55, gbc.sp());
        EXPECT(0xc75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02DA
        gbc.setState(0x4534, 0x4f2d, 0xc540, 0xd103, 0xd4e5, 0xf96b, 0x0, 0x1);
        gbc.writeMem(0x4534, { 0xda, 0x5b, 0xc8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4f2d, gbc.sp());
        EXPECT(0x4537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02DB
        gbc.setState(0x3507, 0x6ba4, 0xd40, 0x1330, 0xd59e, 0x385a, 0x0, 0x0);
        gbc.writeMem(0x3507, { 0xda, 0x6e, 0xb2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6ba4, gbc.sp());
        EXPECT(0x350a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02DC
        gbc.setState(0x87ae, 0x35b1, 0x9a30, 0x151, 0xe7fb, 0x886e, 0x0, 0x1);
        gbc.writeMem(0x87ae, { 0xda, 0x84, 0xa5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x35b1, gbc.sp());
        EXPECT(0xa584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x87ae));
        EXPECT(0x84, gbc.readMem(0x87af));
        EXPECT(0xa5, gbc.readMem(0x87b0));
        // DA 02DD
        gbc.setState(0x10bb, 0x5f5f, 0x750, 0xce0e, 0x1876, 0xc485, 0x1, 0x0);
        gbc.writeMem(0x10bb, { 0xda, 0x4b, 0x94 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5f5f, gbc.sp());
        EXPECT(0x944b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02DE
        gbc.setState(0x1a9d, 0x3bf4, 0x42f0, 0x4c7c, 0xf4ca, 0x3f8a, 0x0, 0x1);
        gbc.writeMem(0x1a9d, { 0xda, 0x2c, 0x13 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3bf4, gbc.sp());
        EXPECT(0x132c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02DF
        gbc.setState(0x4386, 0x2bb3, 0x1b40, 0xad37, 0xcd92, 0x455b, 0x1, 0x1);
        gbc.writeMem(0x4386, { 0xda, 0x4, 0xf7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2bb3, gbc.sp());
        EXPECT(0x4389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02E0
        gbc.setState(0xa782, 0xc041, 0x39b0, 0x1416, 0x371c, 0x96e3, 0x0, 0x0);
        gbc.writeMem(0xa782, { 0xda, 0xd6, 0x81 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc041, gbc.sp());
        EXPECT(0x81d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa782));
        EXPECT(0xd6, gbc.readMem(0xa783));
        EXPECT(0x81, gbc.readMem(0xa784));
        // DA 02E1
        gbc.setState(0x4b90, 0x9374, 0x4f30, 0x4e06, 0x2cf2, 0xa902, 0x1, 0x1);
        gbc.writeMem(0x4b90, { 0xda, 0x78, 0x19 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9374, gbc.sp());
        EXPECT(0x1978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02E2
        gbc.setState(0x11ce, 0x60ae, 0xf470, 0x792a, 0x2ab8, 0xb295, 0x1, 0x1);
        gbc.writeMem(0x11ce, { 0xda, 0xb7, 0x58 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x60ae, gbc.sp());
        EXPECT(0x58b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02E3
        gbc.setState(0x5f1e, 0x77b, 0x2f00, 0x4bea, 0xb04c, 0xa3c1, 0x0, 0x1);
        gbc.writeMem(0x5f1e, { 0xda, 0x5b, 0x73 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x77b, gbc.sp());
        EXPECT(0x5f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02E4
        gbc.setState(0x4644, 0xa51c, 0x8500, 0x70ed, 0x83ad, 0x9f5e, 0x1, 0x0);
        gbc.writeMem(0x4644, { 0xda, 0xad, 0xce });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa51c, gbc.sp());
        EXPECT(0x4647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02E5
        gbc.setState(0xcc42, 0xd110, 0x8310, 0x2320, 0x301, 0xed44, 0x1, 0x0);
        gbc.writeMem(0xcc42, { 0xda, 0x7b, 0xe6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd110, gbc.sp());
        EXPECT(0xe67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcc42));
        EXPECT(0x7b, gbc.readMem(0xcc43));
        EXPECT(0xe6, gbc.readMem(0xcc44));
        // DA 02E7
        gbc.setState(0x7208, 0xcb8a, 0xecd0, 0x6319, 0xd09b, 0xdbab, 0x0, 0x1);
        gbc.writeMem(0x7208, { 0xda, 0x11, 0xf9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcb8a, gbc.sp());
        EXPECT(0xf911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02E8
        gbc.setState(0x6c04, 0xb0b7, 0x7cc0, 0xf469, 0x7f1f, 0x2ca7, 0x1, 0x0);
        gbc.writeMem(0x6c04, { 0xda, 0x49, 0xcc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb0b7, gbc.sp());
        EXPECT(0x6c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02E9
        gbc.setState(0x64cf, 0xee44, 0x930, 0x6ad3, 0x8a55, 0xcc81, 0x1, 0x0);
        gbc.writeMem(0x64cf, { 0xda, 0x34, 0xc1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xee44, gbc.sp());
        EXPECT(0xc134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02EA
        gbc.setState(0x504b, 0x3ffd, 0x7e20, 0xa97a, 0xe6f2, 0xe4c3, 0x1, 0x1);
        gbc.writeMem(0x504b, { 0xda, 0xec, 0xd2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3ffd, gbc.sp());
        EXPECT(0x504e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02EB
        gbc.setState(0xee7c, 0x1c1d, 0xb330, 0x8a03, 0xf217, 0x3d4f, 0x1, 0x0);
        gbc.writeMem(0xee7c, { 0xda, 0x8d, 0x1b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1c1d, gbc.sp());
        EXPECT(0x1b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xee7c));
        EXPECT(0x8d, gbc.readMem(0xee7d));
        EXPECT(0x1b, gbc.readMem(0xee7e));
        // DA 02EC
        gbc.setState(0x7f4c, 0x51c7, 0xaa00, 0x84e3, 0x9bb8, 0xc9a9, 0x1, 0x1);
        gbc.writeMem(0x7f4c, { 0xda, 0x55, 0x97 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x51c7, gbc.sp());
        EXPECT(0x7f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02ED
        gbc.setState(0x9892, 0x16cc, 0x7c00, 0xb302, 0x6cbb, 0xdd8, 0x1, 0x1);
        gbc.writeMem(0x9892, { 0xda, 0x69, 0x74 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x16cc, gbc.sp());
        EXPECT(0x9895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9892));
        EXPECT(0x69, gbc.readMem(0x9893));
        EXPECT(0x74, gbc.readMem(0x9894));
        // DA 02EE
        gbc.setState(0xaa6a, 0x13cc, 0x7320, 0x5445, 0xdef5, 0x33c8, 0x1, 0x1);
        gbc.writeMem(0xaa6a, { 0xda, 0xac, 0x48 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x13cc, gbc.sp());
        EXPECT(0xaa6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaa6a));
        EXPECT(0xac, gbc.readMem(0xaa6b));
        EXPECT(0x48, gbc.readMem(0xaa6c));
        // DA 02EF
        gbc.setState(0x37cb, 0x57f5, 0x7be0, 0xb9b0, 0x9b90, 0x464a, 0x0, 0x1);
        gbc.writeMem(0x37cb, { 0xda, 0x7e, 0x8e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x57f5, gbc.sp());
        EXPECT(0x37ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02F0
        gbc.setState(0x3a3c, 0x287c, 0xf3c0, 0x6191, 0xa7d7, 0xcedb, 0x1, 0x0);
        gbc.writeMem(0x3a3c, { 0xda, 0xc9, 0xec });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x287c, gbc.sp());
        EXPECT(0x3a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02F1
        gbc.setState(0xd415, 0xd6da, 0xd0, 0x75ab, 0x9ab6, 0x3dc2, 0x0, 0x1);
        gbc.writeMem(0xd415, { 0xda, 0x5a, 0xa });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd6da, gbc.sp());
        EXPECT(0xa5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd415));
        EXPECT(0x5a, gbc.readMem(0xd416));
        EXPECT(0xa, gbc.readMem(0xd417));
        // DA 02F2
        gbc.setState(0xa804, 0x4516, 0x1450, 0x2a42, 0xdb18, 0xeff5, 0x1, 0x0);
        gbc.writeMem(0xa804, { 0xda, 0x1e, 0x9a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4516, gbc.sp());
        EXPECT(0x9a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa804));
        EXPECT(0x1e, gbc.readMem(0xa805));
        EXPECT(0x9a, gbc.readMem(0xa806));
        // DA 02F3
        gbc.setState(0x8c13, 0x5c77, 0xa9d0, 0xff1b, 0x60da, 0xa22f, 0x1, 0x1);
        gbc.writeMem(0x8c13, { 0xda, 0x3a, 0x14 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5c77, gbc.sp());
        EXPECT(0x143a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8c13));
        EXPECT(0x3a, gbc.readMem(0x8c14));
        EXPECT(0x14, gbc.readMem(0x8c15));
        // DA 02F4
        gbc.setState(0x32f2, 0x2c29, 0x84f0, 0xb02b, 0x3f04, 0x737f, 0x1, 0x1);
        gbc.writeMem(0x32f2, { 0xda, 0x52, 0xc4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2c29, gbc.sp());
        EXPECT(0xc452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02F5
        gbc.setState(0x2c6, 0xbf5a, 0x9af0, 0xa7b6, 0xcb54, 0x5561, 0x1, 0x1);
        gbc.writeMem(0x2c6, { 0xda, 0x6b, 0xcd });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbf5a, gbc.sp());
        EXPECT(0xcd6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02F6
        gbc.setState(0x5f9, 0x999, 0xa820, 0x54a3, 0x9e37, 0x7dc0, 0x1, 0x0);
        gbc.writeMem(0x5f9, { 0xda, 0x9d, 0x30 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x999, gbc.sp());
        EXPECT(0x5fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02F7
        gbc.setState(0x3233, 0xfe6b, 0xe8a0, 0xb38, 0x399a, 0xd63a, 0x1, 0x0);
        gbc.writeMem(0x3233, { 0xda, 0x3d, 0xfb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfe6b, gbc.sp());
        EXPECT(0x3236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02F8
        gbc.setState(0x5040, 0x860b, 0xd7f0, 0xa3ee, 0x719b, 0xd2ab, 0x0, 0x0);
        gbc.writeMem(0x5040, { 0xda, 0xbe, 0xfe });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x860b, gbc.sp());
        EXPECT(0xfebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02F9
        gbc.setState(0x7871, 0x2d10, 0x3910, 0xb203, 0xedfa, 0x8fe1, 0x1, 0x1);
        gbc.writeMem(0x7871, { 0xda, 0x7c, 0xc9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2d10, gbc.sp());
        EXPECT(0xc97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02FA
        gbc.setState(0x5e2f, 0xb9f6, 0x2a20, 0x92dd, 0xc48a, 0x21b2, 0x0, 0x0);
        gbc.writeMem(0x5e2f, { 0xda, 0xc1, 0xec });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb9f6, gbc.sp());
        EXPECT(0x5e32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02FB
        gbc.setState(0xddc2, 0x4def, 0x57f0, 0x5cf7, 0x36d5, 0xa409, 0x1, 0x0);
        gbc.writeMem(0xddc2, { 0xda, 0x3f, 0xb4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4def, gbc.sp());
        EXPECT(0xb43f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xddc2));
        EXPECT(0x3f, gbc.readMem(0xddc3));
        EXPECT(0xb4, gbc.readMem(0xddc4));
        // DA 02FC
        gbc.setState(0x68e1, 0xe8d1, 0x28e0, 0x548, 0x2077, 0x7e5f, 0x1, 0x1);
        gbc.writeMem(0x68e1, { 0xda, 0x8e, 0x7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe8d1, gbc.sp());
        EXPECT(0x68e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 02FD
        gbc.setState(0xba8f, 0xb7da, 0xb0, 0x1834, 0xb66c, 0x9771, 0x0, 0x1);
        gbc.writeMem(0xba8f, { 0xda, 0xf0, 0x16 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb7da, gbc.sp());
        EXPECT(0x16f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xba8f));
        EXPECT(0xf0, gbc.readMem(0xba90));
        EXPECT(0x16, gbc.readMem(0xba91));
        // DA 02FE
        gbc.setState(0x702a, 0x2867, 0x9d10, 0x8c7, 0xf4c5, 0x937f, 0x0, 0x1);
        gbc.writeMem(0x702a, { 0xda, 0x4c, 0x46 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2867, gbc.sp());
        EXPECT(0x464c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 02FF
        gbc.setState(0x4613, 0xe6e, 0x42a0, 0x5c61, 0x67d7, 0x82c7, 0x1, 0x0);
        gbc.writeMem(0x4613, { 0xda, 0x0, 0x33 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe6e, gbc.sp());
        EXPECT(0x4616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0300
        gbc.setState(0xc6d4, 0xaea2, 0xc110, 0xced3, 0xfb79, 0xb4ab, 0x0, 0x0);
        gbc.writeMem(0xc6d4, { 0xda, 0xed, 0x62 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xaea2, gbc.sp());
        EXPECT(0x62ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc6d4));
        EXPECT(0xed, gbc.readMem(0xc6d5));
        EXPECT(0x62, gbc.readMem(0xc6d6));
        // DA 0301
        gbc.setState(0x93cf, 0x1bdf, 0x75e0, 0x1fce, 0x1ce8, 0x797b, 0x1, 0x0);
        gbc.writeMem(0x93cf, { 0xda, 0x81, 0xe4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1bdf, gbc.sp());
        EXPECT(0x93d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x93cf));
        EXPECT(0x81, gbc.readMem(0x93d0));
        EXPECT(0xe4, gbc.readMem(0x93d1));
        // DA 0302
        gbc.setState(0x44dd, 0xa3b5, 0x74c0, 0xac28, 0x20db, 0xd094, 0x1, 0x0);
        gbc.writeMem(0x44dd, { 0xda, 0x91, 0x69 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa3b5, gbc.sp());
        EXPECT(0x44e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0303
        gbc.setState(0xdb5e, 0x5cad, 0x8510, 0xe0be, 0x65af, 0xbb7b, 0x1, 0x1);
        gbc.writeMem(0xdb5e, { 0xda, 0xea, 0xde });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5cad, gbc.sp());
        EXPECT(0xdeea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdb5e));
        EXPECT(0xea, gbc.readMem(0xdb5f));
        EXPECT(0xde, gbc.readMem(0xdb60));
        // DA 0304
        gbc.setState(0xb468, 0xca86, 0x8a10, 0xf75a, 0xe6ae, 0x8dfb, 0x1, 0x1);
        gbc.writeMem(0xb468, { 0xda, 0xfc, 0x1f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xca86, gbc.sp());
        EXPECT(0x1ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb468));
        EXPECT(0xfc, gbc.readMem(0xb469));
        EXPECT(0x1f, gbc.readMem(0xb46a));
        // DA 0305
        gbc.setState(0x935c, 0x51c1, 0x29e0, 0xdd43, 0xea65, 0x839f, 0x1, 0x0);
        gbc.writeMem(0x935c, { 0xda, 0xa7, 0x6e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x51c1, gbc.sp());
        EXPECT(0x935f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x935c));
        EXPECT(0xa7, gbc.readMem(0x935d));
        EXPECT(0x6e, gbc.readMem(0x935e));
        // DA 0306
        gbc.setState(0x86d6, 0x2e23, 0x9ae0, 0xe13e, 0x57b8, 0x6005, 0x0, 0x1);
        gbc.writeMem(0x86d6, { 0xda, 0xfe, 0x9b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2e23, gbc.sp());
        EXPECT(0x86d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x86d6));
        EXPECT(0xfe, gbc.readMem(0x86d7));
        EXPECT(0x9b, gbc.readMem(0x86d8));
        // DA 0307
        gbc.setState(0x3fe5, 0x7c8a, 0xd840, 0xf107, 0x21ad, 0x80de, 0x0, 0x1);
        gbc.writeMem(0x3fe5, { 0xda, 0x84, 0x18 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7c8a, gbc.sp());
        EXPECT(0x3fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0308
        gbc.setState(0xad59, 0xce7a, 0x7660, 0x644a, 0x3ac3, 0x190c, 0x1, 0x0);
        gbc.writeMem(0xad59, { 0xda, 0x6f, 0xdb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xce7a, gbc.sp());
        EXPECT(0xad5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xad59));
        EXPECT(0x6f, gbc.readMem(0xad5a));
        EXPECT(0xdb, gbc.readMem(0xad5b));
        // DA 0309
        gbc.setState(0x6213, 0x8551, 0xf950, 0x5290, 0xe665, 0x86f1, 0x0, 0x0);
        gbc.writeMem(0x6213, { 0xda, 0x5e, 0x29 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8551, gbc.sp());
        EXPECT(0x295e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 030A
        gbc.setState(0xa9b6, 0xd7e7, 0xcd30, 0x2afe, 0x3768, 0xdc41, 0x1, 0x0);
        gbc.writeMem(0xa9b6, { 0xda, 0xdf, 0xba });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd7e7, gbc.sp());
        EXPECT(0xbadf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa9b6));
        EXPECT(0xdf, gbc.readMem(0xa9b7));
        EXPECT(0xba, gbc.readMem(0xa9b8));
        // DA 030B
        gbc.setState(0x634a, 0x7de, 0x8210, 0x48b6, 0x6876, 0x1453, 0x0, 0x1);
        gbc.writeMem(0x634a, { 0xda, 0x41, 0x46 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7de, gbc.sp());
        EXPECT(0x4641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 030C
        gbc.setState(0xd6e4, 0xffb, 0x3400, 0x4403, 0xcb5a, 0x5d9d, 0x1, 0x1);
        gbc.writeMem(0xd6e4, { 0xda, 0xca, 0x23 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xffb, gbc.sp());
        EXPECT(0xd6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd6e4));
        EXPECT(0xca, gbc.readMem(0xd6e5));
        EXPECT(0x23, gbc.readMem(0xd6e6));
        // DA 030D
        gbc.setState(0xea6b, 0x27f2, 0xa4d0, 0xee53, 0x2c2a, 0x4f38, 0x1, 0x0);
        gbc.writeMem(0xea6b, { 0xda, 0x63, 0x4a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x27f2, gbc.sp());
        EXPECT(0x4a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xea6b));
        EXPECT(0x63, gbc.readMem(0xea6c));
        EXPECT(0x4a, gbc.readMem(0xea6d));
        // DA 030E
        gbc.setState(0x2ca5, 0x1fb1, 0x10, 0xf3b8, 0x2219, 0xbebe, 0x1, 0x1);
        gbc.writeMem(0x2ca5, { 0xda, 0x8d, 0x8b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1fb1, gbc.sp());
        EXPECT(0x8b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 030F
        gbc.setState(0x7dfb, 0x39e9, 0xd4d0, 0x9dcc, 0x358b, 0xfc13, 0x1, 0x0);
        gbc.writeMem(0x7dfb, { 0xda, 0x6, 0x91 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x39e9, gbc.sp());
        EXPECT(0x9106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0310
        gbc.setState(0xda09, 0x8002, 0xe530, 0xb013, 0x382, 0xb0bb, 0x0, 0x1);
        gbc.writeMem(0xda09, { 0xda, 0xbb, 0x38 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8002, gbc.sp());
        EXPECT(0x38bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xda09));
        EXPECT(0xbb, gbc.readMem(0xda0a));
        EXPECT(0x38, gbc.readMem(0xda0b));
        // DA 0311
        gbc.setState(0xd7cd, 0x2587, 0x48e0, 0x6427, 0xbf98, 0x97d3, 0x1, 0x1);
        gbc.writeMem(0xd7cd, { 0xda, 0x79, 0x24 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2587, gbc.sp());
        EXPECT(0xd7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd7cd));
        EXPECT(0x79, gbc.readMem(0xd7ce));
        EXPECT(0x24, gbc.readMem(0xd7cf));
        // DA 0312
        gbc.setState(0xc855, 0xdc31, 0x5ed0, 0x9045, 0x1557, 0x2044, 0x0, 0x1);
        gbc.writeMem(0xc855, { 0xda, 0xe2, 0x86 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdc31, gbc.sp());
        EXPECT(0x86e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc855));
        EXPECT(0xe2, gbc.readMem(0xc856));
        EXPECT(0x86, gbc.readMem(0xc857));
        // DA 0313
        gbc.setState(0xedc5, 0xc87d, 0x7090, 0x196f, 0xfb3, 0xfbd0, 0x1, 0x1);
        gbc.writeMem(0xedc5, { 0xda, 0xab, 0x67 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc87d, gbc.sp());
        EXPECT(0x67ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xedc5));
        EXPECT(0xab, gbc.readMem(0xedc6));
        EXPECT(0x67, gbc.readMem(0xedc7));
        // DA 0314
        gbc.setState(0x397f, 0x7d09, 0x17b0, 0xa957, 0xb012, 0x6862, 0x0, 0x1);
        gbc.writeMem(0x397f, { 0xda, 0xe6, 0x46 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7d09, gbc.sp());
        EXPECT(0x46e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0315
        gbc.setState(0x4961, 0xef4, 0x9fc0, 0xf09d, 0x8b09, 0x4bd8, 0x1, 0x0);
        gbc.writeMem(0x4961, { 0xda, 0x35, 0x40 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xef4, gbc.sp());
        EXPECT(0x4964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0316
        gbc.setState(0x983e, 0x8612, 0xd250, 0xb1ec, 0x6601, 0x28dd, 0x1, 0x1);
        gbc.writeMem(0x983e, { 0xda, 0xbc, 0x52 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8612, gbc.sp());
        EXPECT(0x52bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x983e));
        EXPECT(0xbc, gbc.readMem(0x983f));
        EXPECT(0x52, gbc.readMem(0x9840));
        // DA 0317
        gbc.setState(0x3a35, 0x4092, 0xbb70, 0x58a6, 0xf24d, 0xa12c, 0x1, 0x1);
        gbc.writeMem(0x3a35, { 0xda, 0x8e, 0x1a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4092, gbc.sp());
        EXPECT(0x1a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0318
        gbc.setState(0x792c, 0x4940, 0x6320, 0xb223, 0x99ca, 0xdc7f, 0x1, 0x0);
        gbc.writeMem(0x792c, { 0xda, 0xce, 0xbe });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4940, gbc.sp());
        EXPECT(0x792f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0319
        gbc.setState(0x65c, 0x5a0c, 0xd710, 0xadfb, 0x9cf5, 0x7085, 0x0, 0x1);
        gbc.writeMem(0x65c, { 0xda, 0x1, 0x5c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5a0c, gbc.sp());
        EXPECT(0x5c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 031B
        gbc.setState(0x73a, 0xf079, 0xf3c0, 0x3acc, 0xbf94, 0xbd9a, 0x0, 0x0);
        gbc.writeMem(0x73a, { 0xda, 0x7a, 0x3d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf079, gbc.sp());
        EXPECT(0x73d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 031C
        gbc.setState(0x1779, 0xaade, 0x4510, 0xcd4f, 0x67d9, 0x3991, 0x0, 0x0);
        gbc.writeMem(0x1779, { 0xda, 0xe5, 0xe });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xaade, gbc.sp());
        EXPECT(0xee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 031D
        gbc.setState(0x41d5, 0x3ac5, 0xd970, 0x9a11, 0x2fef, 0x6dda, 0x1, 0x1);
        gbc.writeMem(0x41d5, { 0xda, 0x71, 0xd0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3ac5, gbc.sp());
        EXPECT(0xd071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 031E
        gbc.setState(0x9a46, 0x521b, 0x1880, 0x7615, 0x703a, 0xc9f1, 0x0, 0x1);
        gbc.writeMem(0x9a46, { 0xda, 0xb1, 0xa5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x521b, gbc.sp());
        EXPECT(0x9a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9a46));
        EXPECT(0xb1, gbc.readMem(0x9a47));
        EXPECT(0xa5, gbc.readMem(0x9a48));
        // DA 031F
        gbc.setState(0xe785, 0xcdbe, 0x9fa0, 0x9ed0, 0x6953, 0x8d8c, 0x0, 0x1);
        gbc.writeMem(0xe785, { 0xda, 0x30, 0x8e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcdbe, gbc.sp());
        EXPECT(0xe788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe785));
        EXPECT(0x30, gbc.readMem(0xe786));
        EXPECT(0x8e, gbc.readMem(0xe787));
        // DA 0320
        gbc.setState(0x9aca, 0x3907, 0x7d00, 0xb978, 0x3b04, 0x407a, 0x0, 0x0);
        gbc.writeMem(0x9aca, { 0xda, 0x5a, 0xf6 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3907, gbc.sp());
        EXPECT(0x9acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9aca));
        EXPECT(0x5a, gbc.readMem(0x9acb));
        EXPECT(0xf6, gbc.readMem(0x9acc));
        // DA 0321
        gbc.setState(0xe176, 0x5ba0, 0x2f80, 0xe91d, 0xac9f, 0xb128, 0x1, 0x1);
        gbc.writeMem(0xe176, { 0xda, 0x55, 0x34 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5ba0, gbc.sp());
        EXPECT(0xe179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe176));
        EXPECT(0x55, gbc.readMem(0xe177));
        EXPECT(0x34, gbc.readMem(0xe178));
        // DA 0322
        gbc.setState(0x7f54, 0xa45d, 0x6120, 0x5524, 0xe54e, 0xe404, 0x0, 0x1);
        gbc.writeMem(0x7f54, { 0xda, 0xe6, 0x56 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa45d, gbc.sp());
        EXPECT(0x7f57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0323
        gbc.setState(0x5bae, 0x3e17, 0x3f70, 0x1663, 0x9625, 0x3046, 0x0, 0x0);
        gbc.writeMem(0x5bae, { 0xda, 0x4c, 0xb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3e17, gbc.sp());
        EXPECT(0xb4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0324
        gbc.setState(0x951f, 0x611f, 0xa6e0, 0x11ca, 0xed77, 0x3b80, 0x0, 0x1);
        gbc.writeMem(0x951f, { 0xda, 0xfd, 0xef });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x611f, gbc.sp());
        EXPECT(0x9522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x951f));
        EXPECT(0xfd, gbc.readMem(0x9520));
        EXPECT(0xef, gbc.readMem(0x9521));
        // DA 0325
        gbc.setState(0x3ab, 0xeef7, 0xfda0, 0x7af5, 0x66ef, 0xee7d, 0x1, 0x0);
        gbc.writeMem(0x3ab, { 0xda, 0x7c, 0xbf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xeef7, gbc.sp());
        EXPECT(0x3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0326
        gbc.setState(0xc951, 0xec45, 0xb790, 0x868f, 0xd870, 0xefe8, 0x1, 0x1);
        gbc.writeMem(0xc951, { 0xda, 0x4c, 0x8e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xec45, gbc.sp());
        EXPECT(0x8e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc951));
        EXPECT(0x4c, gbc.readMem(0xc952));
        EXPECT(0x8e, gbc.readMem(0xc953));
        // DA 0327
        gbc.setState(0x8052, 0xa8e, 0x300, 0xe7bd, 0x1775, 0x2836, 0x0, 0x1);
        gbc.writeMem(0x8052, { 0xda, 0xe3, 0x57 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa8e, gbc.sp());
        EXPECT(0x8055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8052));
        EXPECT(0xe3, gbc.readMem(0x8053));
        EXPECT(0x57, gbc.readMem(0x8054));
        // DA 0328
        gbc.setState(0xc240, 0xd2fa, 0x5a0, 0x8095, 0x7941, 0xd860, 0x0, 0x0);
        gbc.writeMem(0xc240, { 0xda, 0x4d, 0xab });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd2fa, gbc.sp());
        EXPECT(0xc243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc240));
        EXPECT(0x4d, gbc.readMem(0xc241));
        EXPECT(0xab, gbc.readMem(0xc242));
        // DA 0329
        gbc.setState(0xaeae, 0x657d, 0x5230, 0xb32a, 0x15b9, 0x4449, 0x1, 0x0);
        gbc.writeMem(0xaeae, { 0xda, 0x25, 0x8d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x657d, gbc.sp());
        EXPECT(0x8d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaeae));
        EXPECT(0x25, gbc.readMem(0xaeaf));
        EXPECT(0x8d, gbc.readMem(0xaeb0));
        // DA 032A
        gbc.setState(0x724b, 0x7c9a, 0x4ff0, 0x7bd5, 0x74c2, 0xd9de, 0x1, 0x1);
        gbc.writeMem(0x724b, { 0xda, 0xc8, 0xa5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7c9a, gbc.sp());
        EXPECT(0xa5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 032B
        gbc.setState(0x21c0, 0x40f7, 0x3380, 0x16ba, 0x101a, 0x369b, 0x1, 0x0);
        gbc.writeMem(0x21c0, { 0xda, 0x4f, 0xaa });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x40f7, gbc.sp());
        EXPECT(0x21c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 032C
        gbc.setState(0xc5e1, 0x29a3, 0xef00, 0x80a4, 0x8be0, 0xed32, 0x1, 0x0);
        gbc.writeMem(0xc5e1, { 0xda, 0x7a, 0x1a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x29a3, gbc.sp());
        EXPECT(0xc5e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc5e1));
        EXPECT(0x7a, gbc.readMem(0xc5e2));
        EXPECT(0x1a, gbc.readMem(0xc5e3));
        // DA 032E
        gbc.setState(0xcf46, 0xaea5, 0x3700, 0x1602, 0x422f, 0x4865, 0x0, 0x1);
        gbc.writeMem(0xcf46, { 0xda, 0xfb, 0xa4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xaea5, gbc.sp());
        EXPECT(0xcf49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcf46));
        EXPECT(0xfb, gbc.readMem(0xcf47));
        EXPECT(0xa4, gbc.readMem(0xcf48));
        // DA 032F
        gbc.setState(0x3f36, 0xe6a6, 0x44f0, 0x9659, 0x133a, 0x4478, 0x0, 0x0);
        gbc.writeMem(0x3f36, { 0xda, 0x8e, 0xd8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe6a6, gbc.sp());
        EXPECT(0xd88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0330
        gbc.setState(0xba34, 0xad9b, 0x6320, 0xd861, 0x34fd, 0xe7a7, 0x1, 0x0);
        gbc.writeMem(0xba34, { 0xda, 0xcd, 0xb6 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xad9b, gbc.sp());
        EXPECT(0xba37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xba34));
        EXPECT(0xcd, gbc.readMem(0xba35));
        EXPECT(0xb6, gbc.readMem(0xba36));
        // DA 0331
        gbc.setState(0xace2, 0xd374, 0x4e20, 0x53c, 0x61b9, 0x28b3, 0x0, 0x0);
        gbc.writeMem(0xace2, { 0xda, 0x81, 0xd8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd374, gbc.sp());
        EXPECT(0xace5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xace2));
        EXPECT(0x81, gbc.readMem(0xace3));
        EXPECT(0xd8, gbc.readMem(0xace4));
        // DA 0332
        gbc.setState(0x87d7, 0x2828, 0x9a0, 0xddcb, 0xfd73, 0xd224, 0x1, 0x1);
        gbc.writeMem(0x87d7, { 0xda, 0x3a, 0x60 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2828, gbc.sp());
        EXPECT(0x87da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x87d7));
        EXPECT(0x3a, gbc.readMem(0x87d8));
        EXPECT(0x60, gbc.readMem(0x87d9));
        // DA 0333
        gbc.setState(0xc632, 0x7c18, 0x7020, 0x132d, 0x13fa, 0xc3e, 0x0, 0x0);
        gbc.writeMem(0xc632, { 0xda, 0x63, 0x9c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7c18, gbc.sp());
        EXPECT(0xc635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc632));
        EXPECT(0x63, gbc.readMem(0xc633));
        EXPECT(0x9c, gbc.readMem(0xc634));
        // DA 0334
        gbc.setState(0x5122, 0x9680, 0x480, 0xb70c, 0x7005, 0x62e4, 0x1, 0x0);
        gbc.writeMem(0x5122, { 0xda, 0x80, 0xcf });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9680, gbc.sp());
        EXPECT(0x5125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0335
        gbc.setState(0xbc13, 0xfde3, 0x8390, 0x4f53, 0xdfc2, 0xe922, 0x0, 0x1);
        gbc.writeMem(0xbc13, { 0xda, 0x54, 0xa6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfde3, gbc.sp());
        EXPECT(0xa654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbc13));
        EXPECT(0x54, gbc.readMem(0xbc14));
        EXPECT(0xa6, gbc.readMem(0xbc15));
        // DA 0336
        gbc.setState(0xcbcc, 0x47b1, 0x5f50, 0xf836, 0x4f25, 0x4fe5, 0x1, 0x1);
        gbc.writeMem(0xcbcc, { 0xda, 0x35, 0x2f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x47b1, gbc.sp());
        EXPECT(0x2f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcbcc));
        EXPECT(0x35, gbc.readMem(0xcbcd));
        EXPECT(0x2f, gbc.readMem(0xcbce));
        // DA 0337
        gbc.setState(0xcf36, 0x7cd8, 0xcc50, 0xbe4b, 0x7392, 0x7a5f, 0x0, 0x0);
        gbc.writeMem(0xcf36, { 0xda, 0x1, 0x2f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7cd8, gbc.sp());
        EXPECT(0x2f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcf36));
        EXPECT(0x1, gbc.readMem(0xcf37));
        EXPECT(0x2f, gbc.readMem(0xcf38));
        // DA 0338
        gbc.setState(0x7647, 0xd794, 0x830, 0x86e6, 0xa152, 0x39da, 0x1, 0x1);
        gbc.writeMem(0x7647, { 0xda, 0xf1, 0x7d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd794, gbc.sp());
        EXPECT(0x7df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0339
        gbc.setState(0x6ed2, 0xba09, 0x4f70, 0xc0eb, 0xc7ff, 0x18ae, 0x0, 0x1);
        gbc.writeMem(0x6ed2, { 0xda, 0xc9, 0x9b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xba09, gbc.sp());
        EXPECT(0x9bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 033A
        gbc.setState(0x1dbf, 0x71a3, 0x3820, 0xb649, 0x5aaf, 0x5b3e, 0x0, 0x1);
        gbc.writeMem(0x1dbf, { 0xda, 0x87, 0x51 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x71a3, gbc.sp());
        EXPECT(0x1dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 033B
        gbc.setState(0xb802, 0xfc74, 0x5bb0, 0x87ed, 0x7ddf, 0x1a94, 0x0, 0x0);
        gbc.writeMem(0xb802, { 0xda, 0xf6, 0x91 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfc74, gbc.sp());
        EXPECT(0x91f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb802));
        EXPECT(0xf6, gbc.readMem(0xb803));
        EXPECT(0x91, gbc.readMem(0xb804));
        // DA 033C
        gbc.setState(0x7c7e, 0x3c00, 0x7170, 0x7704, 0xed5e, 0xe6dd, 0x1, 0x1);
        gbc.writeMem(0x7c7e, { 0xda, 0xb4, 0xbf });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3c00, gbc.sp());
        EXPECT(0xbfb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 033D
        gbc.setState(0x33ef, 0x44a0, 0x1b00, 0x6524, 0x1143, 0xc7e6, 0x1, 0x0);
        gbc.writeMem(0x33ef, { 0xda, 0x92, 0x26 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x44a0, gbc.sp());
        EXPECT(0x33f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 033E
        gbc.setState(0x3039, 0x604e, 0x3a0, 0x4b6f, 0xefbc, 0xe6d3, 0x0, 0x1);
        gbc.writeMem(0x3039, { 0xda, 0xc6, 0x50 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x604e, gbc.sp());
        EXPECT(0x303c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 033F
        gbc.setState(0x1e87, 0x6393, 0x2c10, 0x7285, 0x13e3, 0x6bac, 0x1, 0x0);
        gbc.writeMem(0x1e87, { 0xda, 0x46, 0x59 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6393, gbc.sp());
        EXPECT(0x5946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0340
        gbc.setState(0x326, 0x933f, 0x81a0, 0x9e57, 0xa683, 0x298f, 0x1, 0x1);
        gbc.writeMem(0x326, { 0xda, 0x39, 0x22 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x933f, gbc.sp());
        EXPECT(0x329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0341
        gbc.setState(0x3442, 0x2e9c, 0xab70, 0x7463, 0xae58, 0x6ed2, 0x0, 0x0);
        gbc.writeMem(0x3442, { 0xda, 0xe3, 0x46 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2e9c, gbc.sp());
        EXPECT(0x46e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0342
        gbc.setState(0xd8bc, 0x4590, 0x5680, 0xdd45, 0x8699, 0x3edc, 0x0, 0x0);
        gbc.writeMem(0xd8bc, { 0xda, 0x45, 0xde });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4590, gbc.sp());
        EXPECT(0xd8bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd8bc));
        EXPECT(0x45, gbc.readMem(0xd8bd));
        EXPECT(0xde, gbc.readMem(0xd8be));
        // DA 0343
        gbc.setState(0x6ff, 0x76eb, 0xc500, 0x8c96, 0xe8b0, 0x56b7, 0x0, 0x1);
        gbc.writeMem(0x6ff, { 0xda, 0xdb, 0x21 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x76eb, gbc.sp());
        EXPECT(0x702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0344
        gbc.setState(0x7400, 0x3bfd, 0x8290, 0x2f97, 0xd01d, 0xbe6c, 0x1, 0x0);
        gbc.writeMem(0x7400, { 0xda, 0xbd, 0x52 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3bfd, gbc.sp());
        EXPECT(0x52bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0345
        gbc.setState(0x25a1, 0xcc31, 0x6860, 0x622d, 0xf2c, 0xb04f, 0x1, 0x1);
        gbc.writeMem(0x25a1, { 0xda, 0x96, 0x95 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcc31, gbc.sp());
        EXPECT(0x25a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0346
        gbc.setState(0x381f, 0xbe7f, 0xa350, 0x358f, 0x9d73, 0x6e0c, 0x1, 0x1);
        gbc.writeMem(0x381f, { 0xda, 0xed, 0xcb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbe7f, gbc.sp());
        EXPECT(0xcbed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0347
        gbc.setState(0x89b9, 0xc722, 0x4bf0, 0x5403, 0x14ef, 0xd0e, 0x0, 0x1);
        gbc.writeMem(0x89b9, { 0xda, 0xd2, 0x4a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc722, gbc.sp());
        EXPECT(0x4ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x89b9));
        EXPECT(0xd2, gbc.readMem(0x89ba));
        EXPECT(0x4a, gbc.readMem(0x89bb));
        // DA 0349
        gbc.setState(0x5f80, 0x1a1f, 0x8260, 0xecb5, 0x8e41, 0x9353, 0x1, 0x0);
        gbc.writeMem(0x5f80, { 0xda, 0xf8, 0x71 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1a1f, gbc.sp());
        EXPECT(0x5f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 034A
        gbc.setState(0x20e0, 0xbf95, 0x3720, 0xfe08, 0x1513, 0x5b28, 0x1, 0x1);
        gbc.writeMem(0x20e0, { 0xda, 0xba, 0xfd });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbf95, gbc.sp());
        EXPECT(0x20e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 034B
        gbc.setState(0x5ce7, 0x9e44, 0xd0, 0xc45a, 0x93f8, 0x8f76, 0x1, 0x0);
        gbc.writeMem(0x5ce7, { 0xda, 0xd3, 0xa5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9e44, gbc.sp());
        EXPECT(0xa5d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 034C
        gbc.setState(0xdd8c, 0xd015, 0x1ab0, 0x4457, 0xda18, 0xdbf2, 0x1, 0x1);
        gbc.writeMem(0xdd8c, { 0xda, 0x4b, 0x25 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd015, gbc.sp());
        EXPECT(0x254b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdd8c));
        EXPECT(0x4b, gbc.readMem(0xdd8d));
        EXPECT(0x25, gbc.readMem(0xdd8e));
        // DA 034D
        gbc.setState(0x90b0, 0x4707, 0x2160, 0xb741, 0x28c2, 0x1cac, 0x1, 0x1);
        gbc.writeMem(0x90b0, { 0xda, 0xe, 0x16 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4707, gbc.sp());
        EXPECT(0x90b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x90b0));
        EXPECT(0xe, gbc.readMem(0x90b1));
        EXPECT(0x16, gbc.readMem(0x90b2));
        // DA 034E
        gbc.setState(0xd737, 0x90cb, 0x40f0, 0x8660, 0x6470, 0xdcf8, 0x0, 0x1);
        gbc.writeMem(0xd737, { 0xda, 0x51, 0xd7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x90cb, gbc.sp());
        EXPECT(0xd751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd737));
        EXPECT(0x51, gbc.readMem(0xd738));
        EXPECT(0xd7, gbc.readMem(0xd739));
        // DA 034F
        gbc.setState(0xab67, 0x253a, 0x8a30, 0x6236, 0x8000, 0xf23b, 0x1, 0x1);
        gbc.writeMem(0xab67, { 0xda, 0xbc, 0x4c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x253a, gbc.sp());
        EXPECT(0x4cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xab67));
        EXPECT(0xbc, gbc.readMem(0xab68));
        EXPECT(0x4c, gbc.readMem(0xab69));
        // DA 0350
        gbc.setState(0xe142, 0x6b9c, 0x5b90, 0x68b1, 0xf73c, 0xc989, 0x1, 0x1);
        gbc.writeMem(0xe142, { 0xda, 0xfd, 0xc3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6b9c, gbc.sp());
        EXPECT(0xc3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe142));
        EXPECT(0xfd, gbc.readMem(0xe143));
        EXPECT(0xc3, gbc.readMem(0xe144));
        // DA 0351
        gbc.setState(0xb8ad, 0x3a16, 0x9350, 0xd6d8, 0xad37, 0xd929, 0x1, 0x0);
        gbc.writeMem(0xb8ad, { 0xda, 0x2, 0x19 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3a16, gbc.sp());
        EXPECT(0x1902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb8ad));
        EXPECT(0x2, gbc.readMem(0xb8ae));
        EXPECT(0x19, gbc.readMem(0xb8af));
        // DA 0352
        gbc.setState(0x4e28, 0xb2a2, 0x31f0, 0x4e39, 0x486a, 0xa9a0, 0x0, 0x1);
        gbc.writeMem(0x4e28, { 0xda, 0x3b, 0x74 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb2a2, gbc.sp());
        EXPECT(0x743b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0353
        gbc.setState(0x9b6, 0xd378, 0x7a10, 0x62f3, 0x654a, 0x7460, 0x1, 0x0);
        gbc.writeMem(0x9b6, { 0xda, 0xb6, 0x7d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd378, gbc.sp());
        EXPECT(0x7db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0354
        gbc.setState(0x795f, 0xf0e8, 0xa00, 0x1bb7, 0x7a59, 0x6b49, 0x1, 0x0);
        gbc.writeMem(0x795f, { 0xda, 0x20, 0xbd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf0e8, gbc.sp());
        EXPECT(0x7962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0355
        gbc.setState(0xc885, 0x19a, 0xc120, 0x561, 0x27cd, 0x7a7d, 0x1, 0x0);
        gbc.writeMem(0xc885, { 0xda, 0xd9, 0xb5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x19a, gbc.sp());
        EXPECT(0xc888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc885));
        EXPECT(0xd9, gbc.readMem(0xc886));
        EXPECT(0xb5, gbc.readMem(0xc887));
        // DA 0356
        gbc.setState(0x303d, 0xae16, 0x3460, 0x819e, 0x8bd1, 0xa54c, 0x0, 0x0);
        gbc.writeMem(0x303d, { 0xda, 0x59, 0x6d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xae16, gbc.sp());
        EXPECT(0x3040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0357
        gbc.setState(0x2d9d, 0xfd05, 0xcba0, 0x9d6b, 0xaba6, 0xb959, 0x0, 0x1);
        gbc.writeMem(0x2d9d, { 0xda, 0xf0, 0x91 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfd05, gbc.sp());
        EXPECT(0x2da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0358
        gbc.setState(0x250e, 0x999d, 0x5bc0, 0xf4d9, 0xad35, 0x7a08, 0x0, 0x0);
        gbc.writeMem(0x250e, { 0xda, 0x33, 0xbc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x999d, gbc.sp());
        EXPECT(0x2511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0359
        gbc.setState(0x668b, 0x632d, 0x85e0, 0x2edd, 0x7aa1, 0x7541, 0x1, 0x0);
        gbc.writeMem(0x668b, { 0xda, 0x3c, 0x51 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x632d, gbc.sp());
        EXPECT(0x668e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 035A
        gbc.setState(0x951b, 0xbb5b, 0xf80, 0xd2d1, 0x158e, 0xb23f, 0x0, 0x1);
        gbc.writeMem(0x951b, { 0xda, 0xe5, 0xe0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbb5b, gbc.sp());
        EXPECT(0x951e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x951b));
        EXPECT(0xe5, gbc.readMem(0x951c));
        EXPECT(0xe0, gbc.readMem(0x951d));
        // DA 035B
        gbc.setState(0xd5fd, 0x2880, 0xac90, 0x4275, 0xa484, 0x872e, 0x0, 0x0);
        gbc.writeMem(0xd5fd, { 0xda, 0x39, 0xb4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2880, gbc.sp());
        EXPECT(0xb439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd5fd));
        EXPECT(0x39, gbc.readMem(0xd5fe));
        EXPECT(0xb4, gbc.readMem(0xd5ff));
        // DA 035C
        gbc.setState(0x4735, 0x244a, 0xe840, 0xb94f, 0xc8ab, 0x81e7, 0x1, 0x0);
        gbc.writeMem(0x4735, { 0xda, 0x7a, 0xbd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x244a, gbc.sp());
        EXPECT(0x4738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 035D
        gbc.setState(0xaef8, 0x223c, 0x2280, 0xd81d, 0x3605, 0x50ea, 0x1, 0x1);
        gbc.writeMem(0xaef8, { 0xda, 0x96, 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x223c, gbc.sp());
        EXPECT(0xaefb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaef8));
        EXPECT(0x96, gbc.readMem(0xaef9));
        EXPECT(0xa7, gbc.readMem(0xaefa));
        // DA 035E
        gbc.setState(0x355a, 0x9fe7, 0xdf00, 0x9853, 0xf949, 0xe620, 0x0, 0x0);
        gbc.writeMem(0x355a, { 0xda, 0xab, 0x25 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9fe7, gbc.sp());
        EXPECT(0x355d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 035F
        gbc.setState(0x3816, 0x3623, 0x33a0, 0xff5c, 0xa57, 0xc555, 0x1, 0x0);
        gbc.writeMem(0x3816, { 0xda, 0x54, 0x14 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3623, gbc.sp());
        EXPECT(0x3819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0360
        gbc.setState(0xe5fc, 0xdc87, 0x8850, 0x8bd8, 0xec76, 0xea81, 0x1, 0x0);
        gbc.writeMem(0xe5fc, { 0xda, 0x17, 0xe1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xdc87, gbc.sp());
        EXPECT(0xe117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe5fc));
        EXPECT(0x17, gbc.readMem(0xe5fd));
        EXPECT(0xe1, gbc.readMem(0xe5fe));
        // DA 0361
        gbc.setState(0xe354, 0x3ba9, 0x4120, 0x32aa, 0xc69c, 0xc96e, 0x0, 0x0);
        gbc.writeMem(0xe354, { 0xda, 0xe9, 0x23 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3ba9, gbc.sp());
        EXPECT(0xe357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe354));
        EXPECT(0xe9, gbc.readMem(0xe355));
        EXPECT(0x23, gbc.readMem(0xe356));
        // DA 0362
        gbc.setState(0x4858, 0xd57a, 0x95f0, 0x1cc0, 0xd404, 0x7d6e, 0x0, 0x0);
        gbc.writeMem(0x4858, { 0xda, 0x90, 0x90 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd57a, gbc.sp());
        EXPECT(0x9090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0363
        gbc.setState(0xebf1, 0x7f95, 0xe0d0, 0x87b5, 0xd79f, 0x677d, 0x0, 0x1);
        gbc.writeMem(0xebf1, { 0xda, 0x90, 0x5d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7f95, gbc.sp());
        EXPECT(0x5d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xebf1));
        EXPECT(0x90, gbc.readMem(0xebf2));
        EXPECT(0x5d, gbc.readMem(0xebf3));
        // DA 0364
        gbc.setState(0x6126, 0x6d80, 0x9520, 0x4a4c, 0x5fd1, 0xe15f, 0x0, 0x1);
        gbc.writeMem(0x6126, { 0xda, 0x8f, 0xf });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6d80, gbc.sp());
        EXPECT(0x6129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0365
        gbc.setState(0xa8d8, 0xce4f, 0x2b30, 0xee16, 0x879d, 0x9762, 0x0, 0x1);
        gbc.writeMem(0xa8d8, { 0xda, 0x95, 0xce });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xce4f, gbc.sp());
        EXPECT(0xce95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa8d8));
        EXPECT(0x95, gbc.readMem(0xa8d9));
        EXPECT(0xce, gbc.readMem(0xa8da));
        // DA 0366
        gbc.setState(0x6479, 0xc7d3, 0xe870, 0xc933, 0x18e4, 0x56bb, 0x0, 0x0);
        gbc.writeMem(0x6479, { 0xda, 0x19, 0x5c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc7d3, gbc.sp());
        EXPECT(0x5c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0367
        gbc.setState(0x44ac, 0x3d19, 0xdfd0, 0x2258, 0xaf1b, 0xb3e5, 0x1, 0x1);
        gbc.writeMem(0x44ac, { 0xda, 0x6, 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3d19, gbc.sp());
        EXPECT(0xb006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0368
        gbc.setState(0x7fed, 0x1209, 0x62a0, 0x7b34, 0x8a35, 0xec9c, 0x1, 0x0);
        gbc.writeMem(0x7fed, { 0xda, 0xb0, 0x58 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1209, gbc.sp());
        EXPECT(0x7ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0369
        gbc.setState(0xb88e, 0xd886, 0xc190, 0x9d7, 0x96dd, 0x251c, 0x1, 0x1);
        gbc.writeMem(0xb88e, { 0xda, 0xad, 0x51 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd886, gbc.sp());
        EXPECT(0x51ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb88e));
        EXPECT(0xad, gbc.readMem(0xb88f));
        EXPECT(0x51, gbc.readMem(0xb890));
        // DA 036B
        gbc.setState(0x74fb, 0x88be, 0x5a70, 0x3a08, 0x413, 0xc47a, 0x0, 0x1);
        gbc.writeMem(0x74fb, { 0xda, 0x91, 0x33 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x88be, gbc.sp());
        EXPECT(0x3391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 036C
        gbc.setState(0x65de, 0xeb68, 0x9ac0, 0x3d76, 0x4f28, 0x4cd4, 0x0, 0x1);
        gbc.writeMem(0x65de, { 0xda, 0x30, 0x8c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xeb68, gbc.sp());
        EXPECT(0x65e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 036D
        gbc.setState(0x42d0, 0x8358, 0xd90, 0xb7f4, 0xd832, 0xddd4, 0x1, 0x0);
        gbc.writeMem(0x42d0, { 0xda, 0x28, 0xd3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8358, gbc.sp());
        EXPECT(0xd328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 036E
        gbc.setState(0x187, 0x6e01, 0xaba0, 0x92b0, 0xe24e, 0x1136, 0x1, 0x0);
        gbc.writeMem(0x187, { 0xda, 0x6d, 0x27 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6e01, gbc.sp());
        EXPECT(0x18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 036F
        gbc.setState(0x7c79, 0x731c, 0xece0, 0x8e8a, 0x9d08, 0xb357, 0x0, 0x0);
        gbc.writeMem(0x7c79, { 0xda, 0xe2, 0x45 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x731c, gbc.sp());
        EXPECT(0x7c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0370
        gbc.setState(0xbb65, 0x71f0, 0xa70, 0xbbff, 0x98cf, 0x9758, 0x1, 0x0);
        gbc.writeMem(0xbb65, { 0xda, 0xf6, 0x80 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x71f0, gbc.sp());
        EXPECT(0x80f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbb65));
        EXPECT(0xf6, gbc.readMem(0xbb66));
        EXPECT(0x80, gbc.readMem(0xbb67));
        // DA 0371
        gbc.setState(0x7c10, 0xbae4, 0x2d0, 0x9c05, 0xc014, 0x2a79, 0x0, 0x0);
        gbc.writeMem(0x7c10, { 0xda, 0x4f, 0xbb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbae4, gbc.sp());
        EXPECT(0xbb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0372
        gbc.setState(0x5d6c, 0xcf93, 0x5be0, 0x7d4c, 0xde36, 0x30d1, 0x1, 0x0);
        gbc.writeMem(0x5d6c, { 0xda, 0xa2, 0x4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcf93, gbc.sp());
        EXPECT(0x5d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0374
        gbc.setState(0x82bb, 0xaf3a, 0x92e0, 0x47b2, 0x87f1, 0xe28a, 0x0, 0x1);
        gbc.writeMem(0x82bb, { 0xda, 0xd9, 0xb7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xaf3a, gbc.sp());
        EXPECT(0x82be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x82bb));
        EXPECT(0xd9, gbc.readMem(0x82bc));
        EXPECT(0xb7, gbc.readMem(0x82bd));
        // DA 0375
        gbc.setState(0x1785, 0xa92f, 0x6c00, 0xde7, 0x50af, 0x79d0, 0x1, 0x1);
        gbc.writeMem(0x1785, { 0xda, 0x75, 0xa3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa92f, gbc.sp());
        EXPECT(0x1788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0376
        gbc.setState(0x1541, 0x8a2c, 0x6630, 0x26da, 0xeb3d, 0x724b, 0x0, 0x1);
        gbc.writeMem(0x1541, { 0xda, 0x4a, 0x12 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8a2c, gbc.sp());
        EXPECT(0x124a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0377
        gbc.setState(0xe7ff, 0x710c, 0x8b50, 0x1a3, 0x3285, 0x2a8f, 0x0, 0x1);
        gbc.writeMem(0xe7ff, { 0xda, 0xb, 0xca });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x710c, gbc.sp());
        EXPECT(0xca0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe7ff));
        EXPECT(0xb, gbc.readMem(0xe800));
        EXPECT(0xca, gbc.readMem(0xe801));
        // DA 0378
        gbc.setState(0xe792, 0x12f8, 0xdec0, 0x4b61, 0x4f3a, 0x45b5, 0x0, 0x0);
        gbc.writeMem(0xe792, { 0xda, 0x15, 0x2c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x12f8, gbc.sp());
        EXPECT(0xe795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe792));
        EXPECT(0x15, gbc.readMem(0xe793));
        EXPECT(0x2c, gbc.readMem(0xe794));
        // DA 0379
        gbc.setState(0x46f6, 0x2c21, 0xb5b0, 0xb55b, 0x3fa3, 0xd4b, 0x0, 0x1);
        gbc.writeMem(0x46f6, { 0xda, 0x85, 0x27 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2c21, gbc.sp());
        EXPECT(0x2785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 037A
        gbc.setState(0x9cac, 0xe790, 0x6940, 0xce68, 0x7cfe, 0x67cd, 0x1, 0x1);
        gbc.writeMem(0x9cac, { 0xda, 0xfe, 0xc6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe790, gbc.sp());
        EXPECT(0x9caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9cac));
        EXPECT(0xfe, gbc.readMem(0x9cad));
        EXPECT(0xc6, gbc.readMem(0x9cae));
        // DA 037B
        gbc.setState(0xba31, 0x1e45, 0x2570, 0xb196, 0xc107, 0x9d19, 0x0, 0x0);
        gbc.writeMem(0xba31, { 0xda, 0x16, 0x54 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1e45, gbc.sp());
        EXPECT(0x5416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xba31));
        EXPECT(0x16, gbc.readMem(0xba32));
        EXPECT(0x54, gbc.readMem(0xba33));
        // DA 037C
        gbc.setState(0x9be0, 0x3102, 0xdf60, 0xd872, 0x58ea, 0x2ed5, 0x1, 0x1);
        gbc.writeMem(0x9be0, { 0xda, 0xf0, 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3102, gbc.sp());
        EXPECT(0x9be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9be0));
        EXPECT(0xf0, gbc.readMem(0x9be1));
        EXPECT(0xb2, gbc.readMem(0x9be2));
        // DA 037D
        gbc.setState(0x505c, 0x2dd, 0xf7d0, 0x7f33, 0xdcc7, 0x137f, 0x0, 0x0);
        gbc.writeMem(0x505c, { 0xda, 0xf9, 0x10 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2dd, gbc.sp());
        EXPECT(0x10f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 037F
        gbc.setState(0xe4e3, 0x57f5, 0x63e0, 0x2f19, 0xd26c, 0xd527, 0x1, 0x0);
        gbc.writeMem(0xe4e3, { 0xda, 0x8, 0xad });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x57f5, gbc.sp());
        EXPECT(0xe4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe4e3));
        EXPECT(0x8, gbc.readMem(0xe4e4));
        EXPECT(0xad, gbc.readMem(0xe4e5));
        // DA 0380
        gbc.setState(0x229, 0x3724, 0xb6f0, 0xbe4a, 0x554a, 0x655f, 0x0, 0x1);
        gbc.writeMem(0x229, { 0xda, 0xa9, 0x1e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3724, gbc.sp());
        EXPECT(0x1ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0381
        gbc.setState(0xa4ac, 0xa8c7, 0x6e90, 0x99a9, 0xe623, 0xcbb2, 0x0, 0x1);
        gbc.writeMem(0xa4ac, { 0xda, 0xa2, 0xff });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa8c7, gbc.sp());
        EXPECT(0xffa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa4ac));
        EXPECT(0xa2, gbc.readMem(0xa4ad));
        EXPECT(0xff, gbc.readMem(0xa4ae));
        // DA 0382
        gbc.setState(0x23cd, 0x59a7, 0xef60, 0x10e1, 0x876d, 0x63d6, 0x0, 0x0);
        gbc.writeMem(0x23cd, { 0xda, 0x24, 0x7c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x59a7, gbc.sp());
        EXPECT(0x23d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0383
        gbc.setState(0xc728, 0x5708, 0xe280, 0xa9ab, 0x173d, 0x726d, 0x0, 0x1);
        gbc.writeMem(0xc728, { 0xda, 0xbb, 0x86 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5708, gbc.sp());
        EXPECT(0xc72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc728));
        EXPECT(0xbb, gbc.readMem(0xc729));
        EXPECT(0x86, gbc.readMem(0xc72a));
        // DA 0384
        gbc.setState(0xe66f, 0xcf1d, 0x76f0, 0x85, 0x5816, 0xa1dc, 0x1, 0x1);
        gbc.writeMem(0xe66f, { 0xda, 0x49, 0x4d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcf1d, gbc.sp());
        EXPECT(0x4d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe66f));
        EXPECT(0x49, gbc.readMem(0xe670));
        EXPECT(0x4d, gbc.readMem(0xe671));
        // DA 0385
        gbc.setState(0xaff5, 0x4d3, 0xb090, 0x4f31, 0xf55d, 0x65d6, 0x0, 0x0);
        gbc.writeMem(0xaff5, { 0xda, 0xb0, 0x4a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4d3, gbc.sp());
        EXPECT(0x4ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaff5));
        EXPECT(0xb0, gbc.readMem(0xaff6));
        EXPECT(0x4a, gbc.readMem(0xaff7));
        // DA 0386
        gbc.setState(0x9c01, 0xb773, 0x88d0, 0xa6d1, 0xcfb6, 0xf171, 0x0, 0x0);
        gbc.writeMem(0x9c01, { 0xda, 0x2b, 0xb8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb773, gbc.sp());
        EXPECT(0xb82b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9c01));
        EXPECT(0x2b, gbc.readMem(0x9c02));
        EXPECT(0xb8, gbc.readMem(0x9c03));
        // DA 0387
        gbc.setState(0x5eab, 0x8827, 0x4890, 0x4a77, 0x9167, 0xe305, 0x1, 0x1);
        gbc.writeMem(0x5eab, { 0xda, 0x2b, 0x20 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8827, gbc.sp());
        EXPECT(0x202b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0388
        gbc.setState(0x6635, 0xc7d5, 0x2dd0, 0x37b3, 0xc6f9, 0xf5ff, 0x0, 0x0);
        gbc.writeMem(0x6635, { 0xda, 0x57, 0x1a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc7d5, gbc.sp());
        EXPECT(0x1a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0389
        gbc.setState(0x91f, 0xff76, 0x46f0, 0x262b, 0xbe06, 0x2fea, 0x1, 0x1);
        gbc.writeMem(0x91f, { 0xda, 0x54, 0x4f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xff76, gbc.sp());
        EXPECT(0x4f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 038A
        gbc.setState(0x96b, 0x7a0, 0x98c0, 0x67e9, 0x5b87, 0x809f, 0x0, 0x1);
        gbc.writeMem(0x96b, { 0xda, 0xb5, 0x91 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7a0, gbc.sp());
        EXPECT(0x96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 038B
        gbc.setState(0xdcaf, 0x682f, 0x6960, 0xbfb7, 0x5a64, 0x258d, 0x0, 0x0);
        gbc.writeMem(0xdcaf, { 0xda, 0xe2, 0xe8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x682f, gbc.sp());
        EXPECT(0xdcb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdcaf));
        EXPECT(0xe2, gbc.readMem(0xdcb0));
        EXPECT(0xe8, gbc.readMem(0xdcb1));
        // DA 038C
        gbc.setState(0x6f09, 0xb975, 0x3f30, 0x1412, 0xba59, 0x93b5, 0x0, 0x0);
        gbc.writeMem(0x6f09, { 0xda, 0xea, 0xd8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb975, gbc.sp());
        EXPECT(0xd8ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 038D
        gbc.setState(0x170a, 0xe8b6, 0xee20, 0x3f46, 0xcfe1, 0xebfe, 0x1, 0x0);
        gbc.writeMem(0x170a, { 0xda, 0xe9, 0xbf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe8b6, gbc.sp());
        EXPECT(0x170d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 038E
        gbc.setState(0x4d86, 0x1267, 0xf210, 0xdc28, 0x631, 0x17c2, 0x1, 0x1);
        gbc.writeMem(0x4d86, { 0xda, 0x88, 0x7d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1267, gbc.sp());
        EXPECT(0x7d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 038F
        gbc.setState(0xd1db, 0x5ec3, 0xaca0, 0x677d, 0x36fd, 0xcf8, 0x0, 0x0);
        gbc.writeMem(0xd1db, { 0xda, 0x78, 0x2f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5ec3, gbc.sp());
        EXPECT(0xd1de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd1db));
        EXPECT(0x78, gbc.readMem(0xd1dc));
        EXPECT(0x2f, gbc.readMem(0xd1dd));
        // DA 0390
        gbc.setState(0x35ed, 0x1bb0, 0x4740, 0xc929, 0xfb32, 0xc7b8, 0x1, 0x1);
        gbc.writeMem(0x35ed, { 0xda, 0x19, 0xe5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1bb0, gbc.sp());
        EXPECT(0x35f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0391
        gbc.setState(0x38f8, 0x11be, 0x9f40, 0xe2e2, 0xe8ee, 0xacef, 0x1, 0x0);
        gbc.writeMem(0x38f8, { 0xda, 0x49, 0xb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x11be, gbc.sp());
        EXPECT(0x38fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0392
        gbc.setState(0x4a19, 0x909a, 0x2b80, 0xb1b, 0x6e00, 0x24d1, 0x0, 0x0);
        gbc.writeMem(0x4a19, { 0xda, 0x17, 0xf0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x909a, gbc.sp());
        EXPECT(0x4a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0393
        gbc.setState(0xf5, 0xd961, 0xcf10, 0x4960, 0x4569, 0x8b2a, 0x1, 0x1);
        gbc.writeMem(0xf5, { 0xda, 0xc6, 0x74 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd961, gbc.sp());
        EXPECT(0x74c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0394
        gbc.setState(0x1680, 0x9a13, 0x4510, 0xbfb5, 0x32f3, 0x1a9, 0x0, 0x0);
        gbc.writeMem(0x1680, { 0xda, 0x44, 0x1d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9a13, gbc.sp());
        EXPECT(0x1d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0395
        gbc.setState(0xc246, 0xd4f8, 0xc000, 0xb073, 0x5873, 0x5c5f, 0x0, 0x0);
        gbc.writeMem(0xc246, { 0xda, 0x58, 0x4d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd4f8, gbc.sp());
        EXPECT(0xc249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc246));
        EXPECT(0x58, gbc.readMem(0xc247));
        EXPECT(0x4d, gbc.readMem(0xc248));
        // DA 0396
        gbc.setState(0x27af, 0x8b5b, 0x4220, 0xdd1e, 0xe5bd, 0x4149, 0x1, 0x1);
        gbc.writeMem(0x27af, { 0xda, 0xad, 0x7b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8b5b, gbc.sp());
        EXPECT(0x27b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 0397
        gbc.setState(0x5dc2, 0xde68, 0x7c10, 0x369b, 0x391f, 0x1479, 0x0, 0x1);
        gbc.writeMem(0x5dc2, { 0xda, 0x63, 0xb7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xde68, gbc.sp());
        EXPECT(0xb763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0398
        gbc.setState(0x6960, 0x9557, 0x7410, 0xbeb5, 0xf10e, 0x15fc, 0x0, 0x0);
        gbc.writeMem(0x6960, { 0xda, 0x10, 0x36 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9557, gbc.sp());
        EXPECT(0x3610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 0399
        gbc.setState(0x1cb0, 0x49c4, 0x8900, 0xd5fc, 0x88d7, 0x49e9, 0x0, 0x0);
        gbc.writeMem(0x1cb0, { 0xda, 0xa3, 0x74 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x49c4, gbc.sp());
        EXPECT(0x1cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 039A
        gbc.setState(0x7e55, 0x9279, 0xff60, 0xa1f, 0xd106, 0x79ea, 0x1, 0x1);
        gbc.writeMem(0x7e55, { 0xda, 0xcd, 0x64 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9279, gbc.sp());
        EXPECT(0x7e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 039B
        gbc.setState(0x3e11, 0x372c, 0xd550, 0xd451, 0x772e, 0xb4c4, 0x1, 0x1);
        gbc.writeMem(0x3e11, { 0xda, 0xb2, 0xcb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x372c, gbc.sp());
        EXPECT(0xcbb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 039C
        gbc.setState(0x724b, 0x381e, 0x9b40, 0x73b6, 0xd4ae, 0xe232, 0x1, 0x0);
        gbc.writeMem(0x724b, { 0xda, 0xc8, 0xa5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x381e, gbc.sp());
        EXPECT(0x724e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 039D
        gbc.setState(0x2f99, 0x3db7, 0x5ab0, 0xf07e, 0x6fd, 0xeb2f, 0x0, 0x1);
        gbc.writeMem(0x2f99, { 0xda, 0xda, 0xbf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3db7, gbc.sp());
        EXPECT(0xbfda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 039E
        gbc.setState(0x75f, 0x4d58, 0x8640, 0x7d3c, 0x7d, 0xdfa6, 0x1, 0x0);
        gbc.writeMem(0x75f, { 0xda, 0xb9, 0x8d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4d58, gbc.sp());
        EXPECT(0x762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 039F
        gbc.setState(0x37ec, 0xf971, 0x9750, 0x707b, 0x93d2, 0x4d29, 0x1, 0x1);
        gbc.writeMem(0x37ec, { 0xda, 0xaf, 0x4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf971, gbc.sp());
        EXPECT(0x4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03A0
        gbc.setState(0x9494, 0xf000, 0xc7f0, 0x92e6, 0x7d3c, 0x1bfa, 0x1, 0x0);
        gbc.writeMem(0x9494, { 0xda, 0x4f, 0xc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf000, gbc.sp());
        EXPECT(0xc4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9494));
        EXPECT(0x4f, gbc.readMem(0x9495));
        EXPECT(0xc, gbc.readMem(0x9496));
        // DA 03A1
        gbc.setState(0x315a, 0x36c7, 0xc070, 0x1760, 0x2900, 0x8cb8, 0x0, 0x1);
        gbc.writeMem(0x315a, { 0xda, 0x4f, 0x7a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x36c7, gbc.sp());
        EXPECT(0x7a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03A2
        gbc.setState(0x35f4, 0xed9d, 0x13d0, 0x616d, 0xff94, 0x5635, 0x0, 0x0);
        gbc.writeMem(0x35f4, { 0xda, 0xdb, 0xd9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xed9d, gbc.sp());
        EXPECT(0xd9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03A3
        gbc.setState(0xb6f6, 0x446c, 0x48e0, 0x7518, 0xdbec, 0x7477, 0x1, 0x1);
        gbc.writeMem(0xb6f6, { 0xda, 0xa0, 0x8a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x446c, gbc.sp());
        EXPECT(0xb6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb6f6));
        EXPECT(0xa0, gbc.readMem(0xb6f7));
        EXPECT(0x8a, gbc.readMem(0xb6f8));
        // DA 03A4
        gbc.setState(0x503f, 0x3501, 0xacb0, 0xf01b, 0x33b5, 0x4d71, 0x0, 0x0);
        gbc.writeMem(0x503f, { 0xda, 0x98, 0xbe });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3501, gbc.sp());
        EXPECT(0xbe98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03A5
        gbc.setState(0x5271, 0x9a2c, 0xe7c0, 0xe506, 0x3228, 0x1139, 0x0, 0x0);
        gbc.writeMem(0x5271, { 0xda, 0x4f, 0xa0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9a2c, gbc.sp());
        EXPECT(0x5274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03A6
        gbc.setState(0x7edb, 0x5ab, 0x2560, 0x4ffc, 0x54ee, 0x715a, 0x0, 0x0);
        gbc.writeMem(0x7edb, { 0xda, 0x27, 0xd6 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5ab, gbc.sp());
        EXPECT(0x7ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03A7
        gbc.setState(0x5596, 0xd155, 0x1520, 0xc769, 0x183b, 0x622c, 0x0, 0x0);
        gbc.writeMem(0x5596, { 0xda, 0x6, 0xca });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd155, gbc.sp());
        EXPECT(0x5599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03A8
        gbc.setState(0x645c, 0x3509, 0x74b0, 0x3e29, 0xa816, 0xe3d1, 0x0, 0x1);
        gbc.writeMem(0x645c, { 0xda, 0x5a, 0xd2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3509, gbc.sp());
        EXPECT(0xd25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03A9
        gbc.setState(0x5faa, 0xb0a4, 0xd0b0, 0x6d8d, 0x7a4f, 0xacd8, 0x1, 0x0);
        gbc.writeMem(0x5faa, { 0xda, 0x2d, 0x90 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb0a4, gbc.sp());
        EXPECT(0x902d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03AA
        gbc.setState(0x8a5a, 0x2412, 0x90c0, 0x212c, 0x3342, 0x4537, 0x0, 0x0);
        gbc.writeMem(0x8a5a, { 0xda, 0xfa, 0x37 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2412, gbc.sp());
        EXPECT(0x8a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8a5a));
        EXPECT(0xfa, gbc.readMem(0x8a5b));
        EXPECT(0x37, gbc.readMem(0x8a5c));
        // DA 03AB
        gbc.setState(0x3770, 0xb2e8, 0x4830, 0xe09c, 0xd54f, 0xfe11, 0x1, 0x0);
        gbc.writeMem(0x3770, { 0xda, 0xb3, 0x67 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb2e8, gbc.sp());
        EXPECT(0x67b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03AE
        gbc.setState(0x7cd7, 0x5a89, 0x7860, 0xa7d1, 0x7f9c, 0xbeb7, 0x0, 0x0);
        gbc.writeMem(0x7cd7, { 0xda, 0x11, 0x6e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5a89, gbc.sp());
        EXPECT(0x7cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03AF
        gbc.setState(0x54b4, 0xe630, 0x970, 0xf0e5, 0x2786, 0x6, 0x0, 0x1);
        gbc.writeMem(0x54b4, { 0xda, 0x68, 0xa4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe630, gbc.sp());
        EXPECT(0xa468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03B0
        gbc.setState(0x8b9f, 0xb32d, 0xfd20, 0x2725, 0x60bd, 0xc983, 0x0, 0x0);
        gbc.writeMem(0x8b9f, { 0xda, 0x4b, 0xc0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb32d, gbc.sp());
        EXPECT(0x8ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8b9f));
        EXPECT(0x4b, gbc.readMem(0x8ba0));
        EXPECT(0xc0, gbc.readMem(0x8ba1));
        // DA 03B1
        gbc.setState(0xc37d, 0x2137, 0x1fe0, 0xc813, 0xe356, 0x77f7, 0x0, 0x0);
        gbc.writeMem(0xc37d, { 0xda, 0x34, 0x49 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2137, gbc.sp());
        EXPECT(0xc380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc37d));
        EXPECT(0x34, gbc.readMem(0xc37e));
        EXPECT(0x49, gbc.readMem(0xc37f));
        // DA 03B2
        gbc.setState(0x477, 0x1, 0x7220, 0xd7dc, 0x958c, 0x5af6, 0x0, 0x0);
        gbc.writeMem(0x477, { 0xda, 0xaf, 0x83 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1, gbc.sp());
        EXPECT(0x47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03B3
        gbc.setState(0xc188, 0xb6e7, 0x23a0, 0xae66, 0x83d8, 0x368f, 0x1, 0x0);
        gbc.writeMem(0xc188, { 0xda, 0xf, 0xf2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb6e7, gbc.sp());
        EXPECT(0xc18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc188));
        EXPECT(0xf, gbc.readMem(0xc189));
        EXPECT(0xf2, gbc.readMem(0xc18a));
        // DA 03B4
        gbc.setState(0x9760, 0xb37b, 0x5f10, 0xba4f, 0x764b, 0x1f2b, 0x0, 0x1);
        gbc.writeMem(0x9760, { 0xda, 0x3, 0xfe });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb37b, gbc.sp());
        EXPECT(0xfe03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9760));
        EXPECT(0x3, gbc.readMem(0x9761));
        EXPECT(0xfe, gbc.readMem(0x9762));
        // DA 03B5
        gbc.setState(0x7831, 0x41d5, 0x8220, 0x8885, 0xbaba, 0x1bf9, 0x0, 0x1);
        gbc.writeMem(0x7831, { 0xda, 0xe7, 0x6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x41d5, gbc.sp());
        EXPECT(0x7834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03B6
        gbc.setState(0x890, 0x793b, 0xcbe0, 0xca29, 0x5f65, 0xfb8c, 0x0, 0x0);
        gbc.writeMem(0x890, { 0xda, 0x28, 0x24 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x793b, gbc.sp());
        EXPECT(0x893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03B7
        gbc.setState(0x77fe, 0xf26d, 0x80e0, 0xf34d, 0x822, 0xcea1, 0x0, 0x0);
        gbc.writeMem(0x77fe, { 0xda, 0x45, 0x57 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf26d, gbc.sp());
        EXPECT(0x7801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03B8
        gbc.setState(0xdb5f, 0xa5d6, 0xd3a0, 0x3bc8, 0x1a90, 0xf58, 0x1, 0x0);
        gbc.writeMem(0xdb5f, { 0xda, 0xde, 0xff });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa5d6, gbc.sp());
        EXPECT(0xdb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdb5f));
        EXPECT(0xde, gbc.readMem(0xdb60));
        EXPECT(0xff, gbc.readMem(0xdb61));
        // DA 03B9
        gbc.setState(0xc318, 0xc16f, 0xe70, 0x76b2, 0xd913, 0x3521, 0x1, 0x0);
        gbc.writeMem(0xc318, { 0xda, 0xf6, 0x3f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc16f, gbc.sp());
        EXPECT(0x3ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc318));
        EXPECT(0xf6, gbc.readMem(0xc319));
        EXPECT(0x3f, gbc.readMem(0xc31a));
        // DA 03BA
        gbc.setState(0xd512, 0x738c, 0xb960, 0x354, 0x29ad, 0x673a, 0x1, 0x1);
        gbc.writeMem(0xd512, { 0xda, 0xce, 0xd0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x738c, gbc.sp());
        EXPECT(0xd515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd512));
        EXPECT(0xce, gbc.readMem(0xd513));
        EXPECT(0xd0, gbc.readMem(0xd514));
        // DA 03BB
        gbc.setState(0x12b2, 0x36fd, 0x26a0, 0x8efa, 0x2c46, 0x514e, 0x0, 0x1);
        gbc.writeMem(0x12b2, { 0xda, 0xad, 0xdd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x36fd, gbc.sp());
        EXPECT(0x12b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03BC
        gbc.setState(0x789b, 0xdac6, 0x650, 0x504b, 0xab50, 0xc2b2, 0x0, 0x0);
        gbc.writeMem(0x789b, { 0xda, 0x7d, 0xb0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdac6, gbc.sp());
        EXPECT(0xb07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03BD
        gbc.setState(0xbb3d, 0x692, 0x8fd0, 0xccfb, 0xc514, 0x326e, 0x1, 0x1);
        gbc.writeMem(0xbb3d, { 0xda, 0xf6, 0x60 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x692, gbc.sp());
        EXPECT(0x60f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbb3d));
        EXPECT(0xf6, gbc.readMem(0xbb3e));
        EXPECT(0x60, gbc.readMem(0xbb3f));
        // DA 03BE
        gbc.setState(0xc3f8, 0xd078, 0x87d0, 0x6eea, 0xcde8, 0x58b4, 0x1, 0x1);
        gbc.writeMem(0xc3f8, { 0xda, 0x36, 0xd7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd078, gbc.sp());
        EXPECT(0xd736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc3f8));
        EXPECT(0x36, gbc.readMem(0xc3f9));
        EXPECT(0xd7, gbc.readMem(0xc3fa));
        // DA 03BF
        gbc.setState(0x837, 0x3f5c, 0x70d0, 0x72bd, 0xb050, 0xf670, 0x1, 0x0);
        gbc.writeMem(0x837, { 0xda, 0x88, 0x33 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3f5c, gbc.sp());
        EXPECT(0x3388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03C0
        gbc.setState(0xcbfa, 0x8b35, 0xf150, 0xe88a, 0xe39d, 0x36ee, 0x1, 0x0);
        gbc.writeMem(0xcbfa, { 0xda, 0xe5, 0x7a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8b35, gbc.sp());
        EXPECT(0x7ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcbfa));
        EXPECT(0xe5, gbc.readMem(0xcbfb));
        EXPECT(0x7a, gbc.readMem(0xcbfc));
        // DA 03C1
        gbc.setState(0xb823, 0x71b7, 0xc0e0, 0x5e33, 0x2089, 0xa429, 0x0, 0x0);
        gbc.writeMem(0xb823, { 0xda, 0x18, 0x7f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x71b7, gbc.sp());
        EXPECT(0xb826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb823));
        EXPECT(0x18, gbc.readMem(0xb824));
        EXPECT(0x7f, gbc.readMem(0xb825));
        // DA 03C2
        gbc.setState(0xbe93, 0xf715, 0x5ff0, 0xcfd6, 0x8947, 0x2ef9, 0x1, 0x0);
        gbc.writeMem(0xbe93, { 0xda, 0xc7, 0xfb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf715, gbc.sp());
        EXPECT(0xfbc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbe93));
        EXPECT(0xc7, gbc.readMem(0xbe94));
        EXPECT(0xfb, gbc.readMem(0xbe95));
        // DA 03C3
        gbc.setState(0x9ecb, 0x70da, 0x3fb0, 0xe94, 0x931, 0xd618, 0x1, 0x1);
        gbc.writeMem(0x9ecb, { 0xda, 0xae, 0xaf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x70da, gbc.sp());
        EXPECT(0xafae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9ecb));
        EXPECT(0xae, gbc.readMem(0x9ecc));
        EXPECT(0xaf, gbc.readMem(0x9ecd));
        // DA 03C4
        gbc.setState(0x14c2, 0x19, 0x8da0, 0xbe39, 0x96df, 0xb85c, 0x1, 0x1);
        gbc.writeMem(0x14c2, { 0xda, 0x69, 0xa4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x19, gbc.sp());
        EXPECT(0x14c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03C5
        gbc.setState(0x19f0, 0x3a8f, 0x46e0, 0x8c52, 0xaa5c, 0x26da, 0x1, 0x1);
        gbc.writeMem(0x19f0, { 0xda, 0x65, 0xbc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3a8f, gbc.sp());
        EXPECT(0x19f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03C6
        gbc.setState(0x5092, 0x9d5c, 0xde50, 0x4bed, 0x383e, 0xc679, 0x1, 0x0);
        gbc.writeMem(0x5092, { 0xda, 0x47, 0x71 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9d5c, gbc.sp());
        EXPECT(0x7147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03C7
        gbc.setState(0xaf14, 0xe572, 0x91b0, 0x9de7, 0x4922, 0x6461, 0x1, 0x0);
        gbc.writeMem(0xaf14, { 0xda, 0x3b, 0x72 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe572, gbc.sp());
        EXPECT(0x723b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaf14));
        EXPECT(0x3b, gbc.readMem(0xaf15));
        EXPECT(0x72, gbc.readMem(0xaf16));
        // DA 03C8
        gbc.setState(0x98b1, 0x846, 0x2a90, 0x70e, 0x840c, 0xb6b1, 0x1, 0x1);
        gbc.writeMem(0x98b1, { 0xda, 0x1f, 0x88 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x846, gbc.sp());
        EXPECT(0x881f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x98b1));
        EXPECT(0x1f, gbc.readMem(0x98b2));
        EXPECT(0x88, gbc.readMem(0x98b3));
        // DA 03C9
        gbc.setState(0xc8fd, 0x791e, 0x33b0, 0xdc16, 0x685b, 0x2c95, 0x1, 0x1);
        gbc.writeMem(0xc8fd, { 0xda, 0xa, 0x8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x791e, gbc.sp());
        EXPECT(0x80a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc8fd));
        EXPECT(0xa, gbc.readMem(0xc8fe));
        EXPECT(0x8, gbc.readMem(0xc8ff));
        // DA 03CA
        gbc.setState(0x7e00, 0xf08c, 0xe730, 0x4422, 0x7aa, 0x9ec0, 0x0, 0x1);
        gbc.writeMem(0x7e00, { 0xda, 0xe9, 0x8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf08c, gbc.sp());
        EXPECT(0x8e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03CB
        gbc.setState(0xe873, 0x1227, 0x3280, 0xb595, 0xef76, 0xb21d, 0x0, 0x1);
        gbc.writeMem(0xe873, { 0xda, 0x32, 0xb6 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1227, gbc.sp());
        EXPECT(0xe876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe873));
        EXPECT(0x32, gbc.readMem(0xe874));
        EXPECT(0xb6, gbc.readMem(0xe875));
        // DA 03CC
        gbc.setState(0xb, 0xab30, 0x2920, 0x335c, 0xebed, 0xa5b0, 0x1, 0x1);
        gbc.writeMem(0xb, { 0xda, 0xd9, 0xb5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xab30, gbc.sp());
        EXPECT(0xe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03CD
        gbc.setState(0x9f43, 0xe129, 0x2490, 0xd60b, 0x5ced, 0x678e, 0x0, 0x0);
        gbc.writeMem(0x9f43, { 0xda, 0x55, 0xa2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe129, gbc.sp());
        EXPECT(0xa255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9f43));
        EXPECT(0x55, gbc.readMem(0x9f44));
        EXPECT(0xa2, gbc.readMem(0x9f45));
        // DA 03CF
        gbc.setState(0x99c6, 0xfc92, 0x80e0, 0x89ee, 0x24ae, 0x2b77, 0x1, 0x1);
        gbc.writeMem(0x99c6, { 0xda, 0x64, 0x33 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfc92, gbc.sp());
        EXPECT(0x99c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x99c6));
        EXPECT(0x64, gbc.readMem(0x99c7));
        EXPECT(0x33, gbc.readMem(0x99c8));
        // DA 03D1
        gbc.setState(0x743c, 0x54bf, 0xdd40, 0x6ccd, 0xedca, 0x9b5b, 0x1, 0x0);
        gbc.writeMem(0x743c, { 0xda, 0x70, 0x74 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x54bf, gbc.sp());
        EXPECT(0x743f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03D2
        gbc.setState(0x85a4, 0x54c, 0xc510, 0x1123, 0xefbf, 0xf289, 0x1, 0x1);
        gbc.writeMem(0x85a4, { 0xda, 0xf5, 0xb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x54c, gbc.sp());
        EXPECT(0xbf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x85a4));
        EXPECT(0xf5, gbc.readMem(0x85a5));
        EXPECT(0xb, gbc.readMem(0x85a6));
        // DA 03D3
        gbc.setState(0x2858, 0xc605, 0x4290, 0xae3e, 0xf658, 0x7c74, 0x1, 0x0);
        gbc.writeMem(0x2858, { 0xda, 0x4c, 0x6d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc605, gbc.sp());
        EXPECT(0x6d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03D4
        gbc.setState(0x1150, 0x313d, 0x5830, 0x7e23, 0xcd9e, 0xa1c4, 0x0, 0x1);
        gbc.writeMem(0x1150, { 0xda, 0xc9, 0xf });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x313d, gbc.sp());
        EXPECT(0xfc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03D5
        gbc.setState(0x34f3, 0x34ec, 0xa9a0, 0xf609, 0x395d, 0x2d0d, 0x0, 0x1);
        gbc.writeMem(0x34f3, { 0xda, 0xb3, 0xc9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x34ec, gbc.sp());
        EXPECT(0x34f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03D6
        gbc.setState(0xbb0c, 0xe986, 0x4260, 0xb1eb, 0xa7b0, 0x798c, 0x0, 0x1);
        gbc.writeMem(0xbb0c, { 0xda, 0x67, 0xc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe986, gbc.sp());
        EXPECT(0xbb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbb0c));
        EXPECT(0x67, gbc.readMem(0xbb0d));
        EXPECT(0xc, gbc.readMem(0xbb0e));
        // DA 03D7
        gbc.setState(0x6603, 0x2ec7, 0x3c60, 0x68b1, 0x19ff, 0x896e, 0x0, 0x0);
        gbc.writeMem(0x6603, { 0xda, 0x84, 0xfb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2ec7, gbc.sp());
        EXPECT(0x6606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03D8
        gbc.setState(0x9b2, 0xaf48, 0xd4e0, 0x81a1, 0xc0ca, 0x4096, 0x0, 0x0);
        gbc.writeMem(0x9b2, { 0xda, 0x9e, 0x94 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xaf48, gbc.sp());
        EXPECT(0x9b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03D9
        gbc.setState(0xef8, 0x40a9, 0x4900, 0x4626, 0xf4aa, 0xb12d, 0x1, 0x1);
        gbc.writeMem(0xef8, { 0xda, 0x97, 0x10 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x40a9, gbc.sp());
        EXPECT(0xefb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03DA
        gbc.setState(0x3fce, 0x2a3b, 0xe950, 0xdbba, 0x9ffa, 0x37ad, 0x0, 0x1);
        gbc.writeMem(0x3fce, { 0xda, 0x85, 0x4f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2a3b, gbc.sp());
        EXPECT(0x4f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03DB
        gbc.setState(0xc1d3, 0xd322, 0xfb20, 0xf77, 0x3779, 0x199d, 0x1, 0x0);
        gbc.writeMem(0xc1d3, { 0xda, 0x6c, 0x6b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd322, gbc.sp());
        EXPECT(0xc1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc1d3));
        EXPECT(0x6c, gbc.readMem(0xc1d4));
        EXPECT(0x6b, gbc.readMem(0xc1d5));
        // DA 03DC
        gbc.setState(0xac98, 0xd754, 0x78c0, 0x480d, 0x51c5, 0x68e2, 0x1, 0x1);
        gbc.writeMem(0xac98, { 0xda, 0x60, 0x95 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd754, gbc.sp());
        EXPECT(0xac9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xac98));
        EXPECT(0x60, gbc.readMem(0xac99));
        EXPECT(0x95, gbc.readMem(0xac9a));
        // DA 03DD
        gbc.setState(0xc495, 0x1104, 0xc580, 0xfc4a, 0x1bd5, 0xe51f, 0x0, 0x0);
        gbc.writeMem(0xc495, { 0xda, 0x7e, 0x7c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1104, gbc.sp());
        EXPECT(0xc498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc495));
        EXPECT(0x7e, gbc.readMem(0xc496));
        EXPECT(0x7c, gbc.readMem(0xc497));
        // DA 03DE
        gbc.setState(0x71f4, 0x7034, 0x9350, 0x936d, 0x3915, 0xf302, 0x0, 0x0);
        gbc.writeMem(0x71f4, { 0xda, 0x39, 0x36 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7034, gbc.sp());
        EXPECT(0x3639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03DF
        gbc.setState(0x3740, 0x1d72, 0x5fa0, 0x803a, 0x16c1, 0xe4e7, 0x1, 0x0);
        gbc.writeMem(0x3740, { 0xda, 0x63, 0x23 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1d72, gbc.sp());
        EXPECT(0x3743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // DA 03E0
        gbc.setState(0x862b, 0x845a, 0xbb70, 0x3d1a, 0x7726, 0xbaed, 0x1, 0x0);
        gbc.writeMem(0x862b, { 0xda, 0xb8, 0xd9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x845a, gbc.sp());
        EXPECT(0xd9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x862b));
        EXPECT(0xb8, gbc.readMem(0x862c));
        EXPECT(0xd9, gbc.readMem(0x862d));
        // DA 03E1
        gbc.setState(0xd275, 0x9670, 0x3bc0, 0xdc4e, 0x4723, 0xef6a, 0x0, 0x1);
        gbc.writeMem(0xd275, { 0xda, 0x0, 0x96 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9670, gbc.sp());
        EXPECT(0xd278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd275));
        EXPECT(0x0, gbc.readMem(0xd276));
        EXPECT(0x96, gbc.readMem(0xd277));
        // DA 03E2
        gbc.setState(0xb5bf, 0xa237, 0x3cf0, 0x4bd7, 0x6c2e, 0x9665, 0x0, 0x0);
        gbc.writeMem(0xb5bf, { 0xda, 0x94, 0x2b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa237, gbc.sp());
        EXPECT(0x2b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb5bf));
        EXPECT(0x94, gbc.readMem(0xb5c0));
        EXPECT(0x2b, gbc.readMem(0xb5c1));
        // DA 03E3
        gbc.setState(0x902e, 0x834a, 0xda10, 0x4c68, 0x26ce, 0xcea2, 0x1, 0x0);
        gbc.writeMem(0x902e, { 0xda, 0x31, 0xb6 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x834a, gbc.sp());
        EXPECT(0xb631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x902e));
        EXPECT(0x31, gbc.readMem(0x902f));
        EXPECT(0xb6, gbc.readMem(0x9030));
        // DA 03E4
        gbc.setState(0xb9a7, 0xc356, 0xa130, 0xeac3, 0xcc3d, 0x4201, 0x1, 0x0);
        gbc.writeMem(0xb9a7, { 0xda, 0x8e, 0xdf });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc356, gbc.sp());
        EXPECT(0xdf8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb9a7));
        EXPECT(0x8e, gbc.readMem(0xb9a8));
        EXPECT(0xdf, gbc.readMem(0xb9a9));
        // DA 03E5
        gbc.setState(0x2f31, 0xd91d, 0x4090, 0x1061, 0x6165, 0x335, 0x1, 0x0);
        gbc.writeMem(0x2f31, { 0xda, 0x7b, 0xbd });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd91d, gbc.sp());
        EXPECT(0xbd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // DA 03E6
        gbc.setState(0xdd7b, 0x6396, 0x6320, 0x96e9, 0xf09a, 0x9403, 0x1, 0x0);
        gbc.writeMem(0xdd7b, { 0xda, 0xf2, 0x99 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6396, gbc.sp());
        EXPECT(0xdd7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xdd7b));
        EXPECT(0xf2, gbc.readMem(0xdd7c));
        EXPECT(0x99, gbc.readMem(0xdd7d));
        // DA 03E7
        gbc.setState(0xc9de, 0x896, 0x2a60, 0xde24, 0x69f1, 0xc120, 0x0, 0x1);
        gbc.writeMem(0xc9de, { 0xda, 0xbf, 0x90 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x896, gbc.sp());
        EXPECT(0xc9e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc9de));
        EXPECT(0xbf, gbc.readMem(0xc9df));
        EXPECT(0x90, gbc.readMem(0xc9e0));
    }
