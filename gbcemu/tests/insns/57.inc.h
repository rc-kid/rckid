    TEST(gbcemu, opcode_57) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 57 0000
        gbc.setState(0x9345, 0xfbb, 0x3be0, 0x1b9d, 0xa634, 0xd24a, 0x1, 0x1);
        gbc.writeMem(0x9345, { 0x57 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfbb, gbc.sp());
        EXPECT(0x9346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9345));
        // 57 0001
        gbc.setState(0xc397, 0xa643, 0xd550, 0x9fca, 0xcd18, 0x2608, 0x0, 0x0);
        gbc.writeMem(0xc397, { 0x57 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa643, gbc.sp());
        EXPECT(0xc398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc397));
        // 57 0002
        gbc.setState(0x7cbe, 0xe542, 0x9020, 0x9b1d, 0x80c2, 0x2d5d, 0x0, 0x0);
        gbc.writeMem(0x7cbe, { 0x57 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe542, gbc.sp());
        EXPECT(0x7cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0003
        gbc.setState(0x7f88, 0x746b, 0xaaf0, 0x39f0, 0x292c, 0x29aa, 0x1, 0x1);
        gbc.writeMem(0x7f88, { 0x57 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x746b, gbc.sp());
        EXPECT(0x7f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0004
        gbc.setState(0xab05, 0x9013, 0xc370, 0xb5eb, 0xa20b, 0xe2c1, 0x0, 0x0);
        gbc.writeMem(0xab05, { 0x57 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9013, gbc.sp());
        EXPECT(0xab06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xab05));
        // 57 0005
        gbc.setState(0xc227, 0xc8e9, 0x1a60, 0x259a, 0xda48, 0x24c7, 0x1, 0x1);
        gbc.writeMem(0xc227, { 0x57 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc8e9, gbc.sp());
        EXPECT(0xc228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc227));
        // 57 0006
        gbc.setState(0x8c64, 0x1a80, 0xe330, 0xc33, 0xd505, 0xc341, 0x0, 0x0);
        gbc.writeMem(0x8c64, { 0x57 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1a80, gbc.sp());
        EXPECT(0x8c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8c64));
        // 57 0007
        gbc.setState(0x8123, 0x8086, 0x42c0, 0x33d9, 0x3062, 0x40eb, 0x1, 0x1);
        gbc.writeMem(0x8123, { 0x57 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8086, gbc.sp());
        EXPECT(0x8124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8123));
        // 57 0008
        gbc.setState(0x4ba0, 0x9c57, 0xb910, 0xda41, 0xb7d3, 0x4f41, 0x1, 0x1);
        gbc.writeMem(0x4ba0, { 0x57 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9c57, gbc.sp());
        EXPECT(0x4ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0009
        gbc.setState(0xd533, 0xafff, 0x7e10, 0x8c14, 0xd6eb, 0xd768, 0x0, 0x1);
        gbc.writeMem(0xd533, { 0x57 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xafff, gbc.sp());
        EXPECT(0xd534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd533));
        // 57 000A
        gbc.setState(0x4eb0, 0xb2d1, 0x1990, 0xf5bf, 0x6389, 0xf99c, 0x0, 0x0);
        gbc.writeMem(0x4eb0, { 0x57 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb2d1, gbc.sp());
        EXPECT(0x4eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 000B
        gbc.setState(0xbcaa, 0xe5cc, 0x7a20, 0x90b4, 0xc4c8, 0x6c68, 0x0, 0x0);
        gbc.writeMem(0xbcaa, { 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe5cc, gbc.sp());
        EXPECT(0xbcab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbcaa));
        // 57 000C
        gbc.setState(0x4b5e, 0x65da, 0x1ee0, 0x767f, 0x26f0, 0x787, 0x0, 0x1);
        gbc.writeMem(0x4b5e, { 0x57 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x65da, gbc.sp());
        EXPECT(0x4b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 000D
        gbc.setState(0x7915, 0xcb57, 0xffc0, 0xf598, 0x80cf, 0xe40f, 0x1, 0x0);
        gbc.writeMem(0x7915, { 0x57 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcb57, gbc.sp());
        EXPECT(0x7916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 000E
        gbc.setState(0xe27d, 0x1b03, 0x9ba0, 0xe266, 0x70c1, 0x7f2d, 0x0, 0x0);
        gbc.writeMem(0xe27d, { 0x57 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1b03, gbc.sp());
        EXPECT(0xe27e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe27d));
        // 57 000F
        gbc.setState(0x211b, 0x5890, 0x80, 0x4e6a, 0x123c, 0x91ea, 0x0, 0x0);
        gbc.writeMem(0x211b, { 0x57 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5890, gbc.sp());
        EXPECT(0x211c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0010
        gbc.setState(0x5574, 0x1951, 0x3850, 0x765e, 0x30f8, 0x55c5, 0x0, 0x0);
        gbc.writeMem(0x5574, { 0x57 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1951, gbc.sp());
        EXPECT(0x5575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0011
        gbc.setState(0x415c, 0xe371, 0x4a70, 0xc987, 0xe179, 0x227f, 0x1, 0x1);
        gbc.writeMem(0x415c, { 0x57 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe371, gbc.sp());
        EXPECT(0x415d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0012
        gbc.setState(0x4a5, 0x5ef9, 0x4c10, 0x7395, 0x6865, 0x85fe, 0x0, 0x1);
        gbc.writeMem(0x4a5, { 0x57 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5ef9, gbc.sp());
        EXPECT(0x4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0013
        gbc.setState(0x82dd, 0x4e50, 0x6160, 0x955b, 0x4660, 0x7715, 0x0, 0x1);
        gbc.writeMem(0x82dd, { 0x57 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4e50, gbc.sp());
        EXPECT(0x82de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x82dd));
        // 57 0014
        gbc.setState(0xb358, 0xda69, 0x3d30, 0x9dda, 0x3bc9, 0x8030, 0x0, 0x0);
        gbc.writeMem(0xb358, { 0x57 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xda69, gbc.sp());
        EXPECT(0xb359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb358));
        // 57 0015
        gbc.setState(0x7d3d, 0x56c8, 0xb9f0, 0xaa33, 0x279a, 0x79ce, 0x0, 0x0);
        gbc.writeMem(0x7d3d, { 0x57 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x56c8, gbc.sp());
        EXPECT(0x7d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0016
        gbc.setState(0x515f, 0xac76, 0xb5f0, 0x6239, 0x73df, 0x300e, 0x1, 0x0);
        gbc.writeMem(0x515f, { 0x57 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xac76, gbc.sp());
        EXPECT(0x5160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0017
        gbc.setState(0x6fb6, 0xf976, 0xa30, 0x8218, 0x93d4, 0x65e2, 0x1, 0x0);
        gbc.writeMem(0x6fb6, { 0x57 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf976, gbc.sp());
        EXPECT(0x6fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0018
        gbc.setState(0x506e, 0x8f5d, 0x7380, 0x2a6, 0x23ff, 0xb900, 0x1, 0x1);
        gbc.writeMem(0x506e, { 0x57 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8f5d, gbc.sp());
        EXPECT(0x506f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0019
        gbc.setState(0x867a, 0x34cc, 0x7060, 0x8800, 0xac39, 0x1290, 0x1, 0x1);
        gbc.writeMem(0x867a, { 0x57 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x34cc, gbc.sp());
        EXPECT(0x867b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x867a));
        // 57 001A
        gbc.setState(0xa0ec, 0x57a5, 0x3b60, 0x7d2f, 0x9cc3, 0xd7bb, 0x0, 0x0);
        gbc.writeMem(0xa0ec, { 0x57 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x57a5, gbc.sp());
        EXPECT(0xa0ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa0ec));
        // 57 001B
        gbc.setState(0x8c94, 0xe8c4, 0x1d10, 0xdbf6, 0xfd8, 0x474d, 0x0, 0x1);
        gbc.writeMem(0x8c94, { 0x57 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe8c4, gbc.sp());
        EXPECT(0x8c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8c94));
        // 57 001C
        gbc.setState(0x55ae, 0xacd3, 0x4440, 0xbf9c, 0xa434, 0xa543, 0x0, 0x0);
        gbc.writeMem(0x55ae, { 0x57 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xacd3, gbc.sp());
        EXPECT(0x55af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 001D
        gbc.setState(0x204c, 0x4dab, 0x8c10, 0xabb9, 0x50f8, 0xceb3, 0x1, 0x1);
        gbc.writeMem(0x204c, { 0x57 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4dab, gbc.sp());
        EXPECT(0x204d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 001E
        gbc.setState(0xe324, 0x4064, 0xd7e0, 0x46d3, 0xe2f0, 0xe835, 0x1, 0x0);
        gbc.writeMem(0xe324, { 0x57 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4064, gbc.sp());
        EXPECT(0xe325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe324));
        // 57 001F
        gbc.setState(0xac5b, 0x5469, 0x4040, 0x2126, 0xb690, 0xefdc, 0x1, 0x0);
        gbc.writeMem(0xac5b, { 0x57 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5469, gbc.sp());
        EXPECT(0xac5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xac5b));
        // 57 0020
        gbc.setState(0x5567, 0xd5d1, 0x150, 0xe151, 0x7ccd, 0x5bd2, 0x1, 0x0);
        gbc.writeMem(0x5567, { 0x57 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd5d1, gbc.sp());
        EXPECT(0x5568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0021
        gbc.setState(0xff5, 0x7111, 0xda00, 0xe98f, 0xa596, 0x1299, 0x1, 0x1);
        gbc.writeMem(0xff5, { 0x57 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7111, gbc.sp());
        EXPECT(0xff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0022
        gbc.setState(0x1035, 0x3c93, 0xb650, 0x5d7b, 0x911e, 0x7a90, 0x0, 0x1);
        gbc.writeMem(0x1035, { 0x57 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3c93, gbc.sp());
        EXPECT(0x1036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0023
        gbc.setState(0x475d, 0xd27b, 0x91c0, 0x25e7, 0x8c0c, 0x9dc0, 0x0, 0x0);
        gbc.writeMem(0x475d, { 0x57 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd27b, gbc.sp());
        EXPECT(0x475e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0024
        gbc.setState(0x6e40, 0x6faf, 0xedf0, 0xd33c, 0x60cb, 0x7537, 0x1, 0x0);
        gbc.writeMem(0x6e40, { 0x57 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6faf, gbc.sp());
        EXPECT(0x6e41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0025
        gbc.setState(0x7d0c, 0x10f7, 0x8130, 0x6fdf, 0xaab5, 0xb227, 0x0, 0x1);
        gbc.writeMem(0x7d0c, { 0x57 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x10f7, gbc.sp());
        EXPECT(0x7d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0026
        gbc.setState(0xd54f, 0x3817, 0x8520, 0x664, 0x9f06, 0x4c3, 0x0, 0x0);
        gbc.writeMem(0xd54f, { 0x57 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3817, gbc.sp());
        EXPECT(0xd550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd54f));
        // 57 0027
        gbc.setState(0x9ab9, 0x468e, 0xde20, 0xd4d4, 0x892d, 0x9c37, 0x1, 0x1);
        gbc.writeMem(0x9ab9, { 0x57 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x468e, gbc.sp());
        EXPECT(0x9aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9ab9));
        // 57 0028
        gbc.setState(0x437d, 0xa0b9, 0x2250, 0xb600, 0x6c17, 0x2eb1, 0x1, 0x0);
        gbc.writeMem(0x437d, { 0x57 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa0b9, gbc.sp());
        EXPECT(0x437e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0029
        gbc.setState(0xc625, 0x7ab, 0xf020, 0xfb84, 0x7f5f, 0x79e2, 0x1, 0x1);
        gbc.writeMem(0xc625, { 0x57 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7ab, gbc.sp());
        EXPECT(0xc626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc625));
        // 57 002A
        gbc.setState(0x71c2, 0x15e1, 0x5eb0, 0x8a61, 0xd25, 0xf6da, 0x1, 0x0);
        gbc.writeMem(0x71c2, { 0x57 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x15e1, gbc.sp());
        EXPECT(0x71c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 002B
        gbc.setState(0x899b, 0xb83b, 0x3f90, 0xecaf, 0x40e3, 0x235d, 0x0, 0x0);
        gbc.writeMem(0x899b, { 0x57 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb83b, gbc.sp());
        EXPECT(0x899c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x899b));
        // 57 002C
        gbc.setState(0xad20, 0x556f, 0xa500, 0x4277, 0xa66e, 0x857, 0x1, 0x1);
        gbc.writeMem(0xad20, { 0x57 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x556f, gbc.sp());
        EXPECT(0xad21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xad20));
        // 57 002D
        gbc.setState(0x75f4, 0xa181, 0xdd80, 0x46fe, 0x84de, 0xd274, 0x1, 0x1);
        gbc.writeMem(0x75f4, { 0x57 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa181, gbc.sp());
        EXPECT(0x75f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 002E
        gbc.setState(0x156e, 0x699e, 0xa350, 0xe14, 0xfa6b, 0x7025, 0x0, 0x1);
        gbc.writeMem(0x156e, { 0x57 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x699e, gbc.sp());
        EXPECT(0x156f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 002F
        gbc.setState(0x7d6e, 0x6d7c, 0x2770, 0x1be9, 0x46a6, 0x4126, 0x1, 0x0);
        gbc.writeMem(0x7d6e, { 0x57 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6d7c, gbc.sp());
        EXPECT(0x7d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0030
        gbc.setState(0x4f09, 0x1141, 0xed80, 0x575b, 0x6f0f, 0x1900, 0x1, 0x0);
        gbc.writeMem(0x4f09, { 0x57 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1141, gbc.sp());
        EXPECT(0x4f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0031
        gbc.setState(0x102, 0xbd63, 0x3040, 0x3be5, 0x1b99, 0xf9fc, 0x0, 0x1);
        gbc.writeMem(0x102, { 0x57 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbd63, gbc.sp());
        EXPECT(0x103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0032
        gbc.setState(0x559b, 0xc140, 0xa4b0, 0x3e1a, 0xba13, 0x1ca2, 0x0, 0x0);
        gbc.writeMem(0x559b, { 0x57 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc140, gbc.sp());
        EXPECT(0x559c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0034
        gbc.setState(0x19fb, 0x6eb3, 0x3bc0, 0x558e, 0x4b27, 0xacac, 0x0, 0x1);
        gbc.writeMem(0x19fb, { 0x57 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6eb3, gbc.sp());
        EXPECT(0x19fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0035
        gbc.setState(0xa93f, 0x2324, 0xd9f0, 0x266, 0x42b4, 0x1ccc, 0x1, 0x0);
        gbc.writeMem(0xa93f, { 0x57 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2324, gbc.sp());
        EXPECT(0xa940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa93f));
        // 57 0036
        gbc.setState(0xad38, 0x5363, 0xd7a0, 0xc10, 0x2d3e, 0x47b7, 0x1, 0x1);
        gbc.writeMem(0xad38, { 0x57 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5363, gbc.sp());
        EXPECT(0xad39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xad38));
        // 57 0037
        gbc.setState(0x948, 0xfdc1, 0xeaf0, 0x5c6d, 0x245b, 0x76f5, 0x1, 0x0);
        gbc.writeMem(0x948, { 0x57 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfdc1, gbc.sp());
        EXPECT(0x949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0038
        gbc.setState(0xe447, 0xbb62, 0x4000, 0x1b5e, 0xf549, 0x2f88, 0x0, 0x0);
        gbc.writeMem(0xe447, { 0x57 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbb62, gbc.sp());
        EXPECT(0xe448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe447));
        // 57 0039
        gbc.setState(0x35a7, 0x4fac, 0x6c60, 0xcd56, 0xa18a, 0xafac, 0x1, 0x0);
        gbc.writeMem(0x35a7, { 0x57 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4fac, gbc.sp());
        EXPECT(0x35a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 003A
        gbc.setState(0x3167, 0x4486, 0x7d40, 0xb727, 0x2fe1, 0x84a0, 0x1, 0x0);
        gbc.writeMem(0x3167, { 0x57 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4486, gbc.sp());
        EXPECT(0x3168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 003B
        gbc.setState(0xa5a7, 0x2e53, 0x19b0, 0xe3a9, 0xd1ee, 0x6984, 0x1, 0x1);
        gbc.writeMem(0xa5a7, { 0x57 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2e53, gbc.sp());
        EXPECT(0xa5a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa5a7));
        // 57 003C
        gbc.setState(0x894a, 0x6b4a, 0x5c0, 0x3e42, 0x51b9, 0x1173, 0x0, 0x1);
        gbc.writeMem(0x894a, { 0x57 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6b4a, gbc.sp());
        EXPECT(0x894b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x894a));
        // 57 003D
        gbc.setState(0xdea5, 0x29e3, 0xb750, 0x4ef7, 0x79a4, 0x3bab, 0x0, 0x1);
        gbc.writeMem(0xdea5, { 0x57 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x29e3, gbc.sp());
        EXPECT(0xdea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdea5));
        // 57 003E
        gbc.setState(0xdff3, 0x30b4, 0xa700, 0x1d3e, 0x9ee9, 0x4034, 0x1, 0x0);
        gbc.writeMem(0xdff3, { 0x57 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x30b4, gbc.sp());
        EXPECT(0xdff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdff3));
        // 57 003F
        gbc.setState(0xbb45, 0xf04d, 0xf1e0, 0xd637, 0xd3cb, 0x8f18, 0x0, 0x0);
        gbc.writeMem(0xbb45, { 0x57 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf04d, gbc.sp());
        EXPECT(0xbb46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbb45));
        // 57 0040
        gbc.setState(0x5a38, 0x852f, 0xb6d0, 0x2abe, 0xe7e5, 0xe56f, 0x1, 0x1);
        gbc.writeMem(0x5a38, { 0x57 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x852f, gbc.sp());
        EXPECT(0x5a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0041
        gbc.setState(0x41f7, 0x77e1, 0x3670, 0x8051, 0xe357, 0xb76f, 0x0, 0x1);
        gbc.writeMem(0x41f7, { 0x57 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x77e1, gbc.sp());
        EXPECT(0x41f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0042
        gbc.setState(0x666, 0x218e, 0xc3d0, 0xb466, 0x22d2, 0xd109, 0x0, 0x1);
        gbc.writeMem(0x666, { 0x57 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x218e, gbc.sp());
        EXPECT(0x667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0043
        gbc.setState(0xb807, 0x69f, 0xfed0, 0xb0b5, 0x5c07, 0xd98a, 0x0, 0x1);
        gbc.writeMem(0xb807, { 0x57 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x69f, gbc.sp());
        EXPECT(0xb808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb807));
        // 57 0045
        gbc.setState(0xd549, 0xd744, 0x71d0, 0x666b, 0xddd0, 0x5234, 0x1, 0x0);
        gbc.writeMem(0xd549, { 0x57 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd744, gbc.sp());
        EXPECT(0xd54a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd549));
        // 57 0046
        gbc.setState(0x2e4, 0x9d5f, 0x3e30, 0xcfd2, 0x58ff, 0x401e, 0x0, 0x1);
        gbc.writeMem(0x2e4, { 0x57 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9d5f, gbc.sp());
        EXPECT(0x2e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0047
        gbc.setState(0x171e, 0x7d93, 0xbfb0, 0x6b05, 0x7db8, 0x6282, 0x0, 0x1);
        gbc.writeMem(0x171e, { 0x57 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7d93, gbc.sp());
        EXPECT(0x171f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0048
        gbc.setState(0xcf3a, 0xde22, 0xebc0, 0x9af9, 0x3796, 0xf7fa, 0x0, 0x0);
        gbc.writeMem(0xcf3a, { 0x57 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xde22, gbc.sp());
        EXPECT(0xcf3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcf3a));
        // 57 0049
        gbc.setState(0xcbb9, 0x2277, 0xf6f0, 0x9fd9, 0x9e99, 0xf8c4, 0x1, 0x1);
        gbc.writeMem(0xcbb9, { 0x57 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2277, gbc.sp());
        EXPECT(0xcbba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcbb9));
        // 57 004A
        gbc.setState(0x7216, 0x1618, 0x810, 0xc2bd, 0x7ed, 0x9140, 0x0, 0x1);
        gbc.writeMem(0x7216, { 0x57 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1618, gbc.sp());
        EXPECT(0x7217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 004B
        gbc.setState(0xed4, 0xf1b3, 0x95e0, 0x55e5, 0xbbf4, 0xded, 0x0, 0x0);
        gbc.writeMem(0xed4, { 0x57 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf1b3, gbc.sp());
        EXPECT(0xed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 004C
        gbc.setState(0x9711, 0xcd71, 0x7760, 0xa8a3, 0x47fa, 0xfaab, 0x1, 0x0);
        gbc.writeMem(0x9711, { 0x57 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcd71, gbc.sp());
        EXPECT(0x9712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9711));
        // 57 004D
        gbc.setState(0x528c, 0xdd35, 0x4ba0, 0x39b7, 0x6870, 0xd2d3, 0x1, 0x1);
        gbc.writeMem(0x528c, { 0x57 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdd35, gbc.sp());
        EXPECT(0x528d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0050
        gbc.setState(0xcb06, 0xed20, 0x9fb0, 0x174b, 0x6023, 0xb4c7, 0x1, 0x0);
        gbc.writeMem(0xcb06, { 0x57 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xed20, gbc.sp());
        EXPECT(0xcb07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcb06));
        // 57 0051
        gbc.setState(0x4bce, 0xaea8, 0xd8c0, 0xd730, 0xb1c3, 0x674d, 0x1, 0x0);
        gbc.writeMem(0x4bce, { 0x57 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xaea8, gbc.sp());
        EXPECT(0x4bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0052
        gbc.setState(0x7bbc, 0xb95e, 0x7b10, 0x1df4, 0xe87, 0x3d5e, 0x1, 0x0);
        gbc.writeMem(0x7bbc, { 0x57 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb95e, gbc.sp());
        EXPECT(0x7bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0053
        gbc.setState(0xdb1b, 0x3668, 0xd180, 0x3b36, 0xa2f9, 0x648a, 0x1, 0x1);
        gbc.writeMem(0xdb1b, { 0x57 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3668, gbc.sp());
        EXPECT(0xdb1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdb1b));
        // 57 0054
        gbc.setState(0x2c25, 0xfa6c, 0x7500, 0xb856, 0x7a8b, 0xcf6d, 0x0, 0x0);
        gbc.writeMem(0x2c25, { 0x57 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfa6c, gbc.sp());
        EXPECT(0x2c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0055
        gbc.setState(0x7efa, 0x5f65, 0x79d0, 0xc877, 0x7e18, 0x3ca8, 0x0, 0x0);
        gbc.writeMem(0x7efa, { 0x57 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5f65, gbc.sp());
        EXPECT(0x7efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0056
        gbc.setState(0xe314, 0xce98, 0x1a90, 0x8c7d, 0xb073, 0xc363, 0x0, 0x0);
        gbc.writeMem(0xe314, { 0x57 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xce98, gbc.sp());
        EXPECT(0xe315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe314));
        // 57 0057
        gbc.setState(0x8d11, 0x5a2d, 0x19f0, 0x6bda, 0x417, 0xd379, 0x1, 0x0);
        gbc.writeMem(0x8d11, { 0x57 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5a2d, gbc.sp());
        EXPECT(0x8d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8d11));
        // 57 0058
        gbc.setState(0xd7cd, 0x9cef, 0x4bf0, 0xc8b3, 0xaffd, 0x1480, 0x0, 0x0);
        gbc.writeMem(0xd7cd, { 0x57 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9cef, gbc.sp());
        EXPECT(0xd7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd7cd));
        // 57 0059
        gbc.setState(0xd6d4, 0xed01, 0x1a80, 0x193c, 0x18c6, 0x2f2a, 0x0, 0x1);
        gbc.writeMem(0xd6d4, { 0x57 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xed01, gbc.sp());
        EXPECT(0xd6d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd6d4));
        // 57 005A
        gbc.setState(0x2e4d, 0x76eb, 0x1800, 0x3023, 0xd36f, 0x160, 0x0, 0x1);
        gbc.writeMem(0x2e4d, { 0x57 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x76eb, gbc.sp());
        EXPECT(0x2e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 005B
        gbc.setState(0x97b7, 0xa7b8, 0xf640, 0x6dda, 0xa3f9, 0x3bf, 0x1, 0x0);
        gbc.writeMem(0x97b7, { 0x57 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa7b8, gbc.sp());
        EXPECT(0x97b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x97b7));
        // 57 005C
        gbc.setState(0x3d4f, 0x74f5, 0x6840, 0x6b99, 0xd6f0, 0x7d1a, 0x1, 0x0);
        gbc.writeMem(0x3d4f, { 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x74f5, gbc.sp());
        EXPECT(0x3d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 005D
        gbc.setState(0x7087, 0x2782, 0x3c60, 0x4bcd, 0xe209, 0x44ba, 0x0, 0x1);
        gbc.writeMem(0x7087, { 0x57 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2782, gbc.sp());
        EXPECT(0x7088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 005E
        gbc.setState(0x1842, 0xdefc, 0xf6b0, 0x6d5c, 0xeb31, 0xf302, 0x1, 0x1);
        gbc.writeMem(0x1842, { 0x57 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdefc, gbc.sp());
        EXPECT(0x1843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 005F
        gbc.setState(0x6ce8, 0xeadd, 0xb210, 0x824e, 0xcfbb, 0xf9b4, 0x1, 0x1);
        gbc.writeMem(0x6ce8, { 0x57 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xeadd, gbc.sp());
        EXPECT(0x6ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0060
        gbc.setState(0x1c19, 0xa07f, 0xf8e0, 0xf3b3, 0x1ce3, 0x8c75, 0x0, 0x0);
        gbc.writeMem(0x1c19, { 0x57 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa07f, gbc.sp());
        EXPECT(0x1c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0061
        gbc.setState(0xb50, 0x65fe, 0xfad0, 0x159e, 0x9d08, 0x16ef, 0x1, 0x1);
        gbc.writeMem(0xb50, { 0x57 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x65fe, gbc.sp());
        EXPECT(0xb51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0062
        gbc.setState(0xc23, 0xffd6, 0x8350, 0x1d3b, 0x7871, 0xd5ea, 0x1, 0x0);
        gbc.writeMem(0xc23, { 0x57 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xffd6, gbc.sp());
        EXPECT(0xc24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0063
        gbc.setState(0x332, 0x286, 0xdf70, 0x3d54, 0x3dc8, 0x9705, 0x1, 0x1);
        gbc.writeMem(0x332, { 0x57 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x286, gbc.sp());
        EXPECT(0x333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0064
        gbc.setState(0x5a69, 0x66cb, 0x6350, 0x4bae, 0xd5bd, 0x130b, 0x0, 0x1);
        gbc.writeMem(0x5a69, { 0x57 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x66cb, gbc.sp());
        EXPECT(0x5a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0065
        gbc.setState(0xb820, 0xfbc7, 0x1200, 0xfd60, 0xa093, 0x9c85, 0x0, 0x0);
        gbc.writeMem(0xb820, { 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfbc7, gbc.sp());
        EXPECT(0xb821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb820));
        // 57 0066
        gbc.setState(0xf94, 0x8e11, 0x4690, 0xba58, 0xf95d, 0x71b6, 0x1, 0x1);
        gbc.writeMem(0xf94, { 0x57 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8e11, gbc.sp());
        EXPECT(0xf95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0067
        gbc.setState(0x7e19, 0x1c71, 0xc970, 0x2ef, 0x35db, 0x2d2a, 0x0, 0x0);
        gbc.writeMem(0x7e19, { 0x57 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1c71, gbc.sp());
        EXPECT(0x7e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0068
        gbc.setState(0x3295, 0xc4, 0x95c0, 0x675e, 0xef69, 0x5839, 0x0, 0x0);
        gbc.writeMem(0x3295, { 0x57 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc4, gbc.sp());
        EXPECT(0x3296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0069
        gbc.setState(0xe37f, 0x4cd4, 0xd8d0, 0x16fe, 0x2c0c, 0x6358, 0x1, 0x0);
        gbc.writeMem(0xe37f, { 0x57 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4cd4, gbc.sp());
        EXPECT(0xe380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe37f));
        // 57 006A
        gbc.setState(0x3e95, 0xf0aa, 0xbf0, 0x1278, 0xa422, 0x97a1, 0x1, 0x1);
        gbc.writeMem(0x3e95, { 0x57 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf0aa, gbc.sp());
        EXPECT(0x3e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 006B
        gbc.setState(0x15bf, 0x6e7, 0xef80, 0x9c93, 0xc14d, 0xe51a, 0x1, 0x0);
        gbc.writeMem(0x15bf, { 0x57 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6e7, gbc.sp());
        EXPECT(0x15c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 006C
        gbc.setState(0x18c4, 0xf3f0, 0x8ca0, 0xb799, 0x6bbc, 0xd8db, 0x1, 0x1);
        gbc.writeMem(0x18c4, { 0x57 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf3f0, gbc.sp());
        EXPECT(0x18c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 006D
        gbc.setState(0xe77a, 0x79d7, 0x6ff0, 0x63a7, 0x5b2f, 0xab1, 0x0, 0x1);
        gbc.writeMem(0xe77a, { 0x57 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x79d7, gbc.sp());
        EXPECT(0xe77b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe77a));
        // 57 006E
        gbc.setState(0x1899, 0x7d8a, 0x1010, 0x7c0, 0x7f5c, 0xab47, 0x0, 0x0);
        gbc.writeMem(0x1899, { 0x57 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7d8a, gbc.sp());
        EXPECT(0x189a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 006F
        gbc.setState(0x6a8a, 0x5fb1, 0x1680, 0xfc03, 0xcf7d, 0x7044, 0x0, 0x0);
        gbc.writeMem(0x6a8a, { 0x57 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5fb1, gbc.sp());
        EXPECT(0x6a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0070
        gbc.setState(0x5a30, 0x6722, 0x9250, 0xcc67, 0x360b, 0xdb9c, 0x0, 0x0);
        gbc.writeMem(0x5a30, { 0x57 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6722, gbc.sp());
        EXPECT(0x5a31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0071
        gbc.setState(0xd80b, 0x2821, 0x3a90, 0xd01, 0xb836, 0x83d3, 0x0, 0x1);
        gbc.writeMem(0xd80b, { 0x57 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2821, gbc.sp());
        EXPECT(0xd80c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd80b));
        // 57 0072
        gbc.setState(0xcd38, 0x9ded, 0x2330, 0x3cf5, 0x4b6e, 0x8161, 0x0, 0x0);
        gbc.writeMem(0xcd38, { 0x57 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9ded, gbc.sp());
        EXPECT(0xcd39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcd38));
        // 57 0073
        gbc.setState(0x38bb, 0x3e0d, 0xdf60, 0xb196, 0xd0ff, 0xaae0, 0x0, 0x0);
        gbc.writeMem(0x38bb, { 0x57 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3e0d, gbc.sp());
        EXPECT(0x38bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0074
        gbc.setState(0x8fed, 0xad98, 0x9d00, 0x1a30, 0xfb9b, 0xabc9, 0x0, 0x0);
        gbc.writeMem(0x8fed, { 0x57 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xad98, gbc.sp());
        EXPECT(0x8fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8fed));
        // 57 0075
        gbc.setState(0x3c89, 0xdf39, 0x2a40, 0x99a6, 0x442, 0xdcfc, 0x1, 0x0);
        gbc.writeMem(0x3c89, { 0x57 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdf39, gbc.sp());
        EXPECT(0x3c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0076
        gbc.setState(0xd25, 0xccd3, 0xd350, 0x55bb, 0xa41c, 0x28a7, 0x1, 0x1);
        gbc.writeMem(0xd25, { 0x57 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xccd3, gbc.sp());
        EXPECT(0xd26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0077
        gbc.setState(0x20e2, 0x7a2e, 0x2fb0, 0x45a6, 0x2b03, 0x8401, 0x0, 0x1);
        gbc.writeMem(0x20e2, { 0x57 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7a2e, gbc.sp());
        EXPECT(0x20e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0079
        gbc.setState(0x6d66, 0xa445, 0x3f00, 0x166d, 0xa426, 0xae81, 0x1, 0x0);
        gbc.writeMem(0x6d66, { 0x57 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa445, gbc.sp());
        EXPECT(0x6d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 007A
        gbc.setState(0x6048, 0xcf12, 0xaeb0, 0x33b0, 0xfb63, 0xd29e, 0x1, 0x0);
        gbc.writeMem(0x6048, { 0x57 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcf12, gbc.sp());
        EXPECT(0x6049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 007B
        gbc.setState(0x6a17, 0xd24f, 0xa900, 0xeaa6, 0xbd84, 0x9636, 0x0, 0x0);
        gbc.writeMem(0x6a17, { 0x57 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd24f, gbc.sp());
        EXPECT(0x6a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 007C
        gbc.setState(0x293b, 0x97f8, 0x1660, 0x8679, 0xafc, 0xb0dc, 0x0, 0x1);
        gbc.writeMem(0x293b, { 0x57 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x97f8, gbc.sp());
        EXPECT(0x293c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 007D
        gbc.setState(0x4bfd, 0x2bbb, 0x6820, 0xe6c5, 0x611b, 0x986, 0x1, 0x1);
        gbc.writeMem(0x4bfd, { 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2bbb, gbc.sp());
        EXPECT(0x4bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 007E
        gbc.setState(0xbbb4, 0x9a61, 0x3f50, 0x2bee, 0xa3e6, 0x5572, 0x1, 0x1);
        gbc.writeMem(0xbbb4, { 0x57 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9a61, gbc.sp());
        EXPECT(0xbbb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbbb4));
        // 57 007F
        gbc.setState(0x78a2, 0x61a0, 0xaf30, 0x9784, 0xa4b2, 0x92df, 0x0, 0x1);
        gbc.writeMem(0x78a2, { 0x57 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x61a0, gbc.sp());
        EXPECT(0x78a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0080
        gbc.setState(0x8481, 0xe5bc, 0x6910, 0xdbd2, 0x1d8, 0x8352, 0x0, 0x1);
        gbc.writeMem(0x8481, { 0x57 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe5bc, gbc.sp());
        EXPECT(0x8482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8481));
        // 57 0081
        gbc.setState(0x82f2, 0x4d9a, 0xde80, 0x1425, 0x15d, 0x34c2, 0x1, 0x0);
        gbc.writeMem(0x82f2, { 0x57 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4d9a, gbc.sp());
        EXPECT(0x82f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x82f2));
        // 57 0082
        gbc.setState(0x583a, 0xd9f, 0x1ae0, 0x5f95, 0xcbc4, 0x3ed2, 0x1, 0x0);
        gbc.writeMem(0x583a, { 0x57 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd9f, gbc.sp());
        EXPECT(0x583b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0083
        gbc.setState(0x3f3c, 0x3371, 0x2dc0, 0x2485, 0xc590, 0xea7e, 0x1, 0x0);
        gbc.writeMem(0x3f3c, { 0x57 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3371, gbc.sp());
        EXPECT(0x3f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0084
        gbc.setState(0xab5, 0x4cb0, 0x50b0, 0x2fe7, 0xd86d, 0x38e2, 0x1, 0x1);
        gbc.writeMem(0xab5, { 0x57 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4cb0, gbc.sp());
        EXPECT(0xab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0085
        gbc.setState(0xd408, 0x367, 0x10d0, 0x25fb, 0x3a63, 0x9bdf, 0x0, 0x0);
        gbc.writeMem(0xd408, { 0x57 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x367, gbc.sp());
        EXPECT(0xd409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd408));
        // 57 0086
        gbc.setState(0x2a8f, 0x885d, 0x3790, 0xcf88, 0xf57b, 0xd112, 0x1, 0x1);
        gbc.writeMem(0x2a8f, { 0x57 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x885d, gbc.sp());
        EXPECT(0x2a90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0087
        gbc.setState(0x2aff, 0xede2, 0x4f20, 0x77ef, 0xfe83, 0x937d, 0x1, 0x1);
        gbc.writeMem(0x2aff, { 0x57 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xede2, gbc.sp());
        EXPECT(0x2b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0088
        gbc.setState(0x261f, 0x311e, 0x73d0, 0x6da2, 0x4533, 0x126a, 0x1, 0x1);
        gbc.writeMem(0x261f, { 0x57 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x311e, gbc.sp());
        EXPECT(0x2620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0089
        gbc.setState(0xba3f, 0x69e3, 0xed20, 0xd645, 0x59a5, 0xd2cb, 0x0, 0x1);
        gbc.writeMem(0xba3f, { 0x57 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x69e3, gbc.sp());
        EXPECT(0xba40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xba3f));
        // 57 008A
        gbc.setState(0xc265, 0xb976, 0x9e20, 0x3f0e, 0x921a, 0xc4ce, 0x0, 0x0);
        gbc.writeMem(0xc265, { 0x57 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb976, gbc.sp());
        EXPECT(0xc266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc265));
        // 57 008B
        gbc.setState(0xcc09, 0x24e0, 0x3290, 0x980a, 0x2ff0, 0x532c, 0x1, 0x0);
        gbc.writeMem(0xcc09, { 0x57 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x24e0, gbc.sp());
        EXPECT(0xcc0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcc09));
        // 57 008C
        gbc.setState(0xe8c2, 0xf91d, 0x7a60, 0xc1bf, 0xbb9c, 0x9bcb, 0x0, 0x1);
        gbc.writeMem(0xe8c2, { 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf91d, gbc.sp());
        EXPECT(0xe8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe8c2));
        // 57 008D
        gbc.setState(0x1a48, 0x2c07, 0x1fc0, 0xe49c, 0x5a52, 0x5453, 0x1, 0x0);
        gbc.writeMem(0x1a48, { 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2c07, gbc.sp());
        EXPECT(0x1a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 008E
        gbc.setState(0xd018, 0x255e, 0xd380, 0xcaad, 0x27b9, 0x85ab, 0x0, 0x0);
        gbc.writeMem(0xd018, { 0x57 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x255e, gbc.sp());
        EXPECT(0xd019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd018));
        // 57 008F
        gbc.setState(0x250b, 0x662f, 0xaa00, 0x14d5, 0x5016, 0xa1a0, 0x0, 0x1);
        gbc.writeMem(0x250b, { 0x57 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x662f, gbc.sp());
        EXPECT(0x250c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0090
        gbc.setState(0x4a4f, 0x3e9e, 0x2fe0, 0xc39b, 0xd715, 0x5e69, 0x0, 0x1);
        gbc.writeMem(0x4a4f, { 0x57 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3e9e, gbc.sp());
        EXPECT(0x4a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0091
        gbc.setState(0x21e3, 0x60ec, 0x6280, 0xb78d, 0x9164, 0xaf0b, 0x1, 0x0);
        gbc.writeMem(0x21e3, { 0x57 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x60ec, gbc.sp());
        EXPECT(0x21e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0092
        gbc.setState(0x4993, 0x29e3, 0xe4b0, 0x457e, 0x1499, 0x5e38, 0x1, 0x0);
        gbc.writeMem(0x4993, { 0x57 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x29e3, gbc.sp());
        EXPECT(0x4994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0093
        gbc.setState(0x34ef, 0xd5d9, 0x4540, 0x97d1, 0x1b35, 0x442b, 0x1, 0x1);
        gbc.writeMem(0x34ef, { 0x57 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd5d9, gbc.sp());
        EXPECT(0x34f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0094
        gbc.setState(0xa7ab, 0xed57, 0xe880, 0x5d47, 0xf13, 0xaeb1, 0x1, 0x0);
        gbc.writeMem(0xa7ab, { 0x57 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xed57, gbc.sp());
        EXPECT(0xa7ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa7ab));
        // 57 0095
        gbc.setState(0xeddf, 0xb5db, 0x6da0, 0xb0e6, 0x5d1f, 0x4803, 0x1, 0x0);
        gbc.writeMem(0xeddf, { 0x57 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb5db, gbc.sp());
        EXPECT(0xede0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xeddf));
        // 57 0097
        gbc.setState(0x325, 0xe9bd, 0x29f0, 0xde4c, 0x7cab, 0x11fd, 0x1, 0x0);
        gbc.writeMem(0x325, { 0x57 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe9bd, gbc.sp());
        EXPECT(0x326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0098
        gbc.setState(0xb1b4, 0x6e5b, 0xf320, 0x80b2, 0x92e1, 0x2ff8, 0x0, 0x1);
        gbc.writeMem(0xb1b4, { 0x57 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6e5b, gbc.sp());
        EXPECT(0xb1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb1b4));
        // 57 0099
        gbc.setState(0x19af, 0x356, 0x12a0, 0xdc46, 0x90a9, 0x45da, 0x1, 0x1);
        gbc.writeMem(0x19af, { 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x356, gbc.sp());
        EXPECT(0x19b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 009A
        gbc.setState(0xe429, 0xb5e, 0x49e0, 0x494, 0x5927, 0x5fd0, 0x0, 0x1);
        gbc.writeMem(0xe429, { 0x57 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb5e, gbc.sp());
        EXPECT(0xe42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe429));
        // 57 009B
        gbc.setState(0x5486, 0x523, 0xec50, 0xdbe5, 0x333a, 0xd73f, 0x0, 0x1);
        gbc.writeMem(0x5486, { 0x57 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x523, gbc.sp());
        EXPECT(0x5487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 009C
        gbc.setState(0x80bb, 0xdb91, 0x8ef0, 0x5afc, 0x2878, 0x403b, 0x1, 0x1);
        gbc.writeMem(0x80bb, { 0x57 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdb91, gbc.sp());
        EXPECT(0x80bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x80bb));
        // 57 009D
        gbc.setState(0xbb14, 0x8601, 0x4040, 0xd4a5, 0x9f34, 0x3587, 0x0, 0x0);
        gbc.writeMem(0xbb14, { 0x57 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8601, gbc.sp());
        EXPECT(0xbb15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbb14));
        // 57 009E
        gbc.setState(0x5726, 0x9a6c, 0xd8f0, 0x364d, 0x7150, 0xebdb, 0x1, 0x0);
        gbc.writeMem(0x5726, { 0x57 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9a6c, gbc.sp());
        EXPECT(0x5727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 009F
        gbc.setState(0x12ea, 0x8438, 0xdf80, 0x99dc, 0xcd49, 0x471e, 0x0, 0x1);
        gbc.writeMem(0x12ea, { 0x57 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8438, gbc.sp());
        EXPECT(0x12eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00A0
        gbc.setState(0xe03, 0xea7e, 0xa870, 0xef47, 0x5a32, 0x3a6c, 0x1, 0x0);
        gbc.writeMem(0xe03, { 0x57 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xea7e, gbc.sp());
        EXPECT(0xe04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00A1
        gbc.setState(0x3a2, 0x38e5, 0xdf10, 0xc261, 0x5504, 0xc89a, 0x0, 0x0);
        gbc.writeMem(0x3a2, { 0x57 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x38e5, gbc.sp());
        EXPECT(0x3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00A2
        gbc.setState(0x5953, 0x192a, 0xed20, 0x5b0d, 0x7fb6, 0x18b2, 0x0, 0x1);
        gbc.writeMem(0x5953, { 0x57 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x192a, gbc.sp());
        EXPECT(0x5954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00A3
        gbc.setState(0x94a1, 0xa0f, 0x6d80, 0x6a3a, 0x778e, 0xd11c, 0x0, 0x0);
        gbc.writeMem(0x94a1, { 0x57 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa0f, gbc.sp());
        EXPECT(0x94a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x94a1));
        // 57 00A4
        gbc.setState(0x6886, 0xcdb1, 0x1ce0, 0x9c59, 0x5267, 0x4d1f, 0x1, 0x0);
        gbc.writeMem(0x6886, { 0x57 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcdb1, gbc.sp());
        EXPECT(0x6887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00A5
        gbc.setState(0xefbf, 0xbe3c, 0xcbf0, 0x826d, 0xa1db, 0xa7c0, 0x0, 0x0);
        gbc.writeMem(0xefbf, { 0x57 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbe3c, gbc.sp());
        EXPECT(0xefc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xefbf));
        // 57 00A6
        gbc.setState(0x9666, 0x9053, 0x25c0, 0x195f, 0xd46e, 0x9e17, 0x0, 0x0);
        gbc.writeMem(0x9666, { 0x57 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9053, gbc.sp());
        EXPECT(0x9667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9666));
        // 57 00A7
        gbc.setState(0xc476, 0x9dd0, 0x2d70, 0xc109, 0xfdeb, 0x4272, 0x1, 0x0);
        gbc.writeMem(0xc476, { 0x57 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9dd0, gbc.sp());
        EXPECT(0xc477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc476));
        // 57 00A8
        gbc.setState(0x9cd0, 0x5e5f, 0x4ea0, 0x2ce6, 0xc6e, 0x2923, 0x0, 0x1);
        gbc.writeMem(0x9cd0, { 0x57 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5e5f, gbc.sp());
        EXPECT(0x9cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9cd0));
        // 57 00A9
        gbc.setState(0xd9de, 0xf1eb, 0xe6d0, 0x21bd, 0x4c55, 0x1616, 0x0, 0x0);
        gbc.writeMem(0xd9de, { 0x57 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf1eb, gbc.sp());
        EXPECT(0xd9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd9de));
        // 57 00AA
        gbc.setState(0x92f1, 0x5bff, 0xa840, 0x297f, 0xceb7, 0x1016, 0x1, 0x1);
        gbc.writeMem(0x92f1, { 0x57 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5bff, gbc.sp());
        EXPECT(0x92f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x92f1));
        // 57 00AB
        gbc.setState(0xecf6, 0xeb16, 0x2130, 0x635c, 0xc724, 0xd7f9, 0x1, 0x0);
        gbc.writeMem(0xecf6, { 0x57 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xeb16, gbc.sp());
        EXPECT(0xecf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xecf6));
        // 57 00AC
        gbc.setState(0x42a5, 0xb576, 0xea70, 0xbbc1, 0x33e9, 0xcc6a, 0x0, 0x1);
        gbc.writeMem(0x42a5, { 0x57 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb576, gbc.sp());
        EXPECT(0x42a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00AD
        gbc.setState(0x43cb, 0x266b, 0x8350, 0x148a, 0xf882, 0xdbb1, 0x0, 0x1);
        gbc.writeMem(0x43cb, { 0x57 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x266b, gbc.sp());
        EXPECT(0x43cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00AE
        gbc.setState(0x83f8, 0x4c1a, 0x5af0, 0x7e40, 0x8d72, 0xcb9e, 0x1, 0x1);
        gbc.writeMem(0x83f8, { 0x57 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4c1a, gbc.sp());
        EXPECT(0x83f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x83f8));
        // 57 00AF
        gbc.setState(0x86de, 0x50ba, 0x49a0, 0xa35f, 0x5b0f, 0x1762, 0x1, 0x0);
        gbc.writeMem(0x86de, { 0x57 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x50ba, gbc.sp());
        EXPECT(0x86df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x86de));
        // 57 00B0
        gbc.setState(0xa543, 0xee98, 0xd160, 0x3225, 0x4f5a, 0xa16a, 0x0, 0x1);
        gbc.writeMem(0xa543, { 0x57 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xee98, gbc.sp());
        EXPECT(0xa544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa543));
        // 57 00B1
        gbc.setState(0xc86f, 0xad63, 0x4320, 0xa1da, 0xd8c2, 0x740e, 0x1, 0x1);
        gbc.writeMem(0xc86f, { 0x57 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xad63, gbc.sp());
        EXPECT(0xc870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc86f));
        // 57 00B2
        gbc.setState(0xbe96, 0x97cd, 0x9460, 0xad47, 0x8f73, 0xd249, 0x0, 0x0);
        gbc.writeMem(0xbe96, { 0x57 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x97cd, gbc.sp());
        EXPECT(0xbe97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbe96));
        // 57 00B3
        gbc.setState(0x1919, 0x6ed5, 0x37e0, 0x2359, 0x49f6, 0x1669, 0x0, 0x0);
        gbc.writeMem(0x1919, { 0x57 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6ed5, gbc.sp());
        EXPECT(0x191a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00B4
        gbc.setState(0x704d, 0x4a64, 0x1d50, 0xc038, 0xee1a, 0x1b22, 0x1, 0x1);
        gbc.writeMem(0x704d, { 0x57 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4a64, gbc.sp());
        EXPECT(0x704e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00B5
        gbc.setState(0xb34c, 0x8a50, 0xce60, 0x7d8f, 0xadd3, 0x9ef3, 0x1, 0x1);
        gbc.writeMem(0xb34c, { 0x57 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8a50, gbc.sp());
        EXPECT(0xb34d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb34c));
        // 57 00B6
        gbc.setState(0x70a6, 0x4d3e, 0x6830, 0x95bc, 0x61a8, 0xc26b, 0x1, 0x1);
        gbc.writeMem(0x70a6, { 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4d3e, gbc.sp());
        EXPECT(0x70a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00B7
        gbc.setState(0x9b9f, 0x3b6d, 0xa6c0, 0xf5e, 0xfffc, 0xfa09, 0x1, 0x0);
        gbc.writeMem(0x9b9f, { 0x57 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3b6d, gbc.sp());
        EXPECT(0x9ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9b9f));
        // 57 00B8
        gbc.setState(0x9c8a, 0x3848, 0x2c70, 0x959a, 0xe69e, 0x5fb6, 0x0, 0x0);
        gbc.writeMem(0x9c8a, { 0x57 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3848, gbc.sp());
        EXPECT(0x9c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9c8a));
        // 57 00B9
        gbc.setState(0xe6f7, 0x50eb, 0xa190, 0x6d4f, 0x7da7, 0xd119, 0x0, 0x0);
        gbc.writeMem(0xe6f7, { 0x57 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x50eb, gbc.sp());
        EXPECT(0xe6f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe6f7));
        // 57 00BA
        gbc.setState(0x31fa, 0xe915, 0xa5c0, 0xca7b, 0x65eb, 0xfd1d, 0x1, 0x0);
        gbc.writeMem(0x31fa, { 0x57 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe915, gbc.sp());
        EXPECT(0x31fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00BB
        gbc.setState(0x31dc, 0x5653, 0xfd60, 0xacf2, 0x2bec, 0x12a7, 0x0, 0x0);
        gbc.writeMem(0x31dc, { 0x57 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5653, gbc.sp());
        EXPECT(0x31dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00BC
        gbc.setState(0xafff, 0xa7eb, 0xbad0, 0x396, 0x8e8d, 0x2a70, 0x0, 0x0);
        gbc.writeMem(0xafff, { 0x57 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa7eb, gbc.sp());
        EXPECT(0xb000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xafff));
        // 57 00BD
        gbc.setState(0x11b1, 0xcfca, 0x5d80, 0x83b, 0x76c6, 0x2ccd, 0x1, 0x1);
        gbc.writeMem(0x11b1, { 0x57 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcfca, gbc.sp());
        EXPECT(0x11b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00BE
        gbc.setState(0xa1a9, 0xcf3f, 0xd9a0, 0x2a71, 0x681a, 0x7327, 0x1, 0x0);
        gbc.writeMem(0xa1a9, { 0x57 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcf3f, gbc.sp());
        EXPECT(0xa1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa1a9));
        // 57 00BF
        gbc.setState(0xdbb1, 0x754f, 0x4b90, 0x2d67, 0x8ce, 0xe2e6, 0x0, 0x0);
        gbc.writeMem(0xdbb1, { 0x57 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x754f, gbc.sp());
        EXPECT(0xdbb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdbb1));
        // 57 00C0
        gbc.setState(0x9fd, 0xa9b9, 0x2650, 0x5f91, 0xddc4, 0x1b5e, 0x1, 0x1);
        gbc.writeMem(0x9fd, { 0x57 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa9b9, gbc.sp());
        EXPECT(0x9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00C1
        gbc.setState(0x3fd, 0xf43c, 0x3930, 0x6a2, 0xdf73, 0x4da1, 0x1, 0x1);
        gbc.writeMem(0x3fd, { 0x57 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf43c, gbc.sp());
        EXPECT(0x3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00C2
        gbc.setState(0xbe16, 0x7277, 0x580, 0x3162, 0x9f90, 0x43e1, 0x0, 0x1);
        gbc.writeMem(0xbe16, { 0x57 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7277, gbc.sp());
        EXPECT(0xbe17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbe16));
        // 57 00C3
        gbc.setState(0xcf41, 0x9b41, 0x8bc0, 0x33b8, 0x8e4d, 0x7702, 0x1, 0x0);
        gbc.writeMem(0xcf41, { 0x57 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9b41, gbc.sp());
        EXPECT(0xcf42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcf41));
        // 57 00C4
        gbc.setState(0x6e13, 0x52db, 0x3b40, 0xb28e, 0x7af5, 0x2eff, 0x0, 0x1);
        gbc.writeMem(0x6e13, { 0x57 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x52db, gbc.sp());
        EXPECT(0x6e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00C5
        gbc.setState(0x7707, 0x62b2, 0x4810, 0xcf, 0x35cf, 0x7f4c, 0x1, 0x0);
        gbc.writeMem(0x7707, { 0x57 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x62b2, gbc.sp());
        EXPECT(0x7708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00C6
        gbc.setState(0x39e2, 0xfcb3, 0x3f40, 0x267b, 0x58a8, 0x7b2d, 0x1, 0x0);
        gbc.writeMem(0x39e2, { 0x57 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfcb3, gbc.sp());
        EXPECT(0x39e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00C7
        gbc.setState(0x3081, 0x3ffd, 0x5160, 0x7787, 0xaed6, 0x7110, 0x0, 0x1);
        gbc.writeMem(0x3081, { 0x57 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3ffd, gbc.sp());
        EXPECT(0x3082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00C8
        gbc.setState(0xefe, 0x89ef, 0x9340, 0x83cf, 0x5969, 0x7b3e, 0x0, 0x0);
        gbc.writeMem(0xefe, { 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x89ef, gbc.sp());
        EXPECT(0xeff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00C9
        gbc.setState(0x9bb5, 0x2e81, 0x530, 0xc4b, 0x8866, 0x9139, 0x1, 0x0);
        gbc.writeMem(0x9bb5, { 0x57 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2e81, gbc.sp());
        EXPECT(0x9bb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9bb5));
        // 57 00CA
        gbc.setState(0x6905, 0x2ebd, 0x8aa0, 0x4fcb, 0x754d, 0x5d09, 0x1, 0x1);
        gbc.writeMem(0x6905, { 0x57 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2ebd, gbc.sp());
        EXPECT(0x6906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00CB
        gbc.setState(0xe131, 0x3a8a, 0xad20, 0x4d4a, 0x10f3, 0xcc66, 0x1, 0x1);
        gbc.writeMem(0xe131, { 0x57 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3a8a, gbc.sp());
        EXPECT(0xe132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe131));
        // 57 00CC
        gbc.setState(0xbe2d, 0x3100, 0x4be0, 0x810e, 0xe982, 0x8259, 0x0, 0x1);
        gbc.writeMem(0xbe2d, { 0x57 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3100, gbc.sp());
        EXPECT(0xbe2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbe2d));
        // 57 00CD
        gbc.setState(0x1031, 0xdcf2, 0x490, 0xe71d, 0x9f4b, 0xdd1d, 0x0, 0x1);
        gbc.writeMem(0x1031, { 0x57 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdcf2, gbc.sp());
        EXPECT(0x1032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00CE
        gbc.setState(0x91c, 0x482c, 0xa660, 0xff81, 0xf621, 0x8c9e, 0x1, 0x0);
        gbc.writeMem(0x91c, { 0x57 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x482c, gbc.sp());
        EXPECT(0x91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00CF
        gbc.setState(0x1515, 0x3615, 0xbe0, 0xe9de, 0x92ae, 0x4c69, 0x0, 0x1);
        gbc.writeMem(0x1515, { 0x57 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3615, gbc.sp());
        EXPECT(0x1516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00D0
        gbc.setState(0x10c7, 0x74fe, 0xf7b0, 0x9a17, 0x7cf1, 0x6a22, 0x0, 0x0);
        gbc.writeMem(0x10c7, { 0x57 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x74fe, gbc.sp());
        EXPECT(0x10c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00D1
        gbc.setState(0x538f, 0x4aa4, 0xc0b0, 0x62a9, 0x63b0, 0x87f9, 0x0, 0x1);
        gbc.writeMem(0x538f, { 0x57 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4aa4, gbc.sp());
        EXPECT(0x5390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00D2
        gbc.setState(0x8068, 0xeacb, 0xc860, 0x1f67, 0x9bd1, 0xbf51, 0x1, 0x0);
        gbc.writeMem(0x8068, { 0x57 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xeacb, gbc.sp());
        EXPECT(0x8069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8068));
        // 57 00D3
        gbc.setState(0x2eb6, 0x482d, 0x10f0, 0x38ed, 0xb8af, 0x4a38, 0x1, 0x1);
        gbc.writeMem(0x2eb6, { 0x57 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x482d, gbc.sp());
        EXPECT(0x2eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00D4
        gbc.setState(0x8640, 0xc82c, 0x9e30, 0x7b01, 0x68e9, 0xb4f, 0x0, 0x1);
        gbc.writeMem(0x8640, { 0x57 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc82c, gbc.sp());
        EXPECT(0x8641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8640));
        // 57 00D5
        gbc.setState(0x1f5f, 0x9393, 0x7c50, 0x3d8f, 0xf920, 0x1acd, 0x0, 0x0);
        gbc.writeMem(0x1f5f, { 0x57 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9393, gbc.sp());
        EXPECT(0x1f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00D6
        gbc.setState(0xc4b0, 0x5a44, 0xa170, 0x5e4b, 0x1f0f, 0x6dc, 0x0, 0x1);
        gbc.writeMem(0xc4b0, { 0x57 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5a44, gbc.sp());
        EXPECT(0xc4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc4b0));
        // 57 00D7
        gbc.setState(0x50e8, 0x62bf, 0x1950, 0xb3a8, 0x6941, 0xf8c, 0x1, 0x0);
        gbc.writeMem(0x50e8, { 0x57 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x62bf, gbc.sp());
        EXPECT(0x50e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00D8
        gbc.setState(0x14e5, 0x73e2, 0x4100, 0x8ffc, 0x2eff, 0xa3c3, 0x0, 0x0);
        gbc.writeMem(0x14e5, { 0x57 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x73e2, gbc.sp());
        EXPECT(0x14e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00D9
        gbc.setState(0xd358, 0x3c4c, 0x8b20, 0xf867, 0xdf55, 0x3d53, 0x1, 0x1);
        gbc.writeMem(0xd358, { 0x57 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3c4c, gbc.sp());
        EXPECT(0xd359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd358));
        // 57 00DA
        gbc.setState(0x543a, 0xd15e, 0xab0, 0x398f, 0x6e36, 0xf4f4, 0x0, 0x1);
        gbc.writeMem(0x543a, { 0x57 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd15e, gbc.sp());
        EXPECT(0x543b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00DB
        gbc.setState(0x2db0, 0x85f7, 0x8ce0, 0x9e95, 0x3795, 0xa039, 0x0, 0x0);
        gbc.writeMem(0x2db0, { 0x57 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x85f7, gbc.sp());
        EXPECT(0x2db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00DC
        gbc.setState(0x48da, 0x80ad, 0xa710, 0xe44e, 0x14ee, 0xc632, 0x0, 0x1);
        gbc.writeMem(0x48da, { 0x57 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x80ad, gbc.sp());
        EXPECT(0x48db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00DD
        gbc.setState(0xbca1, 0xde5f, 0x7dc0, 0xa610, 0xa0f6, 0xc90a, 0x1, 0x1);
        gbc.writeMem(0xbca1, { 0x57 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xde5f, gbc.sp());
        EXPECT(0xbca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbca1));
        // 57 00DE
        gbc.setState(0x552e, 0xadba, 0xd1b0, 0xcf23, 0x60d, 0x5049, 0x0, 0x1);
        gbc.writeMem(0x552e, { 0x57 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xadba, gbc.sp());
        EXPECT(0x552f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00DF
        gbc.setState(0x7708, 0xf670, 0x12f0, 0x259a, 0x88c9, 0x931f, 0x0, 0x1);
        gbc.writeMem(0x7708, { 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf670, gbc.sp());
        EXPECT(0x7709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00E0
        gbc.setState(0x5b1e, 0x19e2, 0x8850, 0x127f, 0xfb48, 0x3b91, 0x0, 0x1);
        gbc.writeMem(0x5b1e, { 0x57 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x19e2, gbc.sp());
        EXPECT(0x5b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00E1
        gbc.setState(0x5565, 0x5b90, 0x6be0, 0x3ea, 0x187e, 0x205f, 0x0, 0x1);
        gbc.writeMem(0x5565, { 0x57 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5b90, gbc.sp());
        EXPECT(0x5566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00E2
        gbc.setState(0xf0e, 0xfaf8, 0xae40, 0xffb2, 0x9673, 0xbbc0, 0x1, 0x1);
        gbc.writeMem(0xf0e, { 0x57 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfaf8, gbc.sp());
        EXPECT(0xf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00E3
        gbc.setState(0x91c1, 0xffcf, 0x4ea0, 0x6c62, 0x23d3, 0xf94b, 0x0, 0x1);
        gbc.writeMem(0x91c1, { 0x57 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xffcf, gbc.sp());
        EXPECT(0x91c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x91c1));
        // 57 00E4
        gbc.setState(0xc194, 0x4678, 0x8100, 0x826f, 0x1867, 0x814, 0x0, 0x1);
        gbc.writeMem(0xc194, { 0x57 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4678, gbc.sp());
        EXPECT(0xc195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc194));
        // 57 00E5
        gbc.setState(0x83f1, 0xe767, 0xe740, 0xc876, 0x4884, 0x880d, 0x1, 0x0);
        gbc.writeMem(0x83f1, { 0x57 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe767, gbc.sp());
        EXPECT(0x83f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x83f1));
        // 57 00E6
        gbc.setState(0x85d3, 0x3f7f, 0x5d10, 0x5375, 0xc6e3, 0x8a1f, 0x0, 0x1);
        gbc.writeMem(0x85d3, { 0x57 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3f7f, gbc.sp());
        EXPECT(0x85d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x85d3));
        // 57 00E7
        gbc.setState(0xdcf2, 0x9253, 0xb1e0, 0x22e5, 0xf138, 0x4e6c, 0x1, 0x1);
        gbc.writeMem(0xdcf2, { 0x57 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9253, gbc.sp());
        EXPECT(0xdcf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdcf2));
        // 57 00E8
        gbc.setState(0xde33, 0x766f, 0xecb0, 0xc0d2, 0x5ce5, 0x80df, 0x0, 0x1);
        gbc.writeMem(0xde33, { 0x57 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x766f, gbc.sp());
        EXPECT(0xde34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xde33));
        // 57 00E9
        gbc.setState(0xdf43, 0x7b8e, 0xc5f0, 0xb1fc, 0xe0ec, 0x1044, 0x0, 0x0);
        gbc.writeMem(0xdf43, { 0x57 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7b8e, gbc.sp());
        EXPECT(0xdf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdf43));
        // 57 00EA
        gbc.setState(0x35c7, 0xfffb, 0xf3c0, 0x5005, 0x5de4, 0xec84, 0x0, 0x1);
        gbc.writeMem(0x35c7, { 0x57 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfffb, gbc.sp());
        EXPECT(0x35c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00EC
        gbc.setState(0xecd9, 0x608d, 0x5ff0, 0x7ae0, 0xa671, 0xc04a, 0x1, 0x0);
        gbc.writeMem(0xecd9, { 0x57 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x608d, gbc.sp());
        EXPECT(0xecda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xecd9));
        // 57 00ED
        gbc.setState(0xdf42, 0x2396, 0xff50, 0x62ca, 0x5a85, 0xc9ff, 0x0, 0x1);
        gbc.writeMem(0xdf42, { 0x57 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2396, gbc.sp());
        EXPECT(0xdf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdf42));
        // 57 00EE
        gbc.setState(0xd3e9, 0xf204, 0x88a0, 0x23c4, 0x8ca6, 0xcb62, 0x0, 0x1);
        gbc.writeMem(0xd3e9, { 0x57 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf204, gbc.sp());
        EXPECT(0xd3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd3e9));
        // 57 00EF
        gbc.setState(0x29f5, 0xf5a0, 0xae80, 0x9c1c, 0xf123, 0x6841, 0x0, 0x1);
        gbc.writeMem(0x29f5, { 0x57 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf5a0, gbc.sp());
        EXPECT(0x29f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00F0
        gbc.setState(0x53c4, 0x3549, 0x3dd0, 0x4727, 0xa00b, 0xc69b, 0x1, 0x1);
        gbc.writeMem(0x53c4, { 0x57 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3549, gbc.sp());
        EXPECT(0x53c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00F1
        gbc.setState(0xcee7, 0xbeb0, 0x1f90, 0x2c51, 0x80c3, 0x9e91, 0x0, 0x0);
        gbc.writeMem(0xcee7, { 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbeb0, gbc.sp());
        EXPECT(0xcee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcee7));
        // 57 00F3
        gbc.setState(0xdec1, 0x51c5, 0xb3f0, 0xfb78, 0x8a60, 0xdfa, 0x1, 0x1);
        gbc.writeMem(0xdec1, { 0x57 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x51c5, gbc.sp());
        EXPECT(0xdec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdec1));
        // 57 00F4
        gbc.setState(0x484f, 0x68b1, 0x1cf0, 0xfdfa, 0x1d9e, 0x12f4, 0x0, 0x1);
        gbc.writeMem(0x484f, { 0x57 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x68b1, gbc.sp());
        EXPECT(0x4850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00F5
        gbc.setState(0x97c3, 0x4ba4, 0xa8a0, 0xc294, 0x15f6, 0x56b0, 0x1, 0x1);
        gbc.writeMem(0x97c3, { 0x57 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4ba4, gbc.sp());
        EXPECT(0x97c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x97c3));
        // 57 00F6
        gbc.setState(0xb859, 0x26b9, 0x4440, 0x70f7, 0xbe10, 0x8b7d, 0x1, 0x0);
        gbc.writeMem(0xb859, { 0x57 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x26b9, gbc.sp());
        EXPECT(0xb85a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb859));
        // 57 00F7
        gbc.setState(0xddc8, 0xcaee, 0x2e60, 0xd1f7, 0x269, 0x5f1b, 0x0, 0x0);
        gbc.writeMem(0xddc8, { 0x57 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xcaee, gbc.sp());
        EXPECT(0xddc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xddc8));
        // 57 00F8
        gbc.setState(0x705f, 0x335b, 0x93e0, 0xe55f, 0x616a, 0xf842, 0x1, 0x0);
        gbc.writeMem(0x705f, { 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x335b, gbc.sp());
        EXPECT(0x7060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 00F9
        gbc.setState(0xcaef, 0x434c, 0x2560, 0xf209, 0xdc5c, 0x559b, 0x1, 0x1);
        gbc.writeMem(0xcaef, { 0x57 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x434c, gbc.sp());
        EXPECT(0xcaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcaef));
        // 57 00FA
        gbc.setState(0x44ec, 0xd3cc, 0x1810, 0x62a9, 0xc9b3, 0x7363, 0x1, 0x0);
        gbc.writeMem(0x44ec, { 0x57 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd3cc, gbc.sp());
        EXPECT(0x44ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00FB
        gbc.setState(0x4f50, 0xdddb, 0xefd0, 0xeaa2, 0xab13, 0x1ac4, 0x0, 0x0);
        gbc.writeMem(0x4f50, { 0x57 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdddb, gbc.sp());
        EXPECT(0x4f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00FC
        gbc.setState(0xcd43, 0x2f74, 0x6c20, 0x82cb, 0x475e, 0x2b8e, 0x1, 0x0);
        gbc.writeMem(0xcd43, { 0x57 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2f74, gbc.sp());
        EXPECT(0xcd44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcd43));
        // 57 00FD
        gbc.setState(0x73b, 0xb224, 0xd150, 0x8eb6, 0xdf61, 0x68c3, 0x0, 0x0);
        gbc.writeMem(0x73b, { 0x57 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb224, gbc.sp());
        EXPECT(0x73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 00FE
        gbc.setState(0x9895, 0xe890, 0xd800, 0xd8a1, 0xb8fd, 0x9333, 0x1, 0x1);
        gbc.writeMem(0x9895, { 0x57 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe890, gbc.sp());
        EXPECT(0x9896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9895));
        // 57 00FF
        gbc.setState(0xe6e2, 0x7d5c, 0x2600, 0x20f3, 0xbc95, 0xd41, 0x1, 0x1);
        gbc.writeMem(0xe6e2, { 0x57 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7d5c, gbc.sp());
        EXPECT(0xe6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe6e2));
        // 57 0100
        gbc.setState(0x519c, 0xe03a, 0x7a70, 0xb060, 0xd33d, 0x90cd, 0x1, 0x0);
        gbc.writeMem(0x519c, { 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe03a, gbc.sp());
        EXPECT(0x519d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0101
        gbc.setState(0xc31a, 0x82fc, 0x5150, 0xa42c, 0x5216, 0xdaa8, 0x0, 0x1);
        gbc.writeMem(0xc31a, { 0x57 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x82fc, gbc.sp());
        EXPECT(0xc31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc31a));
        // 57 0102
        gbc.setState(0xb649, 0x1fcb, 0xa040, 0x660, 0x3837, 0x289a, 0x1, 0x0);
        gbc.writeMem(0xb649, { 0x57 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1fcb, gbc.sp());
        EXPECT(0xb64a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb649));
        // 57 0103
        gbc.setState(0xc115, 0xdb2e, 0x3cf0, 0x6a15, 0xa40c, 0x9b2b, 0x1, 0x0);
        gbc.writeMem(0xc115, { 0x57 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdb2e, gbc.sp());
        EXPECT(0xc116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc115));
        // 57 0104
        gbc.setState(0xe127, 0x6557, 0xc970, 0x1616, 0x9fbe, 0xe3d5, 0x1, 0x0);
        gbc.writeMem(0xe127, { 0x57 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6557, gbc.sp());
        EXPECT(0xe128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe127));
        // 57 0105
        gbc.setState(0xc407, 0xa381, 0x92e0, 0xfa43, 0xe2f3, 0xd5da, 0x1, 0x0);
        gbc.writeMem(0xc407, { 0x57 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa381, gbc.sp());
        EXPECT(0xc408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc407));
        // 57 0106
        gbc.setState(0x9284, 0x5776, 0x5680, 0xe45, 0x10f4, 0x48d8, 0x0, 0x1);
        gbc.writeMem(0x9284, { 0x57 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5776, gbc.sp());
        EXPECT(0x9285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9284));
        // 57 0107
        gbc.setState(0xdf65, 0x827, 0x48d0, 0x389a, 0xc0b6, 0x2c22, 0x0, 0x0);
        gbc.writeMem(0xdf65, { 0x57 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x827, gbc.sp());
        EXPECT(0xdf66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdf65));
        // 57 0108
        gbc.setState(0x8f7a, 0xa670, 0x8f60, 0x6781, 0xa3e7, 0xa90f, 0x1, 0x1);
        gbc.writeMem(0x8f7a, { 0x57 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa670, gbc.sp());
        EXPECT(0x8f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8f7a));
        // 57 0109
        gbc.setState(0xa191, 0xcf7a, 0x6800, 0x30e9, 0xb1ca, 0xa049, 0x0, 0x0);
        gbc.writeMem(0xa191, { 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcf7a, gbc.sp());
        EXPECT(0xa192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa191));
        // 57 010A
        gbc.setState(0xaa13, 0x2cc7, 0xd380, 0xed23, 0x790c, 0x3ed6, 0x0, 0x1);
        gbc.writeMem(0xaa13, { 0x57 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2cc7, gbc.sp());
        EXPECT(0xaa14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xaa13));
        // 57 010B
        gbc.setState(0x6ca4, 0x122f, 0xa010, 0xa29, 0x9f66, 0xb947, 0x1, 0x0);
        gbc.writeMem(0x6ca4, { 0x57 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x122f, gbc.sp());
        EXPECT(0x6ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 010C
        gbc.setState(0x5502, 0x6d11, 0x4270, 0x27e6, 0x7589, 0xbf28, 0x0, 0x0);
        gbc.writeMem(0x5502, { 0x57 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6d11, gbc.sp());
        EXPECT(0x5503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 010D
        gbc.setState(0xbf32, 0xddd1, 0x3b20, 0x149c, 0xba71, 0x6a2c, 0x1, 0x1);
        gbc.writeMem(0xbf32, { 0x57 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xddd1, gbc.sp());
        EXPECT(0xbf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbf32));
        // 57 010E
        gbc.setState(0xbb69, 0xa886, 0x3db0, 0x54a1, 0x6f48, 0xd8ca, 0x1, 0x0);
        gbc.writeMem(0xbb69, { 0x57 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa886, gbc.sp());
        EXPECT(0xbb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbb69));
        // 57 0110
        gbc.setState(0xe121, 0x456d, 0x28f0, 0xadbc, 0x582f, 0x2ba, 0x1, 0x1);
        gbc.writeMem(0xe121, { 0x57 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x456d, gbc.sp());
        EXPECT(0xe122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe121));
        // 57 0111
        gbc.setState(0xc813, 0xeee4, 0xb3a0, 0x7db6, 0x9ee8, 0x11fe, 0x1, 0x1);
        gbc.writeMem(0xc813, { 0x57 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xeee4, gbc.sp());
        EXPECT(0xc814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc813));
        // 57 0112
        gbc.setState(0x84e7, 0xf208, 0xb0e0, 0xc50a, 0xa234, 0xb687, 0x0, 0x1);
        gbc.writeMem(0x84e7, { 0x57 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf208, gbc.sp());
        EXPECT(0x84e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x84e7));
        // 57 0113
        gbc.setState(0x4460, 0x55f, 0x62a0, 0xada4, 0xfd2c, 0xbea4, 0x1, 0x1);
        gbc.writeMem(0x4460, { 0x57 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x55f, gbc.sp());
        EXPECT(0x4461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0114
        gbc.setState(0x29aa, 0xe2e2, 0xa800, 0xea37, 0xfdc0, 0xaaec, 0x1, 0x1);
        gbc.writeMem(0x29aa, { 0x57 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe2e2, gbc.sp());
        EXPECT(0x29ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0115
        gbc.setState(0xf74, 0xaff6, 0x57c0, 0xafac, 0x9, 0xd0bd, 0x1, 0x1);
        gbc.writeMem(0xf74, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xaff6, gbc.sp());
        EXPECT(0xf75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0116
        gbc.setState(0x3981, 0xe132, 0x5390, 0xd19f, 0xe10b, 0xebbe, 0x0, 0x0);
        gbc.writeMem(0x3981, { 0x57 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe132, gbc.sp());
        EXPECT(0x3982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0117
        gbc.setState(0xb840, 0x6d4, 0x3940, 0x88f3, 0x2f18, 0x3cb4, 0x1, 0x0);
        gbc.writeMem(0xb840, { 0x57 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6d4, gbc.sp());
        EXPECT(0xb841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb840));
        // 57 0118
        gbc.setState(0x1569, 0xc5c6, 0xc280, 0xef8, 0xf2aa, 0xfeb8, 0x0, 0x1);
        gbc.writeMem(0x1569, { 0x57 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc5c6, gbc.sp());
        EXPECT(0x156a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0119
        gbc.setState(0xbeee, 0xfa96, 0x3d30, 0xaf8d, 0x5866, 0x3e97, 0x0, 0x1);
        gbc.writeMem(0xbeee, { 0x57 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfa96, gbc.sp());
        EXPECT(0xbeef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbeee));
        // 57 011A
        gbc.setState(0x22e0, 0x9080, 0x8f50, 0x401c, 0x4eaa, 0x77f4, 0x0, 0x1);
        gbc.writeMem(0x22e0, { 0x57 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9080, gbc.sp());
        EXPECT(0x22e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 011B
        gbc.setState(0x6453, 0x6102, 0xb920, 0x5c46, 0x7c59, 0x40bc, 0x0, 0x1);
        gbc.writeMem(0x6453, { 0x57 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6102, gbc.sp());
        EXPECT(0x6454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 011C
        gbc.setState(0x10be, 0xeb42, 0xb370, 0xe8d7, 0x9328, 0xc97d, 0x0, 0x1);
        gbc.writeMem(0x10be, { 0x57 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xeb42, gbc.sp());
        EXPECT(0x10bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 011D
        gbc.setState(0xa043, 0x5f23, 0x6660, 0xf975, 0xafe5, 0x5d1b, 0x0, 0x1);
        gbc.writeMem(0xa043, { 0x57 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5f23, gbc.sp());
        EXPECT(0xa044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa043));
        // 57 011E
        gbc.setState(0x4c21, 0x53fe, 0xabd0, 0xf7e6, 0x5d98, 0xaab0, 0x1, 0x1);
        gbc.writeMem(0x4c21, { 0x57 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x53fe, gbc.sp());
        EXPECT(0x4c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 011F
        gbc.setState(0x4305, 0x9a80, 0x6a70, 0x6192, 0x9b57, 0xb474, 0x1, 0x1);
        gbc.writeMem(0x4305, { 0x57 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9a80, gbc.sp());
        EXPECT(0x4306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0120
        gbc.setState(0xc86b, 0xb8, 0x7890, 0xc277, 0xf974, 0xe6b, 0x0, 0x0);
        gbc.writeMem(0xc86b, { 0x57 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb8, gbc.sp());
        EXPECT(0xc86c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc86b));
        // 57 0123
        gbc.setState(0x7b69, 0xbe33, 0xb40, 0x7dfc, 0x57cd, 0x50fb, 0x0, 0x1);
        gbc.writeMem(0x7b69, { 0x57 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbe33, gbc.sp());
        EXPECT(0x7b6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0124
        gbc.setState(0xc9c, 0x3cc5, 0xe60, 0xa1b9, 0xe8d1, 0x88e1, 0x0, 0x1);
        gbc.writeMem(0xc9c, { 0x57 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3cc5, gbc.sp());
        EXPECT(0xc9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0125
        gbc.setState(0xa176, 0xde53, 0xf830, 0xf2f, 0x4a1d, 0x8fb5, 0x1, 0x0);
        gbc.writeMem(0xa176, { 0x57 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xde53, gbc.sp());
        EXPECT(0xa177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa176));
        // 57 0126
        gbc.setState(0x3de5, 0x19d7, 0x1e00, 0xa12f, 0xcb78, 0x4e95, 0x1, 0x1);
        gbc.writeMem(0x3de5, { 0x57 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x19d7, gbc.sp());
        EXPECT(0x3de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0127
        gbc.setState(0x2610, 0xed3, 0xff50, 0x3be2, 0xd418, 0x8923, 0x1, 0x1);
        gbc.writeMem(0x2610, { 0x57 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xed3, gbc.sp());
        EXPECT(0x2611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0128
        gbc.setState(0xe874, 0x85dd, 0xcad0, 0x41ac, 0x2c77, 0x8a6d, 0x0, 0x1);
        gbc.writeMem(0xe874, { 0x57 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x85dd, gbc.sp());
        EXPECT(0xe875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe874));
        // 57 0129
        gbc.setState(0xe15a, 0x9c04, 0xa7f0, 0xd655, 0x637a, 0x7d71, 0x1, 0x1);
        gbc.writeMem(0xe15a, { 0x57 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9c04, gbc.sp());
        EXPECT(0xe15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe15a));
        // 57 012A
        gbc.setState(0x1238, 0x9954, 0xc050, 0x2e0d, 0x5c5a, 0x458f, 0x0, 0x0);
        gbc.writeMem(0x1238, { 0x57 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9954, gbc.sp());
        EXPECT(0x1239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 012B
        gbc.setState(0x137f, 0xf0c9, 0x5330, 0x3f42, 0x16c8, 0xa9cf, 0x0, 0x0);
        gbc.writeMem(0x137f, { 0x57 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf0c9, gbc.sp());
        EXPECT(0x1380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 012C
        gbc.setState(0xc70d, 0xa44b, 0x7900, 0x824, 0xa390, 0x6fe1, 0x0, 0x1);
        gbc.writeMem(0xc70d, { 0x57 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa44b, gbc.sp());
        EXPECT(0xc70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc70d));
        // 57 012D
        gbc.setState(0x83b7, 0x9b2, 0xf060, 0xe25d, 0x6752, 0x89f4, 0x1, 0x0);
        gbc.writeMem(0x83b7, { 0x57 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9b2, gbc.sp());
        EXPECT(0x83b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x83b7));
        // 57 012E
        gbc.setState(0x75d9, 0x6d8e, 0xb4d0, 0x87b4, 0xb5fe, 0xace, 0x1, 0x1);
        gbc.writeMem(0x75d9, { 0x57 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6d8e, gbc.sp());
        EXPECT(0x75da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 012F
        gbc.setState(0xe601, 0xeb7a, 0x7d80, 0xc4b3, 0x468, 0x334e, 0x0, 0x1);
        gbc.writeMem(0xe601, { 0x57 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xeb7a, gbc.sp());
        EXPECT(0xe602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe601));
        // 57 0130
        gbc.setState(0x7b61, 0xf356, 0x2fa0, 0x31ad, 0x7d7a, 0x4646, 0x0, 0x1);
        gbc.writeMem(0x7b61, { 0x57 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf356, gbc.sp());
        EXPECT(0x7b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0131
        gbc.setState(0xcae1, 0xb6f9, 0xf780, 0xf50b, 0x911c, 0xfe3f, 0x1, 0x0);
        gbc.writeMem(0xcae1, { 0x57 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb6f9, gbc.sp());
        EXPECT(0xcae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcae1));
        // 57 0132
        gbc.setState(0x3951, 0x5082, 0x21f0, 0xa33a, 0x9d4e, 0x4f0, 0x1, 0x0);
        gbc.writeMem(0x3951, { 0x57 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5082, gbc.sp());
        EXPECT(0x3952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0133
        gbc.setState(0x2029, 0x642, 0xda70, 0xe70d, 0x9521, 0x6e49, 0x1, 0x1);
        gbc.writeMem(0x2029, { 0x57 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x642, gbc.sp());
        EXPECT(0x202a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0134
        gbc.setState(0x712d, 0xe529, 0x28e0, 0xd0c0, 0x1d26, 0x79c9, 0x0, 0x0);
        gbc.writeMem(0x712d, { 0x57 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe529, gbc.sp());
        EXPECT(0x712e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0135
        gbc.setState(0x6f77, 0xf102, 0xde80, 0xe67a, 0x6092, 0x686d, 0x1, 0x0);
        gbc.writeMem(0x6f77, { 0x57 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf102, gbc.sp());
        EXPECT(0x6f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0136
        gbc.setState(0xcb24, 0x70cd, 0x4040, 0x5df2, 0x971b, 0x792a, 0x0, 0x0);
        gbc.writeMem(0xcb24, { 0x57 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x70cd, gbc.sp());
        EXPECT(0xcb25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcb24));
        // 57 0137
        gbc.setState(0x931c, 0xd9d9, 0xd1f0, 0x7787, 0xf1db, 0x226d, 0x0, 0x1);
        gbc.writeMem(0x931c, { 0x57 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd9d9, gbc.sp());
        EXPECT(0x931d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x931c));
        // 57 0138
        gbc.setState(0xbb78, 0x980f, 0x4850, 0x5036, 0x2c4e, 0xd8f5, 0x1, 0x1);
        gbc.writeMem(0xbb78, { 0x57 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x980f, gbc.sp());
        EXPECT(0xbb79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbb78));
        // 57 0139
        gbc.setState(0x8cc9, 0xebae, 0x1c00, 0xd90e, 0x42b2, 0xe99f, 0x0, 0x1);
        gbc.writeMem(0x8cc9, { 0x57 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xebae, gbc.sp());
        EXPECT(0x8cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8cc9));
        // 57 013A
        gbc.setState(0x6560, 0x530d, 0xd90, 0xe2df, 0xc6c1, 0x79e9, 0x0, 0x0);
        gbc.writeMem(0x6560, { 0x57 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x530d, gbc.sp());
        EXPECT(0x6561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 013B
        gbc.setState(0xed2c, 0xdb04, 0xf490, 0x1d1e, 0xad79, 0x4e03, 0x0, 0x1);
        gbc.writeMem(0xed2c, { 0x57 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdb04, gbc.sp());
        EXPECT(0xed2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xed2c));
        // 57 013C
        gbc.setState(0xb663, 0xbd56, 0x2b20, 0x4edc, 0x1161, 0x5036, 0x0, 0x0);
        gbc.writeMem(0xb663, { 0x57 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbd56, gbc.sp());
        EXPECT(0xb664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb663));
        // 57 013D
        gbc.setState(0x5372, 0x32b1, 0xc7d0, 0xe9fd, 0x4546, 0xa580, 0x1, 0x0);
        gbc.writeMem(0x5372, { 0x57 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x32b1, gbc.sp());
        EXPECT(0x5373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 013E
        gbc.setState(0xc07a, 0x4bd2, 0x3930, 0x1ca, 0x15d7, 0x88, 0x0, 0x0);
        gbc.writeMem(0xc07a, { 0x57 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4bd2, gbc.sp());
        EXPECT(0xc07b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc07a));
        // 57 013F
        gbc.setState(0x3ea5, 0x31f5, 0x2b90, 0x8694, 0x45d3, 0xdcf1, 0x1, 0x0);
        gbc.writeMem(0x3ea5, { 0x57 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x31f5, gbc.sp());
        EXPECT(0x3ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0140
        gbc.setState(0xbec8, 0x9e2b, 0x9ed0, 0x6531, 0x75ed, 0xa74f, 0x1, 0x0);
        gbc.writeMem(0xbec8, { 0x57 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9e2b, gbc.sp());
        EXPECT(0xbec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbec8));
        // 57 0141
        gbc.setState(0xb19c, 0x9666, 0x27e0, 0x1e77, 0xbead, 0x183b, 0x1, 0x0);
        gbc.writeMem(0xb19c, { 0x57 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9666, gbc.sp());
        EXPECT(0xb19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb19c));
        // 57 0142
        gbc.setState(0x3a4, 0xa538, 0xc5a0, 0x98fd, 0xcef, 0x7c93, 0x1, 0x0);
        gbc.writeMem(0x3a4, { 0x57 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa538, gbc.sp());
        EXPECT(0x3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0143
        gbc.setState(0x2168, 0x9e88, 0x6cc0, 0xf107, 0x26e9, 0x543, 0x0, 0x1);
        gbc.writeMem(0x2168, { 0x57 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9e88, gbc.sp());
        EXPECT(0x2169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0144
        gbc.setState(0xda20, 0xe839, 0x4850, 0x1d74, 0xc760, 0xde88, 0x0, 0x1);
        gbc.writeMem(0xda20, { 0x57 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe839, gbc.sp());
        EXPECT(0xda21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xda20));
        // 57 0145
        gbc.setState(0x7fc2, 0x85e5, 0xcf10, 0x9d38, 0xc92d, 0x22b0, 0x0, 0x1);
        gbc.writeMem(0x7fc2, { 0x57 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x85e5, gbc.sp());
        EXPECT(0x7fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0146
        gbc.setState(0x96d8, 0xb497, 0xea40, 0xcbbe, 0x5567, 0x4497, 0x0, 0x0);
        gbc.writeMem(0x96d8, { 0x57 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb497, gbc.sp());
        EXPECT(0x96d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x96d8));
        // 57 0147
        gbc.setState(0xb99a, 0x13a5, 0xfc20, 0xf519, 0x6070, 0x735d, 0x0, 0x1);
        gbc.writeMem(0xb99a, { 0x57 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x13a5, gbc.sp());
        EXPECT(0xb99b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb99a));
        // 57 0148
        gbc.setState(0x335, 0x66b4, 0xe9c0, 0xcee0, 0xcbac, 0x5de2, 0x1, 0x0);
        gbc.writeMem(0x335, { 0x57 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x66b4, gbc.sp());
        EXPECT(0x336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0149
        gbc.setState(0xa7f6, 0xcb27, 0xcbb0, 0x5902, 0x7062, 0xcb71, 0x1, 0x0);
        gbc.writeMem(0xa7f6, { 0x57 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcb27, gbc.sp());
        EXPECT(0xa7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa7f6));
        // 57 014A
        gbc.setState(0x1df0, 0xbb64, 0x7760, 0xcedf, 0x36cd, 0xd9aa, 0x0, 0x0);
        gbc.writeMem(0x1df0, { 0x57 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbb64, gbc.sp());
        EXPECT(0x1df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 014B
        gbc.setState(0xbb10, 0xdf4a, 0xb8d0, 0x8920, 0x5434, 0xd9f1, 0x1, 0x1);
        gbc.writeMem(0xbb10, { 0x57 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdf4a, gbc.sp());
        EXPECT(0xbb11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbb10));
        // 57 014C
        gbc.setState(0x154f, 0xe83d, 0x56c0, 0x3a73, 0xbf13, 0xab8f, 0x0, 0x1);
        gbc.writeMem(0x154f, { 0x57 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe83d, gbc.sp());
        EXPECT(0x1550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 014D
        gbc.setState(0x5021, 0xe0ac, 0x1310, 0x548, 0x35b7, 0xf54, 0x0, 0x0);
        gbc.writeMem(0x5021, { 0x57 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe0ac, gbc.sp());
        EXPECT(0x5022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 014E
        gbc.setState(0x8c13, 0x298f, 0x8ce0, 0x24e8, 0xacb2, 0xe407, 0x0, 0x1);
        gbc.writeMem(0x8c13, { 0x57 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x298f, gbc.sp());
        EXPECT(0x8c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8c13));
        // 57 014F
        gbc.setState(0x1137, 0x5904, 0x3130, 0xae7c, 0x3fa3, 0x41a4, 0x1, 0x0);
        gbc.writeMem(0x1137, { 0x57 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5904, gbc.sp());
        EXPECT(0x1138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0150
        gbc.setState(0xa8f8, 0x886c, 0xdc90, 0x6834, 0xd98d, 0x12fb, 0x0, 0x1);
        gbc.writeMem(0xa8f8, { 0x57 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x886c, gbc.sp());
        EXPECT(0xa8f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa8f8));
        // 57 0151
        gbc.setState(0x4544, 0x9d6c, 0x2050, 0xd412, 0x19f2, 0x3734, 0x0, 0x0);
        gbc.writeMem(0x4544, { 0x57 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9d6c, gbc.sp());
        EXPECT(0x4545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0152
        gbc.setState(0xdfe0, 0x6e5c, 0x1df0, 0x8210, 0x1cca, 0x9f9f, 0x0, 0x0);
        gbc.writeMem(0xdfe0, { 0x57 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6e5c, gbc.sp());
        EXPECT(0xdfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdfe0));
        // 57 0153
        gbc.setState(0x4f53, 0xc203, 0x26a0, 0xad6a, 0xaecf, 0x7af0, 0x0, 0x0);
        gbc.writeMem(0x4f53, { 0x57 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc203, gbc.sp());
        EXPECT(0x4f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0154
        gbc.setState(0xcedd, 0xb9ff, 0xbef0, 0x248d, 0x4fe6, 0x2737, 0x0, 0x0);
        gbc.writeMem(0xcedd, { 0x57 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb9ff, gbc.sp());
        EXPECT(0xcede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcedd));
        // 57 0155
        gbc.setState(0x7a9c, 0x194e, 0xfb80, 0x57e5, 0x5c2b, 0xb12f, 0x1, 0x0);
        gbc.writeMem(0x7a9c, { 0x57 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x194e, gbc.sp());
        EXPECT(0x7a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0156
        gbc.setState(0x2015, 0x9ad3, 0xb880, 0xd18f, 0x625, 0xda9, 0x1, 0x0);
        gbc.writeMem(0x2015, { 0x57 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9ad3, gbc.sp());
        EXPECT(0x2016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0157
        gbc.setState(0xb92b, 0x969b, 0xe600, 0xf30b, 0x6088, 0x4ad8, 0x1, 0x0);
        gbc.writeMem(0xb92b, { 0x57 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x969b, gbc.sp());
        EXPECT(0xb92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb92b));
        // 57 0158
        gbc.setState(0xe083, 0x3dc6, 0xac50, 0x656e, 0x6329, 0xbac1, 0x0, 0x1);
        gbc.writeMem(0xe083, { 0x57 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3dc6, gbc.sp());
        EXPECT(0xe084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe083));
        // 57 0159
        gbc.setState(0x18c9, 0xfe7, 0xdaa0, 0x512d, 0x2bf7, 0xfc7, 0x1, 0x0);
        gbc.writeMem(0x18c9, { 0x57 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfe7, gbc.sp());
        EXPECT(0x18ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 015C
        gbc.setState(0xce3d, 0x19ed, 0xf350, 0xc534, 0x473, 0xa994, 0x0, 0x1);
        gbc.writeMem(0xce3d, { 0x57 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x19ed, gbc.sp());
        EXPECT(0xce3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xce3d));
        // 57 015D
        gbc.setState(0x67, 0xb921, 0x41a0, 0xcc13, 0xd8d5, 0x3d79, 0x0, 0x0);
        gbc.writeMem(0x67, { 0x57 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb921, gbc.sp());
        EXPECT(0x68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 015E
        gbc.setState(0xc1e6, 0x75c2, 0x5a0, 0x5f8d, 0xbecd, 0xa075, 0x0, 0x1);
        gbc.writeMem(0xc1e6, { 0x57 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x75c2, gbc.sp());
        EXPECT(0xc1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc1e6));
        // 57 015F
        gbc.setState(0x65da, 0xa342, 0xc350, 0xf8fb, 0xba90, 0xcbae, 0x0, 0x0);
        gbc.writeMem(0x65da, { 0x57 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa342, gbc.sp());
        EXPECT(0x65db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0160
        gbc.setState(0xd3c6, 0x74ed, 0x1210, 0x7e2b, 0x5a3e, 0x1568, 0x1, 0x1);
        gbc.writeMem(0xd3c6, { 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x74ed, gbc.sp());
        EXPECT(0xd3c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd3c6));
        // 57 0161
        gbc.setState(0x1b48, 0x89cc, 0x13e0, 0x98a8, 0xd4c9, 0x300e, 0x0, 0x1);
        gbc.writeMem(0x1b48, { 0x57 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x89cc, gbc.sp());
        EXPECT(0x1b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0162
        gbc.setState(0x487, 0xa2f3, 0xfa00, 0x6f1f, 0x36d8, 0xa864, 0x0, 0x0);
        gbc.writeMem(0x487, { 0x57 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa2f3, gbc.sp());
        EXPECT(0x488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0163
        gbc.setState(0x188d, 0x157c, 0xe9f0, 0x744e, 0x4827, 0x43e8, 0x1, 0x1);
        gbc.writeMem(0x188d, { 0x57 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x157c, gbc.sp());
        EXPECT(0x188e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0164
        gbc.setState(0xcab3, 0xff88, 0x7a60, 0xc297, 0xaa67, 0xb419, 0x1, 0x1);
        gbc.writeMem(0xcab3, { 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xff88, gbc.sp());
        EXPECT(0xcab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcab3));
        // 57 0165
        gbc.setState(0xd82, 0x928a, 0xc360, 0x3388, 0x5dee, 0x22fd, 0x0, 0x1);
        gbc.writeMem(0xd82, { 0x57 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x928a, gbc.sp());
        EXPECT(0xd83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0166
        gbc.setState(0x8129, 0xe0c, 0xec70, 0xb45a, 0x6eda, 0x63c8, 0x0, 0x1);
        gbc.writeMem(0x8129, { 0x57 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe0c, gbc.sp());
        EXPECT(0x812a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8129));
        // 57 0167
        gbc.setState(0x82bc, 0x4531, 0x38f0, 0x483d, 0x130c, 0x1a52, 0x0, 0x0);
        gbc.writeMem(0x82bc, { 0x57 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4531, gbc.sp());
        EXPECT(0x82bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x82bc));
        // 57 0168
        gbc.setState(0xb594, 0xcaba, 0xb880, 0xb5af, 0x6d72, 0x872b, 0x1, 0x0);
        gbc.writeMem(0xb594, { 0x57 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcaba, gbc.sp());
        EXPECT(0xb595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb594));
        // 57 0169
        gbc.setState(0xa4b, 0x6c00, 0x84f0, 0xa863, 0xdbe2, 0x65e0, 0x1, 0x1);
        gbc.writeMem(0xa4b, { 0x57 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6c00, gbc.sp());
        EXPECT(0xa4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 016A
        gbc.setState(0x891e, 0xf86, 0x9f10, 0x20fc, 0x2b63, 0x2220, 0x1, 0x1);
        gbc.writeMem(0x891e, { 0x57 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf86, gbc.sp());
        EXPECT(0x891f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x891e));
        // 57 016B
        gbc.setState(0x4c02, 0xc20f, 0x2380, 0xffd4, 0x2b97, 0xf1b4, 0x0, 0x0);
        gbc.writeMem(0x4c02, { 0x57 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc20f, gbc.sp());
        EXPECT(0x4c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 016C
        gbc.setState(0x5644, 0x45a2, 0x4610, 0x235f, 0x557d, 0x615b, 0x1, 0x1);
        gbc.writeMem(0x5644, { 0x57 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x45a2, gbc.sp());
        EXPECT(0x5645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 016D
        gbc.setState(0x259, 0x1660, 0x2920, 0xd1f3, 0xddda, 0xc38e, 0x1, 0x1);
        gbc.writeMem(0x259, { 0x57 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1660, gbc.sp());
        EXPECT(0x25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 016E
        gbc.setState(0x1b77, 0x9161, 0x12f0, 0x1e54, 0xbc5d, 0x4ff, 0x0, 0x0);
        gbc.writeMem(0x1b77, { 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9161, gbc.sp());
        EXPECT(0x1b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 016F
        gbc.setState(0x2a2f, 0x71bd, 0xcbc0, 0x666b, 0x63f8, 0x4aef, 0x0, 0x0);
        gbc.writeMem(0x2a2f, { 0x57 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x71bd, gbc.sp());
        EXPECT(0x2a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0170
        gbc.setState(0xaa20, 0x1dd, 0xd3f0, 0xc24d, 0xe5b4, 0x3b6c, 0x1, 0x1);
        gbc.writeMem(0xaa20, { 0x57 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1dd, gbc.sp());
        EXPECT(0xaa21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xaa20));
        // 57 0171
        gbc.setState(0x7885, 0xec93, 0xa120, 0x4f0f, 0x11b4, 0x2f5, 0x1, 0x1);
        gbc.writeMem(0x7885, { 0x57 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xec93, gbc.sp());
        EXPECT(0x7886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0172
        gbc.setState(0xa4d5, 0xd91d, 0xe720, 0x154f, 0x8155, 0xab76, 0x0, 0x0);
        gbc.writeMem(0xa4d5, { 0x57 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd91d, gbc.sp());
        EXPECT(0xa4d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa4d5));
        // 57 0173
        gbc.setState(0x7f1e, 0x8b17, 0xb710, 0x788f, 0x35c3, 0xc95, 0x0, 0x0);
        gbc.writeMem(0x7f1e, { 0x57 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8b17, gbc.sp());
        EXPECT(0x7f1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0174
        gbc.setState(0xa0d8, 0xcf17, 0x7320, 0x8b60, 0x6e65, 0x142b, 0x1, 0x0);
        gbc.writeMem(0xa0d8, { 0x57 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcf17, gbc.sp());
        EXPECT(0xa0d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa0d8));
        // 57 0175
        gbc.setState(0x63d4, 0x806e, 0x7840, 0xea60, 0xf260, 0xe55c, 0x1, 0x0);
        gbc.writeMem(0x63d4, { 0x57 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x806e, gbc.sp());
        EXPECT(0x63d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0177
        gbc.setState(0x5e9f, 0x3e72, 0x7c20, 0x820b, 0x90b3, 0x1adb, 0x1, 0x0);
        gbc.writeMem(0x5e9f, { 0x57 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3e72, gbc.sp());
        EXPECT(0x5ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0178
        gbc.setState(0xef73, 0x677e, 0x61c0, 0xd6f5, 0x4ad0, 0xe9d1, 0x1, 0x0);
        gbc.writeMem(0xef73, { 0x57 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x677e, gbc.sp());
        EXPECT(0xef74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xef73));
        // 57 0179
        gbc.setState(0x3784, 0x6f0a, 0x3f20, 0x392f, 0xef92, 0xe7d2, 0x1, 0x1);
        gbc.writeMem(0x3784, { 0x57 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6f0a, gbc.sp());
        EXPECT(0x3785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 017A
        gbc.setState(0x4649, 0xc01f, 0x36f0, 0xd6ae, 0xd880, 0x2ab0, 0x0, 0x0);
        gbc.writeMem(0x4649, { 0x57 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc01f, gbc.sp());
        EXPECT(0x464a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 017B
        gbc.setState(0x5854, 0xf9b8, 0xfd70, 0xb6cc, 0xdef0, 0xefb2, 0x0, 0x1);
        gbc.writeMem(0x5854, { 0x57 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf9b8, gbc.sp());
        EXPECT(0x5855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 017C
        gbc.setState(0xe5d6, 0xf5da, 0xb00, 0x52b9, 0x672c, 0xc2d7, 0x1, 0x0);
        gbc.writeMem(0xe5d6, { 0x57 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf5da, gbc.sp());
        EXPECT(0xe5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe5d6));
        // 57 017D
        gbc.setState(0xc1c3, 0x17af, 0xcdb0, 0xf43f, 0xddc0, 0xa23a, 0x1, 0x1);
        gbc.writeMem(0xc1c3, { 0x57 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x17af, gbc.sp());
        EXPECT(0xc1c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc1c3));
        // 57 017E
        gbc.setState(0x4cd8, 0xc908, 0x340, 0xf413, 0x9d9f, 0xe6ed, 0x1, 0x0);
        gbc.writeMem(0x4cd8, { 0x57 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc908, gbc.sp());
        EXPECT(0x4cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 017F
        gbc.setState(0x49a8, 0x3ebf, 0x19f0, 0x80e4, 0x4fb7, 0x3a76, 0x1, 0x0);
        gbc.writeMem(0x49a8, { 0x57 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3ebf, gbc.sp());
        EXPECT(0x49a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0180
        gbc.setState(0xec79, 0x9e5e, 0xa6e0, 0x3f02, 0x690, 0x3218, 0x1, 0x1);
        gbc.writeMem(0xec79, { 0x57 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9e5e, gbc.sp());
        EXPECT(0xec7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xec79));
        // 57 0181
        gbc.setState(0xcf24, 0x6e5d, 0x3ca0, 0x74bd, 0x4fac, 0x11a6, 0x0, 0x0);
        gbc.writeMem(0xcf24, { 0x57 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6e5d, gbc.sp());
        EXPECT(0xcf25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcf24));
        // 57 0182
        gbc.setState(0x444f, 0xbb84, 0x4650, 0x6b92, 0x7903, 0x1c86, 0x0, 0x1);
        gbc.writeMem(0x444f, { 0x57 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbb84, gbc.sp());
        EXPECT(0x4450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0183
        gbc.setState(0xdb89, 0xab95, 0xe60, 0xca8c, 0xb468, 0x735c, 0x0, 0x1);
        gbc.writeMem(0xdb89, { 0x57 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xab95, gbc.sp());
        EXPECT(0xdb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdb89));
        // 57 0184
        gbc.setState(0x69ae, 0x7375, 0x75d0, 0x51f8, 0xe7ad, 0x60e4, 0x0, 0x1);
        gbc.writeMem(0x69ae, { 0x57 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7375, gbc.sp());
        EXPECT(0x69af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0185
        gbc.setState(0xd62f, 0xaf0d, 0xd860, 0xbc6e, 0x9e04, 0x1c8, 0x0, 0x0);
        gbc.writeMem(0xd62f, { 0x57 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xaf0d, gbc.sp());
        EXPECT(0xd630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd62f));
        // 57 0186
        gbc.setState(0x9ad4, 0x4c8a, 0x5a50, 0x36ee, 0x1335, 0xd715, 0x0, 0x1);
        gbc.writeMem(0x9ad4, { 0x57 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4c8a, gbc.sp());
        EXPECT(0x9ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9ad4));
        // 57 0187
        gbc.setState(0xeb9e, 0x90c8, 0xb650, 0xc445, 0xd5c2, 0xee06, 0x0, 0x1);
        gbc.writeMem(0xeb9e, { 0x57 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x90c8, gbc.sp());
        EXPECT(0xeb9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xeb9e));
        // 57 0188
        gbc.setState(0xdb7f, 0x8178, 0x7940, 0x84d, 0x4560, 0xae40, 0x1, 0x1);
        gbc.writeMem(0xdb7f, { 0x57 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8178, gbc.sp());
        EXPECT(0xdb80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdb7f));
        // 57 0189
        gbc.setState(0xc749, 0xb008, 0x11f0, 0x7eba, 0x6b2a, 0x3753, 0x0, 0x1);
        gbc.writeMem(0xc749, { 0x57 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb008, gbc.sp());
        EXPECT(0xc74a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc749));
        // 57 018A
        gbc.setState(0xb0d3, 0x6ea7, 0xcb90, 0x2d92, 0xc483, 0xb5a5, 0x0, 0x1);
        gbc.writeMem(0xb0d3, { 0x57 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6ea7, gbc.sp());
        EXPECT(0xb0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb0d3));
        // 57 018B
        gbc.setState(0xee63, 0x96da, 0x9570, 0xfc4, 0x4c5b, 0xe89c, 0x0, 0x0);
        gbc.writeMem(0xee63, { 0x57 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x96da, gbc.sp());
        EXPECT(0xee64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xee63));
        // 57 018C
        gbc.setState(0xcdf8, 0xda4a, 0x230, 0x80f9, 0x9829, 0xb1ba, 0x1, 0x0);
        gbc.writeMem(0xcdf8, { 0x57 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xda4a, gbc.sp());
        EXPECT(0xcdf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcdf8));
        // 57 018D
        gbc.setState(0x4b27, 0x5aba, 0xc110, 0x773b, 0x6b18, 0xb435, 0x1, 0x1);
        gbc.writeMem(0x4b27, { 0x57 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5aba, gbc.sp());
        EXPECT(0x4b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 018E
        gbc.setState(0xe248, 0xc847, 0x4750, 0x99ed, 0x4904, 0x60e6, 0x0, 0x0);
        gbc.writeMem(0xe248, { 0x57 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc847, gbc.sp());
        EXPECT(0xe249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe248));
        // 57 018F
        gbc.setState(0x25a8, 0x69e3, 0x3ae0, 0x64d8, 0x43ee, 0xdb8b, 0x0, 0x1);
        gbc.writeMem(0x25a8, { 0x57 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x69e3, gbc.sp());
        EXPECT(0x25a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0190
        gbc.setState(0x1ca2, 0x911d, 0xf2b0, 0x792b, 0xd36, 0xf800, 0x1, 0x1);
        gbc.writeMem(0x1ca2, { 0x57 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x911d, gbc.sp());
        EXPECT(0x1ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0191
        gbc.setState(0x9d5e, 0x3d39, 0xd620, 0xd270, 0xf8cd, 0x1b7c, 0x1, 0x1);
        gbc.writeMem(0x9d5e, { 0x57 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3d39, gbc.sp());
        EXPECT(0x9d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9d5e));
        // 57 0192
        gbc.setState(0x1c11, 0x390f, 0x4c90, 0xb938, 0xaceb, 0xde06, 0x0, 0x1);
        gbc.writeMem(0x1c11, { 0x57 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x390f, gbc.sp());
        EXPECT(0x1c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0193
        gbc.setState(0xa23f, 0xc811, 0xc500, 0x4391, 0x9cac, 0x77d4, 0x1, 0x0);
        gbc.writeMem(0xa23f, { 0x57 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc811, gbc.sp());
        EXPECT(0xa240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa23f));
        // 57 0194
        gbc.setState(0x568f, 0xcd07, 0x2170, 0x34b2, 0x79cc, 0xcd0d, 0x1, 0x1);
        gbc.writeMem(0x568f, { 0x57 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcd07, gbc.sp());
        EXPECT(0x5690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0195
        gbc.setState(0xed8b, 0x9e9e, 0x6d50, 0x8f73, 0xa9c2, 0xe77f, 0x0, 0x1);
        gbc.writeMem(0xed8b, { 0x57 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9e9e, gbc.sp());
        EXPECT(0xed8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xed8b));
        // 57 0196
        gbc.setState(0x663f, 0xe5d7, 0x8bf0, 0x23d0, 0x877c, 0x7eb, 0x0, 0x1);
        gbc.writeMem(0x663f, { 0x57 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe5d7, gbc.sp());
        EXPECT(0x6640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0197
        gbc.setState(0xe456, 0x593a, 0xcc40, 0xc43b, 0x78ef, 0x5cbc, 0x0, 0x1);
        gbc.writeMem(0xe456, { 0x57 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x593a, gbc.sp());
        EXPECT(0xe457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe456));
        // 57 0199
        gbc.setState(0x623, 0x9232, 0x7fa0, 0xf788, 0xc981, 0xc9c9, 0x1, 0x1);
        gbc.writeMem(0x623, { 0x57 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9232, gbc.sp());
        EXPECT(0x624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 019A
        gbc.setState(0x1e43, 0x2d8a, 0xb220, 0x1b41, 0x7784, 0xaa31, 0x0, 0x1);
        gbc.writeMem(0x1e43, { 0x57 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2d8a, gbc.sp());
        EXPECT(0x1e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 019B
        gbc.setState(0x63cc, 0x199, 0x7190, 0xe622, 0x1651, 0x6b3d, 0x1, 0x0);
        gbc.writeMem(0x63cc, { 0x57 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x199, gbc.sp());
        EXPECT(0x63cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 019C
        gbc.setState(0xd159, 0xac4, 0x2220, 0x2227, 0x4869, 0xdcd1, 0x0, 0x1);
        gbc.writeMem(0xd159, { 0x57 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xac4, gbc.sp());
        EXPECT(0xd15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd159));
        // 57 019D
        gbc.setState(0x9039, 0x83f4, 0xc790, 0x84a2, 0x5d05, 0x7a09, 0x0, 0x1);
        gbc.writeMem(0x9039, { 0x57 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x83f4, gbc.sp());
        EXPECT(0x903a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9039));
        // 57 019E
        gbc.setState(0x54cf, 0xa199, 0xb510, 0x2c4d, 0x5956, 0xd9b4, 0x0, 0x0);
        gbc.writeMem(0x54cf, { 0x57 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa199, gbc.sp());
        EXPECT(0x54d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 019F
        gbc.setState(0xc3c9, 0xad9a, 0x1f00, 0xba18, 0x2ec2, 0x31a0, 0x1, 0x0);
        gbc.writeMem(0xc3c9, { 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xad9a, gbc.sp());
        EXPECT(0xc3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc3c9));
        // 57 01A0
        gbc.setState(0xcb4d, 0xf53d, 0x81a0, 0x2a1f, 0x4f8a, 0xeff7, 0x1, 0x0);
        gbc.writeMem(0xcb4d, { 0x57 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf53d, gbc.sp());
        EXPECT(0xcb4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcb4d));
        // 57 01A1
        gbc.setState(0xc3ca, 0xde22, 0x4070, 0xc57a, 0x3c85, 0x2ba7, 0x0, 0x0);
        gbc.writeMem(0xc3ca, { 0x57 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xde22, gbc.sp());
        EXPECT(0xc3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc3ca));
        // 57 01A2
        gbc.setState(0x8b01, 0xe091, 0x2230, 0x2143, 0x8832, 0x726e, 0x0, 0x1);
        gbc.writeMem(0x8b01, { 0x57 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe091, gbc.sp());
        EXPECT(0x8b02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8b01));
        // 57 01A3
        gbc.setState(0x6981, 0x7ed5, 0x220, 0xfd08, 0x30a6, 0xb7a1, 0x1, 0x0);
        gbc.writeMem(0x6981, { 0x57 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7ed5, gbc.sp());
        EXPECT(0x6982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01A5
        gbc.setState(0x5cc, 0x27e9, 0xf3e0, 0x2966, 0xb05e, 0xe9bd, 0x1, 0x0);
        gbc.writeMem(0x5cc, { 0x57 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x27e9, gbc.sp());
        EXPECT(0x5cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01A6
        gbc.setState(0x927b, 0xc0e5, 0x1280, 0x9d76, 0x3fe6, 0x6896, 0x0, 0x0);
        gbc.writeMem(0x927b, { 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0x927c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x927b));
        // 57 01A7
        gbc.setState(0x4483, 0xc828, 0x3910, 0x9504, 0x7409, 0x9431, 0x0, 0x1);
        gbc.writeMem(0x4483, { 0x57 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc828, gbc.sp());
        EXPECT(0x4484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01A8
        gbc.setState(0xd80f, 0xa41c, 0xfb40, 0xcf2c, 0xa7a5, 0xeb16, 0x0, 0x1);
        gbc.writeMem(0xd80f, { 0x57 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa41c, gbc.sp());
        EXPECT(0xd810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd80f));
        // 57 01A9
        gbc.setState(0x7303, 0x75f, 0xfd80, 0x166, 0xb6d2, 0xd44a, 0x1, 0x1);
        gbc.writeMem(0x7303, { 0x57 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x75f, gbc.sp());
        EXPECT(0x7304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01AA
        gbc.setState(0x2b42, 0x1d9b, 0xb0f0, 0x27c8, 0x388b, 0x88bb, 0x0, 0x0);
        gbc.writeMem(0x2b42, { 0x57 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1d9b, gbc.sp());
        EXPECT(0x2b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01AB
        gbc.setState(0xe6c7, 0xaa20, 0x6890, 0xc31e, 0x55d8, 0xf822, 0x0, 0x1);
        gbc.writeMem(0xe6c7, { 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xaa20, gbc.sp());
        EXPECT(0xe6c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe6c7));
        // 57 01AC
        gbc.setState(0x96b0, 0x893b, 0xccd0, 0x2bf4, 0xb626, 0xd69f, 0x0, 0x1);
        gbc.writeMem(0x96b0, { 0x57 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x893b, gbc.sp());
        EXPECT(0x96b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x96b0));
        // 57 01AD
        gbc.setState(0x402, 0x7c, 0x76f0, 0xf4cd, 0xc5b2, 0x74e5, 0x1, 0x0);
        gbc.writeMem(0x402, { 0x57 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7c, gbc.sp());
        EXPECT(0x403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01AE
        gbc.setState(0x9e2f, 0x8fca, 0x3690, 0x8a6e, 0xd45c, 0xded3, 0x1, 0x1);
        gbc.writeMem(0x9e2f, { 0x57 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8fca, gbc.sp());
        EXPECT(0x9e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9e2f));
        // 57 01AF
        gbc.setState(0xee3e, 0x1275, 0x2710, 0x8acc, 0x1aae, 0x97d8, 0x0, 0x0);
        gbc.writeMem(0xee3e, { 0x57 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1275, gbc.sp());
        EXPECT(0xee3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xee3e));
        // 57 01B0
        gbc.setState(0x8db1, 0x4556, 0xde40, 0xf99f, 0xfaa8, 0x42e1, 0x1, 0x1);
        gbc.writeMem(0x8db1, { 0x57 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4556, gbc.sp());
        EXPECT(0x8db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8db1));
        // 57 01B1
        gbc.setState(0x545d, 0x3d4d, 0x3740, 0xb583, 0x2369, 0xc89b, 0x1, 0x0);
        gbc.writeMem(0x545d, { 0x57 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3d4d, gbc.sp());
        EXPECT(0x545e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01B2
        gbc.setState(0xdf15, 0x4e3a, 0x3b10, 0xfd3e, 0x7618, 0xd766, 0x1, 0x1);
        gbc.writeMem(0xdf15, { 0x57 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4e3a, gbc.sp());
        EXPECT(0xdf16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdf15));
        // 57 01B3
        gbc.setState(0x5d31, 0xb023, 0x28f0, 0x3811, 0xd3ae, 0xb2b7, 0x1, 0x0);
        gbc.writeMem(0x5d31, { 0x57 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb023, gbc.sp());
        EXPECT(0x5d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01B4
        gbc.setState(0xc511, 0xf69d, 0xc960, 0x9fa3, 0xe122, 0x48f7, 0x0, 0x1);
        gbc.writeMem(0xc511, { 0x57 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf69d, gbc.sp());
        EXPECT(0xc512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc511));
        // 57 01B5
        gbc.setState(0xd2a9, 0x9d30, 0x4670, 0xd295, 0x3da3, 0xbc47, 0x1, 0x1);
        gbc.writeMem(0xd2a9, { 0x57 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9d30, gbc.sp());
        EXPECT(0xd2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd2a9));
        // 57 01B6
        gbc.setState(0x7dcb, 0xdd54, 0xa9e0, 0xa34c, 0xc2bc, 0xd90f, 0x0, 0x0);
        gbc.writeMem(0x7dcb, { 0x57 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdd54, gbc.sp());
        EXPECT(0x7dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01B7
        gbc.setState(0xb37a, 0x174f, 0x95f0, 0xd43b, 0x6dc7, 0xbdce, 0x0, 0x0);
        gbc.writeMem(0xb37a, { 0x57 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x174f, gbc.sp());
        EXPECT(0xb37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb37a));
        // 57 01B8
        gbc.setState(0x7fb9, 0xb0f2, 0xd8b0, 0xe899, 0x76c0, 0x3452, 0x0, 0x1);
        gbc.writeMem(0x7fb9, { 0x57 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb0f2, gbc.sp());
        EXPECT(0x7fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01B9
        gbc.setState(0xdd40, 0x28dd, 0xb9c0, 0xec7, 0xe0fd, 0xd57f, 0x0, 0x0);
        gbc.writeMem(0xdd40, { 0x57 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x28dd, gbc.sp());
        EXPECT(0xdd41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdd40));
        // 57 01BA
        gbc.setState(0x6245, 0xf0af, 0x7df0, 0x5826, 0x8810, 0xf8f4, 0x1, 0x1);
        gbc.writeMem(0x6245, { 0x57 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf0af, gbc.sp());
        EXPECT(0x6246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01BB
        gbc.setState(0x6640, 0xb649, 0x7db0, 0x32d4, 0xa47a, 0x488d, 0x0, 0x1);
        gbc.writeMem(0x6640, { 0x57 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb649, gbc.sp());
        EXPECT(0x6641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01BC
        gbc.setState(0x23ed, 0x7523, 0xddc0, 0xed21, 0x3e5d, 0x5e9e, 0x1, 0x1);
        gbc.writeMem(0x23ed, { 0x57 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7523, gbc.sp());
        EXPECT(0x23ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01BD
        gbc.setState(0x7473, 0xb1a3, 0x7f90, 0x7d12, 0xfca6, 0x72cf, 0x1, 0x1);
        gbc.writeMem(0x7473, { 0x57 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb1a3, gbc.sp());
        EXPECT(0x7474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01BF
        gbc.setState(0x90cc, 0xcfbf, 0xd3e0, 0xbd0e, 0xcd89, 0x91b9, 0x1, 0x1);
        gbc.writeMem(0x90cc, { 0x57 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcfbf, gbc.sp());
        EXPECT(0x90cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x90cc));
        // 57 01C0
        gbc.setState(0xc9a5, 0x2d61, 0x88f0, 0xe49d, 0x1a7f, 0xc586, 0x1, 0x1);
        gbc.writeMem(0xc9a5, { 0x57 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2d61, gbc.sp());
        EXPECT(0xc9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc9a5));
        // 57 01C1
        gbc.setState(0x39b8, 0xf119, 0x9550, 0xd9ca, 0x4d00, 0xa8ae, 0x1, 0x1);
        gbc.writeMem(0x39b8, { 0x57 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf119, gbc.sp());
        EXPECT(0x39b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01C2
        gbc.setState(0x4b8a, 0xdd8e, 0x81d0, 0xde28, 0x5c5c, 0xa4cd, 0x0, 0x1);
        gbc.writeMem(0x4b8a, { 0x57 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdd8e, gbc.sp());
        EXPECT(0x4b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01C3
        gbc.setState(0x3bd, 0x96e8, 0x7ee0, 0xdf95, 0x4c5e, 0x4ed6, 0x0, 0x0);
        gbc.writeMem(0x3bd, { 0x57 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x96e8, gbc.sp());
        EXPECT(0x3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01C4
        gbc.setState(0x885, 0xb488, 0x7c40, 0xa288, 0x7637, 0xcab3, 0x0, 0x0);
        gbc.writeMem(0x885, { 0x57 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb488, gbc.sp());
        EXPECT(0x886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01C5
        gbc.setState(0xe089, 0x1bc3, 0xbed0, 0xc008, 0x6210, 0x6eb2, 0x1, 0x1);
        gbc.writeMem(0xe089, { 0x57 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1bc3, gbc.sp());
        EXPECT(0xe08a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe089));
        // 57 01C6
        gbc.setState(0x13e9, 0xbb1e, 0x7680, 0x855a, 0x6c82, 0xbb39, 0x1, 0x0);
        gbc.writeMem(0x13e9, { 0x57 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbb1e, gbc.sp());
        EXPECT(0x13ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01C7
        gbc.setState(0x34e9, 0xd617, 0x1d0, 0x1861, 0xa6b3, 0x96ac, 0x1, 0x1);
        gbc.writeMem(0x34e9, { 0x57 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd617, gbc.sp());
        EXPECT(0x34ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01C8
        gbc.setState(0xd8b3, 0x998, 0x5b70, 0xe336, 0xa73d, 0xcd40, 0x0, 0x0);
        gbc.writeMem(0xd8b3, { 0x57 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x998, gbc.sp());
        EXPECT(0xd8b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd8b3));
        // 57 01C9
        gbc.setState(0xb032, 0xd47b, 0xf2f0, 0x6889, 0x1d02, 0x70b4, 0x0, 0x1);
        gbc.writeMem(0xb032, { 0x57 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd47b, gbc.sp());
        EXPECT(0xb033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb032));
        // 57 01CA
        gbc.setState(0x497, 0xd707, 0xb810, 0x49ea, 0xe313, 0x4842, 0x0, 0x0);
        gbc.writeMem(0x497, { 0x57 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd707, gbc.sp());
        EXPECT(0x498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01CB
        gbc.setState(0xa291, 0x2ca8, 0x19b0, 0xb86e, 0x52dd, 0xfeb9, 0x1, 0x0);
        gbc.writeMem(0xa291, { 0x57 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2ca8, gbc.sp());
        EXPECT(0xa292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa291));
        // 57 01CC
        gbc.setState(0x5c27, 0x75ea, 0xed60, 0x5593, 0x6086, 0x65c6, 0x0, 0x1);
        gbc.writeMem(0x5c27, { 0x57 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x75ea, gbc.sp());
        EXPECT(0x5c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01CD
        gbc.setState(0x7f7a, 0x77bf, 0x5880, 0x23a2, 0x3c97, 0xc913, 0x0, 0x1);
        gbc.writeMem(0x7f7a, { 0x57 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x77bf, gbc.sp());
        EXPECT(0x7f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01CE
        gbc.setState(0x302, 0x687f, 0x1640, 0x2d27, 0xec59, 0x7ad1, 0x0, 0x1);
        gbc.writeMem(0x302, { 0x57 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x687f, gbc.sp());
        EXPECT(0x303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01CF
        gbc.setState(0xc788, 0x9239, 0x71a0, 0x2423, 0x1707, 0x1d77, 0x0, 0x0);
        gbc.writeMem(0xc788, { 0x57 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9239, gbc.sp());
        EXPECT(0xc789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc788));
        // 57 01D0
        gbc.setState(0x163b, 0x5812, 0x6c20, 0xdc61, 0x166f, 0xf891, 0x1, 0x1);
        gbc.writeMem(0x163b, { 0x57 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5812, gbc.sp());
        EXPECT(0x163c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01D1
        gbc.setState(0xac0c, 0xd6b, 0xb330, 0xebff, 0x5fb7, 0xcba6, 0x1, 0x1);
        gbc.writeMem(0xac0c, { 0x57 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd6b, gbc.sp());
        EXPECT(0xac0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xac0c));
        // 57 01D2
        gbc.setState(0x846a, 0x948d, 0x9d10, 0xf28c, 0xf3e3, 0x6556, 0x1, 0x1);
        gbc.writeMem(0x846a, { 0x57 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x948d, gbc.sp());
        EXPECT(0x846b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x846a));
        // 57 01D3
        gbc.setState(0x6bd1, 0x508f, 0xde20, 0x22, 0x6177, 0x549b, 0x0, 0x0);
        gbc.writeMem(0x6bd1, { 0x57 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x508f, gbc.sp());
        EXPECT(0x6bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01D4
        gbc.setState(0x9690, 0x8a50, 0x7700, 0x9e5e, 0x8714, 0x2f99, 0x1, 0x1);
        gbc.writeMem(0x9690, { 0x57 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8a50, gbc.sp());
        EXPECT(0x9691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9690));
        // 57 01D5
        gbc.setState(0x383f, 0x6a4e, 0x6200, 0xd8eb, 0x5443, 0xadbe, 0x1, 0x1);
        gbc.writeMem(0x383f, { 0x57 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6a4e, gbc.sp());
        EXPECT(0x3840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01D6
        gbc.setState(0x352e, 0xa176, 0xfe30, 0x3605, 0x83bf, 0x9051, 0x1, 0x0);
        gbc.writeMem(0x352e, { 0x57 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa176, gbc.sp());
        EXPECT(0x352f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01D7
        gbc.setState(0xa547, 0x7012, 0xd9d0, 0x6e3c, 0xe225, 0xa396, 0x0, 0x0);
        gbc.writeMem(0xa547, { 0x57 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7012, gbc.sp());
        EXPECT(0xa548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa547));
        // 57 01D8
        gbc.setState(0x6c94, 0x82a9, 0xdb90, 0x3a91, 0x9e0a, 0x7914, 0x1, 0x1);
        gbc.writeMem(0x6c94, { 0x57 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x82a9, gbc.sp());
        EXPECT(0x6c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01D9
        gbc.setState(0xcf04, 0x5bf7, 0x8d20, 0xced8, 0x457a, 0xfd08, 0x1, 0x1);
        gbc.writeMem(0xcf04, { 0x57 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5bf7, gbc.sp());
        EXPECT(0xcf05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcf04));
        // 57 01DA
        gbc.setState(0xeb27, 0x80c1, 0xd0c0, 0x43b1, 0xc7be, 0xf6d8, 0x1, 0x0);
        gbc.writeMem(0xeb27, { 0x57 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x80c1, gbc.sp());
        EXPECT(0xeb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xeb27));
        // 57 01DB
        gbc.setState(0xe9c3, 0x5207, 0x6470, 0xf968, 0x27a7, 0xa9d5, 0x0, 0x0);
        gbc.writeMem(0xe9c3, { 0x57 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5207, gbc.sp());
        EXPECT(0xe9c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe9c3));
        // 57 01DC
        gbc.setState(0xb3f5, 0x3a62, 0x56c0, 0x2af, 0x7ad, 0xcf05, 0x1, 0x0);
        gbc.writeMem(0xb3f5, { 0x57 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3a62, gbc.sp());
        EXPECT(0xb3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb3f5));
        // 57 01DD
        gbc.setState(0x1eeb, 0x248f, 0x1160, 0x9446, 0x437d, 0x57e8, 0x0, 0x0);
        gbc.writeMem(0x1eeb, { 0x57 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x248f, gbc.sp());
        EXPECT(0x1eec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01DE
        gbc.setState(0xa2a0, 0x5d54, 0xdd10, 0x9352, 0x78d0, 0x4e03, 0x0, 0x1);
        gbc.writeMem(0xa2a0, { 0x57 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5d54, gbc.sp());
        EXPECT(0xa2a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa2a0));
        // 57 01DF
        gbc.setState(0x725d, 0x3a69, 0xaf90, 0x6858, 0x9aa1, 0xa1d8, 0x1, 0x0);
        gbc.writeMem(0x725d, { 0x57 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3a69, gbc.sp());
        EXPECT(0x725e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01E0
        gbc.setState(0x37e3, 0x58d6, 0xba80, 0x8efb, 0x9223, 0xf2d4, 0x0, 0x0);
        gbc.writeMem(0x37e3, { 0x57 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x58d6, gbc.sp());
        EXPECT(0x37e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01E1
        gbc.setState(0xd933, 0x3da9, 0xcb10, 0x75b7, 0x7118, 0x9d86, 0x0, 0x0);
        gbc.writeMem(0xd933, { 0x57 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3da9, gbc.sp());
        EXPECT(0xd934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd933));
        // 57 01E2
        gbc.setState(0x1726, 0xd6b3, 0x4980, 0xc7af, 0x4555, 0x6348, 0x0, 0x0);
        gbc.writeMem(0x1726, { 0x57 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd6b3, gbc.sp());
        EXPECT(0x1727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01E3
        gbc.setState(0xca5f, 0x92ed, 0x2c20, 0xf083, 0x6e39, 0x496c, 0x0, 0x1);
        gbc.writeMem(0xca5f, { 0x57 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x92ed, gbc.sp());
        EXPECT(0xca60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xca5f));
        // 57 01E4
        gbc.setState(0xca93, 0x6e35, 0x45b0, 0x5339, 0x4ecf, 0xd5e0, 0x1, 0x1);
        gbc.writeMem(0xca93, { 0x57 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6e35, gbc.sp());
        EXPECT(0xca94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xca93));
        // 57 01E5
        gbc.setState(0xe2c7, 0x6426, 0x1ea0, 0xe1b4, 0xff30, 0xdcd7, 0x1, 0x0);
        gbc.writeMem(0xe2c7, { 0x57 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6426, gbc.sp());
        EXPECT(0xe2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe2c7));
        // 57 01E6
        gbc.setState(0xed11, 0x3f08, 0x5c80, 0x74a6, 0x69c3, 0x34f7, 0x0, 0x1);
        gbc.writeMem(0xed11, { 0x57 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3f08, gbc.sp());
        EXPECT(0xed12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xed11));
        // 57 01E7
        gbc.setState(0x6bc7, 0xe854, 0xa990, 0x11d1, 0x2bce, 0xe85a, 0x1, 0x1);
        gbc.writeMem(0x6bc7, { 0x57 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe854, gbc.sp());
        EXPECT(0x6bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01E8
        gbc.setState(0x4227, 0x340c, 0xff30, 0xe887, 0x148a, 0x4efe, 0x0, 0x0);
        gbc.writeMem(0x4227, { 0x57 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x340c, gbc.sp());
        EXPECT(0x4228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01E9
        gbc.setState(0x4498, 0x31c8, 0xf920, 0xfce, 0x66a1, 0x4c9e, 0x1, 0x0);
        gbc.writeMem(0x4498, { 0x57 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x31c8, gbc.sp());
        EXPECT(0x4499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01EA
        gbc.setState(0xab0b, 0xf14a, 0x94c0, 0x1ec7, 0xf36d, 0x5a13, 0x0, 0x1);
        gbc.writeMem(0xab0b, { 0x57 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf14a, gbc.sp());
        EXPECT(0xab0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xab0b));
        // 57 01EB
        gbc.setState(0xb7e5, 0xb6ce, 0x8ed0, 0x3e55, 0x80e, 0x88c4, 0x0, 0x1);
        gbc.writeMem(0xb7e5, { 0x57 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb6ce, gbc.sp());
        EXPECT(0xb7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb7e5));
        // 57 01EC
        gbc.setState(0x22c3, 0xbb57, 0xa380, 0xfbab, 0xf3bf, 0x3eef, 0x1, 0x0);
        gbc.writeMem(0x22c3, { 0x57 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbb57, gbc.sp());
        EXPECT(0x22c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01ED
        gbc.setState(0x4c61, 0x8ac, 0x8190, 0x98b6, 0xa6b2, 0xe0a5, 0x0, 0x0);
        gbc.writeMem(0x4c61, { 0x57 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8ac, gbc.sp());
        EXPECT(0x4c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01EE
        gbc.setState(0x376d, 0x428f, 0xccc0, 0xf28e, 0x1650, 0x29f7, 0x1, 0x1);
        gbc.writeMem(0x376d, { 0x57 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x428f, gbc.sp());
        EXPECT(0x376e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01EF
        gbc.setState(0xa99a, 0xc3d9, 0xbe40, 0xb92f, 0x61d, 0x28ab, 0x0, 0x0);
        gbc.writeMem(0xa99a, { 0x57 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc3d9, gbc.sp());
        EXPECT(0xa99b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa99a));
        // 57 01F1
        gbc.setState(0x756b, 0xfb5c, 0xe100, 0xcf36, 0xa682, 0x4263, 0x1, 0x1);
        gbc.writeMem(0x756b, { 0x57 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfb5c, gbc.sp());
        EXPECT(0x756c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01F2
        gbc.setState(0x673a, 0xe059, 0xfff0, 0x4827, 0x9b22, 0x5c6f, 0x0, 0x0);
        gbc.writeMem(0x673a, { 0x57 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe059, gbc.sp());
        EXPECT(0x673b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01F3
        gbc.setState(0x49aa, 0x85bd, 0xa450, 0xb1c9, 0xc5e, 0x968a, 0x0, 0x0);
        gbc.writeMem(0x49aa, { 0x57 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x85bd, gbc.sp());
        EXPECT(0x49ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01F4
        gbc.setState(0xd3e2, 0x814e, 0x3d80, 0x346f, 0xa3ab, 0x90b3, 0x0, 0x0);
        gbc.writeMem(0xd3e2, { 0x57 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x814e, gbc.sp());
        EXPECT(0xd3e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd3e2));
        // 57 01F5
        gbc.setState(0x6884, 0x6330, 0x1440, 0xed5c, 0x9ced, 0x624c, 0x0, 0x0);
        gbc.writeMem(0x6884, { 0x57 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6330, gbc.sp());
        EXPECT(0x6885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01F6
        gbc.setState(0x4681, 0xcadf, 0xcfe0, 0x7f0, 0x5b28, 0x4d88, 0x1, 0x0);
        gbc.writeMem(0x4681, { 0x57 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcadf, gbc.sp());
        EXPECT(0x4682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01F7
        gbc.setState(0x4238, 0xea03, 0x8080, 0x47cc, 0x1bf9, 0x1f88, 0x1, 0x0);
        gbc.writeMem(0x4238, { 0x57 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xea03, gbc.sp());
        EXPECT(0x4239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01F9
        gbc.setState(0x384, 0x2d0b, 0x1cb0, 0x6470, 0xa13a, 0x6224, 0x0, 0x1);
        gbc.writeMem(0x384, { 0x57 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2d0b, gbc.sp());
        EXPECT(0x385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01FA
        gbc.setState(0xc097, 0x9fbe, 0xefd0, 0xfc5d, 0x6199, 0xa5c5, 0x1, 0x0);
        gbc.writeMem(0xc097, { 0x57 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9fbe, gbc.sp());
        EXPECT(0xc098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc097));
        // 57 01FB
        gbc.setState(0x7207, 0xe57d, 0xf340, 0xd5e5, 0xb19a, 0x6eb0, 0x1, 0x1);
        gbc.writeMem(0x7207, { 0x57 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe57d, gbc.sp());
        EXPECT(0x7208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 01FC
        gbc.setState(0x406c, 0x3a57, 0x5430, 0x5af3, 0x1845, 0x1ca0, 0x0, 0x1);
        gbc.writeMem(0x406c, { 0x57 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3a57, gbc.sp());
        EXPECT(0x406d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01FD
        gbc.setState(0xe6c4, 0x7ab2, 0xef10, 0x6635, 0xfffe, 0xc333, 0x1, 0x1);
        gbc.writeMem(0xe6c4, { 0x57 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7ab2, gbc.sp());
        EXPECT(0xe6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe6c4));
        // 57 01FE
        gbc.setState(0x4bdc, 0x237e, 0xccf0, 0xbe11, 0x242d, 0xfbae, 0x1, 0x0);
        gbc.writeMem(0x4bdc, { 0x57 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x237e, gbc.sp());
        EXPECT(0x4bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 01FF
        gbc.setState(0xc000, 0x7e50, 0x7b0, 0x88e7, 0x39ed, 0xb114, 0x0, 0x0);
        gbc.writeMem(0xc000, { 0x57 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7e50, gbc.sp());
        EXPECT(0xc001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc000));
        // 57 0200
        gbc.setState(0x50bc, 0xc33c, 0xdcd0, 0x2aad, 0x9044, 0xb4cc, 0x0, 0x0);
        gbc.writeMem(0x50bc, { 0x57 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc33c, gbc.sp());
        EXPECT(0x50bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0201
        gbc.setState(0x16a6, 0xfe60, 0x5d20, 0xc88c, 0xcfe, 0x2399, 0x1, 0x0);
        gbc.writeMem(0x16a6, { 0x57 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfe60, gbc.sp());
        EXPECT(0x16a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0202
        gbc.setState(0xb059, 0xcffd, 0xe1b0, 0x370f, 0xa93f, 0xa368, 0x0, 0x1);
        gbc.writeMem(0xb059, { 0x57 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcffd, gbc.sp());
        EXPECT(0xb05a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb059));
        // 57 0203
        gbc.setState(0x3293, 0xf74e, 0xd0d0, 0xa2a9, 0xb4fd, 0xbfb4, 0x0, 0x0);
        gbc.writeMem(0x3293, { 0x57 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf74e, gbc.sp());
        EXPECT(0x3294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0204
        gbc.setState(0x6c7d, 0x6f01, 0x3790, 0x9c30, 0xd687, 0xabe7, 0x0, 0x1);
        gbc.writeMem(0x6c7d, { 0x57 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6f01, gbc.sp());
        EXPECT(0x6c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0205
        gbc.setState(0xcb00, 0x2783, 0xda70, 0x5289, 0xaf01, 0x415, 0x0, 0x0);
        gbc.writeMem(0xcb00, { 0x57 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2783, gbc.sp());
        EXPECT(0xcb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcb00));
        // 57 0207
        gbc.setState(0x2f99, 0x35de, 0x3f00, 0xb102, 0x48c7, 0xda8f, 0x1, 0x0);
        gbc.writeMem(0x2f99, { 0x57 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x35de, gbc.sp());
        EXPECT(0x2f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0208
        gbc.setState(0xe7a7, 0xc8c, 0xde30, 0x5836, 0xa5c2, 0x5d81, 0x1, 0x1);
        gbc.writeMem(0xe7a7, { 0x57 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc8c, gbc.sp());
        EXPECT(0xe7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe7a7));
        // 57 0209
        gbc.setState(0x2c10, 0x20b6, 0xc210, 0xc5e2, 0x983a, 0x9110, 0x1, 0x0);
        gbc.writeMem(0x2c10, { 0x57 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x20b6, gbc.sp());
        EXPECT(0x2c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 020A
        gbc.setState(0xac23, 0x373b, 0x6dd0, 0x83a6, 0x2b7a, 0x244c, 0x1, 0x0);
        gbc.writeMem(0xac23, { 0x57 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x373b, gbc.sp());
        EXPECT(0xac24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xac23));
        // 57 020B
        gbc.setState(0x753c, 0xed36, 0x7230, 0x5792, 0x79a0, 0xc136, 0x1, 0x0);
        gbc.writeMem(0x753c, { 0x57 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xed36, gbc.sp());
        EXPECT(0x753d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 020C
        gbc.setState(0xe39a, 0x841d, 0x18a0, 0x3f9d, 0xe166, 0xac96, 0x1, 0x0);
        gbc.writeMem(0xe39a, { 0x57 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x841d, gbc.sp());
        EXPECT(0xe39b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe39a));
        // 57 020D
        gbc.setState(0x2280, 0x646b, 0x380, 0xe923, 0xd6c2, 0x90d0, 0x0, 0x1);
        gbc.writeMem(0x2280, { 0x57 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x646b, gbc.sp());
        EXPECT(0x2281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 020E
        gbc.setState(0x68c9, 0xdf55, 0x1940, 0xd1ec, 0xb8a5, 0xc924, 0x1, 0x0);
        gbc.writeMem(0x68c9, { 0x57 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdf55, gbc.sp());
        EXPECT(0x68ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 020F
        gbc.setState(0xe86d, 0xf7d5, 0x6c10, 0x1f6d, 0xd6b4, 0x6585, 0x1, 0x1);
        gbc.writeMem(0xe86d, { 0x57 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf7d5, gbc.sp());
        EXPECT(0xe86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe86d));
        // 57 0210
        gbc.setState(0xc054, 0x6afe, 0xd750, 0x25f6, 0xff5e, 0xfc34, 0x0, 0x0);
        gbc.writeMem(0xc054, { 0x57 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6afe, gbc.sp());
        EXPECT(0xc055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc054));
        // 57 0211
        gbc.setState(0xcfb6, 0x9e35, 0x7970, 0x1283, 0xb00e, 0x1135, 0x0, 0x1);
        gbc.writeMem(0xcfb6, { 0x57 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9e35, gbc.sp());
        EXPECT(0xcfb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcfb6));
        // 57 0212
        gbc.setState(0xc9df, 0xeb59, 0xa0, 0xd48c, 0xd19e, 0xa102, 0x1, 0x1);
        gbc.writeMem(0xc9df, { 0x57 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xeb59, gbc.sp());
        EXPECT(0xc9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc9df));
        // 57 0213
        gbc.setState(0xc61, 0xe669, 0x7ae0, 0x23c6, 0x939d, 0x8f58, 0x1, 0x1);
        gbc.writeMem(0xc61, { 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe669, gbc.sp());
        EXPECT(0xc62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0215
        gbc.setState(0x3ca1, 0x2b1f, 0xd770, 0x5688, 0xb9fe, 0xd719, 0x0, 0x0);
        gbc.writeMem(0x3ca1, { 0x57 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2b1f, gbc.sp());
        EXPECT(0x3ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0216
        gbc.setState(0x5017, 0x7146, 0xbed0, 0xd9e6, 0x1c88, 0x4a8c, 0x0, 0x1);
        gbc.writeMem(0x5017, { 0x57 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7146, gbc.sp());
        EXPECT(0x5018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0217
        gbc.setState(0xaf4f, 0xf56c, 0xab90, 0xa358, 0x46b9, 0x1432, 0x0, 0x0);
        gbc.writeMem(0xaf4f, { 0x57 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf56c, gbc.sp());
        EXPECT(0xaf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xaf4f));
        // 57 0218
        gbc.setState(0x869a, 0x504b, 0xa9e0, 0x851d, 0x8aa8, 0x9217, 0x1, 0x0);
        gbc.writeMem(0x869a, { 0x57 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x504b, gbc.sp());
        EXPECT(0x869b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x869a));
        // 57 0219
        gbc.setState(0xed0, 0x41fc, 0x32b0, 0x16ed, 0x3fb7, 0xb98f, 0x0, 0x0);
        gbc.writeMem(0xed0, { 0x57 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x41fc, gbc.sp());
        EXPECT(0xed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 021A
        gbc.setState(0xa603, 0xd187, 0x8870, 0xafa, 0xb3c1, 0xef8, 0x1, 0x0);
        gbc.writeMem(0xa603, { 0x57 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd187, gbc.sp());
        EXPECT(0xa604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa603));
        // 57 021B
        gbc.setState(0xe2, 0xd509, 0x2b40, 0xe80f, 0x3be2, 0xf726, 0x1, 0x0);
        gbc.writeMem(0xe2, { 0x57 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd509, gbc.sp());
        EXPECT(0xe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 021D
        gbc.setState(0x4093, 0x3d32, 0xf970, 0xf5a8, 0xce78, 0xcc54, 0x0, 0x0);
        gbc.writeMem(0x4093, { 0x57 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3d32, gbc.sp());
        EXPECT(0x4094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 021E
        gbc.setState(0x7b4f, 0x89f7, 0xb430, 0x84c0, 0x1de1, 0x49e5, 0x1, 0x1);
        gbc.writeMem(0x7b4f, { 0x57 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x89f7, gbc.sp());
        EXPECT(0x7b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 021F
        gbc.setState(0x7fbc, 0xa5fa, 0x6c80, 0x6c7c, 0xb5ac, 0x91c3, 0x0, 0x1);
        gbc.writeMem(0x7fbc, { 0x57 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa5fa, gbc.sp());
        EXPECT(0x7fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0220
        gbc.setState(0x6830, 0xdbd1, 0xa760, 0x6280, 0x4d11, 0xf930, 0x0, 0x0);
        gbc.writeMem(0x6830, { 0x57 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdbd1, gbc.sp());
        EXPECT(0x6831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0221
        gbc.setState(0xe47e, 0xca1b, 0x7870, 0x72a8, 0xc8e6, 0xe973, 0x1, 0x1);
        gbc.writeMem(0xe47e, { 0x57 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xca1b, gbc.sp());
        EXPECT(0xe47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe47e));
        // 57 0222
        gbc.setState(0x52f9, 0xb52e, 0xa180, 0x249a, 0x979f, 0xedee, 0x0, 0x1);
        gbc.writeMem(0x52f9, { 0x57 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb52e, gbc.sp());
        EXPECT(0x52fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0223
        gbc.setState(0x6e4, 0x62dc, 0x32d0, 0x833c, 0x4e0d, 0x951d, 0x1, 0x0);
        gbc.writeMem(0x6e4, { 0x57 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x62dc, gbc.sp());
        EXPECT(0x6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0224
        gbc.setState(0xa2c6, 0xe57d, 0x6970, 0x1a07, 0x8915, 0x2acd, 0x1, 0x1);
        gbc.writeMem(0xa2c6, { 0x57 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe57d, gbc.sp());
        EXPECT(0xa2c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa2c6));
        // 57 0225
        gbc.setState(0xcc9f, 0x3975, 0x870, 0xc09e, 0x9fbd, 0x989f, 0x1, 0x1);
        gbc.writeMem(0xcc9f, { 0x57 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3975, gbc.sp());
        EXPECT(0xcca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcc9f));
        // 57 0226
        gbc.setState(0x8cd8, 0xdf26, 0x94a0, 0xaf41, 0xc4cf, 0xb58e, 0x0, 0x0);
        gbc.writeMem(0x8cd8, { 0x57 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdf26, gbc.sp());
        EXPECT(0x8cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8cd8));
        // 57 0227
        gbc.setState(0x6c48, 0xb534, 0xa3e0, 0x4228, 0x8614, 0xc023, 0x0, 0x1);
        gbc.writeMem(0x6c48, { 0x57 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb534, gbc.sp());
        EXPECT(0x6c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0228
        gbc.setState(0xb9af, 0x1f4a, 0x49d0, 0x92dd, 0x5682, 0xe74, 0x1, 0x0);
        gbc.writeMem(0xb9af, { 0x57 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1f4a, gbc.sp());
        EXPECT(0xb9b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb9af));
        // 57 0229
        gbc.setState(0x3917, 0x6d29, 0xa1f0, 0x3e73, 0x7b9a, 0xe004, 0x1, 0x1);
        gbc.writeMem(0x3917, { 0x57 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6d29, gbc.sp());
        EXPECT(0x3918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 022A
        gbc.setState(0x90f5, 0x31f0, 0x8760, 0xa1a, 0x5b12, 0xf15, 0x1, 0x0);
        gbc.writeMem(0x90f5, { 0x57 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x31f0, gbc.sp());
        EXPECT(0x90f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x90f5));
        // 57 022B
        gbc.setState(0x5402, 0x7d52, 0xaa70, 0x1f69, 0xfb8b, 0x7a6b, 0x1, 0x1);
        gbc.writeMem(0x5402, { 0x57 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7d52, gbc.sp());
        EXPECT(0x5403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 022C
        gbc.setState(0xd64e, 0xb99e, 0x1110, 0x6990, 0x92d7, 0xc1a6, 0x1, 0x0);
        gbc.writeMem(0xd64e, { 0x57 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb99e, gbc.sp());
        EXPECT(0xd64f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd64e));
        // 57 022D
        gbc.setState(0x8a1f, 0xccae, 0xf610, 0xc90b, 0x10a6, 0xc3c, 0x1, 0x0);
        gbc.writeMem(0x8a1f, { 0x57 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xccae, gbc.sp());
        EXPECT(0x8a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8a1f));
        // 57 022E
        gbc.setState(0xe672, 0x68b4, 0x14d0, 0xf8b7, 0x5d8d, 0xf32, 0x0, 0x0);
        gbc.writeMem(0xe672, { 0x57 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x68b4, gbc.sp());
        EXPECT(0xe673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe672));
        // 57 022F
        gbc.setState(0x55ae, 0xd4e8, 0x3690, 0x89c3, 0xa0a6, 0xa9f9, 0x0, 0x1);
        gbc.writeMem(0x55ae, { 0x57 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd4e8, gbc.sp());
        EXPECT(0x55af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0230
        gbc.setState(0x8c4e, 0x72d1, 0x3370, 0x1bc3, 0xd6d5, 0x20b5, 0x0, 0x0);
        gbc.writeMem(0x8c4e, { 0x57 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x72d1, gbc.sp());
        EXPECT(0x8c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8c4e));
        // 57 0231
        gbc.setState(0x162b, 0xa3e6, 0xf6d0, 0x70be, 0xa6e0, 0x9bc7, 0x1, 0x0);
        gbc.writeMem(0x162b, { 0x57 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa3e6, gbc.sp());
        EXPECT(0x162c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0232
        gbc.setState(0xb3bb, 0xd40c, 0x8e80, 0x4105, 0x736d, 0x48a3, 0x1, 0x0);
        gbc.writeMem(0xb3bb, { 0x57 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd40c, gbc.sp());
        EXPECT(0xb3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb3bb));
        // 57 0233
        gbc.setState(0xd538, 0xa04e, 0x42d0, 0xaddd, 0xe26d, 0x1895, 0x1, 0x1);
        gbc.writeMem(0xd538, { 0x57 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa04e, gbc.sp());
        EXPECT(0xd539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd538));
        // 57 0234
        gbc.setState(0x75e1, 0x8191, 0x38e0, 0x5c9c, 0x463, 0xf532, 0x0, 0x1);
        gbc.writeMem(0x75e1, { 0x57 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8191, gbc.sp());
        EXPECT(0x75e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0235
        gbc.setState(0xd742, 0x3767, 0x6840, 0xf5b0, 0x9055, 0x9324, 0x1, 0x1);
        gbc.writeMem(0xd742, { 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3767, gbc.sp());
        EXPECT(0xd743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd742));
        // 57 0236
        gbc.setState(0x82a5, 0x3c38, 0x810, 0xb568, 0x3fda, 0x40a2, 0x1, 0x0);
        gbc.writeMem(0x82a5, { 0x57 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3c38, gbc.sp());
        EXPECT(0x82a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x82a5));
        // 57 0237
        gbc.setState(0x718b, 0x4fd0, 0x2410, 0xa3db, 0xa3bc, 0xef44, 0x1, 0x0);
        gbc.writeMem(0x718b, { 0x57 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4fd0, gbc.sp());
        EXPECT(0x718c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0238
        gbc.setState(0x199f, 0x6b39, 0x50f0, 0x7656, 0xaddf, 0x1df8, 0x1, 0x1);
        gbc.writeMem(0x199f, { 0x57 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6b39, gbc.sp());
        EXPECT(0x19a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0239
        gbc.setState(0xcd44, 0xc2c0, 0x1f70, 0xb990, 0x75d2, 0x37e5, 0x0, 0x0);
        gbc.writeMem(0xcd44, { 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc2c0, gbc.sp());
        EXPECT(0xcd45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcd44));
        // 57 023A
        gbc.setState(0x5e51, 0xeef7, 0xf8b0, 0x1a7d, 0x69f4, 0x9eef, 0x0, 0x0);
        gbc.writeMem(0x5e51, { 0x57 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xeef7, gbc.sp());
        EXPECT(0x5e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 023B
        gbc.setState(0x3054, 0xc1f5, 0x82d0, 0x89a2, 0x4f9a, 0x22ff, 0x0, 0x1);
        gbc.writeMem(0x3054, { 0x57 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc1f5, gbc.sp());
        EXPECT(0x3055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 023C
        gbc.setState(0x97ba, 0xc7cd, 0xa600, 0x51f0, 0xc8f4, 0x4560, 0x1, 0x1);
        gbc.writeMem(0x97ba, { 0x57 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc7cd, gbc.sp());
        EXPECT(0x97bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x97ba));
        // 57 023E
        gbc.setState(0x7812, 0x2741, 0x5b0, 0x20b7, 0x5c02, 0x4edd, 0x0, 0x0);
        gbc.writeMem(0x7812, { 0x57 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2741, gbc.sp());
        EXPECT(0x7813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 023F
        gbc.setState(0xbddd, 0x819, 0xe20, 0xbe44, 0x6722, 0x8957, 0x0, 0x1);
        gbc.writeMem(0xbddd, { 0x57 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x819, gbc.sp());
        EXPECT(0xbdde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbddd));
        // 57 0240
        gbc.setState(0x676, 0x39c4, 0x98d0, 0x4f4a, 0x8eac, 0xb940, 0x1, 0x0);
        gbc.writeMem(0x676, { 0x57 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x39c4, gbc.sp());
        EXPECT(0x677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0241
        gbc.setState(0xbfde, 0x3868, 0x9710, 0xaf28, 0x37ed, 0x4ec9, 0x0, 0x0);
        gbc.writeMem(0xbfde, { 0x57 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3868, gbc.sp());
        EXPECT(0xbfdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbfde));
        // 57 0242
        gbc.setState(0x52a4, 0x9ff, 0x98a0, 0xf30e, 0xbdab, 0xd7a9, 0x0, 0x1);
        gbc.writeMem(0x52a4, { 0x57 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9ff, gbc.sp());
        EXPECT(0x52a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0243
        gbc.setState(0x3e77, 0xabfa, 0x450, 0xce4b, 0xe6dc, 0x356b, 0x0, 0x1);
        gbc.writeMem(0x3e77, { 0x57 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xabfa, gbc.sp());
        EXPECT(0x3e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0244
        gbc.setState(0x14e4, 0x8c96, 0x9740, 0x6d5f, 0x5512, 0x110f, 0x0, 0x0);
        gbc.writeMem(0x14e4, { 0x57 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8c96, gbc.sp());
        EXPECT(0x14e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0245
        gbc.setState(0xc209, 0xbc02, 0x3380, 0xd270, 0x8a73, 0xc2ef, 0x1, 0x0);
        gbc.writeMem(0xc209, { 0x57 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbc02, gbc.sp());
        EXPECT(0xc20a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc209));
        // 57 0246
        gbc.setState(0x13d6, 0x9981, 0xa820, 0x7ea6, 0x413b, 0x1ad2, 0x1, 0x0);
        gbc.writeMem(0x13d6, { 0x57 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9981, gbc.sp());
        EXPECT(0x13d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0247
        gbc.setState(0x179f, 0x45f4, 0xb1d0, 0xfc7d, 0x19fd, 0x44dc, 0x0, 0x1);
        gbc.writeMem(0x179f, { 0x57 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x45f4, gbc.sp());
        EXPECT(0x17a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0248
        gbc.setState(0xb8b8, 0x2408, 0xbf80, 0x1ed0, 0xe7a2, 0xd540, 0x0, 0x0);
        gbc.writeMem(0xb8b8, { 0x57 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2408, gbc.sp());
        EXPECT(0xb8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb8b8));
        // 57 0249
        gbc.setState(0x1a4e, 0x218a, 0x640, 0x1fef, 0x7802, 0x2d96, 0x0, 0x0);
        gbc.writeMem(0x1a4e, { 0x57 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x218a, gbc.sp());
        EXPECT(0x1a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 024A
        gbc.setState(0xc386, 0xf902, 0x51b0, 0xe7bc, 0x48fb, 0x1f97, 0x1, 0x0);
        gbc.writeMem(0xc386, { 0x57 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf902, gbc.sp());
        EXPECT(0xc387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc386));
        // 57 024B
        gbc.setState(0x9749, 0xd2dd, 0xc350, 0x1e41, 0x3ce3, 0x1ac6, 0x0, 0x1);
        gbc.writeMem(0x9749, { 0x57 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd2dd, gbc.sp());
        EXPECT(0x974a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9749));
        // 57 024C
        gbc.setState(0x4ccb, 0x190d, 0x3a30, 0x94c1, 0xb426, 0x4edd, 0x0, 0x1);
        gbc.writeMem(0x4ccb, { 0x57 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x190d, gbc.sp());
        EXPECT(0x4ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 024D
        gbc.setState(0xb2bc, 0x47fc, 0x3c20, 0x998b, 0xc6d3, 0xb6cb, 0x1, 0x0);
        gbc.writeMem(0xb2bc, { 0x57 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x47fc, gbc.sp());
        EXPECT(0xb2bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb2bc));
        // 57 024E
        gbc.setState(0x7b8f, 0x7a9, 0xda80, 0xdaa8, 0x8d0f, 0xab5, 0x0, 0x1);
        gbc.writeMem(0x7b8f, { 0x57 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7a9, gbc.sp());
        EXPECT(0x7b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 024F
        gbc.setState(0xd250, 0x4fcb, 0x4090, 0xa584, 0x8ba2, 0xe69d, 0x0, 0x1);
        gbc.writeMem(0xd250, { 0x57 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4fcb, gbc.sp());
        EXPECT(0xd251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd250));
        // 57 0250
        gbc.setState(0xbc62, 0xd8a, 0x2c40, 0xf442, 0x902e, 0x4b01, 0x0, 0x0);
        gbc.writeMem(0xbc62, { 0x57 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd8a, gbc.sp());
        EXPECT(0xbc63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbc62));
        // 57 0251
        gbc.setState(0xb330, 0xa909, 0xc980, 0xe875, 0xc09e, 0xf9e3, 0x1, 0x1);
        gbc.writeMem(0xb330, { 0x57 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa909, gbc.sp());
        EXPECT(0xb331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb330));
        // 57 0252
        gbc.setState(0x9184, 0x6577, 0xb180, 0xaeb2, 0xaa9, 0xa40c, 0x1, 0x0);
        gbc.writeMem(0x9184, { 0x57 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6577, gbc.sp());
        EXPECT(0x9185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9184));
        // 57 0253
        gbc.setState(0x4769, 0xc5b7, 0x25c0, 0x13c4, 0x29e5, 0x74d1, 0x0, 0x1);
        gbc.writeMem(0x4769, { 0x57 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc5b7, gbc.sp());
        EXPECT(0x476a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0254
        gbc.setState(0x7c63, 0xed92, 0x9e30, 0x1d08, 0xf4cf, 0x356c, 0x1, 0x0);
        gbc.writeMem(0x7c63, { 0x57 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xed92, gbc.sp());
        EXPECT(0x7c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0255
        gbc.setState(0x2eff, 0x862f, 0x5710, 0x2f0b, 0xbe9a, 0x296d, 0x1, 0x0);
        gbc.writeMem(0x2eff, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x862f, gbc.sp());
        EXPECT(0x2f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0256
        gbc.setState(0x4bfe, 0x92f, 0x7b20, 0x2e88, 0x4543, 0xfdf7, 0x0, 0x0);
        gbc.writeMem(0x4bfe, { 0x57 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x92f, gbc.sp());
        EXPECT(0x4bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0257
        gbc.setState(0x8ac5, 0xc3b9, 0x1a20, 0xd1ba, 0x5334, 0x4de7, 0x0, 0x0);
        gbc.writeMem(0x8ac5, { 0x57 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc3b9, gbc.sp());
        EXPECT(0x8ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8ac5));
        // 57 0258
        gbc.setState(0xb239, 0xd38a, 0xa190, 0x8d84, 0x80ca, 0xf28e, 0x0, 0x1);
        gbc.writeMem(0xb239, { 0x57 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd38a, gbc.sp());
        EXPECT(0xb23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb239));
        // 57 0259
        gbc.setState(0x1982, 0x77fc, 0xa8a0, 0xd22, 0x3453, 0x3706, 0x1, 0x1);
        gbc.writeMem(0x1982, { 0x57 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x77fc, gbc.sp());
        EXPECT(0x1983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 025A
        gbc.setState(0x9548, 0x616c, 0x3760, 0xd2ba, 0xb5d8, 0xa25d, 0x0, 0x0);
        gbc.writeMem(0x9548, { 0x57 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x616c, gbc.sp());
        EXPECT(0x9549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9548));
        // 57 025B
        gbc.setState(0xd809, 0xcab9, 0x4fa0, 0x37da, 0x8039, 0x1649, 0x0, 0x0);
        gbc.writeMem(0xd809, { 0x57 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcab9, gbc.sp());
        EXPECT(0xd80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd809));
        // 57 025C
        gbc.setState(0x7858, 0x2e96, 0xaeb0, 0xd2b0, 0x850a, 0x3a59, 0x0, 0x1);
        gbc.writeMem(0x7858, { 0x57 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2e96, gbc.sp());
        EXPECT(0x7859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 025D
        gbc.setState(0xe85f, 0x574c, 0x9760, 0x7b12, 0x1f86, 0xd5ad, 0x1, 0x1);
        gbc.writeMem(0xe85f, { 0x57 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x574c, gbc.sp());
        EXPECT(0xe860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe85f));
        // 57 025E
        gbc.setState(0x85c8, 0x1f53, 0x4b90, 0x36e9, 0x2d8a, 0xc141, 0x1, 0x1);
        gbc.writeMem(0x85c8, { 0x57 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1f53, gbc.sp());
        EXPECT(0x85c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x85c8));
        // 57 025F
        gbc.setState(0x8cb3, 0x1d76, 0x2a60, 0x799a, 0x88cd, 0xf650, 0x1, 0x0);
        gbc.writeMem(0x8cb3, { 0x57 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1d76, gbc.sp());
        EXPECT(0x8cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8cb3));
        // 57 0260
        gbc.setState(0x10f8, 0xb441, 0xda0, 0x41c4, 0x35b6, 0xc630, 0x1, 0x0);
        gbc.writeMem(0x10f8, { 0x57 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb441, gbc.sp());
        EXPECT(0x10f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0261
        gbc.setState(0xed4c, 0x8d74, 0xe3b0, 0x46cc, 0xd1f1, 0x257b, 0x1, 0x0);
        gbc.writeMem(0xed4c, { 0x57 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8d74, gbc.sp());
        EXPECT(0xed4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xed4c));
        // 57 0262
        gbc.setState(0x93af, 0x3834, 0xe240, 0x48d1, 0x3e34, 0x509e, 0x1, 0x0);
        gbc.writeMem(0x93af, { 0x57 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3834, gbc.sp());
        EXPECT(0x93b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x93af));
        // 57 0263
        gbc.setState(0xabb0, 0xb18c, 0x5c20, 0x241c, 0x4897, 0xb6d8, 0x0, 0x0);
        gbc.writeMem(0xabb0, { 0x57 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb18c, gbc.sp());
        EXPECT(0xabb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xabb0));
        // 57 0264
        gbc.setState(0xb387, 0x4132, 0xbcf0, 0xb550, 0x13b8, 0x38f7, 0x1, 0x0);
        gbc.writeMem(0xb387, { 0x57 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4132, gbc.sp());
        EXPECT(0xb388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb387));
        // 57 0265
        gbc.setState(0x761, 0x7c5e, 0xf8c0, 0xee78, 0xcb9e, 0xa64, 0x0, 0x1);
        gbc.writeMem(0x761, { 0x57 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7c5e, gbc.sp());
        EXPECT(0x762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0266
        gbc.setState(0x454, 0x8f51, 0x43e0, 0x4a89, 0xf8b2, 0x557b, 0x1, 0x1);
        gbc.writeMem(0x454, { 0x57 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8f51, gbc.sp());
        EXPECT(0x455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0267
        gbc.setState(0x76c9, 0xfe0a, 0x88e0, 0x8f46, 0x8655, 0x57aa, 0x1, 0x0);
        gbc.writeMem(0x76c9, { 0x57 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfe0a, gbc.sp());
        EXPECT(0x76ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0268
        gbc.setState(0x8462, 0x3c18, 0xcc00, 0xe187, 0xe835, 0x6fbd, 0x0, 0x1);
        gbc.writeMem(0x8462, { 0x57 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3c18, gbc.sp());
        EXPECT(0x8463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8462));
        // 57 0269
        gbc.setState(0x1adf, 0x3771, 0xdfa0, 0x14fd, 0x434, 0xb081, 0x0, 0x1);
        gbc.writeMem(0x1adf, { 0x57 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3771, gbc.sp());
        EXPECT(0x1ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 026A
        gbc.setState(0x669b, 0x1ee0, 0x8310, 0x9ef9, 0x31c, 0xb15d, 0x0, 0x0);
        gbc.writeMem(0x669b, { 0x57 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1ee0, gbc.sp());
        EXPECT(0x669c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 026B
        gbc.setState(0xdf14, 0xa47a, 0xe1c0, 0xe10e, 0xd389, 0x8504, 0x0, 0x1);
        gbc.writeMem(0xdf14, { 0x57 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa47a, gbc.sp());
        EXPECT(0xdf15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdf14));
        // 57 026C
        gbc.setState(0xdccc, 0x8a37, 0x52e0, 0x184d, 0x9589, 0x54c0, 0x1, 0x0);
        gbc.writeMem(0xdccc, { 0x57 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8a37, gbc.sp());
        EXPECT(0xdccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdccc));
        // 57 026E
        gbc.setState(0x6c7a, 0xa4a8, 0x5cc0, 0xbb2f, 0x2043, 0x8077, 0x1, 0x1);
        gbc.writeMem(0x6c7a, { 0x57 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa4a8, gbc.sp());
        EXPECT(0x6c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 026F
        gbc.setState(0x9be2, 0x19b, 0x7440, 0x13cf, 0x9210, 0x4e70, 0x1, 0x1);
        gbc.writeMem(0x9be2, { 0x57 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x19b, gbc.sp());
        EXPECT(0x9be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9be2));
        // 57 0270
        gbc.setState(0xd2f9, 0x5c54, 0x1f10, 0x2a5d, 0x8f0e, 0xa80a, 0x0, 0x0);
        gbc.writeMem(0xd2f9, { 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5c54, gbc.sp());
        EXPECT(0xd2fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd2f9));
        // 57 0271
        gbc.setState(0x8b89, 0x4ef6, 0x2560, 0x3ae6, 0x2138, 0xabe6, 0x0, 0x0);
        gbc.writeMem(0x8b89, { 0x57 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4ef6, gbc.sp());
        EXPECT(0x8b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8b89));
        // 57 0272
        gbc.setState(0x979f, 0x10fe, 0x1dc0, 0x3178, 0x29f, 0x1fb, 0x1, 0x0);
        gbc.writeMem(0x979f, { 0x57 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x10fe, gbc.sp());
        EXPECT(0x97a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x979f));
        // 57 0273
        gbc.setState(0xd4d1, 0xc457, 0xfa30, 0xad79, 0xecd0, 0xd57d, 0x0, 0x0);
        gbc.writeMem(0xd4d1, { 0x57 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc457, gbc.sp());
        EXPECT(0xd4d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd4d1));
        // 57 0274
        gbc.setState(0xaf32, 0xaa98, 0xf860, 0x921, 0xb227, 0x34cd, 0x1, 0x1);
        gbc.writeMem(0xaf32, { 0x57 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xaa98, gbc.sp());
        EXPECT(0xaf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xaf32));
        // 57 0275
        gbc.setState(0xbdff, 0xfd3, 0x2580, 0x2e1b, 0xd51, 0xeb7e, 0x1, 0x0);
        gbc.writeMem(0xbdff, { 0x57 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfd3, gbc.sp());
        EXPECT(0xbe00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbdff));
        // 57 0276
        gbc.setState(0xc116, 0xe7db, 0xd610, 0x1102, 0x232, 0x5cb8, 0x1, 0x0);
        gbc.writeMem(0xc116, { 0x57 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe7db, gbc.sp());
        EXPECT(0xc117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc116));
        // 57 0277
        gbc.setState(0x32e, 0xd8e0, 0x19e0, 0x3df1, 0xd073, 0x9312, 0x0, 0x1);
        gbc.writeMem(0x32e, { 0x57 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd8e0, gbc.sp());
        EXPECT(0x32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0278
        gbc.setState(0x24d5, 0x2d86, 0x7030, 0x2abd, 0x9890, 0x8929, 0x0, 0x0);
        gbc.writeMem(0x24d5, { 0x57 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2d86, gbc.sp());
        EXPECT(0x24d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0279
        gbc.setState(0x273b, 0x9090, 0xf440, 0x9c3c, 0xfa86, 0xd21c, 0x1, 0x1);
        gbc.writeMem(0x273b, { 0x57 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9090, gbc.sp());
        EXPECT(0x273c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 027A
        gbc.setState(0xbcaa, 0xbcd7, 0xbfe0, 0xac85, 0xa3ee, 0x2cbd, 0x0, 0x0);
        gbc.writeMem(0xbcaa, { 0x57 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbcd7, gbc.sp());
        EXPECT(0xbcab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbcaa));
        // 57 027B
        gbc.setState(0xe10c, 0xbe06, 0x49c0, 0x9809, 0xc1fb, 0xbdcd, 0x1, 0x0);
        gbc.writeMem(0xe10c, { 0x57 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbe06, gbc.sp());
        EXPECT(0xe10d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe10c));
        // 57 027C
        gbc.setState(0x7e1c, 0x72cf, 0x9e80, 0x27f9, 0xe47, 0xacbc, 0x0, 0x1);
        gbc.writeMem(0x7e1c, { 0x57 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x72cf, gbc.sp());
        EXPECT(0x7e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 027D
        gbc.setState(0x27d2, 0x6787, 0x68d0, 0x2a69, 0xf1e, 0x79a9, 0x1, 0x0);
        gbc.writeMem(0x27d2, { 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6787, gbc.sp());
        EXPECT(0x27d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 027E
        gbc.setState(0x5695, 0xe03c, 0xa260, 0x4aa4, 0xd0ed, 0x5ce, 0x0, 0x0);
        gbc.writeMem(0x5695, { 0x57 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe03c, gbc.sp());
        EXPECT(0x5696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 027F
        gbc.setState(0x2683, 0xd20a, 0x41a0, 0xa3e1, 0xa818, 0x69ef, 0x1, 0x1);
        gbc.writeMem(0x2683, { 0x57 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd20a, gbc.sp());
        EXPECT(0x2684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0280
        gbc.setState(0xb2c1, 0xa554, 0x3470, 0xd1e3, 0x2ea0, 0x520c, 0x1, 0x0);
        gbc.writeMem(0xb2c1, { 0x57 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa554, gbc.sp());
        EXPECT(0xb2c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb2c1));
        // 57 0281
        gbc.setState(0xa402, 0x71ea, 0x57f0, 0xb756, 0x10, 0x6130, 0x0, 0x1);
        gbc.writeMem(0xa402, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x71ea, gbc.sp());
        EXPECT(0xa403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa402));
        // 57 0282
        gbc.setState(0xdfa6, 0x8097, 0x1d40, 0xeddf, 0x3d0b, 0x5dad, 0x0, 0x0);
        gbc.writeMem(0xdfa6, { 0x57 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8097, gbc.sp());
        EXPECT(0xdfa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdfa6));
        // 57 0283
        gbc.setState(0xd99f, 0x41e3, 0xddf0, 0x978, 0xb3f0, 0x6ed9, 0x1, 0x1);
        gbc.writeMem(0xd99f, { 0x57 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x41e3, gbc.sp());
        EXPECT(0xd9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd99f));
        // 57 0284
        gbc.setState(0x3f7e, 0x9fd9, 0x33f0, 0xc384, 0x3868, 0x4594, 0x1, 0x1);
        gbc.writeMem(0x3f7e, { 0x57 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9fd9, gbc.sp());
        EXPECT(0x3f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0285
        gbc.setState(0xdc52, 0xbefd, 0xefb0, 0x5c50, 0x1499, 0xf3b8, 0x1, 0x0);
        gbc.writeMem(0xdc52, { 0x57 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbefd, gbc.sp());
        EXPECT(0xdc53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdc52));
        // 57 0286
        gbc.setState(0x80ed, 0x3102, 0x4420, 0x24c1, 0x1c41, 0x7359, 0x1, 0x0);
        gbc.writeMem(0x80ed, { 0x57 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3102, gbc.sp());
        EXPECT(0x80ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x80ed));
        // 57 0287
        gbc.setState(0x705e, 0x3153, 0x43d0, 0x33b4, 0xdc4e, 0x6a45, 0x0, 0x0);
        gbc.writeMem(0x705e, { 0x57 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3153, gbc.sp());
        EXPECT(0x705f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0288
        gbc.setState(0xaea0, 0x2387, 0xad90, 0xefa3, 0x6737, 0x1fc0, 0x1, 0x1);
        gbc.writeMem(0xaea0, { 0x57 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2387, gbc.sp());
        EXPECT(0xaea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xaea0));
        // 57 0289
        gbc.setState(0x4a88, 0xbc9e, 0x7f50, 0x7cc3, 0x710, 0xc2c3, 0x0, 0x1);
        gbc.writeMem(0x4a88, { 0x57 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbc9e, gbc.sp());
        EXPECT(0x4a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 028A
        gbc.setState(0x147b, 0xf77b, 0x3250, 0x4377, 0x1926, 0xd715, 0x0, 0x0);
        gbc.writeMem(0x147b, { 0x57 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf77b, gbc.sp());
        EXPECT(0x147c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 028B
        gbc.setState(0x3eba, 0x6e3d, 0x5810, 0x282a, 0xc697, 0x115a, 0x1, 0x0);
        gbc.writeMem(0x3eba, { 0x57 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6e3d, gbc.sp());
        EXPECT(0x3ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 028C
        gbc.setState(0x9643, 0x2764, 0x7250, 0xca99, 0xf81d, 0xb910, 0x1, 0x1);
        gbc.writeMem(0x9643, { 0x57 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2764, gbc.sp());
        EXPECT(0x9644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9643));
        // 57 028D
        gbc.setState(0x8919, 0x8da9, 0x40c0, 0x8483, 0xcf1e, 0x94b7, 0x1, 0x1);
        gbc.writeMem(0x8919, { 0x57 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8da9, gbc.sp());
        EXPECT(0x891a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8919));
        // 57 028E
        gbc.setState(0xcf3e, 0x7aaa, 0xf3c0, 0x759, 0xd0f4, 0x6a63, 0x0, 0x1);
        gbc.writeMem(0xcf3e, { 0x57 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7aaa, gbc.sp());
        EXPECT(0xcf3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcf3e));
        // 57 0290
        gbc.setState(0xaaf0, 0xe613, 0xde0, 0xbbef, 0xe05b, 0x44f, 0x1, 0x0);
        gbc.writeMem(0xaaf0, { 0x57 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe613, gbc.sp());
        EXPECT(0xaaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xaaf0));
        // 57 0292
        gbc.setState(0xbc08, 0xce9f, 0x260, 0x1ca0, 0x4e18, 0xcbb8, 0x1, 0x0);
        gbc.writeMem(0xbc08, { 0x57 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xce9f, gbc.sp());
        EXPECT(0xbc09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbc08));
        // 57 0293
        gbc.setState(0x342f, 0xd2f, 0x2eb0, 0x8060, 0x7294, 0xcfbe, 0x1, 0x1);
        gbc.writeMem(0x342f, { 0x57 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd2f, gbc.sp());
        EXPECT(0x3430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0294
        gbc.setState(0x9d6c, 0x7bfe, 0xe4b0, 0x74e0, 0xc8d7, 0x6653, 0x1, 0x0);
        gbc.writeMem(0x9d6c, { 0x57 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7bfe, gbc.sp());
        EXPECT(0x9d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9d6c));
        // 57 0295
        gbc.setState(0xa8d0, 0x6ac8, 0x7960, 0x202, 0x7ae4, 0x1f4, 0x1, 0x0);
        gbc.writeMem(0xa8d0, { 0x57 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6ac8, gbc.sp());
        EXPECT(0xa8d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa8d0));
        // 57 0296
        gbc.setState(0x69ca, 0xa23b, 0xd770, 0x443c, 0x45ca, 0x4981, 0x1, 0x1);
        gbc.writeMem(0x69ca, { 0x57 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa23b, gbc.sp());
        EXPECT(0x69cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0297
        gbc.setState(0x2716, 0xdf5f, 0x51e0, 0x5d42, 0xd5c5, 0xa933, 0x1, 0x0);
        gbc.writeMem(0x2716, { 0x57 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdf5f, gbc.sp());
        EXPECT(0x2717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0298
        gbc.setState(0x2df8, 0xda95, 0xe660, 0x13c8, 0x687e, 0x9611, 0x1, 0x1);
        gbc.writeMem(0x2df8, { 0x57 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xda95, gbc.sp());
        EXPECT(0x2df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0299
        gbc.setState(0x98c1, 0xd382, 0xe350, 0xf154, 0x9d89, 0x48d5, 0x1, 0x0);
        gbc.writeMem(0x98c1, { 0x57 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd382, gbc.sp());
        EXPECT(0x98c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x98c1));
        // 57 029B
        gbc.setState(0x831a, 0x16c3, 0xa2e0, 0x927a, 0x9b6f, 0x8a9c, 0x0, 0x0);
        gbc.writeMem(0x831a, { 0x57 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x16c3, gbc.sp());
        EXPECT(0x831b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x831a));
        // 57 029C
        gbc.setState(0x8d52, 0x7864, 0xf1d0, 0x8590, 0x5139, 0xeb6f, 0x0, 0x1);
        gbc.writeMem(0x8d52, { 0x57 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7864, gbc.sp());
        EXPECT(0x8d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8d52));
        // 57 029D
        gbc.setState(0x4075, 0x3507, 0xdb90, 0x31ba, 0xad28, 0xb98b, 0x0, 0x0);
        gbc.writeMem(0x4075, { 0x57 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3507, gbc.sp());
        EXPECT(0x4076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 029E
        gbc.setState(0xa65, 0x1afd, 0xcc30, 0xa622, 0x6bff, 0xf43a, 0x1, 0x0);
        gbc.writeMem(0xa65, { 0x57 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1afd, gbc.sp());
        EXPECT(0xa66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 029F
        gbc.setState(0x2731, 0x49f0, 0xf9c0, 0x489b, 0x341e, 0xbe0b, 0x0, 0x0);
        gbc.writeMem(0x2731, { 0x57 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x49f0, gbc.sp());
        EXPECT(0x2732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02A0
        gbc.setState(0xaeab, 0xb02d, 0xb380, 0x1c3c, 0x6c24, 0x83d3, 0x0, 0x0);
        gbc.writeMem(0xaeab, { 0x57 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb02d, gbc.sp());
        EXPECT(0xaeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xaeab));
        // 57 02A1
        gbc.setState(0x4636, 0xb76a, 0x1cc0, 0xc1bd, 0x4094, 0xd1a8, 0x0, 0x0);
        gbc.writeMem(0x4636, { 0x57 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb76a, gbc.sp());
        EXPECT(0x4637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02A2
        gbc.setState(0x68bd, 0x66bb, 0xd1d0, 0x1b45, 0x876f, 0x5065, 0x1, 0x0);
        gbc.writeMem(0x68bd, { 0x57 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x66bb, gbc.sp());
        EXPECT(0x68be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02A3
        gbc.setState(0xc598, 0x17d7, 0x1030, 0x7f7f, 0xabf4, 0x374d, 0x0, 0x1);
        gbc.writeMem(0xc598, { 0x57 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x17d7, gbc.sp());
        EXPECT(0xc599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc598));
        // 57 02A4
        gbc.setState(0xc96b, 0x4f3c, 0x4970, 0x3e07, 0xe111, 0x6a90, 0x0, 0x0);
        gbc.writeMem(0xc96b, { 0x57 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4f3c, gbc.sp());
        EXPECT(0xc96c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc96b));
        // 57 02A5
        gbc.setState(0x2b1c, 0x8739, 0xaf30, 0x8952, 0xcaf1, 0x7ff9, 0x0, 0x0);
        gbc.writeMem(0x2b1c, { 0x57 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8739, gbc.sp());
        EXPECT(0x2b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02A6
        gbc.setState(0xadee, 0x7d1c, 0xade0, 0xbdce, 0x5225, 0xd24f, 0x0, 0x0);
        gbc.writeMem(0xadee, { 0x57 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7d1c, gbc.sp());
        EXPECT(0xadef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xadee));
        // 57 02A7
        gbc.setState(0xdb79, 0x840f, 0x42f0, 0x42cd, 0x8444, 0xe858, 0x1, 0x0);
        gbc.writeMem(0xdb79, { 0x57 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x840f, gbc.sp());
        EXPECT(0xdb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdb79));
        // 57 02A8
        gbc.setState(0xed3d, 0xfc01, 0xfad0, 0xf788, 0xedf9, 0xbcae, 0x1, 0x1);
        gbc.writeMem(0xed3d, { 0x57 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfc01, gbc.sp());
        EXPECT(0xed3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xed3d));
        // 57 02AA
        gbc.setState(0xe7d2, 0x4eed, 0x23e0, 0x314d, 0xfa19, 0xc353, 0x0, 0x0);
        gbc.writeMem(0xe7d2, { 0x57 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4eed, gbc.sp());
        EXPECT(0xe7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe7d2));
        // 57 02AB
        gbc.setState(0x7d4, 0xdc35, 0xad10, 0xd1d, 0x6dee, 0xe4d2, 0x0, 0x1);
        gbc.writeMem(0x7d4, { 0x57 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdc35, gbc.sp());
        EXPECT(0x7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02AC
        gbc.setState(0x3a15, 0x6b83, 0x230, 0x6c87, 0xcb91, 0x41a1, 0x1, 0x0);
        gbc.writeMem(0x3a15, { 0x57 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6b83, gbc.sp());
        EXPECT(0x3a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02AD
        gbc.setState(0xaa9d, 0xaf8d, 0x1950, 0x3708, 0x216d, 0xc36b, 0x1, 0x0);
        gbc.writeMem(0xaa9d, { 0x57 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xaf8d, gbc.sp());
        EXPECT(0xaa9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xaa9d));
        // 57 02AE
        gbc.setState(0x3b3a, 0x40c1, 0xea70, 0x688, 0xe260, 0x6292, 0x0, 0x0);
        gbc.writeMem(0x3b3a, { 0x57 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x40c1, gbc.sp());
        EXPECT(0x3b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02AF
        gbc.setState(0x3741, 0x9d68, 0x7b00, 0xb76e, 0x3bd8, 0xa49a, 0x1, 0x0);
        gbc.writeMem(0x3741, { 0x57 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9d68, gbc.sp());
        EXPECT(0x3742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02B0
        gbc.setState(0x4950, 0x879e, 0x4600, 0xee3, 0x83f2, 0xb0d5, 0x0, 0x1);
        gbc.writeMem(0x4950, { 0x57 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x879e, gbc.sp());
        EXPECT(0x4951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02B1
        gbc.setState(0x493d, 0x9b1b, 0x9bb0, 0xef9c, 0x74ca, 0xe4c7, 0x1, 0x0);
        gbc.writeMem(0x493d, { 0x57 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9b1b, gbc.sp());
        EXPECT(0x493e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02B2
        gbc.setState(0xcd60, 0x9d45, 0xc750, 0x4630, 0xc04f, 0xcdee, 0x1, 0x1);
        gbc.writeMem(0xcd60, { 0x57 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9d45, gbc.sp());
        EXPECT(0xcd61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcd60));
        // 57 02B3
        gbc.setState(0xbdaf, 0x24f5, 0x9f50, 0xc45, 0xd3b0, 0x2022, 0x0, 0x1);
        gbc.writeMem(0xbdaf, { 0x57 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x24f5, gbc.sp());
        EXPECT(0xbdb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbdaf));
        // 57 02B4
        gbc.setState(0xdc2a, 0x24fe, 0xaa0, 0xd64f, 0x64f3, 0xcf57, 0x1, 0x0);
        gbc.writeMem(0xdc2a, { 0x57 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x24fe, gbc.sp());
        EXPECT(0xdc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdc2a));
        // 57 02B5
        gbc.setState(0x732f, 0xf0e3, 0x18e0, 0x10be, 0xf143, 0x38b9, 0x0, 0x0);
        gbc.writeMem(0x732f, { 0x57 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf0e3, gbc.sp());
        EXPECT(0x7330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02B6
        gbc.setState(0xb57a, 0xbcf2, 0x2b30, 0xca1a, 0xcb16, 0xd157, 0x1, 0x0);
        gbc.writeMem(0xb57a, { 0x57 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbcf2, gbc.sp());
        EXPECT(0xb57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb57a));
        // 57 02B7
        gbc.setState(0x740, 0x394, 0xe630, 0xe8a5, 0x460b, 0x4e47, 0x0, 0x1);
        gbc.writeMem(0x740, { 0x57 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x394, gbc.sp());
        EXPECT(0x741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02B8
        gbc.setState(0xe294, 0xf8de, 0xab80, 0x6d01, 0x7a6, 0x5e75, 0x1, 0x1);
        gbc.writeMem(0xe294, { 0x57 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf8de, gbc.sp());
        EXPECT(0xe295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe294));
        // 57 02B9
        gbc.setState(0x841b, 0x3798, 0x2a10, 0x3d69, 0xaab8, 0xe44f, 0x0, 0x0);
        gbc.writeMem(0x841b, { 0x57 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3798, gbc.sp());
        EXPECT(0x841c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x841b));
        // 57 02BA
        gbc.setState(0x2df8, 0x5af9, 0xbaf0, 0x3395, 0x1e58, 0x2259, 0x1, 0x0);
        gbc.writeMem(0x2df8, { 0x57 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5af9, gbc.sp());
        EXPECT(0x2df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02BB
        gbc.setState(0x74f0, 0x22c, 0xe6f0, 0xdbf3, 0xece1, 0xe49d, 0x1, 0x1);
        gbc.writeMem(0x74f0, { 0x57 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x22c, gbc.sp());
        EXPECT(0x74f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02BC
        gbc.setState(0x9524, 0xb709, 0x1750, 0x541c, 0xefbe, 0xbe59, 0x1, 0x0);
        gbc.writeMem(0x9524, { 0x57 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb709, gbc.sp());
        EXPECT(0x9525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9524));
        // 57 02BD
        gbc.setState(0x75ad, 0xe28f, 0x7530, 0x2307, 0xe35a, 0x7c07, 0x0, 0x0);
        gbc.writeMem(0x75ad, { 0x57 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe28f, gbc.sp());
        EXPECT(0x75ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02BE
        gbc.setState(0x935, 0x9f7a, 0x4c00, 0xa9aa, 0xaa51, 0x609b, 0x1, 0x1);
        gbc.writeMem(0x935, { 0x57 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9f7a, gbc.sp());
        EXPECT(0x936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02BF
        gbc.setState(0xe9cd, 0xcd95, 0xd510, 0x1f95, 0xd358, 0x6073, 0x0, 0x1);
        gbc.writeMem(0xe9cd, { 0x57 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcd95, gbc.sp());
        EXPECT(0xe9ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe9cd));
        // 57 02C0
        gbc.setState(0x1288, 0x3ae0, 0xf8a0, 0xba78, 0x2511, 0xbd64, 0x0, 0x0);
        gbc.writeMem(0x1288, { 0x57 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3ae0, gbc.sp());
        EXPECT(0x1289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02C1
        gbc.setState(0x3e90, 0x558f, 0xf1c0, 0x85d3, 0xde32, 0x1c3e, 0x0, 0x1);
        gbc.writeMem(0x3e90, { 0x57 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x558f, gbc.sp());
        EXPECT(0x3e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02C2
        gbc.setState(0x4f6f, 0xc173, 0x9ea0, 0x7c7a, 0x4906, 0xca2, 0x1, 0x0);
        gbc.writeMem(0x4f6f, { 0x57 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc173, gbc.sp());
        EXPECT(0x4f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02C3
        gbc.setState(0x1386, 0xc03b, 0xa520, 0x9395, 0x23fe, 0xabe6, 0x1, 0x1);
        gbc.writeMem(0x1386, { 0x57 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc03b, gbc.sp());
        EXPECT(0x1387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02C4
        gbc.setState(0xd01e, 0xe895, 0x7c0, 0xe6cb, 0x5d50, 0x1a, 0x0, 0x1);
        gbc.writeMem(0xd01e, { 0x57 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe895, gbc.sp());
        EXPECT(0xd01f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd01e));
        // 57 02C6
        gbc.setState(0x5ccf, 0xa8ca, 0x8a20, 0x31b8, 0x252e, 0xd2f1, 0x1, 0x0);
        gbc.writeMem(0x5ccf, { 0x57 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa8ca, gbc.sp());
        EXPECT(0x5cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02C7
        gbc.setState(0xd710, 0x2171, 0xbd80, 0xa850, 0xc6f4, 0xf89c, 0x0, 0x1);
        gbc.writeMem(0xd710, { 0x57 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2171, gbc.sp());
        EXPECT(0xd711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd710));
        // 57 02C8
        gbc.setState(0xa63e, 0xf8f4, 0xd120, 0x2482, 0xefd7, 0x72fa, 0x1, 0x0);
        gbc.writeMem(0xa63e, { 0x57 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf8f4, gbc.sp());
        EXPECT(0xa63f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa63e));
        // 57 02CA
        gbc.setState(0xed04, 0xc88e, 0x9e40, 0x173a, 0x2ecd, 0xb383, 0x0, 0x0);
        gbc.writeMem(0xed04, { 0x57 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc88e, gbc.sp());
        EXPECT(0xed05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xed04));
        // 57 02CB
        gbc.setState(0x1654, 0xc086, 0x1800, 0x22ed, 0xfbce, 0x796a, 0x0, 0x0);
        gbc.writeMem(0x1654, { 0x57 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc086, gbc.sp());
        EXPECT(0x1655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02CC
        gbc.setState(0xc7b1, 0x772c, 0x3d70, 0x324b, 0xe3cc, 0x6390, 0x1, 0x0);
        gbc.writeMem(0xc7b1, { 0x57 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x772c, gbc.sp());
        EXPECT(0xc7b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc7b1));
        // 57 02CD
        gbc.setState(0x1da6, 0x59dd, 0x93a0, 0xb7dd, 0xd512, 0xa6b2, 0x0, 0x0);
        gbc.writeMem(0x1da6, { 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x59dd, gbc.sp());
        EXPECT(0x1da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02CE
        gbc.setState(0xf18, 0xb48b, 0xb920, 0xaa30, 0x17ab, 0x1037, 0x0, 0x0);
        gbc.writeMem(0xf18, { 0x57 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb48b, gbc.sp());
        EXPECT(0xf19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02CF
        gbc.setState(0x3d83, 0xae4f, 0x10d0, 0xd606, 0x80c9, 0xfa9, 0x0, 0x1);
        gbc.writeMem(0x3d83, { 0x57 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xae4f, gbc.sp());
        EXPECT(0x3d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02D0
        gbc.setState(0xc41a, 0xf77a, 0x1700, 0xb71f, 0x86ed, 0x796a, 0x0, 0x1);
        gbc.writeMem(0xc41a, { 0x57 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf77a, gbc.sp());
        EXPECT(0xc41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc41a));
        // 57 02D1
        gbc.setState(0xcd49, 0x3e85, 0xba30, 0xa235, 0x2b65, 0x959c, 0x0, 0x1);
        gbc.writeMem(0xcd49, { 0x57 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3e85, gbc.sp());
        EXPECT(0xcd4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcd49));
        // 57 02D2
        gbc.setState(0x6ab4, 0x4a5a, 0x1210, 0x102a, 0x263b, 0xa120, 0x1, 0x1);
        gbc.writeMem(0x6ab4, { 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4a5a, gbc.sp());
        EXPECT(0x6ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02D3
        gbc.setState(0x4bf5, 0xddf4, 0xd450, 0x1b47, 0x1a30, 0x469f, 0x1, 0x1);
        gbc.writeMem(0x4bf5, { 0x57 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xddf4, gbc.sp());
        EXPECT(0x4bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02D4
        gbc.setState(0x2c9, 0xfa6b, 0x3550, 0xa861, 0x4c2c, 0x1c2e, 0x0, 0x1);
        gbc.writeMem(0x2c9, { 0x57 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfa6b, gbc.sp());
        EXPECT(0x2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02D5
        gbc.setState(0xa039, 0x9904, 0x9fd0, 0xc4fe, 0xbaa7, 0x2cea, 0x0, 0x0);
        gbc.writeMem(0xa039, { 0x57 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9904, gbc.sp());
        EXPECT(0xa03a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa039));
        // 57 02D6
        gbc.setState(0x3592, 0x881f, 0x7720, 0x6c7b, 0xb2b, 0x6bb1, 0x1, 0x0);
        gbc.writeMem(0x3592, { 0x57 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x881f, gbc.sp());
        EXPECT(0x3593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02D7
        gbc.setState(0xeaf5, 0xd9df, 0xbcd0, 0xd084, 0xa89f, 0x9a3b, 0x1, 0x1);
        gbc.writeMem(0xeaf5, { 0x57 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd9df, gbc.sp());
        EXPECT(0xeaf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xeaf5));
        // 57 02D8
        gbc.setState(0xe2db, 0x3f1f, 0xa3f0, 0xc9ef, 0xe95f, 0x825e, 0x1, 0x0);
        gbc.writeMem(0xe2db, { 0x57 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3f1f, gbc.sp());
        EXPECT(0xe2dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe2db));
        // 57 02D9
        gbc.setState(0x9a13, 0xec8b, 0x2ab0, 0xaf6d, 0xe0e8, 0x1450, 0x1, 0x0);
        gbc.writeMem(0x9a13, { 0x57 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xec8b, gbc.sp());
        EXPECT(0x9a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9a13));
        // 57 02DB
        gbc.setState(0x1d2c, 0x7be0, 0x3ed0, 0xd9ff, 0xc4f7, 0xceca, 0x1, 0x0);
        gbc.writeMem(0x1d2c, { 0x57 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7be0, gbc.sp());
        EXPECT(0x1d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02DC
        gbc.setState(0x7b64, 0x88dc, 0x9ae0, 0x4064, 0x90a7, 0x21a3, 0x1, 0x1);
        gbc.writeMem(0x7b64, { 0x57 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x88dc, gbc.sp());
        EXPECT(0x7b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02DD
        gbc.setState(0x41e8, 0x940b, 0xcac0, 0x9086, 0x5c63, 0x777d, 0x1, 0x0);
        gbc.writeMem(0x41e8, { 0x57 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x940b, gbc.sp());
        EXPECT(0x41e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02DE
        gbc.setState(0x858a, 0x1381, 0x9fb0, 0xf7b9, 0xd67a, 0xfa8, 0x1, 0x0);
        gbc.writeMem(0x858a, { 0x57 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1381, gbc.sp());
        EXPECT(0x858b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x858a));
        // 57 02DF
        gbc.setState(0x8ab8, 0xfa3d, 0x5190, 0xcb70, 0xa406, 0x1ce3, 0x1, 0x0);
        gbc.writeMem(0x8ab8, { 0x57 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfa3d, gbc.sp());
        EXPECT(0x8ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8ab8));
        // 57 02E0
        gbc.setState(0x2636, 0x67e0, 0xf0a0, 0xa3f4, 0xcc98, 0xc92b, 0x1, 0x0);
        gbc.writeMem(0x2636, { 0x57 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x67e0, gbc.sp());
        EXPECT(0x2637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02E1
        gbc.setState(0x9021, 0xb952, 0xcb0, 0xea3b, 0x1ee8, 0x38b7, 0x0, 0x1);
        gbc.writeMem(0x9021, { 0x57 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb952, gbc.sp());
        EXPECT(0x9022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9021));
        // 57 02E2
        gbc.setState(0x8a5c, 0xb8e5, 0x1040, 0x7667, 0x40b8, 0x412f, 0x1, 0x0);
        gbc.writeMem(0x8a5c, { 0x57 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb8e5, gbc.sp());
        EXPECT(0x8a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8a5c));
        // 57 02E3
        gbc.setState(0x83a4, 0x7150, 0x8f60, 0xb6fb, 0xb3a4, 0xca5d, 0x1, 0x1);
        gbc.writeMem(0x83a4, { 0x57 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7150, gbc.sp());
        EXPECT(0x83a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x83a4));
        // 57 02E4
        gbc.setState(0x880b, 0x6674, 0x93b0, 0x44c7, 0xf876, 0x3c92, 0x0, 0x0);
        gbc.writeMem(0x880b, { 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6674, gbc.sp());
        EXPECT(0x880c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x880b));
        // 57 02E5
        gbc.setState(0x6393, 0x813e, 0xe560, 0x217c, 0xe132, 0x3c51, 0x1, 0x0);
        gbc.writeMem(0x6393, { 0x57 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x813e, gbc.sp());
        EXPECT(0x6394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02E6
        gbc.setState(0x92b0, 0x5981, 0xabd0, 0x4c1e, 0x5bf9, 0xfdc5, 0x1, 0x1);
        gbc.writeMem(0x92b0, { 0x57 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5981, gbc.sp());
        EXPECT(0x92b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x92b0));
        // 57 02E7
        gbc.setState(0x3533, 0x6be3, 0xb9e0, 0x93ee, 0x8563, 0x990e, 0x1, 0x0);
        gbc.writeMem(0x3533, { 0x57 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6be3, gbc.sp());
        EXPECT(0x3534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02E8
        gbc.setState(0xe778, 0xc055, 0x9090, 0x670a, 0x4d27, 0x11e8, 0x1, 0x0);
        gbc.writeMem(0xe778, { 0x57 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc055, gbc.sp());
        EXPECT(0xe779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe778));
        // 57 02E9
        gbc.setState(0xebad, 0x3c3, 0x8db0, 0xb5d2, 0x5d69, 0xfb92, 0x1, 0x0);
        gbc.writeMem(0xebad, { 0x57 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3c3, gbc.sp());
        EXPECT(0xebae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xebad));
        // 57 02EA
        gbc.setState(0x59f6, 0xa546, 0x1fd0, 0x449d, 0x5d3e, 0xc2fd, 0x0, 0x1);
        gbc.writeMem(0x59f6, { 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa546, gbc.sp());
        EXPECT(0x59f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02EB
        gbc.setState(0x29f9, 0x4d29, 0x6160, 0x112, 0xb36f, 0x66c4, 0x0, 0x0);
        gbc.writeMem(0x29f9, { 0x57 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4d29, gbc.sp());
        EXPECT(0x29fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02EC
        gbc.setState(0xa183, 0xa298, 0x58a0, 0xe533, 0x20fc, 0xae24, 0x1, 0x1);
        gbc.writeMem(0xa183, { 0x57 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa298, gbc.sp());
        EXPECT(0xa184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa183));
        // 57 02ED
        gbc.setState(0x2f0, 0xafb2, 0xef20, 0x4d91, 0x7c3c, 0x2a69, 0x0, 0x0);
        gbc.writeMem(0x2f0, { 0x57 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xafb2, gbc.sp());
        EXPECT(0x2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02EE
        gbc.setState(0xde95, 0x7499, 0x8380, 0xa3d0, 0xad7f, 0x5df9, 0x0, 0x1);
        gbc.writeMem(0xde95, { 0x57 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7499, gbc.sp());
        EXPECT(0xde96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xde95));
        // 57 02EF
        gbc.setState(0xb5e5, 0xa1b8, 0xed00, 0x8720, 0xb4f2, 0x45e3, 0x1, 0x1);
        gbc.writeMem(0xb5e5, { 0x57 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa1b8, gbc.sp());
        EXPECT(0xb5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb5e5));
        // 57 02F0
        gbc.setState(0x874d, 0xabf1, 0x5d30, 0x8a10, 0x89ac, 0xd8f6, 0x0, 0x0);
        gbc.writeMem(0x874d, { 0x57 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xabf1, gbc.sp());
        EXPECT(0x874e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x874d));
        // 57 02F2
        gbc.setState(0x52a2, 0xa000, 0xde20, 0xfda3, 0x4f5b, 0x22a7, 0x0, 0x0);
        gbc.writeMem(0x52a2, { 0x57 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa000, gbc.sp());
        EXPECT(0x52a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02F3
        gbc.setState(0xe469, 0x7c5d, 0x3510, 0xdd25, 0xac30, 0xba6f, 0x0, 0x1);
        gbc.writeMem(0xe469, { 0x57 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7c5d, gbc.sp());
        EXPECT(0xe46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe469));
        // 57 02F4
        gbc.setState(0x6c7f, 0xc710, 0xdcd0, 0xa83e, 0xfb5a, 0xd079, 0x0, 0x0);
        gbc.writeMem(0x6c7f, { 0x57 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc710, gbc.sp());
        EXPECT(0x6c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02F6
        gbc.setState(0x39f8, 0x6450, 0x99d0, 0x5ee5, 0x4f46, 0xdeff, 0x1, 0x1);
        gbc.writeMem(0x39f8, { 0x57 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6450, gbc.sp());
        EXPECT(0x39f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02F8
        gbc.setState(0x32e5, 0x1857, 0x91f0, 0x7f26, 0x5700, 0x6fe9, 0x1, 0x0);
        gbc.writeMem(0x32e5, { 0x57 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1857, gbc.sp());
        EXPECT(0x32e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02F9
        gbc.setState(0x5976, 0x2d02, 0xbb00, 0x4c0b, 0xbe9b, 0x8359, 0x1, 0x1);
        gbc.writeMem(0x5976, { 0x57 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2d02, gbc.sp());
        EXPECT(0x5977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02FA
        gbc.setState(0x802, 0x3b7a, 0xbbe0, 0xe2ee, 0xd169, 0x356b, 0x1, 0x1);
        gbc.writeMem(0x802, { 0x57 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3b7a, gbc.sp());
        EXPECT(0x803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02FB
        gbc.setState(0xa371, 0xf8a6, 0x2780, 0x9e2a, 0xa07b, 0x6beb, 0x1, 0x0);
        gbc.writeMem(0xa371, { 0x57 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf8a6, gbc.sp());
        EXPECT(0xa372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa371));
        // 57 02FC
        gbc.setState(0x770a, 0x455f, 0xe910, 0xcb69, 0xb4a, 0x772c, 0x1, 0x1);
        gbc.writeMem(0x770a, { 0x57 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x455f, gbc.sp());
        EXPECT(0x770b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 02FD
        gbc.setState(0x214b, 0xbbb9, 0xb660, 0xdce0, 0x203f, 0x8559, 0x0, 0x0);
        gbc.writeMem(0x214b, { 0x57 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbbb9, gbc.sp());
        EXPECT(0x214c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 02FE
        gbc.setState(0xa830, 0xd8ed, 0xccb0, 0xf30b, 0x360a, 0xf5b8, 0x1, 0x1);
        gbc.writeMem(0xa830, { 0x57 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd8ed, gbc.sp());
        EXPECT(0xa831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa830));
        // 57 02FF
        gbc.setState(0x5c21, 0x89ea, 0x9490, 0x4647, 0x2dcd, 0x79ab, 0x0, 0x1);
        gbc.writeMem(0x5c21, { 0x57 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x89ea, gbc.sp());
        EXPECT(0x5c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0300
        gbc.setState(0x84c3, 0x2139, 0xc060, 0x8c22, 0xde10, 0xc0, 0x0, 0x1);
        gbc.writeMem(0x84c3, { 0x57 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2139, gbc.sp());
        EXPECT(0x84c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x84c3));
        // 57 0302
        gbc.setState(0x5871, 0x4cbf, 0x6d60, 0xd944, 0x8852, 0xf54, 0x0, 0x1);
        gbc.writeMem(0x5871, { 0x57 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4cbf, gbc.sp());
        EXPECT(0x5872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0303
        gbc.setState(0x231d, 0xbeab, 0x1a40, 0xd51f, 0xbaea, 0xff52, 0x0, 0x0);
        gbc.writeMem(0x231d, { 0x57 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbeab, gbc.sp());
        EXPECT(0x231e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0304
        gbc.setState(0xe916, 0xeabc, 0x6b20, 0xd734, 0x96b5, 0x2231, 0x1, 0x1);
        gbc.writeMem(0xe916, { 0x57 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xeabc, gbc.sp());
        EXPECT(0xe917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe916));
        // 57 0305
        gbc.setState(0xc0ea, 0x8a53, 0x2980, 0x7a11, 0xe7c3, 0x18f5, 0x0, 0x0);
        gbc.writeMem(0xc0ea, { 0x57 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8a53, gbc.sp());
        EXPECT(0xc0eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc0ea));
        // 57 0306
        gbc.setState(0xed10, 0xe4ce, 0xba70, 0x30a, 0x5d5b, 0x8f7, 0x0, 0x0);
        gbc.writeMem(0xed10, { 0x57 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe4ce, gbc.sp());
        EXPECT(0xed11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xed10));
        // 57 0307
        gbc.setState(0x2848, 0x5971, 0xf0a0, 0xc327, 0xce17, 0x7b9f, 0x1, 0x1);
        gbc.writeMem(0x2848, { 0x57 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5971, gbc.sp());
        EXPECT(0x2849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0308
        gbc.setState(0x1f5a, 0x744a, 0x1f60, 0xdf32, 0xecef, 0xd7b1, 0x1, 0x0);
        gbc.writeMem(0x1f5a, { 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x744a, gbc.sp());
        EXPECT(0x1f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0309
        gbc.setState(0x3425, 0x6caa, 0x79f0, 0xa580, 0x2236, 0xb6ec, 0x1, 0x1);
        gbc.writeMem(0x3425, { 0x57 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6caa, gbc.sp());
        EXPECT(0x3426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 030A
        gbc.setState(0x366c, 0x58f6, 0xb6f0, 0x8f42, 0xf8ff, 0xf505, 0x1, 0x1);
        gbc.writeMem(0x366c, { 0x57 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x58f6, gbc.sp());
        EXPECT(0x366d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 030B
        gbc.setState(0x593a, 0xe28d, 0x37d0, 0xd6bb, 0x5e56, 0xec1a, 0x0, 0x0);
        gbc.writeMem(0x593a, { 0x57 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe28d, gbc.sp());
        EXPECT(0x593b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 030C
        gbc.setState(0x912b, 0x51ea, 0x4b20, 0x83a9, 0x4245, 0xe26b, 0x1, 0x1);
        gbc.writeMem(0x912b, { 0x57 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x51ea, gbc.sp());
        EXPECT(0x912c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x912b));
        // 57 030D
        gbc.setState(0xe342, 0x5f4d, 0xaad0, 0xe544, 0x6b98, 0x4574, 0x0, 0x0);
        gbc.writeMem(0xe342, { 0x57 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5f4d, gbc.sp());
        EXPECT(0xe343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe342));
        // 57 030E
        gbc.setState(0xb6a1, 0x6c5e, 0x5ea0, 0xab70, 0x6b0f, 0xbb83, 0x1, 0x1);
        gbc.writeMem(0xb6a1, { 0x57 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6c5e, gbc.sp());
        EXPECT(0xb6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb6a1));
        // 57 030F
        gbc.setState(0x36b9, 0x2efd, 0x1630, 0x3ecb, 0xf1c8, 0xee8f, 0x0, 0x1);
        gbc.writeMem(0x36b9, { 0x57 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2efd, gbc.sp());
        EXPECT(0x36ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0310
        gbc.setState(0xd5f3, 0xf97c, 0x54a0, 0xe61d, 0x8327, 0x59e5, 0x0, 0x0);
        gbc.writeMem(0xd5f3, { 0x57 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf97c, gbc.sp());
        EXPECT(0xd5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd5f3));
        // 57 0311
        gbc.setState(0x1aa0, 0x66e0, 0x59d0, 0x6eeb, 0x40d8, 0xb194, 0x1, 0x1);
        gbc.writeMem(0x1aa0, { 0x57 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x66e0, gbc.sp());
        EXPECT(0x1aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0312
        gbc.setState(0x4e2d, 0xfdba, 0x9d0, 0x47f2, 0x9a9c, 0xed77, 0x0, 0x0);
        gbc.writeMem(0x4e2d, { 0x57 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfdba, gbc.sp());
        EXPECT(0x4e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0313
        gbc.setState(0x2c5b, 0x66c2, 0xb880, 0x4c28, 0xb70, 0x9e8f, 0x0, 0x0);
        gbc.writeMem(0x2c5b, { 0x57 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x66c2, gbc.sp());
        EXPECT(0x2c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0314
        gbc.setState(0xcf4d, 0x1356, 0xc810, 0x9ac5, 0x6a0b, 0x8ec6, 0x1, 0x0);
        gbc.writeMem(0xcf4d, { 0x57 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1356, gbc.sp());
        EXPECT(0xcf4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcf4d));
        // 57 0315
        gbc.setState(0xceb6, 0x9f, 0x9b80, 0x9c98, 0x2b1c, 0x4fcf, 0x1, 0x1);
        gbc.writeMem(0xceb6, { 0x57 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9f, gbc.sp());
        EXPECT(0xceb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xceb6));
        // 57 0316
        gbc.setState(0xd413, 0xd448, 0x1b90, 0x6dec, 0x7e80, 0x1a85, 0x0, 0x0);
        gbc.writeMem(0xd413, { 0x57 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd448, gbc.sp());
        EXPECT(0xd414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd413));
        // 57 0317
        gbc.setState(0xeba6, 0x4995, 0xfd10, 0xd4ab, 0x70dd, 0x58a5, 0x0, 0x0);
        gbc.writeMem(0xeba6, { 0x57 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4995, gbc.sp());
        EXPECT(0xeba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xeba6));
        // 57 0319
        gbc.setState(0x458, 0x2809, 0x4070, 0x4cb3, 0x74a8, 0x178f, 0x0, 0x1);
        gbc.writeMem(0x458, { 0x57 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2809, gbc.sp());
        EXPECT(0x459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 031A
        gbc.setState(0x68ed, 0x450c, 0x3180, 0x44ce, 0x5e11, 0x7fb6, 0x0, 0x0);
        gbc.writeMem(0x68ed, { 0x57 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x450c, gbc.sp());
        EXPECT(0x68ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 031B
        gbc.setState(0x5110, 0x3041, 0x8be0, 0x5eda, 0x4275, 0x511f, 0x1, 0x0);
        gbc.writeMem(0x5110, { 0x57 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3041, gbc.sp());
        EXPECT(0x5111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 031C
        gbc.setState(0xad90, 0x7e44, 0xec30, 0xba8f, 0xe876, 0x289b, 0x0, 0x1);
        gbc.writeMem(0xad90, { 0x57 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7e44, gbc.sp());
        EXPECT(0xad91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xad90));
        // 57 031D
        gbc.setState(0xb2ea, 0xa3c4, 0xe60, 0x79e3, 0xf098, 0xe0c3, 0x0, 0x1);
        gbc.writeMem(0xb2ea, { 0x57 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa3c4, gbc.sp());
        EXPECT(0xb2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb2ea));
        // 57 031E
        gbc.setState(0x46b2, 0x6f58, 0x3570, 0x9e0f, 0x73aa, 0x1e36, 0x0, 0x0);
        gbc.writeMem(0x46b2, { 0x57 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6f58, gbc.sp());
        EXPECT(0x46b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 031F
        gbc.setState(0x9c93, 0x28b7, 0x4f20, 0x464, 0xdf52, 0x96a1, 0x0, 0x1);
        gbc.writeMem(0x9c93, { 0x57 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x28b7, gbc.sp());
        EXPECT(0x9c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9c93));
        // 57 0320
        gbc.setState(0x4f80, 0x100a, 0x9590, 0x6aec, 0xfad8, 0x45e3, 0x0, 0x1);
        gbc.writeMem(0x4f80, { 0x57 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x100a, gbc.sp());
        EXPECT(0x4f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0321
        gbc.setState(0x47ee, 0xcba3, 0x60e0, 0x5e2b, 0xf56e, 0xaa47, 0x0, 0x1);
        gbc.writeMem(0x47ee, { 0x57 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcba3, gbc.sp());
        EXPECT(0x47ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0322
        gbc.setState(0x3fd9, 0x7823, 0xf350, 0xa7cd, 0xf471, 0xa282, 0x0, 0x0);
        gbc.writeMem(0x3fd9, { 0x57 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7823, gbc.sp());
        EXPECT(0x3fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0323
        gbc.setState(0xa72b, 0x5555, 0xb340, 0x738, 0xeb8d, 0x69cc, 0x1, 0x0);
        gbc.writeMem(0xa72b, { 0x57 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5555, gbc.sp());
        EXPECT(0xa72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa72b));
        // 57 0324
        gbc.setState(0x45b7, 0x87d6, 0x39f0, 0x5470, 0x427f, 0x694e, 0x1, 0x1);
        gbc.writeMem(0x45b7, { 0x57 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x87d6, gbc.sp());
        EXPECT(0x45b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0325
        gbc.setState(0xb9e2, 0x4f41, 0x15c0, 0x1539, 0x2a0e, 0xd9a4, 0x0, 0x0);
        gbc.writeMem(0xb9e2, { 0x57 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4f41, gbc.sp());
        EXPECT(0xb9e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb9e2));
        // 57 0326
        gbc.setState(0x33c4, 0x255b, 0x3e70, 0x95ad, 0x12a9, 0x91e0, 0x0, 0x0);
        gbc.writeMem(0x33c4, { 0x57 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x255b, gbc.sp());
        EXPECT(0x33c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0327
        gbc.setState(0x5cef, 0x59d, 0xbc80, 0x2e18, 0x3a83, 0xb249, 0x1, 0x1);
        gbc.writeMem(0x5cef, { 0x57 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x59d, gbc.sp());
        EXPECT(0x5cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0328
        gbc.setState(0x7d86, 0xd3d3, 0xde40, 0xda6e, 0xd12b, 0x1853, 0x1, 0x0);
        gbc.writeMem(0x7d86, { 0x57 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd3d3, gbc.sp());
        EXPECT(0x7d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 032A
        gbc.setState(0xc114, 0x4d0c, 0xc930, 0xc1b1, 0x6da2, 0x6e04, 0x1, 0x0);
        gbc.writeMem(0xc114, { 0x57 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4d0c, gbc.sp());
        EXPECT(0xc115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc114));
        // 57 032B
        gbc.setState(0xc964, 0xe8ef, 0x4ba0, 0x54c3, 0x3323, 0xb4c9, 0x1, 0x0);
        gbc.writeMem(0xc964, { 0x57 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe8ef, gbc.sp());
        EXPECT(0xc965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc964));
        // 57 032C
        gbc.setState(0x723, 0x8bb8, 0xf790, 0x5825, 0x3c5e, 0x5734, 0x0, 0x0);
        gbc.writeMem(0x723, { 0x57 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8bb8, gbc.sp());
        EXPECT(0x724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 032D
        gbc.setState(0x9daa, 0x4f9e, 0x7ad0, 0xda45, 0xeb18, 0x705d, 0x1, 0x1);
        gbc.writeMem(0x9daa, { 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4f9e, gbc.sp());
        EXPECT(0x9dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9daa));
        // 57 032E
        gbc.setState(0x33bc, 0xf795, 0x2330, 0xe467, 0x3491, 0xda5, 0x1, 0x0);
        gbc.writeMem(0x33bc, { 0x57 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf795, gbc.sp());
        EXPECT(0x33bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 032F
        gbc.setState(0x639f, 0xf743, 0xee80, 0xc367, 0x5e5c, 0x3397, 0x0, 0x0);
        gbc.writeMem(0x639f, { 0x57 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf743, gbc.sp());
        EXPECT(0x63a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0330
        gbc.setState(0x7fda, 0x5598, 0x1690, 0x23e4, 0xc2d4, 0x7e9e, 0x0, 0x1);
        gbc.writeMem(0x7fda, { 0x57 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5598, gbc.sp());
        EXPECT(0x7fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0331
        gbc.setState(0xf4f, 0x8fcc, 0xa4f0, 0x2c32, 0xe4ea, 0x119b, 0x1, 0x1);
        gbc.writeMem(0xf4f, { 0x57 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8fcc, gbc.sp());
        EXPECT(0xf50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0332
        gbc.setState(0x6478, 0x86b1, 0x3c40, 0xd7ed, 0xd124, 0x231f, 0x1, 0x0);
        gbc.writeMem(0x6478, { 0x57 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x86b1, gbc.sp());
        EXPECT(0x6479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0333
        gbc.setState(0xdf35, 0x87ea, 0x5a60, 0xf6b5, 0xce46, 0x5a7f, 0x1, 0x0);
        gbc.writeMem(0xdf35, { 0x57 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x87ea, gbc.sp());
        EXPECT(0xdf36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdf35));
        // 57 0334
        gbc.setState(0xd253, 0x9adc, 0xeeb0, 0x1d65, 0x9f8b, 0x51e0, 0x1, 0x0);
        gbc.writeMem(0xd253, { 0x57 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9adc, gbc.sp());
        EXPECT(0xd254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd253));
        // 57 0335
        gbc.setState(0x686e, 0xed57, 0x96a0, 0x65d1, 0x527f, 0x74c9, 0x0, 0x0);
        gbc.writeMem(0x686e, { 0x57 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xed57, gbc.sp());
        EXPECT(0x686f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0336
        gbc.setState(0xc2dd, 0xf0a6, 0xdfb0, 0xb3d8, 0x8a97, 0xdc59, 0x1, 0x0);
        gbc.writeMem(0xc2dd, { 0x57 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf0a6, gbc.sp());
        EXPECT(0xc2de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc2dd));
        // 57 0337
        gbc.setState(0x6312, 0x252f, 0x4b20, 0x786f, 0xf469, 0x8bcb, 0x1, 0x0);
        gbc.writeMem(0x6312, { 0x57 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x252f, gbc.sp());
        EXPECT(0x6313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0338
        gbc.setState(0x2e24, 0x74ef, 0xcd70, 0x52aa, 0x3630, 0xeea9, 0x0, 0x1);
        gbc.writeMem(0x2e24, { 0x57 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x74ef, gbc.sp());
        EXPECT(0x2e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0339
        gbc.setState(0x7d7c, 0xdc50, 0x1a70, 0xdb15, 0x58ce, 0x6148, 0x0, 0x0);
        gbc.writeMem(0x7d7c, { 0x57 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdc50, gbc.sp());
        EXPECT(0x7d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 033A
        gbc.setState(0x4119, 0x21c2, 0xc7d0, 0xf7c5, 0x9a41, 0x1606, 0x0, 0x1);
        gbc.writeMem(0x4119, { 0x57 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x21c2, gbc.sp());
        EXPECT(0x411a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 033B
        gbc.setState(0x2809, 0x2b7f, 0xb540, 0x29c7, 0x840e, 0xd470, 0x1, 0x0);
        gbc.writeMem(0x2809, { 0x57 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2b7f, gbc.sp());
        EXPECT(0x280a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 033C
        gbc.setState(0xb70a, 0xe722, 0xa690, 0xd0df, 0xc4cd, 0xa6f7, 0x0, 0x1);
        gbc.writeMem(0xb70a, { 0x57 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe722, gbc.sp());
        EXPECT(0xb70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb70a));
        // 57 033D
        gbc.setState(0xa7bb, 0xc812, 0xf100, 0x5474, 0x5abe, 0xac83, 0x0, 0x1);
        gbc.writeMem(0xa7bb, { 0x57 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc812, gbc.sp());
        EXPECT(0xa7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa7bb));
        // 57 033E
        gbc.setState(0xb40a, 0x8db5, 0x7f90, 0x8f3c, 0xd3d2, 0xce0c, 0x1, 0x1);
        gbc.writeMem(0xb40a, { 0x57 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8db5, gbc.sp());
        EXPECT(0xb40b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb40a));
        // 57 033F
        gbc.setState(0x4e33, 0x5d48, 0xbee0, 0xcc32, 0xa2a7, 0xec93, 0x1, 0x1);
        gbc.writeMem(0x4e33, { 0x57 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5d48, gbc.sp());
        EXPECT(0x4e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0340
        gbc.setState(0x6462, 0x97a5, 0x8b60, 0x1108, 0xe7b8, 0x63c, 0x1, 0x1);
        gbc.writeMem(0x6462, { 0x57 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x97a5, gbc.sp());
        EXPECT(0x6463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0341
        gbc.setState(0x8d8b, 0x43fe, 0xb0a0, 0xf114, 0xdc43, 0x7a39, 0x0, 0x1);
        gbc.writeMem(0x8d8b, { 0x57 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x43fe, gbc.sp());
        EXPECT(0x8d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8d8b));
        // 57 0342
        gbc.setState(0x9c25, 0xd6b9, 0xa9b0, 0xb371, 0x4d02, 0x55af, 0x0, 0x0);
        gbc.writeMem(0x9c25, { 0x57 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd6b9, gbc.sp());
        EXPECT(0x9c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9c25));
        // 57 0343
        gbc.setState(0xeb6a, 0x2b8f, 0xba30, 0x276a, 0x854d, 0xde15, 0x1, 0x0);
        gbc.writeMem(0xeb6a, { 0x57 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2b8f, gbc.sp());
        EXPECT(0xeb6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xeb6a));
        // 57 0344
        gbc.setState(0xbd8e, 0x63b, 0xdfd0, 0x2195, 0xca7a, 0xa4f9, 0x0, 0x0);
        gbc.writeMem(0xbd8e, { 0x57 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x63b, gbc.sp());
        EXPECT(0xbd8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbd8e));
        // 57 0345
        gbc.setState(0x8f70, 0x6519, 0xeb30, 0x806e, 0xc832, 0xb0ce, 0x1, 0x1);
        gbc.writeMem(0x8f70, { 0x57 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6519, gbc.sp());
        EXPECT(0x8f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8f70));
        // 57 0346
        gbc.setState(0x412, 0x9084, 0xac10, 0xe1f, 0x310c, 0xec33, 0x0, 0x0);
        gbc.writeMem(0x412, { 0x57 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9084, gbc.sp());
        EXPECT(0x413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0347
        gbc.setState(0x37e4, 0x8769, 0x1900, 0xb4ef, 0xa83f, 0x5822, 0x1, 0x0);
        gbc.writeMem(0x37e4, { 0x57 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8769, gbc.sp());
        EXPECT(0x37e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0348
        gbc.setState(0xce1d, 0x22c6, 0x9540, 0xa08a, 0x5b00, 0xc9d1, 0x1, 0x0);
        gbc.writeMem(0xce1d, { 0x57 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x22c6, gbc.sp());
        EXPECT(0xce1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xce1d));
        // 57 0349
        gbc.setState(0x1902, 0x647e, 0xa7e0, 0x1286, 0xf6b7, 0x76ef, 0x1, 0x0);
        gbc.writeMem(0x1902, { 0x57 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x647e, gbc.sp());
        EXPECT(0x1903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 034A
        gbc.setState(0x67af, 0x230, 0xdcc0, 0xbb3e, 0x9298, 0xc6ba, 0x1, 0x1);
        gbc.writeMem(0x67af, { 0x57 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x230, gbc.sp());
        EXPECT(0x67b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 034B
        gbc.setState(0x1ef0, 0x8e53, 0x2f20, 0x50e0, 0x23ba, 0x8183, 0x0, 0x0);
        gbc.writeMem(0x1ef0, { 0x57 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8e53, gbc.sp());
        EXPECT(0x1ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 034C
        gbc.setState(0x6ca5, 0x875e, 0x4390, 0xfef3, 0x5441, 0x9e7d, 0x0, 0x1);
        gbc.writeMem(0x6ca5, { 0x57 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x875e, gbc.sp());
        EXPECT(0x6ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 034D
        gbc.setState(0x4814, 0xba00, 0xe150, 0xdc92, 0x6f99, 0xdc, 0x0, 0x0);
        gbc.writeMem(0x4814, { 0x57 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xba00, gbc.sp());
        EXPECT(0x4815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 034E
        gbc.setState(0x1a4d, 0xab63, 0x8530, 0x3c20, 0xd2a, 0x7a1f, 0x0, 0x1);
        gbc.writeMem(0x1a4d, { 0x57 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xab63, gbc.sp());
        EXPECT(0x1a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 034F
        gbc.setState(0x2f33, 0x8c6a, 0x1f60, 0x8e72, 0x936a, 0x7675, 0x1, 0x1);
        gbc.writeMem(0x2f33, { 0x57 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8c6a, gbc.sp());
        EXPECT(0x2f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0350
        gbc.setState(0xadd3, 0x18f8, 0x3110, 0x1175, 0x8a8, 0x5621, 0x1, 0x0);
        gbc.writeMem(0xadd3, { 0x57 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x18f8, gbc.sp());
        EXPECT(0xadd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xadd3));
        // 57 0351
        gbc.setState(0xb6b3, 0x6060, 0x2520, 0x959f, 0xf3c4, 0xd575, 0x0, 0x0);
        gbc.writeMem(0xb6b3, { 0x57 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6060, gbc.sp());
        EXPECT(0xb6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb6b3));
        // 57 0353
        gbc.setState(0x1874, 0x8a2d, 0xb1a0, 0xf631, 0x1a83, 0xead6, 0x0, 0x0);
        gbc.writeMem(0x1874, { 0x57 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8a2d, gbc.sp());
        EXPECT(0x1875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0355
        gbc.setState(0x69fe, 0x9a66, 0x1820, 0x585c, 0x397, 0xed0, 0x0, 0x1);
        gbc.writeMem(0x69fe, { 0x57 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9a66, gbc.sp());
        EXPECT(0x69ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0356
        gbc.setState(0xd009, 0xeadf, 0x76e0, 0x2e4c, 0x9936, 0xf3a9, 0x1, 0x1);
        gbc.writeMem(0xd009, { 0x57 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xeadf, gbc.sp());
        EXPECT(0xd00a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd009));
        // 57 0357
        gbc.setState(0xbb72, 0x3640, 0xf680, 0x3158, 0x7038, 0xe3bb, 0x0, 0x0);
        gbc.writeMem(0xbb72, { 0x57 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3640, gbc.sp());
        EXPECT(0xbb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbb72));
        // 57 0358
        gbc.setState(0x498a, 0x87f0, 0x4bd0, 0xacc1, 0x71ea, 0xb693, 0x0, 0x0);
        gbc.writeMem(0x498a, { 0x57 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x87f0, gbc.sp());
        EXPECT(0x498b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0359
        gbc.setState(0x660c, 0xc9b9, 0x86f0, 0x6b02, 0x6486, 0xbba9, 0x0, 0x1);
        gbc.writeMem(0x660c, { 0x57 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc9b9, gbc.sp());
        EXPECT(0x660d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 035B
        gbc.setState(0x96ff, 0x9437, 0x5c30, 0xeaff, 0x191d, 0xa6b1, 0x1, 0x0);
        gbc.writeMem(0x96ff, { 0x57 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9437, gbc.sp());
        EXPECT(0x9700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x96ff));
        // 57 035C
        gbc.setState(0x7864, 0x1c1c, 0x4e70, 0xce5, 0xc4f1, 0x8c68, 0x0, 0x0);
        gbc.writeMem(0x7864, { 0x57 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1c1c, gbc.sp());
        EXPECT(0x7865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 035D
        gbc.setState(0xdfa8, 0xd717, 0xc290, 0x641b, 0xa5fe, 0x428c, 0x0, 0x0);
        gbc.writeMem(0xdfa8, { 0x57 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd717, gbc.sp());
        EXPECT(0xdfa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdfa8));
        // 57 035F
        gbc.setState(0x5541, 0xc6d4, 0x51b0, 0xdd5c, 0x59f2, 0xa350, 0x1, 0x0);
        gbc.writeMem(0x5541, { 0x57 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc6d4, gbc.sp());
        EXPECT(0x5542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0360
        gbc.setState(0xb111, 0x35cc, 0x91d0, 0x1110, 0xefdf, 0xd4bd, 0x0, 0x0);
        gbc.writeMem(0xb111, { 0x57 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x35cc, gbc.sp());
        EXPECT(0xb112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb111));
        // 57 0361
        gbc.setState(0x9be9, 0xc6db, 0x3e20, 0xdc0d, 0x8027, 0xba86, 0x1, 0x1);
        gbc.writeMem(0x9be9, { 0x57 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc6db, gbc.sp());
        EXPECT(0x9bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9be9));
        // 57 0362
        gbc.setState(0x876e, 0xb9d4, 0xc690, 0x9a7b, 0x8561, 0x54f4, 0x0, 0x0);
        gbc.writeMem(0x876e, { 0x57 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb9d4, gbc.sp());
        EXPECT(0x876f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x876e));
        // 57 0365
        gbc.setState(0x8e5e, 0xadd1, 0x5a30, 0xac7, 0x7fc6, 0x8def, 0x1, 0x1);
        gbc.writeMem(0x8e5e, { 0x57 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xadd1, gbc.sp());
        EXPECT(0x8e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8e5e));
        // 57 0366
        gbc.setState(0x5274, 0x25a3, 0x3c30, 0xe2c4, 0x85c6, 0x63e8, 0x1, 0x0);
        gbc.writeMem(0x5274, { 0x57 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x25a3, gbc.sp());
        EXPECT(0x5275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0368
        gbc.setState(0x1430, 0xacdc, 0xdb60, 0xca3a, 0x630b, 0x80ef, 0x1, 0x0);
        gbc.writeMem(0x1430, { 0x57 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xacdc, gbc.sp());
        EXPECT(0x1431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0369
        gbc.setState(0x5cdc, 0x5ec6, 0xc410, 0x1744, 0x4885, 0x7cfe, 0x1, 0x1);
        gbc.writeMem(0x5cdc, { 0x57 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5ec6, gbc.sp());
        EXPECT(0x5cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 036A
        gbc.setState(0xa87c, 0x4ae3, 0x94a0, 0x9808, 0xf982, 0xaf64, 0x0, 0x0);
        gbc.writeMem(0xa87c, { 0x57 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4ae3, gbc.sp());
        EXPECT(0xa87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa87c));
        // 57 036B
        gbc.setState(0xc523, 0xde0f, 0xbd80, 0xae06, 0x547f, 0xe8f6, 0x0, 0x1);
        gbc.writeMem(0xc523, { 0x57 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xde0f, gbc.sp());
        EXPECT(0xc524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc523));
        // 57 036C
        gbc.setState(0x6120, 0x3996, 0x89c0, 0xbcbe, 0xe40b, 0x193d, 0x1, 0x0);
        gbc.writeMem(0x6120, { 0x57 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3996, gbc.sp());
        EXPECT(0x6121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 036D
        gbc.setState(0x4a8c, 0x265f, 0x2170, 0x57d2, 0x4e42, 0xe658, 0x1, 0x0);
        gbc.writeMem(0x4a8c, { 0x57 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x265f, gbc.sp());
        EXPECT(0x4a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 036F
        gbc.setState(0x7ad1, 0x92ec, 0x2bb0, 0xabbc, 0x10da, 0x1aee, 0x1, 0x1);
        gbc.writeMem(0x7ad1, { 0x57 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x92ec, gbc.sp());
        EXPECT(0x7ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0370
        gbc.setState(0x6553, 0x6752, 0x9c70, 0x4ac7, 0x51da, 0x13ff, 0x1, 0x1);
        gbc.writeMem(0x6553, { 0x57 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6752, gbc.sp());
        EXPECT(0x6554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0371
        gbc.setState(0xcacd, 0xbdc1, 0x5050, 0xfd9c, 0xc10f, 0xcfdc, 0x0, 0x1);
        gbc.writeMem(0xcacd, { 0x57 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbdc1, gbc.sp());
        EXPECT(0xcace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcacd));
        // 57 0372
        gbc.setState(0x4dcf, 0x679c, 0x5a70, 0x674c, 0xd12f, 0xff85, 0x1, 0x1);
        gbc.writeMem(0x4dcf, { 0x57 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x679c, gbc.sp());
        EXPECT(0x4dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0373
        gbc.setState(0xdd6e, 0x10c1, 0x6010, 0xe309, 0xee7f, 0x1406, 0x1, 0x1);
        gbc.writeMem(0xdd6e, { 0x57 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x10c1, gbc.sp());
        EXPECT(0xdd6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdd6e));
        // 57 0374
        gbc.setState(0x5165, 0x256, 0x60d0, 0xa316, 0x6e0d, 0x8694, 0x1, 0x1);
        gbc.writeMem(0x5165, { 0x57 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x256, gbc.sp());
        EXPECT(0x5166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0375
        gbc.setState(0xe821, 0x269b, 0xbda0, 0xc5c4, 0xbeb0, 0xfa2d, 0x1, 0x1);
        gbc.writeMem(0xe821, { 0x57 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x269b, gbc.sp());
        EXPECT(0xe822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe821));
        // 57 0376
        gbc.setState(0xa302, 0x5965, 0xa240, 0x774b, 0xe8e2, 0xe1f, 0x0, 0x0);
        gbc.writeMem(0xa302, { 0x57 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5965, gbc.sp());
        EXPECT(0xa303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa302));
        // 57 0377
        gbc.setState(0x1473, 0x9902, 0xd0, 0xd588, 0x1182, 0x5c92, 0x0, 0x0);
        gbc.writeMem(0x1473, { 0x57 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9902, gbc.sp());
        EXPECT(0x1474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0378
        gbc.setState(0xc6a1, 0x24a7, 0xff70, 0x564e, 0xb99e, 0x6b8a, 0x1, 0x0);
        gbc.writeMem(0xc6a1, { 0x57 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x24a7, gbc.sp());
        EXPECT(0xc6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc6a1));
        // 57 0379
        gbc.setState(0xbc7d, 0x2492, 0xdcf0, 0x72a5, 0x3a98, 0x6e52, 0x1, 0x1);
        gbc.writeMem(0xbc7d, { 0x57 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2492, gbc.sp());
        EXPECT(0xbc7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbc7d));
        // 57 037A
        gbc.setState(0x8c99, 0x955d, 0x7f00, 0x8337, 0x35b, 0x6744, 0x1, 0x0);
        gbc.writeMem(0x8c99, { 0x57 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x955d, gbc.sp());
        EXPECT(0x8c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8c99));
        // 57 037B
        gbc.setState(0x59d4, 0x7b84, 0x9570, 0x41f6, 0x145b, 0xd89f, 0x1, 0x0);
        gbc.writeMem(0x59d4, { 0x57 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7b84, gbc.sp());
        EXPECT(0x59d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 037C
        gbc.setState(0xddf7, 0xd642, 0xda90, 0x1955, 0x6ebc, 0x4d9f, 0x0, 0x1);
        gbc.writeMem(0xddf7, { 0x57 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd642, gbc.sp());
        EXPECT(0xddf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xddf7));
        // 57 037D
        gbc.setState(0x37ec, 0x585e, 0xcea0, 0x3634, 0xd1ec, 0x7807, 0x1, 0x0);
        gbc.writeMem(0x37ec, { 0x57 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x585e, gbc.sp());
        EXPECT(0x37ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 037E
        gbc.setState(0x1b95, 0x724c, 0xefd0, 0xd58, 0x10da, 0x682b, 0x0, 0x1);
        gbc.writeMem(0x1b95, { 0x57 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x724c, gbc.sp());
        EXPECT(0x1b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 037F
        gbc.setState(0xa70b, 0x42fc, 0x6ed0, 0xb27, 0x8464, 0x9b4a, 0x1, 0x1);
        gbc.writeMem(0xa70b, { 0x57 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x42fc, gbc.sp());
        EXPECT(0xa70c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa70b));
        // 57 0380
        gbc.setState(0x6eab, 0x3ba6, 0xbaa0, 0x9dbc, 0xbe6, 0x5e60, 0x0, 0x1);
        gbc.writeMem(0x6eab, { 0x57 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3ba6, gbc.sp());
        EXPECT(0x6eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0381
        gbc.setState(0xd8d5, 0x36fe, 0x1a10, 0xa188, 0x15c6, 0x3163, 0x0, 0x0);
        gbc.writeMem(0xd8d5, { 0x57 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x36fe, gbc.sp());
        EXPECT(0xd8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd8d5));
        // 57 0383
        gbc.setState(0x252b, 0x8a5f, 0x3930, 0xbd26, 0x1d96, 0x363, 0x1, 0x0);
        gbc.writeMem(0x252b, { 0x57 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8a5f, gbc.sp());
        EXPECT(0x252c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0384
        gbc.setState(0xc80b, 0xd2bc, 0x9a10, 0x20fd, 0xbf29, 0x352b, 0x1, 0x1);
        gbc.writeMem(0xc80b, { 0x57 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd2bc, gbc.sp());
        EXPECT(0xc80c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc80b));
        // 57 0385
        gbc.setState(0x9804, 0x4f38, 0xa550, 0xa7ad, 0xfe6b, 0xea6, 0x1, 0x0);
        gbc.writeMem(0x9804, { 0x57 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4f38, gbc.sp());
        EXPECT(0x9805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9804));
        // 57 0386
        gbc.setState(0xa99c, 0xed41, 0xa100, 0x8b3b, 0x34f1, 0x19ca, 0x0, 0x0);
        gbc.writeMem(0xa99c, { 0x57 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xed41, gbc.sp());
        EXPECT(0xa99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa99c));
        // 57 0387
        gbc.setState(0xbfda, 0xa348, 0x6630, 0xb78e, 0xc014, 0xf528, 0x0, 0x0);
        gbc.writeMem(0xbfda, { 0x57 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa348, gbc.sp());
        EXPECT(0xbfdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbfda));
        // 57 0388
        gbc.setState(0x2f28, 0x6f34, 0xefe0, 0xe9dc, 0x389c, 0x57e3, 0x0, 0x1);
        gbc.writeMem(0x2f28, { 0x57 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6f34, gbc.sp());
        EXPECT(0x2f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0389
        gbc.setState(0x19e2, 0x1afd, 0xe7e0, 0xd782, 0xea58, 0x8fb8, 0x0, 0x1);
        gbc.writeMem(0x19e2, { 0x57 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1afd, gbc.sp());
        EXPECT(0x19e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 038A
        gbc.setState(0x177f, 0x80f0, 0x1250, 0x72c0, 0xa329, 0x7e33, 0x1, 0x0);
        gbc.writeMem(0x177f, { 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x80f0, gbc.sp());
        EXPECT(0x1780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 038B
        gbc.setState(0x5a34, 0xad8a, 0x3130, 0x1040, 0x909b, 0xd08a, 0x0, 0x1);
        gbc.writeMem(0x5a34, { 0x57 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xad8a, gbc.sp());
        EXPECT(0x5a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 038C
        gbc.setState(0xa9, 0x8cc, 0xf9e0, 0xb4d, 0x3377, 0x8356, 0x1, 0x1);
        gbc.writeMem(0xa9, { 0x57 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8cc, gbc.sp());
        EXPECT(0xaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 038D
        gbc.setState(0xa406, 0xe28e, 0x9e90, 0xaa3c, 0x4fdf, 0xc69c, 0x1, 0x1);
        gbc.writeMem(0xa406, { 0x57 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe28e, gbc.sp());
        EXPECT(0xa407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa406));
        // 57 038E
        gbc.setState(0x7855, 0x895d, 0xc7f0, 0xe8ab, 0xdc58, 0x7e17, 0x0, 0x1);
        gbc.writeMem(0x7855, { 0x57 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x895d, gbc.sp());
        EXPECT(0x7856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 038F
        gbc.setState(0x8e61, 0xb8d6, 0xc170, 0x9b93, 0xd04e, 0x8d4c, 0x1, 0x1);
        gbc.writeMem(0x8e61, { 0x57 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb8d6, gbc.sp());
        EXPECT(0x8e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8e61));
        // 57 0390
        gbc.setState(0xb0e0, 0x8852, 0x9330, 0x4bc5, 0x1fc2, 0x682c, 0x0, 0x0);
        gbc.writeMem(0xb0e0, { 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8852, gbc.sp());
        EXPECT(0xb0e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb0e0));
        // 57 0391
        gbc.setState(0x62d0, 0x8604, 0xc0e0, 0x996b, 0x3e29, 0x826a, 0x0, 0x0);
        gbc.writeMem(0x62d0, { 0x57 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8604, gbc.sp());
        EXPECT(0x62d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0392
        gbc.setState(0x4daf, 0xffa0, 0xcbf0, 0xa7b7, 0x928d, 0xe63f, 0x0, 0x0);
        gbc.writeMem(0x4daf, { 0x57 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xffa0, gbc.sp());
        EXPECT(0x4db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 0393
        gbc.setState(0x89fe, 0x617d, 0xbbd0, 0xc72d, 0x44aa, 0xd22d, 0x1, 0x0);
        gbc.writeMem(0x89fe, { 0x57 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x617d, gbc.sp());
        EXPECT(0x89ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x89fe));
        // 57 0394
        gbc.setState(0x71e3, 0xcba6, 0x8a20, 0x4098, 0xf1bd, 0x302d, 0x0, 0x0);
        gbc.writeMem(0x71e3, { 0x57 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcba6, gbc.sp());
        EXPECT(0x71e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0395
        gbc.setState(0x13ea, 0x3d9e, 0xd980, 0x943e, 0xe722, 0x6dd, 0x0, 0x1);
        gbc.writeMem(0x13ea, { 0x57 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3d9e, gbc.sp());
        EXPECT(0x13eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0396
        gbc.setState(0xea57, 0xb44a, 0x9960, 0x6d94, 0xd037, 0x708a, 0x1, 0x0);
        gbc.writeMem(0xea57, { 0x57 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb44a, gbc.sp());
        EXPECT(0xea58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xea57));
        // 57 0397
        gbc.setState(0x37d7, 0xcdb3, 0x2e80, 0x2b36, 0x7498, 0x50d6, 0x0, 0x0);
        gbc.writeMem(0x37d7, { 0x57 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcdb3, gbc.sp());
        EXPECT(0x37d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 0398
        gbc.setState(0xc718, 0xc7f8, 0x23a0, 0x18d7, 0x542e, 0x385f, 0x0, 0x0);
        gbc.writeMem(0xc718, { 0x57 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc7f8, gbc.sp());
        EXPECT(0xc719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc718));
        // 57 0399
        gbc.setState(0x301b, 0xde98, 0x49a0, 0x84c, 0xb7ea, 0x6add, 0x1, 0x1);
        gbc.writeMem(0x301b, { 0x57 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xde98, gbc.sp());
        EXPECT(0x301c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 039A
        gbc.setState(0x1839, 0x8e5e, 0x41c0, 0xdad3, 0x6fd, 0x4c6, 0x0, 0x1);
        gbc.writeMem(0x1839, { 0x57 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8e5e, gbc.sp());
        EXPECT(0x183a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 039B
        gbc.setState(0xd748, 0xe48b, 0x5ae0, 0xc545, 0x5f92, 0x7460, 0x0, 0x1);
        gbc.writeMem(0xd748, { 0x57 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe48b, gbc.sp());
        EXPECT(0xd749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd748));
        // 57 039C
        gbc.setState(0xda8, 0x276, 0xe7a0, 0x8592, 0xb80, 0xeb25, 0x0, 0x1);
        gbc.writeMem(0xda8, { 0x57 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x276, gbc.sp());
        EXPECT(0xda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 039D
        gbc.setState(0x4238, 0xdda, 0xa610, 0xe08, 0x352d, 0x40c0, 0x0, 0x0);
        gbc.writeMem(0x4238, { 0x57 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdda, gbc.sp());
        EXPECT(0x4239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 039E
        gbc.setState(0x4ddf, 0x6469, 0x28d0, 0x2f7c, 0x27cb, 0x53a4, 0x1, 0x0);
        gbc.writeMem(0x4ddf, { 0x57 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6469, gbc.sp());
        EXPECT(0x4de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 039F
        gbc.setState(0x60ab, 0xa4f1, 0x9450, 0xe98e, 0x88af, 0xc872, 0x0, 0x0);
        gbc.writeMem(0x60ab, { 0x57 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa4f1, gbc.sp());
        EXPECT(0x60ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03A2
        gbc.setState(0xe0f4, 0xa411, 0x6400, 0x1ad0, 0x8210, 0x5a98, 0x1, 0x0);
        gbc.writeMem(0xe0f4, { 0x57 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa411, gbc.sp());
        EXPECT(0xe0f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe0f4));
        // 57 03A3
        gbc.setState(0x797e, 0x8114, 0xe6e0, 0x6eb4, 0x5f05, 0x4bd4, 0x1, 0x1);
        gbc.writeMem(0x797e, { 0x57 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8114, gbc.sp());
        EXPECT(0x797f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03A4
        gbc.setState(0x4cbf, 0xf27f, 0x7d90, 0x5cd6, 0x7ee6, 0x1a94, 0x1, 0x0);
        gbc.writeMem(0x4cbf, { 0x57 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf27f, gbc.sp());
        EXPECT(0x4cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03A5
        gbc.setState(0x6d4e, 0xbe70, 0xb730, 0x5b34, 0x2aa7, 0x750a, 0x1, 0x0);
        gbc.writeMem(0x6d4e, { 0x57 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbe70, gbc.sp());
        EXPECT(0x6d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03A6
        gbc.setState(0xc882, 0xe741, 0x9f50, 0xe968, 0x321c, 0xefef, 0x1, 0x1);
        gbc.writeMem(0xc882, { 0x57 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe741, gbc.sp());
        EXPECT(0xc883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc882));
        // 57 03A7
        gbc.setState(0x79a6, 0x1376, 0x23c0, 0x6fdb, 0x8452, 0x7a2e, 0x1, 0x1);
        gbc.writeMem(0x79a6, { 0x57 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1376, gbc.sp());
        EXPECT(0x79a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03A8
        gbc.setState(0xd2e8, 0xcfd, 0x90f0, 0xbe1a, 0xb10b, 0xe22c, 0x1, 0x1);
        gbc.writeMem(0xd2e8, { 0x57 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcfd, gbc.sp());
        EXPECT(0xd2e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd2e8));
        // 57 03A9
        gbc.setState(0x5ba3, 0x1d33, 0xd70, 0xf2ca, 0xec66, 0xf975, 0x0, 0x1);
        gbc.writeMem(0x5ba3, { 0x57 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1d33, gbc.sp());
        EXPECT(0x5ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03AA
        gbc.setState(0x157a, 0x95e4, 0xbf70, 0x651b, 0x8d6, 0x2679, 0x0, 0x1);
        gbc.writeMem(0x157a, { 0x57 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x95e4, gbc.sp());
        EXPECT(0x157b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03AB
        gbc.setState(0x1d5, 0x2f5d, 0xd200, 0x184f, 0x3438, 0xb0d7, 0x0, 0x1);
        gbc.writeMem(0x1d5, { 0x57 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2f5d, gbc.sp());
        EXPECT(0x1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03AC
        gbc.setState(0x5dae, 0xc2d0, 0x6030, 0x765b, 0x9162, 0x714e, 0x1, 0x1);
        gbc.writeMem(0x5dae, { 0x57 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc2d0, gbc.sp());
        EXPECT(0x5daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03AD
        gbc.setState(0x8823, 0x4160, 0xf260, 0x8937, 0xf230, 0x9079, 0x0, 0x0);
        gbc.writeMem(0x8823, { 0x57 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4160, gbc.sp());
        EXPECT(0x8824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8823));
        // 57 03AE
        gbc.setState(0x1f19, 0xeff2, 0xd90, 0x7240, 0xaa8d, 0xf505, 0x1, 0x1);
        gbc.writeMem(0x1f19, { 0x57 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xeff2, gbc.sp());
        EXPECT(0x1f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03AF
        gbc.setState(0x1e22, 0xe575, 0xa840, 0x57a7, 0x9035, 0x4734, 0x0, 0x0);
        gbc.writeMem(0x1e22, { 0x57 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe575, gbc.sp());
        EXPECT(0x1e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03B0
        gbc.setState(0xe3e0, 0x2d81, 0x4f30, 0x4f58, 0xded5, 0x5523, 0x1, 0x0);
        gbc.writeMem(0xe3e0, { 0x57 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2d81, gbc.sp());
        EXPECT(0xe3e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe3e0));
        // 57 03B1
        gbc.setState(0xe01d, 0x7908, 0x2d0, 0x4721, 0xe232, 0x2ceb, 0x0, 0x1);
        gbc.writeMem(0xe01d, { 0x57 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7908, gbc.sp());
        EXPECT(0xe01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe01d));
        // 57 03B2
        gbc.setState(0x2b29, 0x1d46, 0xb610, 0xddc2, 0xbcf2, 0xcd45, 0x0, 0x0);
        gbc.writeMem(0x2b29, { 0x57 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1d46, gbc.sp());
        EXPECT(0x2b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03B3
        gbc.setState(0xc153, 0xf5d, 0x10c0, 0x7a1b, 0x755, 0xd11a, 0x0, 0x1);
        gbc.writeMem(0xc153, { 0x57 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf5d, gbc.sp());
        EXPECT(0xc154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc153));
        // 57 03B4
        gbc.setState(0x7a3c, 0x7934, 0xb4a0, 0x4210, 0x429d, 0xbed3, 0x1, 0x0);
        gbc.writeMem(0x7a3c, { 0x57 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7934, gbc.sp());
        EXPECT(0x7a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03B5
        gbc.setState(0x18da, 0x1bd, 0xd090, 0x70bf, 0x95b0, 0x2c63, 0x1, 0x0);
        gbc.writeMem(0x18da, { 0x57 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1bd, gbc.sp());
        EXPECT(0x18db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03B7
        gbc.setState(0xa1e6, 0x7547, 0x5320, 0x2a24, 0x5ce1, 0xf26d, 0x1, 0x0);
        gbc.writeMem(0xa1e6, { 0x57 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7547, gbc.sp());
        EXPECT(0xa1e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa1e6));
        // 57 03B8
        gbc.setState(0xb26e, 0x5632, 0xf030, 0x609, 0xb9b5, 0x6e1b, 0x0, 0x1);
        gbc.writeMem(0xb26e, { 0x57 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5632, gbc.sp());
        EXPECT(0xb26f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb26e));
        // 57 03B9
        gbc.setState(0xc20d, 0x190, 0x94a0, 0x69b4, 0x4de3, 0x76e2, 0x0, 0x1);
        gbc.writeMem(0xc20d, { 0x57 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x190, gbc.sp());
        EXPECT(0xc20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc20d));
        // 57 03BA
        gbc.setState(0x8b20, 0xcce3, 0x61d0, 0xae67, 0xdc6d, 0x7b4a, 0x0, 0x1);
        gbc.writeMem(0x8b20, { 0x57 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcce3, gbc.sp());
        EXPECT(0x8b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8b20));
        // 57 03BB
        gbc.setState(0x421c, 0x858c, 0xe960, 0x96b1, 0xf4bb, 0xbda7, 0x1, 0x0);
        gbc.writeMem(0x421c, { 0x57 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x858c, gbc.sp());
        EXPECT(0x421d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03BC
        gbc.setState(0x111c, 0xe213, 0x57b0, 0x4dfe, 0x3ad, 0xa6ec, 0x1, 0x0);
        gbc.writeMem(0x111c, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe213, gbc.sp());
        EXPECT(0x111d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03BD
        gbc.setState(0xbd4b, 0x9572, 0x2d20, 0x923d, 0x4640, 0x7133, 0x1, 0x1);
        gbc.writeMem(0xbd4b, { 0x57 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9572, gbc.sp());
        EXPECT(0xbd4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbd4b));
        // 57 03BE
        gbc.setState(0x2f95, 0xf52b, 0xc0, 0x4c55, 0x6854, 0x80de, 0x0, 0x1);
        gbc.writeMem(0x2f95, { 0x57 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf52b, gbc.sp());
        EXPECT(0x2f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03BF
        gbc.setState(0x112e, 0x2a82, 0xe720, 0x1d23, 0xf8f7, 0x94e1, 0x1, 0x1);
        gbc.writeMem(0x112e, { 0x57 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2a82, gbc.sp());
        EXPECT(0x112f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03C0
        gbc.setState(0x9073, 0x4df1, 0x5cb0, 0x4000, 0xea79, 0xf892, 0x0, 0x0);
        gbc.writeMem(0x9073, { 0x57 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4df1, gbc.sp());
        EXPECT(0x9074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9073));
        // 57 03C1
        gbc.setState(0x7552, 0x5375, 0x89a0, 0xa14d, 0xe1b8, 0xe46f, 0x0, 0x1);
        gbc.writeMem(0x7552, { 0x57 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5375, gbc.sp());
        EXPECT(0x7553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03C2
        gbc.setState(0x3f1e, 0xe540, 0x3af0, 0x8052, 0x7a49, 0x1180, 0x1, 0x1);
        gbc.writeMem(0x3f1e, { 0x57 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe540, gbc.sp());
        EXPECT(0x3f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03C3
        gbc.setState(0x845c, 0x2e10, 0xb730, 0x570f, 0x22e2, 0xe0ea, 0x0, 0x1);
        gbc.writeMem(0x845c, { 0x57 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2e10, gbc.sp());
        EXPECT(0x845d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x845c));
        // 57 03C4
        gbc.setState(0x4542, 0xdb7c, 0x6210, 0xe08c, 0x7d91, 0x376b, 0x1, 0x1);
        gbc.writeMem(0x4542, { 0x57 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdb7c, gbc.sp());
        EXPECT(0x4543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03C5
        gbc.setState(0x576e, 0x670e, 0x2d70, 0xcd92, 0x78c4, 0xd40d, 0x1, 0x0);
        gbc.writeMem(0x576e, { 0x57 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x670e, gbc.sp());
        EXPECT(0x576f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03C6
        gbc.setState(0x38c0, 0xa2c4, 0xbca0, 0x629e, 0x9509, 0xdbe7, 0x0, 0x0);
        gbc.writeMem(0x38c0, { 0x57 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa2c4, gbc.sp());
        EXPECT(0x38c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03C7
        gbc.setState(0x5988, 0x6644, 0xb9f0, 0xfb1b, 0xafdf, 0xdacf, 0x1, 0x1);
        gbc.writeMem(0x5988, { 0x57 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6644, gbc.sp());
        EXPECT(0x5989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03C8
        gbc.setState(0x571d, 0xa30, 0xcfe0, 0x9a61, 0x369e, 0x2f96, 0x0, 0x0);
        gbc.writeMem(0x571d, { 0x57 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa30, gbc.sp());
        EXPECT(0x571e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03CA
        gbc.setState(0x9f29, 0xb88f, 0x6c70, 0x683f, 0x6be7, 0xfe29, 0x0, 0x0);
        gbc.writeMem(0x9f29, { 0x57 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb88f, gbc.sp());
        EXPECT(0x9f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9f29));
        // 57 03CB
        gbc.setState(0xae, 0x8b55, 0xb690, 0x4132, 0x3e42, 0x5463, 0x0, 0x0);
        gbc.writeMem(0xae, { 0x57 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8b55, gbc.sp());
        EXPECT(0xaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03CC
        gbc.setState(0xbf64, 0x8f7b, 0x2680, 0xa7ec, 0xc359, 0xd293, 0x0, 0x0);
        gbc.writeMem(0xbf64, { 0x57 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8f7b, gbc.sp());
        EXPECT(0xbf65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbf64));
        // 57 03CD
        gbc.setState(0x41b3, 0x8874, 0x3e70, 0x8aa0, 0xbd54, 0x92df, 0x0, 0x0);
        gbc.writeMem(0x41b3, { 0x57 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8874, gbc.sp());
        EXPECT(0x41b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03CE
        gbc.setState(0xcd4, 0x865f, 0x9990, 0xeb5d, 0xf540, 0xce44, 0x1, 0x1);
        gbc.writeMem(0xcd4, { 0x57 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x865f, gbc.sp());
        EXPECT(0xcd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03CF
        gbc.setState(0xda4f, 0x9a69, 0x43e0, 0xafb3, 0x6135, 0x737, 0x0, 0x0);
        gbc.writeMem(0xda4f, { 0x57 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9a69, gbc.sp());
        EXPECT(0xda50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xda4f));
        // 57 03D0
        gbc.setState(0x37a2, 0x8209, 0xe0f0, 0x5652, 0xac93, 0xaf79, 0x0, 0x0);
        gbc.writeMem(0x37a2, { 0x57 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8209, gbc.sp());
        EXPECT(0x37a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03D1
        gbc.setState(0x955b, 0x96a1, 0xc6d0, 0x9056, 0x3e91, 0xde65, 0x1, 0x0);
        gbc.writeMem(0x955b, { 0x57 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x96a1, gbc.sp());
        EXPECT(0x955c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x955b));
        // 57 03D2
        gbc.setState(0xc4a4, 0x20b5, 0x5530, 0x4937, 0xa9, 0x6976, 0x0, 0x1);
        gbc.writeMem(0xc4a4, { 0x57 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x20b5, gbc.sp());
        EXPECT(0xc4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc4a4));
        // 57 03D3
        gbc.setState(0x6026, 0x9518, 0x9c30, 0x2595, 0xd25e, 0x2041, 0x1, 0x0);
        gbc.writeMem(0x6026, { 0x57 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9518, gbc.sp());
        EXPECT(0x6027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03D4
        gbc.setState(0x856b, 0xac35, 0x1020, 0x6e50, 0xe56d, 0x49bb, 0x1, 0x1);
        gbc.writeMem(0x856b, { 0x57 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xac35, gbc.sp());
        EXPECT(0x856c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x856b));
        // 57 03D5
        gbc.setState(0xbf7, 0x3de9, 0xe900, 0xc0, 0xc767, 0x4f32, 0x0, 0x1);
        gbc.writeMem(0xbf7, { 0x57 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3de9, gbc.sp());
        EXPECT(0xbf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03D6
        gbc.setState(0x62b0, 0xa43f, 0x6850, 0x2930, 0x2cc6, 0xcb0f, 0x0, 0x1);
        gbc.writeMem(0x62b0, { 0x57 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa43f, gbc.sp());
        EXPECT(0x62b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03D7
        gbc.setState(0x33b8, 0x3c09, 0x9fa0, 0x44c1, 0x8540, 0x581f, 0x1, 0x0);
        gbc.writeMem(0x33b8, { 0x57 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3c09, gbc.sp());
        EXPECT(0x33b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03D8
        gbc.setState(0x32f1, 0xf7ea, 0x6a40, 0x8f00, 0x4a77, 0xe78a, 0x1, 0x1);
        gbc.writeMem(0x32f1, { 0x57 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf7ea, gbc.sp());
        EXPECT(0x32f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03D9
        gbc.setState(0xafb0, 0xa237, 0x170, 0xf332, 0xfac4, 0x9272, 0x1, 0x1);
        gbc.writeMem(0xafb0, { 0x57 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa237, gbc.sp());
        EXPECT(0xafb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xafb0));
        // 57 03DA
        gbc.setState(0x8023, 0xbeed, 0xd9f0, 0xd087, 0x4223, 0xfcf7, 0x1, 0x0);
        gbc.writeMem(0x8023, { 0x57 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbeed, gbc.sp());
        EXPECT(0x8024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8023));
        // 57 03DB
        gbc.setState(0x7375, 0xd582, 0xa1f0, 0x38f2, 0xf579, 0x21ad, 0x1, 0x0);
        gbc.writeMem(0x7375, { 0x57 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd582, gbc.sp());
        EXPECT(0x7376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03DC
        gbc.setState(0x36cf, 0x5306, 0xdcf0, 0x3a78, 0xa4d7, 0x8daf, 0x1, 0x1);
        gbc.writeMem(0x36cf, { 0x57 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5306, gbc.sp());
        EXPECT(0x36d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03DE
        gbc.setState(0x3fe2, 0x213d, 0xf120, 0x3380, 0xbf25, 0x734c, 0x0, 0x0);
        gbc.writeMem(0x3fe2, { 0x57 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x213d, gbc.sp());
        EXPECT(0x3fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03DF
        gbc.setState(0xea68, 0x335, 0x38b0, 0xfde2, 0x8a5a, 0x4342, 0x0, 0x0);
        gbc.writeMem(0xea68, { 0x57 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x335, gbc.sp());
        EXPECT(0xea69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xea68));
        // 57 03E0
        gbc.setState(0x89f1, 0x9c50, 0xea30, 0x3a00, 0xf1b0, 0x53db, 0x0, 0x1);
        gbc.writeMem(0x89f1, { 0x57 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9c50, gbc.sp());
        EXPECT(0x89f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x89f1));
        // 57 03E1
        gbc.setState(0x83d4, 0x71e5, 0xc1e0, 0xb645, 0x6d26, 0x426f, 0x1, 0x0);
        gbc.writeMem(0x83d4, { 0x57 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x71e5, gbc.sp());
        EXPECT(0x83d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x83d4));
        // 57 03E2
        gbc.setState(0x7651, 0xb77e, 0x4340, 0x380e, 0x3afb, 0x1e2, 0x1, 0x1);
        gbc.writeMem(0x7651, { 0x57 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb77e, gbc.sp());
        EXPECT(0x7652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03E3
        gbc.setState(0x32a5, 0x47d5, 0x4670, 0x10cd, 0x75c1, 0xd471, 0x0, 0x0);
        gbc.writeMem(0x32a5, { 0x57 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x47d5, gbc.sp());
        EXPECT(0x32a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 57 03E4
        gbc.setState(0xd4a6, 0x11a1, 0xcd50, 0x795a, 0x2b45, 0x4819, 0x1, 0x0);
        gbc.writeMem(0xd4a6, { 0x57 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x11a1, gbc.sp());
        EXPECT(0xd4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd4a6));
        // 57 03E5
        gbc.setState(0x37f0, 0x8b3d, 0x9fa0, 0x1acd, 0x52fd, 0x6948, 0x0, 0x1);
        gbc.writeMem(0x37f0, { 0x57 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8b3d, gbc.sp());
        EXPECT(0x37f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 57 03E6
        gbc.setState(0x8b72, 0xafdd, 0xd870, 0x23e3, 0x74f3, 0xfe18, 0x1, 0x0);
        gbc.writeMem(0x8b72, { 0x57 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xafdd, gbc.sp());
        EXPECT(0x8b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8b72));
        // 57 03E7
        gbc.setState(0xd414, 0x3a6b, 0x7120, 0xea88, 0x5441, 0x6b3d, 0x1, 0x1);
        gbc.writeMem(0xd414, { 0x57 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3a6b, gbc.sp());
        EXPECT(0xd415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd414));
    }
