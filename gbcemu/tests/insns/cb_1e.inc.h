    TEST(gbcemu, opcode_cb_1e) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 1E 0002
        gbc.setState(0x75bd, 0x86a2, 0xcb90, 0xee9c, 0x9809, 0xb16f, 0x0, 0x1);
        gbc.writeMem(0x75bd, { 0xcb, 0x1e });
        gbc.writeMem(0xb16f, { 0x4d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x86a2, gbc.sp());
        EXPECT(0x75bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb16f));
        // CB 1E 0005
        gbc.setState(0x65b, 0x413a, 0x9880, 0x7eae, 0xadb7, 0xbd4c, 0x1, 0x1);
        gbc.writeMem(0x65b, { 0xcb, 0x1e });
        gbc.writeMem(0xbd4c, { 0x66 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x413a, gbc.sp());
        EXPECT(0x65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbd4c));
        // CB 1E 000A
        gbc.setState(0x6729, 0x512f, 0x3130, 0x8eb2, 0x62f4, 0xf2cc, 0x0, 0x0);
        gbc.writeMem(0x6729, { 0xcb, 0x1e });
        gbc.writeMem(0xf2cc, { 0x2e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x512f, gbc.sp());
        EXPECT(0x672b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xf2cc));
        // CB 1E 000C
        gbc.setState(0xc76, 0x65d4, 0xf050, 0xe3fa, 0x8727, 0x8515, 0x0, 0x0);
        gbc.writeMem(0xc76, { 0xcb, 0x1e });
        gbc.writeMem(0x8515, { 0x74 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x65d4, gbc.sp());
        EXPECT(0xc78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x8515));
        // CB 1E 000E
        gbc.setState(0xc81a, 0x63a0, 0x5390, 0x211, 0x68cc, 0xad58, 0x1, 0x0);
        gbc.writeMem(0xad58, { 0xa4 });
        gbc.writeMem(0xc81a, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x63a0, gbc.sp());
        EXPECT(0xc81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xad58));
        EXPECT(0xcb, gbc.readMem(0xc81a));
        EXPECT(0x1e, gbc.readMem(0xc81b));
        // CB 1E 000F
        gbc.setState(0x75f7, 0x2532, 0x8950, 0x3bd7, 0x47fd, 0x8e2b, 0x1, 0x1);
        gbc.writeMem(0x75f7, { 0xcb, 0x1e });
        gbc.writeMem(0x8e2b, { 0x15 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2532, gbc.sp());
        EXPECT(0x75f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8e2b));
        // CB 1E 0010
        gbc.setState(0x9511, 0x568b, 0xeef0, 0x915a, 0x9a8d, 0xcdc7, 0x0, 0x0);
        gbc.writeMem(0x9511, { 0xcb, 0x1e });
        gbc.writeMem(0xcdc7, { 0x17 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x568b, gbc.sp());
        EXPECT(0x9513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9511));
        EXPECT(0x1e, gbc.readMem(0x9512));
        EXPECT(0x8b, gbc.readMem(0xcdc7));
        // CB 1E 0016
        gbc.setState(0x186b, 0x8864, 0xe720, 0xc25d, 0x9267, 0x9faf, 0x1, 0x0);
        gbc.writeMem(0x186b, { 0xcb, 0x1e });
        gbc.writeMem(0x9faf, { 0x83 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8864, gbc.sp());
        EXPECT(0x186d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x9faf));
        // CB 1E 0017
        gbc.setState(0x8f0e, 0x4745, 0xd8f0, 0x378a, 0x77bf, 0xaddf, 0x1, 0x0);
        gbc.writeMem(0x8f0e, { 0xcb, 0x1e });
        gbc.writeMem(0xaddf, { 0xe6 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4745, gbc.sp());
        EXPECT(0x8f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f0e));
        EXPECT(0x1e, gbc.readMem(0x8f0f));
        EXPECT(0xf3, gbc.readMem(0xaddf));
        // CB 1E 001C
        gbc.setState(0x8e26, 0xe345, 0x70a0, 0x79fd, 0x4aff, 0xe5c7, 0x1, 0x1);
        gbc.writeMem(0x8e26, { 0xcb, 0x1e });
        gbc.writeMem(0xe5c7, { 0xb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe345, gbc.sp());
        EXPECT(0x8e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e26));
        EXPECT(0x1e, gbc.readMem(0x8e27));
        EXPECT(0x5, gbc.readMem(0xe5c7));
        // CB 1E 001D
        gbc.setState(0xdc0d, 0xfb86, 0xad00, 0x893a, 0xacec, 0xd9ac, 0x1, 0x0);
        gbc.writeMem(0xd9ac, { 0x4a });
        gbc.writeMem(0xdc0d, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfb86, gbc.sp());
        EXPECT(0xdc0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd9ac));
        EXPECT(0xcb, gbc.readMem(0xdc0d));
        EXPECT(0x1e, gbc.readMem(0xdc0e));
        // CB 1E 001E
        gbc.setState(0xb069, 0x2c60, 0x29b0, 0x7234, 0x7743, 0xfb7d, 0x0, 0x1);
        gbc.writeMem(0xb069, { 0xcb, 0x1e });
        gbc.writeMem(0xfb7d, { 0xa4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2c60, gbc.sp());
        EXPECT(0xb06b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb069));
        EXPECT(0x1e, gbc.readMem(0xb06a));
        EXPECT(0xd2, gbc.readMem(0xfb7d));
        // CB 1E 0020
        gbc.setState(0x524c, 0x583f, 0x6830, 0xa5ff, 0xde6, 0xfb94, 0x0, 0x0);
        gbc.writeMem(0x524c, { 0xcb, 0x1e });
        gbc.writeMem(0xfb94, { 0x94 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x583f, gbc.sp());
        EXPECT(0x524e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xfb94));
        // CB 1E 0021
        gbc.setState(0x4ced, 0x8c83, 0x81d0, 0x8d42, 0x21f1, 0xe217, 0x1, 0x0);
        gbc.writeMem(0x4ced, { 0xcb, 0x1e });
        gbc.writeMem(0xe217, { 0xaf });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8c83, gbc.sp());
        EXPECT(0x4cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xe217));
        // CB 1E 0024
        gbc.setState(0x3e4b, 0xe363, 0x1e50, 0x6f7a, 0x8e4b, 0x893f, 0x0, 0x1);
        gbc.writeMem(0x3e4b, { 0xcb, 0x1e });
        gbc.writeMem(0x893f, { 0x1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe363, gbc.sp());
        EXPECT(0x3e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x893f));
        // CB 1E 0025
        gbc.setState(0x9231, 0x1b2d, 0x68d0, 0xec28, 0x7b4e, 0xd4d7, 0x0, 0x0);
        gbc.writeMem(0x9231, { 0xcb, 0x1e });
        gbc.writeMem(0xd4d7, { 0xfe });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1b2d, gbc.sp());
        EXPECT(0x9233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9231));
        EXPECT(0x1e, gbc.readMem(0x9232));
        EXPECT(0xff, gbc.readMem(0xd4d7));
        // CB 1E 0027
        gbc.setState(0xa907, 0x34c7, 0x22f0, 0xc541, 0xef17, 0x87a6, 0x1, 0x1);
        gbc.writeMem(0x87a6, { 0xb3 });
        gbc.writeMem(0xa907, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x34c7, gbc.sp());
        EXPECT(0xa909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x87a6));
        EXPECT(0xcb, gbc.readMem(0xa907));
        EXPECT(0x1e, gbc.readMem(0xa908));
        // CB 1E 0028
        gbc.setState(0xef1f, 0xd69f, 0x320, 0xf3b9, 0x8650, 0x8b99, 0x1, 0x0);
        gbc.writeMem(0x8b99, { 0xe6 });
        gbc.writeMem(0xef1f, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd69f, gbc.sp());
        EXPECT(0xef21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8b99));
        EXPECT(0xcb, gbc.readMem(0xef1f));
        EXPECT(0x1e, gbc.readMem(0xef20));
        // CB 1E 0029
        gbc.setState(0xa35c, 0x1f97, 0x7460, 0x9c6f, 0xc02c, 0xcf10, 0x1, 0x1);
        gbc.writeMem(0xa35c, { 0xcb, 0x1e });
        gbc.writeMem(0xcf10, { 0xea });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1f97, gbc.sp());
        EXPECT(0xa35e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa35c));
        EXPECT(0x1e, gbc.readMem(0xa35d));
        EXPECT(0x75, gbc.readMem(0xcf10));
        // CB 1E 002A
        gbc.setState(0xe489, 0x2788, 0x60e0, 0x4b3e, 0xbabd, 0xb479, 0x0, 0x0);
        gbc.writeMem(0xb479, { 0x35 });
        gbc.writeMem(0xe489, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2788, gbc.sp());
        EXPECT(0xe48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb479));
        EXPECT(0xcb, gbc.readMem(0xe489));
        EXPECT(0x1e, gbc.readMem(0xe48a));
        // CB 1E 0030
        gbc.setState(0x5d87, 0xe1cf, 0xa6e0, 0x5359, 0x86ef, 0xf695, 0x0, 0x0);
        gbc.writeMem(0x5d87, { 0xcb, 0x1e });
        gbc.writeMem(0xf695, { 0xf });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe1cf, gbc.sp());
        EXPECT(0x5d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xf695));
        // CB 1E 0032
        gbc.setState(0x3131, 0x784d, 0x43d0, 0x2c53, 0xf700, 0xeeec, 0x0, 0x0);
        gbc.writeMem(0x3131, { 0xcb, 0x1e });
        gbc.writeMem(0xeeec, { 0xcf });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x784d, gbc.sp());
        EXPECT(0x3133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xeeec));
        // CB 1E 0033
        gbc.setState(0x160e, 0x7c78, 0x1190, 0x625c, 0x7392, 0x83ae, 0x0, 0x1);
        gbc.writeMem(0x160e, { 0xcb, 0x1e });
        gbc.writeMem(0x83ae, { 0x8d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7c78, gbc.sp());
        EXPECT(0x1610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x83ae));
        // CB 1E 0034
        gbc.setState(0x1faf, 0x3073, 0x4710, 0x99f3, 0xb579, 0xa32d, 0x0, 0x1);
        gbc.writeMem(0x1faf, { 0xcb, 0x1e });
        gbc.writeMem(0xa32d, { 0x71 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3073, gbc.sp());
        EXPECT(0x1fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xa32d));
        // CB 1E 0036
        gbc.setState(0x56d3, 0x9887, 0x6070, 0x71fb, 0x1524, 0xc702, 0x1, 0x1);
        gbc.writeMem(0x56d3, { 0xcb, 0x1e });
        gbc.writeMem(0xc702, { 0x8e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9887, gbc.sp());
        EXPECT(0x56d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xc702));
        // CB 1E 0038
        gbc.setState(0x8759, 0x415b, 0x9d90, 0xacd6, 0xfbcb, 0xebdb, 0x1, 0x0);
        gbc.writeMem(0x8759, { 0xcb, 0x1e });
        gbc.writeMem(0xebdb, { 0x87 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x415b, gbc.sp());
        EXPECT(0x875b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8759));
        EXPECT(0x1e, gbc.readMem(0x875a));
        EXPECT(0xc3, gbc.readMem(0xebdb));
        // CB 1E 0039
        gbc.setState(0x5b27, 0x2c6, 0x3e80, 0xca3f, 0xef76, 0x9703, 0x0, 0x0);
        gbc.writeMem(0x5b27, { 0xcb, 0x1e });
        gbc.writeMem(0x9703, { 0x64 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2c6, gbc.sp());
        EXPECT(0x5b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9703));
        // CB 1E 003A
        gbc.setState(0x4f63, 0x73ba, 0xfa10, 0xf261, 0x4750, 0xfc7c, 0x0, 0x1);
        gbc.writeMem(0x4f63, { 0xcb, 0x1e });
        gbc.writeMem(0xfc7c, { 0x69 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x73ba, gbc.sp());
        EXPECT(0x4f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xfc7c));
        // CB 1E 003B
        gbc.setState(0x5106, 0x168e, 0x8ff0, 0x1faf, 0xf6b6, 0x86e1, 0x1, 0x1);
        gbc.writeMem(0x5106, { 0xcb, 0x1e });
        gbc.writeMem(0x86e1, { 0x17 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x168e, gbc.sp());
        EXPECT(0x5108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x86e1));
        // CB 1E 003C
        gbc.setState(0x6b1, 0xc27c, 0xd850, 0xa76d, 0x797c, 0xffa9, 0x1, 0x1);
        gbc.writeMem(0x6b1, { 0xcb, 0x1e });
        gbc.writeMem(0xffa9, { 0x61 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc27c, gbc.sp());
        EXPECT(0x6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xffa9));
        // CB 1E 003D
        gbc.setState(0x7f5c, 0xb814, 0xb760, 0x783, 0x6817, 0xf5b0, 0x0, 0x1);
        gbc.writeMem(0x7f5c, { 0xcb, 0x1e });
        gbc.writeMem(0xf5b0, { 0x27 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb814, gbc.sp());
        EXPECT(0x7f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xf5b0));
        // CB 1E 003E
        gbc.setState(0xcb68, 0x74ba, 0x73d0, 0xdc69, 0x6862, 0xf9fa, 0x1, 0x1);
        gbc.writeMem(0xcb68, { 0xcb, 0x1e });
        gbc.writeMem(0xf9fa, { 0x4a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x74ba, gbc.sp());
        EXPECT(0xcb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb68));
        EXPECT(0x1e, gbc.readMem(0xcb69));
        EXPECT(0xa5, gbc.readMem(0xf9fa));
        // CB 1E 0040
        gbc.setState(0x45f2, 0x4be9, 0x4870, 0x6488, 0x90c5, 0x8da0, 0x1, 0x1);
        gbc.writeMem(0x45f2, { 0xcb, 0x1e });
        gbc.writeMem(0x8da0, { 0x89 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4be9, gbc.sp());
        EXPECT(0x45f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x8da0));
        // CB 1E 0041
        gbc.setState(0xd729, 0xa744, 0x8850, 0xfb09, 0xecd9, 0xdb83, 0x0, 0x0);
        gbc.writeMem(0xd729, { 0xcb, 0x1e });
        gbc.writeMem(0xdb83, { 0x8b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa744, gbc.sp());
        EXPECT(0xd72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd729));
        EXPECT(0x1e, gbc.readMem(0xd72a));
        EXPECT(0xc5, gbc.readMem(0xdb83));
        // CB 1E 0042
        gbc.setState(0xe9c8, 0xc328, 0xdbf0, 0xdfb7, 0x25d3, 0x85bd, 0x0, 0x1);
        gbc.writeMem(0x85bd, { 0xbe });
        gbc.writeMem(0xe9c8, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc328, gbc.sp());
        EXPECT(0xe9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x85bd));
        EXPECT(0xcb, gbc.readMem(0xe9c8));
        EXPECT(0x1e, gbc.readMem(0xe9c9));
        // CB 1E 0046
        gbc.setState(0xbbc3, 0x64cf, 0x9160, 0xfb6b, 0x2f84, 0xf3b1, 0x0, 0x0);
        gbc.writeMem(0xbbc3, { 0xcb, 0x1e });
        gbc.writeMem(0xf3b1, { 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x64cf, gbc.sp());
        EXPECT(0xbbc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc3));
        EXPECT(0x1e, gbc.readMem(0xbbc4));
        EXPECT(0x5b, gbc.readMem(0xf3b1));
        // CB 1E 0047
        gbc.setState(0xa5af, 0xcd, 0x8f90, 0xbef4, 0x3b43, 0x94db, 0x1, 0x0);
        gbc.writeMem(0x94db, { 0x83 });
        gbc.writeMem(0xa5af, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcd, gbc.sp());
        EXPECT(0xa5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x94db));
        EXPECT(0xcb, gbc.readMem(0xa5af));
        EXPECT(0x1e, gbc.readMem(0xa5b0));
        // CB 1E 0049
        gbc.setState(0x81d3, 0x3b7c, 0x9dc0, 0x967c, 0x873a, 0x8c54, 0x1, 0x0);
        gbc.writeMem(0x81d3, { 0xcb, 0x1e });
        gbc.writeMem(0x8c54, { 0xa1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3b7c, gbc.sp());
        EXPECT(0x81d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d3));
        EXPECT(0x1e, gbc.readMem(0x81d4));
        EXPECT(0x50, gbc.readMem(0x8c54));
        // CB 1E 004B
        gbc.setState(0xb5, 0x50bc, 0x2f80, 0x2b85, 0x5491, 0xa56e, 0x1, 0x0);
        gbc.writeMem(0xb5, { 0xcb, 0x1e });
        gbc.writeMem(0xa56e, { 0x32 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x50bc, gbc.sp());
        EXPECT(0xb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa56e));
        // CB 1E 004C
        gbc.setState(0x9917, 0xa60f, 0x6870, 0x373, 0x80f7, 0xac41, 0x1, 0x1);
        gbc.writeMem(0x9917, { 0xcb, 0x1e });
        gbc.writeMem(0xac41, { 0xfe });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa60f, gbc.sp());
        EXPECT(0x9919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9917));
        EXPECT(0x1e, gbc.readMem(0x9918));
        EXPECT(0xff, gbc.readMem(0xac41));
        // CB 1E 004E
        gbc.setState(0xb7a9, 0x7245, 0xa8c0, 0xa6c2, 0x78a, 0xe861, 0x1, 0x1);
        gbc.writeMem(0xb7a9, { 0xcb, 0x1e });
        gbc.writeMem(0xe861, { 0x44 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7245, gbc.sp());
        EXPECT(0xb7ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a9));
        EXPECT(0x1e, gbc.readMem(0xb7aa));
        EXPECT(0x22, gbc.readMem(0xe861));
        // CB 1E 004F
        gbc.setState(0x36e9, 0x892a, 0x3010, 0x13bf, 0xbbbe, 0xaefd, 0x1, 0x1);
        gbc.writeMem(0x36e9, { 0xcb, 0x1e });
        gbc.writeMem(0xaefd, { 0x1d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x892a, gbc.sp());
        EXPECT(0x36eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xaefd));
        // CB 1E 0052
        gbc.setState(0xb5ed, 0x5c51, 0x88f0, 0x84c5, 0x1a84, 0xff8e, 0x0, 0x1);
        gbc.writeMem(0xb5ed, { 0xcb, 0x1e });
        gbc.writeMem(0xff8e, { 0xe3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5c51, gbc.sp());
        EXPECT(0xb5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ed));
        EXPECT(0x1e, gbc.readMem(0xb5ee));
        EXPECT(0xf1, gbc.readMem(0xff8e));
        // CB 1E 0055
        gbc.setState(0x8cb5, 0x7209, 0x220, 0x39ea, 0xede4, 0xdbc2, 0x1, 0x1);
        gbc.writeMem(0x8cb5, { 0xcb, 0x1e });
        gbc.writeMem(0xdbc2, { 0x63 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7209, gbc.sp());
        EXPECT(0x8cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb5));
        EXPECT(0x1e, gbc.readMem(0x8cb6));
        EXPECT(0x31, gbc.readMem(0xdbc2));
        // CB 1E 0056
        gbc.setState(0x5668, 0x983a, 0x6690, 0xc05a, 0x9dfe, 0xfcb2, 0x0, 0x0);
        gbc.writeMem(0x5668, { 0xcb, 0x1e });
        gbc.writeMem(0xfcb2, { 0xc });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x983a, gbc.sp());
        EXPECT(0x566a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xfcb2));
        // CB 1E 0058
        gbc.setState(0xb249, 0x4d7e, 0x3cc0, 0x51a1, 0x6577, 0x84c2, 0x1, 0x1);
        gbc.writeMem(0x84c2, { 0x63 });
        gbc.writeMem(0xb249, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4d7e, gbc.sp());
        EXPECT(0xb24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x84c2));
        EXPECT(0xcb, gbc.readMem(0xb249));
        EXPECT(0x1e, gbc.readMem(0xb24a));
        // CB 1E 0059
        gbc.setState(0x189a, 0x751e, 0x6330, 0xafbf, 0x6b8c, 0xe381, 0x0, 0x0);
        gbc.writeMem(0x189a, { 0xcb, 0x1e });
        gbc.writeMem(0xe381, { 0xcd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x751e, gbc.sp());
        EXPECT(0x189c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe381));
        // CB 1E 005A
        gbc.setState(0x7ad2, 0x55ec, 0xb0c0, 0xe5d0, 0x1ef2, 0xd21b, 0x1, 0x0);
        gbc.writeMem(0x7ad2, { 0xcb, 0x1e });
        gbc.writeMem(0xd21b, { 0x41 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x55ec, gbc.sp());
        EXPECT(0x7ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd21b));
        // CB 1E 005C
        gbc.setState(0x1e78, 0xc86e, 0x2c90, 0xfbdc, 0xb770, 0xed96, 0x0, 0x1);
        gbc.writeMem(0x1e78, { 0xcb, 0x1e });
        gbc.writeMem(0xed96, { 0x56 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc86e, gbc.sp());
        EXPECT(0x1e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xed96));
        // CB 1E 005E
        gbc.setState(0xd63f, 0xe469, 0x6680, 0x4491, 0x66d3, 0x9bcf, 0x0, 0x1);
        gbc.writeMem(0x9bcf, { 0x71 });
        gbc.writeMem(0xd63f, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe469, gbc.sp());
        EXPECT(0xd641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9bcf));
        EXPECT(0xcb, gbc.readMem(0xd63f));
        EXPECT(0x1e, gbc.readMem(0xd640));
        // CB 1E 0060
        gbc.setState(0x36f2, 0x91e, 0x2310, 0xda1, 0x72a9, 0xf00b, 0x0, 0x1);
        gbc.writeMem(0x36f2, { 0xcb, 0x1e });
        gbc.writeMem(0xf00b, { 0xdb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x91e, gbc.sp());
        EXPECT(0x36f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xf00b));
        // CB 1E 0061
        gbc.setState(0x4ed, 0xac9d, 0x1b70, 0x7e90, 0xaf9b, 0xd502, 0x0, 0x1);
        gbc.writeMem(0x4ed, { 0xcb, 0x1e });
        gbc.writeMem(0xd502, { 0x19 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xac9d, gbc.sp());
        EXPECT(0x4ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd502));
        // CB 1E 0065
        gbc.setState(0x5ed1, 0x27a6, 0xbd0, 0x8dd9, 0xe42e, 0x9bd7, 0x1, 0x1);
        gbc.writeMem(0x5ed1, { 0xcb, 0x1e });
        gbc.writeMem(0x9bd7, { 0xbb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x27a6, gbc.sp());
        EXPECT(0x5ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x9bd7));
        // CB 1E 0068
        gbc.setState(0x5e17, 0xea94, 0x1060, 0xe503, 0xcf80, 0x8e24, 0x0, 0x1);
        gbc.writeMem(0x5e17, { 0xcb, 0x1e });
        gbc.writeMem(0x8e24, { 0xd7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xea94, gbc.sp());
        EXPECT(0x5e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x8e24));
        // CB 1E 006A
        gbc.setState(0xe5d, 0xdcc3, 0xae00, 0x18f9, 0xd389, 0xaef2, 0x0, 0x0);
        gbc.writeMem(0xe5d, { 0xcb, 0x1e });
        gbc.writeMem(0xaef2, { 0xb6 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdcc3, gbc.sp());
        EXPECT(0xe5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xaef2));
        // CB 1E 006B
        gbc.setState(0x56cc, 0xcc45, 0x5610, 0x7629, 0xb3a3, 0xbcc2, 0x0, 0x1);
        gbc.writeMem(0x56cc, { 0xcb, 0x1e });
        gbc.writeMem(0xbcc2, { 0xad });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcc45, gbc.sp());
        EXPECT(0x56ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbcc2));
        // CB 1E 006E
        gbc.setState(0xc1c7, 0x3c0, 0xaca0, 0x3a21, 0x793e, 0xdc62, 0x0, 0x1);
        gbc.writeMem(0xc1c7, { 0xcb, 0x1e });
        gbc.writeMem(0xdc62, { 0x6e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3c0, gbc.sp());
        EXPECT(0xc1c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c7));
        EXPECT(0x1e, gbc.readMem(0xc1c8));
        EXPECT(0x37, gbc.readMem(0xdc62));
        // CB 1E 006F
        gbc.setState(0x690d, 0x52d4, 0xa370, 0xa507, 0xf262, 0xae99, 0x0, 0x0);
        gbc.writeMem(0x690d, { 0xcb, 0x1e });
        gbc.writeMem(0xae99, { 0x2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x52d4, gbc.sp());
        EXPECT(0x690f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xae99));
        // CB 1E 0077
        gbc.setState(0x114c, 0x5bca, 0xb1f0, 0xc9f9, 0x682c, 0xa9b8, 0x1, 0x0);
        gbc.writeMem(0x114c, { 0xcb, 0x1e });
        gbc.writeMem(0xa9b8, { 0xba });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5bca, gbc.sp());
        EXPECT(0x114e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xa9b8));
        // CB 1E 0078
        gbc.setState(0x9cd3, 0x34ee, 0xb20, 0x7af1, 0x8885, 0xd19c, 0x1, 0x1);
        gbc.writeMem(0x9cd3, { 0xcb, 0x1e });
        gbc.writeMem(0xd19c, { 0xbe });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x34ee, gbc.sp());
        EXPECT(0x9cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd3));
        EXPECT(0x1e, gbc.readMem(0x9cd4));
        EXPECT(0x5f, gbc.readMem(0xd19c));
        // CB 1E 0079
        gbc.setState(0xeff8, 0x36e4, 0x520, 0xbccb, 0x3053, 0xeca5, 0x0, 0x0);
        gbc.writeMem(0xeca5, { 0x8d });
        gbc.writeMem(0xeff8, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x36e4, gbc.sp());
        EXPECT(0xeffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xeca5));
        EXPECT(0xcb, gbc.readMem(0xeff8));
        EXPECT(0x1e, gbc.readMem(0xeff9));
        // CB 1E 007A
        gbc.setState(0x5bcf, 0xd2e1, 0xf820, 0xe64f, 0x23ad, 0xfdc7, 0x1, 0x1);
        gbc.writeMem(0x5bcf, { 0xcb, 0x1e });
        gbc.writeMem(0xfdc7, { 0xf5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd2e1, gbc.sp());
        EXPECT(0x5bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xfdc7));
        // CB 1E 007D
        gbc.setState(0xa904, 0x66b2, 0xbd60, 0x198e, 0x9095, 0x8668, 0x1, 0x1);
        gbc.writeMem(0x8668, { 0x4 });
        gbc.writeMem(0xa904, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x66b2, gbc.sp());
        EXPECT(0xa906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x8668));
        EXPECT(0xcb, gbc.readMem(0xa904));
        EXPECT(0x1e, gbc.readMem(0xa905));
        // CB 1E 007E
        gbc.setState(0xd1b8, 0x4cc9, 0x2920, 0x89e8, 0x77b9, 0xa56a, 0x1, 0x1);
        gbc.writeMem(0xa56a, { 0x98 });
        gbc.writeMem(0xd1b8, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4cc9, gbc.sp());
        EXPECT(0xd1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa56a));
        EXPECT(0xcb, gbc.readMem(0xd1b8));
        EXPECT(0x1e, gbc.readMem(0xd1b9));
        // CB 1E 0083
        gbc.setState(0x16c8, 0xf018, 0xbbe0, 0xdfb, 0xd028, 0x8f22, 0x0, 0x1);
        gbc.writeMem(0x16c8, { 0xcb, 0x1e });
        gbc.writeMem(0x8f22, { 0x94 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf018, gbc.sp());
        EXPECT(0x16ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x8f22));
        // CB 1E 0084
        gbc.setState(0x5f3e, 0xe503, 0x8ef0, 0xc50f, 0x30e, 0xf2f0, 0x0, 0x0);
        gbc.writeMem(0x5f3e, { 0xcb, 0x1e });
        gbc.writeMem(0xf2f0, { 0x52 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe503, gbc.sp());
        EXPECT(0x5f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xf2f0));
        // CB 1E 0085
        gbc.setState(0x906f, 0x36d3, 0xf6b0, 0xaf8d, 0x60f1, 0xbef2, 0x1, 0x1);
        gbc.writeMem(0x906f, { 0xcb, 0x1e });
        gbc.writeMem(0xbef2, { 0x78 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x36d3, gbc.sp());
        EXPECT(0x9071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x906f));
        EXPECT(0x1e, gbc.readMem(0x9070));
        EXPECT(0xbc, gbc.readMem(0xbef2));
        // CB 1E 0086
        gbc.setState(0x6e4a, 0x8503, 0x680, 0x87ae, 0xf2e9, 0x8f16, 0x1, 0x0);
        gbc.writeMem(0x6e4a, { 0xcb, 0x1e });
        gbc.writeMem(0x8f16, { 0x6b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8503, gbc.sp());
        EXPECT(0x6e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8f16));
        // CB 1E 0088
        gbc.setState(0xd03, 0x9a90, 0x7d40, 0x1a28, 0x78cc, 0x9b45, 0x1, 0x0);
        gbc.writeMem(0xd03, { 0xcb, 0x1e });
        gbc.writeMem(0x9b45, { 0xc7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9a90, gbc.sp());
        EXPECT(0xd05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x9b45));
        // CB 1E 0089
        gbc.setState(0x237f, 0x6fe1, 0xf990, 0x3121, 0x2241, 0xe026, 0x0, 0x1);
        gbc.writeMem(0x237f, { 0xcb, 0x1e });
        gbc.writeMem(0xe026, { 0xed });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6fe1, gbc.sp());
        EXPECT(0x2381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xe026));
        // CB 1E 008A
        gbc.setState(0xefbe, 0x5915, 0xadb0, 0xaa30, 0xe3b9, 0xbe29, 0x1, 0x1);
        gbc.writeMem(0xbe29, { 0x77 });
        gbc.writeMem(0xefbe, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5915, gbc.sp());
        EXPECT(0xefc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbe29));
        EXPECT(0xcb, gbc.readMem(0xefbe));
        EXPECT(0x1e, gbc.readMem(0xefbf));
        // CB 1E 0091
        gbc.setState(0x4c9d, 0x93c3, 0x3f30, 0x5ad6, 0xb16f, 0xb439, 0x1, 0x1);
        gbc.writeMem(0x4c9d, { 0xcb, 0x1e });
        gbc.writeMem(0xb439, { 0xc5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x93c3, gbc.sp());
        EXPECT(0x4c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb439));
        // CB 1E 0094
        gbc.setState(0xa866, 0x8f43, 0x9b10, 0xdac6, 0x6a93, 0x9582, 0x0, 0x1);
        gbc.writeMem(0x9582, { 0x98 });
        gbc.writeMem(0xa866, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8f43, gbc.sp());
        EXPECT(0xa868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x9582));
        EXPECT(0xcb, gbc.readMem(0xa866));
        EXPECT(0x1e, gbc.readMem(0xa867));
        // CB 1E 0095
        gbc.setState(0x3588, 0xb0d3, 0x2fc0, 0xe47e, 0xd533, 0x7cb4, 0x0, 0x1);
        gbc.writeMem(0x3588, { 0xcb, 0x1e });
        gbc.writeMem(0x7cb4, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb0d3, gbc.sp());
        EXPECT(0x358a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1E 0097
        gbc.setState(0x984a, 0x2889, 0xc600, 0xb440, 0x725c, 0xb36f, 0x1, 0x1);
        gbc.writeMem(0x984a, { 0xcb, 0x1e });
        gbc.writeMem(0xb36f, { 0xb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2889, gbc.sp());
        EXPECT(0x984c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984a));
        EXPECT(0x1e, gbc.readMem(0x984b));
        EXPECT(0x5, gbc.readMem(0xb36f));
        // CB 1E 009B
        gbc.setState(0xdfc9, 0x7cbe, 0xbf70, 0x1064, 0x56fd, 0xf518, 0x1, 0x0);
        gbc.writeMem(0xdfc9, { 0xcb, 0x1e });
        gbc.writeMem(0xf518, { 0xc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7cbe, gbc.sp());
        EXPECT(0xdfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc9));
        EXPECT(0x1e, gbc.readMem(0xdfca));
        EXPECT(0x86, gbc.readMem(0xf518));
        // CB 1E 009D
        gbc.setState(0x226, 0x1b42, 0xa90, 0x53e7, 0xeada, 0xae1c, 0x0, 0x0);
        gbc.writeMem(0x226, { 0xcb, 0x1e });
        gbc.writeMem(0xae1c, { 0x5f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1b42, gbc.sp());
        EXPECT(0x228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xae1c));
        // CB 1E 00A2
        gbc.setState(0x6069, 0x874, 0xb340, 0x2ea7, 0x1aa5, 0x910f, 0x1, 0x0);
        gbc.writeMem(0x6069, { 0xcb, 0x1e });
        gbc.writeMem(0x910f, { 0x99 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x874, gbc.sp());
        EXPECT(0x606b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x910f));
        // CB 1E 00A3
        gbc.setState(0x9966, 0x6e71, 0x1960, 0xdeb4, 0x78ab, 0xe493, 0x0, 0x0);
        gbc.writeMem(0x9966, { 0xcb, 0x1e });
        gbc.writeMem(0xe493, { 0x3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6e71, gbc.sp());
        EXPECT(0x9968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9966));
        EXPECT(0x1e, gbc.readMem(0x9967));
        EXPECT(0x1, gbc.readMem(0xe493));
        // CB 1E 00A4
        gbc.setState(0xa4e7, 0x73e, 0x5510, 0x69e2, 0x8504, 0x9790, 0x0, 0x0);
        gbc.writeMem(0x9790, { 0x29 });
        gbc.writeMem(0xa4e7, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x73e, gbc.sp());
        EXPECT(0xa4e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9790));
        EXPECT(0xcb, gbc.readMem(0xa4e7));
        EXPECT(0x1e, gbc.readMem(0xa4e8));
        // CB 1E 00A6
        gbc.setState(0x8789, 0x1aae, 0x3100, 0xebfb, 0x6b85, 0xcd48, 0x1, 0x0);
        gbc.writeMem(0x8789, { 0xcb, 0x1e });
        gbc.writeMem(0xcd48, { 0xb1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1aae, gbc.sp());
        EXPECT(0x878b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8789));
        EXPECT(0x1e, gbc.readMem(0x878a));
        EXPECT(0x58, gbc.readMem(0xcd48));
        // CB 1E 00A7
        gbc.setState(0x9a26, 0x8e11, 0x2260, 0xe777, 0xb2ae, 0xcfd2, 0x0, 0x0);
        gbc.writeMem(0x9a26, { 0xcb, 0x1e });
        gbc.writeMem(0xcfd2, { 0x9b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8e11, gbc.sp());
        EXPECT(0x9a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a26));
        EXPECT(0x1e, gbc.readMem(0x9a27));
        EXPECT(0x4d, gbc.readMem(0xcfd2));
        // CB 1E 00A8
        gbc.setState(0x8414, 0x9ce1, 0x5ac0, 0x336c, 0x7d42, 0x8f9d, 0x0, 0x0);
        gbc.writeMem(0x8414, { 0xcb, 0x1e });
        gbc.writeMem(0x8f9d, { 0x86 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9ce1, gbc.sp());
        EXPECT(0x8416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8414));
        EXPECT(0x1e, gbc.readMem(0x8415));
        EXPECT(0x43, gbc.readMem(0x8f9d));
        // CB 1E 00AA
        gbc.setState(0xe6db, 0xe014, 0xdac0, 0xb608, 0x9cb6, 0xbc76, 0x1, 0x0);
        gbc.writeMem(0xbc76, { 0x10 });
        gbc.writeMem(0xe6db, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe014, gbc.sp());
        EXPECT(0xe6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xbc76));
        EXPECT(0xcb, gbc.readMem(0xe6db));
        EXPECT(0x1e, gbc.readMem(0xe6dc));
        // CB 1E 00AB
        gbc.setState(0x3219, 0x7877, 0xf3d0, 0x802c, 0x8200, 0xefd0, 0x1, 0x0);
        gbc.writeMem(0x3219, { 0xcb, 0x1e });
        gbc.writeMem(0xefd0, { 0x9d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7877, gbc.sp());
        EXPECT(0x321b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xefd0));
        // CB 1E 00AC
        gbc.setState(0x34fe, 0xc8c8, 0x4ed0, 0x46a3, 0x4525, 0xc233, 0x1, 0x0);
        gbc.writeMem(0x34fe, { 0xcb, 0x1e });
        gbc.writeMem(0xc233, { 0x7f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc8c8, gbc.sp());
        EXPECT(0x3500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc233));
        // CB 1E 00AD
        gbc.setState(0x5a07, 0xdbb3, 0x3dc0, 0x9925, 0x6556, 0xbeb7, 0x1, 0x1);
        gbc.writeMem(0x5a07, { 0xcb, 0x1e });
        gbc.writeMem(0xbeb7, { 0xd5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdbb3, gbc.sp());
        EXPECT(0x5a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbeb7));
        // CB 1E 00AE
        gbc.setState(0x4fa, 0xd247, 0x27d0, 0xa013, 0xe2d1, 0xeedb, 0x1, 0x1);
        gbc.writeMem(0x4fa, { 0xcb, 0x1e });
        gbc.writeMem(0xeedb, { 0x3b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd247, gbc.sp());
        EXPECT(0x4fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xeedb));
        // CB 1E 00B0
        gbc.setState(0xca2d, 0x16ba, 0xe640, 0xbcce, 0x41a6, 0x109f, 0x0, 0x1);
        gbc.writeMem(0x109f, { 0x0 });
        gbc.writeMem(0xca2d, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x16ba, gbc.sp());
        EXPECT(0xca2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2d));
        EXPECT(0x1e, gbc.readMem(0xca2e));
        // CB 1E 00B1
        gbc.setState(0x94e1, 0x674f, 0xf5d0, 0x1fa6, 0x4dc6, 0xa844, 0x1, 0x1);
        gbc.writeMem(0x94e1, { 0xcb, 0x1e });
        gbc.writeMem(0xa844, { 0x7c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x674f, gbc.sp());
        EXPECT(0x94e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e1));
        EXPECT(0x1e, gbc.readMem(0x94e2));
        EXPECT(0xbe, gbc.readMem(0xa844));
        // CB 1E 00B3
        gbc.setState(0x56, 0x2efa, 0x9a50, 0x6ffe, 0xd1a4, 0xc0a8, 0x1, 0x0);
        gbc.writeMem(0x56, { 0xcb, 0x1e });
        gbc.writeMem(0xc0a8, { 0x78 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2efa, gbc.sp());
        EXPECT(0x58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc0a8));
        // CB 1E 00B7
        gbc.setState(0x566e, 0x6180, 0x4c50, 0xae49, 0xcec2, 0xbace, 0x0, 0x0);
        gbc.writeMem(0x566e, { 0xcb, 0x1e });
        gbc.writeMem(0xbace, { 0xa4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6180, gbc.sp());
        EXPECT(0x5670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xbace));
        // CB 1E 00BA
        gbc.setState(0xebfa, 0xc1f9, 0x2ca0, 0x8df3, 0xa754, 0x843b, 0x0, 0x1);
        gbc.writeMem(0x843b, { 0xe8 });
        gbc.writeMem(0xebfa, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc1f9, gbc.sp());
        EXPECT(0xebfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x843b));
        EXPECT(0xcb, gbc.readMem(0xebfa));
        EXPECT(0x1e, gbc.readMem(0xebfb));
        // CB 1E 00BC
        gbc.setState(0x1414, 0xf2d2, 0x6350, 0x3917, 0x1909, 0xaafb, 0x0, 0x0);
        gbc.writeMem(0x1414, { 0xcb, 0x1e });
        gbc.writeMem(0xaafb, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf2d2, gbc.sp());
        EXPECT(0x1416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xaafb));
        // CB 1E 00BF
        gbc.setState(0x1b38, 0x4d32, 0xd580, 0xe096, 0xa99d, 0x847d, 0x0, 0x0);
        gbc.writeMem(0x1b38, { 0xcb, 0x1e });
        gbc.writeMem(0x847d, { 0x32 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4d32, gbc.sp());
        EXPECT(0x1b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x847d));
        // CB 1E 00C0
        gbc.setState(0x551b, 0xd0a8, 0x2cd0, 0xdac1, 0x5e0b, 0xf740, 0x1, 0x1);
        gbc.writeMem(0x551b, { 0xcb, 0x1e });
        gbc.writeMem(0xf740, { 0x53 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd0a8, gbc.sp());
        EXPECT(0x551d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xf740));
        // CB 1E 00C1
        gbc.setState(0x56ba, 0xca69, 0x5990, 0xb59f, 0x57f4, 0xc1b1, 0x0, 0x1);
        gbc.writeMem(0x56ba, { 0xcb, 0x1e });
        gbc.writeMem(0xc1b1, { 0xdc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xca69, gbc.sp());
        EXPECT(0x56bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xc1b1));
        // CB 1E 00C3
        gbc.setState(0x1b9b, 0x7c4, 0x3b50, 0x718c, 0x1174, 0x8621, 0x0, 0x1);
        gbc.writeMem(0x1b9b, { 0xcb, 0x1e });
        gbc.writeMem(0x8621, { 0xb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7c4, gbc.sp());
        EXPECT(0x1b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8621));
        // CB 1E 00C4
        gbc.setState(0x68ab, 0x8fce, 0xee90, 0x3377, 0x5124, 0xbb17, 0x1, 0x1);
        gbc.writeMem(0x68ab, { 0xcb, 0x1e });
        gbc.writeMem(0xbb17, { 0xe4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8fce, gbc.sp());
        EXPECT(0x68ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xbb17));
        // CB 1E 00C5
        gbc.setState(0x4708, 0x1a2d, 0xbd30, 0x8a4, 0xd680, 0xb794, 0x0, 0x0);
        gbc.writeMem(0x4708, { 0xcb, 0x1e });
        gbc.writeMem(0xb794, { 0x5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1a2d, gbc.sp());
        EXPECT(0x470a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb794));
        // CB 1E 00C6
        gbc.setState(0x9d94, 0x5661, 0x3c0, 0x1b90, 0x9c4c, 0x8ce1, 0x1, 0x1);
        gbc.writeMem(0x8ce1, { 0xa9 });
        gbc.writeMem(0x9d94, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5661, gbc.sp());
        EXPECT(0x9d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x8ce1));
        EXPECT(0xcb, gbc.readMem(0x9d94));
        EXPECT(0x1e, gbc.readMem(0x9d95));
        // CB 1E 00C7
        gbc.setState(0x152, 0x5464, 0x34d0, 0x524f, 0x1e04, 0x8ce8, 0x0, 0x0);
        gbc.writeMem(0x152, { 0xcb, 0x1e });
        gbc.writeMem(0x8ce8, { 0xff });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5464, gbc.sp());
        EXPECT(0x154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8ce8));
        // CB 1E 00C8
        gbc.setState(0x62c7, 0x2f0d, 0x400, 0x3282, 0x72a5, 0xb742, 0x0, 0x0);
        gbc.writeMem(0x62c7, { 0xcb, 0x1e });
        gbc.writeMem(0xb742, { 0xcc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2f0d, gbc.sp());
        EXPECT(0x62c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb742));
        // CB 1E 00CA
        gbc.setState(0xc, 0x1a5f, 0x7830, 0x346d, 0x5f88, 0xcc95, 0x1, 0x1);
        gbc.writeMem(0xc, { 0xcb, 0x1e });
        gbc.writeMem(0xcc95, { 0xc6 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1a5f, gbc.sp());
        EXPECT(0xe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xcc95));
        // CB 1E 00CC
        gbc.setState(0x954a, 0xa7e4, 0xb690, 0x80, 0x35f6, 0xd67f, 0x0, 0x1);
        gbc.writeMem(0x954a, { 0xcb, 0x1e });
        gbc.writeMem(0xd67f, { 0xdc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa7e4, gbc.sp());
        EXPECT(0x954c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x954a));
        EXPECT(0x1e, gbc.readMem(0x954b));
        EXPECT(0xee, gbc.readMem(0xd67f));
        // CB 1E 00D2
        gbc.setState(0x92aa, 0x67fa, 0xd0c0, 0x941b, 0x6154, 0xcd4a, 0x1, 0x1);
        gbc.writeMem(0x92aa, { 0xcb, 0x1e });
        gbc.writeMem(0xcd4a, { 0x83 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x67fa, gbc.sp());
        EXPECT(0x92ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92aa));
        EXPECT(0x1e, gbc.readMem(0x92ab));
        EXPECT(0x41, gbc.readMem(0xcd4a));
        // CB 1E 00D3
        gbc.setState(0x2c87, 0x5b47, 0x3410, 0xc3bb, 0x22ae, 0xadb5, 0x1, 0x0);
        gbc.writeMem(0x2c87, { 0xcb, 0x1e });
        gbc.writeMem(0xadb5, { 0xdb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5b47, gbc.sp());
        EXPECT(0x2c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xadb5));
        // CB 1E 00D5
        gbc.setState(0xaf8b, 0xa47b, 0x7230, 0xc242, 0xf213, 0x8b8e, 0x1, 0x1);
        gbc.writeMem(0x8b8e, { 0xe });
        gbc.writeMem(0xaf8b, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa47b, gbc.sp());
        EXPECT(0xaf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8b8e));
        EXPECT(0xcb, gbc.readMem(0xaf8b));
        EXPECT(0x1e, gbc.readMem(0xaf8c));
        // CB 1E 00D8
        gbc.setState(0x753e, 0xb2b6, 0xcd00, 0x3841, 0x41ee, 0xbc74, 0x0, 0x1);
        gbc.writeMem(0x753e, { 0xcb, 0x1e });
        gbc.writeMem(0xbc74, { 0x9d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb2b6, gbc.sp());
        EXPECT(0x7540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbc74));
        // CB 1E 00D9
        gbc.setState(0xb398, 0xf7a4, 0x4ba0, 0x89f, 0x5122, 0xdfa6, 0x1, 0x0);
        gbc.writeMem(0xb398, { 0xcb, 0x1e });
        gbc.writeMem(0xdfa6, { 0xb7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf7a4, gbc.sp());
        EXPECT(0xb39a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb398));
        EXPECT(0x1e, gbc.readMem(0xb399));
        EXPECT(0x5b, gbc.readMem(0xdfa6));
        // CB 1E 00DB
        gbc.setState(0x99b8, 0x7c30, 0xc840, 0x8c1e, 0x5b8c, 0x9b49, 0x1, 0x0);
        gbc.writeMem(0x99b8, { 0xcb, 0x1e });
        gbc.writeMem(0x9b49, { 0xaf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7c30, gbc.sp());
        EXPECT(0x99ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b8));
        EXPECT(0x1e, gbc.readMem(0x99b9));
        EXPECT(0x57, gbc.readMem(0x9b49));
        // CB 1E 00DC
        gbc.setState(0x8d73, 0x5130, 0x590, 0xd527, 0xa9f3, 0x988e, 0x0, 0x0);
        gbc.writeMem(0x8d73, { 0xcb, 0x1e });
        gbc.writeMem(0x988e, { 0x3d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5130, gbc.sp());
        EXPECT(0x8d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d73));
        EXPECT(0x1e, gbc.readMem(0x8d74));
        EXPECT(0x9e, gbc.readMem(0x988e));
        // CB 1E 00DD
        gbc.setState(0xb558, 0xa638, 0xc400, 0x45ff, 0x3941, 0xb0ea, 0x0, 0x0);
        gbc.writeMem(0xb0ea, { 0xee });
        gbc.writeMem(0xb558, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa638, gbc.sp());
        EXPECT(0xb55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb0ea));
        EXPECT(0xcb, gbc.readMem(0xb558));
        EXPECT(0x1e, gbc.readMem(0xb559));
        // CB 1E 00DE
        gbc.setState(0x76e8, 0x84dc, 0x4200, 0xea11, 0x1550, 0xb846, 0x1, 0x0);
        gbc.writeMem(0x76e8, { 0xcb, 0x1e });
        gbc.writeMem(0xb846, { 0xa9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x84dc, gbc.sp());
        EXPECT(0x76ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xb846));
        // CB 1E 00E0
        gbc.setState(0x5f6c, 0x56ff, 0x1c30, 0x786e, 0x1d0f, 0xa980, 0x1, 0x1);
        gbc.writeMem(0x5f6c, { 0xcb, 0x1e });
        gbc.writeMem(0xa980, { 0xdf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x56ff, gbc.sp());
        EXPECT(0x5f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xa980));
        // CB 1E 00E2
        gbc.setState(0x1615, 0xa6a5, 0x51f0, 0x8d33, 0x5a10, 0xa88e, 0x0, 0x1);
        gbc.writeMem(0x1615, { 0xcb, 0x1e });
        gbc.writeMem(0xa88e, { 0x46 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa6a5, gbc.sp());
        EXPECT(0x1617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa88e));
        // CB 1E 00E3
        gbc.setState(0x3d1c, 0x2fc3, 0xd490, 0xc824, 0x7c12, 0x858c, 0x0, 0x1);
        gbc.writeMem(0x3d1c, { 0xcb, 0x1e });
        gbc.writeMem(0x858c, { 0x1b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2fc3, gbc.sp());
        EXPECT(0x3d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x858c));
        // CB 1E 00E8
        gbc.setState(0x3ecf, 0x81e0, 0x2b70, 0x2d9e, 0x196f, 0xad75, 0x0, 0x1);
        gbc.writeMem(0x3ecf, { 0xcb, 0x1e });
        gbc.writeMem(0xad75, { 0xb8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x81e0, gbc.sp());
        EXPECT(0x3ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xad75));
        // CB 1E 00E9
        gbc.setState(0x8dba, 0xaf41, 0x9b30, 0xbf90, 0xf031, 0x96fc, 0x1, 0x0);
        gbc.writeMem(0x8dba, { 0xcb, 0x1e });
        gbc.writeMem(0x96fc, { 0xd1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xaf41, gbc.sp());
        EXPECT(0x8dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dba));
        EXPECT(0x1e, gbc.readMem(0x8dbb));
        EXPECT(0xe8, gbc.readMem(0x96fc));
        // CB 1E 00EA
        gbc.setState(0x5199, 0x98c2, 0x8460, 0xf172, 0xbe3a, 0xee1e, 0x0, 0x0);
        gbc.writeMem(0x5199, { 0xcb, 0x1e });
        gbc.writeMem(0xee1e, { 0xa9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x98c2, gbc.sp());
        EXPECT(0x519b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xee1e));
        // CB 1E 00ED
        gbc.setState(0x325a, 0x1693, 0x67e0, 0x1d8, 0x3292, 0x9194, 0x0, 0x0);
        gbc.writeMem(0x325a, { 0xcb, 0x1e });
        gbc.writeMem(0x9194, { 0xbf });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1693, gbc.sp());
        EXPECT(0x325c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x9194));
        // CB 1E 00EE
        gbc.setState(0x84b8, 0x9daf, 0xf110, 0x3201, 0xc8af, 0xaf1a, 0x1, 0x0);
        gbc.writeMem(0x84b8, { 0xcb, 0x1e });
        gbc.writeMem(0xaf1a, { 0x65 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9daf, gbc.sp());
        EXPECT(0x84ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b8));
        EXPECT(0x1e, gbc.readMem(0x84b9));
        EXPECT(0xb2, gbc.readMem(0xaf1a));
        // CB 1E 00F2
        gbc.setState(0x1aba, 0xdfa6, 0x9690, 0xf6c7, 0x6684, 0xdb0d, 0x0, 0x0);
        gbc.writeMem(0x1aba, { 0xcb, 0x1e });
        gbc.writeMem(0xdb0d, { 0x8a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdfa6, gbc.sp());
        EXPECT(0x1abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xdb0d));
        // CB 1E 00F4
        gbc.setState(0xde2b, 0xef1b, 0x4f30, 0x8656, 0xc608, 0xe2be, 0x1, 0x1);
        gbc.writeMem(0xde2b, { 0xcb, 0x1e });
        gbc.writeMem(0xe2be, { 0x5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xef1b, gbc.sp());
        EXPECT(0xde2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde2b));
        EXPECT(0x1e, gbc.readMem(0xde2c));
        EXPECT(0x82, gbc.readMem(0xe2be));
        // CB 1E 00F5
        gbc.setState(0xaa2a, 0x6b2c, 0x2c50, 0x2fbf, 0xa518, 0xda40, 0x1, 0x1);
        gbc.writeMem(0xaa2a, { 0xcb, 0x1e });
        gbc.writeMem(0xda40, { 0x85 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6b2c, gbc.sp());
        EXPECT(0xaa2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2a));
        EXPECT(0x1e, gbc.readMem(0xaa2b));
        EXPECT(0xc2, gbc.readMem(0xda40));
        // CB 1E 00F6
        gbc.setState(0x3b38, 0x6588, 0x3cc0, 0xa7d5, 0x97d0, 0xab47, 0x0, 0x1);
        gbc.writeMem(0x3b38, { 0xcb, 0x1e });
        gbc.writeMem(0xab47, { 0x5a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6588, gbc.sp());
        EXPECT(0x3b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xab47));
        // CB 1E 00F8
        gbc.setState(0x1bde, 0xd959, 0xa3f0, 0x6f75, 0x3ba4, 0xf698, 0x0, 0x0);
        gbc.writeMem(0x1bde, { 0xcb, 0x1e });
        gbc.writeMem(0xf698, { 0xa0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd959, gbc.sp());
        EXPECT(0x1be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xf698));
        // CB 1E 00FB
        gbc.setState(0x5b4d, 0x8204, 0x7e0, 0xb5dc, 0x25d2, 0x86d4, 0x0, 0x0);
        gbc.writeMem(0x5b4d, { 0xcb, 0x1e });
        gbc.writeMem(0x86d4, { 0x78 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8204, gbc.sp());
        EXPECT(0x5b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x86d4));
        // CB 1E 00FD
        gbc.setState(0x79f6, 0xd0e7, 0xe6d0, 0x5bd2, 0x7a34, 0xea22, 0x0, 0x1);
        gbc.writeMem(0x79f6, { 0xcb, 0x1e });
        gbc.writeMem(0xea22, { 0xb1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd0e7, gbc.sp());
        EXPECT(0x79f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xea22));
        // CB 1E 00FE
        gbc.setState(0x29c6, 0x13f1, 0x3a30, 0x22b9, 0x1e96, 0x91fd, 0x0, 0x1);
        gbc.writeMem(0x29c6, { 0xcb, 0x1e });
        gbc.writeMem(0x91fd, { 0x9f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x13f1, gbc.sp());
        EXPECT(0x29c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x91fd));
        // CB 1E 00FF
        gbc.setState(0x93, 0x93fe, 0x1950, 0x32a5, 0x1733, 0xb87e, 0x0, 0x0);
        gbc.writeMem(0x93, { 0xcb, 0x1e });
        gbc.writeMem(0xb87e, { 0xd5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x93fe, gbc.sp());
        EXPECT(0x95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xb87e));
        // CB 1E 0101
        gbc.setState(0x44bc, 0xdb3b, 0xdc10, 0xc33d, 0x32db, 0x8e71, 0x1, 0x0);
        gbc.writeMem(0x44bc, { 0xcb, 0x1e });
        gbc.writeMem(0x8e71, { 0xcd });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdb3b, gbc.sp());
        EXPECT(0x44be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8e71));
        // CB 1E 0102
        gbc.setState(0x73a8, 0x8a22, 0xc620, 0x2db5, 0xaf4a, 0xa640, 0x1, 0x1);
        gbc.writeMem(0x73a8, { 0xcb, 0x1e });
        gbc.writeMem(0xa640, { 0x5d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8a22, gbc.sp());
        EXPECT(0x73aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa640));
        // CB 1E 0104
        gbc.setState(0x751, 0xfb2d, 0x53e0, 0x1ece, 0x3a9d, 0xb215, 0x0, 0x0);
        gbc.writeMem(0x751, { 0xcb, 0x1e });
        gbc.writeMem(0xb215, { 0x9b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfb2d, gbc.sp());
        EXPECT(0x753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb215));
        // CB 1E 0106
        gbc.setState(0xcf98, 0x3405, 0x94c0, 0x6156, 0xcc0e, 0xb5b2, 0x1, 0x0);
        gbc.writeMem(0xb5b2, { 0x7d });
        gbc.writeMem(0xcf98, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3405, gbc.sp());
        EXPECT(0xcf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb5b2));
        EXPECT(0xcb, gbc.readMem(0xcf98));
        EXPECT(0x1e, gbc.readMem(0xcf99));
        // CB 1E 0108
        gbc.setState(0x81d7, 0xa05a, 0x6130, 0xf5ad, 0x4109, 0xed0c, 0x0, 0x0);
        gbc.writeMem(0x81d7, { 0xcb, 0x1e });
        gbc.writeMem(0xed0c, { 0x83 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa05a, gbc.sp());
        EXPECT(0x81d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d7));
        EXPECT(0x1e, gbc.readMem(0x81d8));
        EXPECT(0xc1, gbc.readMem(0xed0c));
        // CB 1E 010E
        gbc.setState(0xc894, 0xf4b9, 0x4ab0, 0xe8a3, 0xce, 0xb2a7, 0x0, 0x0);
        gbc.writeMem(0xb2a7, { 0x3 });
        gbc.writeMem(0xc894, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf4b9, gbc.sp());
        EXPECT(0xc896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb2a7));
        EXPECT(0xcb, gbc.readMem(0xc894));
        EXPECT(0x1e, gbc.readMem(0xc895));
        // CB 1E 0112
        gbc.setState(0x2c49, 0xdcc7, 0xc80, 0x57cf, 0x4ea6, 0xa1d0, 0x0, 0x1);
        gbc.writeMem(0x2c49, { 0xcb, 0x1e });
        gbc.writeMem(0xa1d0, { 0xeb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdcc7, gbc.sp());
        EXPECT(0x2c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa1d0));
        // CB 1E 0113
        gbc.setState(0xe151, 0xcb68, 0x82f0, 0x8ea3, 0x6634, 0x81e6, 0x1, 0x0);
        gbc.writeMem(0x81e6, { 0x1 });
        gbc.writeMem(0xe151, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcb68, gbc.sp());
        EXPECT(0xe153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x81e6));
        EXPECT(0xcb, gbc.readMem(0xe151));
        EXPECT(0x1e, gbc.readMem(0xe152));
        // CB 1E 0114
        gbc.setState(0x20a9, 0x6dce, 0x9ff0, 0x71f2, 0x9a50, 0x9618, 0x0, 0x0);
        gbc.writeMem(0x20a9, { 0xcb, 0x1e });
        gbc.writeMem(0x9618, { 0x73 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6dce, gbc.sp());
        EXPECT(0x20ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9618));
        // CB 1E 011E
        gbc.setState(0xc8a6, 0x827e, 0x1980, 0x5300, 0x2e06, 0xe2c0, 0x1, 0x1);
        gbc.writeMem(0xc8a6, { 0xcb, 0x1e });
        gbc.writeMem(0xe2c0, { 0x31 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x827e, gbc.sp());
        EXPECT(0xc8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a6));
        EXPECT(0x1e, gbc.readMem(0xc8a7));
        EXPECT(0x18, gbc.readMem(0xe2c0));
        // CB 1E 0120
        gbc.setState(0x2176, 0xdac0, 0x3a00, 0x591b, 0xa73b, 0xaf1f, 0x0, 0x0);
        gbc.writeMem(0x2176, { 0xcb, 0x1e });
        gbc.writeMem(0xaf1f, { 0x6a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdac0, gbc.sp());
        EXPECT(0x2178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xaf1f));
        // CB 1E 0122
        gbc.setState(0xbc7, 0x6a4b, 0x3680, 0x2770, 0x1a87, 0xb555, 0x0, 0x1);
        gbc.writeMem(0xbc7, { 0xcb, 0x1e });
        gbc.writeMem(0xb555, { 0x34 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6a4b, gbc.sp());
        EXPECT(0xbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb555));
        // CB 1E 0123
        gbc.setState(0x918c, 0x120, 0x56c0, 0xacc0, 0xf23f, 0xb4c8, 0x0, 0x1);
        gbc.writeMem(0x918c, { 0xcb, 0x1e });
        gbc.writeMem(0xb4c8, { 0xac });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x120, gbc.sp());
        EXPECT(0x918e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x918c));
        EXPECT(0x1e, gbc.readMem(0x918d));
        EXPECT(0x56, gbc.readMem(0xb4c8));
        // CB 1E 0124
        gbc.setState(0xd31a, 0xe5c6, 0x4ab0, 0x4bfd, 0x43e9, 0xa8fb, 0x0, 0x0);
        gbc.writeMem(0xa8fb, { 0x76 });
        gbc.writeMem(0xd31a, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe5c6, gbc.sp());
        EXPECT(0xd31c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa8fb));
        EXPECT(0xcb, gbc.readMem(0xd31a));
        EXPECT(0x1e, gbc.readMem(0xd31b));
        // CB 1E 012B
        gbc.setState(0x1fbf, 0x542, 0x8ec0, 0xcc0b, 0x8c45, 0x916f, 0x0, 0x0);
        gbc.writeMem(0x1fbf, { 0xcb, 0x1e });
        gbc.writeMem(0x916f, { 0x5d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x542, gbc.sp());
        EXPECT(0x1fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x916f));
        // CB 1E 012C
        gbc.setState(0x2638, 0x6aa3, 0x7c80, 0xe33a, 0xc22c, 0xe07d, 0x1, 0x0);
        gbc.writeMem(0x2638, { 0xcb, 0x1e });
        gbc.writeMem(0xe07d, { 0xa });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6aa3, gbc.sp());
        EXPECT(0x263a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe07d));
        // CB 1E 012E
        gbc.setState(0x5296, 0x2355, 0x4740, 0xd2d6, 0x7ec7, 0xb278, 0x0, 0x0);
        gbc.writeMem(0x5296, { 0xcb, 0x1e });
        gbc.writeMem(0xb278, { 0xcc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2355, gbc.sp());
        EXPECT(0x5298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb278));
        // CB 1E 0131
        gbc.setState(0x38f1, 0xcfb0, 0xf430, 0xb324, 0xd56f, 0xd4cf, 0x1, 0x0);
        gbc.writeMem(0x38f1, { 0xcb, 0x1e });
        gbc.writeMem(0xd4cf, { 0xc0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcfb0, gbc.sp());
        EXPECT(0x38f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd4cf));
        // CB 1E 013B
        gbc.setState(0x4dc8, 0x1df6, 0x6ba0, 0x371b, 0x4bf, 0xd830, 0x1, 0x1);
        gbc.writeMem(0x4dc8, { 0xcb, 0x1e });
        gbc.writeMem(0xd830, { 0xfb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1df6, gbc.sp());
        EXPECT(0x4dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd830));
        // CB 1E 013C
        gbc.setState(0x8947, 0x88a, 0x4fc0, 0x3f03, 0xfb8d, 0xce4f, 0x0, 0x1);
        gbc.writeMem(0x8947, { 0xcb, 0x1e });
        gbc.writeMem(0xce4f, { 0xbc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x88a, gbc.sp());
        EXPECT(0x8949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8947));
        EXPECT(0x1e, gbc.readMem(0x8948));
        EXPECT(0x5e, gbc.readMem(0xce4f));
        // CB 1E 013E
        gbc.setState(0x3ca1, 0x99be, 0x8c00, 0xd4d, 0x2a16, 0xa533, 0x0, 0x1);
        gbc.writeMem(0x3ca1, { 0xcb, 0x1e });
        gbc.writeMem(0xa533, { 0xbf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x99be, gbc.sp());
        EXPECT(0x3ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xa533));
        // CB 1E 013F
        gbc.setState(0xe5a1, 0xd8e6, 0xa10, 0xa29c, 0xb99a, 0xd1b7, 0x0, 0x0);
        gbc.writeMem(0xd1b7, { 0x3 });
        gbc.writeMem(0xe5a1, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd8e6, gbc.sp());
        EXPECT(0xe5a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd1b7));
        EXPECT(0xcb, gbc.readMem(0xe5a1));
        EXPECT(0x1e, gbc.readMem(0xe5a2));
        // CB 1E 0141
        gbc.setState(0xb452, 0xba91, 0xd090, 0x799d, 0x50b8, 0x94fa, 0x0, 0x1);
        gbc.writeMem(0x94fa, { 0xeb });
        gbc.writeMem(0xb452, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xba91, gbc.sp());
        EXPECT(0xb454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x94fa));
        EXPECT(0xcb, gbc.readMem(0xb452));
        EXPECT(0x1e, gbc.readMem(0xb453));
        // CB 1E 0142
        gbc.setState(0x8033, 0x78c8, 0x4a50, 0x101a, 0x7035, 0x82f6, 0x1, 0x1);
        gbc.writeMem(0x8033, { 0xcb, 0x1e });
        gbc.writeMem(0x82f6, { 0x9f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x78c8, gbc.sp());
        EXPECT(0x8035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8033));
        EXPECT(0x1e, gbc.readMem(0x8034));
        EXPECT(0xcf, gbc.readMem(0x82f6));
        // CB 1E 0143
        gbc.setState(0x260d, 0x3347, 0x8810, 0x8a82, 0xad0e, 0xc055, 0x0, 0x0);
        gbc.writeMem(0x260d, { 0xcb, 0x1e });
        gbc.writeMem(0xc055, { 0x9f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3347, gbc.sp());
        EXPECT(0x260f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xc055));
        // CB 1E 0145
        gbc.setState(0x4f73, 0xd1a8, 0xf660, 0x837c, 0xc843, 0x478b, 0x1, 0x0);
        gbc.writeMem(0x478b, { 0x0 });
        gbc.writeMem(0x4f73, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd1a8, gbc.sp());
        EXPECT(0x4f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1E 0146
        gbc.setState(0xe61f, 0x1580, 0xb0f0, 0xea64, 0x5d15, 0xc999, 0x1, 0x1);
        gbc.writeMem(0xc999, { 0x6d });
        gbc.writeMem(0xe61f, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1580, gbc.sp());
        EXPECT(0xe621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc999));
        EXPECT(0xcb, gbc.readMem(0xe61f));
        EXPECT(0x1e, gbc.readMem(0xe620));
        // CB 1E 0147
        gbc.setState(0x556a, 0x4f1b, 0x3990, 0x4f6c, 0x3b2c, 0xc458, 0x0, 0x1);
        gbc.writeMem(0x556a, { 0xcb, 0x1e });
        gbc.writeMem(0xc458, { 0x3e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4f1b, gbc.sp());
        EXPECT(0x556c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc458));
        // CB 1E 0148
        gbc.setState(0x8791, 0x3f7a, 0x4850, 0xd0dd, 0xe056, 0xbf31, 0x1, 0x1);
        gbc.writeMem(0x8791, { 0xcb, 0x1e });
        gbc.writeMem(0xbf31, { 0x4f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3f7a, gbc.sp());
        EXPECT(0x8793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8791));
        EXPECT(0x1e, gbc.readMem(0x8792));
        EXPECT(0xa7, gbc.readMem(0xbf31));
        // CB 1E 0149
        gbc.setState(0x108c, 0xc45e, 0xb090, 0x5111, 0x98c2, 0xabb7, 0x1, 0x1);
        gbc.writeMem(0x108c, { 0xcb, 0x1e });
        gbc.writeMem(0xabb7, { 0x79 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc45e, gbc.sp());
        EXPECT(0x108e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xabb7));
        // CB 1E 014B
        gbc.setState(0x8546, 0x6503, 0xfab0, 0xfd52, 0x4949, 0x9b2f, 0x0, 0x1);
        gbc.writeMem(0x8546, { 0xcb, 0x1e });
        gbc.writeMem(0x9b2f, { 0x7b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6503, gbc.sp());
        EXPECT(0x8548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8546));
        EXPECT(0x1e, gbc.readMem(0x8547));
        EXPECT(0xbd, gbc.readMem(0x9b2f));
        // CB 1E 014E
        gbc.setState(0xdb7f, 0xf7a, 0x9df0, 0x9253, 0x5d34, 0x96ef, 0x1, 0x1);
        gbc.writeMem(0x96ef, { 0x3f });
        gbc.writeMem(0xdb7f, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf7a, gbc.sp());
        EXPECT(0xdb81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x96ef));
        EXPECT(0xcb, gbc.readMem(0xdb7f));
        EXPECT(0x1e, gbc.readMem(0xdb80));
        // CB 1E 014F
        gbc.setState(0x3269, 0x1c04, 0x1dc0, 0xba98, 0x6e6f, 0xff0e, 0x1, 0x1);
        gbc.writeMem(0x3269, { 0xcb, 0x1e });
        gbc.writeMem(0xff0e, { 0xa6 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1c04, gbc.sp());
        EXPECT(0x326b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xff0e));
        // CB 1E 0151
        gbc.setState(0x532f, 0x610c, 0x55c0, 0x78de, 0x1f31, 0xb2c8, 0x1, 0x1);
        gbc.writeMem(0x532f, { 0xcb, 0x1e });
        gbc.writeMem(0xb2c8, { 0x7a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x610c, gbc.sp());
        EXPECT(0x5331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xb2c8));
        // CB 1E 015B
        gbc.setState(0x9750, 0x81c5, 0xfce0, 0x48ed, 0xd6e7, 0xed62, 0x1, 0x1);
        gbc.writeMem(0x9750, { 0xcb, 0x1e });
        gbc.writeMem(0xed62, { 0x58 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x81c5, gbc.sp());
        EXPECT(0x9752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9750));
        EXPECT(0x1e, gbc.readMem(0x9751));
        EXPECT(0x2c, gbc.readMem(0xed62));
        // CB 1E 015D
        gbc.setState(0x4618, 0x62fb, 0x2a30, 0x59ea, 0xb3cb, 0xd1f5, 0x1, 0x0);
        gbc.writeMem(0x4618, { 0xcb, 0x1e });
        gbc.writeMem(0xd1f5, { 0x46 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x62fb, gbc.sp());
        EXPECT(0x461a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd1f5));
        // CB 1E 015E
        gbc.setState(0x3144, 0xa1f4, 0x6c40, 0x857, 0x7ded, 0xb3d9, 0x1, 0x0);
        gbc.writeMem(0x3144, { 0xcb, 0x1e });
        gbc.writeMem(0xb3d9, { 0x9b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa1f4, gbc.sp());
        EXPECT(0x3146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb3d9));
        // CB 1E 015F
        gbc.setState(0x8e0d, 0x80df, 0xccf0, 0xc4c3, 0x9803, 0xeca2, 0x0, 0x1);
        gbc.writeMem(0x8e0d, { 0xcb, 0x1e });
        gbc.writeMem(0xeca2, { 0xdd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x80df, gbc.sp());
        EXPECT(0x8e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0d));
        EXPECT(0x1e, gbc.readMem(0x8e0e));
        EXPECT(0xee, gbc.readMem(0xeca2));
        // CB 1E 0163
        gbc.setState(0x9db9, 0xe708, 0x66c0, 0x5f41, 0xea26, 0x8b8d, 0x1, 0x0);
        gbc.writeMem(0x8b8d, { 0x7 });
        gbc.writeMem(0x9db9, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe708, gbc.sp());
        EXPECT(0x9dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8b8d));
        EXPECT(0xcb, gbc.readMem(0x9db9));
        EXPECT(0x1e, gbc.readMem(0x9dba));
        // CB 1E 0167
        gbc.setState(0xcfcc, 0x39c8, 0xbbf0, 0xd487, 0xa926, 0x8690, 0x0, 0x1);
        gbc.writeMem(0x8690, { 0x2b });
        gbc.writeMem(0xcfcc, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x39c8, gbc.sp());
        EXPECT(0xcfce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8690));
        EXPECT(0xcb, gbc.readMem(0xcfcc));
        EXPECT(0x1e, gbc.readMem(0xcfcd));
        // CB 1E 0168
        gbc.setState(0x7fcf, 0xe048, 0xc5d0, 0xf846, 0xf37c, 0xe4ed, 0x1, 0x1);
        gbc.writeMem(0x7fcf, { 0xcb, 0x1e });
        gbc.writeMem(0xe4ed, { 0x38 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe048, gbc.sp());
        EXPECT(0x7fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe4ed));
        // CB 1E 0169
        gbc.setState(0xd9b1, 0xdac0, 0xd4d0, 0x7e59, 0x3c12, 0x818d, 0x0, 0x0);
        gbc.writeMem(0x818d, { 0xf4 });
        gbc.writeMem(0xd9b1, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdac0, gbc.sp());
        EXPECT(0xd9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x818d));
        EXPECT(0xcb, gbc.readMem(0xd9b1));
        EXPECT(0x1e, gbc.readMem(0xd9b2));
        // CB 1E 016B
        gbc.setState(0xcaa, 0xb01e, 0x9e00, 0xc264, 0xe0fb, 0xda07, 0x1, 0x0);
        gbc.writeMem(0xcaa, { 0xcb, 0x1e });
        gbc.writeMem(0xda07, { 0x49 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb01e, gbc.sp());
        EXPECT(0xcac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xda07));
        // CB 1E 016C
        gbc.setState(0x9793, 0xac59, 0x4ca0, 0xc361, 0x15ad, 0x812a, 0x1, 0x1);
        gbc.writeMem(0x812a, { 0x55 });
        gbc.writeMem(0x9793, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xac59, gbc.sp());
        EXPECT(0x9795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x812a));
        EXPECT(0xcb, gbc.readMem(0x9793));
        EXPECT(0x1e, gbc.readMem(0x9794));
        // CB 1E 016E
        gbc.setState(0xa951, 0xaa35, 0x2380, 0x2a8d, 0xf0e7, 0xea59, 0x1, 0x1);
        gbc.writeMem(0xa951, { 0xcb, 0x1e });
        gbc.writeMem(0xea59, { 0xe7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xaa35, gbc.sp());
        EXPECT(0xa953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa951));
        EXPECT(0x1e, gbc.readMem(0xa952));
        EXPECT(0x73, gbc.readMem(0xea59));
        // CB 1E 0170
        gbc.setState(0xe8f1, 0x6e79, 0x4b60, 0xeb5c, 0x6926, 0xfdba, 0x1, 0x0);
        gbc.writeMem(0xe8f1, { 0xcb, 0x1e });
        gbc.writeMem(0xfdba, { 0x8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6e79, gbc.sp());
        EXPECT(0xe8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f1));
        EXPECT(0x1e, gbc.readMem(0xe8f2));
        EXPECT(0x4, gbc.readMem(0xfdba));
        // CB 1E 0173
        gbc.setState(0x44c, 0xbd86, 0xb8a0, 0x5ae7, 0xb8c4, 0xbf86, 0x0, 0x0);
        gbc.writeMem(0x44c, { 0xcb, 0x1e });
        gbc.writeMem(0xbf86, { 0xeb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbd86, gbc.sp());
        EXPECT(0x44e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xbf86));
        // CB 1E 0174
        gbc.setState(0x16fe, 0xaa8a, 0x9ff0, 0xb5a8, 0x21cb, 0x9a5c, 0x0, 0x1);
        gbc.writeMem(0x16fe, { 0xcb, 0x1e });
        gbc.writeMem(0x9a5c, { 0xd4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xaa8a, gbc.sp());
        EXPECT(0x1700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x9a5c));
        // CB 1E 0175
        gbc.setState(0x92f, 0xae25, 0xf90, 0xbcde, 0xecb6, 0x84ff, 0x1, 0x0);
        gbc.writeMem(0x92f, { 0xcb, 0x1e });
        gbc.writeMem(0x84ff, { 0xd3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xae25, gbc.sp());
        EXPECT(0x931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x84ff));
        // CB 1E 0176
        gbc.setState(0xdb9b, 0xe701, 0x4a10, 0x176b, 0xadc2, 0xafe0, 0x1, 0x1);
        gbc.writeMem(0xafe0, { 0xb3 });
        gbc.writeMem(0xdb9b, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe701, gbc.sp());
        EXPECT(0xdb9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xafe0));
        EXPECT(0xcb, gbc.readMem(0xdb9b));
        EXPECT(0x1e, gbc.readMem(0xdb9c));
        // CB 1E 0177
        gbc.setState(0xe678, 0x3cae, 0x7060, 0x4422, 0xe2c4, 0x85ec, 0x0, 0x0);
        gbc.writeMem(0x85ec, { 0xf1 });
        gbc.writeMem(0xe678, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3cae, gbc.sp());
        EXPECT(0xe67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x85ec));
        EXPECT(0xcb, gbc.readMem(0xe678));
        EXPECT(0x1e, gbc.readMem(0xe679));
        // CB 1E 017A
        gbc.setState(0xd3ef, 0x4fe, 0x6750, 0xc74d, 0x14dd, 0x9759, 0x0, 0x0);
        gbc.writeMem(0x9759, { 0x0 });
        gbc.writeMem(0xd3ef, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4fe, gbc.sp());
        EXPECT(0xd3f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9759));
        EXPECT(0xcb, gbc.readMem(0xd3ef));
        EXPECT(0x1e, gbc.readMem(0xd3f0));
        // CB 1E 017B
        gbc.setState(0x5d1f, 0x94, 0x4b10, 0x3173, 0xc5ec, 0x81bd, 0x0, 0x0);
        gbc.writeMem(0x5d1f, { 0xcb, 0x1e });
        gbc.writeMem(0x81bd, { 0x5f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x94, gbc.sp());
        EXPECT(0x5d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x81bd));
        // CB 1E 017D
        gbc.setState(0xa4e5, 0xb6a2, 0xf3e0, 0x28c9, 0x82d, 0xaccc, 0x0, 0x1);
        gbc.writeMem(0xa4e5, { 0xcb, 0x1e });
        gbc.writeMem(0xaccc, { 0x57 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb6a2, gbc.sp());
        EXPECT(0xa4e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e5));
        EXPECT(0x1e, gbc.readMem(0xa4e6));
        EXPECT(0x2b, gbc.readMem(0xaccc));
        // CB 1E 017F
        gbc.setState(0x852b, 0x90c0, 0xef40, 0xed50, 0xea6b, 0xf23b, 0x1, 0x1);
        gbc.writeMem(0x852b, { 0xcb, 0x1e });
        gbc.writeMem(0xf23b, { 0xec });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x90c0, gbc.sp());
        EXPECT(0x852d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852b));
        EXPECT(0x1e, gbc.readMem(0x852c));
        EXPECT(0x76, gbc.readMem(0xf23b));
        // CB 1E 0182
        gbc.setState(0xa859, 0xecdd, 0x3d0, 0xaf5f, 0xbede, 0xc551, 0x0, 0x1);
        gbc.writeMem(0xa859, { 0xcb, 0x1e });
        gbc.writeMem(0xc551, { 0x7a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xecdd, gbc.sp());
        EXPECT(0xa85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa859));
        EXPECT(0x1e, gbc.readMem(0xa85a));
        EXPECT(0xbd, gbc.readMem(0xc551));
        // CB 1E 0183
        gbc.setState(0xd25c, 0xd631, 0x7330, 0xa630, 0x474, 0x9288, 0x0, 0x0);
        gbc.writeMem(0x9288, { 0x5a });
        gbc.writeMem(0xd25c, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd631, gbc.sp());
        EXPECT(0xd25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x9288));
        EXPECT(0xcb, gbc.readMem(0xd25c));
        EXPECT(0x1e, gbc.readMem(0xd25d));
        // CB 1E 0186
        gbc.setState(0x44ed, 0x26f2, 0x8930, 0x362c, 0x2050, 0xe118, 0x0, 0x1);
        gbc.writeMem(0x44ed, { 0xcb, 0x1e });
        gbc.writeMem(0xe118, { 0xb4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x26f2, gbc.sp());
        EXPECT(0x44ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe118));
        // CB 1E 0189
        gbc.setState(0x4e0, 0xb38c, 0x1810, 0x55f7, 0x6d1b, 0xf583, 0x1, 0x0);
        gbc.writeMem(0x4e0, { 0xcb, 0x1e });
        gbc.writeMem(0xf583, { 0xf5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb38c, gbc.sp());
        EXPECT(0x4e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xf583));
        // CB 1E 018A
        gbc.setState(0x540a, 0xdd5a, 0xde60, 0x497d, 0xe9f1, 0xb8f5, 0x0, 0x0);
        gbc.writeMem(0x540a, { 0xcb, 0x1e });
        gbc.writeMem(0xb8f5, { 0xb7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdd5a, gbc.sp());
        EXPECT(0x540c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb8f5));
        // CB 1E 018C
        gbc.setState(0xc205, 0x2ca0, 0x5150, 0xf0a9, 0xf209, 0xa1a9, 0x1, 0x1);
        gbc.writeMem(0xa1a9, { 0x61 });
        gbc.writeMem(0xc205, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2ca0, gbc.sp());
        EXPECT(0xc207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa1a9));
        EXPECT(0xcb, gbc.readMem(0xc205));
        EXPECT(0x1e, gbc.readMem(0xc206));
        // CB 1E 0193
        gbc.setState(0x7322, 0x381d, 0x6e0, 0x41b6, 0xf4f, 0x8728, 0x0, 0x0);
        gbc.writeMem(0x7322, { 0xcb, 0x1e });
        gbc.writeMem(0x8728, { 0x58 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x381d, gbc.sp());
        EXPECT(0x7324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8728));
        // CB 1E 019A
        gbc.setState(0xb4ea, 0xdae0, 0x8810, 0x3402, 0x12e8, 0xdb52, 0x1, 0x0);
        gbc.writeMem(0xb4ea, { 0xcb, 0x1e });
        gbc.writeMem(0xdb52, { 0x12 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdae0, gbc.sp());
        EXPECT(0xb4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ea));
        EXPECT(0x1e, gbc.readMem(0xb4eb));
        EXPECT(0x89, gbc.readMem(0xdb52));
        // CB 1E 019B
        gbc.setState(0xc671, 0x7f17, 0x4fb0, 0x4cea, 0x615d, 0xc17e, 0x0, 0x0);
        gbc.writeMem(0xc17e, { 0xf6 });
        gbc.writeMem(0xc671, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7f17, gbc.sp());
        EXPECT(0xc673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xc17e));
        EXPECT(0xcb, gbc.readMem(0xc671));
        EXPECT(0x1e, gbc.readMem(0xc672));
        // CB 1E 019E
        gbc.setState(0xb586, 0x82e, 0x8100, 0xa1d3, 0xb968, 0xb019, 0x0, 0x1);
        gbc.writeMem(0xb019, { 0xee });
        gbc.writeMem(0xb586, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x82e, gbc.sp());
        EXPECT(0xb588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb019));
        EXPECT(0xcb, gbc.readMem(0xb586));
        EXPECT(0x1e, gbc.readMem(0xb587));
        // CB 1E 019F
        gbc.setState(0xf0, 0x8cd1, 0x1f50, 0x8bef, 0xeead, 0xadc9, 0x0, 0x0);
        gbc.writeMem(0xf0, { 0xcb, 0x1e });
        gbc.writeMem(0xadc9, { 0xca });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8cd1, gbc.sp());
        EXPECT(0xf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xadc9));
        // CB 1E 01A0
        gbc.setState(0xca1b, 0x2804, 0x5960, 0xd23a, 0xbedb, 0xba52, 0x0, 0x0);
        gbc.writeMem(0xba52, { 0x75 });
        gbc.writeMem(0xca1b, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2804, gbc.sp());
        EXPECT(0xca1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xba52));
        EXPECT(0xcb, gbc.readMem(0xca1b));
        EXPECT(0x1e, gbc.readMem(0xca1c));
        // CB 1E 01A3
        gbc.setState(0xabb6, 0x651c, 0xcd80, 0xa61d, 0x4e75, 0xe206, 0x1, 0x1);
        gbc.writeMem(0xabb6, { 0xcb, 0x1e });
        gbc.writeMem(0xe206, { 0xfc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x651c, gbc.sp());
        EXPECT(0xabb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb6));
        EXPECT(0x1e, gbc.readMem(0xabb7));
        EXPECT(0x7e, gbc.readMem(0xe206));
        // CB 1E 01A5
        gbc.setState(0x716a, 0x1040, 0x3c40, 0x43e9, 0x5ff9, 0x929d, 0x0, 0x0);
        gbc.writeMem(0x716a, { 0xcb, 0x1e });
        gbc.writeMem(0x929d, { 0x64 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1040, gbc.sp());
        EXPECT(0x716c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x929d));
        // CB 1E 01A8
        gbc.setState(0x8d62, 0x6f51, 0xc1a0, 0xb64a, 0x2630, 0xa324, 0x0, 0x1);
        gbc.writeMem(0x8d62, { 0xcb, 0x1e });
        gbc.writeMem(0xa324, { 0x2f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6f51, gbc.sp());
        EXPECT(0x8d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d62));
        EXPECT(0x1e, gbc.readMem(0x8d63));
        EXPECT(0x17, gbc.readMem(0xa324));
        // CB 1E 01AB
        gbc.setState(0x89ac, 0xa93a, 0x9f10, 0x8873, 0xed5f, 0xe119, 0x0, 0x1);
        gbc.writeMem(0x89ac, { 0xcb, 0x1e });
        gbc.writeMem(0xe119, { 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa93a, gbc.sp());
        EXPECT(0x89ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ac));
        EXPECT(0x1e, gbc.readMem(0x89ad));
        EXPECT(0xcf, gbc.readMem(0xe119));
        // CB 1E 01AC
        gbc.setState(0xe4c, 0x6fe5, 0xa060, 0xedd4, 0x2bee, 0xb210, 0x0, 0x0);
        gbc.writeMem(0xe4c, { 0xcb, 0x1e });
        gbc.writeMem(0xb210, { 0xae });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6fe5, gbc.sp());
        EXPECT(0xe4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb210));
        // CB 1E 01AE
        gbc.setState(0x708b, 0xb93, 0x8a0, 0xdb9c, 0x631a, 0xe10a, 0x1, 0x0);
        gbc.writeMem(0x708b, { 0xcb, 0x1e });
        gbc.writeMem(0xe10a, { 0xf7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb93, gbc.sp());
        EXPECT(0x708d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe10a));
        // CB 1E 01B0
        gbc.setState(0x54a2, 0xb504, 0x5d60, 0x29d4, 0x9a9c, 0xea83, 0x0, 0x0);
        gbc.writeMem(0x54a2, { 0xcb, 0x1e });
        gbc.writeMem(0xea83, { 0xcf });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb504, gbc.sp());
        EXPECT(0x54a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xea83));
        // CB 1E 01B2
        gbc.setState(0x5877, 0x93d9, 0x6d0, 0x7b3d, 0xb450, 0x9b59, 0x1, 0x0);
        gbc.writeMem(0x5877, { 0xcb, 0x1e });
        gbc.writeMem(0x9b59, { 0x5b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x93d9, gbc.sp());
        EXPECT(0x5879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x9b59));
        // CB 1E 01B4
        gbc.setState(0x69, 0xfd40, 0x23d0, 0xe0ad, 0x83fd, 0xae4b, 0x0, 0x1);
        gbc.writeMem(0x69, { 0xcb, 0x1e });
        gbc.writeMem(0xae4b, { 0x46 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xfd40, gbc.sp());
        EXPECT(0x6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xae4b));
        // CB 1E 01B6
        gbc.setState(0x9420, 0xf7c9, 0xd150, 0xa7f5, 0x644b, 0xe086, 0x1, 0x0);
        gbc.writeMem(0x9420, { 0xcb, 0x1e });
        gbc.writeMem(0xe086, { 0x80 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf7c9, gbc.sp());
        EXPECT(0x9422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9420));
        EXPECT(0x1e, gbc.readMem(0x9421));
        EXPECT(0xc0, gbc.readMem(0xe086));
        // CB 1E 01B7
        gbc.setState(0x1554, 0x70b3, 0xb50, 0xe6de, 0xeabd, 0xee09, 0x1, 0x1);
        gbc.writeMem(0x1554, { 0xcb, 0x1e });
        gbc.writeMem(0xee09, { 0xe6 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x70b3, gbc.sp());
        EXPECT(0x1556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xee09));
        // CB 1E 01BE
        gbc.setState(0xa392, 0xfb13, 0xcd60, 0xbf66, 0x4023, 0xe3ea, 0x1, 0x1);
        gbc.writeMem(0xa392, { 0xcb, 0x1e });
        gbc.writeMem(0xe3ea, { 0x88 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfb13, gbc.sp());
        EXPECT(0xa394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa392));
        EXPECT(0x1e, gbc.readMem(0xa393));
        EXPECT(0x44, gbc.readMem(0xe3ea));
        // CB 1E 01C3
        gbc.setState(0xd54b, 0xe96f, 0x9be0, 0x4557, 0x95cc, 0x83c5, 0x1, 0x0);
        gbc.writeMem(0x83c5, { 0x4 });
        gbc.writeMem(0xd54b, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe96f, gbc.sp());
        EXPECT(0xd54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x83c5));
        EXPECT(0xcb, gbc.readMem(0xd54b));
        EXPECT(0x1e, gbc.readMem(0xd54c));
        // CB 1E 01C4
        gbc.setState(0xb21c, 0x8ca1, 0xbe60, 0xe779, 0xc5ac, 0xee3f, 0x1, 0x1);
        gbc.writeMem(0xb21c, { 0xcb, 0x1e });
        gbc.writeMem(0xee3f, { 0x4a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8ca1, gbc.sp());
        EXPECT(0xb21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21c));
        EXPECT(0x1e, gbc.readMem(0xb21d));
        EXPECT(0x25, gbc.readMem(0xee3f));
        // CB 1E 01C5
        gbc.setState(0x5ce, 0xb9c, 0xb10, 0x5ead, 0xc670, 0xc2ae, 0x0, 0x1);
        gbc.writeMem(0x5ce, { 0xcb, 0x1e });
        gbc.writeMem(0xc2ae, { 0x80 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb9c, gbc.sp());
        EXPECT(0x5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xc2ae));
        // CB 1E 01C6
        gbc.setState(0x2385, 0xe3cb, 0xb630, 0xe205, 0x4736, 0x9172, 0x1, 0x1);
        gbc.writeMem(0x2385, { 0xcb, 0x1e });
        gbc.writeMem(0x9172, { 0xd8 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe3cb, gbc.sp());
        EXPECT(0x2387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9172));
        // CB 1E 01C7
        gbc.setState(0xedea, 0x982b, 0xb020, 0x195b, 0xa709, 0x83f9, 0x0, 0x1);
        gbc.writeMem(0x83f9, { 0x88 });
        gbc.writeMem(0xedea, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x982b, gbc.sp());
        EXPECT(0xedec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x83f9));
        EXPECT(0xcb, gbc.readMem(0xedea));
        EXPECT(0x1e, gbc.readMem(0xedeb));
        // CB 1E 01C8
        gbc.setState(0x6bb8, 0xd0dc, 0xdda0, 0xe5d9, 0xf50c, 0xfa73, 0x0, 0x1);
        gbc.writeMem(0x6bb8, { 0xcb, 0x1e });
        gbc.writeMem(0xfa73, { 0x18 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd0dc, gbc.sp());
        EXPECT(0x6bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xfa73));
        // CB 1E 01C9
        gbc.setState(0x2191, 0x4758, 0x4890, 0x2dd7, 0xee6e, 0x89c2, 0x0, 0x1);
        gbc.writeMem(0x2191, { 0xcb, 0x1e });
        gbc.writeMem(0x89c2, { 0xa });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4758, gbc.sp());
        EXPECT(0x2193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x89c2));
        // CB 1E 01CB
        gbc.setState(0x4369, 0x46c8, 0x9260, 0xb438, 0xa83d, 0xfa44, 0x1, 0x1);
        gbc.writeMem(0x4369, { 0xcb, 0x1e });
        gbc.writeMem(0xfa44, { 0x72 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x46c8, gbc.sp());
        EXPECT(0x436b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xfa44));
        // CB 1E 01CC
        gbc.setState(0x7959, 0xc4d, 0xaf10, 0x8fe1, 0x1111, 0x9c19, 0x0, 0x1);
        gbc.writeMem(0x7959, { 0xcb, 0x1e });
        gbc.writeMem(0x9c19, { 0x51 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc4d, gbc.sp());
        EXPECT(0x795b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x9c19));
        // CB 1E 01CD
        gbc.setState(0xe386, 0x8103, 0x5cf0, 0x46c9, 0x9ee2, 0x848c, 0x0, 0x1);
        gbc.writeMem(0x848c, { 0xff });
        gbc.writeMem(0xe386, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8103, gbc.sp());
        EXPECT(0xe388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x848c));
        EXPECT(0xcb, gbc.readMem(0xe386));
        EXPECT(0x1e, gbc.readMem(0xe387));
        // CB 1E 01CF
        gbc.setState(0x26a3, 0x8afb, 0x4980, 0xe33b, 0x6a2a, 0xf27a, 0x0, 0x0);
        gbc.writeMem(0x26a3, { 0xcb, 0x1e });
        gbc.writeMem(0xf27a, { 0x79 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8afb, gbc.sp());
        EXPECT(0x26a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xf27a));
        // CB 1E 01D0
        gbc.setState(0x72b7, 0xeb04, 0x6bd0, 0x9cb6, 0x3426, 0xa6e9, 0x0, 0x0);
        gbc.writeMem(0x72b7, { 0xcb, 0x1e });
        gbc.writeMem(0xa6e9, { 0x80 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xeb04, gbc.sp());
        EXPECT(0x72b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa6e9));
        // CB 1E 01D1
        gbc.setState(0x8f90, 0x3d6f, 0x6dc0, 0xaae1, 0x864c, 0xc6e1, 0x1, 0x0);
        gbc.writeMem(0x8f90, { 0xcb, 0x1e });
        gbc.writeMem(0xc6e1, { 0xb1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3d6f, gbc.sp());
        EXPECT(0x8f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f90));
        EXPECT(0x1e, gbc.readMem(0x8f91));
        EXPECT(0x58, gbc.readMem(0xc6e1));
        // CB 1E 01D2
        gbc.setState(0xcbd7, 0x5075, 0x3fe0, 0x7b2b, 0xc67c, 0x8213, 0x0, 0x0);
        gbc.writeMem(0x8213, { 0xc6 });
        gbc.writeMem(0xcbd7, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5075, gbc.sp());
        EXPECT(0xcbd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x8213));
        EXPECT(0xcb, gbc.readMem(0xcbd7));
        EXPECT(0x1e, gbc.readMem(0xcbd8));
        // CB 1E 01D6
        gbc.setState(0xa1f9, 0x671, 0xe5e0, 0x5c6c, 0xdeb5, 0x8d9c, 0x0, 0x1);
        gbc.writeMem(0x8d9c, { 0xab });
        gbc.writeMem(0xa1f9, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x671, gbc.sp());
        EXPECT(0xa1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8d9c));
        EXPECT(0xcb, gbc.readMem(0xa1f9));
        EXPECT(0x1e, gbc.readMem(0xa1fa));
        // CB 1E 01D7
        gbc.setState(0x8153, 0x83b0, 0xa9f0, 0x5f5f, 0x4ab7, 0xcd62, 0x0, 0x0);
        gbc.writeMem(0x8153, { 0xcb, 0x1e });
        gbc.writeMem(0xcd62, { 0xa0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x83b0, gbc.sp());
        EXPECT(0x8155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8153));
        EXPECT(0x1e, gbc.readMem(0x8154));
        EXPECT(0xd0, gbc.readMem(0xcd62));
        // CB 1E 01DA
        gbc.setState(0x2106, 0xc68b, 0x76a0, 0x476b, 0x9e4c, 0xe5bf, 0x0, 0x1);
        gbc.writeMem(0x2106, { 0xcb, 0x1e });
        gbc.writeMem(0xe5bf, { 0x43 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc68b, gbc.sp());
        EXPECT(0x2108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe5bf));
        // CB 1E 01DB
        gbc.setState(0x7772, 0x9d78, 0x18e0, 0x8bf2, 0xb821, 0xe9f1, 0x0, 0x1);
        gbc.writeMem(0x7772, { 0xcb, 0x1e });
        gbc.writeMem(0xe9f1, { 0xc6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9d78, gbc.sp());
        EXPECT(0x7774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xe9f1));
        // CB 1E 01E3
        gbc.setState(0xb09f, 0xc06, 0xe710, 0xcc3e, 0xaa95, 0xbf9d, 0x0, 0x0);
        gbc.writeMem(0xb09f, { 0xcb, 0x1e });
        gbc.writeMem(0xbf9d, { 0xb7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc06, gbc.sp());
        EXPECT(0xb0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09f));
        EXPECT(0x1e, gbc.readMem(0xb0a0));
        EXPECT(0xdb, gbc.readMem(0xbf9d));
        // CB 1E 01E7
        gbc.setState(0xedfc, 0x3743, 0xdcf0, 0xab54, 0xd4ae, 0xab55, 0x1, 0x1);
        gbc.writeMem(0xab55, { 0x8 });
        gbc.writeMem(0xedfc, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3743, gbc.sp());
        EXPECT(0xedfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xab55));
        EXPECT(0xcb, gbc.readMem(0xedfc));
        EXPECT(0x1e, gbc.readMem(0xedfd));
        // CB 1E 01EA
        gbc.setState(0x9c7a, 0x415e, 0xc9c0, 0x4c10, 0xaaaf, 0xf6a7, 0x1, 0x0);
        gbc.writeMem(0x9c7a, { 0xcb, 0x1e });
        gbc.writeMem(0xf6a7, { 0xa1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x415e, gbc.sp());
        EXPECT(0x9c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7a));
        EXPECT(0x1e, gbc.readMem(0x9c7b));
        EXPECT(0x50, gbc.readMem(0xf6a7));
        // CB 1E 01EB
        gbc.setState(0xb72b, 0x150a, 0x97b0, 0xeb3f, 0x5d90, 0xd14c, 0x0, 0x1);
        gbc.writeMem(0xb72b, { 0xcb, 0x1e });
        gbc.writeMem(0xd14c, { 0x37 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x150a, gbc.sp());
        EXPECT(0xb72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72b));
        EXPECT(0x1e, gbc.readMem(0xb72c));
        EXPECT(0x9b, gbc.readMem(0xd14c));
        // CB 1E 01ED
        gbc.setState(0xd02f, 0x97ae, 0x1480, 0x7ebe, 0x7855, 0xe793, 0x1, 0x0);
        gbc.writeMem(0xd02f, { 0xcb, 0x1e });
        gbc.writeMem(0xe793, { 0x15 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x97ae, gbc.sp());
        EXPECT(0xd031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd02f));
        EXPECT(0x1e, gbc.readMem(0xd030));
        EXPECT(0xa, gbc.readMem(0xe793));
        // CB 1E 01EE
        gbc.setState(0x3f84, 0x7934, 0x8890, 0x4300, 0xcd47, 0xe49a, 0x0, 0x0);
        gbc.writeMem(0x3f84, { 0xcb, 0x1e });
        gbc.writeMem(0xe49a, { 0x95 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7934, gbc.sp());
        EXPECT(0x3f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xe49a));
        // CB 1E 01F0
        gbc.setState(0xeae6, 0xa6fc, 0x9450, 0x894c, 0x9a6e, 0x9ef3, 0x0, 0x0);
        gbc.writeMem(0x9ef3, { 0xfe });
        gbc.writeMem(0xeae6, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa6fc, gbc.sp());
        EXPECT(0xeae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9ef3));
        EXPECT(0xcb, gbc.readMem(0xeae6));
        EXPECT(0x1e, gbc.readMem(0xeae7));
        // CB 1E 01F1
        gbc.setState(0x6831, 0x825f, 0xb5d0, 0xf85a, 0x6954, 0xfc42, 0x0, 0x1);
        gbc.writeMem(0x6831, { 0xcb, 0x1e });
        gbc.writeMem(0xfc42, { 0xbf });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x825f, gbc.sp());
        EXPECT(0x6833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xfc42));
        // CB 1E 01F2
        gbc.setState(0xc43b, 0xf829, 0x2440, 0x5f6d, 0x7450, 0xe1ba, 0x1, 0x0);
        gbc.writeMem(0xc43b, { 0xcb, 0x1e });
        gbc.writeMem(0xe1ba, { 0x9c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf829, gbc.sp());
        EXPECT(0xc43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43b));
        EXPECT(0x1e, gbc.readMem(0xc43c));
        EXPECT(0x4e, gbc.readMem(0xe1ba));
        // CB 1E 01F3
        gbc.setState(0x73e, 0x2d9d, 0x7030, 0xef0, 0xe55f, 0x9f46, 0x1, 0x0);
        gbc.writeMem(0x73e, { 0xcb, 0x1e });
        gbc.writeMem(0x9f46, { 0xa2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2d9d, gbc.sp());
        EXPECT(0x740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x9f46));
        // CB 1E 01F4
        gbc.setState(0x1e04, 0x6fd0, 0x8c80, 0x193b, 0x219b, 0xa458, 0x1, 0x0);
        gbc.writeMem(0x1e04, { 0xcb, 0x1e });
        gbc.writeMem(0xa458, { 0xe0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6fd0, gbc.sp());
        EXPECT(0x1e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xa458));
        // CB 1E 01F5
        gbc.setState(0x4a77, 0x1acb, 0x55a0, 0x42ea, 0x32d9, 0x9395, 0x0, 0x1);
        gbc.writeMem(0x4a77, { 0xcb, 0x1e });
        gbc.writeMem(0x9395, { 0x66 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1acb, gbc.sp());
        EXPECT(0x4a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9395));
        // CB 1E 01F7
        gbc.setState(0x30e7, 0x7a3, 0xe5d0, 0xce94, 0xd605, 0x926a, 0x1, 0x1);
        gbc.writeMem(0x30e7, { 0xcb, 0x1e });
        gbc.writeMem(0x926a, { 0x95 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7a3, gbc.sp());
        EXPECT(0x30e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x926a));
        // CB 1E 01F8
        gbc.setState(0xb3f5, 0xcf3c, 0xc8a0, 0x47a7, 0x421c, 0xf3fb, 0x1, 0x1);
        gbc.writeMem(0xb3f5, { 0xcb, 0x1e });
        gbc.writeMem(0xf3fb, { 0x40 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcf3c, gbc.sp());
        EXPECT(0xb3f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f5));
        EXPECT(0x1e, gbc.readMem(0xb3f6));
        EXPECT(0x20, gbc.readMem(0xf3fb));
        // CB 1E 01FB
        gbc.setState(0xf7c, 0x6504, 0x16e0, 0xf989, 0xadfa, 0xba30, 0x0, 0x1);
        gbc.writeMem(0xf7c, { 0xcb, 0x1e });
        gbc.writeMem(0xba30, { 0x22 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6504, gbc.sp());
        EXPECT(0xf7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xba30));
        // CB 1E 01FC
        gbc.setState(0x1331, 0xf76e, 0x66a0, 0xb16d, 0x414a, 0xcbd5, 0x1, 0x0);
        gbc.writeMem(0x1331, { 0xcb, 0x1e });
        gbc.writeMem(0xcbd5, { 0xda });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf76e, gbc.sp());
        EXPECT(0x1333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xcbd5));
        // CB 1E 01FF
        gbc.setState(0x3bd4, 0x281d, 0x5b40, 0xeb, 0x910, 0x8c27, 0x1, 0x1);
        gbc.writeMem(0x3bd4, { 0xcb, 0x1e });
        gbc.writeMem(0x8c27, { 0xf0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x281d, gbc.sp());
        EXPECT(0x3bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8c27));
        // CB 1E 0200
        gbc.setState(0x3cbf, 0xcc90, 0x1b50, 0x74d8, 0x1b0f, 0xa127, 0x0, 0x1);
        gbc.writeMem(0x3cbf, { 0xcb, 0x1e });
        gbc.writeMem(0xa127, { 0x91 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcc90, gbc.sp());
        EXPECT(0x3cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa127));
        // CB 1E 0201
        gbc.setState(0x6ca5, 0xfe10, 0xfca0, 0xb8d6, 0xeaa5, 0xb4cf, 0x0, 0x0);
        gbc.writeMem(0x6ca5, { 0xcb, 0x1e });
        gbc.writeMem(0xb4cf, { 0xab });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfe10, gbc.sp());
        EXPECT(0x6ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb4cf));
        // CB 1E 0205
        gbc.setState(0x1bf4, 0x303f, 0x6c60, 0xb7e2, 0x2869, 0x8e23, 0x0, 0x0);
        gbc.writeMem(0x1bf4, { 0xcb, 0x1e });
        gbc.writeMem(0x8e23, { 0xe6 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x303f, gbc.sp());
        EXPECT(0x1bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8e23));
        // CB 1E 0206
        gbc.setState(0x3330, 0x3530, 0xf0e0, 0x9634, 0xff7e, 0xf4e1, 0x1, 0x1);
        gbc.writeMem(0x3330, { 0xcb, 0x1e });
        gbc.writeMem(0xf4e1, { 0xc1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3530, gbc.sp());
        EXPECT(0x3332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xf4e1));
        // CB 1E 0207
        gbc.setState(0x7335, 0xd6d2, 0x9ce0, 0x645d, 0xeec3, 0xa5d2, 0x0, 0x1);
        gbc.writeMem(0x7335, { 0xcb, 0x1e });
        gbc.writeMem(0xa5d2, { 0x78 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd6d2, gbc.sp());
        EXPECT(0x7337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa5d2));
        // CB 1E 0209
        gbc.setState(0xa45c, 0x1337, 0xce60, 0xfa04, 0xff42, 0xd5cd, 0x0, 0x0);
        gbc.writeMem(0xa45c, { 0xcb, 0x1e });
        gbc.writeMem(0xd5cd, { 0x9c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1337, gbc.sp());
        EXPECT(0xa45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa45c));
        EXPECT(0x1e, gbc.readMem(0xa45d));
        EXPECT(0x4e, gbc.readMem(0xd5cd));
        // CB 1E 020B
        gbc.setState(0x6c7b, 0x856f, 0x9c80, 0x5732, 0xd0b2, 0xf9cd, 0x0, 0x1);
        gbc.writeMem(0x6c7b, { 0xcb, 0x1e });
        gbc.writeMem(0xf9cd, { 0xde });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x856f, gbc.sp());
        EXPECT(0x6c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xf9cd));
        // CB 1E 020D
        gbc.setState(0xb31e, 0x8d67, 0xb3d0, 0xcb53, 0xe042, 0xe6e8, 0x0, 0x0);
        gbc.writeMem(0xb31e, { 0xcb, 0x1e });
        gbc.writeMem(0xe6e8, { 0xea });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8d67, gbc.sp());
        EXPECT(0xb320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31e));
        EXPECT(0x1e, gbc.readMem(0xb31f));
        EXPECT(0xf5, gbc.readMem(0xe6e8));
        // CB 1E 020F
        gbc.setState(0xab7d, 0xdb42, 0x2ae0, 0xebe1, 0x78f1, 0x9bdf, 0x0, 0x0);
        gbc.writeMem(0x9bdf, { 0xb4 });
        gbc.writeMem(0xab7d, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdb42, gbc.sp());
        EXPECT(0xab7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x9bdf));
        EXPECT(0xcb, gbc.readMem(0xab7d));
        EXPECT(0x1e, gbc.readMem(0xab7e));
        // CB 1E 0212
        gbc.setState(0x5534, 0xdabf, 0x5980, 0x6b5c, 0xf1a, 0xd9a9, 0x1, 0x1);
        gbc.writeMem(0x5534, { 0xcb, 0x1e });
        gbc.writeMem(0xd9a9, { 0x4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdabf, gbc.sp());
        EXPECT(0x5536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xd9a9));
        // CB 1E 0217
        gbc.setState(0x6374, 0x7b52, 0xe090, 0x91bb, 0x551f, 0x8571, 0x1, 0x0);
        gbc.writeMem(0x6374, { 0xcb, 0x1e });
        gbc.writeMem(0x8571, { 0x12 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7b52, gbc.sp());
        EXPECT(0x6376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8571));
        // CB 1E 0218
        gbc.setState(0xbcc1, 0x41b8, 0x2cb0, 0x9b26, 0x8d18, 0xc03a, 0x0, 0x0);
        gbc.writeMem(0xbcc1, { 0xcb, 0x1e });
        gbc.writeMem(0xc03a, { 0x90 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x41b8, gbc.sp());
        EXPECT(0xbcc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc1));
        EXPECT(0x1e, gbc.readMem(0xbcc2));
        EXPECT(0xc8, gbc.readMem(0xc03a));
        // CB 1E 021A
        gbc.setState(0x7b7b, 0xa31e, 0x9860, 0x951a, 0x979f, 0xc4e9, 0x1, 0x1);
        gbc.writeMem(0x7b7b, { 0xcb, 0x1e });
        gbc.writeMem(0xc4e9, { 0x16 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa31e, gbc.sp());
        EXPECT(0x7b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc4e9));
        // CB 1E 021B
        gbc.setState(0xb5ea, 0xad9a, 0xdf90, 0x483, 0xb6ed, 0x9536, 0x1, 0x1);
        gbc.writeMem(0x9536, { 0x8c });
        gbc.writeMem(0xb5ea, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xad9a, gbc.sp());
        EXPECT(0xb5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9536));
        EXPECT(0xcb, gbc.readMem(0xb5ea));
        EXPECT(0x1e, gbc.readMem(0xb5eb));
        // CB 1E 021D
        gbc.setState(0x273, 0x9468, 0xadb0, 0x7c0a, 0xbf06, 0xf911, 0x1, 0x1);
        gbc.writeMem(0x273, { 0xcb, 0x1e });
        gbc.writeMem(0xf911, { 0x31 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9468, gbc.sp());
        EXPECT(0x275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xf911));
        // CB 1E 021F
        gbc.setState(0xd920, 0x6bc6, 0xd800, 0xf63b, 0x2e11, 0xc299, 0x0, 0x1);
        gbc.writeMem(0xc299, { 0x23 });
        gbc.writeMem(0xd920, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6bc6, gbc.sp());
        EXPECT(0xd922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xc299));
        EXPECT(0xcb, gbc.readMem(0xd920));
        EXPECT(0x1e, gbc.readMem(0xd921));
        // CB 1E 0221
        gbc.setState(0x1fe9, 0x4a4, 0xe770, 0x896b, 0x46c3, 0xd557, 0x0, 0x0);
        gbc.writeMem(0x1fe9, { 0xcb, 0x1e });
        gbc.writeMem(0xd557, { 0xd1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4a4, gbc.sp());
        EXPECT(0x1feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xd557));
        // CB 1E 0222
        gbc.setState(0xb2a7, 0x2da6, 0xaf20, 0x8e16, 0x27be, 0xafcd, 0x1, 0x1);
        gbc.writeMem(0xafcd, { 0xb5 });
        gbc.writeMem(0xb2a7, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2da6, gbc.sp());
        EXPECT(0xb2a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xafcd));
        EXPECT(0xcb, gbc.readMem(0xb2a7));
        EXPECT(0x1e, gbc.readMem(0xb2a8));
        // CB 1E 0223
        gbc.setState(0x35c8, 0xb682, 0x40a0, 0xc62, 0xd7fa, 0x82d5, 0x0, 0x0);
        gbc.writeMem(0x35c8, { 0xcb, 0x1e });
        gbc.writeMem(0x82d5, { 0x8d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb682, gbc.sp());
        EXPECT(0x35ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x82d5));
        // CB 1E 0224
        gbc.setState(0xa5e0, 0xa066, 0x32a0, 0xb987, 0x932e, 0xcb8d, 0x1, 0x0);
        gbc.writeMem(0xa5e0, { 0xcb, 0x1e });
        gbc.writeMem(0xcb8d, { 0x57 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa066, gbc.sp());
        EXPECT(0xa5e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e0));
        EXPECT(0x1e, gbc.readMem(0xa5e1));
        EXPECT(0x2b, gbc.readMem(0xcb8d));
        // CB 1E 0225
        gbc.setState(0x4c80, 0xe3a5, 0x5800, 0x948f, 0x97d9, 0xe4e4, 0x0, 0x0);
        gbc.writeMem(0x4c80, { 0xcb, 0x1e });
        gbc.writeMem(0xe4e4, { 0x8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe3a5, gbc.sp());
        EXPECT(0x4c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe4e4));
        // CB 1E 0227
        gbc.setState(0x4a7f, 0x5132, 0x9e10, 0xab78, 0xf600, 0xb695, 0x0, 0x0);
        gbc.writeMem(0x4a7f, { 0xcb, 0x1e });
        gbc.writeMem(0xb695, { 0xb6 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5132, gbc.sp());
        EXPECT(0x4a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xb695));
        // CB 1E 0228
        gbc.setState(0xea1b, 0x7519, 0x8810, 0x7d35, 0xca9, 0xac2b, 0x1, 0x1);
        gbc.writeMem(0xac2b, { 0x91 });
        gbc.writeMem(0xea1b, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7519, gbc.sp());
        EXPECT(0xea1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xac2b));
        EXPECT(0xcb, gbc.readMem(0xea1b));
        EXPECT(0x1e, gbc.readMem(0xea1c));
        // CB 1E 022C
        gbc.setState(0xe01c, 0xef24, 0x3ec0, 0x47a2, 0xc191, 0xb05e, 0x0, 0x1);
        gbc.writeMem(0xb05e, { 0xd5 });
        gbc.writeMem(0xe01c, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xef24, gbc.sp());
        EXPECT(0xe01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb05e));
        EXPECT(0xcb, gbc.readMem(0xe01c));
        EXPECT(0x1e, gbc.readMem(0xe01d));
        // CB 1E 0232
        gbc.setState(0xb93f, 0xf2bf, 0x26d0, 0x89c2, 0xb08e, 0xeecf, 0x1, 0x0);
        gbc.writeMem(0xb93f, { 0xcb, 0x1e });
        gbc.writeMem(0xeecf, { 0xe4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf2bf, gbc.sp());
        EXPECT(0xb941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93f));
        EXPECT(0x1e, gbc.readMem(0xb940));
        EXPECT(0xf2, gbc.readMem(0xeecf));
        // CB 1E 0233
        gbc.setState(0x7f77, 0x556a, 0xdb20, 0xc185, 0xe1ae, 0x8994, 0x1, 0x1);
        gbc.writeMem(0x7f77, { 0xcb, 0x1e });
        gbc.writeMem(0x8994, { 0x3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x556a, gbc.sp());
        EXPECT(0x7f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x8994));
        // CB 1E 0236
        gbc.setState(0x186e, 0x4c76, 0xbc50, 0x7c22, 0x7f45, 0xee21, 0x1, 0x0);
        gbc.writeMem(0x186e, { 0xcb, 0x1e });
        gbc.writeMem(0xee21, { 0xd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4c76, gbc.sp());
        EXPECT(0x1870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xee21));
        // CB 1E 0237
        gbc.setState(0x8b58, 0xc8f6, 0xb740, 0x5afb, 0xb1f6, 0x8ad6, 0x0, 0x0);
        gbc.writeMem(0x8ad6, { 0xd1 });
        gbc.writeMem(0x8b58, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc8f6, gbc.sp());
        EXPECT(0x8b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8ad6));
        EXPECT(0xcb, gbc.readMem(0x8b58));
        EXPECT(0x1e, gbc.readMem(0x8b59));
        // CB 1E 023F
        gbc.setState(0x5823, 0x94e5, 0xdbe0, 0x2870, 0xfd72, 0xf3ec, 0x0, 0x1);
        gbc.writeMem(0x5823, { 0xcb, 0x1e });
        gbc.writeMem(0xf3ec, { 0xc5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x94e5, gbc.sp());
        EXPECT(0x5825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xf3ec));
        // CB 1E 0241
        gbc.setState(0x7c8e, 0x3154, 0x2210, 0x41f5, 0x78fd, 0xd1b2, 0x1, 0x0);
        gbc.writeMem(0x7c8e, { 0xcb, 0x1e });
        gbc.writeMem(0xd1b2, { 0x3b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3154, gbc.sp());
        EXPECT(0x7c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd1b2));
        // CB 1E 0242
        gbc.setState(0x77ad, 0xc7ca, 0xb950, 0x727a, 0xc34f, 0xf920, 0x1, 0x0);
        gbc.writeMem(0x77ad, { 0xcb, 0x1e });
        gbc.writeMem(0xf920, { 0x4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc7ca, gbc.sp());
        EXPECT(0x77af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xf920));
        // CB 1E 0243
        gbc.setState(0x3b35, 0x26ad, 0x180, 0xfc1c, 0xf63b, 0xa13d, 0x0, 0x1);
        gbc.writeMem(0x3b35, { 0xcb, 0x1e });
        gbc.writeMem(0xa13d, { 0x26 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x26ad, gbc.sp());
        EXPECT(0x3b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa13d));
        // CB 1E 0244
        gbc.setState(0x888b, 0x68ae, 0x730, 0xceca, 0xa99b, 0x9821, 0x0, 0x1);
        gbc.writeMem(0x888b, { 0xcb, 0x1e });
        gbc.writeMem(0x9821, { 0x69 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x68ae, gbc.sp());
        EXPECT(0x888d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888b));
        EXPECT(0x1e, gbc.readMem(0x888c));
        EXPECT(0xb4, gbc.readMem(0x9821));
        // CB 1E 0245
        gbc.setState(0x9bb1, 0x2983, 0x3f50, 0x74b8, 0xe007, 0xdbc0, 0x1, 0x1);
        gbc.writeMem(0x9bb1, { 0xcb, 0x1e });
        gbc.writeMem(0xdbc0, { 0xd5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2983, gbc.sp());
        EXPECT(0x9bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb1));
        EXPECT(0x1e, gbc.readMem(0x9bb2));
        EXPECT(0xea, gbc.readMem(0xdbc0));
        // CB 1E 0246
        gbc.setState(0x46a4, 0xdf4, 0xc370, 0x6aac, 0xade0, 0x90cc, 0x1, 0x0);
        gbc.writeMem(0x46a4, { 0xcb, 0x1e });
        gbc.writeMem(0x90cc, { 0x8f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdf4, gbc.sp());
        EXPECT(0x46a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x90cc));
        // CB 1E 0247
        gbc.setState(0x5841, 0x29b7, 0xc070, 0x4910, 0xfd6d, 0x8b2d, 0x1, 0x0);
        gbc.writeMem(0x5841, { 0xcb, 0x1e });
        gbc.writeMem(0x8b2d, { 0x9b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x29b7, gbc.sp());
        EXPECT(0x5843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x8b2d));
        // CB 1E 024C
        gbc.setState(0x4ca6, 0xf9fc, 0xaf60, 0xbb19, 0x8684, 0xafab, 0x1, 0x1);
        gbc.writeMem(0x4ca6, { 0xcb, 0x1e });
        gbc.writeMem(0xafab, { 0x4d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf9fc, gbc.sp());
        EXPECT(0x4ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xafab));
        // CB 1E 024F
        gbc.setState(0x49c, 0xadfa, 0xace0, 0xcb3, 0x94eb, 0xf29e, 0x1, 0x1);
        gbc.writeMem(0x49c, { 0xcb, 0x1e });
        gbc.writeMem(0xf29e, { 0x77 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xadfa, gbc.sp());
        EXPECT(0x49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xf29e));
        // CB 1E 0250
        gbc.setState(0xbb0c, 0xa07d, 0x9940, 0x554b, 0xccec, 0xc87b, 0x0, 0x1);
        gbc.writeMem(0xbb0c, { 0xcb, 0x1e });
        gbc.writeMem(0xc87b, { 0xe1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa07d, gbc.sp());
        EXPECT(0xbb0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb0c));
        EXPECT(0x1e, gbc.readMem(0xbb0d));
        EXPECT(0x70, gbc.readMem(0xc87b));
        // CB 1E 0251
        gbc.setState(0xcf4a, 0xe01d, 0xe870, 0x8e7, 0xfa67, 0xe1b0, 0x0, 0x1);
        gbc.writeMem(0xcf4a, { 0xcb, 0x1e });
        gbc.writeMem(0xe1b0, { 0x91 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe01d, gbc.sp());
        EXPECT(0xcf4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4a));
        EXPECT(0x1e, gbc.readMem(0xcf4b));
        EXPECT(0xc8, gbc.readMem(0xe1b0));
        // CB 1E 0253
        gbc.setState(0x2d72, 0x5a5b, 0x950, 0x175, 0x443f, 0x9331, 0x0, 0x0);
        gbc.writeMem(0x2d72, { 0xcb, 0x1e });
        gbc.writeMem(0x9331, { 0x63 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5a5b, gbc.sp());
        EXPECT(0x2d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x9331));
        // CB 1E 0254
        gbc.setState(0x8f8c, 0x9c3, 0xb7c0, 0xcb82, 0xfb1d, 0xc2d5, 0x1, 0x0);
        gbc.writeMem(0x8f8c, { 0xcb, 0x1e });
        gbc.writeMem(0xc2d5, { 0x9d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9c3, gbc.sp());
        EXPECT(0x8f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f8c));
        EXPECT(0x1e, gbc.readMem(0x8f8d));
        EXPECT(0x4e, gbc.readMem(0xc2d5));
        // CB 1E 0256
        gbc.setState(0x9679, 0xc015, 0xb9b0, 0x92c0, 0x91da, 0x97ff, 0x1, 0x1);
        gbc.writeMem(0x9679, { 0xcb, 0x1e });
        gbc.writeMem(0x97ff, { 0xc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc015, gbc.sp());
        EXPECT(0x967b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9679));
        EXPECT(0x1e, gbc.readMem(0x967a));
        EXPECT(0x86, gbc.readMem(0x97ff));
        // CB 1E 0257
        gbc.setState(0x1789, 0x600b, 0xe730, 0x755d, 0xa0a7, 0xd95e, 0x1, 0x0);
        gbc.writeMem(0x1789, { 0xcb, 0x1e });
        gbc.writeMem(0xd95e, { 0x32 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x600b, gbc.sp());
        EXPECT(0x178b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd95e));
        // CB 1E 025A
        gbc.setState(0xa076, 0x8ed5, 0x98a0, 0x3d13, 0x35c9, 0xe1fb, 0x0, 0x1);
        gbc.writeMem(0xa076, { 0xcb, 0x1e });
        gbc.writeMem(0xe1fb, { 0x11 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8ed5, gbc.sp());
        EXPECT(0xa078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa076));
        EXPECT(0x1e, gbc.readMem(0xa077));
        EXPECT(0x8, gbc.readMem(0xe1fb));
        // CB 1E 025C
        gbc.setState(0xa7a3, 0xafe8, 0x5c60, 0xbb5f, 0xdcec, 0xd4e8, 0x0, 0x0);
        gbc.writeMem(0xa7a3, { 0xcb, 0x1e });
        gbc.writeMem(0xd4e8, { 0x27 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xafe8, gbc.sp());
        EXPECT(0xa7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a3));
        EXPECT(0x1e, gbc.readMem(0xa7a4));
        EXPECT(0x13, gbc.readMem(0xd4e8));
        // CB 1E 0261
        gbc.setState(0x39db, 0x46da, 0xfad0, 0xedd5, 0xe765, 0xc724, 0x0, 0x0);
        gbc.writeMem(0x39db, { 0xcb, 0x1e });
        gbc.writeMem(0xc724, { 0x5a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x46da, gbc.sp());
        EXPECT(0x39dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xc724));
        // CB 1E 0262
        gbc.setState(0xa36c, 0x8494, 0xd490, 0x3df7, 0xbca6, 0xc88b, 0x1, 0x0);
        gbc.writeMem(0xa36c, { 0xcb, 0x1e });
        gbc.writeMem(0xc88b, { 0x22 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8494, gbc.sp());
        EXPECT(0xa36e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36c));
        EXPECT(0x1e, gbc.readMem(0xa36d));
        EXPECT(0x91, gbc.readMem(0xc88b));
        // CB 1E 0263
        gbc.setState(0x3674, 0x29fa, 0xf40, 0xe73d, 0x7abe, 0xbe07, 0x1, 0x1);
        gbc.writeMem(0x3674, { 0xcb, 0x1e });
        gbc.writeMem(0xbe07, { 0x60 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x29fa, gbc.sp());
        EXPECT(0x3676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xbe07));
        // CB 1E 0265
        gbc.setState(0xa892, 0xc6b0, 0xf9f0, 0xf851, 0xe274, 0xb9bf, 0x0, 0x0);
        gbc.writeMem(0xa892, { 0xcb, 0x1e });
        gbc.writeMem(0xb9bf, { 0xbf });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc6b0, gbc.sp());
        EXPECT(0xa894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa892));
        EXPECT(0x1e, gbc.readMem(0xa893));
        EXPECT(0xdf, gbc.readMem(0xb9bf));
        // CB 1E 0266
        gbc.setState(0xd042, 0xff26, 0x1560, 0xaa13, 0xefdf, 0x9fac, 0x0, 0x1);
        gbc.writeMem(0x9fac, { 0x48 });
        gbc.writeMem(0xd042, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xff26, gbc.sp());
        EXPECT(0xd044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x9fac));
        EXPECT(0xcb, gbc.readMem(0xd042));
        EXPECT(0x1e, gbc.readMem(0xd043));
        // CB 1E 0268
        gbc.setState(0x1f60, 0x3431, 0x31f0, 0x9452, 0x39e0, 0xcafe, 0x1, 0x1);
        gbc.writeMem(0x1f60, { 0xcb, 0x1e });
        gbc.writeMem(0xcafe, { 0xdf });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3431, gbc.sp());
        EXPECT(0x1f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xcafe));
        // CB 1E 026D
        gbc.setState(0x4668, 0x5906, 0x60, 0x29ce, 0x9d8f, 0xab2c, 0x0, 0x1);
        gbc.writeMem(0x4668, { 0xcb, 0x1e });
        gbc.writeMem(0xab2c, { 0xea });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5906, gbc.sp());
        EXPECT(0x466a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xab2c));
        // CB 1E 026E
        gbc.setState(0x8725, 0x7812, 0x5120, 0x1aa9, 0xcfba, 0x8a5b, 0x0, 0x0);
        gbc.writeMem(0x8725, { 0xcb, 0x1e });
        gbc.writeMem(0x8a5b, { 0xfa });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7812, gbc.sp());
        EXPECT(0x8727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8725));
        EXPECT(0x1e, gbc.readMem(0x8726));
        EXPECT(0x7d, gbc.readMem(0x8a5b));
        // CB 1E 0270
        gbc.setState(0x9c71, 0x7401, 0x4940, 0xc6ef, 0x9a36, 0xca5b, 0x1, 0x1);
        gbc.writeMem(0x9c71, { 0xcb, 0x1e });
        gbc.writeMem(0xca5b, { 0xd5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7401, gbc.sp());
        EXPECT(0x9c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c71));
        EXPECT(0x1e, gbc.readMem(0x9c72));
        EXPECT(0x6a, gbc.readMem(0xca5b));
        // CB 1E 0272
        gbc.setState(0x4f8d, 0x421a, 0x1920, 0x2938, 0xf9bc, 0xd3a9, 0x0, 0x0);
        gbc.writeMem(0x4f8d, { 0xcb, 0x1e });
        gbc.writeMem(0xd3a9, { 0xa8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x421a, gbc.sp());
        EXPECT(0x4f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xd3a9));
        // CB 1E 0274
        gbc.setState(0xdc6b, 0x2795, 0xf6e0, 0xb194, 0x9134, 0x9d3b, 0x0, 0x1);
        gbc.writeMem(0x9d3b, { 0x0 });
        gbc.writeMem(0xdc6b, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2795, gbc.sp());
        EXPECT(0xdc6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9d3b));
        EXPECT(0xcb, gbc.readMem(0xdc6b));
        EXPECT(0x1e, gbc.readMem(0xdc6c));
        // CB 1E 0275
        gbc.setState(0xafa4, 0x1f5c, 0x2400, 0xbf31, 0xc02d, 0xf5f4, 0x1, 0x0);
        gbc.writeMem(0xafa4, { 0xcb, 0x1e });
        gbc.writeMem(0xf5f4, { 0xcc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1f5c, gbc.sp());
        EXPECT(0xafa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa4));
        EXPECT(0x1e, gbc.readMem(0xafa5));
        EXPECT(0x66, gbc.readMem(0xf5f4));
        // CB 1E 027A
        gbc.setState(0x4714, 0x51cb, 0xd090, 0xaf01, 0xb8a5, 0x8316, 0x1, 0x0);
        gbc.writeMem(0x4714, { 0xcb, 0x1e });
        gbc.writeMem(0x8316, { 0xda });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x51cb, gbc.sp());
        EXPECT(0x4716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8316));
        // CB 1E 027B
        gbc.setState(0xaad, 0xa32f, 0xc1a0, 0xbd82, 0x8bc4, 0xea25, 0x1, 0x1);
        gbc.writeMem(0xaad, { 0xcb, 0x1e });
        gbc.writeMem(0xea25, { 0x28 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa32f, gbc.sp());
        EXPECT(0xaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xea25));
        // CB 1E 027F
        gbc.setState(0xaa50, 0xb93d, 0x9690, 0x557d, 0xbde8, 0x9843, 0x1, 0x1);
        gbc.writeMem(0x9843, { 0xaa });
        gbc.writeMem(0xaa50, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb93d, gbc.sp());
        EXPECT(0xaa52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9843));
        EXPECT(0xcb, gbc.readMem(0xaa50));
        EXPECT(0x1e, gbc.readMem(0xaa51));
        // CB 1E 0283
        gbc.setState(0x46fb, 0xd165, 0x1c60, 0xbccb, 0xd7d2, 0xf5ba, 0x0, 0x0);
        gbc.writeMem(0x46fb, { 0xcb, 0x1e });
        gbc.writeMem(0xf5ba, { 0x51 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd165, gbc.sp());
        EXPECT(0x46fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xf5ba));
        // CB 1E 0284
        gbc.setState(0xb717, 0x5c23, 0xcc10, 0x6a77, 0x6091, 0x9356, 0x0, 0x1);
        gbc.writeMem(0x9356, { 0xab });
        gbc.writeMem(0xb717, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5c23, gbc.sp());
        EXPECT(0xb719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9356));
        EXPECT(0xcb, gbc.readMem(0xb717));
        EXPECT(0x1e, gbc.readMem(0xb718));
        // CB 1E 028C
        gbc.setState(0x3a5f, 0x70bf, 0x7e10, 0xcb5, 0xc70a, 0xcf9a, 0x1, 0x0);
        gbc.writeMem(0x3a5f, { 0xcb, 0x1e });
        gbc.writeMem(0xcf9a, { 0xb3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x70bf, gbc.sp());
        EXPECT(0x3a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcf9a));
        // CB 1E 028D
        gbc.setState(0x1a7c, 0x9e01, 0xfb0, 0xf48c, 0x321b, 0xbd2b, 0x1, 0x1);
        gbc.writeMem(0x1a7c, { 0xcb, 0x1e });
        gbc.writeMem(0xbd2b, { 0x23 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9e01, gbc.sp());
        EXPECT(0x1a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbd2b));
        // CB 1E 028E
        gbc.setState(0x2fa1, 0x6f0f, 0xaca0, 0xf9dd, 0xa4ef, 0x9480, 0x1, 0x1);
        gbc.writeMem(0x2fa1, { 0xcb, 0x1e });
        gbc.writeMem(0x9480, { 0xb8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6f0f, gbc.sp());
        EXPECT(0x2fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x9480));
        // CB 1E 028F
        gbc.setState(0x1cb, 0xbb25, 0x4640, 0x247c, 0x9c57, 0x9d1e, 0x0, 0x0);
        gbc.writeMem(0x1cb, { 0xcb, 0x1e });
        gbc.writeMem(0x9d1e, { 0x2a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbb25, gbc.sp());
        EXPECT(0x1cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9d1e));
        // CB 1E 0291
        gbc.setState(0x9cbe, 0xd6e, 0x47b0, 0xcb7, 0xf030, 0x8b46, 0x1, 0x1);
        gbc.writeMem(0x8b46, { 0x45 });
        gbc.writeMem(0x9cbe, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd6e, gbc.sp());
        EXPECT(0x9cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8b46));
        EXPECT(0xcb, gbc.readMem(0x9cbe));
        EXPECT(0x1e, gbc.readMem(0x9cbf));
        // CB 1E 0294
        gbc.setState(0xa77c, 0x80bc, 0xb7b0, 0x58a1, 0xb9d4, 0xc05e, 0x1, 0x1);
        gbc.writeMem(0xa77c, { 0xcb, 0x1e });
        gbc.writeMem(0xc05e, { 0xea });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x80bc, gbc.sp());
        EXPECT(0xa77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77c));
        EXPECT(0x1e, gbc.readMem(0xa77d));
        EXPECT(0xf5, gbc.readMem(0xc05e));
        // CB 1E 0297
        gbc.setState(0x6ec7, 0x5a5c, 0x12c0, 0x12d2, 0x6949, 0xa93a, 0x0, 0x1);
        gbc.writeMem(0x6ec7, { 0xcb, 0x1e });
        gbc.writeMem(0xa93a, { 0xa3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5a5c, gbc.sp());
        EXPECT(0x6ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa93a));
        // CB 1E 029C
        gbc.setState(0x4cea, 0x539, 0x68f0, 0xd441, 0xd337, 0xd2a2, 0x1, 0x0);
        gbc.writeMem(0x4cea, { 0xcb, 0x1e });
        gbc.writeMem(0xd2a2, { 0xa5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x539, gbc.sp());
        EXPECT(0x4cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xd2a2));
        // CB 1E 029E
        gbc.setState(0x816d, 0x5382, 0x47b0, 0xbfd1, 0xa18, 0x2dff, 0x0, 0x0);
        gbc.writeMem(0x2dff, { 0xff });
        gbc.writeMem(0x816d, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5382, gbc.sp());
        EXPECT(0x816f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816d));
        EXPECT(0x1e, gbc.readMem(0x816e));
        // CB 1E 02A0
        gbc.setState(0xb6fa, 0xd7a1, 0x75e0, 0x28aa, 0xe456, 0x9945, 0x0, 0x1);
        gbc.writeMem(0x9945, { 0x9d });
        gbc.writeMem(0xb6fa, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd7a1, gbc.sp());
        EXPECT(0xb6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9945));
        EXPECT(0xcb, gbc.readMem(0xb6fa));
        EXPECT(0x1e, gbc.readMem(0xb6fb));
        // CB 1E 02A1
        gbc.setState(0x7766, 0xa14c, 0xe450, 0xd2c9, 0x7f04, 0xabbf, 0x1, 0x0);
        gbc.writeMem(0x7766, { 0xcb, 0x1e });
        gbc.writeMem(0xabbf, { 0x65 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa14c, gbc.sp());
        EXPECT(0x7768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xabbf));
        // CB 1E 02A2
        gbc.setState(0xb107, 0xb3e2, 0x39a0, 0x91ae, 0x50ca, 0xd483, 0x0, 0x0);
        gbc.writeMem(0xb107, { 0xcb, 0x1e });
        gbc.writeMem(0xd483, { 0xe3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb3e2, gbc.sp());
        EXPECT(0xb109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb107));
        EXPECT(0x1e, gbc.readMem(0xb108));
        EXPECT(0x71, gbc.readMem(0xd483));
        // CB 1E 02A3
        gbc.setState(0xdd96, 0xf117, 0x7420, 0x541f, 0xfa9a, 0xee29, 0x0, 0x1);
        gbc.writeMem(0xdd96, { 0xcb, 0x1e });
        gbc.writeMem(0xee29, { 0xb6 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf117, gbc.sp());
        EXPECT(0xdd98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd96));
        EXPECT(0x1e, gbc.readMem(0xdd97));
        EXPECT(0x5b, gbc.readMem(0xee29));
        // CB 1E 02A4
        gbc.setState(0x38d5, 0x7bfd, 0xb820, 0x7627, 0xecce, 0x8243, 0x0, 0x1);
        gbc.writeMem(0x38d5, { 0xcb, 0x1e });
        gbc.writeMem(0x8243, { 0x3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7bfd, gbc.sp());
        EXPECT(0x38d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x8243));
        // CB 1E 02A7
        gbc.setState(0x3ee3, 0x9d99, 0x9280, 0xf1ad, 0x48ed, 0xca17, 0x1, 0x1);
        gbc.writeMem(0x3ee3, { 0xcb, 0x1e });
        gbc.writeMem(0xca17, { 0x3e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9d99, gbc.sp());
        EXPECT(0x3ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xca17));
        // CB 1E 02A8
        gbc.setState(0x14c8, 0x5cd4, 0x2980, 0x4622, 0x7857, 0xc5a1, 0x0, 0x1);
        gbc.writeMem(0x14c8, { 0xcb, 0x1e });
        gbc.writeMem(0xc5a1, { 0x30 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5cd4, gbc.sp());
        EXPECT(0x14ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xc5a1));
        // CB 1E 02AA
        gbc.setState(0xe1ad, 0x4339, 0x3ab0, 0xc1c5, 0xf4f6, 0xcf74, 0x1, 0x0);
        gbc.writeMem(0xcf74, { 0x87 });
        gbc.writeMem(0xe1ad, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4339, gbc.sp());
        EXPECT(0xe1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xcf74));
        EXPECT(0xcb, gbc.readMem(0xe1ad));
        EXPECT(0x1e, gbc.readMem(0xe1ae));
        // CB 1E 02AC
        gbc.setState(0x98ef, 0xcc9e, 0x350, 0xa133, 0x5e9d, 0xc476, 0x1, 0x1);
        gbc.writeMem(0x98ef, { 0xcb, 0x1e });
        gbc.writeMem(0xc476, { 0xc0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcc9e, gbc.sp());
        EXPECT(0x98f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ef));
        EXPECT(0x1e, gbc.readMem(0x98f0));
        EXPECT(0xe0, gbc.readMem(0xc476));
        // CB 1E 02AF
        gbc.setState(0xc3d3, 0x510e, 0xdf50, 0xb3dd, 0x324e, 0xf97b, 0x1, 0x0);
        gbc.writeMem(0xc3d3, { 0xcb, 0x1e });
        gbc.writeMem(0xf97b, { 0x96 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x510e, gbc.sp());
        EXPECT(0xc3d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d3));
        EXPECT(0x1e, gbc.readMem(0xc3d4));
        EXPECT(0xcb, gbc.readMem(0xf97b));
        // CB 1E 02B3
        gbc.setState(0x8008, 0xd39c, 0xdff0, 0xe580, 0xf604, 0xd50b, 0x0, 0x1);
        gbc.writeMem(0x8008, { 0xcb, 0x1e });
        gbc.writeMem(0xd50b, { 0x3d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd39c, gbc.sp());
        EXPECT(0x800a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8008));
        EXPECT(0x1e, gbc.readMem(0x8009));
        EXPECT(0x9e, gbc.readMem(0xd50b));
        // CB 1E 02B7
        gbc.setState(0x4b98, 0xf0e9, 0xdc70, 0x9d2f, 0x128d, 0xf208, 0x1, 0x0);
        gbc.writeMem(0x4b98, { 0xcb, 0x1e });
        gbc.writeMem(0xf208, { 0x16 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf0e9, gbc.sp());
        EXPECT(0x4b9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xf208));
        // CB 1E 02B9
        gbc.setState(0x9b50, 0x98d2, 0x6520, 0xaaab, 0xa0e7, 0x857d, 0x0, 0x0);
        gbc.writeMem(0x857d, { 0x3d });
        gbc.writeMem(0x9b50, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x98d2, gbc.sp());
        EXPECT(0x9b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x857d));
        EXPECT(0xcb, gbc.readMem(0x9b50));
        EXPECT(0x1e, gbc.readMem(0x9b51));
        // CB 1E 02BB
        gbc.setState(0x31c8, 0x33a4, 0xe9a0, 0xa296, 0xabeb, 0xa25c, 0x0, 0x0);
        gbc.writeMem(0x31c8, { 0xcb, 0x1e });
        gbc.writeMem(0xa25c, { 0xcf });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x33a4, gbc.sp());
        EXPECT(0x31ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xa25c));
        // CB 1E 02BC
        gbc.setState(0x67ac, 0xbab8, 0xcc30, 0x531f, 0xee7a, 0xf309, 0x1, 0x0);
        gbc.writeMem(0x67ac, { 0xcb, 0x1e });
        gbc.writeMem(0xf309, { 0x9c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbab8, gbc.sp());
        EXPECT(0x67ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xf309));
        // CB 1E 02BE
        gbc.setState(0xb740, 0x8d51, 0x64d0, 0x31cc, 0xc0d4, 0xef3a, 0x0, 0x1);
        gbc.writeMem(0xb740, { 0xcb, 0x1e });
        gbc.writeMem(0xef3a, { 0x25 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8d51, gbc.sp());
        EXPECT(0xb742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb740));
        EXPECT(0x1e, gbc.readMem(0xb741));
        EXPECT(0x92, gbc.readMem(0xef3a));
        // CB 1E 02BF
        gbc.setState(0x7811, 0xe986, 0xc410, 0xeba6, 0xe5a0, 0xceb2, 0x1, 0x0);
        gbc.writeMem(0x7811, { 0xcb, 0x1e });
        gbc.writeMem(0xceb2, { 0x11 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe986, gbc.sp());
        EXPECT(0x7813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xceb2));
        // CB 1E 02C5
        gbc.setState(0x54e2, 0x928c, 0xfd0, 0xc460, 0xcd61, 0xdb89, 0x1, 0x1);
        gbc.writeMem(0x54e2, { 0xcb, 0x1e });
        gbc.writeMem(0xdb89, { 0x88 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x928c, gbc.sp());
        EXPECT(0x54e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xdb89));
        // CB 1E 02CA
        gbc.setState(0x2a18, 0x816a, 0x8320, 0xefa0, 0x277f, 0xdd24, 0x1, 0x0);
        gbc.writeMem(0x2a18, { 0xcb, 0x1e });
        gbc.writeMem(0xdd24, { 0xa6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x816a, gbc.sp());
        EXPECT(0x2a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdd24));
        // CB 1E 02CB
        gbc.setState(0x455a, 0x830a, 0xd430, 0xab05, 0x8e36, 0xf165, 0x0, 0x0);
        gbc.writeMem(0x455a, { 0xcb, 0x1e });
        gbc.writeMem(0xf165, { 0xf });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x830a, gbc.sp());
        EXPECT(0x455c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xf165));
        // CB 1E 02CC
        gbc.setState(0x56e4, 0xc1d4, 0x8700, 0x1bf6, 0x5220, 0xcd65, 0x1, 0x1);
        gbc.writeMem(0x56e4, { 0xcb, 0x1e });
        gbc.writeMem(0xcd65, { 0x54 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc1d4, gbc.sp());
        EXPECT(0x56e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xcd65));
        // CB 1E 02CD
        gbc.setState(0xe59c, 0x93e1, 0x9670, 0xdd9e, 0x8cfc, 0xa1e0, 0x0, 0x0);
        gbc.writeMem(0xa1e0, { 0xad });
        gbc.writeMem(0xe59c, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x93e1, gbc.sp());
        EXPECT(0xe59e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa1e0));
        EXPECT(0xcb, gbc.readMem(0xe59c));
        EXPECT(0x1e, gbc.readMem(0xe59d));
        // CB 1E 02CF
        gbc.setState(0x46c1, 0xd6f2, 0xa3e0, 0x3307, 0xf0a8, 0xadb5, 0x0, 0x1);
        gbc.writeMem(0x46c1, { 0xcb, 0x1e });
        gbc.writeMem(0xadb5, { 0xdb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd6f2, gbc.sp());
        EXPECT(0x46c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xadb5));
        // CB 1E 02D0
        gbc.setState(0xaca0, 0x7413, 0xe560, 0x920d, 0x2f27, 0xd258, 0x0, 0x1);
        gbc.writeMem(0xaca0, { 0xcb, 0x1e });
        gbc.writeMem(0xd258, { 0x59 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7413, gbc.sp());
        EXPECT(0xaca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca0));
        EXPECT(0x1e, gbc.readMem(0xaca1));
        EXPECT(0x2c, gbc.readMem(0xd258));
        // CB 1E 02D1
        gbc.setState(0x1c05, 0xdaa1, 0xb6c0, 0x15eb, 0xfe06, 0xaa46, 0x0, 0x0);
        gbc.writeMem(0x1c05, { 0xcb, 0x1e });
        gbc.writeMem(0xaa46, { 0x83 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdaa1, gbc.sp());
        EXPECT(0x1c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xaa46));
        // CB 1E 02D2
        gbc.setState(0x3f95, 0xfb53, 0x7ac0, 0xeb50, 0x83a1, 0xff06, 0x1, 0x0);
        gbc.writeMem(0x3f95, { 0xcb, 0x1e });
        gbc.writeMem(0xff06, { 0xf4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfb53, gbc.sp());
        EXPECT(0x3f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xff06));
        // CB 1E 02D8
        gbc.setState(0xc69d, 0x981d, 0xe80, 0x8f3d, 0x571f, 0xb379, 0x1, 0x1);
        gbc.writeMem(0xb379, { 0x3f });
        gbc.writeMem(0xc69d, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x981d, gbc.sp());
        EXPECT(0xc69f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xb379));
        EXPECT(0xcb, gbc.readMem(0xc69d));
        EXPECT(0x1e, gbc.readMem(0xc69e));
        // CB 1E 02DC
        gbc.setState(0x526d, 0xb0e, 0x340, 0xd541, 0xfebd, 0xa22c, 0x0, 0x1);
        gbc.writeMem(0x526d, { 0xcb, 0x1e });
        gbc.writeMem(0xa22c, { 0x8c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb0e, gbc.sp());
        EXPECT(0x526f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xa22c));
        // CB 1E 02DE
        gbc.setState(0xe1e7, 0x3b82, 0x89d0, 0x5d87, 0xb2ee, 0xa7b8, 0x0, 0x1);
        gbc.writeMem(0xa7b8, { 0xb2 });
        gbc.writeMem(0xe1e7, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3b82, gbc.sp());
        EXPECT(0xe1e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa7b8));
        EXPECT(0xcb, gbc.readMem(0xe1e7));
        EXPECT(0x1e, gbc.readMem(0xe1e8));
        // CB 1E 02E0
        gbc.setState(0x3812, 0x9806, 0xa640, 0x4ed9, 0x2cea, 0xee86, 0x1, 0x1);
        gbc.writeMem(0x3812, { 0xcb, 0x1e });
        gbc.writeMem(0xee86, { 0x44 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9806, gbc.sp());
        EXPECT(0x3814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xee86));
        // CB 1E 02E3
        gbc.setState(0x6866, 0x739c, 0xd210, 0x8b80, 0x6dae, 0x9eb3, 0x0, 0x1);
        gbc.writeMem(0x6866, { 0xcb, 0x1e });
        gbc.writeMem(0x9eb3, { 0xcd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x739c, gbc.sp());
        EXPECT(0x6868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9eb3));
        // CB 1E 02E6
        gbc.setState(0xbad, 0x6dff, 0x1510, 0x5ed, 0xeb88, 0xa53e, 0x0, 0x1);
        gbc.writeMem(0xbad, { 0xcb, 0x1e });
        gbc.writeMem(0xa53e, { 0x98 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6dff, gbc.sp());
        EXPECT(0xbaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xa53e));
        // CB 1E 02E7
        gbc.setState(0x74b, 0x1022, 0x3ef0, 0xf018, 0xb06c, 0xd0eb, 0x1, 0x0);
        gbc.writeMem(0x74b, { 0xcb, 0x1e });
        gbc.writeMem(0xd0eb, { 0xeb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1022, gbc.sp());
        EXPECT(0x74d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd0eb));
        // CB 1E 02E8
        gbc.setState(0xb9e9, 0x752d, 0x26b0, 0xbff4, 0x7b80, 0xcf92, 0x0, 0x0);
        gbc.writeMem(0xb9e9, { 0xcb, 0x1e });
        gbc.writeMem(0xcf92, { 0x35 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x752d, gbc.sp());
        EXPECT(0xb9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e9));
        EXPECT(0x1e, gbc.readMem(0xb9ea));
        EXPECT(0x9a, gbc.readMem(0xcf92));
        // CB 1E 02E9
        gbc.setState(0xd9b2, 0xf14a, 0x17c0, 0xa1b3, 0x5908, 0xd57f, 0x1, 0x0);
        gbc.writeMem(0xd57f, { 0x36 });
        gbc.writeMem(0xd9b2, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf14a, gbc.sp());
        EXPECT(0xd9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xd57f));
        EXPECT(0xcb, gbc.readMem(0xd9b2));
        EXPECT(0x1e, gbc.readMem(0xd9b3));
        // CB 1E 02EA
        gbc.setState(0x6cdc, 0x5dbb, 0x76c0, 0x80ac, 0x1939, 0x8b31, 0x1, 0x1);
        gbc.writeMem(0x6cdc, { 0xcb, 0x1e });
        gbc.writeMem(0x8b31, { 0x53 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5dbb, gbc.sp());
        EXPECT(0x6cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8b31));
        // CB 1E 02EF
        gbc.setState(0xc989, 0xf7ad, 0xada0, 0xa0c4, 0xf678, 0xcf24, 0x0, 0x1);
        gbc.writeMem(0xc989, { 0xcb, 0x1e });
        gbc.writeMem(0xcf24, { 0xde });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf7ad, gbc.sp());
        EXPECT(0xc98b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc989));
        EXPECT(0x1e, gbc.readMem(0xc98a));
        EXPECT(0x6f, gbc.readMem(0xcf24));
        // CB 1E 02F5
        gbc.setState(0xefdc, 0xc0d4, 0x8b40, 0x11aa, 0xc91b, 0xbf94, 0x0, 0x0);
        gbc.writeMem(0xbf94, { 0xb9 });
        gbc.writeMem(0xefdc, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc0d4, gbc.sp());
        EXPECT(0xefde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xbf94));
        EXPECT(0xcb, gbc.readMem(0xefdc));
        EXPECT(0x1e, gbc.readMem(0xefdd));
        // CB 1E 02F9
        gbc.setState(0xcc58, 0x8bee, 0xebb0, 0x2497, 0x225e, 0xa06c, 0x0, 0x1);
        gbc.writeMem(0xa06c, { 0x8a });
        gbc.writeMem(0xcc58, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8bee, gbc.sp());
        EXPECT(0xcc5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa06c));
        EXPECT(0xcb, gbc.readMem(0xcc58));
        EXPECT(0x1e, gbc.readMem(0xcc59));
        // CB 1E 02FC
        gbc.setState(0x9b3b, 0x7908, 0x6ee0, 0x98aa, 0x6918, 0xb7f9, 0x1, 0x1);
        gbc.writeMem(0x9b3b, { 0xcb, 0x1e });
        gbc.writeMem(0xb7f9, { 0xb8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7908, gbc.sp());
        EXPECT(0x9b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b3b));
        EXPECT(0x1e, gbc.readMem(0x9b3c));
        EXPECT(0x5c, gbc.readMem(0xb7f9));
        // CB 1E 02FD
        gbc.setState(0xb539, 0x1364, 0x7100, 0x2bc8, 0xeb5e, 0xf486, 0x0, 0x0);
        gbc.writeMem(0xb539, { 0xcb, 0x1e });
        gbc.writeMem(0xf486, { 0x95 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1364, gbc.sp());
        EXPECT(0xb53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb539));
        EXPECT(0x1e, gbc.readMem(0xb53a));
        EXPECT(0x4a, gbc.readMem(0xf486));
        // CB 1E 02FE
        gbc.setState(0x8a7f, 0xc1ee, 0x5650, 0xfca5, 0xbbe6, 0xd081, 0x1, 0x1);
        gbc.writeMem(0x8a7f, { 0xcb, 0x1e });
        gbc.writeMem(0xd081, { 0x54 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc1ee, gbc.sp());
        EXPECT(0x8a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7f));
        EXPECT(0x1e, gbc.readMem(0x8a80));
        EXPECT(0xaa, gbc.readMem(0xd081));
        // CB 1E 02FF
        gbc.setState(0x6ee7, 0x7c87, 0x8480, 0xb459, 0xb0bd, 0x956c, 0x0, 0x0);
        gbc.writeMem(0x6ee7, { 0xcb, 0x1e });
        gbc.writeMem(0x956c, { 0xc1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7c87, gbc.sp());
        EXPECT(0x6ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x956c));
        // CB 1E 0300
        gbc.setState(0xb103, 0xf29f, 0x83f0, 0xe050, 0xcc0e, 0xe716, 0x0, 0x0);
        gbc.writeMem(0xb103, { 0xcb, 0x1e });
        gbc.writeMem(0xe716, { 0x30 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf29f, gbc.sp());
        EXPECT(0xb105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb103));
        EXPECT(0x1e, gbc.readMem(0xb104));
        EXPECT(0x98, gbc.readMem(0xe716));
        // CB 1E 0301
        gbc.setState(0x8c7e, 0x221d, 0xc0a0, 0x6f0a, 0x1683, 0xf71f, 0x1, 0x1);
        gbc.writeMem(0x8c7e, { 0xcb, 0x1e });
        gbc.writeMem(0xf71f, { 0xb3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x221d, gbc.sp());
        EXPECT(0x8c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c7e));
        EXPECT(0x1e, gbc.readMem(0x8c7f));
        EXPECT(0x59, gbc.readMem(0xf71f));
        // CB 1E 0302
        gbc.setState(0x6cce, 0x2f60, 0xebe0, 0x9bd3, 0x7ac, 0xbebb, 0x0, 0x0);
        gbc.writeMem(0x6cce, { 0xcb, 0x1e });
        gbc.writeMem(0xbebb, { 0x8b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2f60, gbc.sp());
        EXPECT(0x6cd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xbebb));
        // CB 1E 0304
        gbc.setState(0x117e, 0x18fd, 0xe020, 0xbdb9, 0x4d1f, 0xf9e3, 0x1, 0x0);
        gbc.writeMem(0x117e, { 0xcb, 0x1e });
        gbc.writeMem(0xf9e3, { 0x69 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x18fd, gbc.sp());
        EXPECT(0x1180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xf9e3));
        // CB 1E 0307
        gbc.setState(0x76a3, 0xb9df, 0x3b70, 0xe9e0, 0x5003, 0xa676, 0x0, 0x0);
        gbc.writeMem(0x76a3, { 0xcb, 0x1e });
        gbc.writeMem(0xa676, { 0x40 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb9df, gbc.sp());
        EXPECT(0x76a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa676));
        // CB 1E 0309
        gbc.setState(0x782c, 0xac39, 0x5e30, 0x43f8, 0x9124, 0xb0ea, 0x1, 0x0);
        gbc.writeMem(0x782c, { 0xcb, 0x1e });
        gbc.writeMem(0xb0ea, { 0xee });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xac39, gbc.sp());
        EXPECT(0x782e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb0ea));
        // CB 1E 030B
        gbc.setState(0xd647, 0xedad, 0x8900, 0xdf9e, 0xac7, 0x8c48, 0x1, 0x1);
        gbc.writeMem(0x8c48, { 0xab });
        gbc.writeMem(0xd647, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xedad, gbc.sp());
        EXPECT(0xd649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8c48));
        EXPECT(0xcb, gbc.readMem(0xd647));
        EXPECT(0x1e, gbc.readMem(0xd648));
        // CB 1E 030C
        gbc.setState(0x5061, 0xb6b7, 0xd10, 0x605f, 0xe448, 0xd3cb, 0x1, 0x1);
        gbc.writeMem(0x5061, { 0xcb, 0x1e });
        gbc.writeMem(0xd3cb, { 0xe3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb6b7, gbc.sp());
        EXPECT(0x5063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd3cb));
        // CB 1E 030E
        gbc.setState(0x2db2, 0x2915, 0x9250, 0x375e, 0x818b, 0xc7d3, 0x1, 0x1);
        gbc.writeMem(0x2db2, { 0xcb, 0x1e });
        gbc.writeMem(0xc7d3, { 0xc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2915, gbc.sp());
        EXPECT(0x2db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc7d3));
        // CB 1E 030F
        gbc.setState(0x4c74, 0x7802, 0x5030, 0x81bf, 0x5785, 0xb336, 0x0, 0x1);
        gbc.writeMem(0x4c74, { 0xcb, 0x1e });
        gbc.writeMem(0xb336, { 0x7f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7802, gbc.sp());
        EXPECT(0x4c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb336));
        // CB 1E 0311
        gbc.setState(0x13fe, 0xff63, 0xe0b0, 0x93c8, 0x423a, 0xb9d0, 0x1, 0x1);
        gbc.writeMem(0x13fe, { 0xcb, 0x1e });
        gbc.writeMem(0xb9d0, { 0x19 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xff63, gbc.sp());
        EXPECT(0x1400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb9d0));
        // CB 1E 0317
        gbc.setState(0x421a, 0x3881, 0xca40, 0xa353, 0x221b, 0x8295, 0x0, 0x1);
        gbc.writeMem(0x421a, { 0xcb, 0x1e });
        gbc.writeMem(0x8295, { 0xd9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3881, gbc.sp());
        EXPECT(0x421c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8295));
        // CB 1E 0318
        gbc.setState(0x5751, 0xeb71, 0xeb20, 0x36e9, 0xc9a1, 0x9c67, 0x1, 0x1);
        gbc.writeMem(0x5751, { 0xcb, 0x1e });
        gbc.writeMem(0x9c67, { 0x94 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xeb71, gbc.sp());
        EXPECT(0x5753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x9c67));
        // CB 1E 0319
        gbc.setState(0x3e33, 0x39c6, 0xd340, 0x219, 0x7eda, 0x8de0, 0x0, 0x1);
        gbc.writeMem(0x3e33, { 0xcb, 0x1e });
        gbc.writeMem(0x8de0, { 0x10 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x39c6, gbc.sp());
        EXPECT(0x3e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x8de0));
        // CB 1E 031B
        gbc.setState(0xa1f7, 0xa52a, 0x7de0, 0xf263, 0x6a20, 0xbc91, 0x0, 0x0);
        gbc.writeMem(0xa1f7, { 0xcb, 0x1e });
        gbc.writeMem(0xbc91, { 0x71 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa52a, gbc.sp());
        EXPECT(0xa1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f7));
        EXPECT(0x1e, gbc.readMem(0xa1f8));
        EXPECT(0x38, gbc.readMem(0xbc91));
        // CB 1E 031E
        gbc.setState(0xe096, 0x378d, 0xba80, 0xff00, 0x8561, 0xb3ac, 0x0, 0x0);
        gbc.writeMem(0xb3ac, { 0x14 });
        gbc.writeMem(0xe096, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x378d, gbc.sp());
        EXPECT(0xe098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb3ac));
        EXPECT(0xcb, gbc.readMem(0xe096));
        EXPECT(0x1e, gbc.readMem(0xe097));
        // CB 1E 031F
        gbc.setState(0x6215, 0xe6ed, 0x9db0, 0x347f, 0x7f80, 0xcd3a, 0x0, 0x0);
        gbc.writeMem(0x6215, { 0xcb, 0x1e });
        gbc.writeMem(0xcd3a, { 0xb7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe6ed, gbc.sp());
        EXPECT(0x6217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xcd3a));
        // CB 1E 0320
        gbc.setState(0x5fbd, 0x7eae, 0x7300, 0x9335, 0xe122, 0xcb7f, 0x1, 0x0);
        gbc.writeMem(0x5fbd, { 0xcb, 0x1e });
        gbc.writeMem(0xcb7f, { 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7eae, gbc.sp());
        EXPECT(0x5fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcb7f));
        // CB 1E 0328
        gbc.setState(0x1bdb, 0xa4e4, 0xca50, 0xd6fb, 0x65d6, 0xf9a3, 0x1, 0x0);
        gbc.writeMem(0x1bdb, { 0xcb, 0x1e });
        gbc.writeMem(0xf9a3, { 0x30 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa4e4, gbc.sp());
        EXPECT(0x1bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xf9a3));
        // CB 1E 032B
        gbc.setState(0x2249, 0x3c57, 0x250, 0x5701, 0xc1b8, 0x9ad7, 0x0, 0x1);
        gbc.writeMem(0x2249, { 0xcb, 0x1e });
        gbc.writeMem(0x9ad7, { 0x13 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3c57, gbc.sp());
        EXPECT(0x224b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9ad7));
        // CB 1E 032C
        gbc.setState(0x62da, 0x4443, 0x14e0, 0x64d6, 0xf375, 0xe071, 0x0, 0x0);
        gbc.writeMem(0x62da, { 0xcb, 0x1e });
        gbc.writeMem(0xe071, { 0xcd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4443, gbc.sp());
        EXPECT(0x62dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe071));
        // CB 1E 032E
        gbc.setState(0x3bee, 0xd5ae, 0xcd60, 0xd10a, 0x5dd3, 0xa1a7, 0x1, 0x1);
        gbc.writeMem(0x3bee, { 0xcb, 0x1e });
        gbc.writeMem(0xa1a7, { 0xc4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd5ae, gbc.sp());
        EXPECT(0x3bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xa1a7));
        // CB 1E 0330
        gbc.setState(0x59f1, 0x57e9, 0xe50, 0xdeb1, 0x7173, 0xbe51, 0x1, 0x1);
        gbc.writeMem(0x59f1, { 0xcb, 0x1e });
        gbc.writeMem(0xbe51, { 0x7e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x57e9, gbc.sp());
        EXPECT(0x59f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbe51));
        // CB 1E 0333
        gbc.setState(0x1523, 0x7d99, 0xbf80, 0x5c78, 0x718b, 0x9c1d, 0x0, 0x1);
        gbc.writeMem(0x1523, { 0xcb, 0x1e });
        gbc.writeMem(0x9c1d, { 0x73 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7d99, gbc.sp());
        EXPECT(0x1525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x9c1d));
        // CB 1E 0335
        gbc.setState(0x4946, 0xdb87, 0x9390, 0xf136, 0x9d30, 0xa142, 0x1, 0x0);
        gbc.writeMem(0x4946, { 0xcb, 0x1e });
        gbc.writeMem(0xa142, { 0x1c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdb87, gbc.sp());
        EXPECT(0x4948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xa142));
        // CB 1E 0336
        gbc.setState(0xc6e1, 0xf91a, 0x59b0, 0xe08b, 0x1957, 0xd224, 0x0, 0x0);
        gbc.writeMem(0xc6e1, { 0xcb, 0x1e });
        gbc.writeMem(0xd224, { 0x5a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf91a, gbc.sp());
        EXPECT(0xc6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e1));
        EXPECT(0x1e, gbc.readMem(0xc6e2));
        EXPECT(0xad, gbc.readMem(0xd224));
        // CB 1E 0338
        gbc.setState(0x66b2, 0xb9ca, 0x7830, 0xa981, 0x6935, 0xcb90, 0x0, 0x0);
        gbc.writeMem(0x66b2, { 0xcb, 0x1e });
        gbc.writeMem(0xcb90, { 0x29 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb9ca, gbc.sp());
        EXPECT(0x66b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcb90));
        // CB 1E 033D
        gbc.setState(0x325c, 0x39bb, 0xe0f0, 0xdaec, 0x631f, 0xc67b, 0x0, 0x0);
        gbc.writeMem(0x325c, { 0xcb, 0x1e });
        gbc.writeMem(0xc67b, { 0xb0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x39bb, gbc.sp());
        EXPECT(0x325e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xc67b));
        // CB 1E 033F
        gbc.setState(0x4e39, 0xd2d0, 0x48d0, 0x7b40, 0x2f4d, 0x96ee, 0x0, 0x1);
        gbc.writeMem(0x4e39, { 0xcb, 0x1e });
        gbc.writeMem(0x96ee, { 0x62 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd2d0, gbc.sp());
        EXPECT(0x4e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x96ee));
        // CB 1E 0340
        gbc.setState(0x43de, 0xe19f, 0x8f30, 0x943c, 0x87fb, 0x8d7d, 0x1, 0x1);
        gbc.writeMem(0x43de, { 0xcb, 0x1e });
        gbc.writeMem(0x8d7d, { 0xa4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe19f, gbc.sp());
        EXPECT(0x43e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x8d7d));
        // CB 1E 0341
        gbc.setState(0xd242, 0x76e5, 0x7d40, 0x95d8, 0xa70f, 0x8aa5, 0x1, 0x0);
        gbc.writeMem(0x8aa5, { 0x53 });
        gbc.writeMem(0xd242, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x76e5, gbc.sp());
        EXPECT(0xd244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8aa5));
        EXPECT(0xcb, gbc.readMem(0xd242));
        EXPECT(0x1e, gbc.readMem(0xd243));
        // CB 1E 0343
        gbc.setState(0x9331, 0xa280, 0xf630, 0xe129, 0xd905, 0x89bc, 0x0, 0x0);
        gbc.writeMem(0x89bc, { 0x38 });
        gbc.writeMem(0x9331, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa280, gbc.sp());
        EXPECT(0x9333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x89bc));
        EXPECT(0xcb, gbc.readMem(0x9331));
        EXPECT(0x1e, gbc.readMem(0x9332));
        // CB 1E 0346
        gbc.setState(0x9b0, 0x402a, 0xa7a0, 0x2d84, 0xe3e1, 0xd632, 0x0, 0x1);
        gbc.writeMem(0x9b0, { 0xcb, 0x1e });
        gbc.writeMem(0xd632, { 0x6a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x402a, gbc.sp());
        EXPECT(0x9b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xd632));
        // CB 1E 034B
        gbc.setState(0x138f, 0x217e, 0xed30, 0x986b, 0x9604, 0xf823, 0x1, 0x0);
        gbc.writeMem(0x138f, { 0xcb, 0x1e });
        gbc.writeMem(0xf823, { 0x49 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x217e, gbc.sp());
        EXPECT(0x1391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xf823));
        // CB 1E 034C
        gbc.setState(0x3dee, 0x58a0, 0xf7f0, 0x7d60, 0x198b, 0xb92b, 0x1, 0x0);
        gbc.writeMem(0x3dee, { 0xcb, 0x1e });
        gbc.writeMem(0xb92b, { 0x9e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x58a0, gbc.sp());
        EXPECT(0x3df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xb92b));
        // CB 1E 034D
        gbc.setState(0x2ef1, 0x99c1, 0xde0, 0xd1e9, 0xd889, 0xd648, 0x1, 0x0);
        gbc.writeMem(0x2ef1, { 0xcb, 0x1e });
        gbc.writeMem(0xd648, { 0xde });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x99c1, gbc.sp());
        EXPECT(0x2ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xd648));
        // CB 1E 034F
        gbc.setState(0x713, 0x4b50, 0x63d0, 0x4681, 0xc148, 0xa2b0, 0x0, 0x0);
        gbc.writeMem(0x713, { 0xcb, 0x1e });
        gbc.writeMem(0xa2b0, { 0xb1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4b50, gbc.sp());
        EXPECT(0x715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xa2b0));
        // CB 1E 0352
        gbc.setState(0x8917, 0x7c8b, 0xbd00, 0x962f, 0xdd0b, 0xe5d1, 0x0, 0x1);
        gbc.writeMem(0x8917, { 0xcb, 0x1e });
        gbc.writeMem(0xe5d1, { 0x77 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7c8b, gbc.sp());
        EXPECT(0x8919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8917));
        EXPECT(0x1e, gbc.readMem(0x8918));
        EXPECT(0x3b, gbc.readMem(0xe5d1));
        // CB 1E 0353
        gbc.setState(0x99a7, 0x951a, 0x3bb0, 0x65e4, 0xf173, 0xa2b1, 0x0, 0x0);
        gbc.writeMem(0x99a7, { 0xcb, 0x1e });
        gbc.writeMem(0xa2b1, { 0xe0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x951a, gbc.sp());
        EXPECT(0x99a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a7));
        EXPECT(0x1e, gbc.readMem(0x99a8));
        EXPECT(0xf0, gbc.readMem(0xa2b1));
        // CB 1E 0354
        gbc.setState(0x25dd, 0x6cba, 0x7ee0, 0x970, 0x855c, 0xab71, 0x0, 0x0);
        gbc.writeMem(0x25dd, { 0xcb, 0x1e });
        gbc.writeMem(0xab71, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6cba, gbc.sp());
        EXPECT(0x25df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xab71));
        // CB 1E 0355
        gbc.setState(0x4f2f, 0x9f8a, 0x98d0, 0xf162, 0x54d, 0xf4e4, 0x1, 0x1);
        gbc.writeMem(0x4f2f, { 0xcb, 0x1e });
        gbc.writeMem(0xf4e4, { 0x36 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9f8a, gbc.sp());
        EXPECT(0x4f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xf4e4));
        // CB 1E 0359
        gbc.setState(0xde3, 0x8b2b, 0xf820, 0x1c5d, 0xffdf, 0xda57, 0x1, 0x1);
        gbc.writeMem(0xde3, { 0xcb, 0x1e });
        gbc.writeMem(0xda57, { 0xc2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8b2b, gbc.sp());
        EXPECT(0xde5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xda57));
        // CB 1E 035A
        gbc.setState(0x2464, 0xd258, 0x9a10, 0xde98, 0xa3b4, 0x8193, 0x1, 0x1);
        gbc.writeMem(0x2464, { 0xcb, 0x1e });
        gbc.writeMem(0x8193, { 0x6e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd258, gbc.sp());
        EXPECT(0x2466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8193));
        // CB 1E 035B
        gbc.setState(0xd294, 0x3422, 0x57d0, 0x1c2d, 0xe846, 0xca67, 0x0, 0x1);
        gbc.writeMem(0xca67, { 0x25 });
        gbc.writeMem(0xd294, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3422, gbc.sp());
        EXPECT(0xd296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xca67));
        EXPECT(0xcb, gbc.readMem(0xd294));
        EXPECT(0x1e, gbc.readMem(0xd295));
        // CB 1E 035E
        gbc.setState(0x3f40, 0x76c9, 0x96d0, 0xc9be, 0xfe76, 0xf3ed, 0x1, 0x0);
        gbc.writeMem(0x3f40, { 0xcb, 0x1e });
        gbc.writeMem(0xf3ed, { 0x3a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x76c9, gbc.sp());
        EXPECT(0x3f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xf3ed));
        // CB 1E 0363
        gbc.setState(0x929b, 0x977, 0x34c0, 0x246e, 0x1b15, 0xd61c, 0x1, 0x1);
        gbc.writeMem(0x929b, { 0xcb, 0x1e });
        gbc.writeMem(0xd61c, { 0xef });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x977, gbc.sp());
        EXPECT(0x929d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x929b));
        EXPECT(0x1e, gbc.readMem(0x929c));
        EXPECT(0x77, gbc.readMem(0xd61c));
        // CB 1E 0367
        gbc.setState(0x1b18, 0x60b8, 0x4ed0, 0x9f98, 0x5cff, 0xd839, 0x1, 0x0);
        gbc.writeMem(0x1b18, { 0xcb, 0x1e });
        gbc.writeMem(0xd839, { 0x80 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x60b8, gbc.sp());
        EXPECT(0x1b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xd839));
        // CB 1E 0368
        gbc.setState(0xc098, 0xde13, 0xbb30, 0x3222, 0xe7ee, 0xf985, 0x0, 0x1);
        gbc.writeMem(0xc098, { 0xcb, 0x1e });
        gbc.writeMem(0xf985, { 0x97 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xde13, gbc.sp());
        EXPECT(0xc09a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc098));
        EXPECT(0x1e, gbc.readMem(0xc099));
        EXPECT(0xcb, gbc.readMem(0xf985));
        // CB 1E 0369
        gbc.setState(0x74dd, 0xb04e, 0x7740, 0x8bb9, 0x91dd, 0x9b2d, 0x0, 0x0);
        gbc.writeMem(0x74dd, { 0xcb, 0x1e });
        gbc.writeMem(0x9b2d, { 0x3a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb04e, gbc.sp());
        EXPECT(0x74df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9b2d));
        // CB 1E 036E
        gbc.setState(0x1685, 0x5040, 0xd820, 0xbc20, 0x3082, 0x8231, 0x0, 0x0);
        gbc.writeMem(0x1685, { 0xcb, 0x1e });
        gbc.writeMem(0x8231, { 0x5a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5040, gbc.sp());
        EXPECT(0x1687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8231));
        // CB 1E 0372
        gbc.setState(0x61a8, 0x220d, 0x91d0, 0xb5a6, 0x33a1, 0xaa95, 0x0, 0x0);
        gbc.writeMem(0x61a8, { 0xcb, 0x1e });
        gbc.writeMem(0xaa95, { 0xe2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x220d, gbc.sp());
        EXPECT(0x61aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xaa95));
        // CB 1E 0373
        gbc.setState(0x8c17, 0xbb10, 0x8160, 0x1f33, 0xbb32, 0xcd9e, 0x0, 0x1);
        gbc.writeMem(0x8c17, { 0xcb, 0x1e });
        gbc.writeMem(0xcd9e, { 0xfd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbb10, gbc.sp());
        EXPECT(0x8c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c17));
        EXPECT(0x1e, gbc.readMem(0x8c18));
        EXPECT(0x7e, gbc.readMem(0xcd9e));
        // CB 1E 0375
        gbc.setState(0x7afa, 0xfd3d, 0xe430, 0xb000, 0x3561, 0xf80d, 0x1, 0x0);
        gbc.writeMem(0x7afa, { 0xcb, 0x1e });
        gbc.writeMem(0xf80d, { 0x91 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfd3d, gbc.sp());
        EXPECT(0x7afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xf80d));
        // CB 1E 0379
        gbc.setState(0x77a0, 0x49ed, 0x8790, 0x72fb, 0x3327, 0xedb9, 0x1, 0x1);
        gbc.writeMem(0x77a0, { 0xcb, 0x1e });
        gbc.writeMem(0xedb9, { 0x59 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x49ed, gbc.sp());
        EXPECT(0x77a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xedb9));
        // CB 1E 037A
        gbc.setState(0x9e23, 0x5ebe, 0xba30, 0x6133, 0x4e8d, 0xc385, 0x0, 0x0);
        gbc.writeMem(0x9e23, { 0xcb, 0x1e });
        gbc.writeMem(0xc385, { 0xa1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5ebe, gbc.sp());
        EXPECT(0x9e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e23));
        EXPECT(0x1e, gbc.readMem(0x9e24));
        EXPECT(0xd0, gbc.readMem(0xc385));
        // CB 1E 037E
        gbc.setState(0xebd4, 0x6d54, 0x6d80, 0x7aff, 0xf1b7, 0xb50c, 0x0, 0x0);
        gbc.writeMem(0xb50c, { 0xf8 });
        gbc.writeMem(0xebd4, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6d54, gbc.sp());
        EXPECT(0xebd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xb50c));
        EXPECT(0xcb, gbc.readMem(0xebd4));
        EXPECT(0x1e, gbc.readMem(0xebd5));
        // CB 1E 037F
        gbc.setState(0x8198, 0x709b, 0xdea0, 0xf8d5, 0xab08, 0xfce4, 0x1, 0x1);
        gbc.writeMem(0x8198, { 0xcb, 0x1e });
        gbc.writeMem(0xfce4, { 0xa0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x709b, gbc.sp());
        EXPECT(0x819a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8198));
        EXPECT(0x1e, gbc.readMem(0x8199));
        EXPECT(0x50, gbc.readMem(0xfce4));
        // CB 1E 0380
        gbc.setState(0x226f, 0xb13e, 0x1310, 0xf363, 0xce8b, 0xcdde, 0x1, 0x1);
        gbc.writeMem(0x226f, { 0xcb, 0x1e });
        gbc.writeMem(0xcdde, { 0x5e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb13e, gbc.sp());
        EXPECT(0x2271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xcdde));
        // CB 1E 0385
        gbc.setState(0xd954, 0x7745, 0x65a0, 0xa6d3, 0xd43d, 0xff81, 0x0, 0x0);
        gbc.writeMem(0xd954, { 0xcb, 0x1e });
        gbc.writeMem(0xff81, { 0x19 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7745, gbc.sp());
        EXPECT(0xd956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd954));
        EXPECT(0x1e, gbc.readMem(0xd955));
        EXPECT(0xc, gbc.readMem(0xff81));
        // CB 1E 0387
        gbc.setState(0x58b4, 0x2614, 0xd620, 0xdcc9, 0xe1ac, 0xa500, 0x0, 0x1);
        gbc.writeMem(0x58b4, { 0xcb, 0x1e });
        gbc.writeMem(0xa500, { 0xc9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2614, gbc.sp());
        EXPECT(0x58b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa500));
        // CB 1E 038B
        gbc.setState(0x47e, 0x55af, 0xfe80, 0xe8d3, 0xee82, 0xb020, 0x0, 0x0);
        gbc.writeMem(0x47e, { 0xcb, 0x1e });
        gbc.writeMem(0xb020, { 0x99 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x55af, gbc.sp());
        EXPECT(0x480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb020));
        // CB 1E 038D
        gbc.setState(0xc35f, 0x9699, 0x3ca0, 0x7668, 0x90c3, 0xd5ec, 0x0, 0x0);
        gbc.writeMem(0xc35f, { 0xcb, 0x1e });
        gbc.writeMem(0xd5ec, { 0xd8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9699, gbc.sp());
        EXPECT(0xc361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc35f));
        EXPECT(0x1e, gbc.readMem(0xc360));
        EXPECT(0x6c, gbc.readMem(0xd5ec));
        // CB 1E 0391
        gbc.setState(0xa955, 0xe0e7, 0x4e10, 0x6d19, 0x4db8, 0xd2bf, 0x0, 0x1);
        gbc.writeMem(0xa955, { 0xcb, 0x1e });
        gbc.writeMem(0xd2bf, { 0x63 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe0e7, gbc.sp());
        EXPECT(0xa957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa955));
        EXPECT(0x1e, gbc.readMem(0xa956));
        EXPECT(0xb1, gbc.readMem(0xd2bf));
        // CB 1E 0395
        gbc.setState(0xcc60, 0x33fa, 0xc70, 0xbcbf, 0xce7a, 0x9b62, 0x1, 0x1);
        gbc.writeMem(0x9b62, { 0x95 });
        gbc.writeMem(0xcc60, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x33fa, gbc.sp());
        EXPECT(0xcc62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x9b62));
        EXPECT(0xcb, gbc.readMem(0xcc60));
        EXPECT(0x1e, gbc.readMem(0xcc61));
        // CB 1E 0399
        gbc.setState(0x94e4, 0x8b0d, 0xbc00, 0x55d9, 0xe67a, 0x9f26, 0x1, 0x0);
        gbc.writeMem(0x94e4, { 0xcb, 0x1e });
        gbc.writeMem(0x9f26, { 0x25 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8b0d, gbc.sp());
        EXPECT(0x94e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e4));
        EXPECT(0x1e, gbc.readMem(0x94e5));
        EXPECT(0x12, gbc.readMem(0x9f26));
        // CB 1E 039E
        gbc.setState(0x6f01, 0x47a1, 0xe980, 0x7369, 0xf132, 0xee74, 0x1, 0x0);
        gbc.writeMem(0x6f01, { 0xcb, 0x1e });
        gbc.writeMem(0xee74, { 0x2b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x47a1, gbc.sp());
        EXPECT(0x6f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xee74));
        // CB 1E 03A0
        gbc.setState(0x4bb6, 0x8877, 0x10f0, 0xc2ca, 0x6f41, 0x2ca9, 0x1, 0x0);
        gbc.writeMem(0x2ca9, { 0xff });
        gbc.writeMem(0x4bb6, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8877, gbc.sp());
        EXPECT(0x4bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1E 03A1
        gbc.setState(0x8843, 0x99bb, 0xa960, 0x1902, 0x298e, 0xeb82, 0x0, 0x1);
        gbc.writeMem(0x8843, { 0xcb, 0x1e });
        gbc.writeMem(0xeb82, { 0x96 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x99bb, gbc.sp());
        EXPECT(0x8845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8843));
        EXPECT(0x1e, gbc.readMem(0x8844));
        EXPECT(0x4b, gbc.readMem(0xeb82));
        // CB 1E 03A2
        gbc.setState(0x9d9f, 0x35ec, 0xd490, 0xc6ae, 0xf360, 0xf07e, 0x0, 0x0);
        gbc.writeMem(0x9d9f, { 0xcb, 0x1e });
        gbc.writeMem(0xf07e, { 0xd });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x35ec, gbc.sp());
        EXPECT(0x9da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d9f));
        EXPECT(0x1e, gbc.readMem(0x9da0));
        EXPECT(0x86, gbc.readMem(0xf07e));
        // CB 1E 03A3
        gbc.setState(0x74be, 0xba5a, 0x8db0, 0xeb0e, 0x8739, 0xd899, 0x0, 0x1);
        gbc.writeMem(0x74be, { 0xcb, 0x1e });
        gbc.writeMem(0xd899, { 0x7e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xba5a, gbc.sp());
        EXPECT(0x74c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd899));
        // CB 1E 03A4
        gbc.setState(0x8bda, 0x5d10, 0xd2b0, 0x96b5, 0x802f, 0xed66, 0x0, 0x1);
        gbc.writeMem(0x8bda, { 0xcb, 0x1e });
        gbc.writeMem(0xed66, { 0x12 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5d10, gbc.sp());
        EXPECT(0x8bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bda));
        EXPECT(0x1e, gbc.readMem(0x8bdb));
        EXPECT(0x89, gbc.readMem(0xed66));
        // CB 1E 03A9
        gbc.setState(0x9dca, 0x8a64, 0x3c40, 0x9e2, 0x15fe, 0xd48c, 0x0, 0x0);
        gbc.writeMem(0x9dca, { 0xcb, 0x1e });
        gbc.writeMem(0xd48c, { 0xe8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8a64, gbc.sp());
        EXPECT(0x9dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dca));
        EXPECT(0x1e, gbc.readMem(0x9dcb));
        EXPECT(0x74, gbc.readMem(0xd48c));
        // CB 1E 03AC
        gbc.setState(0x4fb8, 0xfc6b, 0x25c0, 0x4337, 0x4228, 0xf91c, 0x1, 0x1);
        gbc.writeMem(0x4fb8, { 0xcb, 0x1e });
        gbc.writeMem(0xf91c, { 0xab });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfc6b, gbc.sp());
        EXPECT(0x4fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xf91c));
        // CB 1E 03AD
        gbc.setState(0x43b3, 0x3b9e, 0x1980, 0xb6ef, 0x257b, 0xb2c4, 0x1, 0x1);
        gbc.writeMem(0x43b3, { 0xcb, 0x1e });
        gbc.writeMem(0xb2c4, { 0xd6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3b9e, gbc.sp());
        EXPECT(0x43b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xb2c4));
        // CB 1E 03B1
        gbc.setState(0x349b, 0x6287, 0xfd80, 0xa7dd, 0x1077, 0x8e77, 0x1, 0x0);
        gbc.writeMem(0x349b, { 0xcb, 0x1e });
        gbc.writeMem(0x8e77, { 0x3d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6287, gbc.sp());
        EXPECT(0x349d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x8e77));
        // CB 1E 03B2
        gbc.setState(0x3ed8, 0x2a9f, 0xeae0, 0xfad8, 0x877d, 0xec35, 0x0, 0x0);
        gbc.writeMem(0x3ed8, { 0xcb, 0x1e });
        gbc.writeMem(0xec35, { 0xd4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2a9f, gbc.sp());
        EXPECT(0x3eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xec35));
        // CB 1E 03B3
        gbc.setState(0x16ed, 0x3596, 0x9500, 0x66ee, 0x6990, 0x96bf, 0x0, 0x1);
        gbc.writeMem(0x16ed, { 0xcb, 0x1e });
        gbc.writeMem(0x96bf, { 0x80 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3596, gbc.sp());
        EXPECT(0x16ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x96bf));
        // CB 1E 03B4
        gbc.setState(0x476c, 0xfcae, 0x47d0, 0x82f2, 0x7e8d, 0xcbd7, 0x0, 0x0);
        gbc.writeMem(0x476c, { 0xcb, 0x1e });
        gbc.writeMem(0xcbd7, { 0xb2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfcae, gbc.sp());
        EXPECT(0x476e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcbd7));
        // CB 1E 03B6
        gbc.setState(0x94a1, 0xe7d7, 0x50b0, 0x4d27, 0xcfae, 0xc99c, 0x0, 0x0);
        gbc.writeMem(0x94a1, { 0xcb, 0x1e });
        gbc.writeMem(0xc99c, { 0x6a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe7d7, gbc.sp());
        EXPECT(0x94a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94a1));
        EXPECT(0x1e, gbc.readMem(0x94a2));
        EXPECT(0xb5, gbc.readMem(0xc99c));
        // CB 1E 03B8
        gbc.setState(0xcf9e, 0xd968, 0xd1e0, 0x3403, 0x2cd8, 0xe392, 0x0, 0x1);
        gbc.writeMem(0xcf9e, { 0xcb, 0x1e });
        gbc.writeMem(0xe392, { 0x15 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd968, gbc.sp());
        EXPECT(0xcfa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9e));
        EXPECT(0x1e, gbc.readMem(0xcf9f));
        EXPECT(0xa, gbc.readMem(0xe392));
        // CB 1E 03B9
        gbc.setState(0x607c, 0x2f77, 0xf620, 0x29a2, 0x6342, 0x97b6, 0x1, 0x0);
        gbc.writeMem(0x607c, { 0xcb, 0x1e });
        gbc.writeMem(0x97b6, { 0xe5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2f77, gbc.sp());
        EXPECT(0x607e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x97b6));
        // CB 1E 03BB
        gbc.setState(0x205, 0xa52e, 0x3500, 0x6e24, 0x109, 0xec16, 0x0, 0x0);
        gbc.writeMem(0x205, { 0xcb, 0x1e });
        gbc.writeMem(0xec16, { 0x34 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa52e, gbc.sp());
        EXPECT(0x207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xec16));
        // CB 1E 03BD
        gbc.setState(0x4862, 0x91b5, 0xfd10, 0xa49c, 0x987, 0xbc21, 0x0, 0x0);
        gbc.writeMem(0x4862, { 0xcb, 0x1e });
        gbc.writeMem(0xbc21, { 0x6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x91b5, gbc.sp());
        EXPECT(0x4864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xbc21));
        // CB 1E 03BE
        gbc.setState(0xc6f9, 0xec60, 0xd5e0, 0x29d2, 0x4f5b, 0x9282, 0x0, 0x1);
        gbc.writeMem(0x9282, { 0xe4 });
        gbc.writeMem(0xc6f9, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xec60, gbc.sp());
        EXPECT(0xc6fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9282));
        EXPECT(0xcb, gbc.readMem(0xc6f9));
        EXPECT(0x1e, gbc.readMem(0xc6fa));
        // CB 1E 03BF
        gbc.setState(0xe2d1, 0xea8, 0x9880, 0xa815, 0xb3f5, 0xc853, 0x1, 0x0);
        gbc.writeMem(0xc853, { 0x83 });
        gbc.writeMem(0xe2d1, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xea8, gbc.sp());
        EXPECT(0xe2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xc853));
        EXPECT(0xcb, gbc.readMem(0xe2d1));
        EXPECT(0x1e, gbc.readMem(0xe2d2));
        // CB 1E 03C0
        gbc.setState(0x65bc, 0x8b7d, 0xe870, 0xe85, 0xcab9, 0x856f, 0x1, 0x1);
        gbc.writeMem(0x65bc, { 0xcb, 0x1e });
        gbc.writeMem(0x856f, { 0x68 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8b7d, gbc.sp());
        EXPECT(0x65be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x856f));
        // CB 1E 03C1
        gbc.setState(0xb6e0, 0xb5df, 0x7840, 0x6821, 0xe59, 0xb102, 0x1, 0x1);
        gbc.writeMem(0xb102, { 0xd5 });
        gbc.writeMem(0xb6e0, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb5df, gbc.sp());
        EXPECT(0xb6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb102));
        EXPECT(0xcb, gbc.readMem(0xb6e0));
        EXPECT(0x1e, gbc.readMem(0xb6e1));
        // CB 1E 03C2
        gbc.setState(0x49a2, 0x48ea, 0x7f00, 0x9550, 0x5696, 0xe73b, 0x1, 0x0);
        gbc.writeMem(0x49a2, { 0xcb, 0x1e });
        gbc.writeMem(0xe73b, { 0x73 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x48ea, gbc.sp());
        EXPECT(0x49a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xe73b));
        // CB 1E 03C6
        gbc.setState(0xe455, 0x59be, 0xc70, 0x98c8, 0x1894, 0xbb60, 0x0, 0x0);
        gbc.writeMem(0xbb60, { 0x5 });
        gbc.writeMem(0xe455, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x59be, gbc.sp());
        EXPECT(0xe457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbb60));
        EXPECT(0xcb, gbc.readMem(0xe455));
        EXPECT(0x1e, gbc.readMem(0xe456));
        // CB 1E 03C8
        gbc.setState(0x1d20, 0x57b2, 0x1f50, 0x1fcd, 0x6afd, 0xfd5f, 0x1, 0x1);
        gbc.writeMem(0x1d20, { 0xcb, 0x1e });
        gbc.writeMem(0xfd5f, { 0x15 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x57b2, gbc.sp());
        EXPECT(0x1d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xfd5f));
        // CB 1E 03C9
        gbc.setState(0x78f1, 0xf238, 0x46b0, 0x5843, 0xbfeb, 0xbeec, 0x0, 0x0);
        gbc.writeMem(0x78f1, { 0xcb, 0x1e });
        gbc.writeMem(0xbeec, { 0x4e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf238, gbc.sp());
        EXPECT(0x78f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbeec));
        // CB 1E 03CB
        gbc.setState(0xaad5, 0x623d, 0x3c70, 0xa1e9, 0xca37, 0xdeab, 0x0, 0x0);
        gbc.writeMem(0xaad5, { 0xcb, 0x1e });
        gbc.writeMem(0xdeab, { 0x1d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x623d, gbc.sp());
        EXPECT(0xaad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad5));
        EXPECT(0x1e, gbc.readMem(0xaad6));
        EXPECT(0x8e, gbc.readMem(0xdeab));
        // CB 1E 03CC
        gbc.setState(0x4593, 0x6175, 0x5ea0, 0x8c4c, 0xbae9, 0x8df2, 0x0, 0x1);
        gbc.writeMem(0x4593, { 0xcb, 0x1e });
        gbc.writeMem(0x8df2, { 0x96 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6175, gbc.sp());
        EXPECT(0x4595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8df2));
        // CB 1E 03CE
        gbc.setState(0xaa71, 0x3a10, 0xa930, 0x1bef, 0x4eeb, 0xed6d, 0x0, 0x0);
        gbc.writeMem(0xaa71, { 0xcb, 0x1e });
        gbc.writeMem(0xed6d, { 0x3a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3a10, gbc.sp());
        EXPECT(0xaa73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa71));
        EXPECT(0x1e, gbc.readMem(0xaa72));
        EXPECT(0x9d, gbc.readMem(0xed6d));
        // CB 1E 03D2
        gbc.setState(0x55ca, 0xa5dd, 0x3bb0, 0x3e64, 0x79d3, 0xd280, 0x0, 0x1);
        gbc.writeMem(0x55ca, { 0xcb, 0x1e });
        gbc.writeMem(0xd280, { 0xc9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa5dd, gbc.sp());
        EXPECT(0x55cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xd280));
        // CB 1E 03D3
        gbc.setState(0xac49, 0x6ed1, 0x4cf0, 0xdeb9, 0x8ae, 0xd8b2, 0x1, 0x0);
        gbc.writeMem(0xac49, { 0xcb, 0x1e });
        gbc.writeMem(0xd8b2, { 0xfa });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6ed1, gbc.sp());
        EXPECT(0xac4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac49));
        EXPECT(0x1e, gbc.readMem(0xac4a));
        EXPECT(0xfd, gbc.readMem(0xd8b2));
        // CB 1E 03D5
        gbc.setState(0x35b9, 0xa1a0, 0xf3e0, 0xd260, 0x3a1a, 0xe9a0, 0x0, 0x1);
        gbc.writeMem(0x35b9, { 0xcb, 0x1e });
        gbc.writeMem(0xe9a0, { 0x97 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa1a0, gbc.sp());
        EXPECT(0x35bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe9a0));
        // CB 1E 03D7
        gbc.setState(0x60a8, 0xc140, 0xa390, 0xbd4c, 0xa406, 0xccd3, 0x0, 0x0);
        gbc.writeMem(0x60a8, { 0xcb, 0x1e });
        gbc.writeMem(0xccd3, { 0x1d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc140, gbc.sp());
        EXPECT(0x60aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xccd3));
        // CB 1E 03DB
        gbc.setState(0xc733, 0xb7e0, 0x5a0, 0xf53a, 0x3b9f, 0xfcbf, 0x1, 0x1);
        gbc.writeMem(0xc733, { 0xcb, 0x1e });
        gbc.writeMem(0xfcbf, { 0x69 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb7e0, gbc.sp());
        EXPECT(0xc735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc733));
        EXPECT(0x1e, gbc.readMem(0xc734));
        EXPECT(0x34, gbc.readMem(0xfcbf));
        // CB 1E 03DD
        gbc.setState(0x2736, 0x2b78, 0x5820, 0x26ec, 0x30d4, 0xe406, 0x0, 0x1);
        gbc.writeMem(0x2736, { 0xcb, 0x1e });
        gbc.writeMem(0xe406, { 0xf8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2b78, gbc.sp());
        EXPECT(0x2738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xe406));
        // CB 1E 03DE
        gbc.setState(0x6d31, 0x2d76, 0x5d30, 0x112f, 0x1c74, 0xb2a7, 0x1, 0x1);
        gbc.writeMem(0x6d31, { 0xcb, 0x1e });
        gbc.writeMem(0xb2a7, { 0x3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2d76, gbc.sp());
        EXPECT(0x6d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb2a7));
        // CB 1E 03DF
        gbc.setState(0x72df, 0x6092, 0x20d0, 0x3c8d, 0xd64d, 0xce85, 0x0, 0x0);
        gbc.writeMem(0x72df, { 0xcb, 0x1e });
        gbc.writeMem(0xce85, { 0x2d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6092, gbc.sp());
        EXPECT(0x72e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xce85));
        // CB 1E 03E0
        gbc.setState(0x64fb, 0x87ef, 0x6f20, 0x9fcb, 0xe91c, 0x8235, 0x1, 0x0);
        gbc.writeMem(0x64fb, { 0xcb, 0x1e });
        gbc.writeMem(0x8235, { 0x48 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x87ef, gbc.sp());
        EXPECT(0x64fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x8235));
        // CB 1E 03E5
        gbc.setState(0xaabb, 0xf83, 0x510, 0x5ecf, 0x72d5, 0xc857, 0x0, 0x0);
        gbc.writeMem(0xaabb, { 0xcb, 0x1e });
        gbc.writeMem(0xc857, { 0x86 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf83, gbc.sp());
        EXPECT(0xaabd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaabb));
        EXPECT(0x1e, gbc.readMem(0xaabc));
        EXPECT(0xc3, gbc.readMem(0xc857));
        // CB 1E 03E6
        gbc.setState(0xe891, 0xe97a, 0x7970, 0x9ba1, 0x469b, 0xd373, 0x1, 0x1);
        gbc.writeMem(0xd373, { 0xf4 });
        gbc.writeMem(0xe891, { 0xcb, 0x1e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe97a, gbc.sp());
        EXPECT(0xe893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd373));
        EXPECT(0xcb, gbc.readMem(0xe891));
        EXPECT(0x1e, gbc.readMem(0xe892));
    }
