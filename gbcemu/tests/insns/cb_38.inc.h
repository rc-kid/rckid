    TEST(gbcemu, opcode_cb_38) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 38 0000
        gbc.setState(0xdea5, 0xa836, 0x7d20, 0x9033, 0x81b, 0x222, 0x1, 0x0);
        gbc.writeMem(0xdea5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa836, gbc.sp());
        EXPECT(0xdea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea5));
        EXPECT(0x38, gbc.readMem(0xdea6));
        // CB 38 0001
        gbc.setState(0x235d, 0xa61, 0x4e10, 0x4b23, 0x14ac, 0xfcf6, 0x0, 0x1);
        gbc.writeMem(0x235d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa61, gbc.sp());
        EXPECT(0x235f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0002
        gbc.setState(0x9ce3, 0xe7da, 0x88c0, 0xe19f, 0xe642, 0x2ba4, 0x1, 0x1);
        gbc.writeMem(0x9ce3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe7da, gbc.sp());
        EXPECT(0x9ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce3));
        EXPECT(0x38, gbc.readMem(0x9ce4));
        // CB 38 0003
        gbc.setState(0xc3c9, 0xb903, 0x8f00, 0x625b, 0x8fc8, 0xca47, 0x1, 0x0);
        gbc.writeMem(0xc3c9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb903, gbc.sp());
        EXPECT(0xc3cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c9));
        EXPECT(0x38, gbc.readMem(0xc3ca));
        // CB 38 0004
        gbc.setState(0xb0f9, 0x9486, 0xa3c0, 0xa534, 0x9ee9, 0x87f5, 0x0, 0x0);
        gbc.writeMem(0xb0f9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9486, gbc.sp());
        EXPECT(0xb0fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f9));
        EXPECT(0x38, gbc.readMem(0xb0fa));
        // CB 38 0005
        gbc.setState(0xe510, 0xe141, 0x6630, 0x3fdc, 0x73ab, 0x503e, 0x1, 0x1);
        gbc.writeMem(0xe510, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe141, gbc.sp());
        EXPECT(0xe512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe510));
        EXPECT(0x38, gbc.readMem(0xe511));
        // CB 38 0006
        gbc.setState(0x5daa, 0x5cd1, 0x98b0, 0xf199, 0x30ba, 0x2896, 0x1, 0x0);
        gbc.writeMem(0x5daa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5cd1, gbc.sp());
        EXPECT(0x5dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0007
        gbc.setState(0x11ce, 0xab93, 0x3bb0, 0xb10b, 0x7d90, 0x72ae, 0x0, 0x1);
        gbc.writeMem(0x11ce, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xab93, gbc.sp());
        EXPECT(0x11d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0008
        gbc.setState(0xc9ac, 0x2f57, 0xaa90, 0x16c8, 0x7f41, 0x1afe, 0x0, 0x0);
        gbc.writeMem(0xc9ac, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2f57, gbc.sp());
        EXPECT(0xc9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ac));
        EXPECT(0x38, gbc.readMem(0xc9ad));
        // CB 38 0009
        gbc.setState(0x6229, 0x54bf, 0x12c0, 0x204d, 0xf642, 0xdb1a, 0x1, 0x0);
        gbc.writeMem(0x6229, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x54bf, gbc.sp());
        EXPECT(0x622b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 000A
        gbc.setState(0x12f8, 0x48d1, 0x5530, 0xeadf, 0xbf96, 0xf0dd, 0x1, 0x1);
        gbc.writeMem(0x12f8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x48d1, gbc.sp());
        EXPECT(0x12fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 000B
        gbc.setState(0xacfe, 0xf1e5, 0xa010, 0xe7f9, 0x2da3, 0xcfec, 0x0, 0x0);
        gbc.writeMem(0xacfe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf1e5, gbc.sp());
        EXPECT(0xad00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacfe));
        EXPECT(0x38, gbc.readMem(0xacff));
        // CB 38 000C
        gbc.setState(0xb959, 0xcd7e, 0x2eb0, 0x7f2c, 0xe488, 0xfec, 0x0, 0x0);
        gbc.writeMem(0xb959, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcd7e, gbc.sp());
        EXPECT(0xb95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb959));
        EXPECT(0x38, gbc.readMem(0xb95a));
        // CB 38 000E
        gbc.setState(0x517f, 0x1924, 0xd70, 0x367a, 0xb241, 0x9134, 0x1, 0x0);
        gbc.writeMem(0x517f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1924, gbc.sp());
        EXPECT(0x5181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 000F
        gbc.setState(0x711, 0xf835, 0x95f0, 0x5419, 0xbdfd, 0xeba5, 0x0, 0x0);
        gbc.writeMem(0x711, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf835, gbc.sp());
        EXPECT(0x713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0010
        gbc.setState(0xebea, 0x5334, 0xc6e0, 0x1cb9, 0x1b17, 0xaba2, 0x1, 0x0);
        gbc.writeMem(0xebea, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5334, gbc.sp());
        EXPECT(0xebec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebea));
        EXPECT(0x38, gbc.readMem(0xebeb));
        // CB 38 0011
        gbc.setState(0x20a6, 0x2c24, 0x4c60, 0x79ea, 0xb93, 0x21c0, 0x1, 0x0);
        gbc.writeMem(0x20a6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2c24, gbc.sp());
        EXPECT(0x20a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0012
        gbc.setState(0xba19, 0x44bb, 0xddf0, 0x773, 0xe3ec, 0xda45, 0x0, 0x1);
        gbc.writeMem(0xba19, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x44bb, gbc.sp());
        EXPECT(0xba1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba19));
        EXPECT(0x38, gbc.readMem(0xba1a));
        // CB 38 0013
        gbc.setState(0x69a0, 0x392b, 0xca80, 0xf2cb, 0xdee3, 0xb18c, 0x0, 0x1);
        gbc.writeMem(0x69a0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x392b, gbc.sp());
        EXPECT(0x69a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0014
        gbc.setState(0x5511, 0xe2dc, 0x49b0, 0x6ab5, 0x54ca, 0x3609, 0x0, 0x0);
        gbc.writeMem(0x5511, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe2dc, gbc.sp());
        EXPECT(0x5513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0015
        gbc.setState(0x2948, 0xa427, 0x1790, 0xc3e1, 0x1e4d, 0x6978, 0x0, 0x1);
        gbc.writeMem(0x2948, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa427, gbc.sp());
        EXPECT(0x294a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0016
        gbc.setState(0x1dc, 0xd1bc, 0xc550, 0x11ad, 0x5dfc, 0x7fe1, 0x0, 0x0);
        gbc.writeMem(0x1dc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd1bc, gbc.sp());
        EXPECT(0x1de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0017
        gbc.setState(0x6445, 0xb060, 0xa1c0, 0xfab, 0x2c0d, 0xdb73, 0x0, 0x1);
        gbc.writeMem(0x6445, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb060, gbc.sp());
        EXPECT(0x6447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0018
        gbc.setState(0x8f07, 0xc056, 0x69a0, 0x5a8c, 0x2086, 0x3c2c, 0x1, 0x0);
        gbc.writeMem(0x8f07, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc056, gbc.sp());
        EXPECT(0x8f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f07));
        EXPECT(0x38, gbc.readMem(0x8f08));
        // CB 38 0019
        gbc.setState(0x30e0, 0x5cba, 0x2040, 0x544a, 0x737d, 0x715c, 0x0, 0x1);
        gbc.writeMem(0x30e0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5cba, gbc.sp());
        EXPECT(0x30e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 001A
        gbc.setState(0xae69, 0x6cf5, 0xb0e0, 0x858e, 0xa9e3, 0xcd6d, 0x1, 0x1);
        gbc.writeMem(0xae69, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6cf5, gbc.sp());
        EXPECT(0xae6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae69));
        EXPECT(0x38, gbc.readMem(0xae6a));
        // CB 38 001B
        gbc.setState(0xc860, 0x85c4, 0xa0e0, 0x565d, 0xa980, 0xfcf6, 0x1, 0x0);
        gbc.writeMem(0xc860, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x85c4, gbc.sp());
        EXPECT(0xc862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc860));
        EXPECT(0x38, gbc.readMem(0xc861));
        // CB 38 001C
        gbc.setState(0x2e6a, 0x24fb, 0x84e0, 0xe270, 0xa29d, 0x53f3, 0x0, 0x0);
        gbc.writeMem(0x2e6a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x24fb, gbc.sp());
        EXPECT(0x2e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 001D
        gbc.setState(0xcd2d, 0xa9da, 0x450, 0x54c3, 0xa7f5, 0xd9bd, 0x1, 0x1);
        gbc.writeMem(0xcd2d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa9da, gbc.sp());
        EXPECT(0xcd2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd2d));
        EXPECT(0x38, gbc.readMem(0xcd2e));
        // CB 38 0020
        gbc.setState(0xcd3f, 0x99d7, 0xfe70, 0xc533, 0x64b, 0x4f25, 0x1, 0x0);
        gbc.writeMem(0xcd3f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x99d7, gbc.sp());
        EXPECT(0xcd41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3f));
        EXPECT(0x38, gbc.readMem(0xcd40));
        // CB 38 0022
        gbc.setState(0xda8e, 0xc18, 0xff20, 0x9aed, 0x115e, 0xb009, 0x1, 0x1);
        gbc.writeMem(0xda8e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc18, gbc.sp());
        EXPECT(0xda90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8e));
        EXPECT(0x38, gbc.readMem(0xda8f));
        // CB 38 0023
        gbc.setState(0x2489, 0x5d89, 0x5240, 0xa45f, 0x7c66, 0xe141, 0x0, 0x1);
        gbc.writeMem(0x2489, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5d89, gbc.sp());
        EXPECT(0x248b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0025
        gbc.setState(0x4e3, 0xf3a9, 0x42d0, 0xfca8, 0x43d8, 0x68a3, 0x1, 0x0);
        gbc.writeMem(0x4e3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf3a9, gbc.sp());
        EXPECT(0x4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0026
        gbc.setState(0xe3ed, 0xccf, 0x1690, 0x8837, 0x2966, 0x560a, 0x1, 0x1);
        gbc.writeMem(0xe3ed, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xccf, gbc.sp());
        EXPECT(0xe3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ed));
        EXPECT(0x38, gbc.readMem(0xe3ee));
        // CB 38 0028
        gbc.setState(0xe341, 0xba30, 0x7fa0, 0x95fc, 0xfeb, 0xe671, 0x0, 0x0);
        gbc.writeMem(0xe341, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xba30, gbc.sp());
        EXPECT(0xe343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe341));
        EXPECT(0x38, gbc.readMem(0xe342));
        // CB 38 0029
        gbc.setState(0x37b, 0x127c, 0x8840, 0x982, 0x7541, 0x9840, 0x1, 0x0);
        gbc.writeMem(0x37b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x127c, gbc.sp());
        EXPECT(0x37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 002A
        gbc.setState(0x1547, 0x9d6b, 0x8bc0, 0xb916, 0x60a9, 0x90eb, 0x0, 0x0);
        gbc.writeMem(0x1547, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9d6b, gbc.sp());
        EXPECT(0x1549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 002B
        gbc.setState(0x2f9c, 0xf4bd, 0xa660, 0x84da, 0x4bdf, 0x55b8, 0x1, 0x1);
        gbc.writeMem(0x2f9c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf4bd, gbc.sp());
        EXPECT(0x2f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 002C
        gbc.setState(0xaa4c, 0x1b71, 0x37e0, 0xf5d8, 0x2b55, 0x86fe, 0x1, 0x0);
        gbc.writeMem(0xaa4c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1b71, gbc.sp());
        EXPECT(0xaa4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa4c));
        EXPECT(0x38, gbc.readMem(0xaa4d));
        // CB 38 002D
        gbc.setState(0x44db, 0xadf1, 0xa9f0, 0x26d1, 0x36e3, 0xa4c2, 0x1, 0x0);
        gbc.writeMem(0x44db, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xadf1, gbc.sp());
        EXPECT(0x44dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 002E
        gbc.setState(0x356, 0x6589, 0x99d0, 0x1c62, 0x9b4e, 0x1682, 0x1, 0x0);
        gbc.writeMem(0x356, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6589, gbc.sp());
        EXPECT(0x358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 002F
        gbc.setState(0xe228, 0xf90b, 0x78d0, 0x3f7f, 0xd0a0, 0xc01f, 0x0, 0x1);
        gbc.writeMem(0xe228, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf90b, gbc.sp());
        EXPECT(0xe22a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe228));
        EXPECT(0x38, gbc.readMem(0xe229));
        // CB 38 0030
        gbc.setState(0xaf86, 0xf5c2, 0xe4e0, 0x23e0, 0xb4d1, 0x3322, 0x1, 0x1);
        gbc.writeMem(0xaf86, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf5c2, gbc.sp());
        EXPECT(0xaf88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf86));
        EXPECT(0x38, gbc.readMem(0xaf87));
        // CB 38 0031
        gbc.setState(0x4f75, 0xc53b, 0xe420, 0x3e2a, 0x7175, 0xb6e4, 0x0, 0x0);
        gbc.writeMem(0x4f75, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc53b, gbc.sp());
        EXPECT(0x4f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0032
        gbc.setState(0x909c, 0x614e, 0xcb20, 0xb64, 0xacda, 0xec86, 0x0, 0x0);
        gbc.writeMem(0x909c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x614e, gbc.sp());
        EXPECT(0x909e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909c));
        EXPECT(0x38, gbc.readMem(0x909d));
        // CB 38 0033
        gbc.setState(0x4602, 0x9a9c, 0x4650, 0x3b2e, 0x683c, 0x8338, 0x0, 0x0);
        gbc.writeMem(0x4602, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9a9c, gbc.sp());
        EXPECT(0x4604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0034
        gbc.setState(0xdfcc, 0xecfa, 0x29f0, 0x60a6, 0xa581, 0x23a, 0x0, 0x1);
        gbc.writeMem(0xdfcc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xecfa, gbc.sp());
        EXPECT(0xdfce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfcc));
        EXPECT(0x38, gbc.readMem(0xdfcd));
        // CB 38 0035
        gbc.setState(0xef65, 0xfccc, 0x5c00, 0xd263, 0x9bda, 0xe4bc, 0x1, 0x0);
        gbc.writeMem(0xef65, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfccc, gbc.sp());
        EXPECT(0xef67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef65));
        EXPECT(0x38, gbc.readMem(0xef66));
        // CB 38 0036
        gbc.setState(0x771f, 0xb5a8, 0x45c0, 0xfe4b, 0x442d, 0x85c5, 0x1, 0x1);
        gbc.writeMem(0x771f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb5a8, gbc.sp());
        EXPECT(0x7721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0037
        gbc.setState(0xc2d3, 0x44f6, 0x92e0, 0xfa19, 0xdd16, 0x2bc2, 0x0, 0x0);
        gbc.writeMem(0xc2d3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x44f6, gbc.sp());
        EXPECT(0xc2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d3));
        EXPECT(0x38, gbc.readMem(0xc2d4));
        // CB 38 0038
        gbc.setState(0x9a28, 0x147c, 0xace0, 0x3f2b, 0x2d7b, 0x83b4, 0x1, 0x0);
        gbc.writeMem(0x9a28, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x147c, gbc.sp());
        EXPECT(0x9a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a28));
        EXPECT(0x38, gbc.readMem(0x9a29));
        // CB 38 0039
        gbc.setState(0xdc0c, 0x2cc7, 0xa6d0, 0x80f6, 0x8b1c, 0x4af1, 0x0, 0x0);
        gbc.writeMem(0xdc0c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2cc7, gbc.sp());
        EXPECT(0xdc0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc0c));
        EXPECT(0x38, gbc.readMem(0xdc0d));
        // CB 38 003A
        gbc.setState(0xae70, 0xcb29, 0xc5e0, 0x1f80, 0x6466, 0xd45d, 0x1, 0x1);
        gbc.writeMem(0xae70, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcb29, gbc.sp());
        EXPECT(0xae72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae70));
        EXPECT(0x38, gbc.readMem(0xae71));
        // CB 38 003B
        gbc.setState(0x4757, 0xc944, 0xb090, 0xa2aa, 0x5316, 0x6474, 0x1, 0x0);
        gbc.writeMem(0x4757, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc944, gbc.sp());
        EXPECT(0x4759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 003C
        gbc.setState(0x8325, 0xc215, 0x5c70, 0xb185, 0xe8eb, 0x7466, 0x1, 0x1);
        gbc.writeMem(0x8325, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc215, gbc.sp());
        EXPECT(0x8327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8325));
        EXPECT(0x38, gbc.readMem(0x8326));
        // CB 38 003D
        gbc.setState(0xcd1d, 0xb153, 0x2e80, 0xe029, 0x5ab0, 0x85b6, 0x1, 0x1);
        gbc.writeMem(0xcd1d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb153, gbc.sp());
        EXPECT(0xcd1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd1d));
        EXPECT(0x38, gbc.readMem(0xcd1e));
        // CB 38 003E
        gbc.setState(0x822c, 0x2a96, 0xfae0, 0x3051, 0xacf1, 0x125a, 0x1, 0x1);
        gbc.writeMem(0x822c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2a96, gbc.sp());
        EXPECT(0x822e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822c));
        EXPECT(0x38, gbc.readMem(0x822d));
        // CB 38 0040
        gbc.setState(0xa5fb, 0x459e, 0x21b0, 0x94d9, 0x22fc, 0xcc00, 0x0, 0x0);
        gbc.writeMem(0xa5fb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x459e, gbc.sp());
        EXPECT(0xa5fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5fb));
        EXPECT(0x38, gbc.readMem(0xa5fc));
        // CB 38 0041
        gbc.setState(0x610d, 0x494c, 0xbe60, 0xd707, 0x4235, 0x11a2, 0x0, 0x1);
        gbc.writeMem(0x610d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x494c, gbc.sp());
        EXPECT(0x610f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0042
        gbc.setState(0x4a02, 0xb367, 0x8090, 0xa99c, 0x62b4, 0x89f8, 0x0, 0x1);
        gbc.writeMem(0x4a02, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb367, gbc.sp());
        EXPECT(0x4a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0043
        gbc.setState(0x9eba, 0xa9c, 0x94d0, 0x941e, 0x87ff, 0xc752, 0x1, 0x0);
        gbc.writeMem(0x9eba, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa9c, gbc.sp());
        EXPECT(0x9ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eba));
        EXPECT(0x38, gbc.readMem(0x9ebb));
        // CB 38 0044
        gbc.setState(0x990b, 0xf53f, 0xfd20, 0xe73c, 0x743a, 0x1b3, 0x0, 0x0);
        gbc.writeMem(0x990b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf53f, gbc.sp());
        EXPECT(0x990d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990b));
        EXPECT(0x38, gbc.readMem(0x990c));
        // CB 38 0046
        gbc.setState(0x566, 0x82bb, 0xb090, 0x83b9, 0x2149, 0xb972, 0x0, 0x1);
        gbc.writeMem(0x566, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x82bb, gbc.sp());
        EXPECT(0x568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0047
        gbc.setState(0xa93, 0xfda5, 0xef20, 0x9035, 0x2117, 0xef0e, 0x0, 0x1);
        gbc.writeMem(0xa93, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfda5, gbc.sp());
        EXPECT(0xa95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0048
        gbc.setState(0xce2, 0x98b9, 0x8bd0, 0x6c4e, 0xd06f, 0x3ef9, 0x0, 0x0);
        gbc.writeMem(0xce2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x98b9, gbc.sp());
        EXPECT(0xce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0049
        gbc.setState(0x1c0, 0x109d, 0xdae0, 0x3a6d, 0xc107, 0xa2cc, 0x1, 0x1);
        gbc.writeMem(0x1c0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x109d, gbc.sp());
        EXPECT(0x1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 004A
        gbc.setState(0x3300, 0x7c5a, 0x9d0, 0x87f9, 0x443a, 0xec00, 0x0, 0x0);
        gbc.writeMem(0x3300, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7c5a, gbc.sp());
        EXPECT(0x3302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 004B
        gbc.setState(0xb0c3, 0xeb06, 0xb7d0, 0x3dee, 0x55f1, 0xbc8e, 0x0, 0x1);
        gbc.writeMem(0xb0c3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xeb06, gbc.sp());
        EXPECT(0xb0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0c3));
        EXPECT(0x38, gbc.readMem(0xb0c4));
        // CB 38 004C
        gbc.setState(0xb679, 0x4a9d, 0x1a40, 0x64b0, 0x3a48, 0x7da4, 0x0, 0x1);
        gbc.writeMem(0xb679, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4a9d, gbc.sp());
        EXPECT(0xb67b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb679));
        EXPECT(0x38, gbc.readMem(0xb67a));
        // CB 38 004E
        gbc.setState(0x9c53, 0x1dd8, 0xc50, 0xb7e8, 0x72fa, 0x782d, 0x0, 0x1);
        gbc.writeMem(0x9c53, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1dd8, gbc.sp());
        EXPECT(0x9c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c53));
        EXPECT(0x38, gbc.readMem(0x9c54));
        // CB 38 004F
        gbc.setState(0xa7f5, 0x7581, 0xc390, 0x5b1e, 0xf12b, 0x41da, 0x1, 0x1);
        gbc.writeMem(0xa7f5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7581, gbc.sp());
        EXPECT(0xa7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f5));
        EXPECT(0x38, gbc.readMem(0xa7f6));
        // CB 38 0050
        gbc.setState(0x9a92, 0xcae8, 0xa7d0, 0xd005, 0xec2d, 0x56a7, 0x0, 0x0);
        gbc.writeMem(0x9a92, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcae8, gbc.sp());
        EXPECT(0x9a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a92));
        EXPECT(0x38, gbc.readMem(0x9a93));
        // CB 38 0051
        gbc.setState(0x3bc7, 0x210c, 0x64e0, 0xe153, 0x6774, 0x444f, 0x1, 0x1);
        gbc.writeMem(0x3bc7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x210c, gbc.sp());
        EXPECT(0x3bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0052
        gbc.setState(0x2047, 0x33c6, 0x3e10, 0x3c5b, 0x6e77, 0x65fd, 0x0, 0x1);
        gbc.writeMem(0x2047, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x33c6, gbc.sp());
        EXPECT(0x2049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0053
        gbc.setState(0x9f15, 0x4c58, 0x4570, 0xf9c2, 0x3c70, 0x6fd2, 0x0, 0x1);
        gbc.writeMem(0x9f15, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4c58, gbc.sp());
        EXPECT(0x9f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f15));
        EXPECT(0x38, gbc.readMem(0x9f16));
        // CB 38 0054
        gbc.setState(0x2676, 0xa3ec, 0x8bf0, 0x3b30, 0xdb6f, 0xc8b0, 0x1, 0x0);
        gbc.writeMem(0x2676, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa3ec, gbc.sp());
        EXPECT(0x2678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0055
        gbc.setState(0x62e5, 0x4dad, 0x55a0, 0xf061, 0xb37a, 0x8ec4, 0x0, 0x1);
        gbc.writeMem(0x62e5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4dad, gbc.sp());
        EXPECT(0x62e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0056
        gbc.setState(0x85c4, 0xcb16, 0xf660, 0xe589, 0x4cc, 0x952c, 0x1, 0x1);
        gbc.writeMem(0x85c4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcb16, gbc.sp());
        EXPECT(0x85c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c4));
        EXPECT(0x38, gbc.readMem(0x85c5));
        // CB 38 0057
        gbc.setState(0x9dae, 0x3a63, 0x1810, 0x6d0e, 0x3f58, 0x610e, 0x0, 0x1);
        gbc.writeMem(0x9dae, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3a63, gbc.sp());
        EXPECT(0x9db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dae));
        EXPECT(0x38, gbc.readMem(0x9daf));
        // CB 38 0058
        gbc.setState(0x7749, 0x6cd4, 0xecf0, 0x8a02, 0x1f0c, 0x66d2, 0x0, 0x0);
        gbc.writeMem(0x7749, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6cd4, gbc.sp());
        EXPECT(0x774b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0059
        gbc.setState(0x100a, 0x17d8, 0xfb60, 0x36a4, 0x615f, 0xadd0, 0x1, 0x0);
        gbc.writeMem(0x100a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x17d8, gbc.sp());
        EXPECT(0x100c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 005A
        gbc.setState(0x559c, 0x14ca, 0x2350, 0x2e5f, 0x3f47, 0x6958, 0x1, 0x0);
        gbc.writeMem(0x559c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x14ca, gbc.sp());
        EXPECT(0x559e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 005C
        gbc.setState(0x1035, 0x456a, 0x57e0, 0xa2b7, 0xd72b, 0xf8b0, 0x1, 0x0);
        gbc.writeMem(0x1035, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x456a, gbc.sp());
        EXPECT(0x1037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 005D
        gbc.setState(0x2814, 0x69, 0x8770, 0x6d9, 0xae35, 0x17a6, 0x0, 0x1);
        gbc.writeMem(0x2814, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x69, gbc.sp());
        EXPECT(0x2816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 005E
        gbc.setState(0x2fb6, 0x6ef0, 0xe840, 0xe7f2, 0x2da1, 0x3610, 0x0, 0x0);
        gbc.writeMem(0x2fb6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6ef0, gbc.sp());
        EXPECT(0x2fb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 005F
        gbc.setState(0x2fb, 0x9bac, 0x3470, 0x5581, 0xe721, 0x475f, 0x1, 0x0);
        gbc.writeMem(0x2fb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9bac, gbc.sp());
        EXPECT(0x2fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0060
        gbc.setState(0x2857, 0xc70a, 0x1f40, 0x5e36, 0x66c, 0xd095, 0x1, 0x0);
        gbc.writeMem(0x2857, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc70a, gbc.sp());
        EXPECT(0x2859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0061
        gbc.setState(0x9e87, 0x7dd9, 0xeda0, 0xe2e3, 0x6fb5, 0xca16, 0x1, 0x0);
        gbc.writeMem(0x9e87, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7dd9, gbc.sp());
        EXPECT(0x9e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e87));
        EXPECT(0x38, gbc.readMem(0x9e88));
        // CB 38 0062
        gbc.setState(0x469c, 0xa5f9, 0x7df0, 0x261a, 0x5be7, 0xd78a, 0x1, 0x0);
        gbc.writeMem(0x469c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa5f9, gbc.sp());
        EXPECT(0x469e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0063
        gbc.setState(0x6afa, 0x9649, 0x3550, 0x1295, 0x4fcc, 0xdf27, 0x0, 0x0);
        gbc.writeMem(0x6afa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9649, gbc.sp());
        EXPECT(0x6afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0064
        gbc.setState(0x58b3, 0xdd84, 0x32e0, 0x51b4, 0xd18, 0xe527, 0x0, 0x0);
        gbc.writeMem(0x58b3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdd84, gbc.sp());
        EXPECT(0x58b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0065
        gbc.setState(0xcf3e, 0x6f93, 0x94e0, 0x2a7e, 0xa2a0, 0x3986, 0x0, 0x0);
        gbc.writeMem(0xcf3e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6f93, gbc.sp());
        EXPECT(0xcf40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf3e));
        EXPECT(0x38, gbc.readMem(0xcf3f));
        // CB 38 0066
        gbc.setState(0x4328, 0xfebb, 0x9440, 0xd1f5, 0x2ca9, 0x5d0c, 0x0, 0x0);
        gbc.writeMem(0x4328, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfebb, gbc.sp());
        EXPECT(0x432a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0067
        gbc.setState(0x18c2, 0x4edd, 0xcaa0, 0x1022, 0xf568, 0xed27, 0x1, 0x1);
        gbc.writeMem(0x18c2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4edd, gbc.sp());
        EXPECT(0x18c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0068
        gbc.setState(0x27e5, 0xc0ac, 0xc750, 0xa285, 0x8934, 0x10bf, 0x1, 0x0);
        gbc.writeMem(0x27e5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc0ac, gbc.sp());
        EXPECT(0x27e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0069
        gbc.setState(0x4a4e, 0x7c60, 0xb050, 0x578, 0xf060, 0x3d33, 0x0, 0x0);
        gbc.writeMem(0x4a4e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7c60, gbc.sp());
        EXPECT(0x4a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 006A
        gbc.setState(0x951f, 0xe4b6, 0x3bc0, 0x30f7, 0x730e, 0x3881, 0x1, 0x0);
        gbc.writeMem(0x951f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe4b6, gbc.sp());
        EXPECT(0x9521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951f));
        EXPECT(0x38, gbc.readMem(0x9520));
        // CB 38 006B
        gbc.setState(0x5ec7, 0xb791, 0x8580, 0xb53f, 0x9514, 0x56e4, 0x0, 0x1);
        gbc.writeMem(0x5ec7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb791, gbc.sp());
        EXPECT(0x5ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 006C
        gbc.setState(0x858e, 0xdb11, 0xb6e0, 0x32e6, 0x5720, 0x310e, 0x1, 0x0);
        gbc.writeMem(0x858e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdb11, gbc.sp());
        EXPECT(0x8590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858e));
        EXPECT(0x38, gbc.readMem(0x858f));
        // CB 38 006D
        gbc.setState(0x5cde, 0x7882, 0x58d0, 0x7bd8, 0x9b6, 0xb677, 0x0, 0x1);
        gbc.writeMem(0x5cde, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7882, gbc.sp());
        EXPECT(0x5ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 006E
        gbc.setState(0x50df, 0x941d, 0x8580, 0xf7d3, 0x59e0, 0x38f3, 0x0, 0x1);
        gbc.writeMem(0x50df, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x941d, gbc.sp());
        EXPECT(0x50e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 006F
        gbc.setState(0x53af, 0x20bc, 0xbf10, 0xd692, 0x4c61, 0xf0a8, 0x1, 0x0);
        gbc.writeMem(0x53af, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x20bc, gbc.sp());
        EXPECT(0x53b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0070
        gbc.setState(0xe7f0, 0xde2e, 0xfec0, 0x5b6, 0xe332, 0xe0, 0x0, 0x1);
        gbc.writeMem(0xe7f0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xde2e, gbc.sp());
        EXPECT(0xe7f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f0));
        EXPECT(0x38, gbc.readMem(0xe7f1));
        // CB 38 0071
        gbc.setState(0xdd7f, 0xe0b7, 0x8810, 0x2cd2, 0xa42, 0xc50b, 0x0, 0x0);
        gbc.writeMem(0xdd7f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe0b7, gbc.sp());
        EXPECT(0xdd81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd7f));
        EXPECT(0x38, gbc.readMem(0xdd80));
        // CB 38 0072
        gbc.setState(0xed8b, 0xd833, 0x1dc0, 0xfedb, 0xaca8, 0x97ae, 0x0, 0x0);
        gbc.writeMem(0xed8b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd833, gbc.sp());
        EXPECT(0xed8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed8b));
        EXPECT(0x38, gbc.readMem(0xed8c));
        // CB 38 0073
        gbc.setState(0x87da, 0x98c, 0x3350, 0x7c26, 0x61d8, 0x94d0, 0x1, 0x1);
        gbc.writeMem(0x87da, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x98c, gbc.sp());
        EXPECT(0x87dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87da));
        EXPECT(0x38, gbc.readMem(0x87db));
        // CB 38 0074
        gbc.setState(0xba39, 0x1876, 0xb9a0, 0x120d, 0xe2e7, 0x9706, 0x0, 0x0);
        gbc.writeMem(0xba39, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1876, gbc.sp());
        EXPECT(0xba3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba39));
        EXPECT(0x38, gbc.readMem(0xba3a));
        // CB 38 0076
        gbc.setState(0xd1f5, 0xfc56, 0xc9e0, 0x9e99, 0xcf97, 0x37be, 0x0, 0x0);
        gbc.writeMem(0xd1f5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfc56, gbc.sp());
        EXPECT(0xd1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f5));
        EXPECT(0x38, gbc.readMem(0xd1f6));
        // CB 38 0077
        gbc.setState(0xb339, 0x22a, 0x4d60, 0xb128, 0xa754, 0x900d, 0x0, 0x1);
        gbc.writeMem(0xb339, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x22a, gbc.sp());
        EXPECT(0xb33b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb339));
        EXPECT(0x38, gbc.readMem(0xb33a));
        // CB 38 0078
        gbc.setState(0x73b9, 0x3109, 0xd640, 0x2271, 0xe5d1, 0x63f3, 0x1, 0x0);
        gbc.writeMem(0x73b9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3109, gbc.sp());
        EXPECT(0x73bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0079
        gbc.setState(0xa54b, 0x42e8, 0xa570, 0xdf01, 0xb37e, 0x4a33, 0x1, 0x0);
        gbc.writeMem(0xa54b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x42e8, gbc.sp());
        EXPECT(0xa54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa54b));
        EXPECT(0x38, gbc.readMem(0xa54c));
        // CB 38 007A
        gbc.setState(0xd4f6, 0xceb6, 0x4e00, 0x6138, 0xa3c0, 0xcb20, 0x1, 0x0);
        gbc.writeMem(0xd4f6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xceb6, gbc.sp());
        EXPECT(0xd4f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f6));
        EXPECT(0x38, gbc.readMem(0xd4f7));
        // CB 38 007B
        gbc.setState(0x6d6f, 0x903, 0x71a0, 0xc94c, 0x5b68, 0xa6fe, 0x0, 0x1);
        gbc.writeMem(0x6d6f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x903, gbc.sp());
        EXPECT(0x6d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 007C
        gbc.setState(0xcc09, 0x4e19, 0x7270, 0xd1bd, 0x94ac, 0xb9c0, 0x1, 0x1);
        gbc.writeMem(0xcc09, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4e19, gbc.sp());
        EXPECT(0xcc0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc09));
        EXPECT(0x38, gbc.readMem(0xcc0a));
        // CB 38 007D
        gbc.setState(0x9de5, 0x886f, 0x6cd0, 0x6b78, 0x9f6d, 0xfdb0, 0x1, 0x0);
        gbc.writeMem(0x9de5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x886f, gbc.sp());
        EXPECT(0x9de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de5));
        EXPECT(0x38, gbc.readMem(0x9de6));
        // CB 38 007E
        gbc.setState(0xbf13, 0xdf91, 0x4590, 0xd990, 0xb261, 0xf9e4, 0x1, 0x0);
        gbc.writeMem(0xbf13, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xdf91, gbc.sp());
        EXPECT(0xbf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf13));
        EXPECT(0x38, gbc.readMem(0xbf14));
        // CB 38 0080
        gbc.setState(0x9efc, 0x6711, 0xff10, 0x986, 0x8ca, 0x6114, 0x1, 0x0);
        gbc.writeMem(0x9efc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6711, gbc.sp());
        EXPECT(0x9efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9efc));
        EXPECT(0x38, gbc.readMem(0x9efd));
        // CB 38 0081
        gbc.setState(0x3330, 0x461d, 0xe680, 0xbe79, 0x8010, 0x14e2, 0x0, 0x1);
        gbc.writeMem(0x3330, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x461d, gbc.sp());
        EXPECT(0x3332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0082
        gbc.setState(0xbbbc, 0xe68b, 0xcb30, 0x403b, 0x648, 0x4fb6, 0x0, 0x0);
        gbc.writeMem(0xbbbc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe68b, gbc.sp());
        EXPECT(0xbbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbbc));
        EXPECT(0x38, gbc.readMem(0xbbbd));
        // CB 38 0083
        gbc.setState(0x452, 0x2e55, 0x6650, 0x9e8, 0xb1be, 0x6d0c, 0x1, 0x0);
        gbc.writeMem(0x452, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2e55, gbc.sp());
        EXPECT(0x454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0084
        gbc.setState(0xec0b, 0x6191, 0x8400, 0xa29d, 0xc92a, 0xc812, 0x1, 0x0);
        gbc.writeMem(0xec0b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6191, gbc.sp());
        EXPECT(0xec0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec0b));
        EXPECT(0x38, gbc.readMem(0xec0c));
        // CB 38 0085
        gbc.setState(0x83e2, 0xbca7, 0x4eb0, 0x4179, 0x6034, 0x3280, 0x0, 0x0);
        gbc.writeMem(0x83e2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbca7, gbc.sp());
        EXPECT(0x83e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e2));
        EXPECT(0x38, gbc.readMem(0x83e3));
        // CB 38 0086
        gbc.setState(0xd0dd, 0x970e, 0x7240, 0x5f1a, 0xc36a, 0xc9a, 0x0, 0x1);
        gbc.writeMem(0xd0dd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x970e, gbc.sp());
        EXPECT(0xd0df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0dd));
        EXPECT(0x38, gbc.readMem(0xd0de));
        // CB 38 0087
        gbc.setState(0x4c3f, 0xe18a, 0x4c60, 0xc879, 0xf361, 0x9b12, 0x0, 0x0);
        gbc.writeMem(0x4c3f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe18a, gbc.sp());
        EXPECT(0x4c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0088
        gbc.setState(0x804f, 0xce98, 0xeb70, 0xa0a6, 0x7c3, 0xbdab, 0x1, 0x1);
        gbc.writeMem(0x804f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xce98, gbc.sp());
        EXPECT(0x8051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x804f));
        EXPECT(0x38, gbc.readMem(0x8050));
        // CB 38 0089
        gbc.setState(0x10a9, 0xc419, 0x8c10, 0xd61d, 0x1ad4, 0xbcd7, 0x1, 0x0);
        gbc.writeMem(0x10a9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc419, gbc.sp());
        EXPECT(0x10ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 008A
        gbc.setState(0x9abe, 0xe846, 0x9200, 0xdc00, 0xc39d, 0x45c9, 0x0, 0x0);
        gbc.writeMem(0x9abe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe846, gbc.sp());
        EXPECT(0x9ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abe));
        EXPECT(0x38, gbc.readMem(0x9abf));
        // CB 38 008B
        gbc.setState(0x52cf, 0xd7f3, 0xdbd0, 0xe771, 0xd711, 0xaf13, 0x0, 0x1);
        gbc.writeMem(0x52cf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd7f3, gbc.sp());
        EXPECT(0x52d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 008C
        gbc.setState(0x7f6, 0x82eb, 0xb110, 0xb501, 0xf6db, 0x6d7e, 0x0, 0x1);
        gbc.writeMem(0x7f6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x82eb, gbc.sp());
        EXPECT(0x7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 008D
        gbc.setState(0x3c3c, 0x56b7, 0xd4e0, 0x2c24, 0x949b, 0xc901, 0x0, 0x0);
        gbc.writeMem(0x3c3c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x56b7, gbc.sp());
        EXPECT(0x3c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 008E
        gbc.setState(0x1900, 0xfe0b, 0x7bf0, 0x2f6, 0xec1e, 0xa034, 0x1, 0x0);
        gbc.writeMem(0x1900, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfe0b, gbc.sp());
        EXPECT(0x1902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0090
        gbc.setState(0xaa36, 0xc38a, 0x3bf0, 0x2289, 0x4a5d, 0x9014, 0x1, 0x1);
        gbc.writeMem(0xaa36, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc38a, gbc.sp());
        EXPECT(0xaa38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa36));
        EXPECT(0x38, gbc.readMem(0xaa37));
        // CB 38 0091
        gbc.setState(0x20cd, 0x1ca1, 0x2500, 0xd7bd, 0x8d1, 0xfc41, 0x0, 0x0);
        gbc.writeMem(0x20cd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1ca1, gbc.sp());
        EXPECT(0x20cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0092
        gbc.setState(0xde63, 0x5db8, 0x5c20, 0x6584, 0xc9ba, 0xde2b, 0x1, 0x0);
        gbc.writeMem(0xde63, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5db8, gbc.sp());
        EXPECT(0xde65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde63));
        EXPECT(0x38, gbc.readMem(0xde64));
        // CB 38 0093
        gbc.setState(0x64a7, 0x13c3, 0x1670, 0xfc4f, 0x3c7f, 0x762d, 0x1, 0x0);
        gbc.writeMem(0x64a7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x13c3, gbc.sp());
        EXPECT(0x64a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0094
        gbc.setState(0x2b5e, 0x1d62, 0x84a0, 0x6713, 0xe207, 0x2e09, 0x1, 0x1);
        gbc.writeMem(0x2b5e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1d62, gbc.sp());
        EXPECT(0x2b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0095
        gbc.setState(0x5325, 0xca4, 0xb300, 0xaa70, 0x7217, 0xd3c2, 0x1, 0x0);
        gbc.writeMem(0x5325, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xca4, gbc.sp());
        EXPECT(0x5327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0096
        gbc.setState(0x2180, 0xeaa9, 0x4330, 0xeffc, 0x3511, 0x5f0b, 0x1, 0x0);
        gbc.writeMem(0x2180, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xeaa9, gbc.sp());
        EXPECT(0x2182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0097
        gbc.setState(0x8da4, 0xc85a, 0x7c20, 0x9df0, 0x5683, 0xb1a8, 0x1, 0x0);
        gbc.writeMem(0x8da4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc85a, gbc.sp());
        EXPECT(0x8da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da4));
        EXPECT(0x38, gbc.readMem(0x8da5));
        // CB 38 0098
        gbc.setState(0xd04c, 0xac81, 0xa380, 0xe317, 0x96f2, 0x2ba7, 0x0, 0x0);
        gbc.writeMem(0xd04c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xac81, gbc.sp());
        EXPECT(0xd04e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd04c));
        EXPECT(0x38, gbc.readMem(0xd04d));
        // CB 38 0099
        gbc.setState(0xda06, 0xfcf7, 0xb100, 0xe683, 0x6daa, 0xc94c, 0x1, 0x0);
        gbc.writeMem(0xda06, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfcf7, gbc.sp());
        EXPECT(0xda08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda06));
        EXPECT(0x38, gbc.readMem(0xda07));
        // CB 38 009A
        gbc.setState(0xccbf, 0x7dea, 0x9c0, 0x1329, 0x24e9, 0x39b9, 0x1, 0x0);
        gbc.writeMem(0xccbf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7dea, gbc.sp());
        EXPECT(0xccc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccbf));
        EXPECT(0x38, gbc.readMem(0xccc0));
        // CB 38 009B
        gbc.setState(0xc88d, 0x3388, 0x3a20, 0xf8e2, 0x270f, 0xf3a9, 0x1, 0x0);
        gbc.writeMem(0xc88d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3388, gbc.sp());
        EXPECT(0xc88f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc88d));
        EXPECT(0x38, gbc.readMem(0xc88e));
        // CB 38 009C
        gbc.setState(0x8633, 0xb05e, 0xdae0, 0x915, 0xfe43, 0x7f87, 0x0, 0x0);
        gbc.writeMem(0x8633, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb05e, gbc.sp());
        EXPECT(0x8635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8633));
        EXPECT(0x38, gbc.readMem(0x8634));
        // CB 38 009D
        gbc.setState(0x7c, 0x738e, 0xcea0, 0x2014, 0x1961, 0x2708, 0x0, 0x1);
        gbc.writeMem(0x7c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x738e, gbc.sp());
        EXPECT(0x7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 009E
        gbc.setState(0x4ea2, 0xea7f, 0x8960, 0x800f, 0x7c6b, 0xfee7, 0x1, 0x1);
        gbc.writeMem(0x4ea2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xea7f, gbc.sp());
        EXPECT(0x4ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 009F
        gbc.setState(0xeaeb, 0xd7f1, 0xf790, 0x7083, 0xd4f4, 0xa965, 0x0, 0x1);
        gbc.writeMem(0xeaeb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd7f1, gbc.sp());
        EXPECT(0xeaed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaeb));
        EXPECT(0x38, gbc.readMem(0xeaec));
        // CB 38 00A0
        gbc.setState(0xef69, 0x927d, 0x81e0, 0x5599, 0xf5d, 0x954c, 0x0, 0x0);
        gbc.writeMem(0xef69, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x927d, gbc.sp());
        EXPECT(0xef6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef69));
        EXPECT(0x38, gbc.readMem(0xef6a));
        // CB 38 00A1
        gbc.setState(0xa00d, 0xe18b, 0xb9c0, 0x92b6, 0xf84, 0xad7e, 0x0, 0x1);
        gbc.writeMem(0xa00d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe18b, gbc.sp());
        EXPECT(0xa00f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00d));
        EXPECT(0x38, gbc.readMem(0xa00e));
        // CB 38 00A2
        gbc.setState(0x14a7, 0xfc47, 0x6d60, 0x1024, 0x710e, 0x5c82, 0x0, 0x1);
        gbc.writeMem(0x14a7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfc47, gbc.sp());
        EXPECT(0x14a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00A3
        gbc.setState(0x31aa, 0x37ac, 0xb2f0, 0xec0c, 0x1335, 0x16ef, 0x0, 0x0);
        gbc.writeMem(0x31aa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x37ac, gbc.sp());
        EXPECT(0x31ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00A4
        gbc.setState(0x9bf3, 0x9f8, 0xe870, 0x36e2, 0x2044, 0x701d, 0x0, 0x1);
        gbc.writeMem(0x9bf3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9f8, gbc.sp());
        EXPECT(0x9bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf3));
        EXPECT(0x38, gbc.readMem(0x9bf4));
        // CB 38 00A5
        gbc.setState(0xdab8, 0x160a, 0xc1c0, 0x4926, 0xea75, 0xf590, 0x0, 0x0);
        gbc.writeMem(0xdab8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x160a, gbc.sp());
        EXPECT(0xdaba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab8));
        EXPECT(0x38, gbc.readMem(0xdab9));
        // CB 38 00A6
        gbc.setState(0x7182, 0xac44, 0x59f0, 0x3d42, 0x3e4c, 0x283c, 0x0, 0x0);
        gbc.writeMem(0x7182, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xac44, gbc.sp());
        EXPECT(0x7184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00A7
        gbc.setState(0xa952, 0xc0b1, 0xf030, 0x701a, 0x197d, 0x199f, 0x0, 0x1);
        gbc.writeMem(0xa952, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc0b1, gbc.sp());
        EXPECT(0xa954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa952));
        EXPECT(0x38, gbc.readMem(0xa953));
        // CB 38 00A9
        gbc.setState(0xcd4a, 0x8665, 0x23f0, 0x172f, 0x7493, 0x7a40, 0x1, 0x0);
        gbc.writeMem(0xcd4a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8665, gbc.sp());
        EXPECT(0xcd4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd4a));
        EXPECT(0x38, gbc.readMem(0xcd4b));
        // CB 38 00AA
        gbc.setState(0xbd10, 0x1c75, 0x64d0, 0xc320, 0x3a54, 0xa9d7, 0x0, 0x0);
        gbc.writeMem(0xbd10, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1c75, gbc.sp());
        EXPECT(0xbd12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd10));
        EXPECT(0x38, gbc.readMem(0xbd11));
        // CB 38 00AB
        gbc.setState(0xd5b9, 0xf8f7, 0x2400, 0x3735, 0x6cc0, 0xfb5e, 0x1, 0x1);
        gbc.writeMem(0xd5b9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf8f7, gbc.sp());
        EXPECT(0xd5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b9));
        EXPECT(0x38, gbc.readMem(0xd5ba));
        // CB 38 00AC
        gbc.setState(0x6d77, 0x22f8, 0x3a70, 0xf158, 0x8f59, 0xa09e, 0x1, 0x1);
        gbc.writeMem(0x6d77, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x22f8, gbc.sp());
        EXPECT(0x6d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00AD
        gbc.setState(0x188b, 0x9238, 0x4b40, 0xa96d, 0x9e8, 0x501f, 0x0, 0x1);
        gbc.writeMem(0x188b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9238, gbc.sp());
        EXPECT(0x188d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00AE
        gbc.setState(0x175d, 0x322, 0x26b0, 0x39e6, 0xca19, 0x4d, 0x1, 0x0);
        gbc.writeMem(0x175d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x322, gbc.sp());
        EXPECT(0x175f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00AF
        gbc.setState(0xae88, 0x9478, 0x50e0, 0xd51b, 0x154b, 0x5cf0, 0x0, 0x1);
        gbc.writeMem(0xae88, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9478, gbc.sp());
        EXPECT(0xae8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae88));
        EXPECT(0x38, gbc.readMem(0xae89));
        // CB 38 00B0
        gbc.setState(0xcc24, 0xfcb7, 0xd860, 0xbc10, 0x807a, 0x6e67, 0x1, 0x0);
        gbc.writeMem(0xcc24, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfcb7, gbc.sp());
        EXPECT(0xcc26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc24));
        EXPECT(0x38, gbc.readMem(0xcc25));
        // CB 38 00B1
        gbc.setState(0x4e5c, 0x51b6, 0x6ac0, 0xbb2b, 0x2aac, 0x2de3, 0x1, 0x1);
        gbc.writeMem(0x4e5c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x51b6, gbc.sp());
        EXPECT(0x4e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00B2
        gbc.setState(0xd83c, 0x24f8, 0xe400, 0x8092, 0xa8d0, 0x5d73, 0x1, 0x1);
        gbc.writeMem(0xd83c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x24f8, gbc.sp());
        EXPECT(0xd83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd83c));
        EXPECT(0x38, gbc.readMem(0xd83d));
        // CB 38 00B3
        gbc.setState(0x4b8d, 0xb114, 0x7e20, 0xafca, 0x71ca, 0xc440, 0x1, 0x0);
        gbc.writeMem(0x4b8d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb114, gbc.sp());
        EXPECT(0x4b8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00B4
        gbc.setState(0x271f, 0x5278, 0xc190, 0x4961, 0x36fd, 0xc001, 0x0, 0x1);
        gbc.writeMem(0x271f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5278, gbc.sp());
        EXPECT(0x2721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00B5
        gbc.setState(0xef7b, 0x8193, 0xc3c0, 0x2a32, 0x982d, 0x68dd, 0x1, 0x1);
        gbc.writeMem(0xef7b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8193, gbc.sp());
        EXPECT(0xef7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7b));
        EXPECT(0x38, gbc.readMem(0xef7c));
        // CB 38 00B6
        gbc.setState(0x183b, 0xaf6b, 0x1d20, 0x8559, 0x97b6, 0xdc4e, 0x0, 0x1);
        gbc.writeMem(0x183b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xaf6b, gbc.sp());
        EXPECT(0x183d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00B7
        gbc.setState(0x52cc, 0x552c, 0xfcb0, 0x3273, 0x8ddd, 0x1075, 0x1, 0x0);
        gbc.writeMem(0x52cc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x552c, gbc.sp());
        EXPECT(0x52ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00B8
        gbc.setState(0x5ba2, 0x9337, 0xeac0, 0x1748, 0xaa0f, 0xfdf4, 0x1, 0x1);
        gbc.writeMem(0x5ba2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9337, gbc.sp());
        EXPECT(0x5ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00B9
        gbc.setState(0x97de, 0xb26d, 0x3650, 0x4556, 0xfa69, 0xe276, 0x1, 0x0);
        gbc.writeMem(0x97de, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb26d, gbc.sp());
        EXPECT(0x97e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97de));
        EXPECT(0x38, gbc.readMem(0x97df));
        // CB 38 00BA
        gbc.setState(0xc41a, 0x15c8, 0x9f90, 0xf44b, 0xfd9c, 0xa85b, 0x0, 0x1);
        gbc.writeMem(0xc41a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x15c8, gbc.sp());
        EXPECT(0xc41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41a));
        EXPECT(0x38, gbc.readMem(0xc41b));
        // CB 38 00BB
        gbc.setState(0xebe6, 0x7da3, 0xf1f0, 0xb22a, 0x43f1, 0x1ead, 0x0, 0x1);
        gbc.writeMem(0xebe6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7da3, gbc.sp());
        EXPECT(0xebe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe6));
        EXPECT(0x38, gbc.readMem(0xebe7));
        // CB 38 00BC
        gbc.setState(0x510a, 0x5c16, 0xf1d0, 0x7c48, 0x8585, 0x610e, 0x0, 0x0);
        gbc.writeMem(0x510a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5c16, gbc.sp());
        EXPECT(0x510c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00BE
        gbc.setState(0xbd78, 0xf2b0, 0xdeb0, 0xbb0e, 0x9d50, 0xe820, 0x1, 0x0);
        gbc.writeMem(0xbd78, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf2b0, gbc.sp());
        EXPECT(0xbd7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd78));
        EXPECT(0x38, gbc.readMem(0xbd79));
        // CB 38 00BF
        gbc.setState(0x2a8e, 0xad9c, 0x1380, 0xad0f, 0x690e, 0x287, 0x1, 0x1);
        gbc.writeMem(0x2a8e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xad9c, gbc.sp());
        EXPECT(0x2a90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00C1
        gbc.setState(0xa7aa, 0x8758, 0xfc90, 0x770d, 0x7cc8, 0x79a3, 0x0, 0x1);
        gbc.writeMem(0xa7aa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8758, gbc.sp());
        EXPECT(0xa7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7aa));
        EXPECT(0x38, gbc.readMem(0xa7ab));
        // CB 38 00C2
        gbc.setState(0x4658, 0xcd8c, 0xe6a0, 0xea0f, 0xe64e, 0x49f5, 0x1, 0x0);
        gbc.writeMem(0x4658, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcd8c, gbc.sp());
        EXPECT(0x465a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00C3
        gbc.setState(0xd1c1, 0x3d53, 0x5a90, 0xb0c8, 0x44bc, 0x9180, 0x0, 0x1);
        gbc.writeMem(0xd1c1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3d53, gbc.sp());
        EXPECT(0xd1c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c1));
        EXPECT(0x38, gbc.readMem(0xd1c2));
        // CB 38 00C4
        gbc.setState(0x26f9, 0x591b, 0xe920, 0x81d2, 0x5e4b, 0x1201, 0x0, 0x1);
        gbc.writeMem(0x26f9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x591b, gbc.sp());
        EXPECT(0x26fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00C5
        gbc.setState(0x39ca, 0x8c64, 0xfe0, 0xbca3, 0xc954, 0xa503, 0x0, 0x1);
        gbc.writeMem(0x39ca, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8c64, gbc.sp());
        EXPECT(0x39cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00C6
        gbc.setState(0xb4f5, 0x4398, 0x9d20, 0x2207, 0xb3ba, 0xc5ba, 0x1, 0x1);
        gbc.writeMem(0xb4f5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4398, gbc.sp());
        EXPECT(0xb4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f5));
        EXPECT(0x38, gbc.readMem(0xb4f6));
        // CB 38 00C7
        gbc.setState(0xef44, 0x4b3e, 0xf560, 0x9fb, 0x7487, 0xfb3, 0x0, 0x0);
        gbc.writeMem(0xef44, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4b3e, gbc.sp());
        EXPECT(0xef46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef44));
        EXPECT(0x38, gbc.readMem(0xef45));
        // CB 38 00C8
        gbc.setState(0x1082, 0xe79b, 0x85d0, 0xdbe, 0x71cc, 0x97e6, 0x0, 0x1);
        gbc.writeMem(0x1082, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe79b, gbc.sp());
        EXPECT(0x1084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00C9
        gbc.setState(0xc3e3, 0x836d, 0xd3f0, 0x7c04, 0xeb15, 0x9376, 0x0, 0x0);
        gbc.writeMem(0xc3e3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x836d, gbc.sp());
        EXPECT(0xc3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e3));
        EXPECT(0x38, gbc.readMem(0xc3e4));
        // CB 38 00CA
        gbc.setState(0x5636, 0x295d, 0xfd30, 0x998, 0x705b, 0x334c, 0x1, 0x1);
        gbc.writeMem(0x5636, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x295d, gbc.sp());
        EXPECT(0x5638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00CB
        gbc.setState(0x8ea8, 0x4e5e, 0x6e60, 0xa844, 0x8680, 0xb5b9, 0x0, 0x0);
        gbc.writeMem(0x8ea8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4e5e, gbc.sp());
        EXPECT(0x8eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea8));
        EXPECT(0x38, gbc.readMem(0x8ea9));
        // CB 38 00CC
        gbc.setState(0xfa3, 0xf108, 0x7950, 0x73c, 0x9fd2, 0xa130, 0x1, 0x1);
        gbc.writeMem(0xfa3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf108, gbc.sp());
        EXPECT(0xfa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00CD
        gbc.setState(0x2c96, 0x6fae, 0x19a0, 0x158a, 0x3988, 0x2af2, 0x0, 0x1);
        gbc.writeMem(0x2c96, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6fae, gbc.sp());
        EXPECT(0x2c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00CE
        gbc.setState(0x39dc, 0x5d61, 0x9670, 0xe7e3, 0x7e7, 0xf007, 0x1, 0x0);
        gbc.writeMem(0x39dc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5d61, gbc.sp());
        EXPECT(0x39de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00CF
        gbc.setState(0x2a98, 0x80ef, 0xa3f0, 0x3ba2, 0x97e1, 0x2b3c, 0x1, 0x0);
        gbc.writeMem(0x2a98, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x80ef, gbc.sp());
        EXPECT(0x2a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00D0
        gbc.setState(0xe28e, 0xdd9f, 0xd7b0, 0x1f43, 0x176d, 0xe06b, 0x0, 0x1);
        gbc.writeMem(0xe28e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdd9f, gbc.sp());
        EXPECT(0xe290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe28e));
        EXPECT(0x38, gbc.readMem(0xe28f));
        // CB 38 00D1
        gbc.setState(0x162f, 0xde26, 0xd1b0, 0xc7e5, 0xed2c, 0xeee5, 0x1, 0x1);
        gbc.writeMem(0x162f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xde26, gbc.sp());
        EXPECT(0x1631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00D3
        gbc.setState(0x35c1, 0xfa17, 0x4870, 0x2bb6, 0x5922, 0xfbab, 0x0, 0x0);
        gbc.writeMem(0x35c1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfa17, gbc.sp());
        EXPECT(0x35c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00D4
        gbc.setState(0x30ea, 0xaf6f, 0x85c0, 0x9d1e, 0x6b6d, 0x924c, 0x1, 0x1);
        gbc.writeMem(0x30ea, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xaf6f, gbc.sp());
        EXPECT(0x30ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00D5
        gbc.setState(0x795b, 0x1747, 0x5810, 0xdf8a, 0xf50a, 0x7186, 0x1, 0x0);
        gbc.writeMem(0x795b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1747, gbc.sp());
        EXPECT(0x795d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00D6
        gbc.setState(0xb1b2, 0x3218, 0x2400, 0x8d27, 0xca43, 0xe6a6, 0x0, 0x1);
        gbc.writeMem(0xb1b2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3218, gbc.sp());
        EXPECT(0xb1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b2));
        EXPECT(0x38, gbc.readMem(0xb1b3));
        // CB 38 00D7
        gbc.setState(0x5a18, 0x3257, 0x8920, 0x63b4, 0xc40d, 0x17ef, 0x0, 0x0);
        gbc.writeMem(0x5a18, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3257, gbc.sp());
        EXPECT(0x5a1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00D8
        gbc.setState(0x8bbc, 0xcead, 0x2c90, 0x986e, 0xf10c, 0x54fd, 0x1, 0x0);
        gbc.writeMem(0x8bbc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcead, gbc.sp());
        EXPECT(0x8bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bbc));
        EXPECT(0x38, gbc.readMem(0x8bbd));
        // CB 38 00D9
        gbc.setState(0x57a9, 0xa198, 0x62b0, 0xbcc7, 0x55b2, 0x2028, 0x0, 0x0);
        gbc.writeMem(0x57a9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa198, gbc.sp());
        EXPECT(0x57ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00DA
        gbc.setState(0x9def, 0xe6dd, 0x96e0, 0xd41, 0xa2e1, 0xaa6f, 0x0, 0x1);
        gbc.writeMem(0x9def, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe6dd, gbc.sp());
        EXPECT(0x9df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9def));
        EXPECT(0x38, gbc.readMem(0x9df0));
        // CB 38 00DB
        gbc.setState(0x4dba, 0xb1b, 0x5cf0, 0x2d94, 0x7256, 0xf21b, 0x1, 0x0);
        gbc.writeMem(0x4dba, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb1b, gbc.sp());
        EXPECT(0x4dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00DC
        gbc.setState(0x23c4, 0x80c1, 0x1490, 0x967d, 0xb395, 0xb11c, 0x0, 0x1);
        gbc.writeMem(0x23c4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x80c1, gbc.sp());
        EXPECT(0x23c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00DD
        gbc.setState(0xa81, 0x4ed8, 0x86b0, 0x2c4c, 0x3a08, 0x67cd, 0x0, 0x1);
        gbc.writeMem(0xa81, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4ed8, gbc.sp());
        EXPECT(0xa83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00DE
        gbc.setState(0x3785, 0xd75, 0x43c0, 0x6aca, 0xa5b5, 0xdbc2, 0x0, 0x0);
        gbc.writeMem(0x3785, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd75, gbc.sp());
        EXPECT(0x3787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00DF
        gbc.setState(0x59bc, 0x86bc, 0xe760, 0xd8ba, 0x470f, 0xc10c, 0x1, 0x0);
        gbc.writeMem(0x59bc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x86bc, gbc.sp());
        EXPECT(0x59be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00E0
        gbc.setState(0x382f, 0x2229, 0xd790, 0xb171, 0xd0fb, 0xeaeb, 0x1, 0x0);
        gbc.writeMem(0x382f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2229, gbc.sp());
        EXPECT(0x3831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00E1
        gbc.setState(0xde9d, 0x3a4b, 0x8b40, 0x243, 0x5b47, 0xc715, 0x0, 0x0);
        gbc.writeMem(0xde9d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3a4b, gbc.sp());
        EXPECT(0xde9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9d));
        EXPECT(0x38, gbc.readMem(0xde9e));
        // CB 38 00E2
        gbc.setState(0x20eb, 0x943e, 0x7120, 0x7ac2, 0xe4a, 0x16bf, 0x0, 0x0);
        gbc.writeMem(0x20eb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x943e, gbc.sp());
        EXPECT(0x20ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00E4
        gbc.setState(0x7eab, 0x442b, 0x2700, 0x9592, 0xd133, 0x68b6, 0x1, 0x1);
        gbc.writeMem(0x7eab, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x442b, gbc.sp());
        EXPECT(0x7ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00E5
        gbc.setState(0x86fe, 0x2ad5, 0xbf40, 0xe796, 0x3dee, 0xc4cc, 0x0, 0x0);
        gbc.writeMem(0x86fe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2ad5, gbc.sp());
        EXPECT(0x8700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fe));
        EXPECT(0x38, gbc.readMem(0x86ff));
        // CB 38 00E6
        gbc.setState(0xd096, 0xfd46, 0xf8d0, 0x28ec, 0x72c8, 0xa3d4, 0x1, 0x0);
        gbc.writeMem(0xd096, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfd46, gbc.sp());
        EXPECT(0xd098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd096));
        EXPECT(0x38, gbc.readMem(0xd097));
        // CB 38 00E7
        gbc.setState(0x66af, 0xc603, 0x30c0, 0x38a9, 0x48f4, 0x13f2, 0x0, 0x1);
        gbc.writeMem(0x66af, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc603, gbc.sp());
        EXPECT(0x66b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00E9
        gbc.setState(0x73bf, 0x6680, 0xd8d0, 0x435d, 0xd112, 0x3962, 0x1, 0x0);
        gbc.writeMem(0x73bf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6680, gbc.sp());
        EXPECT(0x73c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00EA
        gbc.setState(0x59fb, 0x150c, 0xa0b0, 0x5b5, 0xff4b, 0x2089, 0x0, 0x0);
        gbc.writeMem(0x59fb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x150c, gbc.sp());
        EXPECT(0x59fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00EB
        gbc.setState(0xdd99, 0x4525, 0x1920, 0x8153, 0x57f9, 0xf0fe, 0x0, 0x1);
        gbc.writeMem(0xdd99, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4525, gbc.sp());
        EXPECT(0xdd9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd99));
        EXPECT(0x38, gbc.readMem(0xdd9a));
        // CB 38 00EC
        gbc.setState(0x47d4, 0xab7e, 0x91b0, 0x5f07, 0x1f0f, 0x1f8f, 0x0, 0x0);
        gbc.writeMem(0x47d4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xab7e, gbc.sp());
        EXPECT(0x47d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00ED
        gbc.setState(0x37f9, 0xedf, 0x3460, 0xc6a4, 0x3016, 0xa552, 0x0, 0x1);
        gbc.writeMem(0x37f9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xedf, gbc.sp());
        EXPECT(0x37fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00EE
        gbc.setState(0x2fb7, 0xf1a7, 0x660, 0xa43a, 0x1109, 0x151c, 0x1, 0x0);
        gbc.writeMem(0x2fb7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf1a7, gbc.sp());
        EXPECT(0x2fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00EF
        gbc.setState(0x6480, 0xf71, 0x4480, 0x24d2, 0x937, 0x6471, 0x1, 0x0);
        gbc.writeMem(0x6480, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf71, gbc.sp());
        EXPECT(0x6482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00F0
        gbc.setState(0xecb2, 0x8000, 0xeb40, 0xc5fe, 0xb3f6, 0xd031, 0x1, 0x0);
        gbc.writeMem(0xecb2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8000, gbc.sp());
        EXPECT(0xecb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb2));
        EXPECT(0x38, gbc.readMem(0xecb3));
        // CB 38 00F1
        gbc.setState(0xc1b6, 0xc6be, 0x6c90, 0x182, 0x54e0, 0x9a82, 0x1, 0x0);
        gbc.writeMem(0xc1b6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc6be, gbc.sp());
        EXPECT(0xc1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b6));
        EXPECT(0x38, gbc.readMem(0xc1b7));
        // CB 38 00F2
        gbc.setState(0x8fb6, 0x54c4, 0xc3e0, 0xfa6e, 0x5d63, 0x8712, 0x0, 0x0);
        gbc.writeMem(0x8fb6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x54c4, gbc.sp());
        EXPECT(0x8fb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb6));
        EXPECT(0x38, gbc.readMem(0x8fb7));
        // CB 38 00F3
        gbc.setState(0xbdfa, 0x9e74, 0x7260, 0x62b4, 0xed3e, 0x8a0c, 0x1, 0x1);
        gbc.writeMem(0xbdfa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9e74, gbc.sp());
        EXPECT(0xbdfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfa));
        EXPECT(0x38, gbc.readMem(0xbdfb));
        // CB 38 00F4
        gbc.setState(0x79b3, 0xff7f, 0x2e50, 0x7ef9, 0x50ae, 0xf2d3, 0x0, 0x1);
        gbc.writeMem(0x79b3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xff7f, gbc.sp());
        EXPECT(0x79b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00F5
        gbc.setState(0x8bcc, 0xdae0, 0x3fa0, 0xd3d6, 0x8b5b, 0xe7bb, 0x0, 0x0);
        gbc.writeMem(0x8bcc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdae0, gbc.sp());
        EXPECT(0x8bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bcc));
        EXPECT(0x38, gbc.readMem(0x8bcd));
        // CB 38 00F6
        gbc.setState(0xa31a, 0xfd1b, 0x9210, 0xef76, 0xd3cb, 0x67c9, 0x1, 0x1);
        gbc.writeMem(0xa31a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfd1b, gbc.sp());
        EXPECT(0xa31c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31a));
        EXPECT(0x38, gbc.readMem(0xa31b));
        // CB 38 00F7
        gbc.setState(0x9de4, 0x6ea9, 0x3d90, 0xd3bd, 0xd8a0, 0x8f94, 0x0, 0x0);
        gbc.writeMem(0x9de4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6ea9, gbc.sp());
        EXPECT(0x9de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de4));
        EXPECT(0x38, gbc.readMem(0x9de5));
        // CB 38 00F8
        gbc.setState(0x651a, 0xaa5f, 0x7b50, 0x12c6, 0x86d2, 0x2b0, 0x1, 0x1);
        gbc.writeMem(0x651a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xaa5f, gbc.sp());
        EXPECT(0x651c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 00FA
        gbc.setState(0x73a6, 0xd161, 0xec0, 0x8b37, 0x4ade, 0x1207, 0x0, 0x1);
        gbc.writeMem(0x73a6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd161, gbc.sp());
        EXPECT(0x73a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00FB
        gbc.setState(0xb93b, 0x40b2, 0xc4c0, 0x95e2, 0xdee3, 0xacee, 0x1, 0x1);
        gbc.writeMem(0xb93b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x40b2, gbc.sp());
        EXPECT(0xb93d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93b));
        EXPECT(0x38, gbc.readMem(0xb93c));
        // CB 38 00FC
        gbc.setState(0x22cb, 0x9d3e, 0x14c0, 0x9116, 0x528e, 0xb607, 0x0, 0x1);
        gbc.writeMem(0x22cb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9d3e, gbc.sp());
        EXPECT(0x22cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 00FD
        gbc.setState(0x86ce, 0x8774, 0x5230, 0x9647, 0xd23e, 0x5e06, 0x0, 0x1);
        gbc.writeMem(0x86ce, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8774, gbc.sp());
        EXPECT(0x86d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ce));
        EXPECT(0x38, gbc.readMem(0x86cf));
        // CB 38 00FE
        gbc.setState(0x8454, 0x6913, 0x4080, 0x5132, 0xa87, 0x9498, 0x1, 0x0);
        gbc.writeMem(0x8454, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6913, gbc.sp());
        EXPECT(0x8456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8454));
        EXPECT(0x38, gbc.readMem(0x8455));
        // CB 38 00FF
        gbc.setState(0xaf78, 0xe410, 0x52d0, 0x1dca, 0xdf6f, 0xdec7, 0x0, 0x0);
        gbc.writeMem(0xaf78, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe410, gbc.sp());
        EXPECT(0xaf7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf78));
        EXPECT(0x38, gbc.readMem(0xaf79));
        // CB 38 0100
        gbc.setState(0xb192, 0x1ea7, 0x2720, 0xc48d, 0xe711, 0x5359, 0x1, 0x1);
        gbc.writeMem(0xb192, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1ea7, gbc.sp());
        EXPECT(0xb194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb192));
        EXPECT(0x38, gbc.readMem(0xb193));
        // CB 38 0101
        gbc.setState(0x67fe, 0x60ae, 0xd700, 0x644c, 0xf7d0, 0x25c1, 0x1, 0x0);
        gbc.writeMem(0x67fe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x60ae, gbc.sp());
        EXPECT(0x6800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0102
        gbc.setState(0xbc2f, 0xab27, 0x29c0, 0xf6af, 0xd82c, 0x4d5, 0x0, 0x0);
        gbc.writeMem(0xbc2f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xab27, gbc.sp());
        EXPECT(0xbc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2f));
        EXPECT(0x38, gbc.readMem(0xbc30));
        // CB 38 0103
        gbc.setState(0x4811, 0x5d19, 0xbad0, 0x343, 0xa71a, 0xb787, 0x0, 0x0);
        gbc.writeMem(0x4811, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5d19, gbc.sp());
        EXPECT(0x4813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0104
        gbc.setState(0x407a, 0x3e4e, 0x65c0, 0x4c24, 0xe181, 0xc8a1, 0x0, 0x1);
        gbc.writeMem(0x407a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3e4e, gbc.sp());
        EXPECT(0x407c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0105
        gbc.setState(0x935, 0x8069, 0xd3f0, 0x309e, 0x8755, 0x5b36, 0x1, 0x1);
        gbc.writeMem(0x935, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8069, gbc.sp());
        EXPECT(0x937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0106
        gbc.setState(0xeed0, 0x5abb, 0x4510, 0xba32, 0xce4e, 0xf101, 0x1, 0x1);
        gbc.writeMem(0xeed0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5abb, gbc.sp());
        EXPECT(0xeed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed0));
        EXPECT(0x38, gbc.readMem(0xeed1));
        // CB 38 0107
        gbc.setState(0x3e3a, 0xb4d3, 0xb410, 0x9571, 0xb832, 0x5a31, 0x1, 0x0);
        gbc.writeMem(0x3e3a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb4d3, gbc.sp());
        EXPECT(0x3e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0108
        gbc.setState(0xdbec, 0xe19c, 0x9b50, 0xde16, 0x4dda, 0x92cb, 0x1, 0x1);
        gbc.writeMem(0xdbec, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe19c, gbc.sp());
        EXPECT(0xdbee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbec));
        EXPECT(0x38, gbc.readMem(0xdbed));
        // CB 38 0109
        gbc.setState(0x2a5b, 0xb5a5, 0x1c70, 0x4443, 0xeab8, 0x96e6, 0x0, 0x0);
        gbc.writeMem(0x2a5b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb5a5, gbc.sp());
        EXPECT(0x2a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 010A
        gbc.setState(0xa045, 0x15e, 0x6910, 0xa264, 0xd429, 0x1104, 0x1, 0x0);
        gbc.writeMem(0xa045, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x15e, gbc.sp());
        EXPECT(0xa047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa045));
        EXPECT(0x38, gbc.readMem(0xa046));
        // CB 38 010B
        gbc.setState(0xb5b5, 0x22d8, 0xffb0, 0xe046, 0x28aa, 0x318a, 0x0, 0x1);
        gbc.writeMem(0xb5b5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x22d8, gbc.sp());
        EXPECT(0xb5b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b5));
        EXPECT(0x38, gbc.readMem(0xb5b6));
        // CB 38 010C
        gbc.setState(0x1367, 0xc2de, 0x8bd0, 0x23a5, 0x80a6, 0x512b, 0x0, 0x1);
        gbc.writeMem(0x1367, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc2de, gbc.sp());
        EXPECT(0x1369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 010D
        gbc.setState(0x7cc, 0x7efe, 0x80b0, 0xe47f, 0xc653, 0x6617, 0x1, 0x1);
        gbc.writeMem(0x7cc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7efe, gbc.sp());
        EXPECT(0x7ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 010E
        gbc.setState(0xdad2, 0x7c3d, 0x2920, 0x4bb5, 0x4fd0, 0x2159, 0x0, 0x1);
        gbc.writeMem(0xdad2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7c3d, gbc.sp());
        EXPECT(0xdad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad2));
        EXPECT(0x38, gbc.readMem(0xdad3));
        // CB 38 010F
        gbc.setState(0xa4e5, 0xa7e4, 0x5c10, 0x62c9, 0xd867, 0x60ec, 0x1, 0x0);
        gbc.writeMem(0xa4e5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa7e4, gbc.sp());
        EXPECT(0xa4e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e5));
        EXPECT(0x38, gbc.readMem(0xa4e6));
        // CB 38 0110
        gbc.setState(0xe5e8, 0x5ae5, 0xba90, 0x9e15, 0x9685, 0xbd1f, 0x0, 0x0);
        gbc.writeMem(0xe5e8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5ae5, gbc.sp());
        EXPECT(0xe5ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e8));
        EXPECT(0x38, gbc.readMem(0xe5e9));
        // CB 38 0111
        gbc.setState(0xbb77, 0x932b, 0x7bd0, 0xad5d, 0xca5e, 0xfa07, 0x1, 0x0);
        gbc.writeMem(0xbb77, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x932b, gbc.sp());
        EXPECT(0xbb79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb77));
        EXPECT(0x38, gbc.readMem(0xbb78));
        // CB 38 0112
        gbc.setState(0x2b4e, 0x98a1, 0x54d0, 0x96f4, 0x149b, 0xcaf0, 0x1, 0x1);
        gbc.writeMem(0x2b4e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x98a1, gbc.sp());
        EXPECT(0x2b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0113
        gbc.setState(0x6bee, 0xae71, 0xed80, 0xe5e5, 0x5deb, 0x2ad8, 0x1, 0x1);
        gbc.writeMem(0x6bee, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xae71, gbc.sp());
        EXPECT(0x6bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0114
        gbc.setState(0xcee, 0x3208, 0xb390, 0xe22e, 0x9fff, 0x642, 0x0, 0x1);
        gbc.writeMem(0xcee, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3208, gbc.sp());
        EXPECT(0xcf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0115
        gbc.setState(0x1e0c, 0x214c, 0x6260, 0x40c0, 0x5c64, 0x7901, 0x1, 0x1);
        gbc.writeMem(0x1e0c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x214c, gbc.sp());
        EXPECT(0x1e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0117
        gbc.setState(0x4c45, 0x4569, 0x8ff0, 0xd18d, 0x76b, 0x3844, 0x0, 0x0);
        gbc.writeMem(0x4c45, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4569, gbc.sp());
        EXPECT(0x4c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0118
        gbc.setState(0x1357, 0x7945, 0xa7a0, 0xe376, 0x2c2d, 0x8cbc, 0x0, 0x1);
        gbc.writeMem(0x1357, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7945, gbc.sp());
        EXPECT(0x1359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0119
        gbc.setState(0xb97e, 0x7412, 0x4970, 0x775f, 0x7ee1, 0x94c9, 0x0, 0x1);
        gbc.writeMem(0xb97e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7412, gbc.sp());
        EXPECT(0xb980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97e));
        EXPECT(0x38, gbc.readMem(0xb97f));
        // CB 38 011A
        gbc.setState(0x9c02, 0x9d07, 0xabc0, 0xd632, 0x92b7, 0x1e29, 0x0, 0x0);
        gbc.writeMem(0x9c02, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9d07, gbc.sp());
        EXPECT(0x9c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c02));
        EXPECT(0x38, gbc.readMem(0x9c03));
        // CB 38 011B
        gbc.setState(0x399, 0x6403, 0x7820, 0xeaa2, 0xdbd8, 0xad2c, 0x0, 0x0);
        gbc.writeMem(0x399, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6403, gbc.sp());
        EXPECT(0x39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 011C
        gbc.setState(0xbd0e, 0xc3c0, 0x4580, 0x71ad, 0x5610, 0x9f5, 0x1, 0x1);
        gbc.writeMem(0xbd0e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc3c0, gbc.sp());
        EXPECT(0xbd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd0e));
        EXPECT(0x38, gbc.readMem(0xbd0f));
        // CB 38 011D
        gbc.setState(0x491b, 0x6fd2, 0x16a0, 0x41e8, 0xa506, 0x264d, 0x1, 0x0);
        gbc.writeMem(0x491b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6fd2, gbc.sp());
        EXPECT(0x491d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 011E
        gbc.setState(0x7346, 0x6662, 0xf990, 0x954c, 0xba4b, 0x4bdd, 0x0, 0x0);
        gbc.writeMem(0x7346, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6662, gbc.sp());
        EXPECT(0x7348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 011F
        gbc.setState(0x5790, 0xcd40, 0x1690, 0x3840, 0xc97d, 0x38f4, 0x1, 0x0);
        gbc.writeMem(0x5790, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcd40, gbc.sp());
        EXPECT(0x5792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0120
        gbc.setState(0x38c4, 0x621e, 0x2d40, 0xd03d, 0x7941, 0x2163, 0x0, 0x1);
        gbc.writeMem(0x38c4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x621e, gbc.sp());
        EXPECT(0x38c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0121
        gbc.setState(0x5f9a, 0x5447, 0x8150, 0xedd1, 0x69d9, 0xa745, 0x1, 0x1);
        gbc.writeMem(0x5f9a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5447, gbc.sp());
        EXPECT(0x5f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0122
        gbc.setState(0x7c64, 0xdcc7, 0xddd0, 0x217e, 0x51c2, 0x2616, 0x1, 0x1);
        gbc.writeMem(0x7c64, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdcc7, gbc.sp());
        EXPECT(0x7c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0123
        gbc.setState(0x3e46, 0x2b15, 0x2310, 0x7706, 0xb219, 0xb3a0, 0x1, 0x0);
        gbc.writeMem(0x3e46, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2b15, gbc.sp());
        EXPECT(0x3e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0124
        gbc.setState(0x180f, 0xe415, 0xfc90, 0x14d5, 0xb13e, 0x6779, 0x0, 0x0);
        gbc.writeMem(0x180f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe415, gbc.sp());
        EXPECT(0x1811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0125
        gbc.setState(0x67d1, 0xf9ae, 0xd140, 0x564f, 0x70cf, 0x2b10, 0x0, 0x1);
        gbc.writeMem(0x67d1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf9ae, gbc.sp());
        EXPECT(0x67d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0126
        gbc.setState(0xd20e, 0x232d, 0x5a90, 0x9661, 0xbdd5, 0x7c60, 0x1, 0x0);
        gbc.writeMem(0xd20e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x232d, gbc.sp());
        EXPECT(0xd210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20e));
        EXPECT(0x38, gbc.readMem(0xd20f));
        // CB 38 0127
        gbc.setState(0xb853, 0x25ab, 0xf320, 0x4682, 0x5b76, 0x6a4a, 0x1, 0x1);
        gbc.writeMem(0xb853, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x25ab, gbc.sp());
        EXPECT(0xb855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb853));
        EXPECT(0x38, gbc.readMem(0xb854));
        // CB 38 0128
        gbc.setState(0xc9b2, 0xaad, 0xeca0, 0xc32e, 0x7e7c, 0x46bd, 0x0, 0x1);
        gbc.writeMem(0xc9b2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xaad, gbc.sp());
        EXPECT(0xc9b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b2));
        EXPECT(0x38, gbc.readMem(0xc9b3));
        // CB 38 0129
        gbc.setState(0x6177, 0x9557, 0x1910, 0x78ef, 0xc72, 0xf019, 0x0, 0x1);
        gbc.writeMem(0x6177, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9557, gbc.sp());
        EXPECT(0x6179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 012A
        gbc.setState(0x32f0, 0x2053, 0x4270, 0x26aa, 0x8041, 0x3c5, 0x1, 0x1);
        gbc.writeMem(0x32f0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2053, gbc.sp());
        EXPECT(0x32f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 012B
        gbc.setState(0x35ca, 0x205d, 0xe110, 0x931a, 0xe013, 0xd926, 0x1, 0x1);
        gbc.writeMem(0x35ca, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x205d, gbc.sp());
        EXPECT(0x35cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 012C
        gbc.setState(0x19b7, 0x58f4, 0x2150, 0x3d07, 0xb448, 0xb0f9, 0x0, 0x1);
        gbc.writeMem(0x19b7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x58f4, gbc.sp());
        EXPECT(0x19b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 012D
        gbc.setState(0x1629, 0x242a, 0xabb0, 0xaf9c, 0xb3ed, 0x1bfc, 0x1, 0x1);
        gbc.writeMem(0x1629, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x242a, gbc.sp());
        EXPECT(0x162b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 012E
        gbc.setState(0xe25f, 0x43aa, 0x26b0, 0xef14, 0x9c92, 0xe11e, 0x0, 0x1);
        gbc.writeMem(0xe25f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x43aa, gbc.sp());
        EXPECT(0xe261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25f));
        EXPECT(0x38, gbc.readMem(0xe260));
        // CB 38 012F
        gbc.setState(0x371f, 0x9eef, 0x8da0, 0xe417, 0x668a, 0xec70, 0x0, 0x1);
        gbc.writeMem(0x371f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9eef, gbc.sp());
        EXPECT(0x3721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0130
        gbc.setState(0x7e94, 0xe779, 0xd120, 0xa028, 0xd0f7, 0x3daf, 0x1, 0x0);
        gbc.writeMem(0x7e94, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe779, gbc.sp());
        EXPECT(0x7e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0131
        gbc.setState(0x1e9d, 0x87dd, 0xc310, 0x2e39, 0xbc2c, 0xbfe8, 0x0, 0x1);
        gbc.writeMem(0x1e9d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x87dd, gbc.sp());
        EXPECT(0x1e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0132
        gbc.setState(0xa5d9, 0xaf16, 0xdee0, 0x48, 0x1670, 0x2920, 0x1, 0x0);
        gbc.writeMem(0xa5d9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xaf16, gbc.sp());
        EXPECT(0xa5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d9));
        EXPECT(0x38, gbc.readMem(0xa5da));
        // CB 38 0134
        gbc.setState(0x608d, 0x5baa, 0x7130, 0x6339, 0xcde7, 0x82fa, 0x0, 0x1);
        gbc.writeMem(0x608d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5baa, gbc.sp());
        EXPECT(0x608f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0135
        gbc.setState(0x7710, 0x180c, 0xe9e0, 0xe004, 0x786, 0x67c2, 0x0, 0x0);
        gbc.writeMem(0x7710, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x180c, gbc.sp());
        EXPECT(0x7712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0136
        gbc.setState(0xe37f, 0x7034, 0x8dd0, 0xe122, 0x9620, 0x9779, 0x0, 0x0);
        gbc.writeMem(0xe37f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7034, gbc.sp());
        EXPECT(0xe381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe37f));
        EXPECT(0x38, gbc.readMem(0xe380));
        // CB 38 0137
        gbc.setState(0x4b13, 0x6fd2, 0x20a0, 0xcb24, 0xb4b5, 0xccf7, 0x1, 0x1);
        gbc.writeMem(0x4b13, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6fd2, gbc.sp());
        EXPECT(0x4b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0138
        gbc.setState(0xd82e, 0x8fc9, 0xda30, 0x324c, 0xa73, 0x4a14, 0x1, 0x0);
        gbc.writeMem(0xd82e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8fc9, gbc.sp());
        EXPECT(0xd830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd82e));
        EXPECT(0x38, gbc.readMem(0xd82f));
        // CB 38 0139
        gbc.setState(0x572b, 0xa2d9, 0x5920, 0xd0ca, 0xec24, 0x77c6, 0x1, 0x0);
        gbc.writeMem(0x572b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa2d9, gbc.sp());
        EXPECT(0x572d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 013A
        gbc.setState(0x4c89, 0x58e3, 0x1070, 0xd873, 0x8daf, 0x8555, 0x1, 0x1);
        gbc.writeMem(0x4c89, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x58e3, gbc.sp());
        EXPECT(0x4c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 013B
        gbc.setState(0x9066, 0xdaf3, 0x1a50, 0x9dbe, 0xff75, 0xb125, 0x0, 0x0);
        gbc.writeMem(0x9066, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdaf3, gbc.sp());
        EXPECT(0x9068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9066));
        EXPECT(0x38, gbc.readMem(0x9067));
        // CB 38 013C
        gbc.setState(0x2116, 0xfae4, 0x1a80, 0xc0d2, 0xb0fa, 0x3d07, 0x1, 0x1);
        gbc.writeMem(0x2116, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfae4, gbc.sp());
        EXPECT(0x2118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 013D
        gbc.setState(0x8751, 0x5ec3, 0x5b60, 0x25da, 0x6a93, 0x6c10, 0x1, 0x0);
        gbc.writeMem(0x8751, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5ec3, gbc.sp());
        EXPECT(0x8753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8751));
        EXPECT(0x38, gbc.readMem(0x8752));
        // CB 38 013E
        gbc.setState(0xde8c, 0xd527, 0x4950, 0x435f, 0x98a4, 0x8a2f, 0x0, 0x0);
        gbc.writeMem(0xde8c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd527, gbc.sp());
        EXPECT(0xde8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8c));
        EXPECT(0x38, gbc.readMem(0xde8d));
        // CB 38 013F
        gbc.setState(0xd1ba, 0xaf97, 0xfcc0, 0x1a10, 0xbdfc, 0xef73, 0x1, 0x0);
        gbc.writeMem(0xd1ba, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xaf97, gbc.sp());
        EXPECT(0xd1bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ba));
        EXPECT(0x38, gbc.readMem(0xd1bb));
        // CB 38 0140
        gbc.setState(0xa250, 0x826f, 0x2d70, 0x39d9, 0x29e3, 0xa34c, 0x0, 0x1);
        gbc.writeMem(0xa250, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x826f, gbc.sp());
        EXPECT(0xa252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa250));
        EXPECT(0x38, gbc.readMem(0xa251));
        // CB 38 0142
        gbc.setState(0xadd4, 0xdb0b, 0xef10, 0xb8a8, 0x6515, 0x3e4b, 0x0, 0x0);
        gbc.writeMem(0xadd4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdb0b, gbc.sp());
        EXPECT(0xadd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd4));
        EXPECT(0x38, gbc.readMem(0xadd5));
        // CB 38 0143
        gbc.setState(0xc8bb, 0x1fdb, 0xbf10, 0xeada, 0xb33e, 0x6886, 0x1, 0x0);
        gbc.writeMem(0xc8bb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1fdb, gbc.sp());
        EXPECT(0xc8bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8bb));
        EXPECT(0x38, gbc.readMem(0xc8bc));
        // CB 38 0144
        gbc.setState(0xd2fa, 0xe9fc, 0x8b40, 0xbcc7, 0xab8a, 0xa8f8, 0x1, 0x1);
        gbc.writeMem(0xd2fa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe9fc, gbc.sp());
        EXPECT(0xd2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2fa));
        EXPECT(0x38, gbc.readMem(0xd2fb));
        // CB 38 0145
        gbc.setState(0x886, 0x5d2f, 0x1870, 0xbc5f, 0x2778, 0x4a4f, 0x0, 0x0);
        gbc.writeMem(0x886, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5d2f, gbc.sp());
        EXPECT(0x888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0146
        gbc.setState(0x6729, 0xb0b, 0x38b0, 0xdc12, 0x48d3, 0x8a61, 0x0, 0x0);
        gbc.writeMem(0x6729, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb0b, gbc.sp());
        EXPECT(0x672b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0148
        gbc.setState(0x11cc, 0xef89, 0x4fc0, 0x6daa, 0x2bd8, 0x7e37, 0x1, 0x0);
        gbc.writeMem(0x11cc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xef89, gbc.sp());
        EXPECT(0x11ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0149
        gbc.setState(0x4112, 0xa139, 0x5f30, 0x7d8b, 0xd87c, 0x5bcd, 0x1, 0x1);
        gbc.writeMem(0x4112, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa139, gbc.sp());
        EXPECT(0x4114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 014A
        gbc.setState(0xc5d8, 0xebb2, 0x3900, 0x56ea, 0x9543, 0x8ec6, 0x1, 0x1);
        gbc.writeMem(0xc5d8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xebb2, gbc.sp());
        EXPECT(0xc5da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d8));
        EXPECT(0x38, gbc.readMem(0xc5d9));
        // CB 38 014B
        gbc.setState(0xe6d, 0x8f7d, 0xf8a0, 0x52db, 0x9e77, 0xeca7, 0x0, 0x0);
        gbc.writeMem(0xe6d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8f7d, gbc.sp());
        EXPECT(0xe6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 014C
        gbc.setState(0x1f82, 0xbe49, 0xda90, 0x7772, 0x69fa, 0xc754, 0x1, 0x0);
        gbc.writeMem(0x1f82, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbe49, gbc.sp());
        EXPECT(0x1f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 014D
        gbc.setState(0xa71, 0xc0de, 0xd2a0, 0x11dc, 0x90e9, 0x1851, 0x1, 0x0);
        gbc.writeMem(0xa71, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc0de, gbc.sp());
        EXPECT(0xa73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 014E
        gbc.setState(0xc95a, 0xe019, 0xc830, 0x5423, 0x86bc, 0xef03, 0x0, 0x0);
        gbc.writeMem(0xc95a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe019, gbc.sp());
        EXPECT(0xc95c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc95a));
        EXPECT(0x38, gbc.readMem(0xc95b));
        // CB 38 014F
        gbc.setState(0x5825, 0x833d, 0x8270, 0x70f1, 0xfc14, 0x21f9, 0x0, 0x1);
        gbc.writeMem(0x5825, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x833d, gbc.sp());
        EXPECT(0x5827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0150
        gbc.setState(0xdbf5, 0x2419, 0xaad0, 0xbc2, 0xe1aa, 0x312b, 0x1, 0x1);
        gbc.writeMem(0xdbf5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2419, gbc.sp());
        EXPECT(0xdbf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf5));
        EXPECT(0x38, gbc.readMem(0xdbf6));
        // CB 38 0151
        gbc.setState(0xd608, 0x773a, 0xe900, 0xf21d, 0xebcf, 0x11c8, 0x0, 0x0);
        gbc.writeMem(0xd608, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x773a, gbc.sp());
        EXPECT(0xd60a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd608));
        EXPECT(0x38, gbc.readMem(0xd609));
        // CB 38 0152
        gbc.setState(0x61c, 0x37ad, 0xd660, 0x69b2, 0x3b89, 0xaa18, 0x0, 0x1);
        gbc.writeMem(0x61c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x37ad, gbc.sp());
        EXPECT(0x61e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0153
        gbc.setState(0xcd2, 0x2b37, 0x4ee0, 0xeb10, 0x1210, 0x2fa2, 0x1, 0x0);
        gbc.writeMem(0xcd2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2b37, gbc.sp());
        EXPECT(0xcd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0154
        gbc.setState(0x4eb6, 0x5b90, 0x8760, 0x9135, 0x32b8, 0xfd55, 0x1, 0x1);
        gbc.writeMem(0x4eb6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5b90, gbc.sp());
        EXPECT(0x4eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0155
        gbc.setState(0x84d1, 0xcf0e, 0x31a0, 0xab72, 0xf970, 0x55b, 0x1, 0x1);
        gbc.writeMem(0x84d1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcf0e, gbc.sp());
        EXPECT(0x84d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d1));
        EXPECT(0x38, gbc.readMem(0x84d2));
        // CB 38 0156
        gbc.setState(0xe14d, 0x8136, 0xdda0, 0x7dfb, 0x9904, 0x4108, 0x1, 0x1);
        gbc.writeMem(0xe14d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8136, gbc.sp());
        EXPECT(0xe14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14d));
        EXPECT(0x38, gbc.readMem(0xe14e));
        // CB 38 0157
        gbc.setState(0xbf26, 0x42f9, 0xa550, 0x8cb, 0xdd43, 0x8ec6, 0x0, 0x1);
        gbc.writeMem(0xbf26, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x42f9, gbc.sp());
        EXPECT(0xbf28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf26));
        EXPECT(0x38, gbc.readMem(0xbf27));
        // CB 38 0159
        gbc.setState(0x56c6, 0xf5b, 0x2260, 0x6e88, 0x3293, 0x6c07, 0x0, 0x0);
        gbc.writeMem(0x56c6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf5b, gbc.sp());
        EXPECT(0x56c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 015A
        gbc.setState(0xd49f, 0xa8d6, 0x8530, 0x1487, 0x551c, 0x5e67, 0x0, 0x1);
        gbc.writeMem(0xd49f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa8d6, gbc.sp());
        EXPECT(0xd4a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49f));
        EXPECT(0x38, gbc.readMem(0xd4a0));
        // CB 38 015B
        gbc.setState(0x39a, 0xcf8d, 0x4bd0, 0xc9a9, 0x70fc, 0x4d0f, 0x0, 0x0);
        gbc.writeMem(0x39a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcf8d, gbc.sp());
        EXPECT(0x39c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 015C
        gbc.setState(0x1c4a, 0x897, 0xcd10, 0xa11f, 0x9954, 0xc236, 0x0, 0x1);
        gbc.writeMem(0x1c4a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x897, gbc.sp());
        EXPECT(0x1c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 015E
        gbc.setState(0xe934, 0x6f46, 0x55e0, 0x2f6d, 0x7a98, 0x95a3, 0x1, 0x0);
        gbc.writeMem(0xe934, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6f46, gbc.sp());
        EXPECT(0xe936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe934));
        EXPECT(0x38, gbc.readMem(0xe935));
        // CB 38 015F
        gbc.setState(0xfa, 0x7919, 0x22d0, 0xce9d, 0xf825, 0x79e3, 0x1, 0x0);
        gbc.writeMem(0xfa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7919, gbc.sp());
        EXPECT(0xfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0160
        gbc.setState(0xe6bd, 0x9718, 0xa6e0, 0x4b23, 0x30a4, 0x9b3c, 0x1, 0x1);
        gbc.writeMem(0xe6bd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9718, gbc.sp());
        EXPECT(0xe6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6bd));
        EXPECT(0x38, gbc.readMem(0xe6be));
        // CB 38 0161
        gbc.setState(0x85ad, 0xfce3, 0x59d0, 0xad9a, 0x14ca, 0x2c71, 0x0, 0x1);
        gbc.writeMem(0x85ad, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfce3, gbc.sp());
        EXPECT(0x85af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ad));
        EXPECT(0x38, gbc.readMem(0x85ae));
        // CB 38 0162
        gbc.setState(0x7dc4, 0x6355, 0xd500, 0xc2f3, 0x70cd, 0xb449, 0x0, 0x1);
        gbc.writeMem(0x7dc4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6355, gbc.sp());
        EXPECT(0x7dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0163
        gbc.setState(0x8d4f, 0x6817, 0xc4d0, 0x8119, 0x7c0b, 0x81f7, 0x1, 0x0);
        gbc.writeMem(0x8d4f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6817, gbc.sp());
        EXPECT(0x8d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4f));
        EXPECT(0x38, gbc.readMem(0x8d50));
        // CB 38 0164
        gbc.setState(0xdfec, 0x201, 0x1520, 0xe4e2, 0xdbc0, 0x9d1b, 0x1, 0x0);
        gbc.writeMem(0xdfec, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x201, gbc.sp());
        EXPECT(0xdfee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfec));
        EXPECT(0x38, gbc.readMem(0xdfed));
        // CB 38 0165
        gbc.setState(0x3b4c, 0x42d6, 0x4d50, 0xd8b0, 0xeb4c, 0xccbd, 0x1, 0x1);
        gbc.writeMem(0x3b4c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x42d6, gbc.sp());
        EXPECT(0x3b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0166
        gbc.setState(0x1c3c, 0x6592, 0xf750, 0xe000, 0xa07e, 0x24e4, 0x1, 0x1);
        gbc.writeMem(0x1c3c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6592, gbc.sp());
        EXPECT(0x1c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0167
        gbc.setState(0x1cdb, 0xfa28, 0x9c90, 0xbbbd, 0x2534, 0x57ee, 0x0, 0x1);
        gbc.writeMem(0x1cdb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfa28, gbc.sp());
        EXPECT(0x1cdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0168
        gbc.setState(0xde52, 0xf977, 0xf470, 0xcd44, 0x53ff, 0x5b68, 0x1, 0x1);
        gbc.writeMem(0xde52, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf977, gbc.sp());
        EXPECT(0xde54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde52));
        EXPECT(0x38, gbc.readMem(0xde53));
        // CB 38 0169
        gbc.setState(0x8ce1, 0x143b, 0x1150, 0x8e09, 0xee7d, 0xc2ef, 0x1, 0x1);
        gbc.writeMem(0x8ce1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x143b, gbc.sp());
        EXPECT(0x8ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce1));
        EXPECT(0x38, gbc.readMem(0x8ce2));
        // CB 38 016A
        gbc.setState(0x5c6b, 0x8702, 0x5520, 0x2130, 0xe9dc, 0x8d2, 0x1, 0x0);
        gbc.writeMem(0x5c6b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8702, gbc.sp());
        EXPECT(0x5c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 016B
        gbc.setState(0xbde7, 0xf9b0, 0x8670, 0xebed, 0x7243, 0x4aa, 0x0, 0x1);
        gbc.writeMem(0xbde7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf9b0, gbc.sp());
        EXPECT(0xbde9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde7));
        EXPECT(0x38, gbc.readMem(0xbde8));
        // CB 38 016C
        gbc.setState(0x6318, 0x9897, 0xa0f0, 0x5297, 0xda5c, 0xf360, 0x0, 0x0);
        gbc.writeMem(0x6318, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9897, gbc.sp());
        EXPECT(0x631a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 016E
        gbc.setState(0x32ee, 0x3b3f, 0x5680, 0x51d9, 0x794e, 0xe926, 0x1, 0x1);
        gbc.writeMem(0x32ee, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3b3f, gbc.sp());
        EXPECT(0x32f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 016F
        gbc.setState(0xc1c0, 0xff5b, 0xa2f0, 0x4348, 0x55b2, 0x9bfc, 0x0, 0x0);
        gbc.writeMem(0xc1c0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xff5b, gbc.sp());
        EXPECT(0xc1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c0));
        EXPECT(0x38, gbc.readMem(0xc1c1));
        // CB 38 0170
        gbc.setState(0x45b1, 0x27e8, 0x8e30, 0x8e05, 0x1638, 0x22b2, 0x1, 0x1);
        gbc.writeMem(0x45b1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x27e8, gbc.sp());
        EXPECT(0x45b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0171
        gbc.setState(0x27c9, 0xdd56, 0xaac0, 0x7c4f, 0x2d6f, 0xf247, 0x0, 0x1);
        gbc.writeMem(0x27c9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdd56, gbc.sp());
        EXPECT(0x27cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0172
        gbc.setState(0x5829, 0x3cd2, 0xd0f0, 0x1f89, 0x33ff, 0x78ba, 0x0, 0x0);
        gbc.writeMem(0x5829, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3cd2, gbc.sp());
        EXPECT(0x582b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0173
        gbc.setState(0xc446, 0x678f, 0x9e0, 0x4f45, 0xc1b0, 0x8d32, 0x0, 0x1);
        gbc.writeMem(0xc446, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x678f, gbc.sp());
        EXPECT(0xc448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc446));
        EXPECT(0x38, gbc.readMem(0xc447));
        // CB 38 0174
        gbc.setState(0x7b18, 0xb365, 0x8a90, 0xc9b7, 0xb1d0, 0xc506, 0x0, 0x0);
        gbc.writeMem(0x7b18, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb365, gbc.sp());
        EXPECT(0x7b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0175
        gbc.setState(0xd2b, 0x7411, 0x91f0, 0x94b7, 0x6789, 0x83d3, 0x1, 0x0);
        gbc.writeMem(0xd2b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7411, gbc.sp());
        EXPECT(0xd2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0176
        gbc.setState(0xd0c9, 0xb7a, 0x34d0, 0x17df, 0x50f3, 0x834d, 0x0, 0x1);
        gbc.writeMem(0xd0c9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb7a, gbc.sp());
        EXPECT(0xd0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c9));
        EXPECT(0x38, gbc.readMem(0xd0ca));
        // CB 38 0177
        gbc.setState(0x40e0, 0xff8, 0xad0, 0xda27, 0xbfd2, 0x25de, 0x1, 0x0);
        gbc.writeMem(0x40e0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xff8, gbc.sp());
        EXPECT(0x40e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0178
        gbc.setState(0x78e4, 0xaf30, 0xfc90, 0x2c18, 0xaf6e, 0xc582, 0x0, 0x1);
        gbc.writeMem(0x78e4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xaf30, gbc.sp());
        EXPECT(0x78e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0179
        gbc.setState(0x9fbe, 0xe12f, 0x89c0, 0x3835, 0x44c7, 0xccad, 0x1, 0x0);
        gbc.writeMem(0x9fbe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe12f, gbc.sp());
        EXPECT(0x9fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fbe));
        EXPECT(0x38, gbc.readMem(0x9fbf));
        // CB 38 017A
        gbc.setState(0xd017, 0x8daa, 0xe280, 0xeaa, 0x4900, 0x2f00, 0x0, 0x0);
        gbc.writeMem(0xd017, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8daa, gbc.sp());
        EXPECT(0xd019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd017));
        EXPECT(0x38, gbc.readMem(0xd018));
        // CB 38 017B
        gbc.setState(0x8e79, 0x327a, 0x7350, 0xe7f5, 0x5c09, 0xfaf3, 0x0, 0x0);
        gbc.writeMem(0x8e79, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x327a, gbc.sp());
        EXPECT(0x8e7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e79));
        EXPECT(0x38, gbc.readMem(0x8e7a));
        // CB 38 017C
        gbc.setState(0x784a, 0x5d46, 0x1d70, 0x13cb, 0x647a, 0xafdc, 0x1, 0x0);
        gbc.writeMem(0x784a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5d46, gbc.sp());
        EXPECT(0x784c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 017D
        gbc.setState(0x805a, 0x5ff3, 0xa2d0, 0x29fe, 0x4250, 0xd3ad, 0x0, 0x0);
        gbc.writeMem(0x805a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5ff3, gbc.sp());
        EXPECT(0x805c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x805a));
        EXPECT(0x38, gbc.readMem(0x805b));
        // CB 38 017E
        gbc.setState(0x60c1, 0x6d93, 0xbc50, 0xdcaf, 0x446d, 0x506f, 0x0, 0x1);
        gbc.writeMem(0x60c1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6d93, gbc.sp());
        EXPECT(0x60c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 017F
        gbc.setState(0x9b62, 0xa52e, 0xf90, 0xaab6, 0x800e, 0x7503, 0x1, 0x0);
        gbc.writeMem(0x9b62, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa52e, gbc.sp());
        EXPECT(0x9b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b62));
        EXPECT(0x38, gbc.readMem(0x9b63));
        // CB 38 0181
        gbc.setState(0x7e09, 0x41a4, 0x2c20, 0x82c7, 0x5e13, 0xb05f, 0x1, 0x0);
        gbc.writeMem(0x7e09, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x41a4, gbc.sp());
        EXPECT(0x7e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0182
        gbc.setState(0xdaf5, 0x8a7f, 0x6dd0, 0x7383, 0x34c7, 0xcb6e, 0x0, 0x1);
        gbc.writeMem(0xdaf5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8a7f, gbc.sp());
        EXPECT(0xdaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf5));
        EXPECT(0x38, gbc.readMem(0xdaf6));
        // CB 38 0183
        gbc.setState(0x9e2a, 0xe0f8, 0x4090, 0x5555, 0x507f, 0xe199, 0x1, 0x0);
        gbc.writeMem(0x9e2a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe0f8, gbc.sp());
        EXPECT(0x9e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e2a));
        EXPECT(0x38, gbc.readMem(0x9e2b));
        // CB 38 0184
        gbc.setState(0x78bf, 0xc9f5, 0x4560, 0xc1b6, 0x41c9, 0x2786, 0x0, 0x0);
        gbc.writeMem(0x78bf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc9f5, gbc.sp());
        EXPECT(0x78c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0185
        gbc.setState(0xa201, 0xbfdc, 0x1e00, 0x224e, 0x379b, 0xa275, 0x0, 0x0);
        gbc.writeMem(0xa201, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbfdc, gbc.sp());
        EXPECT(0xa203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa201));
        EXPECT(0x38, gbc.readMem(0xa202));
        // CB 38 0186
        gbc.setState(0x202a, 0x3f79, 0x8ca0, 0xfaa5, 0x69ee, 0x1b54, 0x1, 0x1);
        gbc.writeMem(0x202a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3f79, gbc.sp());
        EXPECT(0x202c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0187
        gbc.setState(0x9ea7, 0x2f5f, 0x70b0, 0x8db2, 0xd15f, 0x627d, 0x0, 0x0);
        gbc.writeMem(0x9ea7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2f5f, gbc.sp());
        EXPECT(0x9ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea7));
        EXPECT(0x38, gbc.readMem(0x9ea8));
        // CB 38 0188
        gbc.setState(0x9bdb, 0x1fcc, 0x1230, 0xde52, 0xc920, 0xecc6, 0x1, 0x1);
        gbc.writeMem(0x9bdb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1fcc, gbc.sp());
        EXPECT(0x9bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bdb));
        EXPECT(0x38, gbc.readMem(0x9bdc));
        // CB 38 0189
        gbc.setState(0x23bc, 0x5494, 0x6750, 0xb6db, 0xf67c, 0x9e13, 0x1, 0x1);
        gbc.writeMem(0x23bc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5494, gbc.sp());
        EXPECT(0x23be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 018A
        gbc.setState(0x3349, 0xc219, 0xfe20, 0xbfaf, 0x7427, 0xdf35, 0x0, 0x1);
        gbc.writeMem(0x3349, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc219, gbc.sp());
        EXPECT(0x334b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 018C
        gbc.setState(0x95a4, 0xd844, 0x9c90, 0x3f37, 0xc27b, 0x92b3, 0x0, 0x1);
        gbc.writeMem(0x95a4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd844, gbc.sp());
        EXPECT(0x95a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a4));
        EXPECT(0x38, gbc.readMem(0x95a5));
        // CB 38 018D
        gbc.setState(0x659d, 0xef0f, 0xd600, 0x6d2a, 0xf97e, 0xe343, 0x1, 0x0);
        gbc.writeMem(0x659d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xef0f, gbc.sp());
        EXPECT(0x659f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 018E
        gbc.setState(0x71ee, 0x9e24, 0xfdf0, 0xeca3, 0x25b7, 0x6324, 0x0, 0x1);
        gbc.writeMem(0x71ee, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9e24, gbc.sp());
        EXPECT(0x71f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 018F
        gbc.setState(0x2cd4, 0xfe93, 0xb3b0, 0x3a9a, 0x794b, 0x7903, 0x1, 0x0);
        gbc.writeMem(0x2cd4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfe93, gbc.sp());
        EXPECT(0x2cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0190
        gbc.setState(0x741d, 0x1849, 0xf580, 0xf143, 0xb064, 0x5dae, 0x0, 0x0);
        gbc.writeMem(0x741d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1849, gbc.sp());
        EXPECT(0x741f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0191
        gbc.setState(0xe68, 0x7194, 0x4f50, 0xd16c, 0xff2, 0x4bb1, 0x0, 0x0);
        gbc.writeMem(0xe68, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7194, gbc.sp());
        EXPECT(0xe6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0192
        gbc.setState(0x3f41, 0x964e, 0xb7c0, 0x42c9, 0xc8e1, 0x5ae2, 0x0, 0x1);
        gbc.writeMem(0x3f41, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x964e, gbc.sp());
        EXPECT(0x3f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0193
        gbc.setState(0x4e9e, 0xe402, 0x8680, 0x255d, 0xc052, 0xfdd, 0x0, 0x1);
        gbc.writeMem(0x4e9e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe402, gbc.sp());
        EXPECT(0x4ea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0194
        gbc.setState(0xbcd1, 0x5f33, 0xeb50, 0xab44, 0x597b, 0xd6ee, 0x0, 0x0);
        gbc.writeMem(0xbcd1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5f33, gbc.sp());
        EXPECT(0xbcd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd1));
        EXPECT(0x38, gbc.readMem(0xbcd2));
        // CB 38 0195
        gbc.setState(0x30f7, 0xd33e, 0x81c0, 0x76a9, 0x66f9, 0x152c, 0x1, 0x0);
        gbc.writeMem(0x30f7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd33e, gbc.sp());
        EXPECT(0x30f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0196
        gbc.setState(0x928a, 0x254f, 0xde10, 0x1445, 0x517d, 0xbd50, 0x0, 0x0);
        gbc.writeMem(0x928a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x254f, gbc.sp());
        EXPECT(0x928c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928a));
        EXPECT(0x38, gbc.readMem(0x928b));
        // CB 38 0197
        gbc.setState(0x411e, 0x3e91, 0x6200, 0x478a, 0x4237, 0xca6d, 0x1, 0x0);
        gbc.writeMem(0x411e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3e91, gbc.sp());
        EXPECT(0x4120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0198
        gbc.setState(0x5145, 0xb89c, 0xe960, 0x7533, 0xa861, 0x4cb9, 0x0, 0x1);
        gbc.writeMem(0x5145, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb89c, gbc.sp());
        EXPECT(0x5147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0199
        gbc.setState(0x6690, 0xda92, 0x6f80, 0x690f, 0x8ce9, 0xa40b, 0x1, 0x1);
        gbc.writeMem(0x6690, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xda92, gbc.sp());
        EXPECT(0x6692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 019A
        gbc.setState(0x691a, 0x9db6, 0xf10, 0x2054, 0xb305, 0xc0ea, 0x0, 0x1);
        gbc.writeMem(0x691a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9db6, gbc.sp());
        EXPECT(0x691c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 019B
        gbc.setState(0x74df, 0x32d0, 0x6a40, 0x3e0a, 0x2d21, 0x917d, 0x0, 0x1);
        gbc.writeMem(0x74df, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x32d0, gbc.sp());
        EXPECT(0x74e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 019C
        gbc.setState(0x4651, 0x1db3, 0xf4e0, 0xf2da, 0x744c, 0x9bb7, 0x0, 0x0);
        gbc.writeMem(0x4651, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1db3, gbc.sp());
        EXPECT(0x4653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 019D
        gbc.setState(0xe243, 0x3cb5, 0x5e00, 0xec2a, 0x3030, 0x22c9, 0x0, 0x1);
        gbc.writeMem(0xe243, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3cb5, gbc.sp());
        EXPECT(0xe245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe243));
        EXPECT(0x38, gbc.readMem(0xe244));
        // CB 38 019E
        gbc.setState(0xbe51, 0x30f0, 0x8150, 0xbd6e, 0x6cb7, 0x5cff, 0x0, 0x0);
        gbc.writeMem(0xbe51, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x30f0, gbc.sp());
        EXPECT(0xbe53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe51));
        EXPECT(0x38, gbc.readMem(0xbe52));
        // CB 38 019F
        gbc.setState(0x4272, 0x510b, 0xabc0, 0x205e, 0x93a2, 0xae93, 0x0, 0x0);
        gbc.writeMem(0x4272, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x510b, gbc.sp());
        EXPECT(0x4274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01A0
        gbc.setState(0xc698, 0x3847, 0x5c40, 0x96ab, 0x7661, 0xc68b, 0x0, 0x1);
        gbc.writeMem(0xc698, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3847, gbc.sp());
        EXPECT(0xc69a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc698));
        EXPECT(0x38, gbc.readMem(0xc699));
        // CB 38 01A1
        gbc.setState(0x5e72, 0x4902, 0xad70, 0x525, 0xad2b, 0xc058, 0x0, 0x0);
        gbc.writeMem(0x5e72, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4902, gbc.sp());
        EXPECT(0x5e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01A2
        gbc.setState(0x98e9, 0x50de, 0x2a50, 0x8a78, 0xcfa1, 0x682f, 0x0, 0x0);
        gbc.writeMem(0x98e9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x50de, gbc.sp());
        EXPECT(0x98eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e9));
        EXPECT(0x38, gbc.readMem(0x98ea));
        // CB 38 01A3
        gbc.setState(0xb1dc, 0x7bc9, 0x2780, 0xdd26, 0x1683, 0x6e18, 0x0, 0x0);
        gbc.writeMem(0xb1dc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7bc9, gbc.sp());
        EXPECT(0xb1de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1dc));
        EXPECT(0x38, gbc.readMem(0xb1dd));
        // CB 38 01A4
        gbc.setState(0x88cc, 0x3bb6, 0xdf60, 0x308c, 0x120c, 0x31cb, 0x0, 0x0);
        gbc.writeMem(0x88cc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3bb6, gbc.sp());
        EXPECT(0x88ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88cc));
        EXPECT(0x38, gbc.readMem(0x88cd));
        // CB 38 01A5
        gbc.setState(0x678b, 0xc126, 0xf840, 0xf0d3, 0xfe97, 0x3346, 0x1, 0x0);
        gbc.writeMem(0x678b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc126, gbc.sp());
        EXPECT(0x678d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01A6
        gbc.setState(0x5190, 0xa801, 0xfa90, 0xb02e, 0x2b35, 0x132, 0x0, 0x0);
        gbc.writeMem(0x5190, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa801, gbc.sp());
        EXPECT(0x5192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01A7
        gbc.setState(0xe578, 0xad4b, 0x5320, 0x7125, 0x9516, 0xd858, 0x1, 0x1);
        gbc.writeMem(0xe578, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xad4b, gbc.sp());
        EXPECT(0xe57a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe578));
        EXPECT(0x38, gbc.readMem(0xe579));
        // CB 38 01A8
        gbc.setState(0xa28e, 0xbe0c, 0xc860, 0xd24a, 0xa4f6, 0xace8, 0x0, 0x0);
        gbc.writeMem(0xa28e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbe0c, gbc.sp());
        EXPECT(0xa290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa28e));
        EXPECT(0x38, gbc.readMem(0xa28f));
        // CB 38 01A9
        gbc.setState(0xe097, 0xfa85, 0x1020, 0x8083, 0x197f, 0xdd2d, 0x0, 0x0);
        gbc.writeMem(0xe097, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfa85, gbc.sp());
        EXPECT(0xe099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe097));
        EXPECT(0x38, gbc.readMem(0xe098));
        // CB 38 01AA
        gbc.setState(0xc1ad, 0x6b8a, 0x4580, 0x286b, 0xacb8, 0xc1f8, 0x0, 0x1);
        gbc.writeMem(0xc1ad, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6b8a, gbc.sp());
        EXPECT(0xc1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ad));
        EXPECT(0x38, gbc.readMem(0xc1ae));
        // CB 38 01AB
        gbc.setState(0x5fa2, 0x77f7, 0x6470, 0xf38a, 0xa690, 0xa6f2, 0x1, 0x0);
        gbc.writeMem(0x5fa2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x77f7, gbc.sp());
        EXPECT(0x5fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01AC
        gbc.setState(0x9544, 0xf435, 0xa20, 0xb67f, 0x6e86, 0xbed0, 0x1, 0x0);
        gbc.writeMem(0x9544, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf435, gbc.sp());
        EXPECT(0x9546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9544));
        EXPECT(0x38, gbc.readMem(0x9545));
        // CB 38 01AD
        gbc.setState(0xef47, 0x7da5, 0x2870, 0x973e, 0x7963, 0xd7d1, 0x1, 0x0);
        gbc.writeMem(0xef47, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7da5, gbc.sp());
        EXPECT(0xef49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef47));
        EXPECT(0x38, gbc.readMem(0xef48));
        // CB 38 01AE
        gbc.setState(0x5330, 0x8f44, 0x4f10, 0x6c92, 0x53ef, 0x9fa, 0x0, 0x1);
        gbc.writeMem(0x5330, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8f44, gbc.sp());
        EXPECT(0x5332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01AF
        gbc.setState(0xda8, 0xcac2, 0xc0d0, 0x21c6, 0xf9ec, 0x98e3, 0x0, 0x1);
        gbc.writeMem(0xda8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcac2, gbc.sp());
        EXPECT(0xdaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01B0
        gbc.setState(0x93e9, 0x705f, 0xd0b0, 0xb64d, 0xe66f, 0x4d3c, 0x0, 0x1);
        gbc.writeMem(0x93e9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x705f, gbc.sp());
        EXPECT(0x93eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e9));
        EXPECT(0x38, gbc.readMem(0x93ea));
        // CB 38 01B1
        gbc.setState(0x66ff, 0x53a8, 0x980, 0x5a88, 0xada2, 0x95ad, 0x0, 0x0);
        gbc.writeMem(0x66ff, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x53a8, gbc.sp());
        EXPECT(0x6701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01B2
        gbc.setState(0xaa2d, 0xb624, 0xbf0, 0x3ab6, 0xd7b1, 0x8a0f, 0x0, 0x0);
        gbc.writeMem(0xaa2d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb624, gbc.sp());
        EXPECT(0xaa2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2d));
        EXPECT(0x38, gbc.readMem(0xaa2e));
        // CB 38 01B3
        gbc.setState(0xe6fa, 0xddc, 0x96a0, 0x804f, 0x6926, 0xbea1, 0x0, 0x0);
        gbc.writeMem(0xe6fa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xddc, gbc.sp());
        EXPECT(0xe6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6fa));
        EXPECT(0x38, gbc.readMem(0xe6fb));
        // CB 38 01B4
        gbc.setState(0x90ea, 0xf851, 0x54a0, 0x81ab, 0xf3d0, 0x6345, 0x1, 0x0);
        gbc.writeMem(0x90ea, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf851, gbc.sp());
        EXPECT(0x90ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ea));
        EXPECT(0x38, gbc.readMem(0x90eb));
        // CB 38 01B5
        gbc.setState(0xf3a, 0xca8, 0x34f0, 0xe8b0, 0x6f9d, 0x51ec, 0x0, 0x0);
        gbc.writeMem(0xf3a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xca8, gbc.sp());
        EXPECT(0xf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01B6
        gbc.setState(0x2099, 0xd473, 0x400, 0x6c6d, 0xe298, 0x92a7, 0x1, 0x0);
        gbc.writeMem(0x2099, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd473, gbc.sp());
        EXPECT(0x209b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01B7
        gbc.setState(0x1bf7, 0xebad, 0xceb0, 0x4e2e, 0x66ff, 0x1812, 0x1, 0x0);
        gbc.writeMem(0x1bf7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xebad, gbc.sp());
        EXPECT(0x1bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01B8
        gbc.setState(0x7f54, 0x6913, 0xa3d0, 0xdc1b, 0x4c1d, 0x865b, 0x1, 0x0);
        gbc.writeMem(0x7f54, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6913, gbc.sp());
        EXPECT(0x7f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01B9
        gbc.setState(0x41b6, 0x368d, 0xbd60, 0xbd8a, 0xb971, 0xb1c4, 0x1, 0x1);
        gbc.writeMem(0x41b6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x368d, gbc.sp());
        EXPECT(0x41b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01BA
        gbc.setState(0xecf6, 0xb649, 0xf570, 0x3f7e, 0x458f, 0x2dd1, 0x0, 0x0);
        gbc.writeMem(0xecf6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb649, gbc.sp());
        EXPECT(0xecf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf6));
        EXPECT(0x38, gbc.readMem(0xecf7));
        // CB 38 01BB
        gbc.setState(0xac51, 0x2ec3, 0x1450, 0x9b53, 0x87f6, 0x4cd8, 0x1, 0x1);
        gbc.writeMem(0xac51, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2ec3, gbc.sp());
        EXPECT(0xac53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac51));
        EXPECT(0x38, gbc.readMem(0xac52));
        // CB 38 01BC
        gbc.setState(0xbd74, 0x2272, 0x78f0, 0x810e, 0xde64, 0x11e, 0x1, 0x0);
        gbc.writeMem(0xbd74, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2272, gbc.sp());
        EXPECT(0xbd76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd74));
        EXPECT(0x38, gbc.readMem(0xbd75));
        // CB 38 01BD
        gbc.setState(0x6be5, 0xef3, 0x5530, 0xbb48, 0x2125, 0x2be7, 0x0, 0x1);
        gbc.writeMem(0x6be5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xef3, gbc.sp());
        EXPECT(0x6be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01BE
        gbc.setState(0xf33, 0x7914, 0xd0b0, 0x471b, 0xaa51, 0xaa1, 0x0, 0x0);
        gbc.writeMem(0xf33, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7914, gbc.sp());
        EXPECT(0xf35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01BF
        gbc.setState(0x1636, 0x6446, 0xd760, 0xda3a, 0x8890, 0xbf97, 0x0, 0x0);
        gbc.writeMem(0x1636, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6446, gbc.sp());
        EXPECT(0x1638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01C0
        gbc.setState(0xbc3b, 0xfd84, 0xfc70, 0xe1e, 0x631c, 0x285f, 0x0, 0x1);
        gbc.writeMem(0xbc3b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfd84, gbc.sp());
        EXPECT(0xbc3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3b));
        EXPECT(0x38, gbc.readMem(0xbc3c));
        // CB 38 01C1
        gbc.setState(0x9985, 0x1a6d, 0x56f0, 0xa95c, 0xe29a, 0x8297, 0x1, 0x1);
        gbc.writeMem(0x9985, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1a6d, gbc.sp());
        EXPECT(0x9987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9985));
        EXPECT(0x38, gbc.readMem(0x9986));
        // CB 38 01C2
        gbc.setState(0x117d, 0x7804, 0xe150, 0xf43a, 0xd5e5, 0x7af1, 0x0, 0x0);
        gbc.writeMem(0x117d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7804, gbc.sp());
        EXPECT(0x117f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01C3
        gbc.setState(0x3431, 0x1b2c, 0xe520, 0xe0c3, 0x2f71, 0x680d, 0x0, 0x0);
        gbc.writeMem(0x3431, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1b2c, gbc.sp());
        EXPECT(0x3433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01C4
        gbc.setState(0xe98f, 0xeeeb, 0xb2c0, 0x86ce, 0x91be, 0x4697, 0x0, 0x1);
        gbc.writeMem(0xe98f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xeeeb, gbc.sp());
        EXPECT(0xe991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe98f));
        EXPECT(0x38, gbc.readMem(0xe990));
        // CB 38 01C6
        gbc.setState(0x131d, 0x8a03, 0x69f0, 0x922f, 0x2ef4, 0x794b, 0x0, 0x0);
        gbc.writeMem(0x131d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8a03, gbc.sp());
        EXPECT(0x131f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01C7
        gbc.setState(0x12ee, 0xdd99, 0x1670, 0x903e, 0x6f37, 0xd436, 0x1, 0x1);
        gbc.writeMem(0x12ee, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdd99, gbc.sp());
        EXPECT(0x12f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01C8
        gbc.setState(0x2228, 0x8823, 0xb110, 0xfa77, 0x79a9, 0xacda, 0x0, 0x0);
        gbc.writeMem(0x2228, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8823, gbc.sp());
        EXPECT(0x222a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01C9
        gbc.setState(0xef68, 0x5ca7, 0x5f60, 0x4f7e, 0x3991, 0x795a, 0x0, 0x0);
        gbc.writeMem(0xef68, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5ca7, gbc.sp());
        EXPECT(0xef6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef68));
        EXPECT(0x38, gbc.readMem(0xef69));
        // CB 38 01CA
        gbc.setState(0x856c, 0x202d, 0x4390, 0xc0c2, 0xd0b0, 0x4866, 0x0, 0x0);
        gbc.writeMem(0x856c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x202d, gbc.sp());
        EXPECT(0x856e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856c));
        EXPECT(0x38, gbc.readMem(0x856d));
        // CB 38 01CB
        gbc.setState(0xa0b6, 0x6edb, 0x8020, 0xdb5c, 0x91ae, 0xd164, 0x0, 0x1);
        gbc.writeMem(0xa0b6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6edb, gbc.sp());
        EXPECT(0xa0b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b6));
        EXPECT(0x38, gbc.readMem(0xa0b7));
        // CB 38 01CC
        gbc.setState(0xce6c, 0x398d, 0x92c0, 0x4a05, 0x51db, 0x62c4, 0x1, 0x0);
        gbc.writeMem(0xce6c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x398d, gbc.sp());
        EXPECT(0xce6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce6c));
        EXPECT(0x38, gbc.readMem(0xce6d));
        // CB 38 01CD
        gbc.setState(0xc946, 0x5089, 0xdff0, 0x294, 0x406c, 0xde83, 0x1, 0x0);
        gbc.writeMem(0xc946, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5089, gbc.sp());
        EXPECT(0xc948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc946));
        EXPECT(0x38, gbc.readMem(0xc947));
        // CB 38 01CE
        gbc.setState(0x941a, 0xb5ab, 0xc490, 0x8aa0, 0x65, 0x4ac5, 0x0, 0x1);
        gbc.writeMem(0x941a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb5ab, gbc.sp());
        EXPECT(0x941c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941a));
        EXPECT(0x38, gbc.readMem(0x941b));
        // CB 38 01CF
        gbc.setState(0xdd0a, 0x4ec3, 0x9150, 0x67bc, 0xae84, 0xf2a3, 0x0, 0x0);
        gbc.writeMem(0xdd0a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4ec3, gbc.sp());
        EXPECT(0xdd0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0a));
        EXPECT(0x38, gbc.readMem(0xdd0b));
        // CB 38 01D0
        gbc.setState(0x128a, 0x10b2, 0x2e50, 0x1526, 0xcb9c, 0x2fd1, 0x0, 0x1);
        gbc.writeMem(0x128a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x10b2, gbc.sp());
        EXPECT(0x128c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01D1
        gbc.setState(0xaaa0, 0x61c6, 0xe50, 0xa2cd, 0xb20, 0x3ca1, 0x0, 0x1);
        gbc.writeMem(0xaaa0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x61c6, gbc.sp());
        EXPECT(0xaaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa0));
        EXPECT(0x38, gbc.readMem(0xaaa1));
        // CB 38 01D2
        gbc.setState(0xd092, 0xbde8, 0x61c0, 0x98f4, 0x8efc, 0x1227, 0x1, 0x1);
        gbc.writeMem(0xd092, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbde8, gbc.sp());
        EXPECT(0xd094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd092));
        EXPECT(0x38, gbc.readMem(0xd093));
        // CB 38 01D3
        gbc.setState(0x150d, 0x47b3, 0x4b30, 0x7b2f, 0xeb49, 0xeeac, 0x1, 0x0);
        gbc.writeMem(0x150d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x47b3, gbc.sp());
        EXPECT(0x150f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01D4
        gbc.setState(0x5058, 0x5ef9, 0xb3e0, 0xaa78, 0x5da, 0xe048, 0x0, 0x0);
        gbc.writeMem(0x5058, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5ef9, gbc.sp());
        EXPECT(0x505a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01D5
        gbc.setState(0x5c62, 0xf071, 0xaa40, 0xa64e, 0x56f4, 0xcb08, 0x1, 0x0);
        gbc.writeMem(0x5c62, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf071, gbc.sp());
        EXPECT(0x5c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01D6
        gbc.setState(0x80fe, 0x2477, 0x5b20, 0x40cf, 0x176e, 0x5c08, 0x0, 0x1);
        gbc.writeMem(0x80fe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2477, gbc.sp());
        EXPECT(0x8100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80fe));
        EXPECT(0x38, gbc.readMem(0x80ff));
        // CB 38 01D7
        gbc.setState(0x4114, 0x40b8, 0x24a0, 0x4374, 0xbb64, 0xf9b3, 0x0, 0x0);
        gbc.writeMem(0x4114, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x40b8, gbc.sp());
        EXPECT(0x4116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01D9
        gbc.setState(0x6485, 0xd8d0, 0xec50, 0xd43, 0x425f, 0x28e9, 0x1, 0x0);
        gbc.writeMem(0x6485, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd8d0, gbc.sp());
        EXPECT(0x6487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01DB
        gbc.setState(0x229a, 0xee83, 0x5e0, 0x400a, 0xadb2, 0xa421, 0x1, 0x1);
        gbc.writeMem(0x229a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xee83, gbc.sp());
        EXPECT(0x229c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01DC
        gbc.setState(0x2e65, 0xd9ff, 0x3e40, 0x4919, 0x3fc3, 0x6180, 0x1, 0x1);
        gbc.writeMem(0x2e65, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd9ff, gbc.sp());
        EXPECT(0x2e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01DD
        gbc.setState(0x19eb, 0x1348, 0xd210, 0xf05, 0x2843, 0x5f2, 0x1, 0x1);
        gbc.writeMem(0x19eb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1348, gbc.sp());
        EXPECT(0x19ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01DE
        gbc.setState(0x7e82, 0xa211, 0xc760, 0xd394, 0x40ce, 0x55d8, 0x1, 0x0);
        gbc.writeMem(0x7e82, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa211, gbc.sp());
        EXPECT(0x7e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01DF
        gbc.setState(0xc0fe, 0x4b04, 0x6270, 0x8297, 0xff5a, 0x12b9, 0x0, 0x0);
        gbc.writeMem(0xc0fe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4b04, gbc.sp());
        EXPECT(0xc100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0fe));
        EXPECT(0x38, gbc.readMem(0xc0ff));
        // CB 38 01E0
        gbc.setState(0xa10e, 0x873, 0x48a0, 0x42e1, 0x4791, 0x644a, 0x0, 0x0);
        gbc.writeMem(0xa10e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x873, gbc.sp());
        EXPECT(0xa110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa10e));
        EXPECT(0x38, gbc.readMem(0xa10f));
        // CB 38 01E1
        gbc.setState(0x6c9e, 0xf5ed, 0xd3e0, 0x11d1, 0x6ebf, 0xd540, 0x0, 0x1);
        gbc.writeMem(0x6c9e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf5ed, gbc.sp());
        EXPECT(0x6ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01E2
        gbc.setState(0x7c92, 0xc51, 0xe60, 0xf7e5, 0xc732, 0x947e, 0x0, 0x0);
        gbc.writeMem(0x7c92, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc51, gbc.sp());
        EXPECT(0x7c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01E3
        gbc.setState(0x473a, 0x229, 0xec00, 0x7ed2, 0x9fb5, 0x234f, 0x0, 0x0);
        gbc.writeMem(0x473a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x229, gbc.sp());
        EXPECT(0x473c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01E4
        gbc.setState(0xba0a, 0xf6c5, 0x36d0, 0x7d84, 0x16fc, 0x889f, 0x0, 0x0);
        gbc.writeMem(0xba0a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf6c5, gbc.sp());
        EXPECT(0xba0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0a));
        EXPECT(0x38, gbc.readMem(0xba0b));
        // CB 38 01E5
        gbc.setState(0xd937, 0x4e2b, 0xb8a0, 0x45c8, 0xeb4d, 0x2283, 0x0, 0x1);
        gbc.writeMem(0xd937, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4e2b, gbc.sp());
        EXPECT(0xd939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd937));
        EXPECT(0x38, gbc.readMem(0xd938));
        // CB 38 01E6
        gbc.setState(0xb641, 0x1c44, 0xc300, 0xd4b7, 0xa23e, 0x2e95, 0x0, 0x0);
        gbc.writeMem(0xb641, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1c44, gbc.sp());
        EXPECT(0xb643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb641));
        EXPECT(0x38, gbc.readMem(0xb642));
        // CB 38 01E7
        gbc.setState(0xa4a, 0xee9c, 0xf890, 0xa43c, 0xa4d1, 0x83fa, 0x1, 0x0);
        gbc.writeMem(0xa4a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xee9c, gbc.sp());
        EXPECT(0xa4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01E8
        gbc.setState(0xea8f, 0x904a, 0x8be0, 0x1f0c, 0x675f, 0x9c6e, 0x0, 0x1);
        gbc.writeMem(0xea8f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x904a, gbc.sp());
        EXPECT(0xea91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8f));
        EXPECT(0x38, gbc.readMem(0xea90));
        // CB 38 01E9
        gbc.setState(0xb37e, 0x5d58, 0x4ee0, 0xbe96, 0x8ebb, 0xac8a, 0x0, 0x0);
        gbc.writeMem(0xb37e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5d58, gbc.sp());
        EXPECT(0xb380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb37e));
        EXPECT(0x38, gbc.readMem(0xb37f));
        // CB 38 01EA
        gbc.setState(0x1bdf, 0x1cf6, 0x2930, 0x2032, 0xd9de, 0x8c95, 0x0, 0x0);
        gbc.writeMem(0x1bdf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1cf6, gbc.sp());
        EXPECT(0x1be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01EB
        gbc.setState(0xa270, 0xcacf, 0xa060, 0xadb8, 0x6202, 0xb524, 0x0, 0x1);
        gbc.writeMem(0xa270, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcacf, gbc.sp());
        EXPECT(0xa272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa270));
        EXPECT(0x38, gbc.readMem(0xa271));
        // CB 38 01EC
        gbc.setState(0x6afb, 0xa065, 0xd0a0, 0x1203, 0xbce9, 0x5770, 0x1, 0x0);
        gbc.writeMem(0x6afb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa065, gbc.sp());
        EXPECT(0x6afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01ED
        gbc.setState(0x813, 0x7aa4, 0x9a50, 0x737f, 0x4252, 0x26eb, 0x0, 0x1);
        gbc.writeMem(0x813, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7aa4, gbc.sp());
        EXPECT(0x815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01EE
        gbc.setState(0xb169, 0x322d, 0xa2b0, 0x909, 0x10be, 0x1cb0, 0x1, 0x0);
        gbc.writeMem(0xb169, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x322d, gbc.sp());
        EXPECT(0xb16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb169));
        EXPECT(0x38, gbc.readMem(0xb16a));
        // CB 38 01EF
        gbc.setState(0xcc0, 0x6687, 0x1010, 0x574d, 0x95d9, 0xbf69, 0x1, 0x0);
        gbc.writeMem(0xcc0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6687, gbc.sp());
        EXPECT(0xcc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01F0
        gbc.setState(0x3e70, 0x209b, 0xd710, 0x74c8, 0xa49b, 0x67f8, 0x0, 0x1);
        gbc.writeMem(0x3e70, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x209b, gbc.sp());
        EXPECT(0x3e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01F1
        gbc.setState(0xb379, 0x2c3b, 0x3a60, 0xe4a0, 0xc687, 0x5e10, 0x0, 0x0);
        gbc.writeMem(0xb379, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2c3b, gbc.sp());
        EXPECT(0xb37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb379));
        EXPECT(0x38, gbc.readMem(0xb37a));
        // CB 38 01F2
        gbc.setState(0x6061, 0x4676, 0xea00, 0x705d, 0xffd6, 0xd2e0, 0x0, 0x0);
        gbc.writeMem(0x6061, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4676, gbc.sp());
        EXPECT(0x6063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01F3
        gbc.setState(0x69c2, 0x18c2, 0xede0, 0x2dd4, 0x76d0, 0x120e, 0x1, 0x0);
        gbc.writeMem(0x69c2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x18c2, gbc.sp());
        EXPECT(0x69c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01F4
        gbc.setState(0x52b7, 0xb1bb, 0x1ba0, 0xc104, 0x986c, 0x7deb, 0x1, 0x0);
        gbc.writeMem(0x52b7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb1bb, gbc.sp());
        EXPECT(0x52b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01F5
        gbc.setState(0x3b49, 0xf52, 0x8b00, 0x7051, 0x9e68, 0x50e6, 0x0, 0x0);
        gbc.writeMem(0x3b49, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf52, gbc.sp());
        EXPECT(0x3b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01F6
        gbc.setState(0x77a8, 0xf591, 0xa760, 0x3f41, 0x385, 0x4069, 0x0, 0x1);
        gbc.writeMem(0x77a8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf591, gbc.sp());
        EXPECT(0x77aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01F7
        gbc.setState(0xb9ef, 0x90f3, 0x5600, 0xaff6, 0xf32, 0xa3fa, 0x0, 0x0);
        gbc.writeMem(0xb9ef, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x90f3, gbc.sp());
        EXPECT(0xb9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ef));
        EXPECT(0x38, gbc.readMem(0xb9f0));
        // CB 38 01F8
        gbc.setState(0x680b, 0x7d74, 0x1fd0, 0xd939, 0x37f6, 0x8154, 0x1, 0x0);
        gbc.writeMem(0x680b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7d74, gbc.sp());
        EXPECT(0x680d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01F9
        gbc.setState(0x4ebd, 0xb41a, 0x5a50, 0x2f75, 0xf31a, 0xf330, 0x0, 0x1);
        gbc.writeMem(0x4ebd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb41a, gbc.sp());
        EXPECT(0x4ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01FA
        gbc.setState(0x6d7f, 0x450a, 0xf350, 0x1825, 0xc288, 0x6dae, 0x0, 0x1);
        gbc.writeMem(0x6d7f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x450a, gbc.sp());
        EXPECT(0x6d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 01FB
        gbc.setState(0x78fa, 0x5db9, 0xed0, 0x4379, 0xb8f7, 0xc10a, 0x0, 0x1);
        gbc.writeMem(0x78fa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5db9, gbc.sp());
        EXPECT(0x78fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01FC
        gbc.setState(0x99fd, 0xf89b, 0x56a0, 0x4559, 0xc8bb, 0x1027, 0x1, 0x0);
        gbc.writeMem(0x99fd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf89b, gbc.sp());
        EXPECT(0x99ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fd));
        EXPECT(0x38, gbc.readMem(0x99fe));
        // CB 38 01FD
        gbc.setState(0xd33d, 0x57fe, 0xecc0, 0xf2f2, 0x8744, 0x12e0, 0x1, 0x0);
        gbc.writeMem(0xd33d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x57fe, gbc.sp());
        EXPECT(0xd33f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33d));
        EXPECT(0x38, gbc.readMem(0xd33e));
        // CB 38 01FE
        gbc.setState(0x7947, 0x83da, 0x7e20, 0xc18b, 0xdbd, 0x6f32, 0x1, 0x1);
        gbc.writeMem(0x7947, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x83da, gbc.sp());
        EXPECT(0x7949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 01FF
        gbc.setState(0x5f37, 0x8f76, 0xfa60, 0xed40, 0x85f8, 0x46b9, 0x1, 0x0);
        gbc.writeMem(0x5f37, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8f76, gbc.sp());
        EXPECT(0x5f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0200
        gbc.setState(0x74c8, 0x158, 0x8c20, 0xbc68, 0x832, 0x8951, 0x1, 0x0);
        gbc.writeMem(0x74c8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x158, gbc.sp());
        EXPECT(0x74ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0201
        gbc.setState(0x39f8, 0xc01c, 0x50a0, 0xa96f, 0x4c33, 0xeffa, 0x1, 0x0);
        gbc.writeMem(0x39f8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc01c, gbc.sp());
        EXPECT(0x39fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0202
        gbc.setState(0x7e0c, 0xbac9, 0xa8d0, 0x42bc, 0x5170, 0xf7a7, 0x1, 0x0);
        gbc.writeMem(0x7e0c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbac9, gbc.sp());
        EXPECT(0x7e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0203
        gbc.setState(0x8ecb, 0x54b6, 0x2ac0, 0xe13c, 0xe786, 0xd867, 0x0, 0x1);
        gbc.writeMem(0x8ecb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x54b6, gbc.sp());
        EXPECT(0x8ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ecb));
        EXPECT(0x38, gbc.readMem(0x8ecc));
        // CB 38 0204
        gbc.setState(0xbf54, 0xbc71, 0xb7b0, 0x63ac, 0xb73f, 0x8227, 0x0, 0x0);
        gbc.writeMem(0xbf54, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbc71, gbc.sp());
        EXPECT(0xbf56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf54));
        EXPECT(0x38, gbc.readMem(0xbf55));
        // CB 38 0205
        gbc.setState(0x759d, 0xf639, 0x2240, 0xeafe, 0xa7ad, 0xdde2, 0x0, 0x1);
        gbc.writeMem(0x759d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf639, gbc.sp());
        EXPECT(0x759f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0206
        gbc.setState(0x9bd7, 0xeffb, 0xcca0, 0x5f30, 0x7679, 0xe9ea, 0x0, 0x1);
        gbc.writeMem(0x9bd7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xeffb, gbc.sp());
        EXPECT(0x9bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd7));
        EXPECT(0x38, gbc.readMem(0x9bd8));
        // CB 38 0207
        gbc.setState(0x42be, 0x6525, 0x78c0, 0xe776, 0xdd29, 0x2bc, 0x1, 0x1);
        gbc.writeMem(0x42be, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6525, gbc.sp());
        EXPECT(0x42c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0208
        gbc.setState(0x76, 0x850d, 0x5230, 0x4f2d, 0x797b, 0x26d7, 0x1, 0x1);
        gbc.writeMem(0x76, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x850d, gbc.sp());
        EXPECT(0x78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0209
        gbc.setState(0xbf5f, 0x9919, 0x6550, 0x4eff, 0x8bba, 0xede8, 0x0, 0x1);
        gbc.writeMem(0xbf5f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9919, gbc.sp());
        EXPECT(0xbf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf5f));
        EXPECT(0x38, gbc.readMem(0xbf60));
        // CB 38 020A
        gbc.setState(0x5015, 0x1b33, 0xb30, 0x5415, 0x3584, 0x2b60, 0x1, 0x0);
        gbc.writeMem(0x5015, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1b33, gbc.sp());
        EXPECT(0x5017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 020B
        gbc.setState(0x707, 0x79cb, 0x1f10, 0x89af, 0x40e8, 0x17f1, 0x0, 0x1);
        gbc.writeMem(0x707, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x79cb, gbc.sp());
        EXPECT(0x709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 020D
        gbc.setState(0x45f4, 0x7096, 0xcc0, 0xe837, 0xff76, 0xd50, 0x1, 0x0);
        gbc.writeMem(0x45f4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7096, gbc.sp());
        EXPECT(0x45f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 020E
        gbc.setState(0x2df2, 0x3734, 0x8870, 0xb5c2, 0x687d, 0xbb64, 0x0, 0x1);
        gbc.writeMem(0x2df2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3734, gbc.sp());
        EXPECT(0x2df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 020F
        gbc.setState(0x6b64, 0x74cc, 0x4aa0, 0x3cd3, 0xd32b, 0x78bf, 0x0, 0x1);
        gbc.writeMem(0x6b64, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x74cc, gbc.sp());
        EXPECT(0x6b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0210
        gbc.setState(0xffe, 0xd0bd, 0x39f0, 0x7f87, 0xa75d, 0xb039, 0x1, 0x0);
        gbc.writeMem(0xffe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd0bd, gbc.sp());
        EXPECT(0x1000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0211
        gbc.setState(0x672, 0xe655, 0x5000, 0x6b4, 0x620f, 0x827c, 0x0, 0x0);
        gbc.writeMem(0x672, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe655, gbc.sp());
        EXPECT(0x674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0212
        gbc.setState(0xb077, 0xf316, 0xe690, 0x3bf3, 0x9efd, 0x9f01, 0x0, 0x1);
        gbc.writeMem(0xb077, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf316, gbc.sp());
        EXPECT(0xb079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb077));
        EXPECT(0x38, gbc.readMem(0xb078));
        // CB 38 0214
        gbc.setState(0x1e3a, 0xef35, 0x2a70, 0xa4b3, 0x8090, 0xf8ac, 0x1, 0x0);
        gbc.writeMem(0x1e3a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xef35, gbc.sp());
        EXPECT(0x1e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0215
        gbc.setState(0xb510, 0xa9e1, 0x7cf0, 0x1b91, 0x2b48, 0xe81e, 0x0, 0x1);
        gbc.writeMem(0xb510, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa9e1, gbc.sp());
        EXPECT(0xb512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb510));
        EXPECT(0x38, gbc.readMem(0xb511));
        // CB 38 0216
        gbc.setState(0x2cd9, 0xa96d, 0xa1e0, 0xf724, 0x43a5, 0xe36d, 0x0, 0x0);
        gbc.writeMem(0x2cd9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa96d, gbc.sp());
        EXPECT(0x2cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0217
        gbc.setState(0x8d3a, 0x6763, 0x3fc0, 0xfdaa, 0x7504, 0xd0d1, 0x0, 0x0);
        gbc.writeMem(0x8d3a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6763, gbc.sp());
        EXPECT(0x8d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3a));
        EXPECT(0x38, gbc.readMem(0x8d3b));
        // CB 38 0218
        gbc.setState(0x17a, 0x4288, 0xbcd0, 0xe2b4, 0xf0b6, 0x5bdb, 0x0, 0x0);
        gbc.writeMem(0x17a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4288, gbc.sp());
        EXPECT(0x17c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0219
        gbc.setState(0xabfb, 0xfa84, 0x5c20, 0xf325, 0xd179, 0xe96e, 0x0, 0x0);
        gbc.writeMem(0xabfb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfa84, gbc.sp());
        EXPECT(0xabfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabfb));
        EXPECT(0x38, gbc.readMem(0xabfc));
        // CB 38 021A
        gbc.setState(0x3dcb, 0x51f2, 0xdf20, 0xeccc, 0x41a8, 0x2e0, 0x1, 0x0);
        gbc.writeMem(0x3dcb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x51f2, gbc.sp());
        EXPECT(0x3dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 021B
        gbc.setState(0xb222, 0x14d1, 0xe0f0, 0xec43, 0xf6b0, 0x7a83, 0x1, 0x1);
        gbc.writeMem(0xb222, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x14d1, gbc.sp());
        EXPECT(0xb224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb222));
        EXPECT(0x38, gbc.readMem(0xb223));
        // CB 38 021C
        gbc.setState(0x6b7f, 0x579b, 0xc880, 0x71b4, 0xb599, 0x5599, 0x0, 0x1);
        gbc.writeMem(0x6b7f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x579b, gbc.sp());
        EXPECT(0x6b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 021D
        gbc.setState(0x2346, 0xff6a, 0xa980, 0xe283, 0xe761, 0xccdb, 0x1, 0x0);
        gbc.writeMem(0x2346, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xff6a, gbc.sp());
        EXPECT(0x2348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 021E
        gbc.setState(0x5b14, 0xe06c, 0x1cd0, 0xd2f3, 0xeaec, 0x2b49, 0x0, 0x1);
        gbc.writeMem(0x5b14, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe06c, gbc.sp());
        EXPECT(0x5b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 021F
        gbc.setState(0x865d, 0xbb27, 0x3350, 0x680e, 0xcca3, 0xff3b, 0x1, 0x1);
        gbc.writeMem(0x865d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbb27, gbc.sp());
        EXPECT(0x865f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865d));
        EXPECT(0x38, gbc.readMem(0x865e));
        // CB 38 0220
        gbc.setState(0x4732, 0x1192, 0xf120, 0xd1c2, 0x3dc4, 0x6f1a, 0x1, 0x0);
        gbc.writeMem(0x4732, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1192, gbc.sp());
        EXPECT(0x4734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0222
        gbc.setState(0x5685, 0x9d0e, 0x8eb0, 0xc3f9, 0xc41c, 0x664b, 0x0, 0x0);
        gbc.writeMem(0x5685, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9d0e, gbc.sp());
        EXPECT(0x5687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0223
        gbc.setState(0x9cd3, 0x8d70, 0x5690, 0xeb1c, 0x27ab, 0xf97d, 0x1, 0x0);
        gbc.writeMem(0x9cd3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8d70, gbc.sp());
        EXPECT(0x9cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd3));
        EXPECT(0x38, gbc.readMem(0x9cd4));
        // CB 38 0224
        gbc.setState(0x2670, 0xf7cb, 0x6530, 0x34bb, 0xfd49, 0xa6e9, 0x0, 0x1);
        gbc.writeMem(0x2670, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf7cb, gbc.sp());
        EXPECT(0x2672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0225
        gbc.setState(0x3dc6, 0x1a5a, 0x590, 0x8b9d, 0xd3b1, 0x83e9, 0x1, 0x1);
        gbc.writeMem(0x3dc6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1a5a, gbc.sp());
        EXPECT(0x3dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0226
        gbc.setState(0x8042, 0x31eb, 0xb790, 0x5cde, 0xa249, 0xc9ae, 0x0, 0x0);
        gbc.writeMem(0x8042, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x31eb, gbc.sp());
        EXPECT(0x8044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8042));
        EXPECT(0x38, gbc.readMem(0x8043));
        // CB 38 0227
        gbc.setState(0xa711, 0xa66b, 0x7230, 0xb2d5, 0x4a52, 0x7752, 0x1, 0x1);
        gbc.writeMem(0xa711, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa66b, gbc.sp());
        EXPECT(0xa713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa711));
        EXPECT(0x38, gbc.readMem(0xa712));
        // CB 38 0228
        gbc.setState(0xaa18, 0xb71a, 0x4a70, 0x5b80, 0xab90, 0x66c0, 0x1, 0x0);
        gbc.writeMem(0xaa18, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb71a, gbc.sp());
        EXPECT(0xaa1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa18));
        EXPECT(0x38, gbc.readMem(0xaa19));
        // CB 38 0229
        gbc.setState(0x3b65, 0x374d, 0xd370, 0xd4e4, 0x403f, 0x172f, 0x0, 0x0);
        gbc.writeMem(0x3b65, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x374d, gbc.sp());
        EXPECT(0x3b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 022A
        gbc.setState(0x2db0, 0xfb9b, 0xe450, 0x9ca, 0xf205, 0x4828, 0x0, 0x0);
        gbc.writeMem(0x2db0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfb9b, gbc.sp());
        EXPECT(0x2db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 022B
        gbc.setState(0x5f01, 0xd804, 0xf280, 0xc5e1, 0xdee, 0xa6cf, 0x0, 0x1);
        gbc.writeMem(0x5f01, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd804, gbc.sp());
        EXPECT(0x5f03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 022C
        gbc.setState(0xa44, 0x1c9e, 0xf590, 0x3043, 0xb1d5, 0xee62, 0x0, 0x0);
        gbc.writeMem(0xa44, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1c9e, gbc.sp());
        EXPECT(0xa46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 022D
        gbc.setState(0x9bc7, 0xb27c, 0x14b0, 0x9a55, 0xe57d, 0x15fe, 0x1, 0x1);
        gbc.writeMem(0x9bc7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb27c, gbc.sp());
        EXPECT(0x9bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc7));
        EXPECT(0x38, gbc.readMem(0x9bc8));
        // CB 38 022E
        gbc.setState(0x688f, 0xd5a9, 0x59d0, 0x94f6, 0xb5a8, 0xd75f, 0x0, 0x0);
        gbc.writeMem(0x688f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd5a9, gbc.sp());
        EXPECT(0x6891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 022F
        gbc.setState(0xa9ea, 0x414b, 0x8240, 0xd33f, 0xeafb, 0x4b27, 0x1, 0x1);
        gbc.writeMem(0xa9ea, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x414b, gbc.sp());
        EXPECT(0xa9ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ea));
        EXPECT(0x38, gbc.readMem(0xa9eb));
        // CB 38 0230
        gbc.setState(0x9c8, 0xea9d, 0xb810, 0x49bf, 0xda86, 0xa6d, 0x0, 0x0);
        gbc.writeMem(0x9c8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xea9d, gbc.sp());
        EXPECT(0x9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0231
        gbc.setState(0x2d8b, 0x55b, 0xa4b0, 0xad6b, 0x49f2, 0xe50b, 0x1, 0x1);
        gbc.writeMem(0x2d8b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x55b, gbc.sp());
        EXPECT(0x2d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0232
        gbc.setState(0x9ff4, 0xcc32, 0xe450, 0x394e, 0x8f4e, 0x55b4, 0x1, 0x1);
        gbc.writeMem(0x9ff4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcc32, gbc.sp());
        EXPECT(0x9ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff4));
        EXPECT(0x38, gbc.readMem(0x9ff5));
        // CB 38 0233
        gbc.setState(0xea6e, 0x3656, 0x4ea0, 0x189e, 0x652a, 0x19a5, 0x0, 0x0);
        gbc.writeMem(0xea6e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3656, gbc.sp());
        EXPECT(0xea70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea6e));
        EXPECT(0x38, gbc.readMem(0xea6f));
        // CB 38 0234
        gbc.setState(0xdb12, 0x457f, 0x74f0, 0x184a, 0x4521, 0x907c, 0x1, 0x0);
        gbc.writeMem(0xdb12, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x457f, gbc.sp());
        EXPECT(0xdb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb12));
        EXPECT(0x38, gbc.readMem(0xdb13));
        // CB 38 0235
        gbc.setState(0x5541, 0xfb82, 0x9800, 0xad6e, 0x7439, 0x8bb6, 0x0, 0x0);
        gbc.writeMem(0x5541, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfb82, gbc.sp());
        EXPECT(0x5543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0237
        gbc.setState(0x1a6f, 0xb682, 0x75a0, 0xe884, 0xd492, 0x6d4a, 0x0, 0x0);
        gbc.writeMem(0x1a6f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb682, gbc.sp());
        EXPECT(0x1a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0239
        gbc.setState(0x9a79, 0x43dc, 0x26f0, 0x7325, 0xfb5c, 0x2eaf, 0x1, 0x1);
        gbc.writeMem(0x9a79, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x43dc, gbc.sp());
        EXPECT(0x9a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a79));
        EXPECT(0x38, gbc.readMem(0x9a7a));
        // CB 38 023A
        gbc.setState(0xd3b3, 0x560b, 0xc730, 0x2799, 0x94c0, 0xe6c1, 0x1, 0x1);
        gbc.writeMem(0xd3b3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x560b, gbc.sp());
        EXPECT(0xd3b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b3));
        EXPECT(0x38, gbc.readMem(0xd3b4));
        // CB 38 023B
        gbc.setState(0x4943, 0x2581, 0xf920, 0xcbbd, 0x10e6, 0x99b6, 0x0, 0x0);
        gbc.writeMem(0x4943, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2581, gbc.sp());
        EXPECT(0x4945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 023C
        gbc.setState(0x33cd, 0x58f6, 0x7810, 0xfa6, 0x1490, 0xda41, 0x1, 0x0);
        gbc.writeMem(0x33cd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x58f6, gbc.sp());
        EXPECT(0x33cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 023D
        gbc.setState(0xcbc7, 0x65de, 0x9530, 0x1c98, 0x3d09, 0xe67b, 0x0, 0x1);
        gbc.writeMem(0xcbc7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x65de, gbc.sp());
        EXPECT(0xcbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc7));
        EXPECT(0x38, gbc.readMem(0xcbc8));
        // CB 38 023E
        gbc.setState(0x7ac7, 0x25e6, 0x1bb0, 0x3a82, 0xbe65, 0xe2d6, 0x1, 0x1);
        gbc.writeMem(0x7ac7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x25e6, gbc.sp());
        EXPECT(0x7ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 023F
        gbc.setState(0xd051, 0xb35e, 0x66c0, 0x108, 0x94e7, 0x881d, 0x1, 0x1);
        gbc.writeMem(0xd051, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb35e, gbc.sp());
        EXPECT(0xd053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd051));
        EXPECT(0x38, gbc.readMem(0xd052));
        // CB 38 0240
        gbc.setState(0x8234, 0x3b81, 0x600, 0xaaf9, 0x1956, 0x7a16, 0x1, 0x1);
        gbc.writeMem(0x8234, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3b81, gbc.sp());
        EXPECT(0x8236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8234));
        EXPECT(0x38, gbc.readMem(0x8235));
        // CB 38 0241
        gbc.setState(0x645a, 0xd869, 0x4b80, 0x95ca, 0xa60d, 0x4351, 0x1, 0x0);
        gbc.writeMem(0x645a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd869, gbc.sp());
        EXPECT(0x645c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0242
        gbc.setState(0xa29e, 0x377e, 0xa060, 0xb3e5, 0xe523, 0xd9d5, 0x0, 0x0);
        gbc.writeMem(0xa29e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x377e, gbc.sp());
        EXPECT(0xa2a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29e));
        EXPECT(0x38, gbc.readMem(0xa29f));
        // CB 38 0243
        gbc.setState(0xcb3b, 0xbf42, 0x7650, 0xfb26, 0x1dbb, 0xca3a, 0x1, 0x1);
        gbc.writeMem(0xcb3b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbf42, gbc.sp());
        EXPECT(0xcb3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb3b));
        EXPECT(0x38, gbc.readMem(0xcb3c));
        // CB 38 0244
        gbc.setState(0xbf0, 0x34fc, 0xc860, 0xcaa, 0xb48c, 0x7afa, 0x1, 0x0);
        gbc.writeMem(0xbf0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x34fc, gbc.sp());
        EXPECT(0xbf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0245
        gbc.setState(0x20f7, 0x8c9d, 0xdeb0, 0x3727, 0x8d88, 0x2ad1, 0x0, 0x1);
        gbc.writeMem(0x20f7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8c9d, gbc.sp());
        EXPECT(0x20f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0246
        gbc.setState(0x34a6, 0x563f, 0xf050, 0x2097, 0xe47c, 0x17bb, 0x0, 0x1);
        gbc.writeMem(0x34a6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x563f, gbc.sp());
        EXPECT(0x34a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0247
        gbc.setState(0x24a7, 0xa636, 0x40, 0xf69, 0xf2d0, 0x76db, 0x1, 0x1);
        gbc.writeMem(0x24a7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa636, gbc.sp());
        EXPECT(0x24a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0248
        gbc.setState(0xc356, 0x1819, 0x80a0, 0xa44e, 0xbd03, 0xa490, 0x1, 0x0);
        gbc.writeMem(0xc356, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1819, gbc.sp());
        EXPECT(0xc358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc356));
        EXPECT(0x38, gbc.readMem(0xc357));
        // CB 38 0249
        gbc.setState(0xaa8a, 0x364b, 0xd550, 0x1ad9, 0x6dbe, 0xb61a, 0x1, 0x0);
        gbc.writeMem(0xaa8a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x364b, gbc.sp());
        EXPECT(0xaa8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa8a));
        EXPECT(0x38, gbc.readMem(0xaa8b));
        // CB 38 024A
        gbc.setState(0x2dbf, 0x579e, 0xf10, 0x6835, 0xb975, 0xfc5a, 0x1, 0x1);
        gbc.writeMem(0x2dbf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x579e, gbc.sp());
        EXPECT(0x2dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 024B
        gbc.setState(0xd818, 0x74cb, 0xf6f0, 0x6ebf, 0xf792, 0x8df, 0x0, 0x0);
        gbc.writeMem(0xd818, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x74cb, gbc.sp());
        EXPECT(0xd81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd818));
        EXPECT(0x38, gbc.readMem(0xd819));
        // CB 38 024C
        gbc.setState(0x96d4, 0x1a3f, 0x7d60, 0xa845, 0x969d, 0x4693, 0x0, 0x0);
        gbc.writeMem(0x96d4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1a3f, gbc.sp());
        EXPECT(0x96d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d4));
        EXPECT(0x38, gbc.readMem(0x96d5));
        // CB 38 024D
        gbc.setState(0xe0e9, 0x89ec, 0x9460, 0x4356, 0x3bf3, 0x8289, 0x0, 0x1);
        gbc.writeMem(0xe0e9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x89ec, gbc.sp());
        EXPECT(0xe0eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e9));
        EXPECT(0x38, gbc.readMem(0xe0ea));
        // CB 38 024E
        gbc.setState(0x7868, 0xd391, 0xcd50, 0xfb3, 0x17a8, 0x595d, 0x1, 0x0);
        gbc.writeMem(0x7868, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd391, gbc.sp());
        EXPECT(0x786a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 024F
        gbc.setState(0x416, 0xf144, 0x7100, 0x8ed2, 0x1177, 0x6216, 0x1, 0x1);
        gbc.writeMem(0x416, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf144, gbc.sp());
        EXPECT(0x418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0250
        gbc.setState(0x7c84, 0x1540, 0x9ca0, 0x89c4, 0xfdd5, 0xf4f, 0x0, 0x0);
        gbc.writeMem(0x7c84, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1540, gbc.sp());
        EXPECT(0x7c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0251
        gbc.setState(0x7260, 0x51b1, 0x4be0, 0xe279, 0x92c5, 0x41ac, 0x0, 0x0);
        gbc.writeMem(0x7260, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x51b1, gbc.sp());
        EXPECT(0x7262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0252
        gbc.setState(0x363c, 0x5387, 0xc910, 0xe16, 0x8b42, 0xe805, 0x0, 0x1);
        gbc.writeMem(0x363c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5387, gbc.sp());
        EXPECT(0x363e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0253
        gbc.setState(0x8220, 0x9837, 0x3dd0, 0xdc4e, 0x1931, 0x8c2a, 0x0, 0x0);
        gbc.writeMem(0x8220, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9837, gbc.sp());
        EXPECT(0x8222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8220));
        EXPECT(0x38, gbc.readMem(0x8221));
        // CB 38 0254
        gbc.setState(0x388f, 0xba13, 0xe5e0, 0xf91d, 0x7f34, 0xed58, 0x0, 0x0);
        gbc.writeMem(0x388f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xba13, gbc.sp());
        EXPECT(0x3891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0256
        gbc.setState(0xd07a, 0xee2b, 0x5450, 0xe857, 0x5b58, 0xe63d, 0x0, 0x1);
        gbc.writeMem(0xd07a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xee2b, gbc.sp());
        EXPECT(0xd07c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07a));
        EXPECT(0x38, gbc.readMem(0xd07b));
        // CB 38 0257
        gbc.setState(0xe1f2, 0x5eda, 0x2340, 0x48df, 0x191, 0xdd0c, 0x0, 0x0);
        gbc.writeMem(0xe1f2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5eda, gbc.sp());
        EXPECT(0xe1f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f2));
        EXPECT(0x38, gbc.readMem(0xe1f3));
        // CB 38 0258
        gbc.setState(0x8d44, 0xe1c3, 0xcee0, 0xbb69, 0xfcfd, 0x1eab, 0x0, 0x1);
        gbc.writeMem(0x8d44, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe1c3, gbc.sp());
        EXPECT(0x8d46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d44));
        EXPECT(0x38, gbc.readMem(0x8d45));
        // CB 38 0259
        gbc.setState(0x281b, 0x746a, 0xda50, 0xd051, 0x7f84, 0xdd61, 0x1, 0x0);
        gbc.writeMem(0x281b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x746a, gbc.sp());
        EXPECT(0x281d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 025A
        gbc.setState(0xcb45, 0x3b1, 0x3fe0, 0xb089, 0x663b, 0x9f7c, 0x1, 0x1);
        gbc.writeMem(0xcb45, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3b1, gbc.sp());
        EXPECT(0xcb47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb45));
        EXPECT(0x38, gbc.readMem(0xcb46));
        // CB 38 025B
        gbc.setState(0x4ffe, 0x8260, 0xc670, 0x536, 0x31cf, 0x49bc, 0x0, 0x1);
        gbc.writeMem(0x4ffe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8260, gbc.sp());
        EXPECT(0x5000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 025C
        gbc.setState(0x9f7a, 0x6d12, 0xb6e0, 0x3e0d, 0x9d34, 0xb6cc, 0x0, 0x0);
        gbc.writeMem(0x9f7a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6d12, gbc.sp());
        EXPECT(0x9f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f7a));
        EXPECT(0x38, gbc.readMem(0x9f7b));
        // CB 38 025D
        gbc.setState(0x6ac3, 0x8be4, 0x3320, 0x307c, 0xdc78, 0x3862, 0x0, 0x1);
        gbc.writeMem(0x6ac3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8be4, gbc.sp());
        EXPECT(0x6ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 025E
        gbc.setState(0xbc6, 0x670c, 0x8d0, 0x9b66, 0xbe43, 0x204e, 0x0, 0x0);
        gbc.writeMem(0xbc6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x670c, gbc.sp());
        EXPECT(0xbc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 025F
        gbc.setState(0x935, 0x2165, 0x1dd0, 0x3225, 0xd4f0, 0xac9c, 0x1, 0x0);
        gbc.writeMem(0x935, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2165, gbc.sp());
        EXPECT(0x937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0260
        gbc.setState(0x9b5, 0xd3b1, 0x56f0, 0x5ba2, 0xf1b3, 0xa24b, 0x0, 0x0);
        gbc.writeMem(0x9b5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd3b1, gbc.sp());
        EXPECT(0x9b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0261
        gbc.setState(0xed69, 0x6e6b, 0x74f0, 0x59d0, 0x2090, 0xf25, 0x1, 0x0);
        gbc.writeMem(0xed69, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6e6b, gbc.sp());
        EXPECT(0xed6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed69));
        EXPECT(0x38, gbc.readMem(0xed6a));
        // CB 38 0263
        gbc.setState(0x3dc9, 0x2da7, 0xdfe0, 0x7505, 0xbca0, 0xb210, 0x1, 0x0);
        gbc.writeMem(0x3dc9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2da7, gbc.sp());
        EXPECT(0x3dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0264
        gbc.setState(0x8f1c, 0xc2fb, 0xd970, 0xdb53, 0x3134, 0x8842, 0x1, 0x0);
        gbc.writeMem(0x8f1c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc2fb, gbc.sp());
        EXPECT(0x8f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1c));
        EXPECT(0x38, gbc.readMem(0x8f1d));
        // CB 38 0265
        gbc.setState(0xc096, 0x4a9e, 0x8740, 0x1375, 0xd216, 0x21f, 0x1, 0x1);
        gbc.writeMem(0xc096, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4a9e, gbc.sp());
        EXPECT(0xc098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc096));
        EXPECT(0x38, gbc.readMem(0xc097));
        // CB 38 0266
        gbc.setState(0xa548, 0xba2, 0x15f0, 0x77e7, 0x8cc3, 0xa38c, 0x1, 0x0);
        gbc.writeMem(0xa548, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xba2, gbc.sp());
        EXPECT(0xa54a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa548));
        EXPECT(0x38, gbc.readMem(0xa549));
        // CB 38 0267
        gbc.setState(0x51bb, 0x1c28, 0xb530, 0x2150, 0x8f2f, 0x4b12, 0x0, 0x0);
        gbc.writeMem(0x51bb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1c28, gbc.sp());
        EXPECT(0x51bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0268
        gbc.setState(0xd1d4, 0xeb73, 0xeaa0, 0x91f, 0xcb40, 0xea93, 0x0, 0x1);
        gbc.writeMem(0xd1d4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xeb73, gbc.sp());
        EXPECT(0xd1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d4));
        EXPECT(0x38, gbc.readMem(0xd1d5));
        // CB 38 0269
        gbc.setState(0x38ab, 0x2742, 0xc140, 0xf266, 0xc15f, 0x5b17, 0x1, 0x0);
        gbc.writeMem(0x38ab, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2742, gbc.sp());
        EXPECT(0x38ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 026A
        gbc.setState(0xc1a9, 0x716f, 0xe050, 0x54d9, 0xe5dd, 0x8607, 0x1, 0x0);
        gbc.writeMem(0xc1a9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x716f, gbc.sp());
        EXPECT(0xc1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a9));
        EXPECT(0x38, gbc.readMem(0xc1aa));
        // CB 38 026B
        gbc.setState(0xbc6f, 0x4152, 0xce90, 0x5016, 0x47ae, 0x20bf, 0x1, 0x0);
        gbc.writeMem(0xbc6f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4152, gbc.sp());
        EXPECT(0xbc71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc6f));
        EXPECT(0x38, gbc.readMem(0xbc70));
        // CB 38 026C
        gbc.setState(0x359c, 0xc91b, 0xe4e0, 0xa1b1, 0xcf39, 0x989a, 0x1, 0x1);
        gbc.writeMem(0x359c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc91b, gbc.sp());
        EXPECT(0x359e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 026D
        gbc.setState(0xaf3a, 0xf440, 0x6f60, 0xf0b6, 0x2502, 0x47, 0x0, 0x0);
        gbc.writeMem(0xaf3a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf440, gbc.sp());
        EXPECT(0xaf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3a));
        EXPECT(0x38, gbc.readMem(0xaf3b));
        // CB 38 026E
        gbc.setState(0x4f85, 0x992c, 0xcb00, 0xb8f8, 0x6792, 0xf7d5, 0x0, 0x1);
        gbc.writeMem(0x4f85, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x992c, gbc.sp());
        EXPECT(0x4f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 026F
        gbc.setState(0x4ca3, 0x43b9, 0x2ad0, 0x7621, 0xa705, 0xef67, 0x1, 0x1);
        gbc.writeMem(0x4ca3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x43b9, gbc.sp());
        EXPECT(0x4ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0270
        gbc.setState(0xa815, 0xdb98, 0x700, 0x986, 0x36fa, 0xb2e9, 0x1, 0x0);
        gbc.writeMem(0xa815, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdb98, gbc.sp());
        EXPECT(0xa817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa815));
        EXPECT(0x38, gbc.readMem(0xa816));
        // CB 38 0271
        gbc.setState(0xa7b4, 0x334e, 0xfc90, 0xe68c, 0xcd79, 0x3e4b, 0x1, 0x1);
        gbc.writeMem(0xa7b4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x334e, gbc.sp());
        EXPECT(0xa7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b4));
        EXPECT(0x38, gbc.readMem(0xa7b5));
        // CB 38 0272
        gbc.setState(0xc078, 0x9b98, 0x44d0, 0x490e, 0x8e2, 0xde6b, 0x0, 0x0);
        gbc.writeMem(0xc078, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9b98, gbc.sp());
        EXPECT(0xc07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc078));
        EXPECT(0x38, gbc.readMem(0xc079));
        // CB 38 0273
        gbc.setState(0x68d5, 0xc1b5, 0x88e0, 0x8a97, 0xb784, 0x4117, 0x0, 0x0);
        gbc.writeMem(0x68d5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc1b5, gbc.sp());
        EXPECT(0x68d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0274
        gbc.setState(0xb6f0, 0xcf33, 0x1dc0, 0x9b9f, 0x227f, 0x7d08, 0x1, 0x0);
        gbc.writeMem(0xb6f0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcf33, gbc.sp());
        EXPECT(0xb6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f0));
        EXPECT(0x38, gbc.readMem(0xb6f1));
        // CB 38 0275
        gbc.setState(0x4367, 0x82a, 0x20f0, 0x7720, 0xfda5, 0xa054, 0x0, 0x1);
        gbc.writeMem(0x4367, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x82a, gbc.sp());
        EXPECT(0x4369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0276
        gbc.setState(0x67d6, 0xe464, 0xb6e0, 0x2a7a, 0xd5dd, 0x30fa, 0x0, 0x0);
        gbc.writeMem(0x67d6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe464, gbc.sp());
        EXPECT(0x67d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0277
        gbc.setState(0x3166, 0x6e46, 0x8d50, 0x76dd, 0x83c0, 0xc2d4, 0x0, 0x1);
        gbc.writeMem(0x3166, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6e46, gbc.sp());
        EXPECT(0x3168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0278
        gbc.setState(0xb769, 0x25ca, 0x63c0, 0x253d, 0x5d46, 0x6ce, 0x1, 0x0);
        gbc.writeMem(0xb769, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x25ca, gbc.sp());
        EXPECT(0xb76b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb769));
        EXPECT(0x38, gbc.readMem(0xb76a));
        // CB 38 0279
        gbc.setState(0xea09, 0x16b1, 0x5070, 0xe73f, 0xdc15, 0x778, 0x1, 0x1);
        gbc.writeMem(0xea09, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x16b1, gbc.sp());
        EXPECT(0xea0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea09));
        EXPECT(0x38, gbc.readMem(0xea0a));
        // CB 38 027A
        gbc.setState(0xa147, 0xdaa4, 0x65f0, 0xfc49, 0x7781, 0xa012, 0x1, 0x0);
        gbc.writeMem(0xa147, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdaa4, gbc.sp());
        EXPECT(0xa149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa147));
        EXPECT(0x38, gbc.readMem(0xa148));
        // CB 38 027B
        gbc.setState(0xddb5, 0x3816, 0xb470, 0xa07b, 0x8501, 0x28fb, 0x0, 0x0);
        gbc.writeMem(0xddb5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3816, gbc.sp());
        EXPECT(0xddb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb5));
        EXPECT(0x38, gbc.readMem(0xddb6));
        // CB 38 027C
        gbc.setState(0x603f, 0x6109, 0xc4e0, 0x9bf9, 0xeefe, 0x514, 0x1, 0x0);
        gbc.writeMem(0x603f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6109, gbc.sp());
        EXPECT(0x6041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 027D
        gbc.setState(0x4916, 0x58d0, 0xc930, 0x7d8d, 0xd2fc, 0x48e2, 0x1, 0x0);
        gbc.writeMem(0x4916, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x58d0, gbc.sp());
        EXPECT(0x4918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 027E
        gbc.setState(0x8d06, 0x561e, 0x8c70, 0x5cf5, 0xc3a8, 0x70df, 0x1, 0x0);
        gbc.writeMem(0x8d06, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x561e, gbc.sp());
        EXPECT(0x8d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d06));
        EXPECT(0x38, gbc.readMem(0x8d07));
        // CB 38 027F
        gbc.setState(0x1887, 0x72e6, 0xc950, 0x8151, 0x3405, 0x74c6, 0x0, 0x1);
        gbc.writeMem(0x1887, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x72e6, gbc.sp());
        EXPECT(0x1889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0280
        gbc.setState(0x3301, 0x69dd, 0xf500, 0x28c7, 0x7cfd, 0x9a2c, 0x1, 0x0);
        gbc.writeMem(0x3301, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x69dd, gbc.sp());
        EXPECT(0x3303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0281
        gbc.setState(0x2626, 0xb1fc, 0xe070, 0x12c6, 0xd1f, 0x7dda, 0x1, 0x0);
        gbc.writeMem(0x2626, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb1fc, gbc.sp());
        EXPECT(0x2628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0282
        gbc.setState(0xccae, 0xaaaa, 0xf5b0, 0x5110, 0x836c, 0xfb9, 0x0, 0x1);
        gbc.writeMem(0xccae, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xaaaa, gbc.sp());
        EXPECT(0xccb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccae));
        EXPECT(0x38, gbc.readMem(0xccaf));
        // CB 38 0283
        gbc.setState(0x3f14, 0xd3cf, 0xfa90, 0x6616, 0x3403, 0x62e5, 0x0, 0x0);
        gbc.writeMem(0x3f14, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd3cf, gbc.sp());
        EXPECT(0x3f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0284
        gbc.setState(0x13e5, 0xff5e, 0x52c0, 0x918, 0x9867, 0x96c, 0x1, 0x0);
        gbc.writeMem(0x13e5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xff5e, gbc.sp());
        EXPECT(0x13e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0285
        gbc.setState(0x16ad, 0x8048, 0xf5d0, 0x357, 0xe76d, 0xb10b, 0x0, 0x1);
        gbc.writeMem(0x16ad, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8048, gbc.sp());
        EXPECT(0x16af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0286
        gbc.setState(0x2d84, 0x59da, 0xf4a0, 0xad88, 0xbf51, 0x5f62, 0x1, 0x0);
        gbc.writeMem(0x2d84, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x59da, gbc.sp());
        EXPECT(0x2d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0287
        gbc.setState(0xd1e7, 0xdd2a, 0xf10, 0xc58b, 0xbd9d, 0x185c, 0x0, 0x0);
        gbc.writeMem(0xd1e7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdd2a, gbc.sp());
        EXPECT(0xd1e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e7));
        EXPECT(0x38, gbc.readMem(0xd1e8));
        // CB 38 0288
        gbc.setState(0x4c25, 0xc51, 0xd50, 0xaf6f, 0x824d, 0xe5d6, 0x0, 0x0);
        gbc.writeMem(0x4c25, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc51, gbc.sp());
        EXPECT(0x4c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0289
        gbc.setState(0xe4e1, 0xc713, 0x4a80, 0xb10, 0xb6e8, 0x8d, 0x0, 0x0);
        gbc.writeMem(0xe4e1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc713, gbc.sp());
        EXPECT(0xe4e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e1));
        EXPECT(0x38, gbc.readMem(0xe4e2));
        // CB 38 028A
        gbc.setState(0x6dd4, 0x47e3, 0xff00, 0xc981, 0x6ed9, 0xa1ca, 0x0, 0x1);
        gbc.writeMem(0x6dd4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x47e3, gbc.sp());
        EXPECT(0x6dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 028B
        gbc.setState(0x81d, 0xe27a, 0x1cf0, 0x7453, 0x45d6, 0xd33c, 0x1, 0x1);
        gbc.writeMem(0x81d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe27a, gbc.sp());
        EXPECT(0x81f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 028C
        gbc.setState(0xe49c, 0xd6b5, 0xdc00, 0x3591, 0x813c, 0xfeca, 0x0, 0x1);
        gbc.writeMem(0xe49c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd6b5, gbc.sp());
        EXPECT(0xe49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49c));
        EXPECT(0x38, gbc.readMem(0xe49d));
        // CB 38 028D
        gbc.setState(0x6a30, 0xb90e, 0x8c10, 0xb29c, 0xb069, 0x81e9, 0x1, 0x1);
        gbc.writeMem(0x6a30, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb90e, gbc.sp());
        EXPECT(0x6a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 028E
        gbc.setState(0x33b2, 0xd691, 0xf5f0, 0x7b53, 0x8070, 0xd004, 0x0, 0x1);
        gbc.writeMem(0x33b2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd691, gbc.sp());
        EXPECT(0x33b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 028F
        gbc.setState(0x5984, 0xfc2a, 0x4a10, 0xb98f, 0x72e1, 0xe28a, 0x1, 0x1);
        gbc.writeMem(0x5984, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfc2a, gbc.sp());
        EXPECT(0x5986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0290
        gbc.setState(0xc992, 0x35cb, 0x8d90, 0x57f5, 0x484c, 0x8919, 0x1, 0x0);
        gbc.writeMem(0xc992, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x35cb, gbc.sp());
        EXPECT(0xc994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc992));
        EXPECT(0x38, gbc.readMem(0xc993));
        // CB 38 0291
        gbc.setState(0xbb04, 0x59d3, 0xe50, 0xaaed, 0x10fe, 0xd0d6, 0x0, 0x1);
        gbc.writeMem(0xbb04, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x59d3, gbc.sp());
        EXPECT(0xbb06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb04));
        EXPECT(0x38, gbc.readMem(0xbb05));
        // CB 38 0292
        gbc.setState(0xcbec, 0x7e5a, 0x34a0, 0xe8b6, 0xcc70, 0x82d2, 0x0, 0x0);
        gbc.writeMem(0xcbec, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7e5a, gbc.sp());
        EXPECT(0xcbee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbec));
        EXPECT(0x38, gbc.readMem(0xcbed));
        // CB 38 0293
        gbc.setState(0x4d44, 0x920e, 0x33b0, 0x3434, 0x5b08, 0xc945, 0x0, 0x0);
        gbc.writeMem(0x4d44, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x920e, gbc.sp());
        EXPECT(0x4d46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0295
        gbc.setState(0x61ee, 0x472e, 0xb540, 0xf0bc, 0x5143, 0x8acd, 0x1, 0x1);
        gbc.writeMem(0x61ee, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x472e, gbc.sp());
        EXPECT(0x61f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0296
        gbc.setState(0x1fdc, 0x89eb, 0xb0e0, 0x8c50, 0x778c, 0x914a, 0x0, 0x1);
        gbc.writeMem(0x1fdc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x89eb, gbc.sp());
        EXPECT(0x1fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0297
        gbc.setState(0x221c, 0x73f, 0x7b50, 0x985f, 0xd167, 0x242a, 0x0, 0x1);
        gbc.writeMem(0x221c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x73f, gbc.sp());
        EXPECT(0x221e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0298
        gbc.setState(0xef60, 0x5d9c, 0x5ff0, 0xd606, 0xb2e1, 0x6034, 0x1, 0x0);
        gbc.writeMem(0xef60, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5d9c, gbc.sp());
        EXPECT(0xef62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef60));
        EXPECT(0x38, gbc.readMem(0xef61));
        // CB 38 0299
        gbc.setState(0xe29e, 0x93d, 0xaf20, 0xf566, 0xb037, 0x512b, 0x1, 0x0);
        gbc.writeMem(0xe29e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x93d, gbc.sp());
        EXPECT(0xe2a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29e));
        EXPECT(0x38, gbc.readMem(0xe29f));
        // CB 38 029A
        gbc.setState(0xdd32, 0xd01c, 0x7530, 0x9f9e, 0x85e7, 0xfeb9, 0x1, 0x0);
        gbc.writeMem(0xdd32, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd01c, gbc.sp());
        EXPECT(0xdd34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd32));
        EXPECT(0x38, gbc.readMem(0xdd33));
        // CB 38 029B
        gbc.setState(0x36a6, 0x3092, 0xcfc0, 0x7289, 0x74ad, 0xe8e1, 0x1, 0x1);
        gbc.writeMem(0x36a6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3092, gbc.sp());
        EXPECT(0x36a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 029C
        gbc.setState(0x8768, 0x739e, 0x6f30, 0x2c56, 0x2e15, 0x1d19, 0x0, 0x0);
        gbc.writeMem(0x8768, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x739e, gbc.sp());
        EXPECT(0x876a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8768));
        EXPECT(0x38, gbc.readMem(0x8769));
        // CB 38 029D
        gbc.setState(0x1d54, 0x13a3, 0x7640, 0xe2c1, 0x18ad, 0x45f7, 0x1, 0x1);
        gbc.writeMem(0x1d54, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x13a3, gbc.sp());
        EXPECT(0x1d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 029E
        gbc.setState(0xc110, 0xcaf2, 0x28b0, 0xf9a, 0x9243, 0x6b9d, 0x0, 0x0);
        gbc.writeMem(0xc110, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcaf2, gbc.sp());
        EXPECT(0xc112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc110));
        EXPECT(0x38, gbc.readMem(0xc111));
        // CB 38 029F
        gbc.setState(0xa7bd, 0x59eb, 0x680, 0x2ac6, 0x5cdb, 0xce88, 0x0, 0x1);
        gbc.writeMem(0xa7bd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x59eb, gbc.sp());
        EXPECT(0xa7bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7bd));
        EXPECT(0x38, gbc.readMem(0xa7be));
        // CB 38 02A0
        gbc.setState(0x1cd7, 0x1756, 0xfee0, 0x81e1, 0xda7b, 0x4dfc, 0x0, 0x1);
        gbc.writeMem(0x1cd7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1756, gbc.sp());
        EXPECT(0x1cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02A1
        gbc.setState(0xcda, 0xe769, 0xa920, 0x1a8d, 0xc1c5, 0x99bd, 0x1, 0x0);
        gbc.writeMem(0xcda, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe769, gbc.sp());
        EXPECT(0xcdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02A2
        gbc.setState(0x743c, 0x727, 0x44b0, 0x1ffd, 0xbf48, 0xe29a, 0x1, 0x0);
        gbc.writeMem(0x743c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x727, gbc.sp());
        EXPECT(0x743e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02A3
        gbc.setState(0x646d, 0x7f91, 0x89c0, 0xd3bb, 0xebd0, 0xbc36, 0x1, 0x0);
        gbc.writeMem(0x646d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7f91, gbc.sp());
        EXPECT(0x646f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02A4
        gbc.setState(0x53ef, 0x5fe5, 0xcdb0, 0x68d4, 0xbb32, 0xc3dc, 0x0, 0x0);
        gbc.writeMem(0x53ef, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5fe5, gbc.sp());
        EXPECT(0x53f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02A6
        gbc.setState(0x8060, 0xeae4, 0x3a00, 0x3d47, 0x355f, 0xe155, 0x1, 0x1);
        gbc.writeMem(0x8060, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xeae4, gbc.sp());
        EXPECT(0x8062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8060));
        EXPECT(0x38, gbc.readMem(0x8061));
        // CB 38 02A7
        gbc.setState(0xadf2, 0x5dd1, 0x74c0, 0x25dc, 0x9105, 0xae34, 0x0, 0x1);
        gbc.writeMem(0xadf2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5dd1, gbc.sp());
        EXPECT(0xadf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf2));
        EXPECT(0x38, gbc.readMem(0xadf3));
        // CB 38 02A8
        gbc.setState(0x8c38, 0x1f0c, 0x83e0, 0x2633, 0x5fac, 0x70ad, 0x0, 0x0);
        gbc.writeMem(0x8c38, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1f0c, gbc.sp());
        EXPECT(0x8c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c38));
        EXPECT(0x38, gbc.readMem(0x8c39));
        // CB 38 02A9
        gbc.setState(0xc8a4, 0xa7b4, 0x66f0, 0xfadd, 0xac0a, 0x7443, 0x0, 0x1);
        gbc.writeMem(0xc8a4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa7b4, gbc.sp());
        EXPECT(0xc8a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a4));
        EXPECT(0x38, gbc.readMem(0xc8a5));
        // CB 38 02AA
        gbc.setState(0x3f5a, 0x5bc3, 0x8bd0, 0x7154, 0x93e5, 0xfd48, 0x1, 0x0);
        gbc.writeMem(0x3f5a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5bc3, gbc.sp());
        EXPECT(0x3f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02AC
        gbc.setState(0xef1e, 0xab00, 0x96f0, 0xedcf, 0x9489, 0x8949, 0x1, 0x0);
        gbc.writeMem(0xef1e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xab00, gbc.sp());
        EXPECT(0xef20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef1e));
        EXPECT(0x38, gbc.readMem(0xef1f));
        // CB 38 02AD
        gbc.setState(0x1b72, 0x46cd, 0x91f0, 0x3246, 0x4f4d, 0x3d3a, 0x1, 0x0);
        gbc.writeMem(0x1b72, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x46cd, gbc.sp());
        EXPECT(0x1b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02AE
        gbc.setState(0x4d7a, 0x3b0a, 0xa400, 0x14fd, 0x8b14, 0x8004, 0x0, 0x0);
        gbc.writeMem(0x4d7a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3b0a, gbc.sp());
        EXPECT(0x4d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02AF
        gbc.setState(0xc100, 0x273a, 0x88c0, 0x46ce, 0xc9ee, 0xd020, 0x1, 0x1);
        gbc.writeMem(0xc100, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x273a, gbc.sp());
        EXPECT(0xc102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc100));
        EXPECT(0x38, gbc.readMem(0xc101));
        // CB 38 02B0
        gbc.setState(0x1d30, 0xb48a, 0xa500, 0x60ff, 0xc82d, 0xb7d4, 0x1, 0x0);
        gbc.writeMem(0x1d30, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb48a, gbc.sp());
        EXPECT(0x1d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02B1
        gbc.setState(0x22ea, 0x1ab9, 0x9370, 0x67f1, 0xfbf2, 0x44df, 0x0, 0x1);
        gbc.writeMem(0x22ea, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1ab9, gbc.sp());
        EXPECT(0x22ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02B2
        gbc.setState(0x787c, 0xdd90, 0x4df0, 0x494f, 0xf40b, 0x9cab, 0x0, 0x1);
        gbc.writeMem(0x787c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdd90, gbc.sp());
        EXPECT(0x787e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02B3
        gbc.setState(0xd100, 0xb131, 0x9a0, 0x8ddf, 0xb70, 0x68d, 0x1, 0x0);
        gbc.writeMem(0xd100, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb131, gbc.sp());
        EXPECT(0xd102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd100));
        EXPECT(0x38, gbc.readMem(0xd101));
        // CB 38 02B4
        gbc.setState(0x2c0d, 0x94b6, 0xc500, 0x23ea, 0xeb4, 0x4708, 0x1, 0x1);
        gbc.writeMem(0x2c0d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x94b6, gbc.sp());
        EXPECT(0x2c0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02B5
        gbc.setState(0x8895, 0xf31, 0xc3d0, 0x480b, 0xdc26, 0xc4cd, 0x0, 0x0);
        gbc.writeMem(0x8895, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf31, gbc.sp());
        EXPECT(0x8897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8895));
        EXPECT(0x38, gbc.readMem(0x8896));
        // CB 38 02B6
        gbc.setState(0xa885, 0xa5f1, 0xeb70, 0xab43, 0x2afb, 0xff74, 0x0, 0x0);
        gbc.writeMem(0xa885, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa5f1, gbc.sp());
        EXPECT(0xa887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa885));
        EXPECT(0x38, gbc.readMem(0xa886));
        // CB 38 02B7
        gbc.setState(0xe3d0, 0xef3b, 0x8300, 0x93e7, 0xb955, 0x60f4, 0x1, 0x1);
        gbc.writeMem(0xe3d0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xef3b, gbc.sp());
        EXPECT(0xe3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d0));
        EXPECT(0x38, gbc.readMem(0xe3d1));
        // CB 38 02B9
        gbc.setState(0x29a2, 0x8c45, 0x64b0, 0x88eb, 0x1b16, 0x7fe0, 0x0, 0x1);
        gbc.writeMem(0x29a2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8c45, gbc.sp());
        EXPECT(0x29a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02BA
        gbc.setState(0x3a3e, 0x4f70, 0xdeb0, 0x45c0, 0xf34e, 0xb6b8, 0x1, 0x0);
        gbc.writeMem(0x3a3e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4f70, gbc.sp());
        EXPECT(0x3a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02BB
        gbc.setState(0xeea2, 0x3f13, 0xc830, 0x46d0, 0x48d5, 0x4f1e, 0x1, 0x0);
        gbc.writeMem(0xeea2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3f13, gbc.sp());
        EXPECT(0xeea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea2));
        EXPECT(0x38, gbc.readMem(0xeea3));
        // CB 38 02BC
        gbc.setState(0x8200, 0xf951, 0x89a0, 0x602c, 0xe7e8, 0x8a8a, 0x0, 0x1);
        gbc.writeMem(0x8200, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf951, gbc.sp());
        EXPECT(0x8202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8200));
        EXPECT(0x38, gbc.readMem(0x8201));
        // CB 38 02BD
        gbc.setState(0x1d12, 0x7186, 0x2630, 0xecf3, 0x386e, 0x626d, 0x0, 0x1);
        gbc.writeMem(0x1d12, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7186, gbc.sp());
        EXPECT(0x1d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02BE
        gbc.setState(0x9873, 0x67e, 0x7fb0, 0xa561, 0xd3e3, 0xb8f4, 0x1, 0x0);
        gbc.writeMem(0x9873, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x67e, gbc.sp());
        EXPECT(0x9875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9873));
        EXPECT(0x38, gbc.readMem(0x9874));
        // CB 38 02BF
        gbc.setState(0x19e2, 0xf617, 0x4180, 0x252c, 0x5c0a, 0xefe9, 0x0, 0x1);
        gbc.writeMem(0x19e2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf617, gbc.sp());
        EXPECT(0x19e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02C0
        gbc.setState(0x95b1, 0x4ec2, 0x7750, 0x829e, 0x4b0f, 0x85f5, 0x0, 0x1);
        gbc.writeMem(0x95b1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4ec2, gbc.sp());
        EXPECT(0x95b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b1));
        EXPECT(0x38, gbc.readMem(0x95b2));
        // CB 38 02C1
        gbc.setState(0x4e27, 0xe498, 0x6d00, 0xbd97, 0x4fbe, 0x6e25, 0x0, 0x1);
        gbc.writeMem(0x4e27, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe498, gbc.sp());
        EXPECT(0x4e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02C2
        gbc.setState(0x8f1a, 0xa152, 0xe260, 0x6bef, 0x1ae0, 0x718c, 0x0, 0x1);
        gbc.writeMem(0x8f1a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa152, gbc.sp());
        EXPECT(0x8f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1a));
        EXPECT(0x38, gbc.readMem(0x8f1b));
        // CB 38 02C3
        gbc.setState(0x1f7d, 0xc6f8, 0x59a0, 0x6158, 0x6413, 0xe7b7, 0x1, 0x1);
        gbc.writeMem(0x1f7d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc6f8, gbc.sp());
        EXPECT(0x1f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02C4
        gbc.setState(0xcd6d, 0x6487, 0x45f0, 0xc752, 0x450c, 0x2391, 0x0, 0x0);
        gbc.writeMem(0xcd6d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6487, gbc.sp());
        EXPECT(0xcd6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd6d));
        EXPECT(0x38, gbc.readMem(0xcd6e));
        // CB 38 02C5
        gbc.setState(0xc17b, 0x70e2, 0x7580, 0x4af5, 0xb0dc, 0x2701, 0x1, 0x0);
        gbc.writeMem(0xc17b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x70e2, gbc.sp());
        EXPECT(0xc17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc17b));
        EXPECT(0x38, gbc.readMem(0xc17c));
        // CB 38 02C6
        gbc.setState(0x72ed, 0xac25, 0x2570, 0x16e9, 0x8def, 0xf4e7, 0x1, 0x1);
        gbc.writeMem(0x72ed, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xac25, gbc.sp());
        EXPECT(0x72ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02C7
        gbc.setState(0x6a19, 0xac25, 0xdde0, 0xb1e9, 0x7d60, 0x7766, 0x0, 0x1);
        gbc.writeMem(0x6a19, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xac25, gbc.sp());
        EXPECT(0x6a1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02C8
        gbc.setState(0xcc0c, 0x11ce, 0x53f0, 0x82c6, 0x68d2, 0x8595, 0x1, 0x1);
        gbc.writeMem(0xcc0c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x11ce, gbc.sp());
        EXPECT(0xcc0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc0c));
        EXPECT(0x38, gbc.readMem(0xcc0d));
        // CB 38 02C9
        gbc.setState(0xabd2, 0xafb8, 0x9750, 0x4f74, 0xafcf, 0x87a8, 0x0, 0x1);
        gbc.writeMem(0xabd2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xafb8, gbc.sp());
        EXPECT(0xabd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd2));
        EXPECT(0x38, gbc.readMem(0xabd3));
        // CB 38 02CA
        gbc.setState(0x400f, 0x8a60, 0xcf0, 0x99de, 0x14b5, 0x59d6, 0x0, 0x0);
        gbc.writeMem(0x400f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8a60, gbc.sp());
        EXPECT(0x4011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02CC
        gbc.setState(0xbafe, 0xdeff, 0xef80, 0xea7b, 0x350d, 0x7dc5, 0x0, 0x1);
        gbc.writeMem(0xbafe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdeff, gbc.sp());
        EXPECT(0xbb00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafe));
        EXPECT(0x38, gbc.readMem(0xbaff));
        // CB 38 02CD
        gbc.setState(0xed4e, 0x9d67, 0xc500, 0x723c, 0x66b1, 0xfb03, 0x0, 0x1);
        gbc.writeMem(0xed4e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9d67, gbc.sp());
        EXPECT(0xed50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed4e));
        EXPECT(0x38, gbc.readMem(0xed4f));
        // CB 38 02CE
        gbc.setState(0x61ed, 0xcc6e, 0x63d0, 0xd5f, 0x5a38, 0xa93f, 0x1, 0x1);
        gbc.writeMem(0x61ed, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcc6e, gbc.sp());
        EXPECT(0x61ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02CF
        gbc.setState(0xc306, 0xe332, 0x4110, 0xe3b0, 0x796b, 0x2b32, 0x0, 0x1);
        gbc.writeMem(0xc306, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe332, gbc.sp());
        EXPECT(0xc308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc306));
        EXPECT(0x38, gbc.readMem(0xc307));
        // CB 38 02D0
        gbc.setState(0xe755, 0x1fe2, 0xe5e0, 0xa260, 0xebb, 0x3f14, 0x1, 0x1);
        gbc.writeMem(0xe755, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1fe2, gbc.sp());
        EXPECT(0xe757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe755));
        EXPECT(0x38, gbc.readMem(0xe756));
        // CB 38 02D1
        gbc.setState(0x6b1d, 0x5166, 0x3880, 0x8345, 0x63e1, 0x14e1, 0x1, 0x1);
        gbc.writeMem(0x6b1d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5166, gbc.sp());
        EXPECT(0x6b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02D2
        gbc.setState(0x4fb2, 0xda37, 0xea70, 0x25e5, 0xf224, 0x808b, 0x0, 0x0);
        gbc.writeMem(0x4fb2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xda37, gbc.sp());
        EXPECT(0x4fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02D3
        gbc.setState(0xb93f, 0x9199, 0xfc80, 0xf8ad, 0x55ef, 0x98f, 0x1, 0x1);
        gbc.writeMem(0xb93f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9199, gbc.sp());
        EXPECT(0xb941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93f));
        EXPECT(0x38, gbc.readMem(0xb940));
        // CB 38 02D4
        gbc.setState(0xee56, 0x642d, 0xb1b0, 0xe6a2, 0x3cdd, 0x662f, 0x0, 0x0);
        gbc.writeMem(0xee56, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x642d, gbc.sp());
        EXPECT(0xee58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee56));
        EXPECT(0x38, gbc.readMem(0xee57));
        // CB 38 02D5
        gbc.setState(0x39af, 0x103a, 0x16c0, 0x29c4, 0x5f1a, 0xd478, 0x0, 0x0);
        gbc.writeMem(0x39af, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x103a, gbc.sp());
        EXPECT(0x39b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02D6
        gbc.setState(0x1d61, 0xf63a, 0xb630, 0x15fe, 0x829d, 0x9e7f, 0x1, 0x1);
        gbc.writeMem(0x1d61, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf63a, gbc.sp());
        EXPECT(0x1d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02D7
        gbc.setState(0xef34, 0x75aa, 0xdc30, 0xe704, 0xcf70, 0x56ce, 0x0, 0x1);
        gbc.writeMem(0xef34, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x75aa, gbc.sp());
        EXPECT(0xef36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef34));
        EXPECT(0x38, gbc.readMem(0xef35));
        // CB 38 02D8
        gbc.setState(0xaec4, 0xe41d, 0xd060, 0xef23, 0xd446, 0x4d81, 0x1, 0x0);
        gbc.writeMem(0xaec4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe41d, gbc.sp());
        EXPECT(0xaec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec4));
        EXPECT(0x38, gbc.readMem(0xaec5));
        // CB 38 02D9
        gbc.setState(0x45f7, 0xb50a, 0x6a60, 0xf8f8, 0x8933, 0xa9f4, 0x0, 0x1);
        gbc.writeMem(0x45f7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb50a, gbc.sp());
        EXPECT(0x45f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02DA
        gbc.setState(0x1b10, 0xb535, 0x5930, 0xf995, 0x7e20, 0xac91, 0x0, 0x1);
        gbc.writeMem(0x1b10, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb535, gbc.sp());
        EXPECT(0x1b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02DB
        gbc.setState(0x6226, 0x1dca, 0xa120, 0xc4, 0x2a87, 0x4660, 0x0, 0x0);
        gbc.writeMem(0x6226, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1dca, gbc.sp());
        EXPECT(0x6228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02DC
        gbc.setState(0x5420, 0x7bee, 0xcd80, 0x52f3, 0xb072, 0x954a, 0x1, 0x1);
        gbc.writeMem(0x5420, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7bee, gbc.sp());
        EXPECT(0x5422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02DD
        gbc.setState(0xb97d, 0x386a, 0xd750, 0x15db, 0xd277, 0xf463, 0x0, 0x1);
        gbc.writeMem(0xb97d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x386a, gbc.sp());
        EXPECT(0xb97f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97d));
        EXPECT(0x38, gbc.readMem(0xb97e));
        // CB 38 02DE
        gbc.setState(0xe887, 0x1d29, 0xae70, 0xd957, 0xdddd, 0x5333, 0x1, 0x0);
        gbc.writeMem(0xe887, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1d29, gbc.sp());
        EXPECT(0xe889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe887));
        EXPECT(0x38, gbc.readMem(0xe888));
        // CB 38 02DF
        gbc.setState(0xd0f6, 0xa364, 0xb770, 0xa3ed, 0xfffc, 0x4dc1, 0x0, 0x1);
        gbc.writeMem(0xd0f6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa364, gbc.sp());
        EXPECT(0xd0f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f6));
        EXPECT(0x38, gbc.readMem(0xd0f7));
        // CB 38 02E0
        gbc.setState(0x1e33, 0xf249, 0x3400, 0x6cb9, 0xf6f1, 0x657b, 0x0, 0x1);
        gbc.writeMem(0x1e33, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf249, gbc.sp());
        EXPECT(0x1e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02E1
        gbc.setState(0x3e73, 0x2db8, 0xfe50, 0x750a, 0x6bed, 0xdd1a, 0x0, 0x1);
        gbc.writeMem(0x3e73, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2db8, gbc.sp());
        EXPECT(0x3e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02E2
        gbc.setState(0xbc66, 0x705, 0x5b20, 0xf7b8, 0x5ebd, 0x1318, 0x0, 0x1);
        gbc.writeMem(0xbc66, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x705, gbc.sp());
        EXPECT(0xbc68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc66));
        EXPECT(0x38, gbc.readMem(0xbc67));
        // CB 38 02E3
        gbc.setState(0x792a, 0xc718, 0xae10, 0x12bb, 0xeffb, 0x637e, 0x0, 0x0);
        gbc.writeMem(0x792a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc718, gbc.sp());
        EXPECT(0x792c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02E4
        gbc.setState(0x1594, 0xeaa2, 0x68f0, 0xa21, 0x4261, 0x848f, 0x0, 0x1);
        gbc.writeMem(0x1594, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xeaa2, gbc.sp());
        EXPECT(0x1596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02E5
        gbc.setState(0x2ccc, 0x1ab4, 0x5770, 0xc026, 0x6e38, 0xa5ab, 0x1, 0x0);
        gbc.writeMem(0x2ccc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1ab4, gbc.sp());
        EXPECT(0x2cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02E6
        gbc.setState(0xcd74, 0x119, 0xc60, 0xa514, 0x7faa, 0x554b, 0x1, 0x0);
        gbc.writeMem(0xcd74, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x119, gbc.sp());
        EXPECT(0xcd76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd74));
        EXPECT(0x38, gbc.readMem(0xcd75));
        // CB 38 02E7
        gbc.setState(0xb0a0, 0xc649, 0xe040, 0x7b9e, 0x54a2, 0x5e6f, 0x1, 0x0);
        gbc.writeMem(0xb0a0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc649, gbc.sp());
        EXPECT(0xb0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a0));
        EXPECT(0x38, gbc.readMem(0xb0a1));
        // CB 38 02E8
        gbc.setState(0x21bb, 0x1fad, 0x2e10, 0x8115, 0x19c, 0x771d, 0x0, 0x0);
        gbc.writeMem(0x21bb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1fad, gbc.sp());
        EXPECT(0x21bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02E9
        gbc.setState(0xe836, 0xdeba, 0xe7a0, 0x1d4b, 0x22f1, 0xb8e0, 0x0, 0x0);
        gbc.writeMem(0xe836, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdeba, gbc.sp());
        EXPECT(0xe838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe836));
        EXPECT(0x38, gbc.readMem(0xe837));
        // CB 38 02EA
        gbc.setState(0xc968, 0xbef3, 0xceb0, 0xb3fa, 0x5dc, 0x1a04, 0x0, 0x0);
        gbc.writeMem(0xc968, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbef3, gbc.sp());
        EXPECT(0xc96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc968));
        EXPECT(0x38, gbc.readMem(0xc969));
        // CB 38 02EB
        gbc.setState(0xc814, 0xf16, 0xd3d0, 0xdbbe, 0x847e, 0xa792, 0x0, 0x1);
        gbc.writeMem(0xc814, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf16, gbc.sp());
        EXPECT(0xc816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc814));
        EXPECT(0x38, gbc.readMem(0xc815));
        // CB 38 02EC
        gbc.setState(0x156a, 0x8ab5, 0xfde0, 0x5575, 0x74f3, 0x49b9, 0x0, 0x0);
        gbc.writeMem(0x156a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8ab5, gbc.sp());
        EXPECT(0x156c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02EE
        gbc.setState(0xe40a, 0x7cfa, 0xe10, 0xdc1a, 0xf1e0, 0x548c, 0x1, 0x1);
        gbc.writeMem(0xe40a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7cfa, gbc.sp());
        EXPECT(0xe40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe40a));
        EXPECT(0x38, gbc.readMem(0xe40b));
        // CB 38 02EF
        gbc.setState(0xe559, 0xfcef, 0x20b0, 0xaddd, 0xf8df, 0x5388, 0x0, 0x0);
        gbc.writeMem(0xe559, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfcef, gbc.sp());
        EXPECT(0xe55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe559));
        EXPECT(0x38, gbc.readMem(0xe55a));
        // CB 38 02F0
        gbc.setState(0xc0ec, 0xd512, 0x5da0, 0xa0a0, 0xbc3, 0x309, 0x0, 0x0);
        gbc.writeMem(0xc0ec, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd512, gbc.sp());
        EXPECT(0xc0ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ec));
        EXPECT(0x38, gbc.readMem(0xc0ed));
        // CB 38 02F1
        gbc.setState(0xd2b7, 0xb89a, 0xf1e0, 0x869e, 0x75ac, 0xfb50, 0x0, 0x0);
        gbc.writeMem(0xd2b7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb89a, gbc.sp());
        EXPECT(0xd2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b7));
        EXPECT(0x38, gbc.readMem(0xd2b8));
        // CB 38 02F3
        gbc.setState(0x3285, 0xa1ae, 0x4c50, 0xba91, 0xe544, 0xe618, 0x1, 0x1);
        gbc.writeMem(0x3285, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa1ae, gbc.sp());
        EXPECT(0x3287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02F4
        gbc.setState(0x79b9, 0xf20a, 0x8ad0, 0xc0cd, 0x153d, 0xb5fe, 0x1, 0x0);
        gbc.writeMem(0x79b9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf20a, gbc.sp());
        EXPECT(0x79bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02F5
        gbc.setState(0xd83f, 0x608, 0xf80, 0x9566, 0x81a1, 0x2389, 0x1, 0x1);
        gbc.writeMem(0xd83f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x608, gbc.sp());
        EXPECT(0xd841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd83f));
        EXPECT(0x38, gbc.readMem(0xd840));
        // CB 38 02F6
        gbc.setState(0x8e6b, 0xade3, 0x6a00, 0x8c3b, 0x5d24, 0x6d10, 0x0, 0x1);
        gbc.writeMem(0x8e6b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xade3, gbc.sp());
        EXPECT(0x8e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6b));
        EXPECT(0x38, gbc.readMem(0x8e6c));
        // CB 38 02F7
        gbc.setState(0x3da8, 0x8c93, 0x6620, 0x40, 0xae12, 0x1695, 0x1, 0x1);
        gbc.writeMem(0x3da8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8c93, gbc.sp());
        EXPECT(0x3daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02F8
        gbc.setState(0x5d2d, 0xad31, 0x36e0, 0xe432, 0x59ee, 0x7462, 0x0, 0x0);
        gbc.writeMem(0x5d2d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xad31, gbc.sp());
        EXPECT(0x5d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 02F9
        gbc.setState(0xc81, 0xd394, 0xcb60, 0x6727, 0x1881, 0x72cf, 0x0, 0x0);
        gbc.writeMem(0xc81, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd394, gbc.sp());
        EXPECT(0xc83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02FA
        gbc.setState(0x977c, 0x5aed, 0xcbe0, 0x50e8, 0xad6d, 0x92f1, 0x1, 0x0);
        gbc.writeMem(0x977c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5aed, gbc.sp());
        EXPECT(0x977e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x977c));
        EXPECT(0x38, gbc.readMem(0x977d));
        // CB 38 02FB
        gbc.setState(0x8eed, 0x1270, 0xcbc0, 0xc4a0, 0xee48, 0xd8ca, 0x1, 0x1);
        gbc.writeMem(0x8eed, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1270, gbc.sp());
        EXPECT(0x8eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eed));
        EXPECT(0x38, gbc.readMem(0x8eee));
        // CB 38 02FD
        gbc.setState(0x1b15, 0x179c, 0xc7f0, 0xfb73, 0x20b1, 0xe04e, 0x1, 0x0);
        gbc.writeMem(0x1b15, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x179c, gbc.sp());
        EXPECT(0x1b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02FE
        gbc.setState(0x629f, 0x9cf9, 0x2fb0, 0x3de9, 0xf76b, 0x4b40, 0x1, 0x0);
        gbc.writeMem(0x629f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9cf9, gbc.sp());
        EXPECT(0x62a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 02FF
        gbc.setState(0xa63a, 0xfb38, 0xbea0, 0x21f0, 0xbac, 0xb46f, 0x1, 0x0);
        gbc.writeMem(0xa63a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfb38, gbc.sp());
        EXPECT(0xa63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa63a));
        EXPECT(0x38, gbc.readMem(0xa63b));
        // CB 38 0300
        gbc.setState(0xa95d, 0x5570, 0x6470, 0xa5a5, 0x1fe4, 0x9c1f, 0x0, 0x1);
        gbc.writeMem(0xa95d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5570, gbc.sp());
        EXPECT(0xa95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95d));
        EXPECT(0x38, gbc.readMem(0xa95e));
        // CB 38 0301
        gbc.setState(0x1aef, 0xee01, 0xbeb0, 0x21a4, 0x94dc, 0xb64a, 0x1, 0x0);
        gbc.writeMem(0x1aef, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xee01, gbc.sp());
        EXPECT(0x1af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0302
        gbc.setState(0x4feb, 0x3b58, 0xfb40, 0x7e71, 0xb6d3, 0x9b21, 0x0, 0x0);
        gbc.writeMem(0x4feb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3b58, gbc.sp());
        EXPECT(0x4fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0303
        gbc.setState(0xddf4, 0x820d, 0xf860, 0xec0c, 0xcd0e, 0xd8dd, 0x0, 0x1);
        gbc.writeMem(0xddf4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x820d, gbc.sp());
        EXPECT(0xddf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf4));
        EXPECT(0x38, gbc.readMem(0xddf5));
        // CB 38 0304
        gbc.setState(0xb5cf, 0x968c, 0xb8b0, 0xe9c0, 0x3c03, 0x8552, 0x1, 0x0);
        gbc.writeMem(0xb5cf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x968c, gbc.sp());
        EXPECT(0xb5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5cf));
        EXPECT(0x38, gbc.readMem(0xb5d0));
        // CB 38 0305
        gbc.setState(0xdb20, 0x8451, 0xcf70, 0x8f2e, 0x5056, 0x28ca, 0x1, 0x1);
        gbc.writeMem(0xdb20, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8451, gbc.sp());
        EXPECT(0xdb22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb20));
        EXPECT(0x38, gbc.readMem(0xdb21));
        // CB 38 0306
        gbc.setState(0x3783, 0x60f3, 0x8f0, 0xfa70, 0x45af, 0xc081, 0x0, 0x0);
        gbc.writeMem(0x3783, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x60f3, gbc.sp());
        EXPECT(0x3785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0307
        gbc.setState(0x11ab, 0xe578, 0xf370, 0x2979, 0xcb24, 0x3001, 0x0, 0x1);
        gbc.writeMem(0x11ab, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe578, gbc.sp());
        EXPECT(0x11ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0308
        gbc.setState(0xb117, 0xeaf0, 0xfb30, 0xaf12, 0x74d1, 0x5bc1, 0x0, 0x1);
        gbc.writeMem(0xb117, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xeaf0, gbc.sp());
        EXPECT(0xb119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb117));
        EXPECT(0x38, gbc.readMem(0xb118));
        // CB 38 0309
        gbc.setState(0x3d0b, 0xa725, 0x7d0, 0x9519, 0x54ba, 0x6d16, 0x0, 0x1);
        gbc.writeMem(0x3d0b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa725, gbc.sp());
        EXPECT(0x3d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 030A
        gbc.setState(0xcf9a, 0x9677, 0x87c0, 0xf6c0, 0xf6c3, 0xf91d, 0x1, 0x0);
        gbc.writeMem(0xcf9a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9677, gbc.sp());
        EXPECT(0xcf9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9a));
        EXPECT(0x38, gbc.readMem(0xcf9b));
        // CB 38 030B
        gbc.setState(0xd286, 0xbe5f, 0x9990, 0x1097, 0x14ae, 0x9297, 0x1, 0x1);
        gbc.writeMem(0xd286, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbe5f, gbc.sp());
        EXPECT(0xd288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd286));
        EXPECT(0x38, gbc.readMem(0xd287));
        // CB 38 030C
        gbc.setState(0x8752, 0xaa85, 0x5d10, 0xbab3, 0xc3a1, 0xe8da, 0x1, 0x1);
        gbc.writeMem(0x8752, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xaa85, gbc.sp());
        EXPECT(0x8754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8752));
        EXPECT(0x38, gbc.readMem(0x8753));
        // CB 38 030D
        gbc.setState(0xae9a, 0x43f5, 0xbce0, 0x9ce5, 0x6a95, 0xfed7, 0x0, 0x0);
        gbc.writeMem(0xae9a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x43f5, gbc.sp());
        EXPECT(0xae9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae9a));
        EXPECT(0x38, gbc.readMem(0xae9b));
        // CB 38 030E
        gbc.setState(0x4205, 0x7f70, 0x7160, 0x16e6, 0xd2b1, 0x9f9a, 0x1, 0x0);
        gbc.writeMem(0x4205, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7f70, gbc.sp());
        EXPECT(0x4207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 030F
        gbc.setState(0x62b0, 0xa390, 0x64a0, 0x398f, 0xd550, 0x284, 0x1, 0x1);
        gbc.writeMem(0x62b0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa390, gbc.sp());
        EXPECT(0x62b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0310
        gbc.setState(0x308, 0x6051, 0x35a0, 0x514c, 0x2561, 0x3c00, 0x0, 0x1);
        gbc.writeMem(0x308, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6051, gbc.sp());
        EXPECT(0x30a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0311
        gbc.setState(0x2e20, 0x3196, 0x90, 0xd8ce, 0xf3c1, 0x59a6, 0x0, 0x1);
        gbc.writeMem(0x2e20, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3196, gbc.sp());
        EXPECT(0x2e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0312
        gbc.setState(0x594, 0xb474, 0xd4a0, 0xc549, 0x6612, 0xaabc, 0x0, 0x1);
        gbc.writeMem(0x594, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb474, gbc.sp());
        EXPECT(0x596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0314
        gbc.setState(0x96e7, 0x9422, 0xec00, 0x69fe, 0x9b2c, 0x16f2, 0x1, 0x0);
        gbc.writeMem(0x96e7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9422, gbc.sp());
        EXPECT(0x96e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e7));
        EXPECT(0x38, gbc.readMem(0x96e8));
        // CB 38 0315
        gbc.setState(0xe21a, 0x1ec1, 0xa490, 0x24b9, 0x707c, 0xf4c7, 0x0, 0x0);
        gbc.writeMem(0xe21a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1ec1, gbc.sp());
        EXPECT(0xe21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21a));
        EXPECT(0x38, gbc.readMem(0xe21b));
        // CB 38 0317
        gbc.setState(0xaaf2, 0x8069, 0x7f90, 0xf6ab, 0x21f5, 0xfb14, 0x1, 0x0);
        gbc.writeMem(0xaaf2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8069, gbc.sp());
        EXPECT(0xaaf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf2));
        EXPECT(0x38, gbc.readMem(0xaaf3));
        // CB 38 0318
        gbc.setState(0xe134, 0x867d, 0xdef0, 0x8de, 0x7c72, 0xa266, 0x1, 0x1);
        gbc.writeMem(0xe134, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x867d, gbc.sp());
        EXPECT(0xe136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe134));
        EXPECT(0x38, gbc.readMem(0xe135));
        // CB 38 0319
        gbc.setState(0xda8c, 0x469c, 0x7040, 0xd891, 0x4c8e, 0xae8d, 0x1, 0x1);
        gbc.writeMem(0xda8c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x469c, gbc.sp());
        EXPECT(0xda8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8c));
        EXPECT(0x38, gbc.readMem(0xda8d));
        // CB 38 031A
        gbc.setState(0x7b2c, 0x6f86, 0x4400, 0x3374, 0x75e9, 0xb409, 0x1, 0x1);
        gbc.writeMem(0x7b2c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6f86, gbc.sp());
        EXPECT(0x7b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 031B
        gbc.setState(0x250a, 0x1981, 0xeb00, 0x6b46, 0x9a06, 0x938e, 0x1, 0x1);
        gbc.writeMem(0x250a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1981, gbc.sp());
        EXPECT(0x250c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 031C
        gbc.setState(0xeeb0, 0x8b66, 0x3560, 0x7113, 0x1ca3, 0x3edd, 0x1, 0x0);
        gbc.writeMem(0xeeb0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8b66, gbc.sp());
        EXPECT(0xeeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb0));
        EXPECT(0x38, gbc.readMem(0xeeb1));
        // CB 38 031D
        gbc.setState(0xeba9, 0x180b, 0x60c0, 0x24c5, 0x6379, 0xe908, 0x0, 0x0);
        gbc.writeMem(0xeba9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x180b, gbc.sp());
        EXPECT(0xebab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeba9));
        EXPECT(0x38, gbc.readMem(0xebaa));
        // CB 38 031E
        gbc.setState(0x28fa, 0x29d1, 0x45c0, 0x568f, 0x4f4e, 0x1f89, 0x0, 0x1);
        gbc.writeMem(0x28fa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x29d1, gbc.sp());
        EXPECT(0x28fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 031F
        gbc.setState(0x6d08, 0xe44, 0xc700, 0xf855, 0x5225, 0xabb5, 0x0, 0x0);
        gbc.writeMem(0x6d08, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe44, gbc.sp());
        EXPECT(0x6d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0320
        gbc.setState(0xab81, 0x46a2, 0x90f0, 0x2008, 0x6a27, 0xfd72, 0x0, 0x0);
        gbc.writeMem(0xab81, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x46a2, gbc.sp());
        EXPECT(0xab83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab81));
        EXPECT(0x38, gbc.readMem(0xab82));
        // CB 38 0321
        gbc.setState(0x45df, 0xc407, 0xf8b0, 0x352, 0x415f, 0x62f0, 0x1, 0x1);
        gbc.writeMem(0x45df, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc407, gbc.sp());
        EXPECT(0x45e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0322
        gbc.setState(0xc8af, 0x5721, 0x6a30, 0xf93f, 0x2d01, 0xf217, 0x0, 0x1);
        gbc.writeMem(0xc8af, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5721, gbc.sp());
        EXPECT(0xc8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8af));
        EXPECT(0x38, gbc.readMem(0xc8b0));
        // CB 38 0323
        gbc.setState(0x2fdc, 0x8040, 0x2830, 0x32af, 0x7d9e, 0xffee, 0x0, 0x1);
        gbc.writeMem(0x2fdc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8040, gbc.sp());
        EXPECT(0x2fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0324
        gbc.setState(0x1c9a, 0xcf44, 0xe6d0, 0xe3e0, 0x66a7, 0xe3cb, 0x1, 0x0);
        gbc.writeMem(0x1c9a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcf44, gbc.sp());
        EXPECT(0x1c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0325
        gbc.setState(0xc1a, 0x507, 0x45d0, 0xe44b, 0xbdbe, 0x8e, 0x1, 0x0);
        gbc.writeMem(0xc1a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x507, gbc.sp());
        EXPECT(0xc1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0326
        gbc.setState(0x4ff6, 0x995c, 0xbf0, 0x33e, 0xebcd, 0xc3c, 0x0, 0x0);
        gbc.writeMem(0x4ff6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x995c, gbc.sp());
        EXPECT(0x4ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0327
        gbc.setState(0xc75f, 0xdcc7, 0xa490, 0xfb31, 0xf4dc, 0xd168, 0x0, 0x1);
        gbc.writeMem(0xc75f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdcc7, gbc.sp());
        EXPECT(0xc761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75f));
        EXPECT(0x38, gbc.readMem(0xc760));
        // CB 38 0328
        gbc.setState(0xb11b, 0xb172, 0x7270, 0xf27d, 0xb8df, 0x2aca, 0x1, 0x0);
        gbc.writeMem(0xb11b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb172, gbc.sp());
        EXPECT(0xb11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11b));
        EXPECT(0x38, gbc.readMem(0xb11c));
        // CB 38 0329
        gbc.setState(0x806e, 0x6dc6, 0x8cd0, 0xa8ef, 0xbe05, 0xa593, 0x1, 0x0);
        gbc.writeMem(0x806e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6dc6, gbc.sp());
        EXPECT(0x8070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806e));
        EXPECT(0x38, gbc.readMem(0x806f));
        // CB 38 032A
        gbc.setState(0xf99, 0x59, 0x66a0, 0x8ca7, 0x5c5d, 0x7373, 0x1, 0x1);
        gbc.writeMem(0xf99, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x59, gbc.sp());
        EXPECT(0xf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 032B
        gbc.setState(0x9d34, 0x10fc, 0x3ec0, 0x6cdf, 0x299b, 0x1123, 0x1, 0x0);
        gbc.writeMem(0x9d34, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x10fc, gbc.sp());
        EXPECT(0x9d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d34));
        EXPECT(0x38, gbc.readMem(0x9d35));
        // CB 38 032C
        gbc.setState(0xde2d, 0x8673, 0x5b0, 0xaf64, 0xfc52, 0x5fb9, 0x1, 0x0);
        gbc.writeMem(0xde2d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8673, gbc.sp());
        EXPECT(0xde2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde2d));
        EXPECT(0x38, gbc.readMem(0xde2e));
        // CB 38 032D
        gbc.setState(0xbfe, 0x6a79, 0xd890, 0x708a, 0x582b, 0xaef, 0x0, 0x1);
        gbc.writeMem(0xbfe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6a79, gbc.sp());
        EXPECT(0xc00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 032E
        gbc.setState(0x7985, 0x9602, 0x7bd0, 0xd094, 0x4b0, 0x1ec1, 0x0, 0x1);
        gbc.writeMem(0x7985, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9602, gbc.sp());
        EXPECT(0x7987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 032F
        gbc.setState(0x723, 0xf2e0, 0x1000, 0xcd09, 0xda6d, 0x896a, 0x1, 0x0);
        gbc.writeMem(0x723, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf2e0, gbc.sp());
        EXPECT(0x725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0330
        gbc.setState(0xa7a, 0xf95a, 0x9d90, 0x806c, 0x9635, 0x848c, 0x0, 0x1);
        gbc.writeMem(0xa7a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf95a, gbc.sp());
        EXPECT(0xa7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0331
        gbc.setState(0x2e55, 0x3682, 0x8510, 0x34d7, 0x4b49, 0x1626, 0x1, 0x0);
        gbc.writeMem(0x2e55, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3682, gbc.sp());
        EXPECT(0x2e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0332
        gbc.setState(0xd9bc, 0x34f5, 0x6270, 0x5ee7, 0xc969, 0x3337, 0x0, 0x1);
        gbc.writeMem(0xd9bc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x34f5, gbc.sp());
        EXPECT(0xd9be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9bc));
        EXPECT(0x38, gbc.readMem(0xd9bd));
        // CB 38 0333
        gbc.setState(0xc915, 0xef5, 0xd830, 0xc8b6, 0xfe6a, 0xaef6, 0x1, 0x0);
        gbc.writeMem(0xc915, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xef5, gbc.sp());
        EXPECT(0xc917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc915));
        EXPECT(0x38, gbc.readMem(0xc916));
        // CB 38 0334
        gbc.setState(0x7f84, 0x5c76, 0xef30, 0x812d, 0x3f36, 0xb1fe, 0x1, 0x1);
        gbc.writeMem(0x7f84, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5c76, gbc.sp());
        EXPECT(0x7f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0336
        gbc.setState(0xef6b, 0xd245, 0x7250, 0xc211, 0x6279, 0xfcae, 0x0, 0x0);
        gbc.writeMem(0xef6b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd245, gbc.sp());
        EXPECT(0xef6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6b));
        EXPECT(0x38, gbc.readMem(0xef6c));
        // CB 38 0337
        gbc.setState(0x9128, 0x6885, 0x4b90, 0xa40f, 0xccb6, 0x91da, 0x1, 0x0);
        gbc.writeMem(0x9128, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6885, gbc.sp());
        EXPECT(0x912a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9128));
        EXPECT(0x38, gbc.readMem(0x9129));
        // CB 38 0338
        gbc.setState(0x4ba3, 0xcecb, 0xc080, 0xcaab, 0xd1c, 0xf053, 0x1, 0x0);
        gbc.writeMem(0x4ba3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcecb, gbc.sp());
        EXPECT(0x4ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0339
        gbc.setState(0x61d4, 0x86ed, 0xfb60, 0xa456, 0xf761, 0x33a3, 0x0, 0x1);
        gbc.writeMem(0x61d4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x86ed, gbc.sp());
        EXPECT(0x61d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 033A
        gbc.setState(0x7bdb, 0x7470, 0x9f70, 0x6acc, 0x66ca, 0x64b0, 0x1, 0x1);
        gbc.writeMem(0x7bdb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7470, gbc.sp());
        EXPECT(0x7bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 033B
        gbc.setState(0xecae, 0x3740, 0xa720, 0x6be5, 0x64f7, 0xd279, 0x0, 0x0);
        gbc.writeMem(0xecae, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3740, gbc.sp());
        EXPECT(0xecb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecae));
        EXPECT(0x38, gbc.readMem(0xecaf));
        // CB 38 033C
        gbc.setState(0x8a53, 0xe438, 0x34b0, 0x66cd, 0xbafa, 0x7206, 0x0, 0x0);
        gbc.writeMem(0x8a53, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe438, gbc.sp());
        EXPECT(0x8a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a53));
        EXPECT(0x38, gbc.readMem(0x8a54));
        // CB 38 033D
        gbc.setState(0xe381, 0x35c1, 0xedb0, 0x4735, 0x5c01, 0x23ed, 0x0, 0x0);
        gbc.writeMem(0xe381, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x35c1, gbc.sp());
        EXPECT(0xe383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe381));
        EXPECT(0x38, gbc.readMem(0xe382));
        // CB 38 033E
        gbc.setState(0x4c6b, 0x1487, 0x8ef0, 0x57d5, 0x4a1b, 0x1144, 0x1, 0x0);
        gbc.writeMem(0x4c6b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1487, gbc.sp());
        EXPECT(0x4c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 033F
        gbc.setState(0x2f72, 0x4aad, 0xd5d0, 0xf433, 0xa2fd, 0x7ce3, 0x1, 0x1);
        gbc.writeMem(0x2f72, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4aad, gbc.sp());
        EXPECT(0x2f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0340
        gbc.setState(0xb7dd, 0xc214, 0xbaf0, 0xd727, 0x9d0c, 0xa3f, 0x0, 0x1);
        gbc.writeMem(0xb7dd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc214, gbc.sp());
        EXPECT(0xb7df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7dd));
        EXPECT(0x38, gbc.readMem(0xb7de));
        // CB 38 0341
        gbc.setState(0x6769, 0x8102, 0x5680, 0xdefb, 0x8c20, 0xc33f, 0x1, 0x1);
        gbc.writeMem(0x6769, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8102, gbc.sp());
        EXPECT(0x676b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0342
        gbc.setState(0xace9, 0xef6c, 0xe170, 0xaac, 0xf617, 0x4ef8, 0x1, 0x1);
        gbc.writeMem(0xace9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xef6c, gbc.sp());
        EXPECT(0xaceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace9));
        EXPECT(0x38, gbc.readMem(0xacea));
        // CB 38 0343
        gbc.setState(0xe39e, 0x3e63, 0x60b0, 0x971a, 0xa9ff, 0xf93a, 0x0, 0x1);
        gbc.writeMem(0xe39e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3e63, gbc.sp());
        EXPECT(0xe3a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe39e));
        EXPECT(0x38, gbc.readMem(0xe39f));
        // CB 38 0344
        gbc.setState(0x839c, 0x6763, 0x5650, 0x9f68, 0xb0df, 0x18c2, 0x0, 0x0);
        gbc.writeMem(0x839c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6763, gbc.sp());
        EXPECT(0x839e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x839c));
        EXPECT(0x38, gbc.readMem(0x839d));
        // CB 38 0345
        gbc.setState(0x715a, 0x257e, 0x1b60, 0x1387, 0xffa7, 0x815a, 0x1, 0x0);
        gbc.writeMem(0x715a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x257e, gbc.sp());
        EXPECT(0x715c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0346
        gbc.setState(0x811a, 0xbfd4, 0xbb0, 0x78f2, 0x64a0, 0xf8bb, 0x1, 0x0);
        gbc.writeMem(0x811a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbfd4, gbc.sp());
        EXPECT(0x811c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811a));
        EXPECT(0x38, gbc.readMem(0x811b));
        // CB 38 0347
        gbc.setState(0x7b4f, 0xb9a0, 0x7b30, 0x693f, 0xe812, 0x926a, 0x1, 0x0);
        gbc.writeMem(0x7b4f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb9a0, gbc.sp());
        EXPECT(0x7b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0348
        gbc.setState(0x3224, 0xf0a3, 0x8a00, 0x86b3, 0x574f, 0xe3a0, 0x1, 0x1);
        gbc.writeMem(0x3224, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf0a3, gbc.sp());
        EXPECT(0x3226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0349
        gbc.setState(0x947f, 0xa5a0, 0x6af0, 0xc6f4, 0x2b74, 0xdeaf, 0x0, 0x1);
        gbc.writeMem(0x947f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa5a0, gbc.sp());
        EXPECT(0x9481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947f));
        EXPECT(0x38, gbc.readMem(0x9480));
        // CB 38 034A
        gbc.setState(0xb07a, 0x9f67, 0xa6f0, 0xc441, 0xdc7b, 0xc49e, 0x1, 0x1);
        gbc.writeMem(0xb07a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9f67, gbc.sp());
        EXPECT(0xb07c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07a));
        EXPECT(0x38, gbc.readMem(0xb07b));
        // CB 38 034B
        gbc.setState(0x2d03, 0x2cfb, 0x38a0, 0xa3fc, 0xb1a2, 0x8ab3, 0x1, 0x0);
        gbc.writeMem(0x2d03, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2cfb, gbc.sp());
        EXPECT(0x2d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 034C
        gbc.setState(0xacb1, 0x80d5, 0x5bc0, 0xd2a9, 0x210, 0x9534, 0x0, 0x0);
        gbc.writeMem(0xacb1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x80d5, gbc.sp());
        EXPECT(0xacb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb1));
        EXPECT(0x38, gbc.readMem(0xacb2));
        // CB 38 034D
        gbc.setState(0x5d49, 0x88e9, 0x49c0, 0x2ce5, 0xb792, 0xec2b, 0x0, 0x0);
        gbc.writeMem(0x5d49, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x88e9, gbc.sp());
        EXPECT(0x5d4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 034E
        gbc.setState(0x4d54, 0x93db, 0x6b40, 0xda16, 0xa3f2, 0x1398, 0x0, 0x0);
        gbc.writeMem(0x4d54, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x93db, gbc.sp());
        EXPECT(0x4d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 034F
        gbc.setState(0x3be2, 0x2ca0, 0xebb0, 0xde9d, 0x208c, 0xef8, 0x1, 0x0);
        gbc.writeMem(0x3be2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2ca0, gbc.sp());
        EXPECT(0x3be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0350
        gbc.setState(0xc0df, 0xfcca, 0x6230, 0xd69d, 0x4769, 0x11b2, 0x0, 0x0);
        gbc.writeMem(0xc0df, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfcca, gbc.sp());
        EXPECT(0xc0e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0df));
        EXPECT(0x38, gbc.readMem(0xc0e0));
        // CB 38 0351
        gbc.setState(0x9199, 0xff7c, 0xc880, 0x8dd, 0xa28d, 0xa1b6, 0x0, 0x0);
        gbc.writeMem(0x9199, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xff7c, gbc.sp());
        EXPECT(0x919b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9199));
        EXPECT(0x38, gbc.readMem(0x919a));
        // CB 38 0352
        gbc.setState(0xde4b, 0xf834, 0xd4b0, 0xed02, 0x3448, 0x3e7b, 0x1, 0x0);
        gbc.writeMem(0xde4b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf834, gbc.sp());
        EXPECT(0xde4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde4b));
        EXPECT(0x38, gbc.readMem(0xde4c));
        // CB 38 0353
        gbc.setState(0x313f, 0xec8, 0xaa50, 0xf490, 0x3b29, 0x67db, 0x0, 0x0);
        gbc.writeMem(0x313f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xec8, gbc.sp());
        EXPECT(0x3141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0354
        gbc.setState(0x55fe, 0xfa9d, 0x89a0, 0xa9ec, 0xc532, 0xdc5b, 0x1, 0x0);
        gbc.writeMem(0x55fe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfa9d, gbc.sp());
        EXPECT(0x5600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0355
        gbc.setState(0x13dd, 0x40d5, 0xafb0, 0xb5e3, 0x1aee, 0xda8f, 0x0, 0x0);
        gbc.writeMem(0x13dd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x40d5, gbc.sp());
        EXPECT(0x13df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0356
        gbc.setState(0x6a26, 0x5d5d, 0x9e90, 0x310c, 0xaa9f, 0xf560, 0x0, 0x1);
        gbc.writeMem(0x6a26, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5d5d, gbc.sp());
        EXPECT(0x6a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0358
        gbc.setState(0x22ae, 0xa0d8, 0xa480, 0xf1ea, 0xa46c, 0x7215, 0x0, 0x0);
        gbc.writeMem(0x22ae, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa0d8, gbc.sp());
        EXPECT(0x22b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0359
        gbc.setState(0xeda9, 0x50ea, 0x5430, 0x55a, 0xd0a, 0x54c0, 0x1, 0x0);
        gbc.writeMem(0xeda9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x50ea, gbc.sp());
        EXPECT(0xedab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda9));
        EXPECT(0x38, gbc.readMem(0xedaa));
        // CB 38 035A
        gbc.setState(0x98c1, 0x3618, 0x29d0, 0x1578, 0x835d, 0xc90, 0x0, 0x1);
        gbc.writeMem(0x98c1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3618, gbc.sp());
        EXPECT(0x98c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c1));
        EXPECT(0x38, gbc.readMem(0x98c2));
        // CB 38 035B
        gbc.setState(0x6a5f, 0x5ca8, 0xa940, 0x8641, 0xb3d, 0x50da, 0x1, 0x1);
        gbc.writeMem(0x6a5f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5ca8, gbc.sp());
        EXPECT(0x6a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 035C
        gbc.setState(0x4d63, 0xed83, 0xff90, 0x64f, 0xbeb4, 0xeb3d, 0x1, 0x1);
        gbc.writeMem(0x4d63, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xed83, gbc.sp());
        EXPECT(0x4d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 035D
        gbc.setState(0x81cd, 0xc024, 0x54e0, 0xd2b7, 0x1323, 0x39c9, 0x0, 0x1);
        gbc.writeMem(0x81cd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc024, gbc.sp());
        EXPECT(0x81cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81cd));
        EXPECT(0x38, gbc.readMem(0x81ce));
        // CB 38 035E
        gbc.setState(0x1a3c, 0xf7bf, 0xe4f0, 0xe61c, 0x8a05, 0x9340, 0x1, 0x0);
        gbc.writeMem(0x1a3c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf7bf, gbc.sp());
        EXPECT(0x1a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 035F
        gbc.setState(0xc58c, 0x7102, 0x3a50, 0xab42, 0x3f32, 0x9046, 0x0, 0x1);
        gbc.writeMem(0xc58c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7102, gbc.sp());
        EXPECT(0xc58e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58c));
        EXPECT(0x38, gbc.readMem(0xc58d));
        // CB 38 0360
        gbc.setState(0x4b0e, 0x4889, 0x9a30, 0x9b1a, 0xf02f, 0xf9a8, 0x1, 0x1);
        gbc.writeMem(0x4b0e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4889, gbc.sp());
        EXPECT(0x4b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0361
        gbc.setState(0x4e3c, 0xe54a, 0x7ba0, 0x5b6b, 0x55cc, 0x4b2f, 0x1, 0x0);
        gbc.writeMem(0x4e3c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe54a, gbc.sp());
        EXPECT(0x4e3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0362
        gbc.setState(0xb9b5, 0x2b14, 0xca10, 0x98cb, 0x235d, 0xdd51, 0x1, 0x0);
        gbc.writeMem(0xb9b5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2b14, gbc.sp());
        EXPECT(0xb9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b5));
        EXPECT(0x38, gbc.readMem(0xb9b6));
        // CB 38 0363
        gbc.setState(0xbfc9, 0xae1b, 0x2940, 0xe9be, 0x1420, 0xe93b, 0x0, 0x0);
        gbc.writeMem(0xbfc9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xae1b, gbc.sp());
        EXPECT(0xbfcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc9));
        EXPECT(0x38, gbc.readMem(0xbfca));
        // CB 38 0364
        gbc.setState(0x3ab1, 0x262b, 0x24b0, 0xdc4a, 0xed4b, 0x2eac, 0x0, 0x1);
        gbc.writeMem(0x3ab1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x262b, gbc.sp());
        EXPECT(0x3ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0365
        gbc.setState(0xdddf, 0x192, 0x7be0, 0x56c3, 0x5830, 0xcbd5, 0x1, 0x1);
        gbc.writeMem(0xdddf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x192, gbc.sp());
        EXPECT(0xdde1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdddf));
        EXPECT(0x38, gbc.readMem(0xdde0));
        // CB 38 0366
        gbc.setState(0x1b98, 0xb76, 0x1f00, 0x83f8, 0x860a, 0xbcb1, 0x0, 0x0);
        gbc.writeMem(0x1b98, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb76, gbc.sp());
        EXPECT(0x1b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0367
        gbc.setState(0xce17, 0x4f23, 0xe470, 0x80, 0x815f, 0x839e, 0x1, 0x1);
        gbc.writeMem(0xce17, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4f23, gbc.sp());
        EXPECT(0xce19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce17));
        EXPECT(0x38, gbc.readMem(0xce18));
        // CB 38 0368
        gbc.setState(0xc13a, 0xe232, 0xc8e0, 0x18a7, 0xac37, 0x6dd8, 0x1, 0x0);
        gbc.writeMem(0xc13a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe232, gbc.sp());
        EXPECT(0xc13c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc13a));
        EXPECT(0x38, gbc.readMem(0xc13b));
        // CB 38 0369
        gbc.setState(0xc673, 0x44df, 0xfe30, 0xc1de, 0x1376, 0xcb7e, 0x1, 0x1);
        gbc.writeMem(0xc673, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x44df, gbc.sp());
        EXPECT(0xc675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc673));
        EXPECT(0x38, gbc.readMem(0xc674));
        // CB 38 036A
        gbc.setState(0xec79, 0xd083, 0x4c00, 0x4c2e, 0x2739, 0x3704, 0x0, 0x1);
        gbc.writeMem(0xec79, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd083, gbc.sp());
        EXPECT(0xec7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec79));
        EXPECT(0x38, gbc.readMem(0xec7a));
        // CB 38 036B
        gbc.setState(0x244b, 0xdb6e, 0x4be0, 0x2f9c, 0x1796, 0x2a7e, 0x1, 0x1);
        gbc.writeMem(0x244b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdb6e, gbc.sp());
        EXPECT(0x244d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 036C
        gbc.setState(0x461, 0xd456, 0xeaf0, 0x702b, 0x71aa, 0xb365, 0x1, 0x1);
        gbc.writeMem(0x461, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd456, gbc.sp());
        EXPECT(0x463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 036E
        gbc.setState(0xa165, 0xb10b, 0xb270, 0xf1b7, 0x3913, 0x9b22, 0x1, 0x0);
        gbc.writeMem(0xa165, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb10b, gbc.sp());
        EXPECT(0xa167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa165));
        EXPECT(0x38, gbc.readMem(0xa166));
        // CB 38 036F
        gbc.setState(0xc54d, 0x115f, 0x5d70, 0x9603, 0xde10, 0xff04, 0x1, 0x0);
        gbc.writeMem(0xc54d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x115f, gbc.sp());
        EXPECT(0xc54f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54d));
        EXPECT(0x38, gbc.readMem(0xc54e));
        // CB 38 0370
        gbc.setState(0x6366, 0x2ab1, 0x44f0, 0xd350, 0x3e73, 0x2ff2, 0x1, 0x0);
        gbc.writeMem(0x6366, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2ab1, gbc.sp());
        EXPECT(0x6368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0371
        gbc.setState(0x4944, 0x543a, 0xfac0, 0x22cb, 0xd21f, 0xdc58, 0x1, 0x1);
        gbc.writeMem(0x4944, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x543a, gbc.sp());
        EXPECT(0x4946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0372
        gbc.setState(0x588b, 0x20d0, 0x8180, 0xac4d, 0xd20f, 0xe82b, 0x0, 0x0);
        gbc.writeMem(0x588b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x20d0, gbc.sp());
        EXPECT(0x588d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0373
        gbc.setState(0x6190, 0x3a01, 0xb3f0, 0xf8, 0xc8bd, 0x1862, 0x0, 0x1);
        gbc.writeMem(0x6190, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3a01, gbc.sp());
        EXPECT(0x6192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0374
        gbc.setState(0x1f12, 0x28a8, 0x3f50, 0x62de, 0xa347, 0xeb09, 0x0, 0x0);
        gbc.writeMem(0x1f12, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x28a8, gbc.sp());
        EXPECT(0x1f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0375
        gbc.setState(0x5741, 0xb71e, 0xb160, 0x792f, 0xfd39, 0xd0ac, 0x0, 0x1);
        gbc.writeMem(0x5741, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb71e, gbc.sp());
        EXPECT(0x5743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0376
        gbc.setState(0xb7dd, 0x4df2, 0x95f0, 0xceeb, 0xd072, 0x9839, 0x1, 0x0);
        gbc.writeMem(0xb7dd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4df2, gbc.sp());
        EXPECT(0xb7df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7dd));
        EXPECT(0x38, gbc.readMem(0xb7de));
        // CB 38 0377
        gbc.setState(0x6a37, 0x504e, 0xef0, 0xd12f, 0x572, 0xccc9, 0x1, 0x1);
        gbc.writeMem(0x6a37, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x504e, gbc.sp());
        EXPECT(0x6a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0378
        gbc.setState(0x27c7, 0x50cd, 0x6c10, 0x8887, 0x23ca, 0xd902, 0x0, 0x0);
        gbc.writeMem(0x27c7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x50cd, gbc.sp());
        EXPECT(0x27c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0379
        gbc.setState(0x2efa, 0x6a0f, 0x480, 0x31c2, 0xb47f, 0xfc99, 0x1, 0x0);
        gbc.writeMem(0x2efa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6a0f, gbc.sp());
        EXPECT(0x2efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 037A
        gbc.setState(0x4c3b, 0xf6b3, 0x5130, 0x4d3f, 0x4441, 0xe1c6, 0x1, 0x0);
        gbc.writeMem(0x4c3b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf6b3, gbc.sp());
        EXPECT(0x4c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 037B
        gbc.setState(0x85da, 0xbaf5, 0x3a40, 0x52ac, 0x90c1, 0x4282, 0x0, 0x1);
        gbc.writeMem(0x85da, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbaf5, gbc.sp());
        EXPECT(0x85dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85da));
        EXPECT(0x38, gbc.readMem(0x85db));
        // CB 38 037C
        gbc.setState(0x7f6a, 0x1f6e, 0xa1d0, 0x101, 0x7f69, 0x85b, 0x1, 0x0);
        gbc.writeMem(0x7f6a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1f6e, gbc.sp());
        EXPECT(0x7f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 037D
        gbc.setState(0x2e1f, 0x8238, 0xff50, 0xcf02, 0xe2d3, 0xd2d, 0x0, 0x0);
        gbc.writeMem(0x2e1f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8238, gbc.sp());
        EXPECT(0x2e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 037E
        gbc.setState(0x4270, 0xd140, 0x1ae0, 0xe59b, 0xa8d6, 0x5dab, 0x0, 0x0);
        gbc.writeMem(0x4270, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd140, gbc.sp());
        EXPECT(0x4272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0380
        gbc.setState(0x1942, 0x4169, 0x8d00, 0x175b, 0x584b, 0xc513, 0x1, 0x1);
        gbc.writeMem(0x1942, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4169, gbc.sp());
        EXPECT(0x1944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0381
        gbc.setState(0x5854, 0xcf13, 0x1e00, 0x3207, 0x52bd, 0x24a, 0x1, 0x0);
        gbc.writeMem(0x5854, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcf13, gbc.sp());
        EXPECT(0x5856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0382
        gbc.setState(0x2799, 0x9844, 0xae50, 0xadae, 0xfb7d, 0x7349, 0x1, 0x0);
        gbc.writeMem(0x2799, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9844, gbc.sp());
        EXPECT(0x279b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0383
        gbc.setState(0x1834, 0x94aa, 0xa540, 0x5255, 0x53ed, 0x2540, 0x0, 0x1);
        gbc.writeMem(0x1834, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x94aa, gbc.sp());
        EXPECT(0x1836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0384
        gbc.setState(0xcd89, 0xcf08, 0xf00, 0xd10e, 0x78dc, 0xbd11, 0x0, 0x1);
        gbc.writeMem(0xcd89, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xcf08, gbc.sp());
        EXPECT(0xcd8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd89));
        EXPECT(0x38, gbc.readMem(0xcd8a));
        // CB 38 0385
        gbc.setState(0xa538, 0xf4b2, 0x1280, 0x17b6, 0x72c5, 0x7f8f, 0x0, 0x0);
        gbc.writeMem(0xa538, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf4b2, gbc.sp());
        EXPECT(0xa53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa538));
        EXPECT(0x38, gbc.readMem(0xa539));
        // CB 38 0386
        gbc.setState(0x49f7, 0xd802, 0x3220, 0x810, 0xf673, 0x26f1, 0x0, 0x1);
        gbc.writeMem(0x49f7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd802, gbc.sp());
        EXPECT(0x49f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0387
        gbc.setState(0x9507, 0xf7c0, 0xb1f0, 0x9c62, 0xbd9f, 0xbb44, 0x0, 0x0);
        gbc.writeMem(0x9507, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf7c0, gbc.sp());
        EXPECT(0x9509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9507));
        EXPECT(0x38, gbc.readMem(0x9508));
        // CB 38 0388
        gbc.setState(0xe320, 0xaa0, 0xadd0, 0x5e41, 0xbc13, 0x9c27, 0x1, 0x0);
        gbc.writeMem(0xe320, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xaa0, gbc.sp());
        EXPECT(0xe322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe320));
        EXPECT(0x38, gbc.readMem(0xe321));
        // CB 38 0389
        gbc.setState(0x5ad7, 0x1c2, 0x7900, 0x8f62, 0x3277, 0x54b7, 0x1, 0x1);
        gbc.writeMem(0x5ad7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1c2, gbc.sp());
        EXPECT(0x5ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 038A
        gbc.setState(0xda59, 0x47cf, 0xe630, 0x2d75, 0x82f1, 0x93c8, 0x1, 0x0);
        gbc.writeMem(0xda59, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x47cf, gbc.sp());
        EXPECT(0xda5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda59));
        EXPECT(0x38, gbc.readMem(0xda5a));
        // CB 38 038B
        gbc.setState(0x9917, 0x7176, 0x7c40, 0xd649, 0xc780, 0x54d0, 0x1, 0x0);
        gbc.writeMem(0x9917, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7176, gbc.sp());
        EXPECT(0x9919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9917));
        EXPECT(0x38, gbc.readMem(0x9918));
        // CB 38 038C
        gbc.setState(0xc0e3, 0x4fa5, 0xed80, 0x9dab, 0x3590, 0x5006, 0x1, 0x1);
        gbc.writeMem(0xc0e3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4fa5, gbc.sp());
        EXPECT(0xc0e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e3));
        EXPECT(0x38, gbc.readMem(0xc0e4));
        // CB 38 038D
        gbc.setState(0x27e0, 0xe45c, 0xb50, 0x43b6, 0xc97f, 0xa106, 0x0, 0x0);
        gbc.writeMem(0x27e0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe45c, gbc.sp());
        EXPECT(0x27e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 038E
        gbc.setState(0x94ea, 0x902, 0x18e0, 0x5cd, 0x4b79, 0xecea, 0x0, 0x1);
        gbc.writeMem(0x94ea, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x902, gbc.sp());
        EXPECT(0x94ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ea));
        EXPECT(0x38, gbc.readMem(0x94eb));
        // CB 38 038F
        gbc.setState(0x9c72, 0xa3a8, 0xa790, 0x9a71, 0xa993, 0x5b35, 0x1, 0x0);
        gbc.writeMem(0x9c72, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa3a8, gbc.sp());
        EXPECT(0x9c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c72));
        EXPECT(0x38, gbc.readMem(0x9c73));
        // CB 38 0390
        gbc.setState(0x9c1e, 0x3704, 0xbb80, 0x5ae, 0x9c0a, 0xfca8, 0x0, 0x1);
        gbc.writeMem(0x9c1e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3704, gbc.sp());
        EXPECT(0x9c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c1e));
        EXPECT(0x38, gbc.readMem(0x9c1f));
        // CB 38 0391
        gbc.setState(0xa43, 0xb7f4, 0xe140, 0xb828, 0x51a2, 0xe215, 0x1, 0x1);
        gbc.writeMem(0xa43, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb7f4, gbc.sp());
        EXPECT(0xa45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0392
        gbc.setState(0xbac2, 0x58dd, 0xadf0, 0x1d15, 0x9d10, 0xc6d5, 0x1, 0x0);
        gbc.writeMem(0xbac2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x58dd, gbc.sp());
        EXPECT(0xbac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac2));
        EXPECT(0x38, gbc.readMem(0xbac3));
        // CB 38 0393
        gbc.setState(0xa5e4, 0xde3b, 0x6490, 0x67cc, 0xd2fb, 0x50fb, 0x0, 0x1);
        gbc.writeMem(0xa5e4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xde3b, gbc.sp());
        EXPECT(0xa5e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e4));
        EXPECT(0x38, gbc.readMem(0xa5e5));
        // CB 38 0394
        gbc.setState(0x6b3a, 0xf5de, 0x7af0, 0xfcd2, 0xaf3b, 0xfc64, 0x1, 0x1);
        gbc.writeMem(0x6b3a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf5de, gbc.sp());
        EXPECT(0x6b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0395
        gbc.setState(0x5c01, 0xf795, 0x8d20, 0x8331, 0xf778, 0x63e8, 0x1, 0x0);
        gbc.writeMem(0x5c01, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf795, gbc.sp());
        EXPECT(0x5c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0396
        gbc.setState(0x6397, 0x1055, 0x38e0, 0xd4c5, 0xf4a5, 0xbefd, 0x1, 0x0);
        gbc.writeMem(0x6397, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1055, gbc.sp());
        EXPECT(0x6399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 0397
        gbc.setState(0x437, 0xb95b, 0x8260, 0xcbab, 0xc3d, 0xf755, 0x1, 0x1);
        gbc.writeMem(0x437, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb95b, gbc.sp());
        EXPECT(0x439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 0398
        gbc.setState(0xcdf4, 0x237a, 0xb320, 0x4eab, 0xdb49, 0xb996, 0x0, 0x0);
        gbc.writeMem(0xcdf4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x237a, gbc.sp());
        EXPECT(0xcdf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf4));
        EXPECT(0x38, gbc.readMem(0xcdf5));
        // CB 38 0399
        gbc.setState(0xe785, 0xb05b, 0xad10, 0x86b6, 0xba2a, 0xea85, 0x1, 0x0);
        gbc.writeMem(0xe785, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb05b, gbc.sp());
        EXPECT(0xe787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe785));
        EXPECT(0x38, gbc.readMem(0xe786));
        // CB 38 039A
        gbc.setState(0xc30d, 0xebf5, 0x7b70, 0x3192, 0x8f22, 0xe490, 0x0, 0x1);
        gbc.writeMem(0xc30d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xebf5, gbc.sp());
        EXPECT(0xc30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30d));
        EXPECT(0x38, gbc.readMem(0xc30e));
        // CB 38 039B
        gbc.setState(0x48c7, 0x264e, 0xfcb0, 0xdcc3, 0x7c09, 0xa900, 0x1, 0x0);
        gbc.writeMem(0x48c7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x264e, gbc.sp());
        EXPECT(0x48c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 039D
        gbc.setState(0xa434, 0xfd2b, 0x1f20, 0xe60, 0x6ec7, 0x46a8, 0x0, 0x0);
        gbc.writeMem(0xa434, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfd2b, gbc.sp());
        EXPECT(0xa436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa434));
        EXPECT(0x38, gbc.readMem(0xa435));
        // CB 38 039E
        gbc.setState(0xb5c1, 0x8798, 0x8bb0, 0x58b5, 0x6fc2, 0x6eea, 0x0, 0x0);
        gbc.writeMem(0xb5c1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8798, gbc.sp());
        EXPECT(0xb5c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c1));
        EXPECT(0x38, gbc.readMem(0xb5c2));
        // CB 38 039F
        gbc.setState(0x2da0, 0x3345, 0xcd60, 0xe3b2, 0xf899, 0xbc3d, 0x0, 0x0);
        gbc.writeMem(0x2da0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3345, gbc.sp());
        EXPECT(0x2da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03A0
        gbc.setState(0x3425, 0xe195, 0x52e0, 0x6a94, 0x1115, 0x7b6d, 0x0, 0x1);
        gbc.writeMem(0x3425, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe195, gbc.sp());
        EXPECT(0x3427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03A1
        gbc.setState(0x9a37, 0xa962, 0x6240, 0x7d8a, 0x9b7f, 0xbeb4, 0x1, 0x0);
        gbc.writeMem(0x9a37, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa962, gbc.sp());
        EXPECT(0x9a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a37));
        EXPECT(0x38, gbc.readMem(0x9a38));
        // CB 38 03A2
        gbc.setState(0x7b44, 0x83c8, 0x7d60, 0x71f, 0x3729, 0x47a4, 0x1, 0x0);
        gbc.writeMem(0x7b44, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x83c8, gbc.sp());
        EXPECT(0x7b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03A3
        gbc.setState(0xd607, 0x19d8, 0x4c60, 0xe3a9, 0xf672, 0x44f, 0x1, 0x1);
        gbc.writeMem(0xd607, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x19d8, gbc.sp());
        EXPECT(0xd609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd607));
        EXPECT(0x38, gbc.readMem(0xd608));
        // CB 38 03A4
        gbc.setState(0x2211, 0x36f3, 0x2fc0, 0x8fe1, 0xe6dc, 0xa40b, 0x1, 0x0);
        gbc.writeMem(0x2211, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x36f3, gbc.sp());
        EXPECT(0x2213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03A5
        gbc.setState(0xc546, 0x515, 0x6f90, 0x3c16, 0xe3ca, 0xad57, 0x1, 0x1);
        gbc.writeMem(0xc546, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x515, gbc.sp());
        EXPECT(0xc548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc546));
        EXPECT(0x38, gbc.readMem(0xc547));
        // CB 38 03A6
        gbc.setState(0xea26, 0x22d4, 0xb070, 0x7567, 0xb01, 0x18c1, 0x1, 0x1);
        gbc.writeMem(0xea26, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x22d4, gbc.sp());
        EXPECT(0xea28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea26));
        EXPECT(0x38, gbc.readMem(0xea27));
        // CB 38 03A8
        gbc.setState(0x8561, 0xf449, 0xe000, 0xa8a8, 0x1e02, 0xbcbc, 0x0, 0x1);
        gbc.writeMem(0x8561, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf449, gbc.sp());
        EXPECT(0x8563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8561));
        EXPECT(0x38, gbc.readMem(0x8562));
        // CB 38 03A9
        gbc.setState(0x2d8e, 0xac21, 0x6660, 0xc91e, 0x8811, 0xc79a, 0x0, 0x0);
        gbc.writeMem(0x2d8e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xac21, gbc.sp());
        EXPECT(0x2d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03AA
        gbc.setState(0x6615, 0xd4e1, 0xfec0, 0x23ef, 0xb9d5, 0xf76b, 0x1, 0x1);
        gbc.writeMem(0x6615, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd4e1, gbc.sp());
        EXPECT(0x6617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03AB
        gbc.setState(0x6d29, 0xc4fd, 0x7c10, 0x8074, 0x7e25, 0x2825, 0x0, 0x1);
        gbc.writeMem(0x6d29, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc4fd, gbc.sp());
        EXPECT(0x6d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03AC
        gbc.setState(0x95c2, 0xe879, 0x6f90, 0xbe85, 0x6f1d, 0x4f99, 0x1, 0x0);
        gbc.writeMem(0x95c2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe879, gbc.sp());
        EXPECT(0x95c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c2));
        EXPECT(0x38, gbc.readMem(0x95c3));
        // CB 38 03AD
        gbc.setState(0x9bbd, 0x9ce4, 0xdb40, 0x7702, 0x469, 0x61af, 0x0, 0x0);
        gbc.writeMem(0x9bbd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9ce4, gbc.sp());
        EXPECT(0x9bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbd));
        EXPECT(0x38, gbc.readMem(0x9bbe));
        // CB 38 03AE
        gbc.setState(0x3f22, 0xa8a7, 0xb8c0, 0x9fbe, 0xcfda, 0xba9a, 0x0, 0x0);
        gbc.writeMem(0x3f22, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa8a7, gbc.sp());
        EXPECT(0x3f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03AF
        gbc.setState(0x621, 0xfe38, 0xd570, 0xbdd9, 0xe96, 0xd215, 0x1, 0x1);
        gbc.writeMem(0x621, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfe38, gbc.sp());
        EXPECT(0x623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03B0
        gbc.setState(0x76de, 0x9b2b, 0xe190, 0x28bc, 0xf073, 0xe435, 0x0, 0x1);
        gbc.writeMem(0x76de, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9b2b, gbc.sp());
        EXPECT(0x76e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03B1
        gbc.setState(0x8a9b, 0xabea, 0x19c0, 0xa605, 0x9ded, 0x43bf, 0x1, 0x1);
        gbc.writeMem(0x8a9b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xabea, gbc.sp());
        EXPECT(0x8a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a9b));
        EXPECT(0x38, gbc.readMem(0x8a9c));
        // CB 38 03B2
        gbc.setState(0x724a, 0xdd8, 0x57d0, 0x8a5d, 0x9107, 0x736c, 0x1, 0x1);
        gbc.writeMem(0x724a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdd8, gbc.sp());
        EXPECT(0x724c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03B4
        gbc.setState(0x50f4, 0xff6e, 0x8a00, 0x20d3, 0xeb43, 0x64cd, 0x1, 0x1);
        gbc.writeMem(0x50f4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xff6e, gbc.sp());
        EXPECT(0x50f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03B5
        gbc.setState(0xe3a0, 0x3bd2, 0x9180, 0xe212, 0x9699, 0xcc51, 0x0, 0x1);
        gbc.writeMem(0xe3a0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3bd2, gbc.sp());
        EXPECT(0xe3a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a0));
        EXPECT(0x38, gbc.readMem(0xe3a1));
        // CB 38 03B6
        gbc.setState(0xdfa9, 0x4eac, 0x9960, 0x4120, 0xf35f, 0xbfe4, 0x0, 0x0);
        gbc.writeMem(0xdfa9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4eac, gbc.sp());
        EXPECT(0xdfab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa9));
        EXPECT(0x38, gbc.readMem(0xdfaa));
        // CB 38 03B7
        gbc.setState(0xb39b, 0x7ab9, 0x7cd0, 0x3452, 0x57dd, 0xb36b, 0x1, 0x1);
        gbc.writeMem(0xb39b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7ab9, gbc.sp());
        EXPECT(0xb39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb39b));
        EXPECT(0x38, gbc.readMem(0xb39c));
        // CB 38 03B9
        gbc.setState(0x8038, 0x2b30, 0xff0, 0x256, 0x337a, 0x3cd2, 0x0, 0x1);
        gbc.writeMem(0x8038, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2b30, gbc.sp());
        EXPECT(0x803a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8038));
        EXPECT(0x38, gbc.readMem(0x8039));
        // CB 38 03BA
        gbc.setState(0xd341, 0x50ee, 0x2170, 0x697d, 0x616a, 0x8af7, 0x0, 0x0);
        gbc.writeMem(0xd341, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x50ee, gbc.sp());
        EXPECT(0xd343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd341));
        EXPECT(0x38, gbc.readMem(0xd342));
        // CB 38 03BB
        gbc.setState(0xe73a, 0x3bb6, 0x7f20, 0xd8ef, 0x543, 0x52cb, 0x0, 0x1);
        gbc.writeMem(0xe73a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3bb6, gbc.sp());
        EXPECT(0xe73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73a));
        EXPECT(0x38, gbc.readMem(0xe73b));
        // CB 38 03BC
        gbc.setState(0xeb7c, 0x17d5, 0xf4d0, 0x4ccf, 0xca61, 0x92c9, 0x0, 0x0);
        gbc.writeMem(0xeb7c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x17d5, gbc.sp());
        EXPECT(0xeb7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7c));
        EXPECT(0x38, gbc.readMem(0xeb7d));
        // CB 38 03BD
        gbc.setState(0xafef, 0x8380, 0xce00, 0x3a8e, 0x2903, 0x9569, 0x1, 0x1);
        gbc.writeMem(0xafef, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8380, gbc.sp());
        EXPECT(0xaff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafef));
        EXPECT(0x38, gbc.readMem(0xaff0));
        // CB 38 03BE
        gbc.setState(0x14d2, 0x455, 0xdf60, 0xd975, 0xf92a, 0x85c1, 0x1, 0x1);
        gbc.writeMem(0x14d2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x455, gbc.sp());
        EXPECT(0x14d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03BF
        gbc.setState(0x4b02, 0xaf48, 0xf9d0, 0x2d7b, 0x6bdd, 0x55e7, 0x1, 0x1);
        gbc.writeMem(0x4b02, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaf48, gbc.sp());
        EXPECT(0x4b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03C0
        gbc.setState(0x7703, 0x9c3d, 0xd030, 0x6cb, 0xe186, 0x8fc5, 0x1, 0x1);
        gbc.writeMem(0x7703, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9c3d, gbc.sp());
        EXPECT(0x7705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03C1
        gbc.setState(0x253c, 0x8048, 0xc300, 0x454f, 0x8151, 0xf4b3, 0x1, 0x1);
        gbc.writeMem(0x253c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8048, gbc.sp());
        EXPECT(0x253e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03C2
        gbc.setState(0x453f, 0xedc7, 0x44f0, 0xb866, 0xd526, 0xf77d, 0x1, 0x1);
        gbc.writeMem(0x453f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xedc7, gbc.sp());
        EXPECT(0x4541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03C3
        gbc.setState(0xbc0, 0x669a, 0x61e0, 0xa874, 0x410a, 0xe8b5, 0x0, 0x0);
        gbc.writeMem(0xbc0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x669a, gbc.sp());
        EXPECT(0xbc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03C4
        gbc.setState(0x3623, 0xd6b4, 0x1900, 0x712a, 0x359e, 0x9708, 0x0, 0x1);
        gbc.writeMem(0x3623, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd6b4, gbc.sp());
        EXPECT(0x3625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03C5
        gbc.setState(0x9c9a, 0xb8b0, 0x9f0, 0x1308, 0x4874, 0xbdb, 0x0, 0x1);
        gbc.writeMem(0x9c9a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb8b0, gbc.sp());
        EXPECT(0x9c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c9a));
        EXPECT(0x38, gbc.readMem(0x9c9b));
        // CB 38 03C6
        gbc.setState(0x8469, 0xa0b6, 0x7290, 0xc916, 0x8b90, 0x364e, 0x1, 0x1);
        gbc.writeMem(0x8469, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa0b6, gbc.sp());
        EXPECT(0x846b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8469));
        EXPECT(0x38, gbc.readMem(0x846a));
        // CB 38 03C7
        gbc.setState(0x8369, 0x19cb, 0x3a70, 0xf84e, 0x2e0c, 0x23ec, 0x1, 0x1);
        gbc.writeMem(0x8369, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x19cb, gbc.sp());
        EXPECT(0x836b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8369));
        EXPECT(0x38, gbc.readMem(0x836a));
        // CB 38 03C8
        gbc.setState(0xcd2b, 0x8c00, 0xe770, 0x83cb, 0xdb4c, 0x97e7, 0x1, 0x1);
        gbc.writeMem(0xcd2b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8c00, gbc.sp());
        EXPECT(0xcd2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd2b));
        EXPECT(0x38, gbc.readMem(0xcd2c));
        // CB 38 03C9
        gbc.setState(0xb571, 0xe18b, 0x2ba0, 0xf99d, 0x6619, 0xbf1d, 0x0, 0x0);
        gbc.writeMem(0xb571, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe18b, gbc.sp());
        EXPECT(0xb573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb571));
        EXPECT(0x38, gbc.readMem(0xb572));
        // CB 38 03CA
        gbc.setState(0x6266, 0x4215, 0xbe00, 0xd4ed, 0xad61, 0xf2f6, 0x0, 0x1);
        gbc.writeMem(0x6266, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4215, gbc.sp());
        EXPECT(0x6268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03CB
        gbc.setState(0x6930, 0x69bd, 0xbb70, 0xa936, 0xa99e, 0xe9e6, 0x0, 0x0);
        gbc.writeMem(0x6930, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x69bd, gbc.sp());
        EXPECT(0x6932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03CC
        gbc.setState(0x1a5e, 0x7ccd, 0x7d80, 0xb683, 0x5370, 0xe677, 0x1, 0x1);
        gbc.writeMem(0x1a5e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7ccd, gbc.sp());
        EXPECT(0x1a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03CD
        gbc.setState(0xca87, 0xa02e, 0xc830, 0xcda, 0x1412, 0xf32e, 0x1, 0x1);
        gbc.writeMem(0xca87, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa02e, gbc.sp());
        EXPECT(0xca89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca87));
        EXPECT(0x38, gbc.readMem(0xca88));
        // CB 38 03CE
        gbc.setState(0x425, 0x8450, 0xd70, 0x6e1, 0x53db, 0xded2, 0x0, 0x0);
        gbc.writeMem(0x425, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8450, gbc.sp());
        EXPECT(0x427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03CF
        gbc.setState(0x77ed, 0x2e60, 0x4120, 0x9dc0, 0xe027, 0x1ecf, 0x1, 0x1);
        gbc.writeMem(0x77ed, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2e60, gbc.sp());
        EXPECT(0x77ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03D0
        gbc.setState(0x65a7, 0x28ed, 0x42e0, 0x3a60, 0x996c, 0xfa3c, 0x0, 0x0);
        gbc.writeMem(0x65a7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x28ed, gbc.sp());
        EXPECT(0x65a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03D1
        gbc.setState(0x473c, 0x6d8b, 0x7d50, 0xef73, 0x51a9, 0xe3ee, 0x0, 0x0);
        gbc.writeMem(0x473c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6d8b, gbc.sp());
        EXPECT(0x473e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03D2
        gbc.setState(0xc5f1, 0xc21c, 0xe920, 0xe86e, 0xc772, 0x35f1, 0x1, 0x1);
        gbc.writeMem(0xc5f1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc21c, gbc.sp());
        EXPECT(0xc5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f1));
        EXPECT(0x38, gbc.readMem(0xc5f2));
        // CB 38 03D3
        gbc.setState(0x1532, 0x65e2, 0x7710, 0xb0a6, 0x3721, 0x42db, 0x1, 0x0);
        gbc.writeMem(0x1532, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x65e2, gbc.sp());
        EXPECT(0x1534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03D5
        gbc.setState(0xb4af, 0x5db9, 0xa0c0, 0xb400, 0xe29, 0xfc50, 0x0, 0x1);
        gbc.writeMem(0xb4af, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5db9, gbc.sp());
        EXPECT(0xb4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4af));
        EXPECT(0x38, gbc.readMem(0xb4b0));
        // CB 38 03D6
        gbc.setState(0x8a60, 0xbd93, 0x4e00, 0x8c3, 0x5667, 0xe118, 0x1, 0x1);
        gbc.writeMem(0x8a60, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbd93, gbc.sp());
        EXPECT(0x8a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a60));
        EXPECT(0x38, gbc.readMem(0x8a61));
        // CB 38 03D7
        gbc.setState(0x5a40, 0x9d1, 0x8400, 0x1693, 0x6f2f, 0x5b77, 0x1, 0x0);
        gbc.writeMem(0x5a40, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9d1, gbc.sp());
        EXPECT(0x5a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03D8
        gbc.setState(0xa0cf, 0xf3f2, 0x6b80, 0xee93, 0x6822, 0xe405, 0x1, 0x0);
        gbc.writeMem(0xa0cf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf3f2, gbc.sp());
        EXPECT(0xa0d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0cf));
        EXPECT(0x38, gbc.readMem(0xa0d0));
        // CB 38 03D9
        gbc.setState(0xdf76, 0x33ac, 0xd970, 0xb431, 0xdfe, 0xa250, 0x0, 0x0);
        gbc.writeMem(0xdf76, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x33ac, gbc.sp());
        EXPECT(0xdf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf76));
        EXPECT(0x38, gbc.readMem(0xdf77));
        // CB 38 03DA
        gbc.setState(0x5eae, 0x2d04, 0xa380, 0x1d2d, 0x8374, 0x1d6, 0x0, 0x0);
        gbc.writeMem(0x5eae, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2d04, gbc.sp());
        EXPECT(0x5eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 38 03DB
        gbc.setState(0x363f, 0x9d0b, 0x500, 0x948c, 0x5c1f, 0x524c, 0x1, 0x1);
        gbc.writeMem(0x363f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9d0b, gbc.sp());
        EXPECT(0x3641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03DD
        gbc.setState(0x55, 0xfa33, 0xa8e0, 0xa857, 0x1a3a, 0xbcea, 0x0, 0x1);
        gbc.writeMem(0x55, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfa33, gbc.sp());
        EXPECT(0x57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03DE
        gbc.setState(0xcd69, 0xc369, 0xad90, 0xacc2, 0xd661, 0x6f33, 0x1, 0x1);
        gbc.writeMem(0xcd69, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc369, gbc.sp());
        EXPECT(0xcd6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd69));
        EXPECT(0x38, gbc.readMem(0xcd6a));
        // CB 38 03DF
        gbc.setState(0x17, 0xf9e0, 0xdd10, 0x60e3, 0xe929, 0x25e5, 0x0, 0x1);
        gbc.writeMem(0x17, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf9e0, gbc.sp());
        EXPECT(0x19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03E0
        gbc.setState(0xa940, 0x78e5, 0xf170, 0x7ba6, 0xb17f, 0x3ebc, 0x0, 0x0);
        gbc.writeMem(0xa940, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x78e5, gbc.sp());
        EXPECT(0xa942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa940));
        EXPECT(0x38, gbc.readMem(0xa941));
        // CB 38 03E1
        gbc.setState(0xc0f5, 0xf589, 0x140, 0xe58f, 0x4fb1, 0xc2aa, 0x0, 0x1);
        gbc.writeMem(0xc0f5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf589, gbc.sp());
        EXPECT(0xc0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f5));
        EXPECT(0x38, gbc.readMem(0xc0f6));
        // CB 38 03E2
        gbc.setState(0x6ac0, 0x4507, 0x3ff0, 0xa89e, 0x376b, 0x39d, 0x1, 0x0);
        gbc.writeMem(0x6ac0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4507, gbc.sp());
        EXPECT(0x6ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03E3
        gbc.setState(0x8e9f, 0x970f, 0x7130, 0x9223, 0x44ee, 0x20df, 0x0, 0x1);
        gbc.writeMem(0x8e9f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x970f, gbc.sp());
        EXPECT(0x8ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e9f));
        EXPECT(0x38, gbc.readMem(0x8ea0));
        // CB 38 03E4
        gbc.setState(0xdb9d, 0x52c2, 0xc640, 0xefb3, 0x30c9, 0xebe0, 0x0, 0x1);
        gbc.writeMem(0xdb9d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x52c2, gbc.sp());
        EXPECT(0xdb9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9d));
        EXPECT(0x38, gbc.readMem(0xdb9e));
        // CB 38 03E5
        gbc.setState(0xaeaf, 0x9050, 0x4fd0, 0xbefb, 0x7f4a, 0x687, 0x1, 0x1);
        gbc.writeMem(0xaeaf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9050, gbc.sp());
        EXPECT(0xaeb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeaf));
        EXPECT(0x38, gbc.readMem(0xaeb0));
        // CB 38 03E6
        gbc.setState(0x3ff2, 0x480c, 0x5df0, 0xb477, 0x40e9, 0xe8c8, 0x1, 0x1);
        gbc.writeMem(0x3ff2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x480c, gbc.sp());
        EXPECT(0x3ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 38 03E7
        gbc.setState(0x4495, 0x37cb, 0x4d80, 0x7c77, 0x7712, 0x7b8b, 0x0, 0x1);
        gbc.writeMem(0x4495, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x37cb, gbc.sp());
        EXPECT(0x4497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
