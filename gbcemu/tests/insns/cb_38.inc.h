    TEST(gbcemu, opcode_cb_38) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 38 0000
        gbc.setState(0xdea5, 0xa836, 0x7d20, 0x9033, 0x81b, 0x222, 0x1, 0x0);
        gbc.writeMem(0xdea5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa836);
        EXPECT(gbc.pc(), 0xdea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdea5), 0xcb);
        EXPECT(gbc.readMem(0xdea6), 0x38);
        // CB 38 0001
        gbc.setState(0x235d, 0xa61, 0x4e10, 0x4b23, 0x14ac, 0xfcf6, 0x0, 0x1);
        gbc.writeMem(0x235d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa61);
        EXPECT(gbc.pc(), 0x235f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0002
        gbc.setState(0x9ce3, 0xe7da, 0x88c0, 0xe19f, 0xe642, 0x2ba4, 0x1, 0x1);
        gbc.writeMem(0x9ce3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe7da);
        EXPECT(gbc.pc(), 0x9ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce3), 0xcb);
        EXPECT(gbc.readMem(0x9ce4), 0x38);
        // CB 38 0003
        gbc.setState(0xc3c9, 0xb903, 0x8f00, 0x625b, 0x8fc8, 0xca47, 0x1, 0x0);
        gbc.writeMem(0xc3c9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb903);
        EXPECT(gbc.pc(), 0xc3cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3c9), 0xcb);
        EXPECT(gbc.readMem(0xc3ca), 0x38);
        // CB 38 0004
        gbc.setState(0xb0f9, 0x9486, 0xa3c0, 0xa534, 0x9ee9, 0x87f5, 0x0, 0x0);
        gbc.writeMem(0xb0f9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9486);
        EXPECT(gbc.pc(), 0xb0fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0f9), 0xcb);
        EXPECT(gbc.readMem(0xb0fa), 0x38);
        // CB 38 0005
        gbc.setState(0xe510, 0xe141, 0x6630, 0x3fdc, 0x73ab, 0x503e, 0x1, 0x1);
        gbc.writeMem(0xe510, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe141);
        EXPECT(gbc.pc(), 0xe512);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe510), 0xcb);
        EXPECT(gbc.readMem(0xe511), 0x38);
        // CB 38 0006
        gbc.setState(0x5daa, 0x5cd1, 0x98b0, 0xf199, 0x30ba, 0x2896, 0x1, 0x0);
        gbc.writeMem(0x5daa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5cd1);
        EXPECT(gbc.pc(), 0x5dac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0007
        gbc.setState(0x11ce, 0xab93, 0x3bb0, 0xb10b, 0x7d90, 0x72ae, 0x0, 0x1);
        gbc.writeMem(0x11ce, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xab93);
        EXPECT(gbc.pc(), 0x11d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0008
        gbc.setState(0xc9ac, 0x2f57, 0xaa90, 0x16c8, 0x7f41, 0x1afe, 0x0, 0x0);
        gbc.writeMem(0xc9ac, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2f57);
        EXPECT(gbc.pc(), 0xc9ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ac), 0xcb);
        EXPECT(gbc.readMem(0xc9ad), 0x38);
        // CB 38 0009
        gbc.setState(0x6229, 0x54bf, 0x12c0, 0x204d, 0xf642, 0xdb1a, 0x1, 0x0);
        gbc.writeMem(0x6229, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x54bf);
        EXPECT(gbc.pc(), 0x622b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 000A
        gbc.setState(0x12f8, 0x48d1, 0x5530, 0xeadf, 0xbf96, 0xf0dd, 0x1, 0x1);
        gbc.writeMem(0x12f8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x48d1);
        EXPECT(gbc.pc(), 0x12fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 000B
        gbc.setState(0xacfe, 0xf1e5, 0xa010, 0xe7f9, 0x2da3, 0xcfec, 0x0, 0x0);
        gbc.writeMem(0xacfe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf1e5);
        EXPECT(gbc.pc(), 0xad00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacfe), 0xcb);
        EXPECT(gbc.readMem(0xacff), 0x38);
        // CB 38 000C
        gbc.setState(0xb959, 0xcd7e, 0x2eb0, 0x7f2c, 0xe488, 0xfec, 0x0, 0x0);
        gbc.writeMem(0xb959, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xcd7e);
        EXPECT(gbc.pc(), 0xb95b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb959), 0xcb);
        EXPECT(gbc.readMem(0xb95a), 0x38);
        // CB 38 000E
        gbc.setState(0x517f, 0x1924, 0xd70, 0x367a, 0xb241, 0x9134, 0x1, 0x0);
        gbc.writeMem(0x517f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1924);
        EXPECT(gbc.pc(), 0x5181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 000F
        gbc.setState(0x711, 0xf835, 0x95f0, 0x5419, 0xbdfd, 0xeba5, 0x0, 0x0);
        gbc.writeMem(0x711, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf835);
        EXPECT(gbc.pc(), 0x713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0010
        gbc.setState(0xebea, 0x5334, 0xc6e0, 0x1cb9, 0x1b17, 0xaba2, 0x1, 0x0);
        gbc.writeMem(0xebea, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5334);
        EXPECT(gbc.pc(), 0xebec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebea), 0xcb);
        EXPECT(gbc.readMem(0xebeb), 0x38);
        // CB 38 0011
        gbc.setState(0x20a6, 0x2c24, 0x4c60, 0x79ea, 0xb93, 0x21c0, 0x1, 0x0);
        gbc.writeMem(0x20a6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2c24);
        EXPECT(gbc.pc(), 0x20a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0012
        gbc.setState(0xba19, 0x44bb, 0xddf0, 0x773, 0xe3ec, 0xda45, 0x0, 0x1);
        gbc.writeMem(0xba19, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x44bb);
        EXPECT(gbc.pc(), 0xba1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba19), 0xcb);
        EXPECT(gbc.readMem(0xba1a), 0x38);
        // CB 38 0013
        gbc.setState(0x69a0, 0x392b, 0xca80, 0xf2cb, 0xdee3, 0xb18c, 0x0, 0x1);
        gbc.writeMem(0x69a0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x392b);
        EXPECT(gbc.pc(), 0x69a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0014
        gbc.setState(0x5511, 0xe2dc, 0x49b0, 0x6ab5, 0x54ca, 0x3609, 0x0, 0x0);
        gbc.writeMem(0x5511, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe2dc);
        EXPECT(gbc.pc(), 0x5513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0015
        gbc.setState(0x2948, 0xa427, 0x1790, 0xc3e1, 0x1e4d, 0x6978, 0x0, 0x1);
        gbc.writeMem(0x2948, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa427);
        EXPECT(gbc.pc(), 0x294a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0016
        gbc.setState(0x1dc, 0xd1bc, 0xc550, 0x11ad, 0x5dfc, 0x7fe1, 0x0, 0x0);
        gbc.writeMem(0x1dc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd1bc);
        EXPECT(gbc.pc(), 0x1de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0017
        gbc.setState(0x6445, 0xb060, 0xa1c0, 0xfab, 0x2c0d, 0xdb73, 0x0, 0x1);
        gbc.writeMem(0x6445, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xb060);
        EXPECT(gbc.pc(), 0x6447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0018
        gbc.setState(0x8f07, 0xc056, 0x69a0, 0x5a8c, 0x2086, 0x3c2c, 0x1, 0x0);
        gbc.writeMem(0x8f07, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc056);
        EXPECT(gbc.pc(), 0x8f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f07), 0xcb);
        EXPECT(gbc.readMem(0x8f08), 0x38);
        // CB 38 0019
        gbc.setState(0x30e0, 0x5cba, 0x2040, 0x544a, 0x737d, 0x715c, 0x0, 0x1);
        gbc.writeMem(0x30e0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5cba);
        EXPECT(gbc.pc(), 0x30e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 001A
        gbc.setState(0xae69, 0x6cf5, 0xb0e0, 0x858e, 0xa9e3, 0xcd6d, 0x1, 0x1);
        gbc.writeMem(0xae69, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6cf5);
        EXPECT(gbc.pc(), 0xae6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae69), 0xcb);
        EXPECT(gbc.readMem(0xae6a), 0x38);
        // CB 38 001B
        gbc.setState(0xc860, 0x85c4, 0xa0e0, 0x565d, 0xa980, 0xfcf6, 0x1, 0x0);
        gbc.writeMem(0xc860, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x85c4);
        EXPECT(gbc.pc(), 0xc862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc860), 0xcb);
        EXPECT(gbc.readMem(0xc861), 0x38);
        // CB 38 001C
        gbc.setState(0x2e6a, 0x24fb, 0x84e0, 0xe270, 0xa29d, 0x53f3, 0x0, 0x0);
        gbc.writeMem(0x2e6a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x24fb);
        EXPECT(gbc.pc(), 0x2e6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 001D
        gbc.setState(0xcd2d, 0xa9da, 0x450, 0x54c3, 0xa7f5, 0xd9bd, 0x1, 0x1);
        gbc.writeMem(0xcd2d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa9da);
        EXPECT(gbc.pc(), 0xcd2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd2d), 0xcb);
        EXPECT(gbc.readMem(0xcd2e), 0x38);
        // CB 38 0020
        gbc.setState(0xcd3f, 0x99d7, 0xfe70, 0xc533, 0x64b, 0x4f25, 0x1, 0x0);
        gbc.writeMem(0xcd3f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x99d7);
        EXPECT(gbc.pc(), 0xcd41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd3f), 0xcb);
        EXPECT(gbc.readMem(0xcd40), 0x38);
        // CB 38 0022
        gbc.setState(0xda8e, 0xc18, 0xff20, 0x9aed, 0x115e, 0xb009, 0x1, 0x1);
        gbc.writeMem(0xda8e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc18);
        EXPECT(gbc.pc(), 0xda90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8e), 0xcb);
        EXPECT(gbc.readMem(0xda8f), 0x38);
        // CB 38 0023
        gbc.setState(0x2489, 0x5d89, 0x5240, 0xa45f, 0x7c66, 0xe141, 0x0, 0x1);
        gbc.writeMem(0x2489, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5d89);
        EXPECT(gbc.pc(), 0x248b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0025
        gbc.setState(0x4e3, 0xf3a9, 0x42d0, 0xfca8, 0x43d8, 0x68a3, 0x1, 0x0);
        gbc.writeMem(0x4e3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf3a9);
        EXPECT(gbc.pc(), 0x4e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0026
        gbc.setState(0xe3ed, 0xccf, 0x1690, 0x8837, 0x2966, 0x560a, 0x1, 0x1);
        gbc.writeMem(0xe3ed, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xccf);
        EXPECT(gbc.pc(), 0xe3ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ed), 0xcb);
        EXPECT(gbc.readMem(0xe3ee), 0x38);
        // CB 38 0028
        gbc.setState(0xe341, 0xba30, 0x7fa0, 0x95fc, 0xfeb, 0xe671, 0x0, 0x0);
        gbc.writeMem(0xe341, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xba30);
        EXPECT(gbc.pc(), 0xe343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe341), 0xcb);
        EXPECT(gbc.readMem(0xe342), 0x38);
        // CB 38 0029
        gbc.setState(0x37b, 0x127c, 0x8840, 0x982, 0x7541, 0x9840, 0x1, 0x0);
        gbc.writeMem(0x37b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x127c);
        EXPECT(gbc.pc(), 0x37d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 002A
        gbc.setState(0x1547, 0x9d6b, 0x8bc0, 0xb916, 0x60a9, 0x90eb, 0x0, 0x0);
        gbc.writeMem(0x1547, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9d6b);
        EXPECT(gbc.pc(), 0x1549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 002B
        gbc.setState(0x2f9c, 0xf4bd, 0xa660, 0x84da, 0x4bdf, 0x55b8, 0x1, 0x1);
        gbc.writeMem(0x2f9c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf4bd);
        EXPECT(gbc.pc(), 0x2f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 002C
        gbc.setState(0xaa4c, 0x1b71, 0x37e0, 0xf5d8, 0x2b55, 0x86fe, 0x1, 0x0);
        gbc.writeMem(0xaa4c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1b71);
        EXPECT(gbc.pc(), 0xaa4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa4c), 0xcb);
        EXPECT(gbc.readMem(0xaa4d), 0x38);
        // CB 38 002D
        gbc.setState(0x44db, 0xadf1, 0xa9f0, 0x26d1, 0x36e3, 0xa4c2, 0x1, 0x0);
        gbc.writeMem(0x44db, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xadf1);
        EXPECT(gbc.pc(), 0x44dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 002E
        gbc.setState(0x356, 0x6589, 0x99d0, 0x1c62, 0x9b4e, 0x1682, 0x1, 0x0);
        gbc.writeMem(0x356, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6589);
        EXPECT(gbc.pc(), 0x358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 002F
        gbc.setState(0xe228, 0xf90b, 0x78d0, 0x3f7f, 0xd0a0, 0xc01f, 0x0, 0x1);
        gbc.writeMem(0xe228, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf90b);
        EXPECT(gbc.pc(), 0xe22a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe228), 0xcb);
        EXPECT(gbc.readMem(0xe229), 0x38);
        // CB 38 0030
        gbc.setState(0xaf86, 0xf5c2, 0xe4e0, 0x23e0, 0xb4d1, 0x3322, 0x1, 0x1);
        gbc.writeMem(0xaf86, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf5c2);
        EXPECT(gbc.pc(), 0xaf88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf86), 0xcb);
        EXPECT(gbc.readMem(0xaf87), 0x38);
        // CB 38 0031
        gbc.setState(0x4f75, 0xc53b, 0xe420, 0x3e2a, 0x7175, 0xb6e4, 0x0, 0x0);
        gbc.writeMem(0x4f75, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc53b);
        EXPECT(gbc.pc(), 0x4f77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0032
        gbc.setState(0x909c, 0x614e, 0xcb20, 0xb64, 0xacda, 0xec86, 0x0, 0x0);
        gbc.writeMem(0x909c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x614e);
        EXPECT(gbc.pc(), 0x909e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x909c), 0xcb);
        EXPECT(gbc.readMem(0x909d), 0x38);
        // CB 38 0033
        gbc.setState(0x4602, 0x9a9c, 0x4650, 0x3b2e, 0x683c, 0x8338, 0x0, 0x0);
        gbc.writeMem(0x4602, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9a9c);
        EXPECT(gbc.pc(), 0x4604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0034
        gbc.setState(0xdfcc, 0xecfa, 0x29f0, 0x60a6, 0xa581, 0x23a, 0x0, 0x1);
        gbc.writeMem(0xdfcc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xecfa);
        EXPECT(gbc.pc(), 0xdfce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfcc), 0xcb);
        EXPECT(gbc.readMem(0xdfcd), 0x38);
        // CB 38 0035
        gbc.setState(0xef65, 0xfccc, 0x5c00, 0xd263, 0x9bda, 0xe4bc, 0x1, 0x0);
        gbc.writeMem(0xef65, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfccc);
        EXPECT(gbc.pc(), 0xef67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef65), 0xcb);
        EXPECT(gbc.readMem(0xef66), 0x38);
        // CB 38 0036
        gbc.setState(0x771f, 0xb5a8, 0x45c0, 0xfe4b, 0x442d, 0x85c5, 0x1, 0x1);
        gbc.writeMem(0x771f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb5a8);
        EXPECT(gbc.pc(), 0x7721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0037
        gbc.setState(0xc2d3, 0x44f6, 0x92e0, 0xfa19, 0xdd16, 0x2bc2, 0x0, 0x0);
        gbc.writeMem(0xc2d3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x44f6);
        EXPECT(gbc.pc(), 0xc2d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2d3), 0xcb);
        EXPECT(gbc.readMem(0xc2d4), 0x38);
        // CB 38 0038
        gbc.setState(0x9a28, 0x147c, 0xace0, 0x3f2b, 0x2d7b, 0x83b4, 0x1, 0x0);
        gbc.writeMem(0x9a28, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x147c);
        EXPECT(gbc.pc(), 0x9a2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a28), 0xcb);
        EXPECT(gbc.readMem(0x9a29), 0x38);
        // CB 38 0039
        gbc.setState(0xdc0c, 0x2cc7, 0xa6d0, 0x80f6, 0x8b1c, 0x4af1, 0x0, 0x0);
        gbc.writeMem(0xdc0c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x2cc7);
        EXPECT(gbc.pc(), 0xdc0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc0c), 0xcb);
        EXPECT(gbc.readMem(0xdc0d), 0x38);
        // CB 38 003A
        gbc.setState(0xae70, 0xcb29, 0xc5e0, 0x1f80, 0x6466, 0xd45d, 0x1, 0x1);
        gbc.writeMem(0xae70, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xcb29);
        EXPECT(gbc.pc(), 0xae72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae70), 0xcb);
        EXPECT(gbc.readMem(0xae71), 0x38);
        // CB 38 003B
        gbc.setState(0x4757, 0xc944, 0xb090, 0xa2aa, 0x5316, 0x6474, 0x1, 0x0);
        gbc.writeMem(0x4757, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc944);
        EXPECT(gbc.pc(), 0x4759);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 003C
        gbc.setState(0x8325, 0xc215, 0x5c70, 0xb185, 0xe8eb, 0x7466, 0x1, 0x1);
        gbc.writeMem(0x8325, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc215);
        EXPECT(gbc.pc(), 0x8327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8325), 0xcb);
        EXPECT(gbc.readMem(0x8326), 0x38);
        // CB 38 003D
        gbc.setState(0xcd1d, 0xb153, 0x2e80, 0xe029, 0x5ab0, 0x85b6, 0x1, 0x1);
        gbc.writeMem(0xcd1d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb153);
        EXPECT(gbc.pc(), 0xcd1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd1d), 0xcb);
        EXPECT(gbc.readMem(0xcd1e), 0x38);
        // CB 38 003E
        gbc.setState(0x822c, 0x2a96, 0xfae0, 0x3051, 0xacf1, 0x125a, 0x1, 0x1);
        gbc.writeMem(0x822c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2a96);
        EXPECT(gbc.pc(), 0x822e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x822c), 0xcb);
        EXPECT(gbc.readMem(0x822d), 0x38);
        // CB 38 0040
        gbc.setState(0xa5fb, 0x459e, 0x21b0, 0x94d9, 0x22fc, 0xcc00, 0x0, 0x0);
        gbc.writeMem(0xa5fb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x459e);
        EXPECT(gbc.pc(), 0xa5fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5fb), 0xcb);
        EXPECT(gbc.readMem(0xa5fc), 0x38);
        // CB 38 0041
        gbc.setState(0x610d, 0x494c, 0xbe60, 0xd707, 0x4235, 0x11a2, 0x0, 0x1);
        gbc.writeMem(0x610d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x494c);
        EXPECT(gbc.pc(), 0x610f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0042
        gbc.setState(0x4a02, 0xb367, 0x8090, 0xa99c, 0x62b4, 0x89f8, 0x0, 0x1);
        gbc.writeMem(0x4a02, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb367);
        EXPECT(gbc.pc(), 0x4a04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0043
        gbc.setState(0x9eba, 0xa9c, 0x94d0, 0x941e, 0x87ff, 0xc752, 0x1, 0x0);
        gbc.writeMem(0x9eba, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa9c);
        EXPECT(gbc.pc(), 0x9ebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eba), 0xcb);
        EXPECT(gbc.readMem(0x9ebb), 0x38);
        // CB 38 0044
        gbc.setState(0x990b, 0xf53f, 0xfd20, 0xe73c, 0x743a, 0x1b3, 0x0, 0x0);
        gbc.writeMem(0x990b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf53f);
        EXPECT(gbc.pc(), 0x990d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x990b), 0xcb);
        EXPECT(gbc.readMem(0x990c), 0x38);
        // CB 38 0046
        gbc.setState(0x566, 0x82bb, 0xb090, 0x83b9, 0x2149, 0xb972, 0x0, 0x1);
        gbc.writeMem(0x566, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x82bb);
        EXPECT(gbc.pc(), 0x568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0047
        gbc.setState(0xa93, 0xfda5, 0xef20, 0x9035, 0x2117, 0xef0e, 0x0, 0x1);
        gbc.writeMem(0xa93, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xfda5);
        EXPECT(gbc.pc(), 0xa95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0048
        gbc.setState(0xce2, 0x98b9, 0x8bd0, 0x6c4e, 0xd06f, 0x3ef9, 0x0, 0x0);
        gbc.writeMem(0xce2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x98b9);
        EXPECT(gbc.pc(), 0xce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0049
        gbc.setState(0x1c0, 0x109d, 0xdae0, 0x3a6d, 0xc107, 0xa2cc, 0x1, 0x1);
        gbc.writeMem(0x1c0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x109d);
        EXPECT(gbc.pc(), 0x1c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 004A
        gbc.setState(0x3300, 0x7c5a, 0x9d0, 0x87f9, 0x443a, 0xec00, 0x0, 0x0);
        gbc.writeMem(0x3300, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7c5a);
        EXPECT(gbc.pc(), 0x3302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 004B
        gbc.setState(0xb0c3, 0xeb06, 0xb7d0, 0x3dee, 0x55f1, 0xbc8e, 0x0, 0x1);
        gbc.writeMem(0xb0c3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xeb06);
        EXPECT(gbc.pc(), 0xb0c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0c3), 0xcb);
        EXPECT(gbc.readMem(0xb0c4), 0x38);
        // CB 38 004C
        gbc.setState(0xb679, 0x4a9d, 0x1a40, 0x64b0, 0x3a48, 0x7da4, 0x0, 0x1);
        gbc.writeMem(0xb679, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4a9d);
        EXPECT(gbc.pc(), 0xb67b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb679), 0xcb);
        EXPECT(gbc.readMem(0xb67a), 0x38);
        // CB 38 004E
        gbc.setState(0x9c53, 0x1dd8, 0xc50, 0xb7e8, 0x72fa, 0x782d, 0x0, 0x1);
        gbc.writeMem(0x9c53, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1dd8);
        EXPECT(gbc.pc(), 0x9c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c53), 0xcb);
        EXPECT(gbc.readMem(0x9c54), 0x38);
        // CB 38 004F
        gbc.setState(0xa7f5, 0x7581, 0xc390, 0x5b1e, 0xf12b, 0x41da, 0x1, 0x1);
        gbc.writeMem(0xa7f5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7581);
        EXPECT(gbc.pc(), 0xa7f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f5), 0xcb);
        EXPECT(gbc.readMem(0xa7f6), 0x38);
        // CB 38 0050
        gbc.setState(0x9a92, 0xcae8, 0xa7d0, 0xd005, 0xec2d, 0x56a7, 0x0, 0x0);
        gbc.writeMem(0x9a92, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcae8);
        EXPECT(gbc.pc(), 0x9a94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a92), 0xcb);
        EXPECT(gbc.readMem(0x9a93), 0x38);
        // CB 38 0051
        gbc.setState(0x3bc7, 0x210c, 0x64e0, 0xe153, 0x6774, 0x444f, 0x1, 0x1);
        gbc.writeMem(0x3bc7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x210c);
        EXPECT(gbc.pc(), 0x3bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0052
        gbc.setState(0x2047, 0x33c6, 0x3e10, 0x3c5b, 0x6e77, 0x65fd, 0x0, 0x1);
        gbc.writeMem(0x2047, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x33c6);
        EXPECT(gbc.pc(), 0x2049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0053
        gbc.setState(0x9f15, 0x4c58, 0x4570, 0xf9c2, 0x3c70, 0x6fd2, 0x0, 0x1);
        gbc.writeMem(0x9f15, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4c58);
        EXPECT(gbc.pc(), 0x9f17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f15), 0xcb);
        EXPECT(gbc.readMem(0x9f16), 0x38);
        // CB 38 0054
        gbc.setState(0x2676, 0xa3ec, 0x8bf0, 0x3b30, 0xdb6f, 0xc8b0, 0x1, 0x0);
        gbc.writeMem(0x2676, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa3ec);
        EXPECT(gbc.pc(), 0x2678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0055
        gbc.setState(0x62e5, 0x4dad, 0x55a0, 0xf061, 0xb37a, 0x8ec4, 0x0, 0x1);
        gbc.writeMem(0x62e5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4dad);
        EXPECT(gbc.pc(), 0x62e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0056
        gbc.setState(0x85c4, 0xcb16, 0xf660, 0xe589, 0x4cc, 0x952c, 0x1, 0x1);
        gbc.writeMem(0x85c4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xcb16);
        EXPECT(gbc.pc(), 0x85c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85c4), 0xcb);
        EXPECT(gbc.readMem(0x85c5), 0x38);
        // CB 38 0057
        gbc.setState(0x9dae, 0x3a63, 0x1810, 0x6d0e, 0x3f58, 0x610e, 0x0, 0x1);
        gbc.writeMem(0x9dae, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3a63);
        EXPECT(gbc.pc(), 0x9db0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dae), 0xcb);
        EXPECT(gbc.readMem(0x9daf), 0x38);
        // CB 38 0058
        gbc.setState(0x7749, 0x6cd4, 0xecf0, 0x8a02, 0x1f0c, 0x66d2, 0x0, 0x0);
        gbc.writeMem(0x7749, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6cd4);
        EXPECT(gbc.pc(), 0x774b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0059
        gbc.setState(0x100a, 0x17d8, 0xfb60, 0x36a4, 0x615f, 0xadd0, 0x1, 0x0);
        gbc.writeMem(0x100a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x17d8);
        EXPECT(gbc.pc(), 0x100c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 005A
        gbc.setState(0x559c, 0x14ca, 0x2350, 0x2e5f, 0x3f47, 0x6958, 0x1, 0x0);
        gbc.writeMem(0x559c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x14ca);
        EXPECT(gbc.pc(), 0x559e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 005C
        gbc.setState(0x1035, 0x456a, 0x57e0, 0xa2b7, 0xd72b, 0xf8b0, 0x1, 0x0);
        gbc.writeMem(0x1035, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x456a);
        EXPECT(gbc.pc(), 0x1037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 005D
        gbc.setState(0x2814, 0x69, 0x8770, 0x6d9, 0xae35, 0x17a6, 0x0, 0x1);
        gbc.writeMem(0x2814, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x69);
        EXPECT(gbc.pc(), 0x2816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 005E
        gbc.setState(0x2fb6, 0x6ef0, 0xe840, 0xe7f2, 0x2da1, 0x3610, 0x0, 0x0);
        gbc.writeMem(0x2fb6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6ef0);
        EXPECT(gbc.pc(), 0x2fb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 005F
        gbc.setState(0x2fb, 0x9bac, 0x3470, 0x5581, 0xe721, 0x475f, 0x1, 0x0);
        gbc.writeMem(0x2fb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9bac);
        EXPECT(gbc.pc(), 0x2fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0060
        gbc.setState(0x2857, 0xc70a, 0x1f40, 0x5e36, 0x66c, 0xd095, 0x1, 0x0);
        gbc.writeMem(0x2857, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc70a);
        EXPECT(gbc.pc(), 0x2859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0061
        gbc.setState(0x9e87, 0x7dd9, 0xeda0, 0xe2e3, 0x6fb5, 0xca16, 0x1, 0x0);
        gbc.writeMem(0x9e87, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7dd9);
        EXPECT(gbc.pc(), 0x9e89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e87), 0xcb);
        EXPECT(gbc.readMem(0x9e88), 0x38);
        // CB 38 0062
        gbc.setState(0x469c, 0xa5f9, 0x7df0, 0x261a, 0x5be7, 0xd78a, 0x1, 0x0);
        gbc.writeMem(0x469c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa5f9);
        EXPECT(gbc.pc(), 0x469e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0063
        gbc.setState(0x6afa, 0x9649, 0x3550, 0x1295, 0x4fcc, 0xdf27, 0x0, 0x0);
        gbc.writeMem(0x6afa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9649);
        EXPECT(gbc.pc(), 0x6afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0064
        gbc.setState(0x58b3, 0xdd84, 0x32e0, 0x51b4, 0xd18, 0xe527, 0x0, 0x0);
        gbc.writeMem(0x58b3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xdd84);
        EXPECT(gbc.pc(), 0x58b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0065
        gbc.setState(0xcf3e, 0x6f93, 0x94e0, 0x2a7e, 0xa2a0, 0x3986, 0x0, 0x0);
        gbc.writeMem(0xcf3e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6f93);
        EXPECT(gbc.pc(), 0xcf40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf3e), 0xcb);
        EXPECT(gbc.readMem(0xcf3f), 0x38);
        // CB 38 0066
        gbc.setState(0x4328, 0xfebb, 0x9440, 0xd1f5, 0x2ca9, 0x5d0c, 0x0, 0x0);
        gbc.writeMem(0x4328, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfebb);
        EXPECT(gbc.pc(), 0x432a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0067
        gbc.setState(0x18c2, 0x4edd, 0xcaa0, 0x1022, 0xf568, 0xed27, 0x1, 0x1);
        gbc.writeMem(0x18c2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4edd);
        EXPECT(gbc.pc(), 0x18c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0068
        gbc.setState(0x27e5, 0xc0ac, 0xc750, 0xa285, 0x8934, 0x10bf, 0x1, 0x0);
        gbc.writeMem(0x27e5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc0ac);
        EXPECT(gbc.pc(), 0x27e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0069
        gbc.setState(0x4a4e, 0x7c60, 0xb050, 0x578, 0xf060, 0x3d33, 0x0, 0x0);
        gbc.writeMem(0x4a4e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7c60);
        EXPECT(gbc.pc(), 0x4a50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 006A
        gbc.setState(0x951f, 0xe4b6, 0x3bc0, 0x30f7, 0x730e, 0x3881, 0x1, 0x0);
        gbc.writeMem(0x951f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe4b6);
        EXPECT(gbc.pc(), 0x9521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x951f), 0xcb);
        EXPECT(gbc.readMem(0x9520), 0x38);
        // CB 38 006B
        gbc.setState(0x5ec7, 0xb791, 0x8580, 0xb53f, 0x9514, 0x56e4, 0x0, 0x1);
        gbc.writeMem(0x5ec7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb791);
        EXPECT(gbc.pc(), 0x5ec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 006C
        gbc.setState(0x858e, 0xdb11, 0xb6e0, 0x32e6, 0x5720, 0x310e, 0x1, 0x0);
        gbc.writeMem(0x858e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xdb11);
        EXPECT(gbc.pc(), 0x8590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x858e), 0xcb);
        EXPECT(gbc.readMem(0x858f), 0x38);
        // CB 38 006D
        gbc.setState(0x5cde, 0x7882, 0x58d0, 0x7bd8, 0x9b6, 0xb677, 0x0, 0x1);
        gbc.writeMem(0x5cde, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7882);
        EXPECT(gbc.pc(), 0x5ce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 006E
        gbc.setState(0x50df, 0x941d, 0x8580, 0xf7d3, 0x59e0, 0x38f3, 0x0, 0x1);
        gbc.writeMem(0x50df, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x941d);
        EXPECT(gbc.pc(), 0x50e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 006F
        gbc.setState(0x53af, 0x20bc, 0xbf10, 0xd692, 0x4c61, 0xf0a8, 0x1, 0x0);
        gbc.writeMem(0x53af, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x20bc);
        EXPECT(gbc.pc(), 0x53b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0070
        gbc.setState(0xe7f0, 0xde2e, 0xfec0, 0x5b6, 0xe332, 0xe0, 0x0, 0x1);
        gbc.writeMem(0xe7f0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xde2e);
        EXPECT(gbc.pc(), 0xe7f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7f0), 0xcb);
        EXPECT(gbc.readMem(0xe7f1), 0x38);
        // CB 38 0071
        gbc.setState(0xdd7f, 0xe0b7, 0x8810, 0x2cd2, 0xa42, 0xc50b, 0x0, 0x0);
        gbc.writeMem(0xdd7f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe0b7);
        EXPECT(gbc.pc(), 0xdd81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd7f), 0xcb);
        EXPECT(gbc.readMem(0xdd80), 0x38);
        // CB 38 0072
        gbc.setState(0xed8b, 0xd833, 0x1dc0, 0xfedb, 0xaca8, 0x97ae, 0x0, 0x0);
        gbc.writeMem(0xed8b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd833);
        EXPECT(gbc.pc(), 0xed8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed8b), 0xcb);
        EXPECT(gbc.readMem(0xed8c), 0x38);
        // CB 38 0073
        gbc.setState(0x87da, 0x98c, 0x3350, 0x7c26, 0x61d8, 0x94d0, 0x1, 0x1);
        gbc.writeMem(0x87da, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x98c);
        EXPECT(gbc.pc(), 0x87dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87da), 0xcb);
        EXPECT(gbc.readMem(0x87db), 0x38);
        // CB 38 0074
        gbc.setState(0xba39, 0x1876, 0xb9a0, 0x120d, 0xe2e7, 0x9706, 0x0, 0x0);
        gbc.writeMem(0xba39, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1876);
        EXPECT(gbc.pc(), 0xba3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba39), 0xcb);
        EXPECT(gbc.readMem(0xba3a), 0x38);
        // CB 38 0076
        gbc.setState(0xd1f5, 0xfc56, 0xc9e0, 0x9e99, 0xcf97, 0x37be, 0x0, 0x0);
        gbc.writeMem(0xd1f5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xfc56);
        EXPECT(gbc.pc(), 0xd1f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f5), 0xcb);
        EXPECT(gbc.readMem(0xd1f6), 0x38);
        // CB 38 0077
        gbc.setState(0xb339, 0x22a, 0x4d60, 0xb128, 0xa754, 0x900d, 0x0, 0x1);
        gbc.writeMem(0xb339, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x22a);
        EXPECT(gbc.pc(), 0xb33b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb339), 0xcb);
        EXPECT(gbc.readMem(0xb33a), 0x38);
        // CB 38 0078
        gbc.setState(0x73b9, 0x3109, 0xd640, 0x2271, 0xe5d1, 0x63f3, 0x1, 0x0);
        gbc.writeMem(0x73b9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3109);
        EXPECT(gbc.pc(), 0x73bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0079
        gbc.setState(0xa54b, 0x42e8, 0xa570, 0xdf01, 0xb37e, 0x4a33, 0x1, 0x0);
        gbc.writeMem(0xa54b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x42e8);
        EXPECT(gbc.pc(), 0xa54d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa54b), 0xcb);
        EXPECT(gbc.readMem(0xa54c), 0x38);
        // CB 38 007A
        gbc.setState(0xd4f6, 0xceb6, 0x4e00, 0x6138, 0xa3c0, 0xcb20, 0x1, 0x0);
        gbc.writeMem(0xd4f6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xceb6);
        EXPECT(gbc.pc(), 0xd4f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f6), 0xcb);
        EXPECT(gbc.readMem(0xd4f7), 0x38);
        // CB 38 007B
        gbc.setState(0x6d6f, 0x903, 0x71a0, 0xc94c, 0x5b68, 0xa6fe, 0x0, 0x1);
        gbc.writeMem(0x6d6f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x903);
        EXPECT(gbc.pc(), 0x6d71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 007C
        gbc.setState(0xcc09, 0x4e19, 0x7270, 0xd1bd, 0x94ac, 0xb9c0, 0x1, 0x1);
        gbc.writeMem(0xcc09, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4e19);
        EXPECT(gbc.pc(), 0xcc0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc09), 0xcb);
        EXPECT(gbc.readMem(0xcc0a), 0x38);
        // CB 38 007D
        gbc.setState(0x9de5, 0x886f, 0x6cd0, 0x6b78, 0x9f6d, 0xfdb0, 0x1, 0x0);
        gbc.writeMem(0x9de5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x886f);
        EXPECT(gbc.pc(), 0x9de7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de5), 0xcb);
        EXPECT(gbc.readMem(0x9de6), 0x38);
        // CB 38 007E
        gbc.setState(0xbf13, 0xdf91, 0x4590, 0xd990, 0xb261, 0xf9e4, 0x1, 0x0);
        gbc.writeMem(0xbf13, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xdf91);
        EXPECT(gbc.pc(), 0xbf15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf13), 0xcb);
        EXPECT(gbc.readMem(0xbf14), 0x38);
        // CB 38 0080
        gbc.setState(0x9efc, 0x6711, 0xff10, 0x986, 0x8ca, 0x6114, 0x1, 0x0);
        gbc.writeMem(0x9efc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6711);
        EXPECT(gbc.pc(), 0x9efe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9efc), 0xcb);
        EXPECT(gbc.readMem(0x9efd), 0x38);
        // CB 38 0081
        gbc.setState(0x3330, 0x461d, 0xe680, 0xbe79, 0x8010, 0x14e2, 0x0, 0x1);
        gbc.writeMem(0x3330, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x461d);
        EXPECT(gbc.pc(), 0x3332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0082
        gbc.setState(0xbbbc, 0xe68b, 0xcb30, 0x403b, 0x648, 0x4fb6, 0x0, 0x0);
        gbc.writeMem(0xbbbc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe68b);
        EXPECT(gbc.pc(), 0xbbbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbbc), 0xcb);
        EXPECT(gbc.readMem(0xbbbd), 0x38);
        // CB 38 0083
        gbc.setState(0x452, 0x2e55, 0x6650, 0x9e8, 0xb1be, 0x6d0c, 0x1, 0x0);
        gbc.writeMem(0x452, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2e55);
        EXPECT(gbc.pc(), 0x454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0084
        gbc.setState(0xec0b, 0x6191, 0x8400, 0xa29d, 0xc92a, 0xc812, 0x1, 0x0);
        gbc.writeMem(0xec0b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6191);
        EXPECT(gbc.pc(), 0xec0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec0b), 0xcb);
        EXPECT(gbc.readMem(0xec0c), 0x38);
        // CB 38 0085
        gbc.setState(0x83e2, 0xbca7, 0x4eb0, 0x4179, 0x6034, 0x3280, 0x0, 0x0);
        gbc.writeMem(0x83e2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbca7);
        EXPECT(gbc.pc(), 0x83e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e2), 0xcb);
        EXPECT(gbc.readMem(0x83e3), 0x38);
        // CB 38 0086
        gbc.setState(0xd0dd, 0x970e, 0x7240, 0x5f1a, 0xc36a, 0xc9a, 0x0, 0x1);
        gbc.writeMem(0xd0dd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x970e);
        EXPECT(gbc.pc(), 0xd0df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0dd), 0xcb);
        EXPECT(gbc.readMem(0xd0de), 0x38);
        // CB 38 0087
        gbc.setState(0x4c3f, 0xe18a, 0x4c60, 0xc879, 0xf361, 0x9b12, 0x0, 0x0);
        gbc.writeMem(0x4c3f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe18a);
        EXPECT(gbc.pc(), 0x4c41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0088
        gbc.setState(0x804f, 0xce98, 0xeb70, 0xa0a6, 0x7c3, 0xbdab, 0x1, 0x1);
        gbc.writeMem(0x804f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xce98);
        EXPECT(gbc.pc(), 0x8051);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x804f), 0xcb);
        EXPECT(gbc.readMem(0x8050), 0x38);
        // CB 38 0089
        gbc.setState(0x10a9, 0xc419, 0x8c10, 0xd61d, 0x1ad4, 0xbcd7, 0x1, 0x0);
        gbc.writeMem(0x10a9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc419);
        EXPECT(gbc.pc(), 0x10ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 008A
        gbc.setState(0x9abe, 0xe846, 0x9200, 0xdc00, 0xc39d, 0x45c9, 0x0, 0x0);
        gbc.writeMem(0x9abe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe846);
        EXPECT(gbc.pc(), 0x9ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9abe), 0xcb);
        EXPECT(gbc.readMem(0x9abf), 0x38);
        // CB 38 008B
        gbc.setState(0x52cf, 0xd7f3, 0xdbd0, 0xe771, 0xd711, 0xaf13, 0x0, 0x1);
        gbc.writeMem(0x52cf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd7f3);
        EXPECT(gbc.pc(), 0x52d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 008C
        gbc.setState(0x7f6, 0x82eb, 0xb110, 0xb501, 0xf6db, 0x6d7e, 0x0, 0x1);
        gbc.writeMem(0x7f6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x82eb);
        EXPECT(gbc.pc(), 0x7f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 008D
        gbc.setState(0x3c3c, 0x56b7, 0xd4e0, 0x2c24, 0x949b, 0xc901, 0x0, 0x0);
        gbc.writeMem(0x3c3c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x56b7);
        EXPECT(gbc.pc(), 0x3c3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 008E
        gbc.setState(0x1900, 0xfe0b, 0x7bf0, 0x2f6, 0xec1e, 0xa034, 0x1, 0x0);
        gbc.writeMem(0x1900, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xfe0b);
        EXPECT(gbc.pc(), 0x1902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0090
        gbc.setState(0xaa36, 0xc38a, 0x3bf0, 0x2289, 0x4a5d, 0x9014, 0x1, 0x1);
        gbc.writeMem(0xaa36, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc38a);
        EXPECT(gbc.pc(), 0xaa38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa36), 0xcb);
        EXPECT(gbc.readMem(0xaa37), 0x38);
        // CB 38 0091
        gbc.setState(0x20cd, 0x1ca1, 0x2500, 0xd7bd, 0x8d1, 0xfc41, 0x0, 0x0);
        gbc.writeMem(0x20cd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1ca1);
        EXPECT(gbc.pc(), 0x20cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0092
        gbc.setState(0xde63, 0x5db8, 0x5c20, 0x6584, 0xc9ba, 0xde2b, 0x1, 0x0);
        gbc.writeMem(0xde63, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5db8);
        EXPECT(gbc.pc(), 0xde65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde63), 0xcb);
        EXPECT(gbc.readMem(0xde64), 0x38);
        // CB 38 0093
        gbc.setState(0x64a7, 0x13c3, 0x1670, 0xfc4f, 0x3c7f, 0x762d, 0x1, 0x0);
        gbc.writeMem(0x64a7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x13c3);
        EXPECT(gbc.pc(), 0x64a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0094
        gbc.setState(0x2b5e, 0x1d62, 0x84a0, 0x6713, 0xe207, 0x2e09, 0x1, 0x1);
        gbc.writeMem(0x2b5e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1d62);
        EXPECT(gbc.pc(), 0x2b60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0095
        gbc.setState(0x5325, 0xca4, 0xb300, 0xaa70, 0x7217, 0xd3c2, 0x1, 0x0);
        gbc.writeMem(0x5325, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xca4);
        EXPECT(gbc.pc(), 0x5327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0096
        gbc.setState(0x2180, 0xeaa9, 0x4330, 0xeffc, 0x3511, 0x5f0b, 0x1, 0x0);
        gbc.writeMem(0x2180, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xeaa9);
        EXPECT(gbc.pc(), 0x2182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0097
        gbc.setState(0x8da4, 0xc85a, 0x7c20, 0x9df0, 0x5683, 0xb1a8, 0x1, 0x0);
        gbc.writeMem(0x8da4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc85a);
        EXPECT(gbc.pc(), 0x8da6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da4), 0xcb);
        EXPECT(gbc.readMem(0x8da5), 0x38);
        // CB 38 0098
        gbc.setState(0xd04c, 0xac81, 0xa380, 0xe317, 0x96f2, 0x2ba7, 0x0, 0x0);
        gbc.writeMem(0xd04c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xac81);
        EXPECT(gbc.pc(), 0xd04e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd04c), 0xcb);
        EXPECT(gbc.readMem(0xd04d), 0x38);
        // CB 38 0099
        gbc.setState(0xda06, 0xfcf7, 0xb100, 0xe683, 0x6daa, 0xc94c, 0x1, 0x0);
        gbc.writeMem(0xda06, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfcf7);
        EXPECT(gbc.pc(), 0xda08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda06), 0xcb);
        EXPECT(gbc.readMem(0xda07), 0x38);
        // CB 38 009A
        gbc.setState(0xccbf, 0x7dea, 0x9c0, 0x1329, 0x24e9, 0x39b9, 0x1, 0x0);
        gbc.writeMem(0xccbf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7dea);
        EXPECT(gbc.pc(), 0xccc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccbf), 0xcb);
        EXPECT(gbc.readMem(0xccc0), 0x38);
        // CB 38 009B
        gbc.setState(0xc88d, 0x3388, 0x3a20, 0xf8e2, 0x270f, 0xf3a9, 0x1, 0x0);
        gbc.writeMem(0xc88d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3388);
        EXPECT(gbc.pc(), 0xc88f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc88d), 0xcb);
        EXPECT(gbc.readMem(0xc88e), 0x38);
        // CB 38 009C
        gbc.setState(0x8633, 0xb05e, 0xdae0, 0x915, 0xfe43, 0x7f87, 0x0, 0x0);
        gbc.writeMem(0x8633, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb05e);
        EXPECT(gbc.pc(), 0x8635);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8633), 0xcb);
        EXPECT(gbc.readMem(0x8634), 0x38);
        // CB 38 009D
        gbc.setState(0x7c, 0x738e, 0xcea0, 0x2014, 0x1961, 0x2708, 0x0, 0x1);
        gbc.writeMem(0x7c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x738e);
        EXPECT(gbc.pc(), 0x7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 009E
        gbc.setState(0x4ea2, 0xea7f, 0x8960, 0x800f, 0x7c6b, 0xfee7, 0x1, 0x1);
        gbc.writeMem(0x4ea2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xea7f);
        EXPECT(gbc.pc(), 0x4ea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 009F
        gbc.setState(0xeaeb, 0xd7f1, 0xf790, 0x7083, 0xd4f4, 0xa965, 0x0, 0x1);
        gbc.writeMem(0xeaeb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd7f1);
        EXPECT(gbc.pc(), 0xeaed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaeb), 0xcb);
        EXPECT(gbc.readMem(0xeaec), 0x38);
        // CB 38 00A0
        gbc.setState(0xef69, 0x927d, 0x81e0, 0x5599, 0xf5d, 0x954c, 0x0, 0x0);
        gbc.writeMem(0xef69, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x927d);
        EXPECT(gbc.pc(), 0xef6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef69), 0xcb);
        EXPECT(gbc.readMem(0xef6a), 0x38);
        // CB 38 00A1
        gbc.setState(0xa00d, 0xe18b, 0xb9c0, 0x92b6, 0xf84, 0xad7e, 0x0, 0x1);
        gbc.writeMem(0xa00d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe18b);
        EXPECT(gbc.pc(), 0xa00f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa00d), 0xcb);
        EXPECT(gbc.readMem(0xa00e), 0x38);
        // CB 38 00A2
        gbc.setState(0x14a7, 0xfc47, 0x6d60, 0x1024, 0x710e, 0x5c82, 0x0, 0x1);
        gbc.writeMem(0x14a7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfc47);
        EXPECT(gbc.pc(), 0x14a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00A3
        gbc.setState(0x31aa, 0x37ac, 0xb2f0, 0xec0c, 0x1335, 0x16ef, 0x0, 0x0);
        gbc.writeMem(0x31aa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x37ac);
        EXPECT(gbc.pc(), 0x31ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00A4
        gbc.setState(0x9bf3, 0x9f8, 0xe870, 0x36e2, 0x2044, 0x701d, 0x0, 0x1);
        gbc.writeMem(0x9bf3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9f8);
        EXPECT(gbc.pc(), 0x9bf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf3), 0xcb);
        EXPECT(gbc.readMem(0x9bf4), 0x38);
        // CB 38 00A5
        gbc.setState(0xdab8, 0x160a, 0xc1c0, 0x4926, 0xea75, 0xf590, 0x0, 0x0);
        gbc.writeMem(0xdab8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x160a);
        EXPECT(gbc.pc(), 0xdaba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdab8), 0xcb);
        EXPECT(gbc.readMem(0xdab9), 0x38);
        // CB 38 00A6
        gbc.setState(0x7182, 0xac44, 0x59f0, 0x3d42, 0x3e4c, 0x283c, 0x0, 0x0);
        gbc.writeMem(0x7182, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xac44);
        EXPECT(gbc.pc(), 0x7184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00A7
        gbc.setState(0xa952, 0xc0b1, 0xf030, 0x701a, 0x197d, 0x199f, 0x0, 0x1);
        gbc.writeMem(0xa952, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc0b1);
        EXPECT(gbc.pc(), 0xa954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa952), 0xcb);
        EXPECT(gbc.readMem(0xa953), 0x38);
        // CB 38 00A9
        gbc.setState(0xcd4a, 0x8665, 0x23f0, 0x172f, 0x7493, 0x7a40, 0x1, 0x0);
        gbc.writeMem(0xcd4a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8665);
        EXPECT(gbc.pc(), 0xcd4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd4a), 0xcb);
        EXPECT(gbc.readMem(0xcd4b), 0x38);
        // CB 38 00AA
        gbc.setState(0xbd10, 0x1c75, 0x64d0, 0xc320, 0x3a54, 0xa9d7, 0x0, 0x0);
        gbc.writeMem(0xbd10, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1c75);
        EXPECT(gbc.pc(), 0xbd12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd10), 0xcb);
        EXPECT(gbc.readMem(0xbd11), 0x38);
        // CB 38 00AB
        gbc.setState(0xd5b9, 0xf8f7, 0x2400, 0x3735, 0x6cc0, 0xfb5e, 0x1, 0x1);
        gbc.writeMem(0xd5b9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf8f7);
        EXPECT(gbc.pc(), 0xd5bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b9), 0xcb);
        EXPECT(gbc.readMem(0xd5ba), 0x38);
        // CB 38 00AC
        gbc.setState(0x6d77, 0x22f8, 0x3a70, 0xf158, 0x8f59, 0xa09e, 0x1, 0x1);
        gbc.writeMem(0x6d77, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x22f8);
        EXPECT(gbc.pc(), 0x6d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00AD
        gbc.setState(0x188b, 0x9238, 0x4b40, 0xa96d, 0x9e8, 0x501f, 0x0, 0x1);
        gbc.writeMem(0x188b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9238);
        EXPECT(gbc.pc(), 0x188d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00AE
        gbc.setState(0x175d, 0x322, 0x26b0, 0x39e6, 0xca19, 0x4d, 0x1, 0x0);
        gbc.writeMem(0x175d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x322);
        EXPECT(gbc.pc(), 0x175f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00AF
        gbc.setState(0xae88, 0x9478, 0x50e0, 0xd51b, 0x154b, 0x5cf0, 0x0, 0x1);
        gbc.writeMem(0xae88, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9478);
        EXPECT(gbc.pc(), 0xae8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae88), 0xcb);
        EXPECT(gbc.readMem(0xae89), 0x38);
        // CB 38 00B0
        gbc.setState(0xcc24, 0xfcb7, 0xd860, 0xbc10, 0x807a, 0x6e67, 0x1, 0x0);
        gbc.writeMem(0xcc24, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfcb7);
        EXPECT(gbc.pc(), 0xcc26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc24), 0xcb);
        EXPECT(gbc.readMem(0xcc25), 0x38);
        // CB 38 00B1
        gbc.setState(0x4e5c, 0x51b6, 0x6ac0, 0xbb2b, 0x2aac, 0x2de3, 0x1, 0x1);
        gbc.writeMem(0x4e5c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x51b6);
        EXPECT(gbc.pc(), 0x4e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00B2
        gbc.setState(0xd83c, 0x24f8, 0xe400, 0x8092, 0xa8d0, 0x5d73, 0x1, 0x1);
        gbc.writeMem(0xd83c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x24f8);
        EXPECT(gbc.pc(), 0xd83e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd83c), 0xcb);
        EXPECT(gbc.readMem(0xd83d), 0x38);
        // CB 38 00B3
        gbc.setState(0x4b8d, 0xb114, 0x7e20, 0xafca, 0x71ca, 0xc440, 0x1, 0x0);
        gbc.writeMem(0x4b8d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb114);
        EXPECT(gbc.pc(), 0x4b8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00B4
        gbc.setState(0x271f, 0x5278, 0xc190, 0x4961, 0x36fd, 0xc001, 0x0, 0x1);
        gbc.writeMem(0x271f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5278);
        EXPECT(gbc.pc(), 0x2721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00B5
        gbc.setState(0xef7b, 0x8193, 0xc3c0, 0x2a32, 0x982d, 0x68dd, 0x1, 0x1);
        gbc.writeMem(0xef7b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8193);
        EXPECT(gbc.pc(), 0xef7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef7b), 0xcb);
        EXPECT(gbc.readMem(0xef7c), 0x38);
        // CB 38 00B6
        gbc.setState(0x183b, 0xaf6b, 0x1d20, 0x8559, 0x97b6, 0xdc4e, 0x0, 0x1);
        gbc.writeMem(0x183b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xaf6b);
        EXPECT(gbc.pc(), 0x183d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00B7
        gbc.setState(0x52cc, 0x552c, 0xfcb0, 0x3273, 0x8ddd, 0x1075, 0x1, 0x0);
        gbc.writeMem(0x52cc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x552c);
        EXPECT(gbc.pc(), 0x52ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00B8
        gbc.setState(0x5ba2, 0x9337, 0xeac0, 0x1748, 0xaa0f, 0xfdf4, 0x1, 0x1);
        gbc.writeMem(0x5ba2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9337);
        EXPECT(gbc.pc(), 0x5ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00B9
        gbc.setState(0x97de, 0xb26d, 0x3650, 0x4556, 0xfa69, 0xe276, 0x1, 0x0);
        gbc.writeMem(0x97de, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb26d);
        EXPECT(gbc.pc(), 0x97e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97de), 0xcb);
        EXPECT(gbc.readMem(0x97df), 0x38);
        // CB 38 00BA
        gbc.setState(0xc41a, 0x15c8, 0x9f90, 0xf44b, 0xfd9c, 0xa85b, 0x0, 0x1);
        gbc.writeMem(0xc41a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x15c8);
        EXPECT(gbc.pc(), 0xc41c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc41a), 0xcb);
        EXPECT(gbc.readMem(0xc41b), 0x38);
        // CB 38 00BB
        gbc.setState(0xebe6, 0x7da3, 0xf1f0, 0xb22a, 0x43f1, 0x1ead, 0x0, 0x1);
        gbc.writeMem(0xebe6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7da3);
        EXPECT(gbc.pc(), 0xebe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebe6), 0xcb);
        EXPECT(gbc.readMem(0xebe7), 0x38);
        // CB 38 00BC
        gbc.setState(0x510a, 0x5c16, 0xf1d0, 0x7c48, 0x8585, 0x610e, 0x0, 0x0);
        gbc.writeMem(0x510a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5c16);
        EXPECT(gbc.pc(), 0x510c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00BE
        gbc.setState(0xbd78, 0xf2b0, 0xdeb0, 0xbb0e, 0x9d50, 0xe820, 0x1, 0x0);
        gbc.writeMem(0xbd78, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf2b0);
        EXPECT(gbc.pc(), 0xbd7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd78), 0xcb);
        EXPECT(gbc.readMem(0xbd79), 0x38);
        // CB 38 00BF
        gbc.setState(0x2a8e, 0xad9c, 0x1380, 0xad0f, 0x690e, 0x287, 0x1, 0x1);
        gbc.writeMem(0x2a8e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xad9c);
        EXPECT(gbc.pc(), 0x2a90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00C1
        gbc.setState(0xa7aa, 0x8758, 0xfc90, 0x770d, 0x7cc8, 0x79a3, 0x0, 0x1);
        gbc.writeMem(0xa7aa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8758);
        EXPECT(gbc.pc(), 0xa7ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7aa), 0xcb);
        EXPECT(gbc.readMem(0xa7ab), 0x38);
        // CB 38 00C2
        gbc.setState(0x4658, 0xcd8c, 0xe6a0, 0xea0f, 0xe64e, 0x49f5, 0x1, 0x0);
        gbc.writeMem(0x4658, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xcd8c);
        EXPECT(gbc.pc(), 0x465a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00C3
        gbc.setState(0xd1c1, 0x3d53, 0x5a90, 0xb0c8, 0x44bc, 0x9180, 0x0, 0x1);
        gbc.writeMem(0xd1c1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3d53);
        EXPECT(gbc.pc(), 0xd1c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1c1), 0xcb);
        EXPECT(gbc.readMem(0xd1c2), 0x38);
        // CB 38 00C4
        gbc.setState(0x26f9, 0x591b, 0xe920, 0x81d2, 0x5e4b, 0x1201, 0x0, 0x1);
        gbc.writeMem(0x26f9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x591b);
        EXPECT(gbc.pc(), 0x26fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00C5
        gbc.setState(0x39ca, 0x8c64, 0xfe0, 0xbca3, 0xc954, 0xa503, 0x0, 0x1);
        gbc.writeMem(0x39ca, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8c64);
        EXPECT(gbc.pc(), 0x39cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00C6
        gbc.setState(0xb4f5, 0x4398, 0x9d20, 0x2207, 0xb3ba, 0xc5ba, 0x1, 0x1);
        gbc.writeMem(0xb4f5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4398);
        EXPECT(gbc.pc(), 0xb4f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f5), 0xcb);
        EXPECT(gbc.readMem(0xb4f6), 0x38);
        // CB 38 00C7
        gbc.setState(0xef44, 0x4b3e, 0xf560, 0x9fb, 0x7487, 0xfb3, 0x0, 0x0);
        gbc.writeMem(0xef44, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4b3e);
        EXPECT(gbc.pc(), 0xef46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef44), 0xcb);
        EXPECT(gbc.readMem(0xef45), 0x38);
        // CB 38 00C8
        gbc.setState(0x1082, 0xe79b, 0x85d0, 0xdbe, 0x71cc, 0x97e6, 0x0, 0x1);
        gbc.writeMem(0x1082, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe79b);
        EXPECT(gbc.pc(), 0x1084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00C9
        gbc.setState(0xc3e3, 0x836d, 0xd3f0, 0x7c04, 0xeb15, 0x9376, 0x0, 0x0);
        gbc.writeMem(0xc3e3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x836d);
        EXPECT(gbc.pc(), 0xc3e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e3), 0xcb);
        EXPECT(gbc.readMem(0xc3e4), 0x38);
        // CB 38 00CA
        gbc.setState(0x5636, 0x295d, 0xfd30, 0x998, 0x705b, 0x334c, 0x1, 0x1);
        gbc.writeMem(0x5636, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x295d);
        EXPECT(gbc.pc(), 0x5638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00CB
        gbc.setState(0x8ea8, 0x4e5e, 0x6e60, 0xa844, 0x8680, 0xb5b9, 0x0, 0x0);
        gbc.writeMem(0x8ea8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4e5e);
        EXPECT(gbc.pc(), 0x8eaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea8), 0xcb);
        EXPECT(gbc.readMem(0x8ea9), 0x38);
        // CB 38 00CC
        gbc.setState(0xfa3, 0xf108, 0x7950, 0x73c, 0x9fd2, 0xa130, 0x1, 0x1);
        gbc.writeMem(0xfa3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf108);
        EXPECT(gbc.pc(), 0xfa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00CD
        gbc.setState(0x2c96, 0x6fae, 0x19a0, 0x158a, 0x3988, 0x2af2, 0x0, 0x1);
        gbc.writeMem(0x2c96, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6fae);
        EXPECT(gbc.pc(), 0x2c98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00CE
        gbc.setState(0x39dc, 0x5d61, 0x9670, 0xe7e3, 0x7e7, 0xf007, 0x1, 0x0);
        gbc.writeMem(0x39dc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5d61);
        EXPECT(gbc.pc(), 0x39de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00CF
        gbc.setState(0x2a98, 0x80ef, 0xa3f0, 0x3ba2, 0x97e1, 0x2b3c, 0x1, 0x0);
        gbc.writeMem(0x2a98, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x80ef);
        EXPECT(gbc.pc(), 0x2a9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00D0
        gbc.setState(0xe28e, 0xdd9f, 0xd7b0, 0x1f43, 0x176d, 0xe06b, 0x0, 0x1);
        gbc.writeMem(0xe28e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xdd9f);
        EXPECT(gbc.pc(), 0xe290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe28e), 0xcb);
        EXPECT(gbc.readMem(0xe28f), 0x38);
        // CB 38 00D1
        gbc.setState(0x162f, 0xde26, 0xd1b0, 0xc7e5, 0xed2c, 0xeee5, 0x1, 0x1);
        gbc.writeMem(0x162f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xde26);
        EXPECT(gbc.pc(), 0x1631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00D3
        gbc.setState(0x35c1, 0xfa17, 0x4870, 0x2bb6, 0x5922, 0xfbab, 0x0, 0x0);
        gbc.writeMem(0x35c1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xfa17);
        EXPECT(gbc.pc(), 0x35c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00D4
        gbc.setState(0x30ea, 0xaf6f, 0x85c0, 0x9d1e, 0x6b6d, 0x924c, 0x1, 0x1);
        gbc.writeMem(0x30ea, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xaf6f);
        EXPECT(gbc.pc(), 0x30ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00D5
        gbc.setState(0x795b, 0x1747, 0x5810, 0xdf8a, 0xf50a, 0x7186, 0x1, 0x0);
        gbc.writeMem(0x795b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1747);
        EXPECT(gbc.pc(), 0x795d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00D6
        gbc.setState(0xb1b2, 0x3218, 0x2400, 0x8d27, 0xca43, 0xe6a6, 0x0, 0x1);
        gbc.writeMem(0xb1b2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3218);
        EXPECT(gbc.pc(), 0xb1b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1b2), 0xcb);
        EXPECT(gbc.readMem(0xb1b3), 0x38);
        // CB 38 00D7
        gbc.setState(0x5a18, 0x3257, 0x8920, 0x63b4, 0xc40d, 0x17ef, 0x0, 0x0);
        gbc.writeMem(0x5a18, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3257);
        EXPECT(gbc.pc(), 0x5a1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00D8
        gbc.setState(0x8bbc, 0xcead, 0x2c90, 0x986e, 0xf10c, 0x54fd, 0x1, 0x0);
        gbc.writeMem(0x8bbc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xcead);
        EXPECT(gbc.pc(), 0x8bbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bbc), 0xcb);
        EXPECT(gbc.readMem(0x8bbd), 0x38);
        // CB 38 00D9
        gbc.setState(0x57a9, 0xa198, 0x62b0, 0xbcc7, 0x55b2, 0x2028, 0x0, 0x0);
        gbc.writeMem(0x57a9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa198);
        EXPECT(gbc.pc(), 0x57ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00DA
        gbc.setState(0x9def, 0xe6dd, 0x96e0, 0xd41, 0xa2e1, 0xaa6f, 0x0, 0x1);
        gbc.writeMem(0x9def, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe6dd);
        EXPECT(gbc.pc(), 0x9df1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9def), 0xcb);
        EXPECT(gbc.readMem(0x9df0), 0x38);
        // CB 38 00DB
        gbc.setState(0x4dba, 0xb1b, 0x5cf0, 0x2d94, 0x7256, 0xf21b, 0x1, 0x0);
        gbc.writeMem(0x4dba, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb1b);
        EXPECT(gbc.pc(), 0x4dbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00DC
        gbc.setState(0x23c4, 0x80c1, 0x1490, 0x967d, 0xb395, 0xb11c, 0x0, 0x1);
        gbc.writeMem(0x23c4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x80c1);
        EXPECT(gbc.pc(), 0x23c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00DD
        gbc.setState(0xa81, 0x4ed8, 0x86b0, 0x2c4c, 0x3a08, 0x67cd, 0x0, 0x1);
        gbc.writeMem(0xa81, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4ed8);
        EXPECT(gbc.pc(), 0xa83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00DE
        gbc.setState(0x3785, 0xd75, 0x43c0, 0x6aca, 0xa5b5, 0xdbc2, 0x0, 0x0);
        gbc.writeMem(0x3785, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd75);
        EXPECT(gbc.pc(), 0x3787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00DF
        gbc.setState(0x59bc, 0x86bc, 0xe760, 0xd8ba, 0x470f, 0xc10c, 0x1, 0x0);
        gbc.writeMem(0x59bc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x86bc);
        EXPECT(gbc.pc(), 0x59be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00E0
        gbc.setState(0x382f, 0x2229, 0xd790, 0xb171, 0xd0fb, 0xeaeb, 0x1, 0x0);
        gbc.writeMem(0x382f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2229);
        EXPECT(gbc.pc(), 0x3831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00E1
        gbc.setState(0xde9d, 0x3a4b, 0x8b40, 0x243, 0x5b47, 0xc715, 0x0, 0x0);
        gbc.writeMem(0xde9d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3a4b);
        EXPECT(gbc.pc(), 0xde9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde9d), 0xcb);
        EXPECT(gbc.readMem(0xde9e), 0x38);
        // CB 38 00E2
        gbc.setState(0x20eb, 0x943e, 0x7120, 0x7ac2, 0xe4a, 0x16bf, 0x0, 0x0);
        gbc.writeMem(0x20eb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x943e);
        EXPECT(gbc.pc(), 0x20ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00E4
        gbc.setState(0x7eab, 0x442b, 0x2700, 0x9592, 0xd133, 0x68b6, 0x1, 0x1);
        gbc.writeMem(0x7eab, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x442b);
        EXPECT(gbc.pc(), 0x7ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00E5
        gbc.setState(0x86fe, 0x2ad5, 0xbf40, 0xe796, 0x3dee, 0xc4cc, 0x0, 0x0);
        gbc.writeMem(0x86fe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2ad5);
        EXPECT(gbc.pc(), 0x8700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86fe), 0xcb);
        EXPECT(gbc.readMem(0x86ff), 0x38);
        // CB 38 00E6
        gbc.setState(0xd096, 0xfd46, 0xf8d0, 0x28ec, 0x72c8, 0xa3d4, 0x1, 0x0);
        gbc.writeMem(0xd096, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfd46);
        EXPECT(gbc.pc(), 0xd098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd096), 0xcb);
        EXPECT(gbc.readMem(0xd097), 0x38);
        // CB 38 00E7
        gbc.setState(0x66af, 0xc603, 0x30c0, 0x38a9, 0x48f4, 0x13f2, 0x0, 0x1);
        gbc.writeMem(0x66af, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc603);
        EXPECT(gbc.pc(), 0x66b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00E9
        gbc.setState(0x73bf, 0x6680, 0xd8d0, 0x435d, 0xd112, 0x3962, 0x1, 0x0);
        gbc.writeMem(0x73bf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6680);
        EXPECT(gbc.pc(), 0x73c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00EA
        gbc.setState(0x59fb, 0x150c, 0xa0b0, 0x5b5, 0xff4b, 0x2089, 0x0, 0x0);
        gbc.writeMem(0x59fb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x150c);
        EXPECT(gbc.pc(), 0x59fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00EB
        gbc.setState(0xdd99, 0x4525, 0x1920, 0x8153, 0x57f9, 0xf0fe, 0x0, 0x1);
        gbc.writeMem(0xdd99, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4525);
        EXPECT(gbc.pc(), 0xdd9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd99), 0xcb);
        EXPECT(gbc.readMem(0xdd9a), 0x38);
        // CB 38 00EC
        gbc.setState(0x47d4, 0xab7e, 0x91b0, 0x5f07, 0x1f0f, 0x1f8f, 0x0, 0x0);
        gbc.writeMem(0x47d4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xab7e);
        EXPECT(gbc.pc(), 0x47d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00ED
        gbc.setState(0x37f9, 0xedf, 0x3460, 0xc6a4, 0x3016, 0xa552, 0x0, 0x1);
        gbc.writeMem(0x37f9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xedf);
        EXPECT(gbc.pc(), 0x37fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00EE
        gbc.setState(0x2fb7, 0xf1a7, 0x660, 0xa43a, 0x1109, 0x151c, 0x1, 0x0);
        gbc.writeMem(0x2fb7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf1a7);
        EXPECT(gbc.pc(), 0x2fb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00EF
        gbc.setState(0x6480, 0xf71, 0x4480, 0x24d2, 0x937, 0x6471, 0x1, 0x0);
        gbc.writeMem(0x6480, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf71);
        EXPECT(gbc.pc(), 0x6482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00F0
        gbc.setState(0xecb2, 0x8000, 0xeb40, 0xc5fe, 0xb3f6, 0xd031, 0x1, 0x0);
        gbc.writeMem(0xecb2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8000);
        EXPECT(gbc.pc(), 0xecb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecb2), 0xcb);
        EXPECT(gbc.readMem(0xecb3), 0x38);
        // CB 38 00F1
        gbc.setState(0xc1b6, 0xc6be, 0x6c90, 0x182, 0x54e0, 0x9a82, 0x1, 0x0);
        gbc.writeMem(0xc1b6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc6be);
        EXPECT(gbc.pc(), 0xc1b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1b6), 0xcb);
        EXPECT(gbc.readMem(0xc1b7), 0x38);
        // CB 38 00F2
        gbc.setState(0x8fb6, 0x54c4, 0xc3e0, 0xfa6e, 0x5d63, 0x8712, 0x0, 0x0);
        gbc.writeMem(0x8fb6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x54c4);
        EXPECT(gbc.pc(), 0x8fb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb6), 0xcb);
        EXPECT(gbc.readMem(0x8fb7), 0x38);
        // CB 38 00F3
        gbc.setState(0xbdfa, 0x9e74, 0x7260, 0x62b4, 0xed3e, 0x8a0c, 0x1, 0x1);
        gbc.writeMem(0xbdfa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9e74);
        EXPECT(gbc.pc(), 0xbdfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdfa), 0xcb);
        EXPECT(gbc.readMem(0xbdfb), 0x38);
        // CB 38 00F4
        gbc.setState(0x79b3, 0xff7f, 0x2e50, 0x7ef9, 0x50ae, 0xf2d3, 0x0, 0x1);
        gbc.writeMem(0x79b3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xff7f);
        EXPECT(gbc.pc(), 0x79b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00F5
        gbc.setState(0x8bcc, 0xdae0, 0x3fa0, 0xd3d6, 0x8b5b, 0xe7bb, 0x0, 0x0);
        gbc.writeMem(0x8bcc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xdae0);
        EXPECT(gbc.pc(), 0x8bce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bcc), 0xcb);
        EXPECT(gbc.readMem(0x8bcd), 0x38);
        // CB 38 00F6
        gbc.setState(0xa31a, 0xfd1b, 0x9210, 0xef76, 0xd3cb, 0x67c9, 0x1, 0x1);
        gbc.writeMem(0xa31a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfd1b);
        EXPECT(gbc.pc(), 0xa31c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa31a), 0xcb);
        EXPECT(gbc.readMem(0xa31b), 0x38);
        // CB 38 00F7
        gbc.setState(0x9de4, 0x6ea9, 0x3d90, 0xd3bd, 0xd8a0, 0x8f94, 0x0, 0x0);
        gbc.writeMem(0x9de4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6ea9);
        EXPECT(gbc.pc(), 0x9de6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de4), 0xcb);
        EXPECT(gbc.readMem(0x9de5), 0x38);
        // CB 38 00F8
        gbc.setState(0x651a, 0xaa5f, 0x7b50, 0x12c6, 0x86d2, 0x2b0, 0x1, 0x1);
        gbc.writeMem(0x651a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xaa5f);
        EXPECT(gbc.pc(), 0x651c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 00FA
        gbc.setState(0x73a6, 0xd161, 0xec0, 0x8b37, 0x4ade, 0x1207, 0x0, 0x1);
        gbc.writeMem(0x73a6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd161);
        EXPECT(gbc.pc(), 0x73a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00FB
        gbc.setState(0xb93b, 0x40b2, 0xc4c0, 0x95e2, 0xdee3, 0xacee, 0x1, 0x1);
        gbc.writeMem(0xb93b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x40b2);
        EXPECT(gbc.pc(), 0xb93d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb93b), 0xcb);
        EXPECT(gbc.readMem(0xb93c), 0x38);
        // CB 38 00FC
        gbc.setState(0x22cb, 0x9d3e, 0x14c0, 0x9116, 0x528e, 0xb607, 0x0, 0x1);
        gbc.writeMem(0x22cb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9d3e);
        EXPECT(gbc.pc(), 0x22cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 00FD
        gbc.setState(0x86ce, 0x8774, 0x5230, 0x9647, 0xd23e, 0x5e06, 0x0, 0x1);
        gbc.writeMem(0x86ce, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8774);
        EXPECT(gbc.pc(), 0x86d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ce), 0xcb);
        EXPECT(gbc.readMem(0x86cf), 0x38);
        // CB 38 00FE
        gbc.setState(0x8454, 0x6913, 0x4080, 0x5132, 0xa87, 0x9498, 0x1, 0x0);
        gbc.writeMem(0x8454, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6913);
        EXPECT(gbc.pc(), 0x8456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8454), 0xcb);
        EXPECT(gbc.readMem(0x8455), 0x38);
        // CB 38 00FF
        gbc.setState(0xaf78, 0xe410, 0x52d0, 0x1dca, 0xdf6f, 0xdec7, 0x0, 0x0);
        gbc.writeMem(0xaf78, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe410);
        EXPECT(gbc.pc(), 0xaf7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf78), 0xcb);
        EXPECT(gbc.readMem(0xaf79), 0x38);
        // CB 38 0100
        gbc.setState(0xb192, 0x1ea7, 0x2720, 0xc48d, 0xe711, 0x5359, 0x1, 0x1);
        gbc.writeMem(0xb192, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1ea7);
        EXPECT(gbc.pc(), 0xb194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb192), 0xcb);
        EXPECT(gbc.readMem(0xb193), 0x38);
        // CB 38 0101
        gbc.setState(0x67fe, 0x60ae, 0xd700, 0x644c, 0xf7d0, 0x25c1, 0x1, 0x0);
        gbc.writeMem(0x67fe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x60ae);
        EXPECT(gbc.pc(), 0x6800);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0102
        gbc.setState(0xbc2f, 0xab27, 0x29c0, 0xf6af, 0xd82c, 0x4d5, 0x0, 0x0);
        gbc.writeMem(0xbc2f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xab27);
        EXPECT(gbc.pc(), 0xbc31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2f), 0xcb);
        EXPECT(gbc.readMem(0xbc30), 0x38);
        // CB 38 0103
        gbc.setState(0x4811, 0x5d19, 0xbad0, 0x343, 0xa71a, 0xb787, 0x0, 0x0);
        gbc.writeMem(0x4811, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5d19);
        EXPECT(gbc.pc(), 0x4813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0104
        gbc.setState(0x407a, 0x3e4e, 0x65c0, 0x4c24, 0xe181, 0xc8a1, 0x0, 0x1);
        gbc.writeMem(0x407a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3e4e);
        EXPECT(gbc.pc(), 0x407c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0105
        gbc.setState(0x935, 0x8069, 0xd3f0, 0x309e, 0x8755, 0x5b36, 0x1, 0x1);
        gbc.writeMem(0x935, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8069);
        EXPECT(gbc.pc(), 0x937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0106
        gbc.setState(0xeed0, 0x5abb, 0x4510, 0xba32, 0xce4e, 0xf101, 0x1, 0x1);
        gbc.writeMem(0xeed0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5abb);
        EXPECT(gbc.pc(), 0xeed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeed0), 0xcb);
        EXPECT(gbc.readMem(0xeed1), 0x38);
        // CB 38 0107
        gbc.setState(0x3e3a, 0xb4d3, 0xb410, 0x9571, 0xb832, 0x5a31, 0x1, 0x0);
        gbc.writeMem(0x3e3a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb4d3);
        EXPECT(gbc.pc(), 0x3e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0108
        gbc.setState(0xdbec, 0xe19c, 0x9b50, 0xde16, 0x4dda, 0x92cb, 0x1, 0x1);
        gbc.writeMem(0xdbec, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe19c);
        EXPECT(gbc.pc(), 0xdbee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbec), 0xcb);
        EXPECT(gbc.readMem(0xdbed), 0x38);
        // CB 38 0109
        gbc.setState(0x2a5b, 0xb5a5, 0x1c70, 0x4443, 0xeab8, 0x96e6, 0x0, 0x0);
        gbc.writeMem(0x2a5b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb5a5);
        EXPECT(gbc.pc(), 0x2a5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 010A
        gbc.setState(0xa045, 0x15e, 0x6910, 0xa264, 0xd429, 0x1104, 0x1, 0x0);
        gbc.writeMem(0xa045, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x15e);
        EXPECT(gbc.pc(), 0xa047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa045), 0xcb);
        EXPECT(gbc.readMem(0xa046), 0x38);
        // CB 38 010B
        gbc.setState(0xb5b5, 0x22d8, 0xffb0, 0xe046, 0x28aa, 0x318a, 0x0, 0x1);
        gbc.writeMem(0xb5b5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x22d8);
        EXPECT(gbc.pc(), 0xb5b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b5), 0xcb);
        EXPECT(gbc.readMem(0xb5b6), 0x38);
        // CB 38 010C
        gbc.setState(0x1367, 0xc2de, 0x8bd0, 0x23a5, 0x80a6, 0x512b, 0x0, 0x1);
        gbc.writeMem(0x1367, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc2de);
        EXPECT(gbc.pc(), 0x1369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 010D
        gbc.setState(0x7cc, 0x7efe, 0x80b0, 0xe47f, 0xc653, 0x6617, 0x1, 0x1);
        gbc.writeMem(0x7cc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7efe);
        EXPECT(gbc.pc(), 0x7ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 010E
        gbc.setState(0xdad2, 0x7c3d, 0x2920, 0x4bb5, 0x4fd0, 0x2159, 0x0, 0x1);
        gbc.writeMem(0xdad2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7c3d);
        EXPECT(gbc.pc(), 0xdad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdad2), 0xcb);
        EXPECT(gbc.readMem(0xdad3), 0x38);
        // CB 38 010F
        gbc.setState(0xa4e5, 0xa7e4, 0x5c10, 0x62c9, 0xd867, 0x60ec, 0x1, 0x0);
        gbc.writeMem(0xa4e5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa7e4);
        EXPECT(gbc.pc(), 0xa4e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e5), 0xcb);
        EXPECT(gbc.readMem(0xa4e6), 0x38);
        // CB 38 0110
        gbc.setState(0xe5e8, 0x5ae5, 0xba90, 0x9e15, 0x9685, 0xbd1f, 0x0, 0x0);
        gbc.writeMem(0xe5e8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5ae5);
        EXPECT(gbc.pc(), 0xe5ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e8), 0xcb);
        EXPECT(gbc.readMem(0xe5e9), 0x38);
        // CB 38 0111
        gbc.setState(0xbb77, 0x932b, 0x7bd0, 0xad5d, 0xca5e, 0xfa07, 0x1, 0x0);
        gbc.writeMem(0xbb77, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x932b);
        EXPECT(gbc.pc(), 0xbb79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb77), 0xcb);
        EXPECT(gbc.readMem(0xbb78), 0x38);
        // CB 38 0112
        gbc.setState(0x2b4e, 0x98a1, 0x54d0, 0x96f4, 0x149b, 0xcaf0, 0x1, 0x1);
        gbc.writeMem(0x2b4e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x98a1);
        EXPECT(gbc.pc(), 0x2b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0113
        gbc.setState(0x6bee, 0xae71, 0xed80, 0xe5e5, 0x5deb, 0x2ad8, 0x1, 0x1);
        gbc.writeMem(0x6bee, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xae71);
        EXPECT(gbc.pc(), 0x6bf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0114
        gbc.setState(0xcee, 0x3208, 0xb390, 0xe22e, 0x9fff, 0x642, 0x0, 0x1);
        gbc.writeMem(0xcee, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3208);
        EXPECT(gbc.pc(), 0xcf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0115
        gbc.setState(0x1e0c, 0x214c, 0x6260, 0x40c0, 0x5c64, 0x7901, 0x1, 0x1);
        gbc.writeMem(0x1e0c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x214c);
        EXPECT(gbc.pc(), 0x1e0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0117
        gbc.setState(0x4c45, 0x4569, 0x8ff0, 0xd18d, 0x76b, 0x3844, 0x0, 0x0);
        gbc.writeMem(0x4c45, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4569);
        EXPECT(gbc.pc(), 0x4c47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0118
        gbc.setState(0x1357, 0x7945, 0xa7a0, 0xe376, 0x2c2d, 0x8cbc, 0x0, 0x1);
        gbc.writeMem(0x1357, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7945);
        EXPECT(gbc.pc(), 0x1359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0119
        gbc.setState(0xb97e, 0x7412, 0x4970, 0x775f, 0x7ee1, 0x94c9, 0x0, 0x1);
        gbc.writeMem(0xb97e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7412);
        EXPECT(gbc.pc(), 0xb980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb97e), 0xcb);
        EXPECT(gbc.readMem(0xb97f), 0x38);
        // CB 38 011A
        gbc.setState(0x9c02, 0x9d07, 0xabc0, 0xd632, 0x92b7, 0x1e29, 0x0, 0x0);
        gbc.writeMem(0x9c02, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9d07);
        EXPECT(gbc.pc(), 0x9c04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c02), 0xcb);
        EXPECT(gbc.readMem(0x9c03), 0x38);
        // CB 38 011B
        gbc.setState(0x399, 0x6403, 0x7820, 0xeaa2, 0xdbd8, 0xad2c, 0x0, 0x0);
        gbc.writeMem(0x399, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6403);
        EXPECT(gbc.pc(), 0x39b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 011C
        gbc.setState(0xbd0e, 0xc3c0, 0x4580, 0x71ad, 0x5610, 0x9f5, 0x1, 0x1);
        gbc.writeMem(0xbd0e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc3c0);
        EXPECT(gbc.pc(), 0xbd10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd0e), 0xcb);
        EXPECT(gbc.readMem(0xbd0f), 0x38);
        // CB 38 011D
        gbc.setState(0x491b, 0x6fd2, 0x16a0, 0x41e8, 0xa506, 0x264d, 0x1, 0x0);
        gbc.writeMem(0x491b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6fd2);
        EXPECT(gbc.pc(), 0x491d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 011E
        gbc.setState(0x7346, 0x6662, 0xf990, 0x954c, 0xba4b, 0x4bdd, 0x0, 0x0);
        gbc.writeMem(0x7346, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6662);
        EXPECT(gbc.pc(), 0x7348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 011F
        gbc.setState(0x5790, 0xcd40, 0x1690, 0x3840, 0xc97d, 0x38f4, 0x1, 0x0);
        gbc.writeMem(0x5790, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xcd40);
        EXPECT(gbc.pc(), 0x5792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0120
        gbc.setState(0x38c4, 0x621e, 0x2d40, 0xd03d, 0x7941, 0x2163, 0x0, 0x1);
        gbc.writeMem(0x38c4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x621e);
        EXPECT(gbc.pc(), 0x38c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0121
        gbc.setState(0x5f9a, 0x5447, 0x8150, 0xedd1, 0x69d9, 0xa745, 0x1, 0x1);
        gbc.writeMem(0x5f9a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5447);
        EXPECT(gbc.pc(), 0x5f9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0122
        gbc.setState(0x7c64, 0xdcc7, 0xddd0, 0x217e, 0x51c2, 0x2616, 0x1, 0x1);
        gbc.writeMem(0x7c64, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xdcc7);
        EXPECT(gbc.pc(), 0x7c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0123
        gbc.setState(0x3e46, 0x2b15, 0x2310, 0x7706, 0xb219, 0xb3a0, 0x1, 0x0);
        gbc.writeMem(0x3e46, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2b15);
        EXPECT(gbc.pc(), 0x3e48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0124
        gbc.setState(0x180f, 0xe415, 0xfc90, 0x14d5, 0xb13e, 0x6779, 0x0, 0x0);
        gbc.writeMem(0x180f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe415);
        EXPECT(gbc.pc(), 0x1811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0125
        gbc.setState(0x67d1, 0xf9ae, 0xd140, 0x564f, 0x70cf, 0x2b10, 0x0, 0x1);
        gbc.writeMem(0x67d1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf9ae);
        EXPECT(gbc.pc(), 0x67d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0126
        gbc.setState(0xd20e, 0x232d, 0x5a90, 0x9661, 0xbdd5, 0x7c60, 0x1, 0x0);
        gbc.writeMem(0xd20e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x232d);
        EXPECT(gbc.pc(), 0xd210);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20e), 0xcb);
        EXPECT(gbc.readMem(0xd20f), 0x38);
        // CB 38 0127
        gbc.setState(0xb853, 0x25ab, 0xf320, 0x4682, 0x5b76, 0x6a4a, 0x1, 0x1);
        gbc.writeMem(0xb853, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x25ab);
        EXPECT(gbc.pc(), 0xb855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb853), 0xcb);
        EXPECT(gbc.readMem(0xb854), 0x38);
        // CB 38 0128
        gbc.setState(0xc9b2, 0xaad, 0xeca0, 0xc32e, 0x7e7c, 0x46bd, 0x0, 0x1);
        gbc.writeMem(0xc9b2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xaad);
        EXPECT(gbc.pc(), 0xc9b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9b2), 0xcb);
        EXPECT(gbc.readMem(0xc9b3), 0x38);
        // CB 38 0129
        gbc.setState(0x6177, 0x9557, 0x1910, 0x78ef, 0xc72, 0xf019, 0x0, 0x1);
        gbc.writeMem(0x6177, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9557);
        EXPECT(gbc.pc(), 0x6179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 012A
        gbc.setState(0x32f0, 0x2053, 0x4270, 0x26aa, 0x8041, 0x3c5, 0x1, 0x1);
        gbc.writeMem(0x32f0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2053);
        EXPECT(gbc.pc(), 0x32f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 012B
        gbc.setState(0x35ca, 0x205d, 0xe110, 0x931a, 0xe013, 0xd926, 0x1, 0x1);
        gbc.writeMem(0x35ca, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x205d);
        EXPECT(gbc.pc(), 0x35cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 012C
        gbc.setState(0x19b7, 0x58f4, 0x2150, 0x3d07, 0xb448, 0xb0f9, 0x0, 0x1);
        gbc.writeMem(0x19b7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x58f4);
        EXPECT(gbc.pc(), 0x19b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 012D
        gbc.setState(0x1629, 0x242a, 0xabb0, 0xaf9c, 0xb3ed, 0x1bfc, 0x1, 0x1);
        gbc.writeMem(0x1629, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x242a);
        EXPECT(gbc.pc(), 0x162b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 012E
        gbc.setState(0xe25f, 0x43aa, 0x26b0, 0xef14, 0x9c92, 0xe11e, 0x0, 0x1);
        gbc.writeMem(0xe25f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x43aa);
        EXPECT(gbc.pc(), 0xe261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe25f), 0xcb);
        EXPECT(gbc.readMem(0xe260), 0x38);
        // CB 38 012F
        gbc.setState(0x371f, 0x9eef, 0x8da0, 0xe417, 0x668a, 0xec70, 0x0, 0x1);
        gbc.writeMem(0x371f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9eef);
        EXPECT(gbc.pc(), 0x3721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0130
        gbc.setState(0x7e94, 0xe779, 0xd120, 0xa028, 0xd0f7, 0x3daf, 0x1, 0x0);
        gbc.writeMem(0x7e94, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe779);
        EXPECT(gbc.pc(), 0x7e96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0131
        gbc.setState(0x1e9d, 0x87dd, 0xc310, 0x2e39, 0xbc2c, 0xbfe8, 0x0, 0x1);
        gbc.writeMem(0x1e9d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x87dd);
        EXPECT(gbc.pc(), 0x1e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0132
        gbc.setState(0xa5d9, 0xaf16, 0xdee0, 0x48, 0x1670, 0x2920, 0x1, 0x0);
        gbc.writeMem(0xa5d9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xaf16);
        EXPECT(gbc.pc(), 0xa5db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d9), 0xcb);
        EXPECT(gbc.readMem(0xa5da), 0x38);
        // CB 38 0134
        gbc.setState(0x608d, 0x5baa, 0x7130, 0x6339, 0xcde7, 0x82fa, 0x0, 0x1);
        gbc.writeMem(0x608d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5baa);
        EXPECT(gbc.pc(), 0x608f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0135
        gbc.setState(0x7710, 0x180c, 0xe9e0, 0xe004, 0x786, 0x67c2, 0x0, 0x0);
        gbc.writeMem(0x7710, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x180c);
        EXPECT(gbc.pc(), 0x7712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0136
        gbc.setState(0xe37f, 0x7034, 0x8dd0, 0xe122, 0x9620, 0x9779, 0x0, 0x0);
        gbc.writeMem(0xe37f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7034);
        EXPECT(gbc.pc(), 0xe381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe37f), 0xcb);
        EXPECT(gbc.readMem(0xe380), 0x38);
        // CB 38 0137
        gbc.setState(0x4b13, 0x6fd2, 0x20a0, 0xcb24, 0xb4b5, 0xccf7, 0x1, 0x1);
        gbc.writeMem(0x4b13, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6fd2);
        EXPECT(gbc.pc(), 0x4b15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0138
        gbc.setState(0xd82e, 0x8fc9, 0xda30, 0x324c, 0xa73, 0x4a14, 0x1, 0x0);
        gbc.writeMem(0xd82e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8fc9);
        EXPECT(gbc.pc(), 0xd830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd82e), 0xcb);
        EXPECT(gbc.readMem(0xd82f), 0x38);
        // CB 38 0139
        gbc.setState(0x572b, 0xa2d9, 0x5920, 0xd0ca, 0xec24, 0x77c6, 0x1, 0x0);
        gbc.writeMem(0x572b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa2d9);
        EXPECT(gbc.pc(), 0x572d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 013A
        gbc.setState(0x4c89, 0x58e3, 0x1070, 0xd873, 0x8daf, 0x8555, 0x1, 0x1);
        gbc.writeMem(0x4c89, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x58e3);
        EXPECT(gbc.pc(), 0x4c8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 013B
        gbc.setState(0x9066, 0xdaf3, 0x1a50, 0x9dbe, 0xff75, 0xb125, 0x0, 0x0);
        gbc.writeMem(0x9066, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xdaf3);
        EXPECT(gbc.pc(), 0x9068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9066), 0xcb);
        EXPECT(gbc.readMem(0x9067), 0x38);
        // CB 38 013C
        gbc.setState(0x2116, 0xfae4, 0x1a80, 0xc0d2, 0xb0fa, 0x3d07, 0x1, 0x1);
        gbc.writeMem(0x2116, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xfae4);
        EXPECT(gbc.pc(), 0x2118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 013D
        gbc.setState(0x8751, 0x5ec3, 0x5b60, 0x25da, 0x6a93, 0x6c10, 0x1, 0x0);
        gbc.writeMem(0x8751, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5ec3);
        EXPECT(gbc.pc(), 0x8753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8751), 0xcb);
        EXPECT(gbc.readMem(0x8752), 0x38);
        // CB 38 013E
        gbc.setState(0xde8c, 0xd527, 0x4950, 0x435f, 0x98a4, 0x8a2f, 0x0, 0x0);
        gbc.writeMem(0xde8c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd527);
        EXPECT(gbc.pc(), 0xde8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde8c), 0xcb);
        EXPECT(gbc.readMem(0xde8d), 0x38);
        // CB 38 013F
        gbc.setState(0xd1ba, 0xaf97, 0xfcc0, 0x1a10, 0xbdfc, 0xef73, 0x1, 0x0);
        gbc.writeMem(0xd1ba, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xaf97);
        EXPECT(gbc.pc(), 0xd1bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ba), 0xcb);
        EXPECT(gbc.readMem(0xd1bb), 0x38);
        // CB 38 0140
        gbc.setState(0xa250, 0x826f, 0x2d70, 0x39d9, 0x29e3, 0xa34c, 0x0, 0x1);
        gbc.writeMem(0xa250, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x826f);
        EXPECT(gbc.pc(), 0xa252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa250), 0xcb);
        EXPECT(gbc.readMem(0xa251), 0x38);
        // CB 38 0142
        gbc.setState(0xadd4, 0xdb0b, 0xef10, 0xb8a8, 0x6515, 0x3e4b, 0x0, 0x0);
        gbc.writeMem(0xadd4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xdb0b);
        EXPECT(gbc.pc(), 0xadd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadd4), 0xcb);
        EXPECT(gbc.readMem(0xadd5), 0x38);
        // CB 38 0143
        gbc.setState(0xc8bb, 0x1fdb, 0xbf10, 0xeada, 0xb33e, 0x6886, 0x1, 0x0);
        gbc.writeMem(0xc8bb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1fdb);
        EXPECT(gbc.pc(), 0xc8bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8bb), 0xcb);
        EXPECT(gbc.readMem(0xc8bc), 0x38);
        // CB 38 0144
        gbc.setState(0xd2fa, 0xe9fc, 0x8b40, 0xbcc7, 0xab8a, 0xa8f8, 0x1, 0x1);
        gbc.writeMem(0xd2fa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe9fc);
        EXPECT(gbc.pc(), 0xd2fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2fa), 0xcb);
        EXPECT(gbc.readMem(0xd2fb), 0x38);
        // CB 38 0145
        gbc.setState(0x886, 0x5d2f, 0x1870, 0xbc5f, 0x2778, 0x4a4f, 0x0, 0x0);
        gbc.writeMem(0x886, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5d2f);
        EXPECT(gbc.pc(), 0x888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0146
        gbc.setState(0x6729, 0xb0b, 0x38b0, 0xdc12, 0x48d3, 0x8a61, 0x0, 0x0);
        gbc.writeMem(0x6729, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb0b);
        EXPECT(gbc.pc(), 0x672b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0148
        gbc.setState(0x11cc, 0xef89, 0x4fc0, 0x6daa, 0x2bd8, 0x7e37, 0x1, 0x0);
        gbc.writeMem(0x11cc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xef89);
        EXPECT(gbc.pc(), 0x11ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0149
        gbc.setState(0x4112, 0xa139, 0x5f30, 0x7d8b, 0xd87c, 0x5bcd, 0x1, 0x1);
        gbc.writeMem(0x4112, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa139);
        EXPECT(gbc.pc(), 0x4114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 014A
        gbc.setState(0xc5d8, 0xebb2, 0x3900, 0x56ea, 0x9543, 0x8ec6, 0x1, 0x1);
        gbc.writeMem(0xc5d8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xebb2);
        EXPECT(gbc.pc(), 0xc5da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d8), 0xcb);
        EXPECT(gbc.readMem(0xc5d9), 0x38);
        // CB 38 014B
        gbc.setState(0xe6d, 0x8f7d, 0xf8a0, 0x52db, 0x9e77, 0xeca7, 0x0, 0x0);
        gbc.writeMem(0xe6d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8f7d);
        EXPECT(gbc.pc(), 0xe6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 014C
        gbc.setState(0x1f82, 0xbe49, 0xda90, 0x7772, 0x69fa, 0xc754, 0x1, 0x0);
        gbc.writeMem(0x1f82, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xbe49);
        EXPECT(gbc.pc(), 0x1f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 014D
        gbc.setState(0xa71, 0xc0de, 0xd2a0, 0x11dc, 0x90e9, 0x1851, 0x1, 0x0);
        gbc.writeMem(0xa71, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc0de);
        EXPECT(gbc.pc(), 0xa73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 014E
        gbc.setState(0xc95a, 0xe019, 0xc830, 0x5423, 0x86bc, 0xef03, 0x0, 0x0);
        gbc.writeMem(0xc95a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe019);
        EXPECT(gbc.pc(), 0xc95c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc95a), 0xcb);
        EXPECT(gbc.readMem(0xc95b), 0x38);
        // CB 38 014F
        gbc.setState(0x5825, 0x833d, 0x8270, 0x70f1, 0xfc14, 0x21f9, 0x0, 0x1);
        gbc.writeMem(0x5825, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x833d);
        EXPECT(gbc.pc(), 0x5827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0150
        gbc.setState(0xdbf5, 0x2419, 0xaad0, 0xbc2, 0xe1aa, 0x312b, 0x1, 0x1);
        gbc.writeMem(0xdbf5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2419);
        EXPECT(gbc.pc(), 0xdbf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf5), 0xcb);
        EXPECT(gbc.readMem(0xdbf6), 0x38);
        // CB 38 0151
        gbc.setState(0xd608, 0x773a, 0xe900, 0xf21d, 0xebcf, 0x11c8, 0x0, 0x0);
        gbc.writeMem(0xd608, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x773a);
        EXPECT(gbc.pc(), 0xd60a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd608), 0xcb);
        EXPECT(gbc.readMem(0xd609), 0x38);
        // CB 38 0152
        gbc.setState(0x61c, 0x37ad, 0xd660, 0x69b2, 0x3b89, 0xaa18, 0x0, 0x1);
        gbc.writeMem(0x61c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x37ad);
        EXPECT(gbc.pc(), 0x61e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0153
        gbc.setState(0xcd2, 0x2b37, 0x4ee0, 0xeb10, 0x1210, 0x2fa2, 0x1, 0x0);
        gbc.writeMem(0xcd2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2b37);
        EXPECT(gbc.pc(), 0xcd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0154
        gbc.setState(0x4eb6, 0x5b90, 0x8760, 0x9135, 0x32b8, 0xfd55, 0x1, 0x1);
        gbc.writeMem(0x4eb6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5b90);
        EXPECT(gbc.pc(), 0x4eb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0155
        gbc.setState(0x84d1, 0xcf0e, 0x31a0, 0xab72, 0xf970, 0x55b, 0x1, 0x1);
        gbc.writeMem(0x84d1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xcf0e);
        EXPECT(gbc.pc(), 0x84d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84d1), 0xcb);
        EXPECT(gbc.readMem(0x84d2), 0x38);
        // CB 38 0156
        gbc.setState(0xe14d, 0x8136, 0xdda0, 0x7dfb, 0x9904, 0x4108, 0x1, 0x1);
        gbc.writeMem(0xe14d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8136);
        EXPECT(gbc.pc(), 0xe14f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe14d), 0xcb);
        EXPECT(gbc.readMem(0xe14e), 0x38);
        // CB 38 0157
        gbc.setState(0xbf26, 0x42f9, 0xa550, 0x8cb, 0xdd43, 0x8ec6, 0x0, 0x1);
        gbc.writeMem(0xbf26, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x42f9);
        EXPECT(gbc.pc(), 0xbf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf26), 0xcb);
        EXPECT(gbc.readMem(0xbf27), 0x38);
        // CB 38 0159
        gbc.setState(0x56c6, 0xf5b, 0x2260, 0x6e88, 0x3293, 0x6c07, 0x0, 0x0);
        gbc.writeMem(0x56c6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf5b);
        EXPECT(gbc.pc(), 0x56c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 015A
        gbc.setState(0xd49f, 0xa8d6, 0x8530, 0x1487, 0x551c, 0x5e67, 0x0, 0x1);
        gbc.writeMem(0xd49f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa8d6);
        EXPECT(gbc.pc(), 0xd4a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd49f), 0xcb);
        EXPECT(gbc.readMem(0xd4a0), 0x38);
        // CB 38 015B
        gbc.setState(0x39a, 0xcf8d, 0x4bd0, 0xc9a9, 0x70fc, 0x4d0f, 0x0, 0x0);
        gbc.writeMem(0x39a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xcf8d);
        EXPECT(gbc.pc(), 0x39c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 015C
        gbc.setState(0x1c4a, 0x897, 0xcd10, 0xa11f, 0x9954, 0xc236, 0x0, 0x1);
        gbc.writeMem(0x1c4a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x897);
        EXPECT(gbc.pc(), 0x1c4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 015E
        gbc.setState(0xe934, 0x6f46, 0x55e0, 0x2f6d, 0x7a98, 0x95a3, 0x1, 0x0);
        gbc.writeMem(0xe934, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6f46);
        EXPECT(gbc.pc(), 0xe936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe934), 0xcb);
        EXPECT(gbc.readMem(0xe935), 0x38);
        // CB 38 015F
        gbc.setState(0xfa, 0x7919, 0x22d0, 0xce9d, 0xf825, 0x79e3, 0x1, 0x0);
        gbc.writeMem(0xfa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7919);
        EXPECT(gbc.pc(), 0xfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0160
        gbc.setState(0xe6bd, 0x9718, 0xa6e0, 0x4b23, 0x30a4, 0x9b3c, 0x1, 0x1);
        gbc.writeMem(0xe6bd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9718);
        EXPECT(gbc.pc(), 0xe6bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6bd), 0xcb);
        EXPECT(gbc.readMem(0xe6be), 0x38);
        // CB 38 0161
        gbc.setState(0x85ad, 0xfce3, 0x59d0, 0xad9a, 0x14ca, 0x2c71, 0x0, 0x1);
        gbc.writeMem(0x85ad, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfce3);
        EXPECT(gbc.pc(), 0x85af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ad), 0xcb);
        EXPECT(gbc.readMem(0x85ae), 0x38);
        // CB 38 0162
        gbc.setState(0x7dc4, 0x6355, 0xd500, 0xc2f3, 0x70cd, 0xb449, 0x0, 0x1);
        gbc.writeMem(0x7dc4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6355);
        EXPECT(gbc.pc(), 0x7dc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0163
        gbc.setState(0x8d4f, 0x6817, 0xc4d0, 0x8119, 0x7c0b, 0x81f7, 0x1, 0x0);
        gbc.writeMem(0x8d4f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6817);
        EXPECT(gbc.pc(), 0x8d51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d4f), 0xcb);
        EXPECT(gbc.readMem(0x8d50), 0x38);
        // CB 38 0164
        gbc.setState(0xdfec, 0x201, 0x1520, 0xe4e2, 0xdbc0, 0x9d1b, 0x1, 0x0);
        gbc.writeMem(0xdfec, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x201);
        EXPECT(gbc.pc(), 0xdfee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfec), 0xcb);
        EXPECT(gbc.readMem(0xdfed), 0x38);
        // CB 38 0165
        gbc.setState(0x3b4c, 0x42d6, 0x4d50, 0xd8b0, 0xeb4c, 0xccbd, 0x1, 0x1);
        gbc.writeMem(0x3b4c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x42d6);
        EXPECT(gbc.pc(), 0x3b4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0166
        gbc.setState(0x1c3c, 0x6592, 0xf750, 0xe000, 0xa07e, 0x24e4, 0x1, 0x1);
        gbc.writeMem(0x1c3c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6592);
        EXPECT(gbc.pc(), 0x1c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0167
        gbc.setState(0x1cdb, 0xfa28, 0x9c90, 0xbbbd, 0x2534, 0x57ee, 0x0, 0x1);
        gbc.writeMem(0x1cdb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xfa28);
        EXPECT(gbc.pc(), 0x1cdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0168
        gbc.setState(0xde52, 0xf977, 0xf470, 0xcd44, 0x53ff, 0x5b68, 0x1, 0x1);
        gbc.writeMem(0xde52, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf977);
        EXPECT(gbc.pc(), 0xde54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde52), 0xcb);
        EXPECT(gbc.readMem(0xde53), 0x38);
        // CB 38 0169
        gbc.setState(0x8ce1, 0x143b, 0x1150, 0x8e09, 0xee7d, 0xc2ef, 0x1, 0x1);
        gbc.writeMem(0x8ce1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x143b);
        EXPECT(gbc.pc(), 0x8ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce1), 0xcb);
        EXPECT(gbc.readMem(0x8ce2), 0x38);
        // CB 38 016A
        gbc.setState(0x5c6b, 0x8702, 0x5520, 0x2130, 0xe9dc, 0x8d2, 0x1, 0x0);
        gbc.writeMem(0x5c6b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8702);
        EXPECT(gbc.pc(), 0x5c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 016B
        gbc.setState(0xbde7, 0xf9b0, 0x8670, 0xebed, 0x7243, 0x4aa, 0x0, 0x1);
        gbc.writeMem(0xbde7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf9b0);
        EXPECT(gbc.pc(), 0xbde9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde7), 0xcb);
        EXPECT(gbc.readMem(0xbde8), 0x38);
        // CB 38 016C
        gbc.setState(0x6318, 0x9897, 0xa0f0, 0x5297, 0xda5c, 0xf360, 0x0, 0x0);
        gbc.writeMem(0x6318, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9897);
        EXPECT(gbc.pc(), 0x631a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 016E
        gbc.setState(0x32ee, 0x3b3f, 0x5680, 0x51d9, 0x794e, 0xe926, 0x1, 0x1);
        gbc.writeMem(0x32ee, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3b3f);
        EXPECT(gbc.pc(), 0x32f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 016F
        gbc.setState(0xc1c0, 0xff5b, 0xa2f0, 0x4348, 0x55b2, 0x9bfc, 0x0, 0x0);
        gbc.writeMem(0xc1c0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xff5b);
        EXPECT(gbc.pc(), 0xc1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1c0), 0xcb);
        EXPECT(gbc.readMem(0xc1c1), 0x38);
        // CB 38 0170
        gbc.setState(0x45b1, 0x27e8, 0x8e30, 0x8e05, 0x1638, 0x22b2, 0x1, 0x1);
        gbc.writeMem(0x45b1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x27e8);
        EXPECT(gbc.pc(), 0x45b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0171
        gbc.setState(0x27c9, 0xdd56, 0xaac0, 0x7c4f, 0x2d6f, 0xf247, 0x0, 0x1);
        gbc.writeMem(0x27c9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdd56);
        EXPECT(gbc.pc(), 0x27cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0172
        gbc.setState(0x5829, 0x3cd2, 0xd0f0, 0x1f89, 0x33ff, 0x78ba, 0x0, 0x0);
        gbc.writeMem(0x5829, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3cd2);
        EXPECT(gbc.pc(), 0x582b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0173
        gbc.setState(0xc446, 0x678f, 0x9e0, 0x4f45, 0xc1b0, 0x8d32, 0x0, 0x1);
        gbc.writeMem(0xc446, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x678f);
        EXPECT(gbc.pc(), 0xc448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc446), 0xcb);
        EXPECT(gbc.readMem(0xc447), 0x38);
        // CB 38 0174
        gbc.setState(0x7b18, 0xb365, 0x8a90, 0xc9b7, 0xb1d0, 0xc506, 0x0, 0x0);
        gbc.writeMem(0x7b18, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb365);
        EXPECT(gbc.pc(), 0x7b1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0175
        gbc.setState(0xd2b, 0x7411, 0x91f0, 0x94b7, 0x6789, 0x83d3, 0x1, 0x0);
        gbc.writeMem(0xd2b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7411);
        EXPECT(gbc.pc(), 0xd2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0176
        gbc.setState(0xd0c9, 0xb7a, 0x34d0, 0x17df, 0x50f3, 0x834d, 0x0, 0x1);
        gbc.writeMem(0xd0c9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb7a);
        EXPECT(gbc.pc(), 0xd0cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0c9), 0xcb);
        EXPECT(gbc.readMem(0xd0ca), 0x38);
        // CB 38 0177
        gbc.setState(0x40e0, 0xff8, 0xad0, 0xda27, 0xbfd2, 0x25de, 0x1, 0x0);
        gbc.writeMem(0x40e0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xff8);
        EXPECT(gbc.pc(), 0x40e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0178
        gbc.setState(0x78e4, 0xaf30, 0xfc90, 0x2c18, 0xaf6e, 0xc582, 0x0, 0x1);
        gbc.writeMem(0x78e4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xaf30);
        EXPECT(gbc.pc(), 0x78e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0179
        gbc.setState(0x9fbe, 0xe12f, 0x89c0, 0x3835, 0x44c7, 0xccad, 0x1, 0x0);
        gbc.writeMem(0x9fbe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe12f);
        EXPECT(gbc.pc(), 0x9fc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fbe), 0xcb);
        EXPECT(gbc.readMem(0x9fbf), 0x38);
        // CB 38 017A
        gbc.setState(0xd017, 0x8daa, 0xe280, 0xeaa, 0x4900, 0x2f00, 0x0, 0x0);
        gbc.writeMem(0xd017, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8daa);
        EXPECT(gbc.pc(), 0xd019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd017), 0xcb);
        EXPECT(gbc.readMem(0xd018), 0x38);
        // CB 38 017B
        gbc.setState(0x8e79, 0x327a, 0x7350, 0xe7f5, 0x5c09, 0xfaf3, 0x0, 0x0);
        gbc.writeMem(0x8e79, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x327a);
        EXPECT(gbc.pc(), 0x8e7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e79), 0xcb);
        EXPECT(gbc.readMem(0x8e7a), 0x38);
        // CB 38 017C
        gbc.setState(0x784a, 0x5d46, 0x1d70, 0x13cb, 0x647a, 0xafdc, 0x1, 0x0);
        gbc.writeMem(0x784a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5d46);
        EXPECT(gbc.pc(), 0x784c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 017D
        gbc.setState(0x805a, 0x5ff3, 0xa2d0, 0x29fe, 0x4250, 0xd3ad, 0x0, 0x0);
        gbc.writeMem(0x805a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5ff3);
        EXPECT(gbc.pc(), 0x805c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x805a), 0xcb);
        EXPECT(gbc.readMem(0x805b), 0x38);
        // CB 38 017E
        gbc.setState(0x60c1, 0x6d93, 0xbc50, 0xdcaf, 0x446d, 0x506f, 0x0, 0x1);
        gbc.writeMem(0x60c1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6d93);
        EXPECT(gbc.pc(), 0x60c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 017F
        gbc.setState(0x9b62, 0xa52e, 0xf90, 0xaab6, 0x800e, 0x7503, 0x1, 0x0);
        gbc.writeMem(0x9b62, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa52e);
        EXPECT(gbc.pc(), 0x9b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b62), 0xcb);
        EXPECT(gbc.readMem(0x9b63), 0x38);
        // CB 38 0181
        gbc.setState(0x7e09, 0x41a4, 0x2c20, 0x82c7, 0x5e13, 0xb05f, 0x1, 0x0);
        gbc.writeMem(0x7e09, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x41a4);
        EXPECT(gbc.pc(), 0x7e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0182
        gbc.setState(0xdaf5, 0x8a7f, 0x6dd0, 0x7383, 0x34c7, 0xcb6e, 0x0, 0x1);
        gbc.writeMem(0xdaf5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8a7f);
        EXPECT(gbc.pc(), 0xdaf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaf5), 0xcb);
        EXPECT(gbc.readMem(0xdaf6), 0x38);
        // CB 38 0183
        gbc.setState(0x9e2a, 0xe0f8, 0x4090, 0x5555, 0x507f, 0xe199, 0x1, 0x0);
        gbc.writeMem(0x9e2a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe0f8);
        EXPECT(gbc.pc(), 0x9e2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e2a), 0xcb);
        EXPECT(gbc.readMem(0x9e2b), 0x38);
        // CB 38 0184
        gbc.setState(0x78bf, 0xc9f5, 0x4560, 0xc1b6, 0x41c9, 0x2786, 0x0, 0x0);
        gbc.writeMem(0x78bf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc9f5);
        EXPECT(gbc.pc(), 0x78c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0185
        gbc.setState(0xa201, 0xbfdc, 0x1e00, 0x224e, 0x379b, 0xa275, 0x0, 0x0);
        gbc.writeMem(0xa201, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xbfdc);
        EXPECT(gbc.pc(), 0xa203);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa201), 0xcb);
        EXPECT(gbc.readMem(0xa202), 0x38);
        // CB 38 0186
        gbc.setState(0x202a, 0x3f79, 0x8ca0, 0xfaa5, 0x69ee, 0x1b54, 0x1, 0x1);
        gbc.writeMem(0x202a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3f79);
        EXPECT(gbc.pc(), 0x202c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0187
        gbc.setState(0x9ea7, 0x2f5f, 0x70b0, 0x8db2, 0xd15f, 0x627d, 0x0, 0x0);
        gbc.writeMem(0x9ea7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2f5f);
        EXPECT(gbc.pc(), 0x9ea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea7), 0xcb);
        EXPECT(gbc.readMem(0x9ea8), 0x38);
        // CB 38 0188
        gbc.setState(0x9bdb, 0x1fcc, 0x1230, 0xde52, 0xc920, 0xecc6, 0x1, 0x1);
        gbc.writeMem(0x9bdb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1fcc);
        EXPECT(gbc.pc(), 0x9bdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bdb), 0xcb);
        EXPECT(gbc.readMem(0x9bdc), 0x38);
        // CB 38 0189
        gbc.setState(0x23bc, 0x5494, 0x6750, 0xb6db, 0xf67c, 0x9e13, 0x1, 0x1);
        gbc.writeMem(0x23bc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5494);
        EXPECT(gbc.pc(), 0x23be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 018A
        gbc.setState(0x3349, 0xc219, 0xfe20, 0xbfaf, 0x7427, 0xdf35, 0x0, 0x1);
        gbc.writeMem(0x3349, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc219);
        EXPECT(gbc.pc(), 0x334b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 018C
        gbc.setState(0x95a4, 0xd844, 0x9c90, 0x3f37, 0xc27b, 0x92b3, 0x0, 0x1);
        gbc.writeMem(0x95a4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd844);
        EXPECT(gbc.pc(), 0x95a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95a4), 0xcb);
        EXPECT(gbc.readMem(0x95a5), 0x38);
        // CB 38 018D
        gbc.setState(0x659d, 0xef0f, 0xd600, 0x6d2a, 0xf97e, 0xe343, 0x1, 0x0);
        gbc.writeMem(0x659d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xef0f);
        EXPECT(gbc.pc(), 0x659f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 018E
        gbc.setState(0x71ee, 0x9e24, 0xfdf0, 0xeca3, 0x25b7, 0x6324, 0x0, 0x1);
        gbc.writeMem(0x71ee, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9e24);
        EXPECT(gbc.pc(), 0x71f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 018F
        gbc.setState(0x2cd4, 0xfe93, 0xb3b0, 0x3a9a, 0x794b, 0x7903, 0x1, 0x0);
        gbc.writeMem(0x2cd4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfe93);
        EXPECT(gbc.pc(), 0x2cd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0190
        gbc.setState(0x741d, 0x1849, 0xf580, 0xf143, 0xb064, 0x5dae, 0x0, 0x0);
        gbc.writeMem(0x741d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1849);
        EXPECT(gbc.pc(), 0x741f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0191
        gbc.setState(0xe68, 0x7194, 0x4f50, 0xd16c, 0xff2, 0x4bb1, 0x0, 0x0);
        gbc.writeMem(0xe68, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7194);
        EXPECT(gbc.pc(), 0xe6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0192
        gbc.setState(0x3f41, 0x964e, 0xb7c0, 0x42c9, 0xc8e1, 0x5ae2, 0x0, 0x1);
        gbc.writeMem(0x3f41, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x964e);
        EXPECT(gbc.pc(), 0x3f43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0193
        gbc.setState(0x4e9e, 0xe402, 0x8680, 0x255d, 0xc052, 0xfdd, 0x0, 0x1);
        gbc.writeMem(0x4e9e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe402);
        EXPECT(gbc.pc(), 0x4ea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0194
        gbc.setState(0xbcd1, 0x5f33, 0xeb50, 0xab44, 0x597b, 0xd6ee, 0x0, 0x0);
        gbc.writeMem(0xbcd1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5f33);
        EXPECT(gbc.pc(), 0xbcd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd1), 0xcb);
        EXPECT(gbc.readMem(0xbcd2), 0x38);
        // CB 38 0195
        gbc.setState(0x30f7, 0xd33e, 0x81c0, 0x76a9, 0x66f9, 0x152c, 0x1, 0x0);
        gbc.writeMem(0x30f7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd33e);
        EXPECT(gbc.pc(), 0x30f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0196
        gbc.setState(0x928a, 0x254f, 0xde10, 0x1445, 0x517d, 0xbd50, 0x0, 0x0);
        gbc.writeMem(0x928a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x254f);
        EXPECT(gbc.pc(), 0x928c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x928a), 0xcb);
        EXPECT(gbc.readMem(0x928b), 0x38);
        // CB 38 0197
        gbc.setState(0x411e, 0x3e91, 0x6200, 0x478a, 0x4237, 0xca6d, 0x1, 0x0);
        gbc.writeMem(0x411e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3e91);
        EXPECT(gbc.pc(), 0x4120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0198
        gbc.setState(0x5145, 0xb89c, 0xe960, 0x7533, 0xa861, 0x4cb9, 0x0, 0x1);
        gbc.writeMem(0x5145, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb89c);
        EXPECT(gbc.pc(), 0x5147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0199
        gbc.setState(0x6690, 0xda92, 0x6f80, 0x690f, 0x8ce9, 0xa40b, 0x1, 0x1);
        gbc.writeMem(0x6690, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xda92);
        EXPECT(gbc.pc(), 0x6692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 019A
        gbc.setState(0x691a, 0x9db6, 0xf10, 0x2054, 0xb305, 0xc0ea, 0x0, 0x1);
        gbc.writeMem(0x691a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9db6);
        EXPECT(gbc.pc(), 0x691c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 019B
        gbc.setState(0x74df, 0x32d0, 0x6a40, 0x3e0a, 0x2d21, 0x917d, 0x0, 0x1);
        gbc.writeMem(0x74df, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x32d0);
        EXPECT(gbc.pc(), 0x74e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 019C
        gbc.setState(0x4651, 0x1db3, 0xf4e0, 0xf2da, 0x744c, 0x9bb7, 0x0, 0x0);
        gbc.writeMem(0x4651, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1db3);
        EXPECT(gbc.pc(), 0x4653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 019D
        gbc.setState(0xe243, 0x3cb5, 0x5e00, 0xec2a, 0x3030, 0x22c9, 0x0, 0x1);
        gbc.writeMem(0xe243, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3cb5);
        EXPECT(gbc.pc(), 0xe245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe243), 0xcb);
        EXPECT(gbc.readMem(0xe244), 0x38);
        // CB 38 019E
        gbc.setState(0xbe51, 0x30f0, 0x8150, 0xbd6e, 0x6cb7, 0x5cff, 0x0, 0x0);
        gbc.writeMem(0xbe51, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x30f0);
        EXPECT(gbc.pc(), 0xbe53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe51), 0xcb);
        EXPECT(gbc.readMem(0xbe52), 0x38);
        // CB 38 019F
        gbc.setState(0x4272, 0x510b, 0xabc0, 0x205e, 0x93a2, 0xae93, 0x0, 0x0);
        gbc.writeMem(0x4272, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x510b);
        EXPECT(gbc.pc(), 0x4274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01A0
        gbc.setState(0xc698, 0x3847, 0x5c40, 0x96ab, 0x7661, 0xc68b, 0x0, 0x1);
        gbc.writeMem(0xc698, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3847);
        EXPECT(gbc.pc(), 0xc69a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc698), 0xcb);
        EXPECT(gbc.readMem(0xc699), 0x38);
        // CB 38 01A1
        gbc.setState(0x5e72, 0x4902, 0xad70, 0x525, 0xad2b, 0xc058, 0x0, 0x0);
        gbc.writeMem(0x5e72, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4902);
        EXPECT(gbc.pc(), 0x5e74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01A2
        gbc.setState(0x98e9, 0x50de, 0x2a50, 0x8a78, 0xcfa1, 0x682f, 0x0, 0x0);
        gbc.writeMem(0x98e9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x50de);
        EXPECT(gbc.pc(), 0x98eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e9), 0xcb);
        EXPECT(gbc.readMem(0x98ea), 0x38);
        // CB 38 01A3
        gbc.setState(0xb1dc, 0x7bc9, 0x2780, 0xdd26, 0x1683, 0x6e18, 0x0, 0x0);
        gbc.writeMem(0xb1dc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7bc9);
        EXPECT(gbc.pc(), 0xb1de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1dc), 0xcb);
        EXPECT(gbc.readMem(0xb1dd), 0x38);
        // CB 38 01A4
        gbc.setState(0x88cc, 0x3bb6, 0xdf60, 0x308c, 0x120c, 0x31cb, 0x0, 0x0);
        gbc.writeMem(0x88cc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3bb6);
        EXPECT(gbc.pc(), 0x88ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88cc), 0xcb);
        EXPECT(gbc.readMem(0x88cd), 0x38);
        // CB 38 01A5
        gbc.setState(0x678b, 0xc126, 0xf840, 0xf0d3, 0xfe97, 0x3346, 0x1, 0x0);
        gbc.writeMem(0x678b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc126);
        EXPECT(gbc.pc(), 0x678d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01A6
        gbc.setState(0x5190, 0xa801, 0xfa90, 0xb02e, 0x2b35, 0x132, 0x0, 0x0);
        gbc.writeMem(0x5190, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa801);
        EXPECT(gbc.pc(), 0x5192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01A7
        gbc.setState(0xe578, 0xad4b, 0x5320, 0x7125, 0x9516, 0xd858, 0x1, 0x1);
        gbc.writeMem(0xe578, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xad4b);
        EXPECT(gbc.pc(), 0xe57a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe578), 0xcb);
        EXPECT(gbc.readMem(0xe579), 0x38);
        // CB 38 01A8
        gbc.setState(0xa28e, 0xbe0c, 0xc860, 0xd24a, 0xa4f6, 0xace8, 0x0, 0x0);
        gbc.writeMem(0xa28e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbe0c);
        EXPECT(gbc.pc(), 0xa290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa28e), 0xcb);
        EXPECT(gbc.readMem(0xa28f), 0x38);
        // CB 38 01A9
        gbc.setState(0xe097, 0xfa85, 0x1020, 0x8083, 0x197f, 0xdd2d, 0x0, 0x0);
        gbc.writeMem(0xe097, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xfa85);
        EXPECT(gbc.pc(), 0xe099);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe097), 0xcb);
        EXPECT(gbc.readMem(0xe098), 0x38);
        // CB 38 01AA
        gbc.setState(0xc1ad, 0x6b8a, 0x4580, 0x286b, 0xacb8, 0xc1f8, 0x0, 0x1);
        gbc.writeMem(0xc1ad, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6b8a);
        EXPECT(gbc.pc(), 0xc1af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ad), 0xcb);
        EXPECT(gbc.readMem(0xc1ae), 0x38);
        // CB 38 01AB
        gbc.setState(0x5fa2, 0x77f7, 0x6470, 0xf38a, 0xa690, 0xa6f2, 0x1, 0x0);
        gbc.writeMem(0x5fa2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x77f7);
        EXPECT(gbc.pc(), 0x5fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01AC
        gbc.setState(0x9544, 0xf435, 0xa20, 0xb67f, 0x6e86, 0xbed0, 0x1, 0x0);
        gbc.writeMem(0x9544, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf435);
        EXPECT(gbc.pc(), 0x9546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9544), 0xcb);
        EXPECT(gbc.readMem(0x9545), 0x38);
        // CB 38 01AD
        gbc.setState(0xef47, 0x7da5, 0x2870, 0x973e, 0x7963, 0xd7d1, 0x1, 0x0);
        gbc.writeMem(0xef47, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7da5);
        EXPECT(gbc.pc(), 0xef49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef47), 0xcb);
        EXPECT(gbc.readMem(0xef48), 0x38);
        // CB 38 01AE
        gbc.setState(0x5330, 0x8f44, 0x4f10, 0x6c92, 0x53ef, 0x9fa, 0x0, 0x1);
        gbc.writeMem(0x5330, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8f44);
        EXPECT(gbc.pc(), 0x5332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01AF
        gbc.setState(0xda8, 0xcac2, 0xc0d0, 0x21c6, 0xf9ec, 0x98e3, 0x0, 0x1);
        gbc.writeMem(0xda8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcac2);
        EXPECT(gbc.pc(), 0xdaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01B0
        gbc.setState(0x93e9, 0x705f, 0xd0b0, 0xb64d, 0xe66f, 0x4d3c, 0x0, 0x1);
        gbc.writeMem(0x93e9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x705f);
        EXPECT(gbc.pc(), 0x93eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e9), 0xcb);
        EXPECT(gbc.readMem(0x93ea), 0x38);
        // CB 38 01B1
        gbc.setState(0x66ff, 0x53a8, 0x980, 0x5a88, 0xada2, 0x95ad, 0x0, 0x0);
        gbc.writeMem(0x66ff, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x53a8);
        EXPECT(gbc.pc(), 0x6701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01B2
        gbc.setState(0xaa2d, 0xb624, 0xbf0, 0x3ab6, 0xd7b1, 0x8a0f, 0x0, 0x0);
        gbc.writeMem(0xaa2d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb624);
        EXPECT(gbc.pc(), 0xaa2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa2d), 0xcb);
        EXPECT(gbc.readMem(0xaa2e), 0x38);
        // CB 38 01B3
        gbc.setState(0xe6fa, 0xddc, 0x96a0, 0x804f, 0x6926, 0xbea1, 0x0, 0x0);
        gbc.writeMem(0xe6fa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xddc);
        EXPECT(gbc.pc(), 0xe6fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6fa), 0xcb);
        EXPECT(gbc.readMem(0xe6fb), 0x38);
        // CB 38 01B4
        gbc.setState(0x90ea, 0xf851, 0x54a0, 0x81ab, 0xf3d0, 0x6345, 0x1, 0x0);
        gbc.writeMem(0x90ea, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf851);
        EXPECT(gbc.pc(), 0x90ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ea), 0xcb);
        EXPECT(gbc.readMem(0x90eb), 0x38);
        // CB 38 01B5
        gbc.setState(0xf3a, 0xca8, 0x34f0, 0xe8b0, 0x6f9d, 0x51ec, 0x0, 0x0);
        gbc.writeMem(0xf3a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xca8);
        EXPECT(gbc.pc(), 0xf3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01B6
        gbc.setState(0x2099, 0xd473, 0x400, 0x6c6d, 0xe298, 0x92a7, 0x1, 0x0);
        gbc.writeMem(0x2099, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd473);
        EXPECT(gbc.pc(), 0x209b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01B7
        gbc.setState(0x1bf7, 0xebad, 0xceb0, 0x4e2e, 0x66ff, 0x1812, 0x1, 0x0);
        gbc.writeMem(0x1bf7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xebad);
        EXPECT(gbc.pc(), 0x1bf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01B8
        gbc.setState(0x7f54, 0x6913, 0xa3d0, 0xdc1b, 0x4c1d, 0x865b, 0x1, 0x0);
        gbc.writeMem(0x7f54, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6913);
        EXPECT(gbc.pc(), 0x7f56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01B9
        gbc.setState(0x41b6, 0x368d, 0xbd60, 0xbd8a, 0xb971, 0xb1c4, 0x1, 0x1);
        gbc.writeMem(0x41b6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x368d);
        EXPECT(gbc.pc(), 0x41b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01BA
        gbc.setState(0xecf6, 0xb649, 0xf570, 0x3f7e, 0x458f, 0x2dd1, 0x0, 0x0);
        gbc.writeMem(0xecf6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb649);
        EXPECT(gbc.pc(), 0xecf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecf6), 0xcb);
        EXPECT(gbc.readMem(0xecf7), 0x38);
        // CB 38 01BB
        gbc.setState(0xac51, 0x2ec3, 0x1450, 0x9b53, 0x87f6, 0x4cd8, 0x1, 0x1);
        gbc.writeMem(0xac51, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2ec3);
        EXPECT(gbc.pc(), 0xac53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac51), 0xcb);
        EXPECT(gbc.readMem(0xac52), 0x38);
        // CB 38 01BC
        gbc.setState(0xbd74, 0x2272, 0x78f0, 0x810e, 0xde64, 0x11e, 0x1, 0x0);
        gbc.writeMem(0xbd74, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2272);
        EXPECT(gbc.pc(), 0xbd76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd74), 0xcb);
        EXPECT(gbc.readMem(0xbd75), 0x38);
        // CB 38 01BD
        gbc.setState(0x6be5, 0xef3, 0x5530, 0xbb48, 0x2125, 0x2be7, 0x0, 0x1);
        gbc.writeMem(0x6be5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xef3);
        EXPECT(gbc.pc(), 0x6be7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01BE
        gbc.setState(0xf33, 0x7914, 0xd0b0, 0x471b, 0xaa51, 0xaa1, 0x0, 0x0);
        gbc.writeMem(0xf33, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7914);
        EXPECT(gbc.pc(), 0xf35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01BF
        gbc.setState(0x1636, 0x6446, 0xd760, 0xda3a, 0x8890, 0xbf97, 0x0, 0x0);
        gbc.writeMem(0x1636, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6446);
        EXPECT(gbc.pc(), 0x1638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01C0
        gbc.setState(0xbc3b, 0xfd84, 0xfc70, 0xe1e, 0x631c, 0x285f, 0x0, 0x1);
        gbc.writeMem(0xbc3b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfd84);
        EXPECT(gbc.pc(), 0xbc3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc3b), 0xcb);
        EXPECT(gbc.readMem(0xbc3c), 0x38);
        // CB 38 01C1
        gbc.setState(0x9985, 0x1a6d, 0x56f0, 0xa95c, 0xe29a, 0x8297, 0x1, 0x1);
        gbc.writeMem(0x9985, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1a6d);
        EXPECT(gbc.pc(), 0x9987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9985), 0xcb);
        EXPECT(gbc.readMem(0x9986), 0x38);
        // CB 38 01C2
        gbc.setState(0x117d, 0x7804, 0xe150, 0xf43a, 0xd5e5, 0x7af1, 0x0, 0x0);
        gbc.writeMem(0x117d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7804);
        EXPECT(gbc.pc(), 0x117f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01C3
        gbc.setState(0x3431, 0x1b2c, 0xe520, 0xe0c3, 0x2f71, 0x680d, 0x0, 0x0);
        gbc.writeMem(0x3431, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1b2c);
        EXPECT(gbc.pc(), 0x3433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01C4
        gbc.setState(0xe98f, 0xeeeb, 0xb2c0, 0x86ce, 0x91be, 0x4697, 0x0, 0x1);
        gbc.writeMem(0xe98f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xeeeb);
        EXPECT(gbc.pc(), 0xe991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe98f), 0xcb);
        EXPECT(gbc.readMem(0xe990), 0x38);
        // CB 38 01C6
        gbc.setState(0x131d, 0x8a03, 0x69f0, 0x922f, 0x2ef4, 0x794b, 0x0, 0x0);
        gbc.writeMem(0x131d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8a03);
        EXPECT(gbc.pc(), 0x131f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01C7
        gbc.setState(0x12ee, 0xdd99, 0x1670, 0x903e, 0x6f37, 0xd436, 0x1, 0x1);
        gbc.writeMem(0x12ee, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xdd99);
        EXPECT(gbc.pc(), 0x12f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01C8
        gbc.setState(0x2228, 0x8823, 0xb110, 0xfa77, 0x79a9, 0xacda, 0x0, 0x0);
        gbc.writeMem(0x2228, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8823);
        EXPECT(gbc.pc(), 0x222a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01C9
        gbc.setState(0xef68, 0x5ca7, 0x5f60, 0x4f7e, 0x3991, 0x795a, 0x0, 0x0);
        gbc.writeMem(0xef68, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5ca7);
        EXPECT(gbc.pc(), 0xef6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef68), 0xcb);
        EXPECT(gbc.readMem(0xef69), 0x38);
        // CB 38 01CA
        gbc.setState(0x856c, 0x202d, 0x4390, 0xc0c2, 0xd0b0, 0x4866, 0x0, 0x0);
        gbc.writeMem(0x856c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x202d);
        EXPECT(gbc.pc(), 0x856e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x856c), 0xcb);
        EXPECT(gbc.readMem(0x856d), 0x38);
        // CB 38 01CB
        gbc.setState(0xa0b6, 0x6edb, 0x8020, 0xdb5c, 0x91ae, 0xd164, 0x0, 0x1);
        gbc.writeMem(0xa0b6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6edb);
        EXPECT(gbc.pc(), 0xa0b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0b6), 0xcb);
        EXPECT(gbc.readMem(0xa0b7), 0x38);
        // CB 38 01CC
        gbc.setState(0xce6c, 0x398d, 0x92c0, 0x4a05, 0x51db, 0x62c4, 0x1, 0x0);
        gbc.writeMem(0xce6c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x398d);
        EXPECT(gbc.pc(), 0xce6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce6c), 0xcb);
        EXPECT(gbc.readMem(0xce6d), 0x38);
        // CB 38 01CD
        gbc.setState(0xc946, 0x5089, 0xdff0, 0x294, 0x406c, 0xde83, 0x1, 0x0);
        gbc.writeMem(0xc946, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5089);
        EXPECT(gbc.pc(), 0xc948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc946), 0xcb);
        EXPECT(gbc.readMem(0xc947), 0x38);
        // CB 38 01CE
        gbc.setState(0x941a, 0xb5ab, 0xc490, 0x8aa0, 0x65, 0x4ac5, 0x0, 0x1);
        gbc.writeMem(0x941a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb5ab);
        EXPECT(gbc.pc(), 0x941c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x941a), 0xcb);
        EXPECT(gbc.readMem(0x941b), 0x38);
        // CB 38 01CF
        gbc.setState(0xdd0a, 0x4ec3, 0x9150, 0x67bc, 0xae84, 0xf2a3, 0x0, 0x0);
        gbc.writeMem(0xdd0a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4ec3);
        EXPECT(gbc.pc(), 0xdd0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd0a), 0xcb);
        EXPECT(gbc.readMem(0xdd0b), 0x38);
        // CB 38 01D0
        gbc.setState(0x128a, 0x10b2, 0x2e50, 0x1526, 0xcb9c, 0x2fd1, 0x0, 0x1);
        gbc.writeMem(0x128a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x10b2);
        EXPECT(gbc.pc(), 0x128c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01D1
        gbc.setState(0xaaa0, 0x61c6, 0xe50, 0xa2cd, 0xb20, 0x3ca1, 0x0, 0x1);
        gbc.writeMem(0xaaa0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x61c6);
        EXPECT(gbc.pc(), 0xaaa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa0), 0xcb);
        EXPECT(gbc.readMem(0xaaa1), 0x38);
        // CB 38 01D2
        gbc.setState(0xd092, 0xbde8, 0x61c0, 0x98f4, 0x8efc, 0x1227, 0x1, 0x1);
        gbc.writeMem(0xd092, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbde8);
        EXPECT(gbc.pc(), 0xd094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd092), 0xcb);
        EXPECT(gbc.readMem(0xd093), 0x38);
        // CB 38 01D3
        gbc.setState(0x150d, 0x47b3, 0x4b30, 0x7b2f, 0xeb49, 0xeeac, 0x1, 0x0);
        gbc.writeMem(0x150d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x47b3);
        EXPECT(gbc.pc(), 0x150f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01D4
        gbc.setState(0x5058, 0x5ef9, 0xb3e0, 0xaa78, 0x5da, 0xe048, 0x0, 0x0);
        gbc.writeMem(0x5058, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5ef9);
        EXPECT(gbc.pc(), 0x505a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01D5
        gbc.setState(0x5c62, 0xf071, 0xaa40, 0xa64e, 0x56f4, 0xcb08, 0x1, 0x0);
        gbc.writeMem(0x5c62, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf071);
        EXPECT(gbc.pc(), 0x5c64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01D6
        gbc.setState(0x80fe, 0x2477, 0x5b20, 0x40cf, 0x176e, 0x5c08, 0x0, 0x1);
        gbc.writeMem(0x80fe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2477);
        EXPECT(gbc.pc(), 0x8100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80fe), 0xcb);
        EXPECT(gbc.readMem(0x80ff), 0x38);
        // CB 38 01D7
        gbc.setState(0x4114, 0x40b8, 0x24a0, 0x4374, 0xbb64, 0xf9b3, 0x0, 0x0);
        gbc.writeMem(0x4114, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x40b8);
        EXPECT(gbc.pc(), 0x4116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01D9
        gbc.setState(0x6485, 0xd8d0, 0xec50, 0xd43, 0x425f, 0x28e9, 0x1, 0x0);
        gbc.writeMem(0x6485, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd8d0);
        EXPECT(gbc.pc(), 0x6487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01DB
        gbc.setState(0x229a, 0xee83, 0x5e0, 0x400a, 0xadb2, 0xa421, 0x1, 0x1);
        gbc.writeMem(0x229a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xee83);
        EXPECT(gbc.pc(), 0x229c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01DC
        gbc.setState(0x2e65, 0xd9ff, 0x3e40, 0x4919, 0x3fc3, 0x6180, 0x1, 0x1);
        gbc.writeMem(0x2e65, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd9ff);
        EXPECT(gbc.pc(), 0x2e67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01DD
        gbc.setState(0x19eb, 0x1348, 0xd210, 0xf05, 0x2843, 0x5f2, 0x1, 0x1);
        gbc.writeMem(0x19eb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1348);
        EXPECT(gbc.pc(), 0x19ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01DE
        gbc.setState(0x7e82, 0xa211, 0xc760, 0xd394, 0x40ce, 0x55d8, 0x1, 0x0);
        gbc.writeMem(0x7e82, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa211);
        EXPECT(gbc.pc(), 0x7e84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01DF
        gbc.setState(0xc0fe, 0x4b04, 0x6270, 0x8297, 0xff5a, 0x12b9, 0x0, 0x0);
        gbc.writeMem(0xc0fe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4b04);
        EXPECT(gbc.pc(), 0xc100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0fe), 0xcb);
        EXPECT(gbc.readMem(0xc0ff), 0x38);
        // CB 38 01E0
        gbc.setState(0xa10e, 0x873, 0x48a0, 0x42e1, 0x4791, 0x644a, 0x0, 0x0);
        gbc.writeMem(0xa10e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x873);
        EXPECT(gbc.pc(), 0xa110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa10e), 0xcb);
        EXPECT(gbc.readMem(0xa10f), 0x38);
        // CB 38 01E1
        gbc.setState(0x6c9e, 0xf5ed, 0xd3e0, 0x11d1, 0x6ebf, 0xd540, 0x0, 0x1);
        gbc.writeMem(0x6c9e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf5ed);
        EXPECT(gbc.pc(), 0x6ca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01E2
        gbc.setState(0x7c92, 0xc51, 0xe60, 0xf7e5, 0xc732, 0x947e, 0x0, 0x0);
        gbc.writeMem(0x7c92, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc51);
        EXPECT(gbc.pc(), 0x7c94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01E3
        gbc.setState(0x473a, 0x229, 0xec00, 0x7ed2, 0x9fb5, 0x234f, 0x0, 0x0);
        gbc.writeMem(0x473a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x229);
        EXPECT(gbc.pc(), 0x473c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01E4
        gbc.setState(0xba0a, 0xf6c5, 0x36d0, 0x7d84, 0x16fc, 0x889f, 0x0, 0x0);
        gbc.writeMem(0xba0a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf6c5);
        EXPECT(gbc.pc(), 0xba0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0a), 0xcb);
        EXPECT(gbc.readMem(0xba0b), 0x38);
        // CB 38 01E5
        gbc.setState(0xd937, 0x4e2b, 0xb8a0, 0x45c8, 0xeb4d, 0x2283, 0x0, 0x1);
        gbc.writeMem(0xd937, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4e2b);
        EXPECT(gbc.pc(), 0xd939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd937), 0xcb);
        EXPECT(gbc.readMem(0xd938), 0x38);
        // CB 38 01E6
        gbc.setState(0xb641, 0x1c44, 0xc300, 0xd4b7, 0xa23e, 0x2e95, 0x0, 0x0);
        gbc.writeMem(0xb641, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1c44);
        EXPECT(gbc.pc(), 0xb643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb641), 0xcb);
        EXPECT(gbc.readMem(0xb642), 0x38);
        // CB 38 01E7
        gbc.setState(0xa4a, 0xee9c, 0xf890, 0xa43c, 0xa4d1, 0x83fa, 0x1, 0x0);
        gbc.writeMem(0xa4a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xee9c);
        EXPECT(gbc.pc(), 0xa4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01E8
        gbc.setState(0xea8f, 0x904a, 0x8be0, 0x1f0c, 0x675f, 0x9c6e, 0x0, 0x1);
        gbc.writeMem(0xea8f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x904a);
        EXPECT(gbc.pc(), 0xea91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea8f), 0xcb);
        EXPECT(gbc.readMem(0xea90), 0x38);
        // CB 38 01E9
        gbc.setState(0xb37e, 0x5d58, 0x4ee0, 0xbe96, 0x8ebb, 0xac8a, 0x0, 0x0);
        gbc.writeMem(0xb37e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5d58);
        EXPECT(gbc.pc(), 0xb380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb37e), 0xcb);
        EXPECT(gbc.readMem(0xb37f), 0x38);
        // CB 38 01EA
        gbc.setState(0x1bdf, 0x1cf6, 0x2930, 0x2032, 0xd9de, 0x8c95, 0x0, 0x0);
        gbc.writeMem(0x1bdf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1cf6);
        EXPECT(gbc.pc(), 0x1be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01EB
        gbc.setState(0xa270, 0xcacf, 0xa060, 0xadb8, 0x6202, 0xb524, 0x0, 0x1);
        gbc.writeMem(0xa270, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcacf);
        EXPECT(gbc.pc(), 0xa272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa270), 0xcb);
        EXPECT(gbc.readMem(0xa271), 0x38);
        // CB 38 01EC
        gbc.setState(0x6afb, 0xa065, 0xd0a0, 0x1203, 0xbce9, 0x5770, 0x1, 0x0);
        gbc.writeMem(0x6afb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa065);
        EXPECT(gbc.pc(), 0x6afd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01ED
        gbc.setState(0x813, 0x7aa4, 0x9a50, 0x737f, 0x4252, 0x26eb, 0x0, 0x1);
        gbc.writeMem(0x813, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7aa4);
        EXPECT(gbc.pc(), 0x815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01EE
        gbc.setState(0xb169, 0x322d, 0xa2b0, 0x909, 0x10be, 0x1cb0, 0x1, 0x0);
        gbc.writeMem(0xb169, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x322d);
        EXPECT(gbc.pc(), 0xb16b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb169), 0xcb);
        EXPECT(gbc.readMem(0xb16a), 0x38);
        // CB 38 01EF
        gbc.setState(0xcc0, 0x6687, 0x1010, 0x574d, 0x95d9, 0xbf69, 0x1, 0x0);
        gbc.writeMem(0xcc0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6687);
        EXPECT(gbc.pc(), 0xcc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01F0
        gbc.setState(0x3e70, 0x209b, 0xd710, 0x74c8, 0xa49b, 0x67f8, 0x0, 0x1);
        gbc.writeMem(0x3e70, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x209b);
        EXPECT(gbc.pc(), 0x3e72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01F1
        gbc.setState(0xb379, 0x2c3b, 0x3a60, 0xe4a0, 0xc687, 0x5e10, 0x0, 0x0);
        gbc.writeMem(0xb379, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2c3b);
        EXPECT(gbc.pc(), 0xb37b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb379), 0xcb);
        EXPECT(gbc.readMem(0xb37a), 0x38);
        // CB 38 01F2
        gbc.setState(0x6061, 0x4676, 0xea00, 0x705d, 0xffd6, 0xd2e0, 0x0, 0x0);
        gbc.writeMem(0x6061, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4676);
        EXPECT(gbc.pc(), 0x6063);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01F3
        gbc.setState(0x69c2, 0x18c2, 0xede0, 0x2dd4, 0x76d0, 0x120e, 0x1, 0x0);
        gbc.writeMem(0x69c2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x18c2);
        EXPECT(gbc.pc(), 0x69c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01F4
        gbc.setState(0x52b7, 0xb1bb, 0x1ba0, 0xc104, 0x986c, 0x7deb, 0x1, 0x0);
        gbc.writeMem(0x52b7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb1bb);
        EXPECT(gbc.pc(), 0x52b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01F5
        gbc.setState(0x3b49, 0xf52, 0x8b00, 0x7051, 0x9e68, 0x50e6, 0x0, 0x0);
        gbc.writeMem(0x3b49, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf52);
        EXPECT(gbc.pc(), 0x3b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01F6
        gbc.setState(0x77a8, 0xf591, 0xa760, 0x3f41, 0x385, 0x4069, 0x0, 0x1);
        gbc.writeMem(0x77a8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf591);
        EXPECT(gbc.pc(), 0x77aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01F7
        gbc.setState(0xb9ef, 0x90f3, 0x5600, 0xaff6, 0xf32, 0xa3fa, 0x0, 0x0);
        gbc.writeMem(0xb9ef, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x90f3);
        EXPECT(gbc.pc(), 0xb9f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ef), 0xcb);
        EXPECT(gbc.readMem(0xb9f0), 0x38);
        // CB 38 01F8
        gbc.setState(0x680b, 0x7d74, 0x1fd0, 0xd939, 0x37f6, 0x8154, 0x1, 0x0);
        gbc.writeMem(0x680b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7d74);
        EXPECT(gbc.pc(), 0x680d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01F9
        gbc.setState(0x4ebd, 0xb41a, 0x5a50, 0x2f75, 0xf31a, 0xf330, 0x0, 0x1);
        gbc.writeMem(0x4ebd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb41a);
        EXPECT(gbc.pc(), 0x4ebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01FA
        gbc.setState(0x6d7f, 0x450a, 0xf350, 0x1825, 0xc288, 0x6dae, 0x0, 0x1);
        gbc.writeMem(0x6d7f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x450a);
        EXPECT(gbc.pc(), 0x6d81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 01FB
        gbc.setState(0x78fa, 0x5db9, 0xed0, 0x4379, 0xb8f7, 0xc10a, 0x0, 0x1);
        gbc.writeMem(0x78fa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x5db9);
        EXPECT(gbc.pc(), 0x78fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01FC
        gbc.setState(0x99fd, 0xf89b, 0x56a0, 0x4559, 0xc8bb, 0x1027, 0x1, 0x0);
        gbc.writeMem(0x99fd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf89b);
        EXPECT(gbc.pc(), 0x99ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fd), 0xcb);
        EXPECT(gbc.readMem(0x99fe), 0x38);
        // CB 38 01FD
        gbc.setState(0xd33d, 0x57fe, 0xecc0, 0xf2f2, 0x8744, 0x12e0, 0x1, 0x0);
        gbc.writeMem(0xd33d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x57fe);
        EXPECT(gbc.pc(), 0xd33f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd33d), 0xcb);
        EXPECT(gbc.readMem(0xd33e), 0x38);
        // CB 38 01FE
        gbc.setState(0x7947, 0x83da, 0x7e20, 0xc18b, 0xdbd, 0x6f32, 0x1, 0x1);
        gbc.writeMem(0x7947, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x83da);
        EXPECT(gbc.pc(), 0x7949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 01FF
        gbc.setState(0x5f37, 0x8f76, 0xfa60, 0xed40, 0x85f8, 0x46b9, 0x1, 0x0);
        gbc.writeMem(0x5f37, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8f76);
        EXPECT(gbc.pc(), 0x5f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0200
        gbc.setState(0x74c8, 0x158, 0x8c20, 0xbc68, 0x832, 0x8951, 0x1, 0x0);
        gbc.writeMem(0x74c8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x158);
        EXPECT(gbc.pc(), 0x74ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0201
        gbc.setState(0x39f8, 0xc01c, 0x50a0, 0xa96f, 0x4c33, 0xeffa, 0x1, 0x0);
        gbc.writeMem(0x39f8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc01c);
        EXPECT(gbc.pc(), 0x39fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0202
        gbc.setState(0x7e0c, 0xbac9, 0xa8d0, 0x42bc, 0x5170, 0xf7a7, 0x1, 0x0);
        gbc.writeMem(0x7e0c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbac9);
        EXPECT(gbc.pc(), 0x7e0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0203
        gbc.setState(0x8ecb, 0x54b6, 0x2ac0, 0xe13c, 0xe786, 0xd867, 0x0, 0x1);
        gbc.writeMem(0x8ecb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x54b6);
        EXPECT(gbc.pc(), 0x8ecd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ecb), 0xcb);
        EXPECT(gbc.readMem(0x8ecc), 0x38);
        // CB 38 0204
        gbc.setState(0xbf54, 0xbc71, 0xb7b0, 0x63ac, 0xb73f, 0x8227, 0x0, 0x0);
        gbc.writeMem(0xbf54, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbc71);
        EXPECT(gbc.pc(), 0xbf56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf54), 0xcb);
        EXPECT(gbc.readMem(0xbf55), 0x38);
        // CB 38 0205
        gbc.setState(0x759d, 0xf639, 0x2240, 0xeafe, 0xa7ad, 0xdde2, 0x0, 0x1);
        gbc.writeMem(0x759d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf639);
        EXPECT(gbc.pc(), 0x759f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0206
        gbc.setState(0x9bd7, 0xeffb, 0xcca0, 0x5f30, 0x7679, 0xe9ea, 0x0, 0x1);
        gbc.writeMem(0x9bd7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xeffb);
        EXPECT(gbc.pc(), 0x9bd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd7), 0xcb);
        EXPECT(gbc.readMem(0x9bd8), 0x38);
        // CB 38 0207
        gbc.setState(0x42be, 0x6525, 0x78c0, 0xe776, 0xdd29, 0x2bc, 0x1, 0x1);
        gbc.writeMem(0x42be, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6525);
        EXPECT(gbc.pc(), 0x42c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0208
        gbc.setState(0x76, 0x850d, 0x5230, 0x4f2d, 0x797b, 0x26d7, 0x1, 0x1);
        gbc.writeMem(0x76, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x850d);
        EXPECT(gbc.pc(), 0x78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0209
        gbc.setState(0xbf5f, 0x9919, 0x6550, 0x4eff, 0x8bba, 0xede8, 0x0, 0x1);
        gbc.writeMem(0xbf5f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9919);
        EXPECT(gbc.pc(), 0xbf61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf5f), 0xcb);
        EXPECT(gbc.readMem(0xbf60), 0x38);
        // CB 38 020A
        gbc.setState(0x5015, 0x1b33, 0xb30, 0x5415, 0x3584, 0x2b60, 0x1, 0x0);
        gbc.writeMem(0x5015, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1b33);
        EXPECT(gbc.pc(), 0x5017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 020B
        gbc.setState(0x707, 0x79cb, 0x1f10, 0x89af, 0x40e8, 0x17f1, 0x0, 0x1);
        gbc.writeMem(0x707, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x79cb);
        EXPECT(gbc.pc(), 0x709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 020D
        gbc.setState(0x45f4, 0x7096, 0xcc0, 0xe837, 0xff76, 0xd50, 0x1, 0x0);
        gbc.writeMem(0x45f4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7096);
        EXPECT(gbc.pc(), 0x45f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 020E
        gbc.setState(0x2df2, 0x3734, 0x8870, 0xb5c2, 0x687d, 0xbb64, 0x0, 0x1);
        gbc.writeMem(0x2df2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3734);
        EXPECT(gbc.pc(), 0x2df4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 020F
        gbc.setState(0x6b64, 0x74cc, 0x4aa0, 0x3cd3, 0xd32b, 0x78bf, 0x0, 0x1);
        gbc.writeMem(0x6b64, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x74cc);
        EXPECT(gbc.pc(), 0x6b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0210
        gbc.setState(0xffe, 0xd0bd, 0x39f0, 0x7f87, 0xa75d, 0xb039, 0x1, 0x0);
        gbc.writeMem(0xffe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd0bd);
        EXPECT(gbc.pc(), 0x1000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0211
        gbc.setState(0x672, 0xe655, 0x5000, 0x6b4, 0x620f, 0x827c, 0x0, 0x0);
        gbc.writeMem(0x672, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe655);
        EXPECT(gbc.pc(), 0x674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0212
        gbc.setState(0xb077, 0xf316, 0xe690, 0x3bf3, 0x9efd, 0x9f01, 0x0, 0x1);
        gbc.writeMem(0xb077, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf316);
        EXPECT(gbc.pc(), 0xb079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb077), 0xcb);
        EXPECT(gbc.readMem(0xb078), 0x38);
        // CB 38 0214
        gbc.setState(0x1e3a, 0xef35, 0x2a70, 0xa4b3, 0x8090, 0xf8ac, 0x1, 0x0);
        gbc.writeMem(0x1e3a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xef35);
        EXPECT(gbc.pc(), 0x1e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0215
        gbc.setState(0xb510, 0xa9e1, 0x7cf0, 0x1b91, 0x2b48, 0xe81e, 0x0, 0x1);
        gbc.writeMem(0xb510, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa9e1);
        EXPECT(gbc.pc(), 0xb512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb510), 0xcb);
        EXPECT(gbc.readMem(0xb511), 0x38);
        // CB 38 0216
        gbc.setState(0x2cd9, 0xa96d, 0xa1e0, 0xf724, 0x43a5, 0xe36d, 0x0, 0x0);
        gbc.writeMem(0x2cd9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa96d);
        EXPECT(gbc.pc(), 0x2cdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0217
        gbc.setState(0x8d3a, 0x6763, 0x3fc0, 0xfdaa, 0x7504, 0xd0d1, 0x0, 0x0);
        gbc.writeMem(0x8d3a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6763);
        EXPECT(gbc.pc(), 0x8d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d3a), 0xcb);
        EXPECT(gbc.readMem(0x8d3b), 0x38);
        // CB 38 0218
        gbc.setState(0x17a, 0x4288, 0xbcd0, 0xe2b4, 0xf0b6, 0x5bdb, 0x0, 0x0);
        gbc.writeMem(0x17a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4288);
        EXPECT(gbc.pc(), 0x17c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0219
        gbc.setState(0xabfb, 0xfa84, 0x5c20, 0xf325, 0xd179, 0xe96e, 0x0, 0x0);
        gbc.writeMem(0xabfb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfa84);
        EXPECT(gbc.pc(), 0xabfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabfb), 0xcb);
        EXPECT(gbc.readMem(0xabfc), 0x38);
        // CB 38 021A
        gbc.setState(0x3dcb, 0x51f2, 0xdf20, 0xeccc, 0x41a8, 0x2e0, 0x1, 0x0);
        gbc.writeMem(0x3dcb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x51f2);
        EXPECT(gbc.pc(), 0x3dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 021B
        gbc.setState(0xb222, 0x14d1, 0xe0f0, 0xec43, 0xf6b0, 0x7a83, 0x1, 0x1);
        gbc.writeMem(0xb222, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x14d1);
        EXPECT(gbc.pc(), 0xb224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb222), 0xcb);
        EXPECT(gbc.readMem(0xb223), 0x38);
        // CB 38 021C
        gbc.setState(0x6b7f, 0x579b, 0xc880, 0x71b4, 0xb599, 0x5599, 0x0, 0x1);
        gbc.writeMem(0x6b7f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x579b);
        EXPECT(gbc.pc(), 0x6b81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 021D
        gbc.setState(0x2346, 0xff6a, 0xa980, 0xe283, 0xe761, 0xccdb, 0x1, 0x0);
        gbc.writeMem(0x2346, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xff6a);
        EXPECT(gbc.pc(), 0x2348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 021E
        gbc.setState(0x5b14, 0xe06c, 0x1cd0, 0xd2f3, 0xeaec, 0x2b49, 0x0, 0x1);
        gbc.writeMem(0x5b14, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe06c);
        EXPECT(gbc.pc(), 0x5b16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 021F
        gbc.setState(0x865d, 0xbb27, 0x3350, 0x680e, 0xcca3, 0xff3b, 0x1, 0x1);
        gbc.writeMem(0x865d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbb27);
        EXPECT(gbc.pc(), 0x865f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x865d), 0xcb);
        EXPECT(gbc.readMem(0x865e), 0x38);
        // CB 38 0220
        gbc.setState(0x4732, 0x1192, 0xf120, 0xd1c2, 0x3dc4, 0x6f1a, 0x1, 0x0);
        gbc.writeMem(0x4732, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1192);
        EXPECT(gbc.pc(), 0x4734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0222
        gbc.setState(0x5685, 0x9d0e, 0x8eb0, 0xc3f9, 0xc41c, 0x664b, 0x0, 0x0);
        gbc.writeMem(0x5685, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9d0e);
        EXPECT(gbc.pc(), 0x5687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0223
        gbc.setState(0x9cd3, 0x8d70, 0x5690, 0xeb1c, 0x27ab, 0xf97d, 0x1, 0x0);
        gbc.writeMem(0x9cd3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8d70);
        EXPECT(gbc.pc(), 0x9cd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cd3), 0xcb);
        EXPECT(gbc.readMem(0x9cd4), 0x38);
        // CB 38 0224
        gbc.setState(0x2670, 0xf7cb, 0x6530, 0x34bb, 0xfd49, 0xa6e9, 0x0, 0x1);
        gbc.writeMem(0x2670, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf7cb);
        EXPECT(gbc.pc(), 0x2672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0225
        gbc.setState(0x3dc6, 0x1a5a, 0x590, 0x8b9d, 0xd3b1, 0x83e9, 0x1, 0x1);
        gbc.writeMem(0x3dc6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1a5a);
        EXPECT(gbc.pc(), 0x3dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0226
        gbc.setState(0x8042, 0x31eb, 0xb790, 0x5cde, 0xa249, 0xc9ae, 0x0, 0x0);
        gbc.writeMem(0x8042, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x31eb);
        EXPECT(gbc.pc(), 0x8044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8042), 0xcb);
        EXPECT(gbc.readMem(0x8043), 0x38);
        // CB 38 0227
        gbc.setState(0xa711, 0xa66b, 0x7230, 0xb2d5, 0x4a52, 0x7752, 0x1, 0x1);
        gbc.writeMem(0xa711, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa66b);
        EXPECT(gbc.pc(), 0xa713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa711), 0xcb);
        EXPECT(gbc.readMem(0xa712), 0x38);
        // CB 38 0228
        gbc.setState(0xaa18, 0xb71a, 0x4a70, 0x5b80, 0xab90, 0x66c0, 0x1, 0x0);
        gbc.writeMem(0xaa18, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb71a);
        EXPECT(gbc.pc(), 0xaa1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa18), 0xcb);
        EXPECT(gbc.readMem(0xaa19), 0x38);
        // CB 38 0229
        gbc.setState(0x3b65, 0x374d, 0xd370, 0xd4e4, 0x403f, 0x172f, 0x0, 0x0);
        gbc.writeMem(0x3b65, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x374d);
        EXPECT(gbc.pc(), 0x3b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 022A
        gbc.setState(0x2db0, 0xfb9b, 0xe450, 0x9ca, 0xf205, 0x4828, 0x0, 0x0);
        gbc.writeMem(0x2db0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xfb9b);
        EXPECT(gbc.pc(), 0x2db2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 022B
        gbc.setState(0x5f01, 0xd804, 0xf280, 0xc5e1, 0xdee, 0xa6cf, 0x0, 0x1);
        gbc.writeMem(0x5f01, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd804);
        EXPECT(gbc.pc(), 0x5f03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 022C
        gbc.setState(0xa44, 0x1c9e, 0xf590, 0x3043, 0xb1d5, 0xee62, 0x0, 0x0);
        gbc.writeMem(0xa44, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1c9e);
        EXPECT(gbc.pc(), 0xa46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 022D
        gbc.setState(0x9bc7, 0xb27c, 0x14b0, 0x9a55, 0xe57d, 0x15fe, 0x1, 0x1);
        gbc.writeMem(0x9bc7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb27c);
        EXPECT(gbc.pc(), 0x9bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bc7), 0xcb);
        EXPECT(gbc.readMem(0x9bc8), 0x38);
        // CB 38 022E
        gbc.setState(0x688f, 0xd5a9, 0x59d0, 0x94f6, 0xb5a8, 0xd75f, 0x0, 0x0);
        gbc.writeMem(0x688f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd5a9);
        EXPECT(gbc.pc(), 0x6891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 022F
        gbc.setState(0xa9ea, 0x414b, 0x8240, 0xd33f, 0xeafb, 0x4b27, 0x1, 0x1);
        gbc.writeMem(0xa9ea, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x414b);
        EXPECT(gbc.pc(), 0xa9ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ea), 0xcb);
        EXPECT(gbc.readMem(0xa9eb), 0x38);
        // CB 38 0230
        gbc.setState(0x9c8, 0xea9d, 0xb810, 0x49bf, 0xda86, 0xa6d, 0x0, 0x0);
        gbc.writeMem(0x9c8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xea9d);
        EXPECT(gbc.pc(), 0x9ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0231
        gbc.setState(0x2d8b, 0x55b, 0xa4b0, 0xad6b, 0x49f2, 0xe50b, 0x1, 0x1);
        gbc.writeMem(0x2d8b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x55b);
        EXPECT(gbc.pc(), 0x2d8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0232
        gbc.setState(0x9ff4, 0xcc32, 0xe450, 0x394e, 0x8f4e, 0x55b4, 0x1, 0x1);
        gbc.writeMem(0x9ff4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xcc32);
        EXPECT(gbc.pc(), 0x9ff6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff4), 0xcb);
        EXPECT(gbc.readMem(0x9ff5), 0x38);
        // CB 38 0233
        gbc.setState(0xea6e, 0x3656, 0x4ea0, 0x189e, 0x652a, 0x19a5, 0x0, 0x0);
        gbc.writeMem(0xea6e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3656);
        EXPECT(gbc.pc(), 0xea70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea6e), 0xcb);
        EXPECT(gbc.readMem(0xea6f), 0x38);
        // CB 38 0234
        gbc.setState(0xdb12, 0x457f, 0x74f0, 0x184a, 0x4521, 0x907c, 0x1, 0x0);
        gbc.writeMem(0xdb12, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x457f);
        EXPECT(gbc.pc(), 0xdb14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb12), 0xcb);
        EXPECT(gbc.readMem(0xdb13), 0x38);
        // CB 38 0235
        gbc.setState(0x5541, 0xfb82, 0x9800, 0xad6e, 0x7439, 0x8bb6, 0x0, 0x0);
        gbc.writeMem(0x5541, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xfb82);
        EXPECT(gbc.pc(), 0x5543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0237
        gbc.setState(0x1a6f, 0xb682, 0x75a0, 0xe884, 0xd492, 0x6d4a, 0x0, 0x0);
        gbc.writeMem(0x1a6f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb682);
        EXPECT(gbc.pc(), 0x1a71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0239
        gbc.setState(0x9a79, 0x43dc, 0x26f0, 0x7325, 0xfb5c, 0x2eaf, 0x1, 0x1);
        gbc.writeMem(0x9a79, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x43dc);
        EXPECT(gbc.pc(), 0x9a7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a79), 0xcb);
        EXPECT(gbc.readMem(0x9a7a), 0x38);
        // CB 38 023A
        gbc.setState(0xd3b3, 0x560b, 0xc730, 0x2799, 0x94c0, 0xe6c1, 0x1, 0x1);
        gbc.writeMem(0xd3b3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x560b);
        EXPECT(gbc.pc(), 0xd3b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b3), 0xcb);
        EXPECT(gbc.readMem(0xd3b4), 0x38);
        // CB 38 023B
        gbc.setState(0x4943, 0x2581, 0xf920, 0xcbbd, 0x10e6, 0x99b6, 0x0, 0x0);
        gbc.writeMem(0x4943, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2581);
        EXPECT(gbc.pc(), 0x4945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 023C
        gbc.setState(0x33cd, 0x58f6, 0x7810, 0xfa6, 0x1490, 0xda41, 0x1, 0x0);
        gbc.writeMem(0x33cd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x58f6);
        EXPECT(gbc.pc(), 0x33cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 023D
        gbc.setState(0xcbc7, 0x65de, 0x9530, 0x1c98, 0x3d09, 0xe67b, 0x0, 0x1);
        gbc.writeMem(0xcbc7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x65de);
        EXPECT(gbc.pc(), 0xcbc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc7), 0xcb);
        EXPECT(gbc.readMem(0xcbc8), 0x38);
        // CB 38 023E
        gbc.setState(0x7ac7, 0x25e6, 0x1bb0, 0x3a82, 0xbe65, 0xe2d6, 0x1, 0x1);
        gbc.writeMem(0x7ac7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x25e6);
        EXPECT(gbc.pc(), 0x7ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 023F
        gbc.setState(0xd051, 0xb35e, 0x66c0, 0x108, 0x94e7, 0x881d, 0x1, 0x1);
        gbc.writeMem(0xd051, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb35e);
        EXPECT(gbc.pc(), 0xd053);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd051), 0xcb);
        EXPECT(gbc.readMem(0xd052), 0x38);
        // CB 38 0240
        gbc.setState(0x8234, 0x3b81, 0x600, 0xaaf9, 0x1956, 0x7a16, 0x1, 0x1);
        gbc.writeMem(0x8234, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3b81);
        EXPECT(gbc.pc(), 0x8236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8234), 0xcb);
        EXPECT(gbc.readMem(0x8235), 0x38);
        // CB 38 0241
        gbc.setState(0x645a, 0xd869, 0x4b80, 0x95ca, 0xa60d, 0x4351, 0x1, 0x0);
        gbc.writeMem(0x645a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd869);
        EXPECT(gbc.pc(), 0x645c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0242
        gbc.setState(0xa29e, 0x377e, 0xa060, 0xb3e5, 0xe523, 0xd9d5, 0x0, 0x0);
        gbc.writeMem(0xa29e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x377e);
        EXPECT(gbc.pc(), 0xa2a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa29e), 0xcb);
        EXPECT(gbc.readMem(0xa29f), 0x38);
        // CB 38 0243
        gbc.setState(0xcb3b, 0xbf42, 0x7650, 0xfb26, 0x1dbb, 0xca3a, 0x1, 0x1);
        gbc.writeMem(0xcb3b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xbf42);
        EXPECT(gbc.pc(), 0xcb3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb3b), 0xcb);
        EXPECT(gbc.readMem(0xcb3c), 0x38);
        // CB 38 0244
        gbc.setState(0xbf0, 0x34fc, 0xc860, 0xcaa, 0xb48c, 0x7afa, 0x1, 0x0);
        gbc.writeMem(0xbf0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x34fc);
        EXPECT(gbc.pc(), 0xbf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0245
        gbc.setState(0x20f7, 0x8c9d, 0xdeb0, 0x3727, 0x8d88, 0x2ad1, 0x0, 0x1);
        gbc.writeMem(0x20f7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8c9d);
        EXPECT(gbc.pc(), 0x20f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0246
        gbc.setState(0x34a6, 0x563f, 0xf050, 0x2097, 0xe47c, 0x17bb, 0x0, 0x1);
        gbc.writeMem(0x34a6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x563f);
        EXPECT(gbc.pc(), 0x34a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0247
        gbc.setState(0x24a7, 0xa636, 0x40, 0xf69, 0xf2d0, 0x76db, 0x1, 0x1);
        gbc.writeMem(0x24a7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa636);
        EXPECT(gbc.pc(), 0x24a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0248
        gbc.setState(0xc356, 0x1819, 0x80a0, 0xa44e, 0xbd03, 0xa490, 0x1, 0x0);
        gbc.writeMem(0xc356, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1819);
        EXPECT(gbc.pc(), 0xc358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc356), 0xcb);
        EXPECT(gbc.readMem(0xc357), 0x38);
        // CB 38 0249
        gbc.setState(0xaa8a, 0x364b, 0xd550, 0x1ad9, 0x6dbe, 0xb61a, 0x1, 0x0);
        gbc.writeMem(0xaa8a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x364b);
        EXPECT(gbc.pc(), 0xaa8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa8a), 0xcb);
        EXPECT(gbc.readMem(0xaa8b), 0x38);
        // CB 38 024A
        gbc.setState(0x2dbf, 0x579e, 0xf10, 0x6835, 0xb975, 0xfc5a, 0x1, 0x1);
        gbc.writeMem(0x2dbf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x579e);
        EXPECT(gbc.pc(), 0x2dc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 024B
        gbc.setState(0xd818, 0x74cb, 0xf6f0, 0x6ebf, 0xf792, 0x8df, 0x0, 0x0);
        gbc.writeMem(0xd818, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x74cb);
        EXPECT(gbc.pc(), 0xd81a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd818), 0xcb);
        EXPECT(gbc.readMem(0xd819), 0x38);
        // CB 38 024C
        gbc.setState(0x96d4, 0x1a3f, 0x7d60, 0xa845, 0x969d, 0x4693, 0x0, 0x0);
        gbc.writeMem(0x96d4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1a3f);
        EXPECT(gbc.pc(), 0x96d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96d4), 0xcb);
        EXPECT(gbc.readMem(0x96d5), 0x38);
        // CB 38 024D
        gbc.setState(0xe0e9, 0x89ec, 0x9460, 0x4356, 0x3bf3, 0x8289, 0x0, 0x1);
        gbc.writeMem(0xe0e9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x89ec);
        EXPECT(gbc.pc(), 0xe0eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0e9), 0xcb);
        EXPECT(gbc.readMem(0xe0ea), 0x38);
        // CB 38 024E
        gbc.setState(0x7868, 0xd391, 0xcd50, 0xfb3, 0x17a8, 0x595d, 0x1, 0x0);
        gbc.writeMem(0x7868, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd391);
        EXPECT(gbc.pc(), 0x786a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 024F
        gbc.setState(0x416, 0xf144, 0x7100, 0x8ed2, 0x1177, 0x6216, 0x1, 0x1);
        gbc.writeMem(0x416, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf144);
        EXPECT(gbc.pc(), 0x418);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0250
        gbc.setState(0x7c84, 0x1540, 0x9ca0, 0x89c4, 0xfdd5, 0xf4f, 0x0, 0x0);
        gbc.writeMem(0x7c84, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1540);
        EXPECT(gbc.pc(), 0x7c86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0251
        gbc.setState(0x7260, 0x51b1, 0x4be0, 0xe279, 0x92c5, 0x41ac, 0x0, 0x0);
        gbc.writeMem(0x7260, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x51b1);
        EXPECT(gbc.pc(), 0x7262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0252
        gbc.setState(0x363c, 0x5387, 0xc910, 0xe16, 0x8b42, 0xe805, 0x0, 0x1);
        gbc.writeMem(0x363c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5387);
        EXPECT(gbc.pc(), 0x363e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0253
        gbc.setState(0x8220, 0x9837, 0x3dd0, 0xdc4e, 0x1931, 0x8c2a, 0x0, 0x0);
        gbc.writeMem(0x8220, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9837);
        EXPECT(gbc.pc(), 0x8222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8220), 0xcb);
        EXPECT(gbc.readMem(0x8221), 0x38);
        // CB 38 0254
        gbc.setState(0x388f, 0xba13, 0xe5e0, 0xf91d, 0x7f34, 0xed58, 0x0, 0x0);
        gbc.writeMem(0x388f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xba13);
        EXPECT(gbc.pc(), 0x3891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0256
        gbc.setState(0xd07a, 0xee2b, 0x5450, 0xe857, 0x5b58, 0xe63d, 0x0, 0x1);
        gbc.writeMem(0xd07a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xee2b);
        EXPECT(gbc.pc(), 0xd07c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd07a), 0xcb);
        EXPECT(gbc.readMem(0xd07b), 0x38);
        // CB 38 0257
        gbc.setState(0xe1f2, 0x5eda, 0x2340, 0x48df, 0x191, 0xdd0c, 0x0, 0x0);
        gbc.writeMem(0xe1f2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5eda);
        EXPECT(gbc.pc(), 0xe1f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f2), 0xcb);
        EXPECT(gbc.readMem(0xe1f3), 0x38);
        // CB 38 0258
        gbc.setState(0x8d44, 0xe1c3, 0xcee0, 0xbb69, 0xfcfd, 0x1eab, 0x0, 0x1);
        gbc.writeMem(0x8d44, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe1c3);
        EXPECT(gbc.pc(), 0x8d46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d44), 0xcb);
        EXPECT(gbc.readMem(0x8d45), 0x38);
        // CB 38 0259
        gbc.setState(0x281b, 0x746a, 0xda50, 0xd051, 0x7f84, 0xdd61, 0x1, 0x0);
        gbc.writeMem(0x281b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x746a);
        EXPECT(gbc.pc(), 0x281d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 025A
        gbc.setState(0xcb45, 0x3b1, 0x3fe0, 0xb089, 0x663b, 0x9f7c, 0x1, 0x1);
        gbc.writeMem(0xcb45, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3b1);
        EXPECT(gbc.pc(), 0xcb47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb45), 0xcb);
        EXPECT(gbc.readMem(0xcb46), 0x38);
        // CB 38 025B
        gbc.setState(0x4ffe, 0x8260, 0xc670, 0x536, 0x31cf, 0x49bc, 0x0, 0x1);
        gbc.writeMem(0x4ffe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8260);
        EXPECT(gbc.pc(), 0x5000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 025C
        gbc.setState(0x9f7a, 0x6d12, 0xb6e0, 0x3e0d, 0x9d34, 0xb6cc, 0x0, 0x0);
        gbc.writeMem(0x9f7a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6d12);
        EXPECT(gbc.pc(), 0x9f7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f7a), 0xcb);
        EXPECT(gbc.readMem(0x9f7b), 0x38);
        // CB 38 025D
        gbc.setState(0x6ac3, 0x8be4, 0x3320, 0x307c, 0xdc78, 0x3862, 0x0, 0x1);
        gbc.writeMem(0x6ac3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8be4);
        EXPECT(gbc.pc(), 0x6ac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 025E
        gbc.setState(0xbc6, 0x670c, 0x8d0, 0x9b66, 0xbe43, 0x204e, 0x0, 0x0);
        gbc.writeMem(0xbc6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x670c);
        EXPECT(gbc.pc(), 0xbc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 025F
        gbc.setState(0x935, 0x2165, 0x1dd0, 0x3225, 0xd4f0, 0xac9c, 0x1, 0x0);
        gbc.writeMem(0x935, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2165);
        EXPECT(gbc.pc(), 0x937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0260
        gbc.setState(0x9b5, 0xd3b1, 0x56f0, 0x5ba2, 0xf1b3, 0xa24b, 0x0, 0x0);
        gbc.writeMem(0x9b5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd3b1);
        EXPECT(gbc.pc(), 0x9b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0261
        gbc.setState(0xed69, 0x6e6b, 0x74f0, 0x59d0, 0x2090, 0xf25, 0x1, 0x0);
        gbc.writeMem(0xed69, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6e6b);
        EXPECT(gbc.pc(), 0xed6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed69), 0xcb);
        EXPECT(gbc.readMem(0xed6a), 0x38);
        // CB 38 0263
        gbc.setState(0x3dc9, 0x2da7, 0xdfe0, 0x7505, 0xbca0, 0xb210, 0x1, 0x0);
        gbc.writeMem(0x3dc9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2da7);
        EXPECT(gbc.pc(), 0x3dcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0264
        gbc.setState(0x8f1c, 0xc2fb, 0xd970, 0xdb53, 0x3134, 0x8842, 0x1, 0x0);
        gbc.writeMem(0x8f1c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc2fb);
        EXPECT(gbc.pc(), 0x8f1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1c), 0xcb);
        EXPECT(gbc.readMem(0x8f1d), 0x38);
        // CB 38 0265
        gbc.setState(0xc096, 0x4a9e, 0x8740, 0x1375, 0xd216, 0x21f, 0x1, 0x1);
        gbc.writeMem(0xc096, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4a9e);
        EXPECT(gbc.pc(), 0xc098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc096), 0xcb);
        EXPECT(gbc.readMem(0xc097), 0x38);
        // CB 38 0266
        gbc.setState(0xa548, 0xba2, 0x15f0, 0x77e7, 0x8cc3, 0xa38c, 0x1, 0x0);
        gbc.writeMem(0xa548, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xba2);
        EXPECT(gbc.pc(), 0xa54a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa548), 0xcb);
        EXPECT(gbc.readMem(0xa549), 0x38);
        // CB 38 0267
        gbc.setState(0x51bb, 0x1c28, 0xb530, 0x2150, 0x8f2f, 0x4b12, 0x0, 0x0);
        gbc.writeMem(0x51bb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1c28);
        EXPECT(gbc.pc(), 0x51bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0268
        gbc.setState(0xd1d4, 0xeb73, 0xeaa0, 0x91f, 0xcb40, 0xea93, 0x0, 0x1);
        gbc.writeMem(0xd1d4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xeb73);
        EXPECT(gbc.pc(), 0xd1d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1d4), 0xcb);
        EXPECT(gbc.readMem(0xd1d5), 0x38);
        // CB 38 0269
        gbc.setState(0x38ab, 0x2742, 0xc140, 0xf266, 0xc15f, 0x5b17, 0x1, 0x0);
        gbc.writeMem(0x38ab, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2742);
        EXPECT(gbc.pc(), 0x38ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 026A
        gbc.setState(0xc1a9, 0x716f, 0xe050, 0x54d9, 0xe5dd, 0x8607, 0x1, 0x0);
        gbc.writeMem(0xc1a9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x716f);
        EXPECT(gbc.pc(), 0xc1ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1a9), 0xcb);
        EXPECT(gbc.readMem(0xc1aa), 0x38);
        // CB 38 026B
        gbc.setState(0xbc6f, 0x4152, 0xce90, 0x5016, 0x47ae, 0x20bf, 0x1, 0x0);
        gbc.writeMem(0xbc6f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4152);
        EXPECT(gbc.pc(), 0xbc71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc6f), 0xcb);
        EXPECT(gbc.readMem(0xbc70), 0x38);
        // CB 38 026C
        gbc.setState(0x359c, 0xc91b, 0xe4e0, 0xa1b1, 0xcf39, 0x989a, 0x1, 0x1);
        gbc.writeMem(0x359c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc91b);
        EXPECT(gbc.pc(), 0x359e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 026D
        gbc.setState(0xaf3a, 0xf440, 0x6f60, 0xf0b6, 0x2502, 0x47, 0x0, 0x0);
        gbc.writeMem(0xaf3a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf440);
        EXPECT(gbc.pc(), 0xaf3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf3a), 0xcb);
        EXPECT(gbc.readMem(0xaf3b), 0x38);
        // CB 38 026E
        gbc.setState(0x4f85, 0x992c, 0xcb00, 0xb8f8, 0x6792, 0xf7d5, 0x0, 0x1);
        gbc.writeMem(0x4f85, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x992c);
        EXPECT(gbc.pc(), 0x4f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 026F
        gbc.setState(0x4ca3, 0x43b9, 0x2ad0, 0x7621, 0xa705, 0xef67, 0x1, 0x1);
        gbc.writeMem(0x4ca3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x43b9);
        EXPECT(gbc.pc(), 0x4ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0270
        gbc.setState(0xa815, 0xdb98, 0x700, 0x986, 0x36fa, 0xb2e9, 0x1, 0x0);
        gbc.writeMem(0xa815, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdb98);
        EXPECT(gbc.pc(), 0xa817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa815), 0xcb);
        EXPECT(gbc.readMem(0xa816), 0x38);
        // CB 38 0271
        gbc.setState(0xa7b4, 0x334e, 0xfc90, 0xe68c, 0xcd79, 0x3e4b, 0x1, 0x1);
        gbc.writeMem(0xa7b4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x334e);
        EXPECT(gbc.pc(), 0xa7b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7b4), 0xcb);
        EXPECT(gbc.readMem(0xa7b5), 0x38);
        // CB 38 0272
        gbc.setState(0xc078, 0x9b98, 0x44d0, 0x490e, 0x8e2, 0xde6b, 0x0, 0x0);
        gbc.writeMem(0xc078, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9b98);
        EXPECT(gbc.pc(), 0xc07a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc078), 0xcb);
        EXPECT(gbc.readMem(0xc079), 0x38);
        // CB 38 0273
        gbc.setState(0x68d5, 0xc1b5, 0x88e0, 0x8a97, 0xb784, 0x4117, 0x0, 0x0);
        gbc.writeMem(0x68d5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc1b5);
        EXPECT(gbc.pc(), 0x68d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0274
        gbc.setState(0xb6f0, 0xcf33, 0x1dc0, 0x9b9f, 0x227f, 0x7d08, 0x1, 0x0);
        gbc.writeMem(0xb6f0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xcf33);
        EXPECT(gbc.pc(), 0xb6f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f0), 0xcb);
        EXPECT(gbc.readMem(0xb6f1), 0x38);
        // CB 38 0275
        gbc.setState(0x4367, 0x82a, 0x20f0, 0x7720, 0xfda5, 0xa054, 0x0, 0x1);
        gbc.writeMem(0x4367, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x82a);
        EXPECT(gbc.pc(), 0x4369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0276
        gbc.setState(0x67d6, 0xe464, 0xb6e0, 0x2a7a, 0xd5dd, 0x30fa, 0x0, 0x0);
        gbc.writeMem(0x67d6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe464);
        EXPECT(gbc.pc(), 0x67d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0277
        gbc.setState(0x3166, 0x6e46, 0x8d50, 0x76dd, 0x83c0, 0xc2d4, 0x0, 0x1);
        gbc.writeMem(0x3166, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6e46);
        EXPECT(gbc.pc(), 0x3168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0278
        gbc.setState(0xb769, 0x25ca, 0x63c0, 0x253d, 0x5d46, 0x6ce, 0x1, 0x0);
        gbc.writeMem(0xb769, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x25ca);
        EXPECT(gbc.pc(), 0xb76b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb769), 0xcb);
        EXPECT(gbc.readMem(0xb76a), 0x38);
        // CB 38 0279
        gbc.setState(0xea09, 0x16b1, 0x5070, 0xe73f, 0xdc15, 0x778, 0x1, 0x1);
        gbc.writeMem(0xea09, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x16b1);
        EXPECT(gbc.pc(), 0xea0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea09), 0xcb);
        EXPECT(gbc.readMem(0xea0a), 0x38);
        // CB 38 027A
        gbc.setState(0xa147, 0xdaa4, 0x65f0, 0xfc49, 0x7781, 0xa012, 0x1, 0x0);
        gbc.writeMem(0xa147, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdaa4);
        EXPECT(gbc.pc(), 0xa149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa147), 0xcb);
        EXPECT(gbc.readMem(0xa148), 0x38);
        // CB 38 027B
        gbc.setState(0xddb5, 0x3816, 0xb470, 0xa07b, 0x8501, 0x28fb, 0x0, 0x0);
        gbc.writeMem(0xddb5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3816);
        EXPECT(gbc.pc(), 0xddb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddb5), 0xcb);
        EXPECT(gbc.readMem(0xddb6), 0x38);
        // CB 38 027C
        gbc.setState(0x603f, 0x6109, 0xc4e0, 0x9bf9, 0xeefe, 0x514, 0x1, 0x0);
        gbc.writeMem(0x603f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6109);
        EXPECT(gbc.pc(), 0x6041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 027D
        gbc.setState(0x4916, 0x58d0, 0xc930, 0x7d8d, 0xd2fc, 0x48e2, 0x1, 0x0);
        gbc.writeMem(0x4916, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x58d0);
        EXPECT(gbc.pc(), 0x4918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 027E
        gbc.setState(0x8d06, 0x561e, 0x8c70, 0x5cf5, 0xc3a8, 0x70df, 0x1, 0x0);
        gbc.writeMem(0x8d06, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x561e);
        EXPECT(gbc.pc(), 0x8d08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d06), 0xcb);
        EXPECT(gbc.readMem(0x8d07), 0x38);
        // CB 38 027F
        gbc.setState(0x1887, 0x72e6, 0xc950, 0x8151, 0x3405, 0x74c6, 0x0, 0x1);
        gbc.writeMem(0x1887, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x72e6);
        EXPECT(gbc.pc(), 0x1889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0280
        gbc.setState(0x3301, 0x69dd, 0xf500, 0x28c7, 0x7cfd, 0x9a2c, 0x1, 0x0);
        gbc.writeMem(0x3301, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x69dd);
        EXPECT(gbc.pc(), 0x3303);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0281
        gbc.setState(0x2626, 0xb1fc, 0xe070, 0x12c6, 0xd1f, 0x7dda, 0x1, 0x0);
        gbc.writeMem(0x2626, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb1fc);
        EXPECT(gbc.pc(), 0x2628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0282
        gbc.setState(0xccae, 0xaaaa, 0xf5b0, 0x5110, 0x836c, 0xfb9, 0x0, 0x1);
        gbc.writeMem(0xccae, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xaaaa);
        EXPECT(gbc.pc(), 0xccb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccae), 0xcb);
        EXPECT(gbc.readMem(0xccaf), 0x38);
        // CB 38 0283
        gbc.setState(0x3f14, 0xd3cf, 0xfa90, 0x6616, 0x3403, 0x62e5, 0x0, 0x0);
        gbc.writeMem(0x3f14, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd3cf);
        EXPECT(gbc.pc(), 0x3f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0284
        gbc.setState(0x13e5, 0xff5e, 0x52c0, 0x918, 0x9867, 0x96c, 0x1, 0x0);
        gbc.writeMem(0x13e5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xff5e);
        EXPECT(gbc.pc(), 0x13e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0285
        gbc.setState(0x16ad, 0x8048, 0xf5d0, 0x357, 0xe76d, 0xb10b, 0x0, 0x1);
        gbc.writeMem(0x16ad, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8048);
        EXPECT(gbc.pc(), 0x16af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0286
        gbc.setState(0x2d84, 0x59da, 0xf4a0, 0xad88, 0xbf51, 0x5f62, 0x1, 0x0);
        gbc.writeMem(0x2d84, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x59da);
        EXPECT(gbc.pc(), 0x2d86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0287
        gbc.setState(0xd1e7, 0xdd2a, 0xf10, 0xc58b, 0xbd9d, 0x185c, 0x0, 0x0);
        gbc.writeMem(0xd1e7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xdd2a);
        EXPECT(gbc.pc(), 0xd1e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1e7), 0xcb);
        EXPECT(gbc.readMem(0xd1e8), 0x38);
        // CB 38 0288
        gbc.setState(0x4c25, 0xc51, 0xd50, 0xaf6f, 0x824d, 0xe5d6, 0x0, 0x0);
        gbc.writeMem(0x4c25, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc51);
        EXPECT(gbc.pc(), 0x4c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0289
        gbc.setState(0xe4e1, 0xc713, 0x4a80, 0xb10, 0xb6e8, 0x8d, 0x0, 0x0);
        gbc.writeMem(0xe4e1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc713);
        EXPECT(gbc.pc(), 0xe4e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4e1), 0xcb);
        EXPECT(gbc.readMem(0xe4e2), 0x38);
        // CB 38 028A
        gbc.setState(0x6dd4, 0x47e3, 0xff00, 0xc981, 0x6ed9, 0xa1ca, 0x0, 0x1);
        gbc.writeMem(0x6dd4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x47e3);
        EXPECT(gbc.pc(), 0x6dd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 028B
        gbc.setState(0x81d, 0xe27a, 0x1cf0, 0x7453, 0x45d6, 0xd33c, 0x1, 0x1);
        gbc.writeMem(0x81d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe27a);
        EXPECT(gbc.pc(), 0x81f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 028C
        gbc.setState(0xe49c, 0xd6b5, 0xdc00, 0x3591, 0x813c, 0xfeca, 0x0, 0x1);
        gbc.writeMem(0xe49c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd6b5);
        EXPECT(gbc.pc(), 0xe49e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe49c), 0xcb);
        EXPECT(gbc.readMem(0xe49d), 0x38);
        // CB 38 028D
        gbc.setState(0x6a30, 0xb90e, 0x8c10, 0xb29c, 0xb069, 0x81e9, 0x1, 0x1);
        gbc.writeMem(0x6a30, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb90e);
        EXPECT(gbc.pc(), 0x6a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 028E
        gbc.setState(0x33b2, 0xd691, 0xf5f0, 0x7b53, 0x8070, 0xd004, 0x0, 0x1);
        gbc.writeMem(0x33b2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd691);
        EXPECT(gbc.pc(), 0x33b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 028F
        gbc.setState(0x5984, 0xfc2a, 0x4a10, 0xb98f, 0x72e1, 0xe28a, 0x1, 0x1);
        gbc.writeMem(0x5984, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfc2a);
        EXPECT(gbc.pc(), 0x5986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0290
        gbc.setState(0xc992, 0x35cb, 0x8d90, 0x57f5, 0x484c, 0x8919, 0x1, 0x0);
        gbc.writeMem(0xc992, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x35cb);
        EXPECT(gbc.pc(), 0xc994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc992), 0xcb);
        EXPECT(gbc.readMem(0xc993), 0x38);
        // CB 38 0291
        gbc.setState(0xbb04, 0x59d3, 0xe50, 0xaaed, 0x10fe, 0xd0d6, 0x0, 0x1);
        gbc.writeMem(0xbb04, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x59d3);
        EXPECT(gbc.pc(), 0xbb06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb04), 0xcb);
        EXPECT(gbc.readMem(0xbb05), 0x38);
        // CB 38 0292
        gbc.setState(0xcbec, 0x7e5a, 0x34a0, 0xe8b6, 0xcc70, 0x82d2, 0x0, 0x0);
        gbc.writeMem(0xcbec, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7e5a);
        EXPECT(gbc.pc(), 0xcbee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbec), 0xcb);
        EXPECT(gbc.readMem(0xcbed), 0x38);
        // CB 38 0293
        gbc.setState(0x4d44, 0x920e, 0x33b0, 0x3434, 0x5b08, 0xc945, 0x0, 0x0);
        gbc.writeMem(0x4d44, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x920e);
        EXPECT(gbc.pc(), 0x4d46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0295
        gbc.setState(0x61ee, 0x472e, 0xb540, 0xf0bc, 0x5143, 0x8acd, 0x1, 0x1);
        gbc.writeMem(0x61ee, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x472e);
        EXPECT(gbc.pc(), 0x61f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0296
        gbc.setState(0x1fdc, 0x89eb, 0xb0e0, 0x8c50, 0x778c, 0x914a, 0x0, 0x1);
        gbc.writeMem(0x1fdc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x89eb);
        EXPECT(gbc.pc(), 0x1fde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0297
        gbc.setState(0x221c, 0x73f, 0x7b50, 0x985f, 0xd167, 0x242a, 0x0, 0x1);
        gbc.writeMem(0x221c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x73f);
        EXPECT(gbc.pc(), 0x221e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0298
        gbc.setState(0xef60, 0x5d9c, 0x5ff0, 0xd606, 0xb2e1, 0x6034, 0x1, 0x0);
        gbc.writeMem(0xef60, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5d9c);
        EXPECT(gbc.pc(), 0xef62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef60), 0xcb);
        EXPECT(gbc.readMem(0xef61), 0x38);
        // CB 38 0299
        gbc.setState(0xe29e, 0x93d, 0xaf20, 0xf566, 0xb037, 0x512b, 0x1, 0x0);
        gbc.writeMem(0xe29e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x93d);
        EXPECT(gbc.pc(), 0xe2a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe29e), 0xcb);
        EXPECT(gbc.readMem(0xe29f), 0x38);
        // CB 38 029A
        gbc.setState(0xdd32, 0xd01c, 0x7530, 0x9f9e, 0x85e7, 0xfeb9, 0x1, 0x0);
        gbc.writeMem(0xdd32, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd01c);
        EXPECT(gbc.pc(), 0xdd34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd32), 0xcb);
        EXPECT(gbc.readMem(0xdd33), 0x38);
        // CB 38 029B
        gbc.setState(0x36a6, 0x3092, 0xcfc0, 0x7289, 0x74ad, 0xe8e1, 0x1, 0x1);
        gbc.writeMem(0x36a6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3092);
        EXPECT(gbc.pc(), 0x36a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 029C
        gbc.setState(0x8768, 0x739e, 0x6f30, 0x2c56, 0x2e15, 0x1d19, 0x0, 0x0);
        gbc.writeMem(0x8768, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x739e);
        EXPECT(gbc.pc(), 0x876a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8768), 0xcb);
        EXPECT(gbc.readMem(0x8769), 0x38);
        // CB 38 029D
        gbc.setState(0x1d54, 0x13a3, 0x7640, 0xe2c1, 0x18ad, 0x45f7, 0x1, 0x1);
        gbc.writeMem(0x1d54, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x13a3);
        EXPECT(gbc.pc(), 0x1d56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 029E
        gbc.setState(0xc110, 0xcaf2, 0x28b0, 0xf9a, 0x9243, 0x6b9d, 0x0, 0x0);
        gbc.writeMem(0xc110, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xcaf2);
        EXPECT(gbc.pc(), 0xc112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc110), 0xcb);
        EXPECT(gbc.readMem(0xc111), 0x38);
        // CB 38 029F
        gbc.setState(0xa7bd, 0x59eb, 0x680, 0x2ac6, 0x5cdb, 0xce88, 0x0, 0x1);
        gbc.writeMem(0xa7bd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x59eb);
        EXPECT(gbc.pc(), 0xa7bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7bd), 0xcb);
        EXPECT(gbc.readMem(0xa7be), 0x38);
        // CB 38 02A0
        gbc.setState(0x1cd7, 0x1756, 0xfee0, 0x81e1, 0xda7b, 0x4dfc, 0x0, 0x1);
        gbc.writeMem(0x1cd7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1756);
        EXPECT(gbc.pc(), 0x1cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02A1
        gbc.setState(0xcda, 0xe769, 0xa920, 0x1a8d, 0xc1c5, 0x99bd, 0x1, 0x0);
        gbc.writeMem(0xcda, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe769);
        EXPECT(gbc.pc(), 0xcdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02A2
        gbc.setState(0x743c, 0x727, 0x44b0, 0x1ffd, 0xbf48, 0xe29a, 0x1, 0x0);
        gbc.writeMem(0x743c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x727);
        EXPECT(gbc.pc(), 0x743e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02A3
        gbc.setState(0x646d, 0x7f91, 0x89c0, 0xd3bb, 0xebd0, 0xbc36, 0x1, 0x0);
        gbc.writeMem(0x646d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7f91);
        EXPECT(gbc.pc(), 0x646f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02A4
        gbc.setState(0x53ef, 0x5fe5, 0xcdb0, 0x68d4, 0xbb32, 0xc3dc, 0x0, 0x0);
        gbc.writeMem(0x53ef, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5fe5);
        EXPECT(gbc.pc(), 0x53f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02A6
        gbc.setState(0x8060, 0xeae4, 0x3a00, 0x3d47, 0x355f, 0xe155, 0x1, 0x1);
        gbc.writeMem(0x8060, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xeae4);
        EXPECT(gbc.pc(), 0x8062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8060), 0xcb);
        EXPECT(gbc.readMem(0x8061), 0x38);
        // CB 38 02A7
        gbc.setState(0xadf2, 0x5dd1, 0x74c0, 0x25dc, 0x9105, 0xae34, 0x0, 0x1);
        gbc.writeMem(0xadf2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5dd1);
        EXPECT(gbc.pc(), 0xadf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf2), 0xcb);
        EXPECT(gbc.readMem(0xadf3), 0x38);
        // CB 38 02A8
        gbc.setState(0x8c38, 0x1f0c, 0x83e0, 0x2633, 0x5fac, 0x70ad, 0x0, 0x0);
        gbc.writeMem(0x8c38, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1f0c);
        EXPECT(gbc.pc(), 0x8c3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c38), 0xcb);
        EXPECT(gbc.readMem(0x8c39), 0x38);
        // CB 38 02A9
        gbc.setState(0xc8a4, 0xa7b4, 0x66f0, 0xfadd, 0xac0a, 0x7443, 0x0, 0x1);
        gbc.writeMem(0xc8a4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa7b4);
        EXPECT(gbc.pc(), 0xc8a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8a4), 0xcb);
        EXPECT(gbc.readMem(0xc8a5), 0x38);
        // CB 38 02AA
        gbc.setState(0x3f5a, 0x5bc3, 0x8bd0, 0x7154, 0x93e5, 0xfd48, 0x1, 0x0);
        gbc.writeMem(0x3f5a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5bc3);
        EXPECT(gbc.pc(), 0x3f5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02AC
        gbc.setState(0xef1e, 0xab00, 0x96f0, 0xedcf, 0x9489, 0x8949, 0x1, 0x0);
        gbc.writeMem(0xef1e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xab00);
        EXPECT(gbc.pc(), 0xef20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef1e), 0xcb);
        EXPECT(gbc.readMem(0xef1f), 0x38);
        // CB 38 02AD
        gbc.setState(0x1b72, 0x46cd, 0x91f0, 0x3246, 0x4f4d, 0x3d3a, 0x1, 0x0);
        gbc.writeMem(0x1b72, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x46cd);
        EXPECT(gbc.pc(), 0x1b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02AE
        gbc.setState(0x4d7a, 0x3b0a, 0xa400, 0x14fd, 0x8b14, 0x8004, 0x0, 0x0);
        gbc.writeMem(0x4d7a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3b0a);
        EXPECT(gbc.pc(), 0x4d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02AF
        gbc.setState(0xc100, 0x273a, 0x88c0, 0x46ce, 0xc9ee, 0xd020, 0x1, 0x1);
        gbc.writeMem(0xc100, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x273a);
        EXPECT(gbc.pc(), 0xc102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc100), 0xcb);
        EXPECT(gbc.readMem(0xc101), 0x38);
        // CB 38 02B0
        gbc.setState(0x1d30, 0xb48a, 0xa500, 0x60ff, 0xc82d, 0xb7d4, 0x1, 0x0);
        gbc.writeMem(0x1d30, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb48a);
        EXPECT(gbc.pc(), 0x1d32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02B1
        gbc.setState(0x22ea, 0x1ab9, 0x9370, 0x67f1, 0xfbf2, 0x44df, 0x0, 0x1);
        gbc.writeMem(0x22ea, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1ab9);
        EXPECT(gbc.pc(), 0x22ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02B2
        gbc.setState(0x787c, 0xdd90, 0x4df0, 0x494f, 0xf40b, 0x9cab, 0x0, 0x1);
        gbc.writeMem(0x787c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xdd90);
        EXPECT(gbc.pc(), 0x787e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02B3
        gbc.setState(0xd100, 0xb131, 0x9a0, 0x8ddf, 0xb70, 0x68d, 0x1, 0x0);
        gbc.writeMem(0xd100, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb131);
        EXPECT(gbc.pc(), 0xd102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd100), 0xcb);
        EXPECT(gbc.readMem(0xd101), 0x38);
        // CB 38 02B4
        gbc.setState(0x2c0d, 0x94b6, 0xc500, 0x23ea, 0xeb4, 0x4708, 0x1, 0x1);
        gbc.writeMem(0x2c0d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x94b6);
        EXPECT(gbc.pc(), 0x2c0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02B5
        gbc.setState(0x8895, 0xf31, 0xc3d0, 0x480b, 0xdc26, 0xc4cd, 0x0, 0x0);
        gbc.writeMem(0x8895, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf31);
        EXPECT(gbc.pc(), 0x8897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8895), 0xcb);
        EXPECT(gbc.readMem(0x8896), 0x38);
        // CB 38 02B6
        gbc.setState(0xa885, 0xa5f1, 0xeb70, 0xab43, 0x2afb, 0xff74, 0x0, 0x0);
        gbc.writeMem(0xa885, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa5f1);
        EXPECT(gbc.pc(), 0xa887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa885), 0xcb);
        EXPECT(gbc.readMem(0xa886), 0x38);
        // CB 38 02B7
        gbc.setState(0xe3d0, 0xef3b, 0x8300, 0x93e7, 0xb955, 0x60f4, 0x1, 0x1);
        gbc.writeMem(0xe3d0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xef3b);
        EXPECT(gbc.pc(), 0xe3d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3d0), 0xcb);
        EXPECT(gbc.readMem(0xe3d1), 0x38);
        // CB 38 02B9
        gbc.setState(0x29a2, 0x8c45, 0x64b0, 0x88eb, 0x1b16, 0x7fe0, 0x0, 0x1);
        gbc.writeMem(0x29a2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8c45);
        EXPECT(gbc.pc(), 0x29a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02BA
        gbc.setState(0x3a3e, 0x4f70, 0xdeb0, 0x45c0, 0xf34e, 0xb6b8, 0x1, 0x0);
        gbc.writeMem(0x3a3e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4f70);
        EXPECT(gbc.pc(), 0x3a40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02BB
        gbc.setState(0xeea2, 0x3f13, 0xc830, 0x46d0, 0x48d5, 0x4f1e, 0x1, 0x0);
        gbc.writeMem(0xeea2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3f13);
        EXPECT(gbc.pc(), 0xeea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea2), 0xcb);
        EXPECT(gbc.readMem(0xeea3), 0x38);
        // CB 38 02BC
        gbc.setState(0x8200, 0xf951, 0x89a0, 0x602c, 0xe7e8, 0x8a8a, 0x0, 0x1);
        gbc.writeMem(0x8200, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf951);
        EXPECT(gbc.pc(), 0x8202);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8200), 0xcb);
        EXPECT(gbc.readMem(0x8201), 0x38);
        // CB 38 02BD
        gbc.setState(0x1d12, 0x7186, 0x2630, 0xecf3, 0x386e, 0x626d, 0x0, 0x1);
        gbc.writeMem(0x1d12, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7186);
        EXPECT(gbc.pc(), 0x1d14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02BE
        gbc.setState(0x9873, 0x67e, 0x7fb0, 0xa561, 0xd3e3, 0xb8f4, 0x1, 0x0);
        gbc.writeMem(0x9873, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x67e);
        EXPECT(gbc.pc(), 0x9875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9873), 0xcb);
        EXPECT(gbc.readMem(0x9874), 0x38);
        // CB 38 02BF
        gbc.setState(0x19e2, 0xf617, 0x4180, 0x252c, 0x5c0a, 0xefe9, 0x0, 0x1);
        gbc.writeMem(0x19e2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf617);
        EXPECT(gbc.pc(), 0x19e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02C0
        gbc.setState(0x95b1, 0x4ec2, 0x7750, 0x829e, 0x4b0f, 0x85f5, 0x0, 0x1);
        gbc.writeMem(0x95b1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4ec2);
        EXPECT(gbc.pc(), 0x95b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b1), 0xcb);
        EXPECT(gbc.readMem(0x95b2), 0x38);
        // CB 38 02C1
        gbc.setState(0x4e27, 0xe498, 0x6d00, 0xbd97, 0x4fbe, 0x6e25, 0x0, 0x1);
        gbc.writeMem(0x4e27, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe498);
        EXPECT(gbc.pc(), 0x4e29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02C2
        gbc.setState(0x8f1a, 0xa152, 0xe260, 0x6bef, 0x1ae0, 0x718c, 0x0, 0x1);
        gbc.writeMem(0x8f1a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa152);
        EXPECT(gbc.pc(), 0x8f1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1a), 0xcb);
        EXPECT(gbc.readMem(0x8f1b), 0x38);
        // CB 38 02C3
        gbc.setState(0x1f7d, 0xc6f8, 0x59a0, 0x6158, 0x6413, 0xe7b7, 0x1, 0x1);
        gbc.writeMem(0x1f7d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc6f8);
        EXPECT(gbc.pc(), 0x1f7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02C4
        gbc.setState(0xcd6d, 0x6487, 0x45f0, 0xc752, 0x450c, 0x2391, 0x0, 0x0);
        gbc.writeMem(0xcd6d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6487);
        EXPECT(gbc.pc(), 0xcd6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd6d), 0xcb);
        EXPECT(gbc.readMem(0xcd6e), 0x38);
        // CB 38 02C5
        gbc.setState(0xc17b, 0x70e2, 0x7580, 0x4af5, 0xb0dc, 0x2701, 0x1, 0x0);
        gbc.writeMem(0xc17b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x70e2);
        EXPECT(gbc.pc(), 0xc17d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc17b), 0xcb);
        EXPECT(gbc.readMem(0xc17c), 0x38);
        // CB 38 02C6
        gbc.setState(0x72ed, 0xac25, 0x2570, 0x16e9, 0x8def, 0xf4e7, 0x1, 0x1);
        gbc.writeMem(0x72ed, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xac25);
        EXPECT(gbc.pc(), 0x72ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02C7
        gbc.setState(0x6a19, 0xac25, 0xdde0, 0xb1e9, 0x7d60, 0x7766, 0x0, 0x1);
        gbc.writeMem(0x6a19, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xac25);
        EXPECT(gbc.pc(), 0x6a1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02C8
        gbc.setState(0xcc0c, 0x11ce, 0x53f0, 0x82c6, 0x68d2, 0x8595, 0x1, 0x1);
        gbc.writeMem(0xcc0c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x11ce);
        EXPECT(gbc.pc(), 0xcc0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc0c), 0xcb);
        EXPECT(gbc.readMem(0xcc0d), 0x38);
        // CB 38 02C9
        gbc.setState(0xabd2, 0xafb8, 0x9750, 0x4f74, 0xafcf, 0x87a8, 0x0, 0x1);
        gbc.writeMem(0xabd2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xafb8);
        EXPECT(gbc.pc(), 0xabd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd2), 0xcb);
        EXPECT(gbc.readMem(0xabd3), 0x38);
        // CB 38 02CA
        gbc.setState(0x400f, 0x8a60, 0xcf0, 0x99de, 0x14b5, 0x59d6, 0x0, 0x0);
        gbc.writeMem(0x400f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8a60);
        EXPECT(gbc.pc(), 0x4011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02CC
        gbc.setState(0xbafe, 0xdeff, 0xef80, 0xea7b, 0x350d, 0x7dc5, 0x0, 0x1);
        gbc.writeMem(0xbafe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xdeff);
        EXPECT(gbc.pc(), 0xbb00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbafe), 0xcb);
        EXPECT(gbc.readMem(0xbaff), 0x38);
        // CB 38 02CD
        gbc.setState(0xed4e, 0x9d67, 0xc500, 0x723c, 0x66b1, 0xfb03, 0x0, 0x1);
        gbc.writeMem(0xed4e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9d67);
        EXPECT(gbc.pc(), 0xed50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed4e), 0xcb);
        EXPECT(gbc.readMem(0xed4f), 0x38);
        // CB 38 02CE
        gbc.setState(0x61ed, 0xcc6e, 0x63d0, 0xd5f, 0x5a38, 0xa93f, 0x1, 0x1);
        gbc.writeMem(0x61ed, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xcc6e);
        EXPECT(gbc.pc(), 0x61ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02CF
        gbc.setState(0xc306, 0xe332, 0x4110, 0xe3b0, 0x796b, 0x2b32, 0x0, 0x1);
        gbc.writeMem(0xc306, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe332);
        EXPECT(gbc.pc(), 0xc308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc306), 0xcb);
        EXPECT(gbc.readMem(0xc307), 0x38);
        // CB 38 02D0
        gbc.setState(0xe755, 0x1fe2, 0xe5e0, 0xa260, 0xebb, 0x3f14, 0x1, 0x1);
        gbc.writeMem(0xe755, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1fe2);
        EXPECT(gbc.pc(), 0xe757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe755), 0xcb);
        EXPECT(gbc.readMem(0xe756), 0x38);
        // CB 38 02D1
        gbc.setState(0x6b1d, 0x5166, 0x3880, 0x8345, 0x63e1, 0x14e1, 0x1, 0x1);
        gbc.writeMem(0x6b1d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5166);
        EXPECT(gbc.pc(), 0x6b1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02D2
        gbc.setState(0x4fb2, 0xda37, 0xea70, 0x25e5, 0xf224, 0x808b, 0x0, 0x0);
        gbc.writeMem(0x4fb2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xda37);
        EXPECT(gbc.pc(), 0x4fb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02D3
        gbc.setState(0xb93f, 0x9199, 0xfc80, 0xf8ad, 0x55ef, 0x98f, 0x1, 0x1);
        gbc.writeMem(0xb93f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9199);
        EXPECT(gbc.pc(), 0xb941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb93f), 0xcb);
        EXPECT(gbc.readMem(0xb940), 0x38);
        // CB 38 02D4
        gbc.setState(0xee56, 0x642d, 0xb1b0, 0xe6a2, 0x3cdd, 0x662f, 0x0, 0x0);
        gbc.writeMem(0xee56, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x642d);
        EXPECT(gbc.pc(), 0xee58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee56), 0xcb);
        EXPECT(gbc.readMem(0xee57), 0x38);
        // CB 38 02D5
        gbc.setState(0x39af, 0x103a, 0x16c0, 0x29c4, 0x5f1a, 0xd478, 0x0, 0x0);
        gbc.writeMem(0x39af, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x103a);
        EXPECT(gbc.pc(), 0x39b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02D6
        gbc.setState(0x1d61, 0xf63a, 0xb630, 0x15fe, 0x829d, 0x9e7f, 0x1, 0x1);
        gbc.writeMem(0x1d61, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf63a);
        EXPECT(gbc.pc(), 0x1d63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02D7
        gbc.setState(0xef34, 0x75aa, 0xdc30, 0xe704, 0xcf70, 0x56ce, 0x0, 0x1);
        gbc.writeMem(0xef34, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x75aa);
        EXPECT(gbc.pc(), 0xef36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef34), 0xcb);
        EXPECT(gbc.readMem(0xef35), 0x38);
        // CB 38 02D8
        gbc.setState(0xaec4, 0xe41d, 0xd060, 0xef23, 0xd446, 0x4d81, 0x1, 0x0);
        gbc.writeMem(0xaec4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe41d);
        EXPECT(gbc.pc(), 0xaec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaec4), 0xcb);
        EXPECT(gbc.readMem(0xaec5), 0x38);
        // CB 38 02D9
        gbc.setState(0x45f7, 0xb50a, 0x6a60, 0xf8f8, 0x8933, 0xa9f4, 0x0, 0x1);
        gbc.writeMem(0x45f7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb50a);
        EXPECT(gbc.pc(), 0x45f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02DA
        gbc.setState(0x1b10, 0xb535, 0x5930, 0xf995, 0x7e20, 0xac91, 0x0, 0x1);
        gbc.writeMem(0x1b10, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb535);
        EXPECT(gbc.pc(), 0x1b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02DB
        gbc.setState(0x6226, 0x1dca, 0xa120, 0xc4, 0x2a87, 0x4660, 0x0, 0x0);
        gbc.writeMem(0x6226, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1dca);
        EXPECT(gbc.pc(), 0x6228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02DC
        gbc.setState(0x5420, 0x7bee, 0xcd80, 0x52f3, 0xb072, 0x954a, 0x1, 0x1);
        gbc.writeMem(0x5420, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7bee);
        EXPECT(gbc.pc(), 0x5422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02DD
        gbc.setState(0xb97d, 0x386a, 0xd750, 0x15db, 0xd277, 0xf463, 0x0, 0x1);
        gbc.writeMem(0xb97d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x386a);
        EXPECT(gbc.pc(), 0xb97f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb97d), 0xcb);
        EXPECT(gbc.readMem(0xb97e), 0x38);
        // CB 38 02DE
        gbc.setState(0xe887, 0x1d29, 0xae70, 0xd957, 0xdddd, 0x5333, 0x1, 0x0);
        gbc.writeMem(0xe887, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1d29);
        EXPECT(gbc.pc(), 0xe889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe887), 0xcb);
        EXPECT(gbc.readMem(0xe888), 0x38);
        // CB 38 02DF
        gbc.setState(0xd0f6, 0xa364, 0xb770, 0xa3ed, 0xfffc, 0x4dc1, 0x0, 0x1);
        gbc.writeMem(0xd0f6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa364);
        EXPECT(gbc.pc(), 0xd0f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0f6), 0xcb);
        EXPECT(gbc.readMem(0xd0f7), 0x38);
        // CB 38 02E0
        gbc.setState(0x1e33, 0xf249, 0x3400, 0x6cb9, 0xf6f1, 0x657b, 0x0, 0x1);
        gbc.writeMem(0x1e33, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf249);
        EXPECT(gbc.pc(), 0x1e35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02E1
        gbc.setState(0x3e73, 0x2db8, 0xfe50, 0x750a, 0x6bed, 0xdd1a, 0x0, 0x1);
        gbc.writeMem(0x3e73, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2db8);
        EXPECT(gbc.pc(), 0x3e75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02E2
        gbc.setState(0xbc66, 0x705, 0x5b20, 0xf7b8, 0x5ebd, 0x1318, 0x0, 0x1);
        gbc.writeMem(0xbc66, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x705);
        EXPECT(gbc.pc(), 0xbc68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc66), 0xcb);
        EXPECT(gbc.readMem(0xbc67), 0x38);
        // CB 38 02E3
        gbc.setState(0x792a, 0xc718, 0xae10, 0x12bb, 0xeffb, 0x637e, 0x0, 0x0);
        gbc.writeMem(0x792a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc718);
        EXPECT(gbc.pc(), 0x792c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02E4
        gbc.setState(0x1594, 0xeaa2, 0x68f0, 0xa21, 0x4261, 0x848f, 0x0, 0x1);
        gbc.writeMem(0x1594, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xeaa2);
        EXPECT(gbc.pc(), 0x1596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02E5
        gbc.setState(0x2ccc, 0x1ab4, 0x5770, 0xc026, 0x6e38, 0xa5ab, 0x1, 0x0);
        gbc.writeMem(0x2ccc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1ab4);
        EXPECT(gbc.pc(), 0x2cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02E6
        gbc.setState(0xcd74, 0x119, 0xc60, 0xa514, 0x7faa, 0x554b, 0x1, 0x0);
        gbc.writeMem(0xcd74, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x119);
        EXPECT(gbc.pc(), 0xcd76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd74), 0xcb);
        EXPECT(gbc.readMem(0xcd75), 0x38);
        // CB 38 02E7
        gbc.setState(0xb0a0, 0xc649, 0xe040, 0x7b9e, 0x54a2, 0x5e6f, 0x1, 0x0);
        gbc.writeMem(0xb0a0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc649);
        EXPECT(gbc.pc(), 0xb0a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0a0), 0xcb);
        EXPECT(gbc.readMem(0xb0a1), 0x38);
        // CB 38 02E8
        gbc.setState(0x21bb, 0x1fad, 0x2e10, 0x8115, 0x19c, 0x771d, 0x0, 0x0);
        gbc.writeMem(0x21bb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1fad);
        EXPECT(gbc.pc(), 0x21bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02E9
        gbc.setState(0xe836, 0xdeba, 0xe7a0, 0x1d4b, 0x22f1, 0xb8e0, 0x0, 0x0);
        gbc.writeMem(0xe836, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xdeba);
        EXPECT(gbc.pc(), 0xe838);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe836), 0xcb);
        EXPECT(gbc.readMem(0xe837), 0x38);
        // CB 38 02EA
        gbc.setState(0xc968, 0xbef3, 0xceb0, 0xb3fa, 0x5dc, 0x1a04, 0x0, 0x0);
        gbc.writeMem(0xc968, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xbef3);
        EXPECT(gbc.pc(), 0xc96a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc968), 0xcb);
        EXPECT(gbc.readMem(0xc969), 0x38);
        // CB 38 02EB
        gbc.setState(0xc814, 0xf16, 0xd3d0, 0xdbbe, 0x847e, 0xa792, 0x0, 0x1);
        gbc.writeMem(0xc814, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf16);
        EXPECT(gbc.pc(), 0xc816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc814), 0xcb);
        EXPECT(gbc.readMem(0xc815), 0x38);
        // CB 38 02EC
        gbc.setState(0x156a, 0x8ab5, 0xfde0, 0x5575, 0x74f3, 0x49b9, 0x0, 0x0);
        gbc.writeMem(0x156a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8ab5);
        EXPECT(gbc.pc(), 0x156c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02EE
        gbc.setState(0xe40a, 0x7cfa, 0xe10, 0xdc1a, 0xf1e0, 0x548c, 0x1, 0x1);
        gbc.writeMem(0xe40a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7cfa);
        EXPECT(gbc.pc(), 0xe40c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe40a), 0xcb);
        EXPECT(gbc.readMem(0xe40b), 0x38);
        // CB 38 02EF
        gbc.setState(0xe559, 0xfcef, 0x20b0, 0xaddd, 0xf8df, 0x5388, 0x0, 0x0);
        gbc.writeMem(0xe559, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xfcef);
        EXPECT(gbc.pc(), 0xe55b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe559), 0xcb);
        EXPECT(gbc.readMem(0xe55a), 0x38);
        // CB 38 02F0
        gbc.setState(0xc0ec, 0xd512, 0x5da0, 0xa0a0, 0xbc3, 0x309, 0x0, 0x0);
        gbc.writeMem(0xc0ec, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd512);
        EXPECT(gbc.pc(), 0xc0ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ec), 0xcb);
        EXPECT(gbc.readMem(0xc0ed), 0x38);
        // CB 38 02F1
        gbc.setState(0xd2b7, 0xb89a, 0xf1e0, 0x869e, 0x75ac, 0xfb50, 0x0, 0x0);
        gbc.writeMem(0xd2b7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb89a);
        EXPECT(gbc.pc(), 0xd2b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b7), 0xcb);
        EXPECT(gbc.readMem(0xd2b8), 0x38);
        // CB 38 02F3
        gbc.setState(0x3285, 0xa1ae, 0x4c50, 0xba91, 0xe544, 0xe618, 0x1, 0x1);
        gbc.writeMem(0x3285, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa1ae);
        EXPECT(gbc.pc(), 0x3287);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02F4
        gbc.setState(0x79b9, 0xf20a, 0x8ad0, 0xc0cd, 0x153d, 0xb5fe, 0x1, 0x0);
        gbc.writeMem(0x79b9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf20a);
        EXPECT(gbc.pc(), 0x79bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02F5
        gbc.setState(0xd83f, 0x608, 0xf80, 0x9566, 0x81a1, 0x2389, 0x1, 0x1);
        gbc.writeMem(0xd83f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x608);
        EXPECT(gbc.pc(), 0xd841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd83f), 0xcb);
        EXPECT(gbc.readMem(0xd840), 0x38);
        // CB 38 02F6
        gbc.setState(0x8e6b, 0xade3, 0x6a00, 0x8c3b, 0x5d24, 0x6d10, 0x0, 0x1);
        gbc.writeMem(0x8e6b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xade3);
        EXPECT(gbc.pc(), 0x8e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e6b), 0xcb);
        EXPECT(gbc.readMem(0x8e6c), 0x38);
        // CB 38 02F7
        gbc.setState(0x3da8, 0x8c93, 0x6620, 0x40, 0xae12, 0x1695, 0x1, 0x1);
        gbc.writeMem(0x3da8, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8c93);
        EXPECT(gbc.pc(), 0x3daa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02F8
        gbc.setState(0x5d2d, 0xad31, 0x36e0, 0xe432, 0x59ee, 0x7462, 0x0, 0x0);
        gbc.writeMem(0x5d2d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xad31);
        EXPECT(gbc.pc(), 0x5d2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 02F9
        gbc.setState(0xc81, 0xd394, 0xcb60, 0x6727, 0x1881, 0x72cf, 0x0, 0x0);
        gbc.writeMem(0xc81, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd394);
        EXPECT(gbc.pc(), 0xc83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02FA
        gbc.setState(0x977c, 0x5aed, 0xcbe0, 0x50e8, 0xad6d, 0x92f1, 0x1, 0x0);
        gbc.writeMem(0x977c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5aed);
        EXPECT(gbc.pc(), 0x977e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x977c), 0xcb);
        EXPECT(gbc.readMem(0x977d), 0x38);
        // CB 38 02FB
        gbc.setState(0x8eed, 0x1270, 0xcbc0, 0xc4a0, 0xee48, 0xd8ca, 0x1, 0x1);
        gbc.writeMem(0x8eed, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1270);
        EXPECT(gbc.pc(), 0x8eef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eed), 0xcb);
        EXPECT(gbc.readMem(0x8eee), 0x38);
        // CB 38 02FD
        gbc.setState(0x1b15, 0x179c, 0xc7f0, 0xfb73, 0x20b1, 0xe04e, 0x1, 0x0);
        gbc.writeMem(0x1b15, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x179c);
        EXPECT(gbc.pc(), 0x1b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02FE
        gbc.setState(0x629f, 0x9cf9, 0x2fb0, 0x3de9, 0xf76b, 0x4b40, 0x1, 0x0);
        gbc.writeMem(0x629f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9cf9);
        EXPECT(gbc.pc(), 0x62a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 02FF
        gbc.setState(0xa63a, 0xfb38, 0xbea0, 0x21f0, 0xbac, 0xb46f, 0x1, 0x0);
        gbc.writeMem(0xa63a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xfb38);
        EXPECT(gbc.pc(), 0xa63c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63a), 0xcb);
        EXPECT(gbc.readMem(0xa63b), 0x38);
        // CB 38 0300
        gbc.setState(0xa95d, 0x5570, 0x6470, 0xa5a5, 0x1fe4, 0x9c1f, 0x0, 0x1);
        gbc.writeMem(0xa95d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5570);
        EXPECT(gbc.pc(), 0xa95f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa95d), 0xcb);
        EXPECT(gbc.readMem(0xa95e), 0x38);
        // CB 38 0301
        gbc.setState(0x1aef, 0xee01, 0xbeb0, 0x21a4, 0x94dc, 0xb64a, 0x1, 0x0);
        gbc.writeMem(0x1aef, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xee01);
        EXPECT(gbc.pc(), 0x1af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0302
        gbc.setState(0x4feb, 0x3b58, 0xfb40, 0x7e71, 0xb6d3, 0x9b21, 0x0, 0x0);
        gbc.writeMem(0x4feb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3b58);
        EXPECT(gbc.pc(), 0x4fed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0303
        gbc.setState(0xddf4, 0x820d, 0xf860, 0xec0c, 0xcd0e, 0xd8dd, 0x0, 0x1);
        gbc.writeMem(0xddf4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x820d);
        EXPECT(gbc.pc(), 0xddf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf4), 0xcb);
        EXPECT(gbc.readMem(0xddf5), 0x38);
        // CB 38 0304
        gbc.setState(0xb5cf, 0x968c, 0xb8b0, 0xe9c0, 0x3c03, 0x8552, 0x1, 0x0);
        gbc.writeMem(0xb5cf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x968c);
        EXPECT(gbc.pc(), 0xb5d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5cf), 0xcb);
        EXPECT(gbc.readMem(0xb5d0), 0x38);
        // CB 38 0305
        gbc.setState(0xdb20, 0x8451, 0xcf70, 0x8f2e, 0x5056, 0x28ca, 0x1, 0x1);
        gbc.writeMem(0xdb20, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8451);
        EXPECT(gbc.pc(), 0xdb22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb20), 0xcb);
        EXPECT(gbc.readMem(0xdb21), 0x38);
        // CB 38 0306
        gbc.setState(0x3783, 0x60f3, 0x8f0, 0xfa70, 0x45af, 0xc081, 0x0, 0x0);
        gbc.writeMem(0x3783, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x60f3);
        EXPECT(gbc.pc(), 0x3785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0307
        gbc.setState(0x11ab, 0xe578, 0xf370, 0x2979, 0xcb24, 0x3001, 0x0, 0x1);
        gbc.writeMem(0x11ab, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe578);
        EXPECT(gbc.pc(), 0x11ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0308
        gbc.setState(0xb117, 0xeaf0, 0xfb30, 0xaf12, 0x74d1, 0x5bc1, 0x0, 0x1);
        gbc.writeMem(0xb117, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xeaf0);
        EXPECT(gbc.pc(), 0xb119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb117), 0xcb);
        EXPECT(gbc.readMem(0xb118), 0x38);
        // CB 38 0309
        gbc.setState(0x3d0b, 0xa725, 0x7d0, 0x9519, 0x54ba, 0x6d16, 0x0, 0x1);
        gbc.writeMem(0x3d0b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa725);
        EXPECT(gbc.pc(), 0x3d0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 030A
        gbc.setState(0xcf9a, 0x9677, 0x87c0, 0xf6c0, 0xf6c3, 0xf91d, 0x1, 0x0);
        gbc.writeMem(0xcf9a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9677);
        EXPECT(gbc.pc(), 0xcf9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf9a), 0xcb);
        EXPECT(gbc.readMem(0xcf9b), 0x38);
        // CB 38 030B
        gbc.setState(0xd286, 0xbe5f, 0x9990, 0x1097, 0x14ae, 0x9297, 0x1, 0x1);
        gbc.writeMem(0xd286, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xbe5f);
        EXPECT(gbc.pc(), 0xd288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd286), 0xcb);
        EXPECT(gbc.readMem(0xd287), 0x38);
        // CB 38 030C
        gbc.setState(0x8752, 0xaa85, 0x5d10, 0xbab3, 0xc3a1, 0xe8da, 0x1, 0x1);
        gbc.writeMem(0x8752, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xaa85);
        EXPECT(gbc.pc(), 0x8754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8752), 0xcb);
        EXPECT(gbc.readMem(0x8753), 0x38);
        // CB 38 030D
        gbc.setState(0xae9a, 0x43f5, 0xbce0, 0x9ce5, 0x6a95, 0xfed7, 0x0, 0x0);
        gbc.writeMem(0xae9a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x43f5);
        EXPECT(gbc.pc(), 0xae9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae9a), 0xcb);
        EXPECT(gbc.readMem(0xae9b), 0x38);
        // CB 38 030E
        gbc.setState(0x4205, 0x7f70, 0x7160, 0x16e6, 0xd2b1, 0x9f9a, 0x1, 0x0);
        gbc.writeMem(0x4205, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7f70);
        EXPECT(gbc.pc(), 0x4207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 030F
        gbc.setState(0x62b0, 0xa390, 0x64a0, 0x398f, 0xd550, 0x284, 0x1, 0x1);
        gbc.writeMem(0x62b0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa390);
        EXPECT(gbc.pc(), 0x62b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0310
        gbc.setState(0x308, 0x6051, 0x35a0, 0x514c, 0x2561, 0x3c00, 0x0, 0x1);
        gbc.writeMem(0x308, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6051);
        EXPECT(gbc.pc(), 0x30a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0311
        gbc.setState(0x2e20, 0x3196, 0x90, 0xd8ce, 0xf3c1, 0x59a6, 0x0, 0x1);
        gbc.writeMem(0x2e20, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3196);
        EXPECT(gbc.pc(), 0x2e22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0312
        gbc.setState(0x594, 0xb474, 0xd4a0, 0xc549, 0x6612, 0xaabc, 0x0, 0x1);
        gbc.writeMem(0x594, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb474);
        EXPECT(gbc.pc(), 0x596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0314
        gbc.setState(0x96e7, 0x9422, 0xec00, 0x69fe, 0x9b2c, 0x16f2, 0x1, 0x0);
        gbc.writeMem(0x96e7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9422);
        EXPECT(gbc.pc(), 0x96e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e7), 0xcb);
        EXPECT(gbc.readMem(0x96e8), 0x38);
        // CB 38 0315
        gbc.setState(0xe21a, 0x1ec1, 0xa490, 0x24b9, 0x707c, 0xf4c7, 0x0, 0x0);
        gbc.writeMem(0xe21a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1ec1);
        EXPECT(gbc.pc(), 0xe21c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe21a), 0xcb);
        EXPECT(gbc.readMem(0xe21b), 0x38);
        // CB 38 0317
        gbc.setState(0xaaf2, 0x8069, 0x7f90, 0xf6ab, 0x21f5, 0xfb14, 0x1, 0x0);
        gbc.writeMem(0xaaf2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8069);
        EXPECT(gbc.pc(), 0xaaf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf2), 0xcb);
        EXPECT(gbc.readMem(0xaaf3), 0x38);
        // CB 38 0318
        gbc.setState(0xe134, 0x867d, 0xdef0, 0x8de, 0x7c72, 0xa266, 0x1, 0x1);
        gbc.writeMem(0xe134, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x867d);
        EXPECT(gbc.pc(), 0xe136);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe134), 0xcb);
        EXPECT(gbc.readMem(0xe135), 0x38);
        // CB 38 0319
        gbc.setState(0xda8c, 0x469c, 0x7040, 0xd891, 0x4c8e, 0xae8d, 0x1, 0x1);
        gbc.writeMem(0xda8c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x469c);
        EXPECT(gbc.pc(), 0xda8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8c), 0xcb);
        EXPECT(gbc.readMem(0xda8d), 0x38);
        // CB 38 031A
        gbc.setState(0x7b2c, 0x6f86, 0x4400, 0x3374, 0x75e9, 0xb409, 0x1, 0x1);
        gbc.writeMem(0x7b2c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6f86);
        EXPECT(gbc.pc(), 0x7b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 031B
        gbc.setState(0x250a, 0x1981, 0xeb00, 0x6b46, 0x9a06, 0x938e, 0x1, 0x1);
        gbc.writeMem(0x250a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1981);
        EXPECT(gbc.pc(), 0x250c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 031C
        gbc.setState(0xeeb0, 0x8b66, 0x3560, 0x7113, 0x1ca3, 0x3edd, 0x1, 0x0);
        gbc.writeMem(0xeeb0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8b66);
        EXPECT(gbc.pc(), 0xeeb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb0), 0xcb);
        EXPECT(gbc.readMem(0xeeb1), 0x38);
        // CB 38 031D
        gbc.setState(0xeba9, 0x180b, 0x60c0, 0x24c5, 0x6379, 0xe908, 0x0, 0x0);
        gbc.writeMem(0xeba9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x180b);
        EXPECT(gbc.pc(), 0xebab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeba9), 0xcb);
        EXPECT(gbc.readMem(0xebaa), 0x38);
        // CB 38 031E
        gbc.setState(0x28fa, 0x29d1, 0x45c0, 0x568f, 0x4f4e, 0x1f89, 0x0, 0x1);
        gbc.writeMem(0x28fa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x29d1);
        EXPECT(gbc.pc(), 0x28fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 031F
        gbc.setState(0x6d08, 0xe44, 0xc700, 0xf855, 0x5225, 0xabb5, 0x0, 0x0);
        gbc.writeMem(0x6d08, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe44);
        EXPECT(gbc.pc(), 0x6d0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0320
        gbc.setState(0xab81, 0x46a2, 0x90f0, 0x2008, 0x6a27, 0xfd72, 0x0, 0x0);
        gbc.writeMem(0xab81, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x46a2);
        EXPECT(gbc.pc(), 0xab83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab81), 0xcb);
        EXPECT(gbc.readMem(0xab82), 0x38);
        // CB 38 0321
        gbc.setState(0x45df, 0xc407, 0xf8b0, 0x352, 0x415f, 0x62f0, 0x1, 0x1);
        gbc.writeMem(0x45df, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc407);
        EXPECT(gbc.pc(), 0x45e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0322
        gbc.setState(0xc8af, 0x5721, 0x6a30, 0xf93f, 0x2d01, 0xf217, 0x0, 0x1);
        gbc.writeMem(0xc8af, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5721);
        EXPECT(gbc.pc(), 0xc8b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8af), 0xcb);
        EXPECT(gbc.readMem(0xc8b0), 0x38);
        // CB 38 0323
        gbc.setState(0x2fdc, 0x8040, 0x2830, 0x32af, 0x7d9e, 0xffee, 0x0, 0x1);
        gbc.writeMem(0x2fdc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8040);
        EXPECT(gbc.pc(), 0x2fde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0324
        gbc.setState(0x1c9a, 0xcf44, 0xe6d0, 0xe3e0, 0x66a7, 0xe3cb, 0x1, 0x0);
        gbc.writeMem(0x1c9a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xcf44);
        EXPECT(gbc.pc(), 0x1c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0325
        gbc.setState(0xc1a, 0x507, 0x45d0, 0xe44b, 0xbdbe, 0x8e, 0x1, 0x0);
        gbc.writeMem(0xc1a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x507);
        EXPECT(gbc.pc(), 0xc1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0326
        gbc.setState(0x4ff6, 0x995c, 0xbf0, 0x33e, 0xebcd, 0xc3c, 0x0, 0x0);
        gbc.writeMem(0x4ff6, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x995c);
        EXPECT(gbc.pc(), 0x4ff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0327
        gbc.setState(0xc75f, 0xdcc7, 0xa490, 0xfb31, 0xf4dc, 0xd168, 0x0, 0x1);
        gbc.writeMem(0xc75f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xdcc7);
        EXPECT(gbc.pc(), 0xc761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc75f), 0xcb);
        EXPECT(gbc.readMem(0xc760), 0x38);
        // CB 38 0328
        gbc.setState(0xb11b, 0xb172, 0x7270, 0xf27d, 0xb8df, 0x2aca, 0x1, 0x0);
        gbc.writeMem(0xb11b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb172);
        EXPECT(gbc.pc(), 0xb11d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb11b), 0xcb);
        EXPECT(gbc.readMem(0xb11c), 0x38);
        // CB 38 0329
        gbc.setState(0x806e, 0x6dc6, 0x8cd0, 0xa8ef, 0xbe05, 0xa593, 0x1, 0x0);
        gbc.writeMem(0x806e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6dc6);
        EXPECT(gbc.pc(), 0x8070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x806e), 0xcb);
        EXPECT(gbc.readMem(0x806f), 0x38);
        // CB 38 032A
        gbc.setState(0xf99, 0x59, 0x66a0, 0x8ca7, 0x5c5d, 0x7373, 0x1, 0x1);
        gbc.writeMem(0xf99, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x59);
        EXPECT(gbc.pc(), 0xf9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 032B
        gbc.setState(0x9d34, 0x10fc, 0x3ec0, 0x6cdf, 0x299b, 0x1123, 0x1, 0x0);
        gbc.writeMem(0x9d34, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x10fc);
        EXPECT(gbc.pc(), 0x9d36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d34), 0xcb);
        EXPECT(gbc.readMem(0x9d35), 0x38);
        // CB 38 032C
        gbc.setState(0xde2d, 0x8673, 0x5b0, 0xaf64, 0xfc52, 0x5fb9, 0x1, 0x0);
        gbc.writeMem(0xde2d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8673);
        EXPECT(gbc.pc(), 0xde2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde2d), 0xcb);
        EXPECT(gbc.readMem(0xde2e), 0x38);
        // CB 38 032D
        gbc.setState(0xbfe, 0x6a79, 0xd890, 0x708a, 0x582b, 0xaef, 0x0, 0x1);
        gbc.writeMem(0xbfe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6a79);
        EXPECT(gbc.pc(), 0xc00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 032E
        gbc.setState(0x7985, 0x9602, 0x7bd0, 0xd094, 0x4b0, 0x1ec1, 0x0, 0x1);
        gbc.writeMem(0x7985, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9602);
        EXPECT(gbc.pc(), 0x7987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 032F
        gbc.setState(0x723, 0xf2e0, 0x1000, 0xcd09, 0xda6d, 0x896a, 0x1, 0x0);
        gbc.writeMem(0x723, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf2e0);
        EXPECT(gbc.pc(), 0x725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0330
        gbc.setState(0xa7a, 0xf95a, 0x9d90, 0x806c, 0x9635, 0x848c, 0x0, 0x1);
        gbc.writeMem(0xa7a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf95a);
        EXPECT(gbc.pc(), 0xa7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0331
        gbc.setState(0x2e55, 0x3682, 0x8510, 0x34d7, 0x4b49, 0x1626, 0x1, 0x0);
        gbc.writeMem(0x2e55, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3682);
        EXPECT(gbc.pc(), 0x2e57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0332
        gbc.setState(0xd9bc, 0x34f5, 0x6270, 0x5ee7, 0xc969, 0x3337, 0x0, 0x1);
        gbc.writeMem(0xd9bc, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x34f5);
        EXPECT(gbc.pc(), 0xd9be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9bc), 0xcb);
        EXPECT(gbc.readMem(0xd9bd), 0x38);
        // CB 38 0333
        gbc.setState(0xc915, 0xef5, 0xd830, 0xc8b6, 0xfe6a, 0xaef6, 0x1, 0x0);
        gbc.writeMem(0xc915, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xef5);
        EXPECT(gbc.pc(), 0xc917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc915), 0xcb);
        EXPECT(gbc.readMem(0xc916), 0x38);
        // CB 38 0334
        gbc.setState(0x7f84, 0x5c76, 0xef30, 0x812d, 0x3f36, 0xb1fe, 0x1, 0x1);
        gbc.writeMem(0x7f84, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5c76);
        EXPECT(gbc.pc(), 0x7f86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0336
        gbc.setState(0xef6b, 0xd245, 0x7250, 0xc211, 0x6279, 0xfcae, 0x0, 0x0);
        gbc.writeMem(0xef6b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd245);
        EXPECT(gbc.pc(), 0xef6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef6b), 0xcb);
        EXPECT(gbc.readMem(0xef6c), 0x38);
        // CB 38 0337
        gbc.setState(0x9128, 0x6885, 0x4b90, 0xa40f, 0xccb6, 0x91da, 0x1, 0x0);
        gbc.writeMem(0x9128, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6885);
        EXPECT(gbc.pc(), 0x912a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9128), 0xcb);
        EXPECT(gbc.readMem(0x9129), 0x38);
        // CB 38 0338
        gbc.setState(0x4ba3, 0xcecb, 0xc080, 0xcaab, 0xd1c, 0xf053, 0x1, 0x0);
        gbc.writeMem(0x4ba3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xcecb);
        EXPECT(gbc.pc(), 0x4ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0339
        gbc.setState(0x61d4, 0x86ed, 0xfb60, 0xa456, 0xf761, 0x33a3, 0x0, 0x1);
        gbc.writeMem(0x61d4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x86ed);
        EXPECT(gbc.pc(), 0x61d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 033A
        gbc.setState(0x7bdb, 0x7470, 0x9f70, 0x6acc, 0x66ca, 0x64b0, 0x1, 0x1);
        gbc.writeMem(0x7bdb, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7470);
        EXPECT(gbc.pc(), 0x7bdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 033B
        gbc.setState(0xecae, 0x3740, 0xa720, 0x6be5, 0x64f7, 0xd279, 0x0, 0x0);
        gbc.writeMem(0xecae, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3740);
        EXPECT(gbc.pc(), 0xecb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecae), 0xcb);
        EXPECT(gbc.readMem(0xecaf), 0x38);
        // CB 38 033C
        gbc.setState(0x8a53, 0xe438, 0x34b0, 0x66cd, 0xbafa, 0x7206, 0x0, 0x0);
        gbc.writeMem(0x8a53, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe438);
        EXPECT(gbc.pc(), 0x8a55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a53), 0xcb);
        EXPECT(gbc.readMem(0x8a54), 0x38);
        // CB 38 033D
        gbc.setState(0xe381, 0x35c1, 0xedb0, 0x4735, 0x5c01, 0x23ed, 0x0, 0x0);
        gbc.writeMem(0xe381, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x35c1);
        EXPECT(gbc.pc(), 0xe383);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe381), 0xcb);
        EXPECT(gbc.readMem(0xe382), 0x38);
        // CB 38 033E
        gbc.setState(0x4c6b, 0x1487, 0x8ef0, 0x57d5, 0x4a1b, 0x1144, 0x1, 0x0);
        gbc.writeMem(0x4c6b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1487);
        EXPECT(gbc.pc(), 0x4c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 033F
        gbc.setState(0x2f72, 0x4aad, 0xd5d0, 0xf433, 0xa2fd, 0x7ce3, 0x1, 0x1);
        gbc.writeMem(0x2f72, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4aad);
        EXPECT(gbc.pc(), 0x2f74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0340
        gbc.setState(0xb7dd, 0xc214, 0xbaf0, 0xd727, 0x9d0c, 0xa3f, 0x0, 0x1);
        gbc.writeMem(0xb7dd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc214);
        EXPECT(gbc.pc(), 0xb7df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7dd), 0xcb);
        EXPECT(gbc.readMem(0xb7de), 0x38);
        // CB 38 0341
        gbc.setState(0x6769, 0x8102, 0x5680, 0xdefb, 0x8c20, 0xc33f, 0x1, 0x1);
        gbc.writeMem(0x6769, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8102);
        EXPECT(gbc.pc(), 0x676b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0342
        gbc.setState(0xace9, 0xef6c, 0xe170, 0xaac, 0xf617, 0x4ef8, 0x1, 0x1);
        gbc.writeMem(0xace9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xef6c);
        EXPECT(gbc.pc(), 0xaceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xace9), 0xcb);
        EXPECT(gbc.readMem(0xacea), 0x38);
        // CB 38 0343
        gbc.setState(0xe39e, 0x3e63, 0x60b0, 0x971a, 0xa9ff, 0xf93a, 0x0, 0x1);
        gbc.writeMem(0xe39e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3e63);
        EXPECT(gbc.pc(), 0xe3a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe39e), 0xcb);
        EXPECT(gbc.readMem(0xe39f), 0x38);
        // CB 38 0344
        gbc.setState(0x839c, 0x6763, 0x5650, 0x9f68, 0xb0df, 0x18c2, 0x0, 0x0);
        gbc.writeMem(0x839c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6763);
        EXPECT(gbc.pc(), 0x839e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x839c), 0xcb);
        EXPECT(gbc.readMem(0x839d), 0x38);
        // CB 38 0345
        gbc.setState(0x715a, 0x257e, 0x1b60, 0x1387, 0xffa7, 0x815a, 0x1, 0x0);
        gbc.writeMem(0x715a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x257e);
        EXPECT(gbc.pc(), 0x715c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0346
        gbc.setState(0x811a, 0xbfd4, 0xbb0, 0x78f2, 0x64a0, 0xf8bb, 0x1, 0x0);
        gbc.writeMem(0x811a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbfd4);
        EXPECT(gbc.pc(), 0x811c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811a), 0xcb);
        EXPECT(gbc.readMem(0x811b), 0x38);
        // CB 38 0347
        gbc.setState(0x7b4f, 0xb9a0, 0x7b30, 0x693f, 0xe812, 0x926a, 0x1, 0x0);
        gbc.writeMem(0x7b4f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb9a0);
        EXPECT(gbc.pc(), 0x7b51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0348
        gbc.setState(0x3224, 0xf0a3, 0x8a00, 0x86b3, 0x574f, 0xe3a0, 0x1, 0x1);
        gbc.writeMem(0x3224, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf0a3);
        EXPECT(gbc.pc(), 0x3226);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0349
        gbc.setState(0x947f, 0xa5a0, 0x6af0, 0xc6f4, 0x2b74, 0xdeaf, 0x0, 0x1);
        gbc.writeMem(0x947f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa5a0);
        EXPECT(gbc.pc(), 0x9481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x947f), 0xcb);
        EXPECT(gbc.readMem(0x9480), 0x38);
        // CB 38 034A
        gbc.setState(0xb07a, 0x9f67, 0xa6f0, 0xc441, 0xdc7b, 0xc49e, 0x1, 0x1);
        gbc.writeMem(0xb07a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9f67);
        EXPECT(gbc.pc(), 0xb07c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb07a), 0xcb);
        EXPECT(gbc.readMem(0xb07b), 0x38);
        // CB 38 034B
        gbc.setState(0x2d03, 0x2cfb, 0x38a0, 0xa3fc, 0xb1a2, 0x8ab3, 0x1, 0x0);
        gbc.writeMem(0x2d03, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2cfb);
        EXPECT(gbc.pc(), 0x2d05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 034C
        gbc.setState(0xacb1, 0x80d5, 0x5bc0, 0xd2a9, 0x210, 0x9534, 0x0, 0x0);
        gbc.writeMem(0xacb1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x80d5);
        EXPECT(gbc.pc(), 0xacb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacb1), 0xcb);
        EXPECT(gbc.readMem(0xacb2), 0x38);
        // CB 38 034D
        gbc.setState(0x5d49, 0x88e9, 0x49c0, 0x2ce5, 0xb792, 0xec2b, 0x0, 0x0);
        gbc.writeMem(0x5d49, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x88e9);
        EXPECT(gbc.pc(), 0x5d4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 034E
        gbc.setState(0x4d54, 0x93db, 0x6b40, 0xda16, 0xa3f2, 0x1398, 0x0, 0x0);
        gbc.writeMem(0x4d54, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x93db);
        EXPECT(gbc.pc(), 0x4d56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 034F
        gbc.setState(0x3be2, 0x2ca0, 0xebb0, 0xde9d, 0x208c, 0xef8, 0x1, 0x0);
        gbc.writeMem(0x3be2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2ca0);
        EXPECT(gbc.pc(), 0x3be4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0350
        gbc.setState(0xc0df, 0xfcca, 0x6230, 0xd69d, 0x4769, 0x11b2, 0x0, 0x0);
        gbc.writeMem(0xc0df, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xfcca);
        EXPECT(gbc.pc(), 0xc0e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0df), 0xcb);
        EXPECT(gbc.readMem(0xc0e0), 0x38);
        // CB 38 0351
        gbc.setState(0x9199, 0xff7c, 0xc880, 0x8dd, 0xa28d, 0xa1b6, 0x0, 0x0);
        gbc.writeMem(0x9199, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xff7c);
        EXPECT(gbc.pc(), 0x919b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9199), 0xcb);
        EXPECT(gbc.readMem(0x919a), 0x38);
        // CB 38 0352
        gbc.setState(0xde4b, 0xf834, 0xd4b0, 0xed02, 0x3448, 0x3e7b, 0x1, 0x0);
        gbc.writeMem(0xde4b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf834);
        EXPECT(gbc.pc(), 0xde4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde4b), 0xcb);
        EXPECT(gbc.readMem(0xde4c), 0x38);
        // CB 38 0353
        gbc.setState(0x313f, 0xec8, 0xaa50, 0xf490, 0x3b29, 0x67db, 0x0, 0x0);
        gbc.writeMem(0x313f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xec8);
        EXPECT(gbc.pc(), 0x3141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0354
        gbc.setState(0x55fe, 0xfa9d, 0x89a0, 0xa9ec, 0xc532, 0xdc5b, 0x1, 0x0);
        gbc.writeMem(0x55fe, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xfa9d);
        EXPECT(gbc.pc(), 0x5600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0355
        gbc.setState(0x13dd, 0x40d5, 0xafb0, 0xb5e3, 0x1aee, 0xda8f, 0x0, 0x0);
        gbc.writeMem(0x13dd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x40d5);
        EXPECT(gbc.pc(), 0x13df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0356
        gbc.setState(0x6a26, 0x5d5d, 0x9e90, 0x310c, 0xaa9f, 0xf560, 0x0, 0x1);
        gbc.writeMem(0x6a26, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5d5d);
        EXPECT(gbc.pc(), 0x6a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0358
        gbc.setState(0x22ae, 0xa0d8, 0xa480, 0xf1ea, 0xa46c, 0x7215, 0x0, 0x0);
        gbc.writeMem(0x22ae, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa0d8);
        EXPECT(gbc.pc(), 0x22b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0359
        gbc.setState(0xeda9, 0x50ea, 0x5430, 0x55a, 0xd0a, 0x54c0, 0x1, 0x0);
        gbc.writeMem(0xeda9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x50ea);
        EXPECT(gbc.pc(), 0xedab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda9), 0xcb);
        EXPECT(gbc.readMem(0xedaa), 0x38);
        // CB 38 035A
        gbc.setState(0x98c1, 0x3618, 0x29d0, 0x1578, 0x835d, 0xc90, 0x0, 0x1);
        gbc.writeMem(0x98c1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3618);
        EXPECT(gbc.pc(), 0x98c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c1), 0xcb);
        EXPECT(gbc.readMem(0x98c2), 0x38);
        // CB 38 035B
        gbc.setState(0x6a5f, 0x5ca8, 0xa940, 0x8641, 0xb3d, 0x50da, 0x1, 0x1);
        gbc.writeMem(0x6a5f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5ca8);
        EXPECT(gbc.pc(), 0x6a61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 035C
        gbc.setState(0x4d63, 0xed83, 0xff90, 0x64f, 0xbeb4, 0xeb3d, 0x1, 0x1);
        gbc.writeMem(0x4d63, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xed83);
        EXPECT(gbc.pc(), 0x4d65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 035D
        gbc.setState(0x81cd, 0xc024, 0x54e0, 0xd2b7, 0x1323, 0x39c9, 0x0, 0x1);
        gbc.writeMem(0x81cd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc024);
        EXPECT(gbc.pc(), 0x81cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81cd), 0xcb);
        EXPECT(gbc.readMem(0x81ce), 0x38);
        // CB 38 035E
        gbc.setState(0x1a3c, 0xf7bf, 0xe4f0, 0xe61c, 0x8a05, 0x9340, 0x1, 0x0);
        gbc.writeMem(0x1a3c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf7bf);
        EXPECT(gbc.pc(), 0x1a3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 035F
        gbc.setState(0xc58c, 0x7102, 0x3a50, 0xab42, 0x3f32, 0x9046, 0x0, 0x1);
        gbc.writeMem(0xc58c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7102);
        EXPECT(gbc.pc(), 0xc58e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc58c), 0xcb);
        EXPECT(gbc.readMem(0xc58d), 0x38);
        // CB 38 0360
        gbc.setState(0x4b0e, 0x4889, 0x9a30, 0x9b1a, 0xf02f, 0xf9a8, 0x1, 0x1);
        gbc.writeMem(0x4b0e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4889);
        EXPECT(gbc.pc(), 0x4b10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0361
        gbc.setState(0x4e3c, 0xe54a, 0x7ba0, 0x5b6b, 0x55cc, 0x4b2f, 0x1, 0x0);
        gbc.writeMem(0x4e3c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe54a);
        EXPECT(gbc.pc(), 0x4e3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0362
        gbc.setState(0xb9b5, 0x2b14, 0xca10, 0x98cb, 0x235d, 0xdd51, 0x1, 0x0);
        gbc.writeMem(0xb9b5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2b14);
        EXPECT(gbc.pc(), 0xb9b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b5), 0xcb);
        EXPECT(gbc.readMem(0xb9b6), 0x38);
        // CB 38 0363
        gbc.setState(0xbfc9, 0xae1b, 0x2940, 0xe9be, 0x1420, 0xe93b, 0x0, 0x0);
        gbc.writeMem(0xbfc9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xae1b);
        EXPECT(gbc.pc(), 0xbfcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfc9), 0xcb);
        EXPECT(gbc.readMem(0xbfca), 0x38);
        // CB 38 0364
        gbc.setState(0x3ab1, 0x262b, 0x24b0, 0xdc4a, 0xed4b, 0x2eac, 0x0, 0x1);
        gbc.writeMem(0x3ab1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x262b);
        EXPECT(gbc.pc(), 0x3ab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0365
        gbc.setState(0xdddf, 0x192, 0x7be0, 0x56c3, 0x5830, 0xcbd5, 0x1, 0x1);
        gbc.writeMem(0xdddf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x192);
        EXPECT(gbc.pc(), 0xdde1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdddf), 0xcb);
        EXPECT(gbc.readMem(0xdde0), 0x38);
        // CB 38 0366
        gbc.setState(0x1b98, 0xb76, 0x1f00, 0x83f8, 0x860a, 0xbcb1, 0x0, 0x0);
        gbc.writeMem(0x1b98, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb76);
        EXPECT(gbc.pc(), 0x1b9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0367
        gbc.setState(0xce17, 0x4f23, 0xe470, 0x80, 0x815f, 0x839e, 0x1, 0x1);
        gbc.writeMem(0xce17, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4f23);
        EXPECT(gbc.pc(), 0xce19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce17), 0xcb);
        EXPECT(gbc.readMem(0xce18), 0x38);
        // CB 38 0368
        gbc.setState(0xc13a, 0xe232, 0xc8e0, 0x18a7, 0xac37, 0x6dd8, 0x1, 0x0);
        gbc.writeMem(0xc13a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe232);
        EXPECT(gbc.pc(), 0xc13c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc13a), 0xcb);
        EXPECT(gbc.readMem(0xc13b), 0x38);
        // CB 38 0369
        gbc.setState(0xc673, 0x44df, 0xfe30, 0xc1de, 0x1376, 0xcb7e, 0x1, 0x1);
        gbc.writeMem(0xc673, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x44df);
        EXPECT(gbc.pc(), 0xc675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc673), 0xcb);
        EXPECT(gbc.readMem(0xc674), 0x38);
        // CB 38 036A
        gbc.setState(0xec79, 0xd083, 0x4c00, 0x4c2e, 0x2739, 0x3704, 0x0, 0x1);
        gbc.writeMem(0xec79, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd083);
        EXPECT(gbc.pc(), 0xec7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec79), 0xcb);
        EXPECT(gbc.readMem(0xec7a), 0x38);
        // CB 38 036B
        gbc.setState(0x244b, 0xdb6e, 0x4be0, 0x2f9c, 0x1796, 0x2a7e, 0x1, 0x1);
        gbc.writeMem(0x244b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xdb6e);
        EXPECT(gbc.pc(), 0x244d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 036C
        gbc.setState(0x461, 0xd456, 0xeaf0, 0x702b, 0x71aa, 0xb365, 0x1, 0x1);
        gbc.writeMem(0x461, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd456);
        EXPECT(gbc.pc(), 0x463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 036E
        gbc.setState(0xa165, 0xb10b, 0xb270, 0xf1b7, 0x3913, 0x9b22, 0x1, 0x0);
        gbc.writeMem(0xa165, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb10b);
        EXPECT(gbc.pc(), 0xa167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa165), 0xcb);
        EXPECT(gbc.readMem(0xa166), 0x38);
        // CB 38 036F
        gbc.setState(0xc54d, 0x115f, 0x5d70, 0x9603, 0xde10, 0xff04, 0x1, 0x0);
        gbc.writeMem(0xc54d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x115f);
        EXPECT(gbc.pc(), 0xc54f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc54d), 0xcb);
        EXPECT(gbc.readMem(0xc54e), 0x38);
        // CB 38 0370
        gbc.setState(0x6366, 0x2ab1, 0x44f0, 0xd350, 0x3e73, 0x2ff2, 0x1, 0x0);
        gbc.writeMem(0x6366, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2ab1);
        EXPECT(gbc.pc(), 0x6368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0371
        gbc.setState(0x4944, 0x543a, 0xfac0, 0x22cb, 0xd21f, 0xdc58, 0x1, 0x1);
        gbc.writeMem(0x4944, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x543a);
        EXPECT(gbc.pc(), 0x4946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0372
        gbc.setState(0x588b, 0x20d0, 0x8180, 0xac4d, 0xd20f, 0xe82b, 0x0, 0x0);
        gbc.writeMem(0x588b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x20d0);
        EXPECT(gbc.pc(), 0x588d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0373
        gbc.setState(0x6190, 0x3a01, 0xb3f0, 0xf8, 0xc8bd, 0x1862, 0x0, 0x1);
        gbc.writeMem(0x6190, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3a01);
        EXPECT(gbc.pc(), 0x6192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0374
        gbc.setState(0x1f12, 0x28a8, 0x3f50, 0x62de, 0xa347, 0xeb09, 0x0, 0x0);
        gbc.writeMem(0x1f12, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x28a8);
        EXPECT(gbc.pc(), 0x1f14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0375
        gbc.setState(0x5741, 0xb71e, 0xb160, 0x792f, 0xfd39, 0xd0ac, 0x0, 0x1);
        gbc.writeMem(0x5741, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb71e);
        EXPECT(gbc.pc(), 0x5743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0376
        gbc.setState(0xb7dd, 0x4df2, 0x95f0, 0xceeb, 0xd072, 0x9839, 0x1, 0x0);
        gbc.writeMem(0xb7dd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4df2);
        EXPECT(gbc.pc(), 0xb7df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7dd), 0xcb);
        EXPECT(gbc.readMem(0xb7de), 0x38);
        // CB 38 0377
        gbc.setState(0x6a37, 0x504e, 0xef0, 0xd12f, 0x572, 0xccc9, 0x1, 0x1);
        gbc.writeMem(0x6a37, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x504e);
        EXPECT(gbc.pc(), 0x6a39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0378
        gbc.setState(0x27c7, 0x50cd, 0x6c10, 0x8887, 0x23ca, 0xd902, 0x0, 0x0);
        gbc.writeMem(0x27c7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x50cd);
        EXPECT(gbc.pc(), 0x27c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0379
        gbc.setState(0x2efa, 0x6a0f, 0x480, 0x31c2, 0xb47f, 0xfc99, 0x1, 0x0);
        gbc.writeMem(0x2efa, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6a0f);
        EXPECT(gbc.pc(), 0x2efc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 037A
        gbc.setState(0x4c3b, 0xf6b3, 0x5130, 0x4d3f, 0x4441, 0xe1c6, 0x1, 0x0);
        gbc.writeMem(0x4c3b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf6b3);
        EXPECT(gbc.pc(), 0x4c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 037B
        gbc.setState(0x85da, 0xbaf5, 0x3a40, 0x52ac, 0x90c1, 0x4282, 0x0, 0x1);
        gbc.writeMem(0x85da, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbaf5);
        EXPECT(gbc.pc(), 0x85dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85da), 0xcb);
        EXPECT(gbc.readMem(0x85db), 0x38);
        // CB 38 037C
        gbc.setState(0x7f6a, 0x1f6e, 0xa1d0, 0x101, 0x7f69, 0x85b, 0x1, 0x0);
        gbc.writeMem(0x7f6a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1f6e);
        EXPECT(gbc.pc(), 0x7f6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 037D
        gbc.setState(0x2e1f, 0x8238, 0xff50, 0xcf02, 0xe2d3, 0xd2d, 0x0, 0x0);
        gbc.writeMem(0x2e1f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8238);
        EXPECT(gbc.pc(), 0x2e21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 037E
        gbc.setState(0x4270, 0xd140, 0x1ae0, 0xe59b, 0xa8d6, 0x5dab, 0x0, 0x0);
        gbc.writeMem(0x4270, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd140);
        EXPECT(gbc.pc(), 0x4272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0380
        gbc.setState(0x1942, 0x4169, 0x8d00, 0x175b, 0x584b, 0xc513, 0x1, 0x1);
        gbc.writeMem(0x1942, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4169);
        EXPECT(gbc.pc(), 0x1944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0381
        gbc.setState(0x5854, 0xcf13, 0x1e00, 0x3207, 0x52bd, 0x24a, 0x1, 0x0);
        gbc.writeMem(0x5854, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xcf13);
        EXPECT(gbc.pc(), 0x5856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0382
        gbc.setState(0x2799, 0x9844, 0xae50, 0xadae, 0xfb7d, 0x7349, 0x1, 0x0);
        gbc.writeMem(0x2799, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9844);
        EXPECT(gbc.pc(), 0x279b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0383
        gbc.setState(0x1834, 0x94aa, 0xa540, 0x5255, 0x53ed, 0x2540, 0x0, 0x1);
        gbc.writeMem(0x1834, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x94aa);
        EXPECT(gbc.pc(), 0x1836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0384
        gbc.setState(0xcd89, 0xcf08, 0xf00, 0xd10e, 0x78dc, 0xbd11, 0x0, 0x1);
        gbc.writeMem(0xcd89, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcf08);
        EXPECT(gbc.pc(), 0xcd8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd89), 0xcb);
        EXPECT(gbc.readMem(0xcd8a), 0x38);
        // CB 38 0385
        gbc.setState(0xa538, 0xf4b2, 0x1280, 0x17b6, 0x72c5, 0x7f8f, 0x0, 0x0);
        gbc.writeMem(0xa538, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf4b2);
        EXPECT(gbc.pc(), 0xa53a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa538), 0xcb);
        EXPECT(gbc.readMem(0xa539), 0x38);
        // CB 38 0386
        gbc.setState(0x49f7, 0xd802, 0x3220, 0x810, 0xf673, 0x26f1, 0x0, 0x1);
        gbc.writeMem(0x49f7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd802);
        EXPECT(gbc.pc(), 0x49f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0387
        gbc.setState(0x9507, 0xf7c0, 0xb1f0, 0x9c62, 0xbd9f, 0xbb44, 0x0, 0x0);
        gbc.writeMem(0x9507, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf7c0);
        EXPECT(gbc.pc(), 0x9509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9507), 0xcb);
        EXPECT(gbc.readMem(0x9508), 0x38);
        // CB 38 0388
        gbc.setState(0xe320, 0xaa0, 0xadd0, 0x5e41, 0xbc13, 0x9c27, 0x1, 0x0);
        gbc.writeMem(0xe320, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xaa0);
        EXPECT(gbc.pc(), 0xe322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe320), 0xcb);
        EXPECT(gbc.readMem(0xe321), 0x38);
        // CB 38 0389
        gbc.setState(0x5ad7, 0x1c2, 0x7900, 0x8f62, 0x3277, 0x54b7, 0x1, 0x1);
        gbc.writeMem(0x5ad7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1c2);
        EXPECT(gbc.pc(), 0x5ad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 038A
        gbc.setState(0xda59, 0x47cf, 0xe630, 0x2d75, 0x82f1, 0x93c8, 0x1, 0x0);
        gbc.writeMem(0xda59, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x47cf);
        EXPECT(gbc.pc(), 0xda5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda59), 0xcb);
        EXPECT(gbc.readMem(0xda5a), 0x38);
        // CB 38 038B
        gbc.setState(0x9917, 0x7176, 0x7c40, 0xd649, 0xc780, 0x54d0, 0x1, 0x0);
        gbc.writeMem(0x9917, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7176);
        EXPECT(gbc.pc(), 0x9919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9917), 0xcb);
        EXPECT(gbc.readMem(0x9918), 0x38);
        // CB 38 038C
        gbc.setState(0xc0e3, 0x4fa5, 0xed80, 0x9dab, 0x3590, 0x5006, 0x1, 0x1);
        gbc.writeMem(0xc0e3, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4fa5);
        EXPECT(gbc.pc(), 0xc0e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e3), 0xcb);
        EXPECT(gbc.readMem(0xc0e4), 0x38);
        // CB 38 038D
        gbc.setState(0x27e0, 0xe45c, 0xb50, 0x43b6, 0xc97f, 0xa106, 0x0, 0x0);
        gbc.writeMem(0x27e0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe45c);
        EXPECT(gbc.pc(), 0x27e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 038E
        gbc.setState(0x94ea, 0x902, 0x18e0, 0x5cd, 0x4b79, 0xecea, 0x0, 0x1);
        gbc.writeMem(0x94ea, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x902);
        EXPECT(gbc.pc(), 0x94ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ea), 0xcb);
        EXPECT(gbc.readMem(0x94eb), 0x38);
        // CB 38 038F
        gbc.setState(0x9c72, 0xa3a8, 0xa790, 0x9a71, 0xa993, 0x5b35, 0x1, 0x0);
        gbc.writeMem(0x9c72, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa3a8);
        EXPECT(gbc.pc(), 0x9c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c72), 0xcb);
        EXPECT(gbc.readMem(0x9c73), 0x38);
        // CB 38 0390
        gbc.setState(0x9c1e, 0x3704, 0xbb80, 0x5ae, 0x9c0a, 0xfca8, 0x0, 0x1);
        gbc.writeMem(0x9c1e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3704);
        EXPECT(gbc.pc(), 0x9c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c1e), 0xcb);
        EXPECT(gbc.readMem(0x9c1f), 0x38);
        // CB 38 0391
        gbc.setState(0xa43, 0xb7f4, 0xe140, 0xb828, 0x51a2, 0xe215, 0x1, 0x1);
        gbc.writeMem(0xa43, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb7f4);
        EXPECT(gbc.pc(), 0xa45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0392
        gbc.setState(0xbac2, 0x58dd, 0xadf0, 0x1d15, 0x9d10, 0xc6d5, 0x1, 0x0);
        gbc.writeMem(0xbac2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x58dd);
        EXPECT(gbc.pc(), 0xbac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbac2), 0xcb);
        EXPECT(gbc.readMem(0xbac3), 0x38);
        // CB 38 0393
        gbc.setState(0xa5e4, 0xde3b, 0x6490, 0x67cc, 0xd2fb, 0x50fb, 0x0, 0x1);
        gbc.writeMem(0xa5e4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xde3b);
        EXPECT(gbc.pc(), 0xa5e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5e4), 0xcb);
        EXPECT(gbc.readMem(0xa5e5), 0x38);
        // CB 38 0394
        gbc.setState(0x6b3a, 0xf5de, 0x7af0, 0xfcd2, 0xaf3b, 0xfc64, 0x1, 0x1);
        gbc.writeMem(0x6b3a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf5de);
        EXPECT(gbc.pc(), 0x6b3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0395
        gbc.setState(0x5c01, 0xf795, 0x8d20, 0x8331, 0xf778, 0x63e8, 0x1, 0x0);
        gbc.writeMem(0x5c01, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf795);
        EXPECT(gbc.pc(), 0x5c03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0396
        gbc.setState(0x6397, 0x1055, 0x38e0, 0xd4c5, 0xf4a5, 0xbefd, 0x1, 0x0);
        gbc.writeMem(0x6397, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1055);
        EXPECT(gbc.pc(), 0x6399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 0397
        gbc.setState(0x437, 0xb95b, 0x8260, 0xcbab, 0xc3d, 0xf755, 0x1, 0x1);
        gbc.writeMem(0x437, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb95b);
        EXPECT(gbc.pc(), 0x439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 0398
        gbc.setState(0xcdf4, 0x237a, 0xb320, 0x4eab, 0xdb49, 0xb996, 0x0, 0x0);
        gbc.writeMem(0xcdf4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x237a);
        EXPECT(gbc.pc(), 0xcdf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf4), 0xcb);
        EXPECT(gbc.readMem(0xcdf5), 0x38);
        // CB 38 0399
        gbc.setState(0xe785, 0xb05b, 0xad10, 0x86b6, 0xba2a, 0xea85, 0x1, 0x0);
        gbc.writeMem(0xe785, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb05b);
        EXPECT(gbc.pc(), 0xe787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe785), 0xcb);
        EXPECT(gbc.readMem(0xe786), 0x38);
        // CB 38 039A
        gbc.setState(0xc30d, 0xebf5, 0x7b70, 0x3192, 0x8f22, 0xe490, 0x0, 0x1);
        gbc.writeMem(0xc30d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xebf5);
        EXPECT(gbc.pc(), 0xc30f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc30d), 0xcb);
        EXPECT(gbc.readMem(0xc30e), 0x38);
        // CB 38 039B
        gbc.setState(0x48c7, 0x264e, 0xfcb0, 0xdcc3, 0x7c09, 0xa900, 0x1, 0x0);
        gbc.writeMem(0x48c7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x264e);
        EXPECT(gbc.pc(), 0x48c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 039D
        gbc.setState(0xa434, 0xfd2b, 0x1f20, 0xe60, 0x6ec7, 0x46a8, 0x0, 0x0);
        gbc.writeMem(0xa434, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xfd2b);
        EXPECT(gbc.pc(), 0xa436);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa434), 0xcb);
        EXPECT(gbc.readMem(0xa435), 0x38);
        // CB 38 039E
        gbc.setState(0xb5c1, 0x8798, 0x8bb0, 0x58b5, 0x6fc2, 0x6eea, 0x0, 0x0);
        gbc.writeMem(0xb5c1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8798);
        EXPECT(gbc.pc(), 0xb5c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c1), 0xcb);
        EXPECT(gbc.readMem(0xb5c2), 0x38);
        // CB 38 039F
        gbc.setState(0x2da0, 0x3345, 0xcd60, 0xe3b2, 0xf899, 0xbc3d, 0x0, 0x0);
        gbc.writeMem(0x2da0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3345);
        EXPECT(gbc.pc(), 0x2da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03A0
        gbc.setState(0x3425, 0xe195, 0x52e0, 0x6a94, 0x1115, 0x7b6d, 0x0, 0x1);
        gbc.writeMem(0x3425, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe195);
        EXPECT(gbc.pc(), 0x3427);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03A1
        gbc.setState(0x9a37, 0xa962, 0x6240, 0x7d8a, 0x9b7f, 0xbeb4, 0x1, 0x0);
        gbc.writeMem(0x9a37, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa962);
        EXPECT(gbc.pc(), 0x9a39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a37), 0xcb);
        EXPECT(gbc.readMem(0x9a38), 0x38);
        // CB 38 03A2
        gbc.setState(0x7b44, 0x83c8, 0x7d60, 0x71f, 0x3729, 0x47a4, 0x1, 0x0);
        gbc.writeMem(0x7b44, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x83c8);
        EXPECT(gbc.pc(), 0x7b46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03A3
        gbc.setState(0xd607, 0x19d8, 0x4c60, 0xe3a9, 0xf672, 0x44f, 0x1, 0x1);
        gbc.writeMem(0xd607, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x19d8);
        EXPECT(gbc.pc(), 0xd609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd607), 0xcb);
        EXPECT(gbc.readMem(0xd608), 0x38);
        // CB 38 03A4
        gbc.setState(0x2211, 0x36f3, 0x2fc0, 0x8fe1, 0xe6dc, 0xa40b, 0x1, 0x0);
        gbc.writeMem(0x2211, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x36f3);
        EXPECT(gbc.pc(), 0x2213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03A5
        gbc.setState(0xc546, 0x515, 0x6f90, 0x3c16, 0xe3ca, 0xad57, 0x1, 0x1);
        gbc.writeMem(0xc546, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x515);
        EXPECT(gbc.pc(), 0xc548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc546), 0xcb);
        EXPECT(gbc.readMem(0xc547), 0x38);
        // CB 38 03A6
        gbc.setState(0xea26, 0x22d4, 0xb070, 0x7567, 0xb01, 0x18c1, 0x1, 0x1);
        gbc.writeMem(0xea26, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x22d4);
        EXPECT(gbc.pc(), 0xea28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea26), 0xcb);
        EXPECT(gbc.readMem(0xea27), 0x38);
        // CB 38 03A8
        gbc.setState(0x8561, 0xf449, 0xe000, 0xa8a8, 0x1e02, 0xbcbc, 0x0, 0x1);
        gbc.writeMem(0x8561, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf449);
        EXPECT(gbc.pc(), 0x8563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8561), 0xcb);
        EXPECT(gbc.readMem(0x8562), 0x38);
        // CB 38 03A9
        gbc.setState(0x2d8e, 0xac21, 0x6660, 0xc91e, 0x8811, 0xc79a, 0x0, 0x0);
        gbc.writeMem(0x2d8e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xac21);
        EXPECT(gbc.pc(), 0x2d90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03AA
        gbc.setState(0x6615, 0xd4e1, 0xfec0, 0x23ef, 0xb9d5, 0xf76b, 0x1, 0x1);
        gbc.writeMem(0x6615, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd4e1);
        EXPECT(gbc.pc(), 0x6617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03AB
        gbc.setState(0x6d29, 0xc4fd, 0x7c10, 0x8074, 0x7e25, 0x2825, 0x0, 0x1);
        gbc.writeMem(0x6d29, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc4fd);
        EXPECT(gbc.pc(), 0x6d2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03AC
        gbc.setState(0x95c2, 0xe879, 0x6f90, 0xbe85, 0x6f1d, 0x4f99, 0x1, 0x0);
        gbc.writeMem(0x95c2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe879);
        EXPECT(gbc.pc(), 0x95c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95c2), 0xcb);
        EXPECT(gbc.readMem(0x95c3), 0x38);
        // CB 38 03AD
        gbc.setState(0x9bbd, 0x9ce4, 0xdb40, 0x7702, 0x469, 0x61af, 0x0, 0x0);
        gbc.writeMem(0x9bbd, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9ce4);
        EXPECT(gbc.pc(), 0x9bbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bbd), 0xcb);
        EXPECT(gbc.readMem(0x9bbe), 0x38);
        // CB 38 03AE
        gbc.setState(0x3f22, 0xa8a7, 0xb8c0, 0x9fbe, 0xcfda, 0xba9a, 0x0, 0x0);
        gbc.writeMem(0x3f22, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa8a7);
        EXPECT(gbc.pc(), 0x3f24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03AF
        gbc.setState(0x621, 0xfe38, 0xd570, 0xbdd9, 0xe96, 0xd215, 0x1, 0x1);
        gbc.writeMem(0x621, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfe38);
        EXPECT(gbc.pc(), 0x623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03B0
        gbc.setState(0x76de, 0x9b2b, 0xe190, 0x28bc, 0xf073, 0xe435, 0x0, 0x1);
        gbc.writeMem(0x76de, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9b2b);
        EXPECT(gbc.pc(), 0x76e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03B1
        gbc.setState(0x8a9b, 0xabea, 0x19c0, 0xa605, 0x9ded, 0x43bf, 0x1, 0x1);
        gbc.writeMem(0x8a9b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xabea);
        EXPECT(gbc.pc(), 0x8a9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a9b), 0xcb);
        EXPECT(gbc.readMem(0x8a9c), 0x38);
        // CB 38 03B2
        gbc.setState(0x724a, 0xdd8, 0x57d0, 0x8a5d, 0x9107, 0x736c, 0x1, 0x1);
        gbc.writeMem(0x724a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdd8);
        EXPECT(gbc.pc(), 0x724c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03B4
        gbc.setState(0x50f4, 0xff6e, 0x8a00, 0x20d3, 0xeb43, 0x64cd, 0x1, 0x1);
        gbc.writeMem(0x50f4, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xff6e);
        EXPECT(gbc.pc(), 0x50f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03B5
        gbc.setState(0xe3a0, 0x3bd2, 0x9180, 0xe212, 0x9699, 0xcc51, 0x0, 0x1);
        gbc.writeMem(0xe3a0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3bd2);
        EXPECT(gbc.pc(), 0xe3a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3a0), 0xcb);
        EXPECT(gbc.readMem(0xe3a1), 0x38);
        // CB 38 03B6
        gbc.setState(0xdfa9, 0x4eac, 0x9960, 0x4120, 0xf35f, 0xbfe4, 0x0, 0x0);
        gbc.writeMem(0xdfa9, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4eac);
        EXPECT(gbc.pc(), 0xdfab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfa9), 0xcb);
        EXPECT(gbc.readMem(0xdfaa), 0x38);
        // CB 38 03B7
        gbc.setState(0xb39b, 0x7ab9, 0x7cd0, 0x3452, 0x57dd, 0xb36b, 0x1, 0x1);
        gbc.writeMem(0xb39b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7ab9);
        EXPECT(gbc.pc(), 0xb39d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb39b), 0xcb);
        EXPECT(gbc.readMem(0xb39c), 0x38);
        // CB 38 03B9
        gbc.setState(0x8038, 0x2b30, 0xff0, 0x256, 0x337a, 0x3cd2, 0x0, 0x1);
        gbc.writeMem(0x8038, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2b30);
        EXPECT(gbc.pc(), 0x803a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8038), 0xcb);
        EXPECT(gbc.readMem(0x8039), 0x38);
        // CB 38 03BA
        gbc.setState(0xd341, 0x50ee, 0x2170, 0x697d, 0x616a, 0x8af7, 0x0, 0x0);
        gbc.writeMem(0xd341, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x50ee);
        EXPECT(gbc.pc(), 0xd343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd341), 0xcb);
        EXPECT(gbc.readMem(0xd342), 0x38);
        // CB 38 03BB
        gbc.setState(0xe73a, 0x3bb6, 0x7f20, 0xd8ef, 0x543, 0x52cb, 0x0, 0x1);
        gbc.writeMem(0xe73a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3bb6);
        EXPECT(gbc.pc(), 0xe73c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe73a), 0xcb);
        EXPECT(gbc.readMem(0xe73b), 0x38);
        // CB 38 03BC
        gbc.setState(0xeb7c, 0x17d5, 0xf4d0, 0x4ccf, 0xca61, 0x92c9, 0x0, 0x0);
        gbc.writeMem(0xeb7c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x17d5);
        EXPECT(gbc.pc(), 0xeb7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb7c), 0xcb);
        EXPECT(gbc.readMem(0xeb7d), 0x38);
        // CB 38 03BD
        gbc.setState(0xafef, 0x8380, 0xce00, 0x3a8e, 0x2903, 0x9569, 0x1, 0x1);
        gbc.writeMem(0xafef, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8380);
        EXPECT(gbc.pc(), 0xaff1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafef), 0xcb);
        EXPECT(gbc.readMem(0xaff0), 0x38);
        // CB 38 03BE
        gbc.setState(0x14d2, 0x455, 0xdf60, 0xd975, 0xf92a, 0x85c1, 0x1, 0x1);
        gbc.writeMem(0x14d2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x455);
        EXPECT(gbc.pc(), 0x14d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03BF
        gbc.setState(0x4b02, 0xaf48, 0xf9d0, 0x2d7b, 0x6bdd, 0x55e7, 0x1, 0x1);
        gbc.writeMem(0x4b02, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xaf48);
        EXPECT(gbc.pc(), 0x4b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03C0
        gbc.setState(0x7703, 0x9c3d, 0xd030, 0x6cb, 0xe186, 0x8fc5, 0x1, 0x1);
        gbc.writeMem(0x7703, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9c3d);
        EXPECT(gbc.pc(), 0x7705);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03C1
        gbc.setState(0x253c, 0x8048, 0xc300, 0x454f, 0x8151, 0xf4b3, 0x1, 0x1);
        gbc.writeMem(0x253c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8048);
        EXPECT(gbc.pc(), 0x253e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03C2
        gbc.setState(0x453f, 0xedc7, 0x44f0, 0xb866, 0xd526, 0xf77d, 0x1, 0x1);
        gbc.writeMem(0x453f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xedc7);
        EXPECT(gbc.pc(), 0x4541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03C3
        gbc.setState(0xbc0, 0x669a, 0x61e0, 0xa874, 0x410a, 0xe8b5, 0x0, 0x0);
        gbc.writeMem(0xbc0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x669a);
        EXPECT(gbc.pc(), 0xbc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03C4
        gbc.setState(0x3623, 0xd6b4, 0x1900, 0x712a, 0x359e, 0x9708, 0x0, 0x1);
        gbc.writeMem(0x3623, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd6b4);
        EXPECT(gbc.pc(), 0x3625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03C5
        gbc.setState(0x9c9a, 0xb8b0, 0x9f0, 0x1308, 0x4874, 0xbdb, 0x0, 0x1);
        gbc.writeMem(0x9c9a, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb8b0);
        EXPECT(gbc.pc(), 0x9c9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9a), 0xcb);
        EXPECT(gbc.readMem(0x9c9b), 0x38);
        // CB 38 03C6
        gbc.setState(0x8469, 0xa0b6, 0x7290, 0xc916, 0x8b90, 0x364e, 0x1, 0x1);
        gbc.writeMem(0x8469, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa0b6);
        EXPECT(gbc.pc(), 0x846b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8469), 0xcb);
        EXPECT(gbc.readMem(0x846a), 0x38);
        // CB 38 03C7
        gbc.setState(0x8369, 0x19cb, 0x3a70, 0xf84e, 0x2e0c, 0x23ec, 0x1, 0x1);
        gbc.writeMem(0x8369, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x19cb);
        EXPECT(gbc.pc(), 0x836b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8369), 0xcb);
        EXPECT(gbc.readMem(0x836a), 0x38);
        // CB 38 03C8
        gbc.setState(0xcd2b, 0x8c00, 0xe770, 0x83cb, 0xdb4c, 0x97e7, 0x1, 0x1);
        gbc.writeMem(0xcd2b, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8c00);
        EXPECT(gbc.pc(), 0xcd2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd2b), 0xcb);
        EXPECT(gbc.readMem(0xcd2c), 0x38);
        // CB 38 03C9
        gbc.setState(0xb571, 0xe18b, 0x2ba0, 0xf99d, 0x6619, 0xbf1d, 0x0, 0x0);
        gbc.writeMem(0xb571, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe18b);
        EXPECT(gbc.pc(), 0xb573);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb571), 0xcb);
        EXPECT(gbc.readMem(0xb572), 0x38);
        // CB 38 03CA
        gbc.setState(0x6266, 0x4215, 0xbe00, 0xd4ed, 0xad61, 0xf2f6, 0x0, 0x1);
        gbc.writeMem(0x6266, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4215);
        EXPECT(gbc.pc(), 0x6268);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03CB
        gbc.setState(0x6930, 0x69bd, 0xbb70, 0xa936, 0xa99e, 0xe9e6, 0x0, 0x0);
        gbc.writeMem(0x6930, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x69bd);
        EXPECT(gbc.pc(), 0x6932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03CC
        gbc.setState(0x1a5e, 0x7ccd, 0x7d80, 0xb683, 0x5370, 0xe677, 0x1, 0x1);
        gbc.writeMem(0x1a5e, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7ccd);
        EXPECT(gbc.pc(), 0x1a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03CD
        gbc.setState(0xca87, 0xa02e, 0xc830, 0xcda, 0x1412, 0xf32e, 0x1, 0x1);
        gbc.writeMem(0xca87, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa02e);
        EXPECT(gbc.pc(), 0xca89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca87), 0xcb);
        EXPECT(gbc.readMem(0xca88), 0x38);
        // CB 38 03CE
        gbc.setState(0x425, 0x8450, 0xd70, 0x6e1, 0x53db, 0xded2, 0x0, 0x0);
        gbc.writeMem(0x425, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8450);
        EXPECT(gbc.pc(), 0x427);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03CF
        gbc.setState(0x77ed, 0x2e60, 0x4120, 0x9dc0, 0xe027, 0x1ecf, 0x1, 0x1);
        gbc.writeMem(0x77ed, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2e60);
        EXPECT(gbc.pc(), 0x77ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03D0
        gbc.setState(0x65a7, 0x28ed, 0x42e0, 0x3a60, 0x996c, 0xfa3c, 0x0, 0x0);
        gbc.writeMem(0x65a7, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x28ed);
        EXPECT(gbc.pc(), 0x65a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03D1
        gbc.setState(0x473c, 0x6d8b, 0x7d50, 0xef73, 0x51a9, 0xe3ee, 0x0, 0x0);
        gbc.writeMem(0x473c, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6d8b);
        EXPECT(gbc.pc(), 0x473e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03D2
        gbc.setState(0xc5f1, 0xc21c, 0xe920, 0xe86e, 0xc772, 0x35f1, 0x1, 0x1);
        gbc.writeMem(0xc5f1, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc21c);
        EXPECT(gbc.pc(), 0xc5f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5f1), 0xcb);
        EXPECT(gbc.readMem(0xc5f2), 0x38);
        // CB 38 03D3
        gbc.setState(0x1532, 0x65e2, 0x7710, 0xb0a6, 0x3721, 0x42db, 0x1, 0x0);
        gbc.writeMem(0x1532, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x65e2);
        EXPECT(gbc.pc(), 0x1534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03D5
        gbc.setState(0xb4af, 0x5db9, 0xa0c0, 0xb400, 0xe29, 0xfc50, 0x0, 0x1);
        gbc.writeMem(0xb4af, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5db9);
        EXPECT(gbc.pc(), 0xb4b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4af), 0xcb);
        EXPECT(gbc.readMem(0xb4b0), 0x38);
        // CB 38 03D6
        gbc.setState(0x8a60, 0xbd93, 0x4e00, 0x8c3, 0x5667, 0xe118, 0x1, 0x1);
        gbc.writeMem(0x8a60, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbd93);
        EXPECT(gbc.pc(), 0x8a62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a60), 0xcb);
        EXPECT(gbc.readMem(0x8a61), 0x38);
        // CB 38 03D7
        gbc.setState(0x5a40, 0x9d1, 0x8400, 0x1693, 0x6f2f, 0x5b77, 0x1, 0x0);
        gbc.writeMem(0x5a40, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9d1);
        EXPECT(gbc.pc(), 0x5a42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03D8
        gbc.setState(0xa0cf, 0xf3f2, 0x6b80, 0xee93, 0x6822, 0xe405, 0x1, 0x0);
        gbc.writeMem(0xa0cf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf3f2);
        EXPECT(gbc.pc(), 0xa0d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0cf), 0xcb);
        EXPECT(gbc.readMem(0xa0d0), 0x38);
        // CB 38 03D9
        gbc.setState(0xdf76, 0x33ac, 0xd970, 0xb431, 0xdfe, 0xa250, 0x0, 0x0);
        gbc.writeMem(0xdf76, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x33ac);
        EXPECT(gbc.pc(), 0xdf78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf76), 0xcb);
        EXPECT(gbc.readMem(0xdf77), 0x38);
        // CB 38 03DA
        gbc.setState(0x5eae, 0x2d04, 0xa380, 0x1d2d, 0x8374, 0x1d6, 0x0, 0x0);
        gbc.writeMem(0x5eae, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2d04);
        EXPECT(gbc.pc(), 0x5eb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 38 03DB
        gbc.setState(0x363f, 0x9d0b, 0x500, 0x948c, 0x5c1f, 0x524c, 0x1, 0x1);
        gbc.writeMem(0x363f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9d0b);
        EXPECT(gbc.pc(), 0x3641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03DD
        gbc.setState(0x55, 0xfa33, 0xa8e0, 0xa857, 0x1a3a, 0xbcea, 0x0, 0x1);
        gbc.writeMem(0x55, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfa33);
        EXPECT(gbc.pc(), 0x57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03DE
        gbc.setState(0xcd69, 0xc369, 0xad90, 0xacc2, 0xd661, 0x6f33, 0x1, 0x1);
        gbc.writeMem(0xcd69, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc369);
        EXPECT(gbc.pc(), 0xcd6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd69), 0xcb);
        EXPECT(gbc.readMem(0xcd6a), 0x38);
        // CB 38 03DF
        gbc.setState(0x17, 0xf9e0, 0xdd10, 0x60e3, 0xe929, 0x25e5, 0x0, 0x1);
        gbc.writeMem(0x17, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf9e0);
        EXPECT(gbc.pc(), 0x19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03E0
        gbc.setState(0xa940, 0x78e5, 0xf170, 0x7ba6, 0xb17f, 0x3ebc, 0x0, 0x0);
        gbc.writeMem(0xa940, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x78e5);
        EXPECT(gbc.pc(), 0xa942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa940), 0xcb);
        EXPECT(gbc.readMem(0xa941), 0x38);
        // CB 38 03E1
        gbc.setState(0xc0f5, 0xf589, 0x140, 0xe58f, 0x4fb1, 0xc2aa, 0x0, 0x1);
        gbc.writeMem(0xc0f5, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf589);
        EXPECT(gbc.pc(), 0xc0f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0f5), 0xcb);
        EXPECT(gbc.readMem(0xc0f6), 0x38);
        // CB 38 03E2
        gbc.setState(0x6ac0, 0x4507, 0x3ff0, 0xa89e, 0x376b, 0x39d, 0x1, 0x0);
        gbc.writeMem(0x6ac0, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4507);
        EXPECT(gbc.pc(), 0x6ac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03E3
        gbc.setState(0x8e9f, 0x970f, 0x7130, 0x9223, 0x44ee, 0x20df, 0x0, 0x1);
        gbc.writeMem(0x8e9f, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x970f);
        EXPECT(gbc.pc(), 0x8ea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e9f), 0xcb);
        EXPECT(gbc.readMem(0x8ea0), 0x38);
        // CB 38 03E4
        gbc.setState(0xdb9d, 0x52c2, 0xc640, 0xefb3, 0x30c9, 0xebe0, 0x0, 0x1);
        gbc.writeMem(0xdb9d, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x52c2);
        EXPECT(gbc.pc(), 0xdb9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb9d), 0xcb);
        EXPECT(gbc.readMem(0xdb9e), 0x38);
        // CB 38 03E5
        gbc.setState(0xaeaf, 0x9050, 0x4fd0, 0xbefb, 0x7f4a, 0x687, 0x1, 0x1);
        gbc.writeMem(0xaeaf, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9050);
        EXPECT(gbc.pc(), 0xaeb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeaf), 0xcb);
        EXPECT(gbc.readMem(0xaeb0), 0x38);
        // CB 38 03E6
        gbc.setState(0x3ff2, 0x480c, 0x5df0, 0xb477, 0x40e9, 0xe8c8, 0x1, 0x1);
        gbc.writeMem(0x3ff2, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x480c);
        EXPECT(gbc.pc(), 0x3ff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 38 03E7
        gbc.setState(0x4495, 0x37cb, 0x4d80, 0x7c77, 0x7712, 0x7b8b, 0x0, 0x1);
        gbc.writeMem(0x4495, { 0xcb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x37cb);
        EXPECT(gbc.pc(), 0x4497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
