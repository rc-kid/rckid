    TEST(gbcemu, opcode_78) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 78 0000
        gbc.setState(0x5f71, 0xe22, 0x46e0, 0x8cc2, 0xcdf8, 0xe58d, 0x0, 0x1);
        gbc.writeMem(0x5f71, { 0x78 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe22, gbc.sp());
        EXPECT(0x5f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0001
        gbc.setState(0x875e, 0x65e9, 0xd9c0, 0xf0d2, 0x538a, 0xfd78, 0x0, 0x1);
        gbc.writeMem(0x875e, { 0x78 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x65e9, gbc.sp());
        EXPECT(0x875f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x875e));
        // 78 0002
        gbc.setState(0x7b93, 0xb753, 0xc230, 0xe116, 0x44ea, 0x3a46, 0x1, 0x0);
        gbc.writeMem(0x7b93, { 0x78 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb753, gbc.sp());
        EXPECT(0x7b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0003
        gbc.setState(0xcdee, 0xee9f, 0x2200, 0xf5ee, 0x5a6e, 0x5d90, 0x0, 0x1);
        gbc.writeMem(0xcdee, { 0x78 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xee9f, gbc.sp());
        EXPECT(0xcdef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcdee));
        // 78 0004
        gbc.setState(0xafc4, 0xf416, 0x2300, 0x5f81, 0x5cf2, 0x8afc, 0x1, 0x1);
        gbc.writeMem(0xafc4, { 0x78 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf416, gbc.sp());
        EXPECT(0xafc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xafc4));
        // 78 0005
        gbc.setState(0xdcfa, 0x429e, 0xec0, 0xf98b, 0xbee7, 0x9eaf, 0x0, 0x1);
        gbc.writeMem(0xdcfa, { 0x78 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x429e, gbc.sp());
        EXPECT(0xdcfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdcfa));
        // 78 0006
        gbc.setState(0xcd30, 0x8dd1, 0x6b60, 0x2c75, 0x570d, 0xe3ef, 0x1, 0x1);
        gbc.writeMem(0xcd30, { 0x78 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8dd1, gbc.sp());
        EXPECT(0xcd31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcd30));
        // 78 0007
        gbc.setState(0xb480, 0x1690, 0xc3d0, 0x108c, 0xfd62, 0xe308, 0x0, 0x0);
        gbc.writeMem(0xb480, { 0x78 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1690, gbc.sp());
        EXPECT(0xb481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb480));
        // 78 0008
        gbc.setState(0xd64b, 0x5a03, 0xbaa0, 0x86f9, 0xbec6, 0x728a, 0x0, 0x1);
        gbc.writeMem(0xd64b, { 0x78 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5a03, gbc.sp());
        EXPECT(0xd64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd64b));
        // 78 0009
        gbc.setState(0x589, 0x3e9b, 0xbcd0, 0xf708, 0xa9f0, 0xe368, 0x1, 0x0);
        gbc.writeMem(0x589, { 0x78 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3e9b, gbc.sp());
        EXPECT(0x58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 000A
        gbc.setState(0x93, 0x916c, 0x6f00, 0xe902, 0xc4c8, 0xbea4, 0x0, 0x1);
        gbc.writeMem(0x93, { 0x78 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x916c, gbc.sp());
        EXPECT(0x94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 000B
        gbc.setState(0x7396, 0xbfe2, 0x36c0, 0xad, 0xfec7, 0x860a, 0x1, 0x1);
        gbc.writeMem(0x7396, { 0x78 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbfe2, gbc.sp());
        EXPECT(0x7397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 000C
        gbc.setState(0x21c, 0x4d4, 0x64f0, 0x1424, 0x9abf, 0xf566, 0x0, 0x0);
        gbc.writeMem(0x21c, { 0x78 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4d4, gbc.sp());
        EXPECT(0x21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 000D
        gbc.setState(0x3d2c, 0xfdc1, 0x16a0, 0x9e79, 0xef2b, 0xacec, 0x1, 0x1);
        gbc.writeMem(0x3d2c, { 0x78 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfdc1, gbc.sp());
        EXPECT(0x3d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 000E
        gbc.setState(0x447c, 0xe0ac, 0xfb50, 0x3f57, 0xbd6c, 0x1795, 0x0, 0x1);
        gbc.writeMem(0x447c, { 0x78 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe0ac, gbc.sp());
        EXPECT(0x447d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 000F
        gbc.setState(0xa216, 0x5886, 0x5380, 0x1ea, 0x33cc, 0x7a47, 0x1, 0x1);
        gbc.writeMem(0xa216, { 0x78 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5886, gbc.sp());
        EXPECT(0xa217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa216));
        // 78 0010
        gbc.setState(0xab6d, 0x8653, 0x370, 0xbb2a, 0xee39, 0xc284, 0x0, 0x1);
        gbc.writeMem(0xab6d, { 0x78 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8653, gbc.sp());
        EXPECT(0xab6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xab6d));
        // 78 0011
        gbc.setState(0x4fe2, 0x62b8, 0x7a10, 0x91ca, 0xd4c9, 0x1104, 0x1, 0x1);
        gbc.writeMem(0x4fe2, { 0x78 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x62b8, gbc.sp());
        EXPECT(0x4fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0012
        gbc.setState(0xc6d6, 0xe860, 0x790, 0x68e3, 0x3d20, 0x8dae, 0x1, 0x0);
        gbc.writeMem(0xc6d6, { 0x78 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe860, gbc.sp());
        EXPECT(0xc6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc6d6));
        // 78 0013
        gbc.setState(0xdc, 0xb23d, 0x8030, 0x484c, 0x54fb, 0x775a, 0x0, 0x1);
        gbc.writeMem(0xdc, { 0x78 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb23d, gbc.sp());
        EXPECT(0xdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0014
        gbc.setState(0xb61b, 0x1b43, 0x1e40, 0xf2d6, 0x2e89, 0x6b83, 0x1, 0x1);
        gbc.writeMem(0xb61b, { 0x78 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1b43, gbc.sp());
        EXPECT(0xb61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb61b));
        // 78 0015
        gbc.setState(0xa43f, 0xaacb, 0x3920, 0xf9aa, 0xddbb, 0xd8b2, 0x0, 0x0);
        gbc.writeMem(0xa43f, { 0x78 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaacb, gbc.sp());
        EXPECT(0xa440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa43f));
        // 78 0016
        gbc.setState(0x1e0, 0xd437, 0x1260, 0xcb7f, 0x4ad4, 0xa32f, 0x1, 0x0);
        gbc.writeMem(0x1e0, { 0x78 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd437, gbc.sp());
        EXPECT(0x1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0017
        gbc.setState(0xc672, 0x5fb, 0x74c0, 0xd0d5, 0x8f18, 0xf0a4, 0x1, 0x1);
        gbc.writeMem(0xc672, { 0x78 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5fb, gbc.sp());
        EXPECT(0xc673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc672));
        // 78 0018
        gbc.setState(0x788, 0xd6bb, 0xf860, 0xc34, 0x6fae, 0xda18, 0x1, 0x1);
        gbc.writeMem(0x788, { 0x78 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd6bb, gbc.sp());
        EXPECT(0x789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0019
        gbc.setState(0x4f21, 0x3c38, 0x4590, 0x91ac, 0xafb4, 0x3c33, 0x0, 0x1);
        gbc.writeMem(0x4f21, { 0x78 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3c38, gbc.sp());
        EXPECT(0x4f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 001B
        gbc.setState(0x8582, 0x7c0d, 0xe200, 0xdf41, 0xfb7c, 0x619e, 0x0, 0x0);
        gbc.writeMem(0x8582, { 0x78 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7c0d, gbc.sp());
        EXPECT(0x8583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8582));
        // 78 001C
        gbc.setState(0x75a1, 0x62dd, 0x30f0, 0x16bb, 0x248d, 0x6ea, 0x0, 0x0);
        gbc.writeMem(0x75a1, { 0x78 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x62dd, gbc.sp());
        EXPECT(0x75a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 001D
        gbc.setState(0x387e, 0x3475, 0x5e30, 0x34b2, 0x2c10, 0xc371, 0x1, 0x1);
        gbc.writeMem(0x387e, { 0x78 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3475, gbc.sp());
        EXPECT(0x387f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 001E
        gbc.setState(0xab54, 0x485f, 0xb110, 0xae0a, 0x4b33, 0x5dcb, 0x1, 0x1);
        gbc.writeMem(0xab54, { 0x78 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x485f, gbc.sp());
        EXPECT(0xab55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xab54));
        // 78 001F
        gbc.setState(0xb09a, 0x349a, 0x5bb0, 0x902e, 0xeef4, 0x3e2c, 0x0, 0x1);
        gbc.writeMem(0xb09a, { 0x78 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x349a, gbc.sp());
        EXPECT(0xb09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb09a));
        // 78 0020
        gbc.setState(0x6803, 0x424e, 0x88f0, 0x868e, 0xcc42, 0xdd0e, 0x0, 0x0);
        gbc.writeMem(0x6803, { 0x78 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x424e, gbc.sp());
        EXPECT(0x6804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0021
        gbc.setState(0x1b6, 0x9fe6, 0x8c20, 0xadad, 0x648d, 0xc4e4, 0x1, 0x0);
        gbc.writeMem(0x1b6, { 0x78 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9fe6, gbc.sp());
        EXPECT(0x1b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0022
        gbc.setState(0x541c, 0xe63a, 0xb690, 0xb719, 0xb68e, 0xb9a4, 0x0, 0x1);
        gbc.writeMem(0x541c, { 0x78 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe63a, gbc.sp());
        EXPECT(0x541d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0023
        gbc.setState(0x4a7c, 0xcaef, 0xc230, 0xd5a0, 0x9e5a, 0x82f0, 0x1, 0x0);
        gbc.writeMem(0x4a7c, { 0x78 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcaef, gbc.sp());
        EXPECT(0x4a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0024
        gbc.setState(0xa55c, 0x6ac9, 0x8cb0, 0x486, 0x5a85, 0xbe58, 0x0, 0x0);
        gbc.writeMem(0xa55c, { 0x78 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6ac9, gbc.sp());
        EXPECT(0xa55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa55c));
        // 78 0025
        gbc.setState(0x10cf, 0x9ad, 0xc170, 0x6a16, 0xbb62, 0xcd44, 0x1, 0x0);
        gbc.writeMem(0x10cf, { 0x78 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9ad, gbc.sp());
        EXPECT(0x10d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0026
        gbc.setState(0x5cf, 0xbca9, 0xb6f0, 0x89b4, 0xbd62, 0x5edc, 0x0, 0x1);
        gbc.writeMem(0x5cf, { 0x78 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbca9, gbc.sp());
        EXPECT(0x5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0027
        gbc.setState(0xd0de, 0x64ef, 0x32a0, 0x8300, 0x2ad3, 0x27fa, 0x1, 0x0);
        gbc.writeMem(0xd0de, { 0x78 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x64ef, gbc.sp());
        EXPECT(0xd0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd0de));
        // 78 0028
        gbc.setState(0x7472, 0x1cbd, 0x2a00, 0x8058, 0xfb7a, 0x8bf9, 0x0, 0x1);
        gbc.writeMem(0x7472, { 0x78 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1cbd, gbc.sp());
        EXPECT(0x7473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0029
        gbc.setState(0x5af7, 0x8edf, 0x37d0, 0x18b9, 0xbe8f, 0xae58, 0x1, 0x1);
        gbc.writeMem(0x5af7, { 0x78 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8edf, gbc.sp());
        EXPECT(0x5af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 002A
        gbc.setState(0xedb7, 0x1d2f, 0x3b80, 0xf995, 0x422e, 0xf34b, 0x0, 0x0);
        gbc.writeMem(0xedb7, { 0x78 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1d2f, gbc.sp());
        EXPECT(0xedb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xedb7));
        // 78 002B
        gbc.setState(0x4ae0, 0xb71a, 0x3630, 0x9506, 0x714b, 0xde3e, 0x1, 0x1);
        gbc.writeMem(0x4ae0, { 0x78 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb71a, gbc.sp());
        EXPECT(0x4ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 002C
        gbc.setState(0x87b2, 0xa869, 0x55f0, 0x72ba, 0x9079, 0xcac4, 0x0, 0x1);
        gbc.writeMem(0x87b2, { 0x78 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa869, gbc.sp());
        EXPECT(0x87b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x87b2));
        // 78 002D
        gbc.setState(0x3c10, 0x9905, 0xce40, 0xa53c, 0x904e, 0xae18, 0x0, 0x1);
        gbc.writeMem(0x3c10, { 0x78 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9905, gbc.sp());
        EXPECT(0x3c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 002E
        gbc.setState(0xcee3, 0xddc4, 0x4e40, 0xeb65, 0xc35c, 0xad46, 0x1, 0x0);
        gbc.writeMem(0xcee3, { 0x78 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xddc4, gbc.sp());
        EXPECT(0xcee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcee3));
        // 78 002F
        gbc.setState(0x1b77, 0x7563, 0x2410, 0xa9c6, 0x2417, 0x5b38, 0x0, 0x0);
        gbc.writeMem(0x1b77, { 0x78 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7563, gbc.sp());
        EXPECT(0x1b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0031
        gbc.setState(0x9cdf, 0x83dc, 0x6290, 0xedf3, 0xd375, 0xe1dc, 0x0, 0x1);
        gbc.writeMem(0x9cdf, { 0x78 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x83dc, gbc.sp());
        EXPECT(0x9ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9cdf));
        // 78 0032
        gbc.setState(0xd3b5, 0x32d6, 0x62b0, 0x2bab, 0x8ac4, 0x2792, 0x0, 0x0);
        gbc.writeMem(0xd3b5, { 0x78 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x32d6, gbc.sp());
        EXPECT(0xd3b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd3b5));
        // 78 0033
        gbc.setState(0x16a4, 0xe60d, 0xb010, 0xca1, 0xb9f, 0xa47b, 0x0, 0x0);
        gbc.writeMem(0x16a4, { 0x78 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe60d, gbc.sp());
        EXPECT(0x16a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0034
        gbc.setState(0xe9ce, 0x8897, 0x9140, 0xf8cd, 0xa3e6, 0xd1ca, 0x1, 0x0);
        gbc.writeMem(0xe9ce, { 0x78 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8897, gbc.sp());
        EXPECT(0xe9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe9ce));
        // 78 0035
        gbc.setState(0x2028, 0xeb3d, 0xe750, 0xc7bd, 0x14e3, 0x5de, 0x1, 0x0);
        gbc.writeMem(0x2028, { 0x78 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xeb3d, gbc.sp());
        EXPECT(0x2029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0036
        gbc.setState(0x485, 0x9243, 0x47c0, 0xbe17, 0xab7f, 0x4684, 0x0, 0x1);
        gbc.writeMem(0x485, { 0x78 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9243, gbc.sp());
        EXPECT(0x486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0037
        gbc.setState(0x42bd, 0x692e, 0xb810, 0x64ac, 0xa134, 0x5333, 0x0, 0x1);
        gbc.writeMem(0x42bd, { 0x78 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x692e, gbc.sp());
        EXPECT(0x42be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0038
        gbc.setState(0xd7ed, 0xe2c4, 0xecd0, 0x3f28, 0x378c, 0x1b63, 0x0, 0x0);
        gbc.writeMem(0xd7ed, { 0x78 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe2c4, gbc.sp());
        EXPECT(0xd7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd7ed));
        // 78 0039
        gbc.setState(0x332c, 0xa367, 0x940, 0x78d4, 0x2d93, 0x2660, 0x1, 0x1);
        gbc.writeMem(0x332c, { 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa367, gbc.sp());
        EXPECT(0x332d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 003A
        gbc.setState(0x7a18, 0x940b, 0xd0b0, 0x7136, 0x363b, 0x694e, 0x1, 0x0);
        gbc.writeMem(0x7a18, { 0x78 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x940b, gbc.sp());
        EXPECT(0x7a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 003B
        gbc.setState(0xb6f8, 0xe14d, 0xb3f0, 0x176e, 0x77d0, 0xb69c, 0x1, 0x0);
        gbc.writeMem(0xb6f8, { 0x78 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe14d, gbc.sp());
        EXPECT(0xb6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb6f8));
        // 78 003C
        gbc.setState(0x8049, 0x7568, 0xdac0, 0x30e0, 0x84f9, 0xbebc, 0x0, 0x0);
        gbc.writeMem(0x8049, { 0x78 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7568, gbc.sp());
        EXPECT(0x804a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8049));
        // 78 003D
        gbc.setState(0xd5f4, 0x75b0, 0x5f80, 0xfa5, 0xa88b, 0xe95d, 0x0, 0x1);
        gbc.writeMem(0xd5f4, { 0x78 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x75b0, gbc.sp());
        EXPECT(0xd5f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd5f4));
        // 78 003E
        gbc.setState(0x3e9f, 0x7b6, 0xc610, 0x89a7, 0x53f0, 0x5b2f, 0x1, 0x0);
        gbc.writeMem(0x3e9f, { 0x78 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7b6, gbc.sp());
        EXPECT(0x3ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 003F
        gbc.setState(0xa3c8, 0xdaef, 0x2700, 0x9017, 0x797b, 0xf376, 0x0, 0x0);
        gbc.writeMem(0xa3c8, { 0x78 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdaef, gbc.sp());
        EXPECT(0xa3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa3c8));
        // 78 0040
        gbc.setState(0x51d1, 0xf928, 0xf580, 0xa27c, 0xc685, 0x5991, 0x1, 0x1);
        gbc.writeMem(0x51d1, { 0x78 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf928, gbc.sp());
        EXPECT(0x51d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0041
        gbc.setState(0x2351, 0xc777, 0x5130, 0x2f20, 0xc3, 0xd6ce, 0x0, 0x1);
        gbc.writeMem(0x2351, { 0x78 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc777, gbc.sp());
        EXPECT(0x2352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0042
        gbc.setState(0x6854, 0xa4f0, 0x8e60, 0x651d, 0xc421, 0x90be, 0x0, 0x0);
        gbc.writeMem(0x6854, { 0x78 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa4f0, gbc.sp());
        EXPECT(0x6855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0043
        gbc.setState(0xc0d1, 0xc820, 0xeaf0, 0x35dc, 0x3238, 0x8ced, 0x1, 0x0);
        gbc.writeMem(0xc0d1, { 0x78 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc820, gbc.sp());
        EXPECT(0xc0d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc0d1));
        // 78 0044
        gbc.setState(0xd590, 0x18fa, 0x9570, 0xb764, 0x2da8, 0x23d8, 0x0, 0x1);
        gbc.writeMem(0xd590, { 0x78 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x18fa, gbc.sp());
        EXPECT(0xd591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd590));
        // 78 0045
        gbc.setState(0x436, 0xd4b4, 0x3ce0, 0xfb18, 0x7e35, 0x4e6, 0x0, 0x1);
        gbc.writeMem(0x436, { 0x78 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd4b4, gbc.sp());
        EXPECT(0x437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0046
        gbc.setState(0xd2b7, 0x6ffd, 0xb750, 0x2a1a, 0x4702, 0xe3d0, 0x1, 0x1);
        gbc.writeMem(0xd2b7, { 0x78 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6ffd, gbc.sp());
        EXPECT(0xd2b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd2b7));
        // 78 0047
        gbc.setState(0x9ae4, 0x3a87, 0x6d0, 0xadca, 0x1d78, 0x206a, 0x0, 0x0);
        gbc.writeMem(0x9ae4, { 0x78 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3a87, gbc.sp());
        EXPECT(0x9ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9ae4));
        // 78 0048
        gbc.setState(0x7476, 0x4e16, 0xee20, 0x993, 0xc046, 0x3f5b, 0x0, 0x1);
        gbc.writeMem(0x7476, { 0x78 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4e16, gbc.sp());
        EXPECT(0x7477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0049
        gbc.setState(0xd08d, 0x3086, 0x6790, 0xa150, 0x140c, 0x997b, 0x0, 0x1);
        gbc.writeMem(0xd08d, { 0x78 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3086, gbc.sp());
        EXPECT(0xd08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd08d));
        // 78 004A
        gbc.setState(0x3e92, 0x8e7e, 0x3e80, 0xb44d, 0x9be4, 0x2b07, 0x0, 0x0);
        gbc.writeMem(0x3e92, { 0x78 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8e7e, gbc.sp());
        EXPECT(0x3e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 004B
        gbc.setState(0x56f9, 0x1a34, 0xad60, 0xe676, 0xd7af, 0x20e7, 0x0, 0x0);
        gbc.writeMem(0x56f9, { 0x78 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1a34, gbc.sp());
        EXPECT(0x56fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 004C
        gbc.setState(0x7511, 0x789a, 0x9ef0, 0x2a08, 0x3955, 0x400e, 0x0, 0x1);
        gbc.writeMem(0x7511, { 0x78 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x789a, gbc.sp());
        EXPECT(0x7512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 004E
        gbc.setState(0xe2e4, 0xffa8, 0xb920, 0x9d42, 0xdeaa, 0x6228, 0x0, 0x0);
        gbc.writeMem(0xe2e4, { 0x78 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xffa8, gbc.sp());
        EXPECT(0xe2e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe2e4));
        // 78 004F
        gbc.setState(0x92b, 0x527d, 0x5a20, 0x99c8, 0xb0f8, 0x3742, 0x1, 0x1);
        gbc.writeMem(0x92b, { 0x78 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x527d, gbc.sp());
        EXPECT(0x92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0050
        gbc.setState(0x4c5f, 0xe365, 0x4f50, 0x8caa, 0x342e, 0x7a45, 0x0, 0x1);
        gbc.writeMem(0x4c5f, { 0x78 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe365, gbc.sp());
        EXPECT(0x4c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0051
        gbc.setState(0x48b7, 0xc4e0, 0x3ea0, 0xac06, 0xb28f, 0x5c3, 0x1, 0x1);
        gbc.writeMem(0x48b7, { 0x78 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc4e0, gbc.sp());
        EXPECT(0x48b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0052
        gbc.setState(0x55d2, 0xdc5b, 0xdd0, 0xa311, 0x839c, 0x8d36, 0x1, 0x1);
        gbc.writeMem(0x55d2, { 0x78 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdc5b, gbc.sp());
        EXPECT(0x55d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0053
        gbc.setState(0x7e4e, 0x8a39, 0xf1f0, 0xd17, 0x464b, 0xa731, 0x1, 0x1);
        gbc.writeMem(0x7e4e, { 0x78 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8a39, gbc.sp());
        EXPECT(0x7e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0055
        gbc.setState(0x348a, 0xd66f, 0x5bd0, 0xb3f4, 0xf6b5, 0x44f9, 0x0, 0x0);
        gbc.writeMem(0x348a, { 0x78 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd66f, gbc.sp());
        EXPECT(0x348b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0056
        gbc.setState(0xa20, 0xd1c8, 0x4580, 0xed5e, 0x998b, 0x9111, 0x0, 0x0);
        gbc.writeMem(0xa20, { 0x78 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd1c8, gbc.sp());
        EXPECT(0xa21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0057
        gbc.setState(0x9cea, 0x665, 0x530, 0xb58f, 0x35be, 0x4be2, 0x0, 0x1);
        gbc.writeMem(0x9cea, { 0x78 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x665, gbc.sp());
        EXPECT(0x9ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9cea));
        // 78 0058
        gbc.setState(0xa05, 0x464c, 0xe910, 0xaecc, 0x1bbf, 0x43c7, 0x1, 0x1);
        gbc.writeMem(0xa05, { 0x78 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x464c, gbc.sp());
        EXPECT(0xa06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 005A
        gbc.setState(0x36e0, 0x6642, 0x7a50, 0x2c5d, 0x72a4, 0xf437, 0x1, 0x1);
        gbc.writeMem(0x36e0, { 0x78 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6642, gbc.sp());
        EXPECT(0x36e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 005B
        gbc.setState(0x6973, 0x61f, 0x8740, 0x6c15, 0x3b42, 0xdfdc, 0x0, 0x0);
        gbc.writeMem(0x6973, { 0x78 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x61f, gbc.sp());
        EXPECT(0x6974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 005C
        gbc.setState(0x2f7e, 0xaace, 0x30, 0x55e9, 0xfe83, 0x9b5c, 0x1, 0x1);
        gbc.writeMem(0x2f7e, { 0x78 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xaace, gbc.sp());
        EXPECT(0x2f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 005D
        gbc.setState(0xbbde, 0x294e, 0xcba0, 0xfe5d, 0x83d, 0x1dce, 0x0, 0x1);
        gbc.writeMem(0xbbde, { 0x78 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x294e, gbc.sp());
        EXPECT(0xbbdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbbde));
        // 78 005E
        gbc.setState(0xeff5, 0x8ba1, 0x3fb0, 0x71e4, 0x6221, 0x7ace, 0x0, 0x1);
        gbc.writeMem(0xeff5, { 0x78 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8ba1, gbc.sp());
        EXPECT(0xeff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xeff5));
        // 78 005F
        gbc.setState(0x8034, 0x3202, 0xba10, 0x87e6, 0x34f2, 0xdb07, 0x0, 0x1);
        gbc.writeMem(0x8034, { 0x78 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3202, gbc.sp());
        EXPECT(0x8035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8034));
        // 78 0060
        gbc.setState(0x6a59, 0xdad8, 0xedd0, 0xa45, 0x23af, 0x6ec7, 0x0, 0x0);
        gbc.writeMem(0x6a59, { 0x78 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdad8, gbc.sp());
        EXPECT(0x6a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0061
        gbc.setState(0xa313, 0x5ad5, 0x2790, 0x2061, 0x6bc0, 0x68c3, 0x0, 0x0);
        gbc.writeMem(0xa313, { 0x78 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5ad5, gbc.sp());
        EXPECT(0xa314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa313));
        // 78 0062
        gbc.setState(0xd3fa, 0x87a, 0xb090, 0x3df2, 0xa8b8, 0x84ee, 0x1, 0x1);
        gbc.writeMem(0xd3fa, { 0x78 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x87a, gbc.sp());
        EXPECT(0xd3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd3fa));
        // 78 0063
        gbc.setState(0x7019, 0x33c, 0x3780, 0x861f, 0xa633, 0xeb0b, 0x0, 0x1);
        gbc.writeMem(0x7019, { 0x78 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x33c, gbc.sp());
        EXPECT(0x701a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0064
        gbc.setState(0xadc9, 0xd4ae, 0x3db0, 0xc6bc, 0xdb3f, 0x74b0, 0x1, 0x1);
        gbc.writeMem(0xadc9, { 0x78 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd4ae, gbc.sp());
        EXPECT(0xadca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xadc9));
        // 78 0065
        gbc.setState(0x396d, 0x4d56, 0xd940, 0xb832, 0xf291, 0x6ee7, 0x0, 0x1);
        gbc.writeMem(0x396d, { 0x78 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4d56, gbc.sp());
        EXPECT(0x396e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0066
        gbc.setState(0x53c4, 0xedf, 0x1c20, 0x815, 0xb775, 0xb54d, 0x1, 0x1);
        gbc.writeMem(0x53c4, { 0x78 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xedf, gbc.sp());
        EXPECT(0x53c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0067
        gbc.setState(0x32ee, 0x1076, 0xdde0, 0x3002, 0xd80f, 0x1e07, 0x0, 0x1);
        gbc.writeMem(0x32ee, { 0x78 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1076, gbc.sp());
        EXPECT(0x32ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0068
        gbc.setState(0x9c41, 0x6e31, 0xffc0, 0x6783, 0x34e8, 0xaea7, 0x1, 0x1);
        gbc.writeMem(0x9c41, { 0x78 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6e31, gbc.sp());
        EXPECT(0x9c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9c41));
        // 78 0069
        gbc.setState(0xc493, 0xc8c8, 0x37f0, 0x17da, 0xb214, 0x911a, 0x0, 0x0);
        gbc.writeMem(0xc493, { 0x78 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc8c8, gbc.sp());
        EXPECT(0xc494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc493));
        // 78 006A
        gbc.setState(0x34ee, 0xd24, 0x16a0, 0x760d, 0xac25, 0xb6f0, 0x0, 0x1);
        gbc.writeMem(0x34ee, { 0x78 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd24, gbc.sp());
        EXPECT(0x34ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 006B
        gbc.setState(0xa8d3, 0xa8da, 0x4490, 0x4f32, 0x5360, 0x560, 0x0, 0x1);
        gbc.writeMem(0xa8d3, { 0x78 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa8da, gbc.sp());
        EXPECT(0xa8d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa8d3));
        // 78 006C
        gbc.setState(0x39e0, 0x2dc5, 0x9ea0, 0x71d5, 0xe9eb, 0x6fbe, 0x0, 0x0);
        gbc.writeMem(0x39e0, { 0x78 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2dc5, gbc.sp());
        EXPECT(0x39e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 006D
        gbc.setState(0xd968, 0x22e, 0xa460, 0x1acd, 0x52ec, 0x1cf4, 0x0, 0x0);
        gbc.writeMem(0xd968, { 0x78 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x22e, gbc.sp());
        EXPECT(0xd969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd968));
        // 78 006E
        gbc.setState(0x702f, 0x8c4e, 0x4310, 0xe32c, 0x6271, 0x9d11, 0x0, 0x1);
        gbc.writeMem(0x702f, { 0x78 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8c4e, gbc.sp());
        EXPECT(0x7030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 006F
        gbc.setState(0x4c4f, 0xbdde, 0x6b10, 0xa608, 0x45d4, 0xb682, 0x1, 0x0);
        gbc.writeMem(0x4c4f, { 0x78 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbdde, gbc.sp());
        EXPECT(0x4c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0070
        gbc.setState(0x9ebf, 0x4e12, 0x4230, 0xff98, 0xc22c, 0xbf67, 0x0, 0x1);
        gbc.writeMem(0x9ebf, { 0x78 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4e12, gbc.sp());
        EXPECT(0x9ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9ebf));
        // 78 0071
        gbc.setState(0x65c9, 0x665e, 0x9210, 0xe826, 0x8029, 0xbaae, 0x0, 0x1);
        gbc.writeMem(0x65c9, { 0x78 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x665e, gbc.sp());
        EXPECT(0x65ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0072
        gbc.setState(0x25b9, 0xe6d9, 0x2430, 0x165b, 0x3f78, 0x48db, 0x0, 0x1);
        gbc.writeMem(0x25b9, { 0x78 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe6d9, gbc.sp());
        EXPECT(0x25ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0073
        gbc.setState(0xb1e7, 0x7618, 0x590, 0x18e2, 0x74a4, 0xee43, 0x0, 0x1);
        gbc.writeMem(0xb1e7, { 0x78 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7618, gbc.sp());
        EXPECT(0xb1e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb1e7));
        // 78 0074
        gbc.setState(0x5b06, 0xa546, 0x9690, 0x431a, 0x6489, 0xa48a, 0x1, 0x1);
        gbc.writeMem(0x5b06, { 0x78 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa546, gbc.sp());
        EXPECT(0x5b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0076
        gbc.setState(0xcec8, 0x9bca, 0x4cd0, 0xf097, 0x2512, 0x2535, 0x0, 0x0);
        gbc.writeMem(0xcec8, { 0x78 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9bca, gbc.sp());
        EXPECT(0xcec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcec8));
        // 78 0077
        gbc.setState(0xe6f1, 0x2f8b, 0x2560, 0x5ba6, 0x7669, 0x5e43, 0x0, 0x0);
        gbc.writeMem(0xe6f1, { 0x78 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2f8b, gbc.sp());
        EXPECT(0xe6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe6f1));
        // 78 0078
        gbc.setState(0x1da7, 0x45f6, 0x7f60, 0x248d, 0xdff0, 0xfb1c, 0x0, 0x0);
        gbc.writeMem(0x1da7, { 0x78 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x45f6, gbc.sp());
        EXPECT(0x1da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0079
        gbc.setState(0x53a8, 0x26ea, 0x3300, 0x191a, 0x8e75, 0xe2d1, 0x1, 0x1);
        gbc.writeMem(0x53a8, { 0x78 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x26ea, gbc.sp());
        EXPECT(0x53a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 007A
        gbc.setState(0xb718, 0x242b, 0x9e20, 0xde74, 0x88b9, 0x78fc, 0x1, 0x1);
        gbc.writeMem(0xb718, { 0x78 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x242b, gbc.sp());
        EXPECT(0xb719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb718));
        // 78 007B
        gbc.setState(0x4fc8, 0xc636, 0x47f0, 0xcf05, 0x90d2, 0x1d97, 0x0, 0x0);
        gbc.writeMem(0x4fc8, { 0x78 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc636, gbc.sp());
        EXPECT(0x4fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 007C
        gbc.setState(0xa0db, 0x6c5d, 0xd550, 0xb658, 0x5cef, 0x4881, 0x1, 0x0);
        gbc.writeMem(0xa0db, { 0x78 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6c5d, gbc.sp());
        EXPECT(0xa0dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa0db));
        // 78 007D
        gbc.setState(0x7eb8, 0x82fa, 0x1210, 0x2bb1, 0x7041, 0xc2e5, 0x1, 0x0);
        gbc.writeMem(0x7eb8, { 0x78 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x82fa, gbc.sp());
        EXPECT(0x7eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 007E
        gbc.setState(0xebef, 0x80bd, 0x56f0, 0xc87, 0x6dd, 0x6da1, 0x1, 0x1);
        gbc.writeMem(0xebef, { 0x78 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x80bd, gbc.sp());
        EXPECT(0xebf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xebef));
        // 78 007F
        gbc.setState(0xad9c, 0xe08c, 0x34d0, 0xbb13, 0x949b, 0x75ba, 0x0, 0x0);
        gbc.writeMem(0xad9c, { 0x78 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe08c, gbc.sp());
        EXPECT(0xad9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xad9c));
        // 78 0080
        gbc.setState(0x8c83, 0xe8d1, 0x9200, 0xda4e, 0x1679, 0x50f0, 0x0, 0x1);
        gbc.writeMem(0x8c83, { 0x78 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe8d1, gbc.sp());
        EXPECT(0x8c84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8c83));
        // 78 0081
        gbc.setState(0x3f23, 0x4ca0, 0x6f00, 0xa5ba, 0x996d, 0x88fb, 0x1, 0x1);
        gbc.writeMem(0x3f23, { 0x78 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4ca0, gbc.sp());
        EXPECT(0x3f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0082
        gbc.setState(0xabd4, 0xb4f5, 0x2990, 0x3e8, 0x770b, 0xc174, 0x0, 0x1);
        gbc.writeMem(0xabd4, { 0x78 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb4f5, gbc.sp());
        EXPECT(0xabd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xabd4));
        // 78 0083
        gbc.setState(0xc1b, 0x2195, 0xd770, 0x1aed, 0xd9d2, 0x667c, 0x1, 0x0);
        gbc.writeMem(0xc1b, { 0x78 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2195, gbc.sp());
        EXPECT(0xc1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0084
        gbc.setState(0xb600, 0xc453, 0x1c20, 0xbf5b, 0xe437, 0x875b, 0x0, 0x0);
        gbc.writeMem(0xb600, { 0x78 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc453, gbc.sp());
        EXPECT(0xb601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb600));
        // 78 0085
        gbc.setState(0x5006, 0x85c0, 0x7070, 0x568f, 0x9940, 0xccd0, 0x0, 0x0);
        gbc.writeMem(0x5006, { 0x78 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x85c0, gbc.sp());
        EXPECT(0x5007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0086
        gbc.setState(0xd356, 0x1b0, 0x2310, 0xe041, 0xe3c3, 0xb15f, 0x0, 0x0);
        gbc.writeMem(0xd356, { 0x78 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1b0, gbc.sp());
        EXPECT(0xd357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd356));
        // 78 0087
        gbc.setState(0xeb1a, 0x47ad, 0x1710, 0xc495, 0xa3ca, 0xb46d, 0x1, 0x0);
        gbc.writeMem(0xeb1a, { 0x78 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x47ad, gbc.sp());
        EXPECT(0xeb1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xeb1a));
        // 78 0088
        gbc.setState(0x788e, 0x5abe, 0x5b30, 0x2c47, 0xc877, 0x4fa4, 0x1, 0x0);
        gbc.writeMem(0x788e, { 0x78 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5abe, gbc.sp());
        EXPECT(0x788f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0089
        gbc.setState(0xc657, 0xf554, 0xbb0, 0x8b88, 0xc12c, 0x63ac, 0x0, 0x1);
        gbc.writeMem(0xc657, { 0x78 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf554, gbc.sp());
        EXPECT(0xc658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc657));
        // 78 008A
        gbc.setState(0xce9d, 0x93ec, 0x5c30, 0xd460, 0xca56, 0x6d8e, 0x1, 0x0);
        gbc.writeMem(0xce9d, { 0x78 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x93ec, gbc.sp());
        EXPECT(0xce9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xce9d));
        // 78 008B
        gbc.setState(0xd7a, 0x640b, 0x6450, 0x41ed, 0xf4b8, 0x41a9, 0x1, 0x1);
        gbc.writeMem(0xd7a, { 0x78 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x640b, gbc.sp());
        EXPECT(0xd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 008C
        gbc.setState(0xda41, 0x5623, 0x2f10, 0x4a3f, 0xa87f, 0x7958, 0x0, 0x1);
        gbc.writeMem(0xda41, { 0x78 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5623, gbc.sp());
        EXPECT(0xda42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xda41));
        // 78 008E
        gbc.setState(0x317e, 0x9add, 0xda50, 0x9f76, 0x122e, 0xa314, 0x1, 0x0);
        gbc.writeMem(0x317e, { 0x78 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9add, gbc.sp());
        EXPECT(0x317f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 008F
        gbc.setState(0x35c3, 0x3044, 0xa730, 0x5ef, 0xbdb, 0xa4e5, 0x0, 0x0);
        gbc.writeMem(0x35c3, { 0x78 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3044, gbc.sp());
        EXPECT(0x35c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0090
        gbc.setState(0x92ca, 0xc93b, 0x3650, 0x6043, 0x1891, 0x2027, 0x0, 0x1);
        gbc.writeMem(0x92ca, { 0x78 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc93b, gbc.sp());
        EXPECT(0x92cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x92ca));
        // 78 0091
        gbc.setState(0x65d, 0xc5b0, 0x5670, 0xa4a6, 0xec7a, 0x36c4, 0x0, 0x0);
        gbc.writeMem(0x65d, { 0x78 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc5b0, gbc.sp());
        EXPECT(0x65e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0092
        gbc.setState(0x8013, 0x229c, 0x49e0, 0xcb8c, 0xea2f, 0xb582, 0x0, 0x0);
        gbc.writeMem(0x8013, { 0x78 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x229c, gbc.sp());
        EXPECT(0x8014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8013));
        // 78 0094
        gbc.setState(0x5fe0, 0x314d, 0xec10, 0x542a, 0xa17e, 0x9e1a, 0x1, 0x0);
        gbc.writeMem(0x5fe0, { 0x78 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x314d, gbc.sp());
        EXPECT(0x5fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0095
        gbc.setState(0xab0d, 0x1f7b, 0x4b00, 0xb52e, 0xd029, 0xc583, 0x1, 0x0);
        gbc.writeMem(0xab0d, { 0x78 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1f7b, gbc.sp());
        EXPECT(0xab0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xab0d));
        // 78 0096
        gbc.setState(0x4775, 0xf3c4, 0xc130, 0xffb6, 0x1133, 0x3343, 0x1, 0x1);
        gbc.writeMem(0x4775, { 0x78 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf3c4, gbc.sp());
        EXPECT(0x4776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0097
        gbc.setState(0xe7c1, 0x77a4, 0x23e0, 0xde9f, 0x51c9, 0x1aed, 0x0, 0x0);
        gbc.writeMem(0xe7c1, { 0x78 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x77a4, gbc.sp());
        EXPECT(0xe7c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe7c1));
        // 78 0098
        gbc.setState(0x7a43, 0xc31d, 0x6040, 0x302f, 0x2096, 0x517b, 0x0, 0x0);
        gbc.writeMem(0x7a43, { 0x78 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc31d, gbc.sp());
        EXPECT(0x7a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0099
        gbc.setState(0x3597, 0x4352, 0x1800, 0x9791, 0x7f19, 0x7ffb, 0x1, 0x1);
        gbc.writeMem(0x3597, { 0x78 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4352, gbc.sp());
        EXPECT(0x3598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 009A
        gbc.setState(0x64f3, 0x760d, 0x28a0, 0x254, 0xa762, 0x72ac, 0x1, 0x0);
        gbc.writeMem(0x64f3, { 0x78 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x760d, gbc.sp());
        EXPECT(0x64f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 009B
        gbc.setState(0x7b8, 0x9e0, 0x2bc0, 0x7b25, 0x6db1, 0xd71, 0x0, 0x1);
        gbc.writeMem(0x7b8, { 0x78 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9e0, gbc.sp());
        EXPECT(0x7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 009C
        gbc.setState(0x663f, 0x8d36, 0x6570, 0x9e1c, 0x3f27, 0x6a4f, 0x0, 0x0);
        gbc.writeMem(0x663f, { 0x78 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8d36, gbc.sp());
        EXPECT(0x6640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 009D
        gbc.setState(0x997c, 0x32c1, 0xf6a0, 0x936a, 0x70c7, 0xeaa9, 0x1, 0x1);
        gbc.writeMem(0x997c, { 0x78 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x32c1, gbc.sp());
        EXPECT(0x997d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x997c));
        // 78 009E
        gbc.setState(0x9b9d, 0x406a, 0x1ae0, 0x362e, 0x1702, 0x45e9, 0x0, 0x1);
        gbc.writeMem(0x9b9d, { 0x78 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x406a, gbc.sp());
        EXPECT(0x9b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9b9d));
        // 78 009F
        gbc.setState(0x70ac, 0x39fb, 0x4810, 0x675c, 0x4d95, 0xf6c6, 0x0, 0x1);
        gbc.writeMem(0x70ac, { 0x78 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x39fb, gbc.sp());
        EXPECT(0x70ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00A0
        gbc.setState(0x2e16, 0x9bb1, 0x5770, 0x319d, 0xb5f1, 0x9f6e, 0x1, 0x1);
        gbc.writeMem(0x2e16, { 0x78 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9bb1, gbc.sp());
        EXPECT(0x2e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00A1
        gbc.setState(0xbaa3, 0x2e7d, 0xf6e0, 0x6f55, 0xb0dd, 0xf239, 0x1, 0x0);
        gbc.writeMem(0xbaa3, { 0x78 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2e7d, gbc.sp());
        EXPECT(0xbaa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbaa3));
        // 78 00A2
        gbc.setState(0xb52a, 0x9ced, 0x6830, 0xbb8e, 0x51ad, 0x757a, 0x0, 0x1);
        gbc.writeMem(0xb52a, { 0x78 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9ced, gbc.sp());
        EXPECT(0xb52b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb52a));
        // 78 00A3
        gbc.setState(0xb994, 0x96a0, 0x4c80, 0xeee4, 0xf155, 0xe20e, 0x1, 0x0);
        gbc.writeMem(0xb994, { 0x78 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x96a0, gbc.sp());
        EXPECT(0xb995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb994));
        // 78 00A4
        gbc.setState(0x8bfe, 0x5a13, 0xf060, 0x5965, 0x2a33, 0xb31c, 0x0, 0x0);
        gbc.writeMem(0x8bfe, { 0x78 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5a13, gbc.sp());
        EXPECT(0x8bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8bfe));
        // 78 00A5
        gbc.setState(0xb86c, 0x8797, 0x1bc0, 0xe873, 0xfc21, 0x3fd2, 0x0, 0x0);
        gbc.writeMem(0xb86c, { 0x78 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8797, gbc.sp());
        EXPECT(0xb86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb86c));
        // 78 00A6
        gbc.setState(0xb869, 0x4962, 0xdb10, 0x41ba, 0x9a24, 0xab53, 0x0, 0x1);
        gbc.writeMem(0xb869, { 0x78 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4962, gbc.sp());
        EXPECT(0xb86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb869));
        // 78 00A7
        gbc.setState(0xb41, 0x145c, 0xfee0, 0xc847, 0x963e, 0xcc64, 0x0, 0x1);
        gbc.writeMem(0xb41, { 0x78 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x145c, gbc.sp());
        EXPECT(0xb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00A8
        gbc.setState(0x8ba, 0x20e1, 0x65b0, 0x61d3, 0x221c, 0x7467, 0x1, 0x1);
        gbc.writeMem(0x8ba, { 0x78 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x20e1, gbc.sp());
        EXPECT(0x8bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00A9
        gbc.setState(0xb6da, 0xcbc1, 0x4440, 0xa000, 0x67b, 0x8a6d, 0x1, 0x0);
        gbc.writeMem(0xb6da, { 0x78 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcbc1, gbc.sp());
        EXPECT(0xb6db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb6da));
        // 78 00AA
        gbc.setState(0xbf79, 0xad, 0x9200, 0x8e23, 0xfcec, 0xf2d1, 0x0, 0x0);
        gbc.writeMem(0xbf79, { 0x78 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xad, gbc.sp());
        EXPECT(0xbf7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbf79));
        // 78 00AB
        gbc.setState(0x1ac6, 0x1834, 0x2320, 0x121b, 0xe1, 0x4f26, 0x1, 0x0);
        gbc.writeMem(0x1ac6, { 0x78 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1834, gbc.sp());
        EXPECT(0x1ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00AC
        gbc.setState(0xb5f9, 0xd726, 0xd4f0, 0x3564, 0x441b, 0x4d0b, 0x1, 0x1);
        gbc.writeMem(0xb5f9, { 0x78 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd726, gbc.sp());
        EXPECT(0xb5fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb5f9));
        // 78 00AD
        gbc.setState(0xa134, 0xa5e7, 0xfa70, 0x45c8, 0xf989, 0x9259, 0x0, 0x1);
        gbc.writeMem(0xa134, { 0x78 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa5e7, gbc.sp());
        EXPECT(0xa135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa134));
        // 78 00AE
        gbc.setState(0x15f9, 0x5db8, 0x620, 0xfcdd, 0x5040, 0x3f4a, 0x0, 0x0);
        gbc.writeMem(0x15f9, { 0x78 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5db8, gbc.sp());
        EXPECT(0x15fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00AF
        gbc.setState(0x129, 0xc55e, 0x76a0, 0x7e23, 0x7a15, 0x1af9, 0x1, 0x1);
        gbc.writeMem(0x129, { 0x78 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc55e, gbc.sp());
        EXPECT(0x12a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00B0
        gbc.setState(0x23f6, 0xd691, 0x7b50, 0xd559, 0x7e72, 0xd7e1, 0x1, 0x0);
        gbc.writeMem(0x23f6, { 0x78 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd691, gbc.sp());
        EXPECT(0x23f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00B1
        gbc.setState(0x6d76, 0xe619, 0x5800, 0xa6e6, 0xdf86, 0xc936, 0x0, 0x1);
        gbc.writeMem(0x6d76, { 0x78 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe619, gbc.sp());
        EXPECT(0x6d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00B2
        gbc.setState(0x750b, 0x3bc6, 0x2f70, 0x2e55, 0x4d4d, 0xa185, 0x1, 0x0);
        gbc.writeMem(0x750b, { 0x78 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3bc6, gbc.sp());
        EXPECT(0x750c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00B3
        gbc.setState(0xa2, 0xeda9, 0x26c0, 0xe826, 0x5472, 0x3e5f, 0x1, 0x1);
        gbc.writeMem(0xa2, { 0x78 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xeda9, gbc.sp());
        EXPECT(0xa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00B4
        gbc.setState(0x28d4, 0x4c8b, 0x6910, 0x7ba4, 0x6634, 0x4376, 0x1, 0x0);
        gbc.writeMem(0x28d4, { 0x78 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4c8b, gbc.sp());
        EXPECT(0x28d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00B5
        gbc.setState(0xd41b, 0xa403, 0xbea0, 0x584d, 0x9190, 0x30, 0x1, 0x1);
        gbc.writeMem(0xd41b, { 0x78 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa403, gbc.sp());
        EXPECT(0xd41c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd41b));
        // 78 00B6
        gbc.setState(0xb61a, 0xfc31, 0x3b70, 0xaaac, 0xd866, 0x1b8a, 0x0, 0x0);
        gbc.writeMem(0xb61a, { 0x78 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfc31, gbc.sp());
        EXPECT(0xb61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb61a));
        // 78 00B7
        gbc.setState(0xb3a5, 0xc429, 0x360, 0xd69f, 0x9389, 0x7380, 0x0, 0x0);
        gbc.writeMem(0xb3a5, { 0x78 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc429, gbc.sp());
        EXPECT(0xb3a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb3a5));
        // 78 00B8
        gbc.setState(0xee86, 0xbb1d, 0x8650, 0xc0bd, 0x2b8d, 0x7e94, 0x1, 0x0);
        gbc.writeMem(0xee86, { 0x78 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbb1d, gbc.sp());
        EXPECT(0xee87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xee86));
        // 78 00BA
        gbc.setState(0x55a1, 0x9d76, 0x6e70, 0x8658, 0x70a5, 0xe293, 0x1, 0x1);
        gbc.writeMem(0x55a1, { 0x78 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9d76, gbc.sp());
        EXPECT(0x55a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00BB
        gbc.setState(0x46cb, 0xe79b, 0x31a0, 0x642e, 0x7a4e, 0xeba2, 0x0, 0x0);
        gbc.writeMem(0x46cb, { 0x78 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe79b, gbc.sp());
        EXPECT(0x46cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00BC
        gbc.setState(0x7544, 0x430b, 0x8220, 0xc5d, 0x6714, 0x77b, 0x0, 0x0);
        gbc.writeMem(0x7544, { 0x78 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x430b, gbc.sp());
        EXPECT(0x7545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00BD
        gbc.setState(0x22de, 0x475e, 0x7aa0, 0x2540, 0xc7c3, 0x3ae8, 0x1, 0x1);
        gbc.writeMem(0x22de, { 0x78 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x475e, gbc.sp());
        EXPECT(0x22df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00BE
        gbc.setState(0xd0b6, 0xae2e, 0x7a90, 0x2055, 0x21b6, 0x5964, 0x0, 0x1);
        gbc.writeMem(0xd0b6, { 0x78 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xae2e, gbc.sp());
        EXPECT(0xd0b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd0b6));
        // 78 00BF
        gbc.setState(0x301d, 0x3030, 0xb0c0, 0x591a, 0xf19c, 0x3eee, 0x0, 0x1);
        gbc.writeMem(0x301d, { 0x78 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3030, gbc.sp());
        EXPECT(0x301e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00C0
        gbc.setState(0x8d01, 0x23d8, 0x93b0, 0xf25d, 0x41fb, 0x870d, 0x0, 0x0);
        gbc.writeMem(0x8d01, { 0x78 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x23d8, gbc.sp());
        EXPECT(0x8d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8d01));
        // 78 00C1
        gbc.setState(0x9b6b, 0x3605, 0x7450, 0x8df6, 0x79c5, 0x5c08, 0x0, 0x1);
        gbc.writeMem(0x9b6b, { 0x78 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3605, gbc.sp());
        EXPECT(0x9b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9b6b));
        // 78 00C2
        gbc.setState(0xc3ab, 0x1dc3, 0x22f0, 0xda6c, 0x93b5, 0x46c3, 0x0, 0x0);
        gbc.writeMem(0xc3ab, { 0x78 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1dc3, gbc.sp());
        EXPECT(0xc3ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc3ab));
        // 78 00C3
        gbc.setState(0xd4a5, 0x5494, 0xabd0, 0xb0a3, 0x5f01, 0x1e6f, 0x0, 0x1);
        gbc.writeMem(0xd4a5, { 0x78 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5494, gbc.sp());
        EXPECT(0xd4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd4a5));
        // 78 00C4
        gbc.setState(0x966d, 0x630d, 0xe30, 0x4a5, 0xc2ff, 0xbcb, 0x1, 0x0);
        gbc.writeMem(0x966d, { 0x78 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x630d, gbc.sp());
        EXPECT(0x966e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x966d));
        // 78 00C5
        gbc.setState(0xb797, 0x18e5, 0x8620, 0x44a5, 0x93b, 0xfa19, 0x0, 0x1);
        gbc.writeMem(0xb797, { 0x78 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x18e5, gbc.sp());
        EXPECT(0xb798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb797));
        // 78 00C6
        gbc.setState(0x31e9, 0x9aff, 0xe730, 0x8479, 0x4de8, 0x5334, 0x1, 0x0);
        gbc.writeMem(0x31e9, { 0x78 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9aff, gbc.sp());
        EXPECT(0x31ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00C7
        gbc.setState(0x1650, 0x56bd, 0xf5c0, 0xcd27, 0x2ab6, 0x3b7e, 0x0, 0x0);
        gbc.writeMem(0x1650, { 0x78 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x56bd, gbc.sp());
        EXPECT(0x1651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00C8
        gbc.setState(0x6f7f, 0xf372, 0x62d0, 0xd877, 0xde06, 0x3333, 0x1, 0x1);
        gbc.writeMem(0x6f7f, { 0x78 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf372, gbc.sp());
        EXPECT(0x6f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00C9
        gbc.setState(0x7324, 0x7268, 0xfac0, 0xbacc, 0x38ba, 0x82a7, 0x1, 0x1);
        gbc.writeMem(0x7324, { 0x78 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7268, gbc.sp());
        EXPECT(0x7325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00CA
        gbc.setState(0x7833, 0x26b7, 0x6ea0, 0x968f, 0x5701, 0x4bbc, 0x1, 0x1);
        gbc.writeMem(0x7833, { 0x78 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x26b7, gbc.sp());
        EXPECT(0x7834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00CB
        gbc.setState(0xddaf, 0x690f, 0x9af0, 0x2ca7, 0x5042, 0x9257, 0x0, 0x0);
        gbc.writeMem(0xddaf, { 0x78 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x690f, gbc.sp());
        EXPECT(0xddb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xddaf));
        // 78 00CD
        gbc.setState(0x5ae0, 0xccc4, 0xe7c0, 0x8002, 0xc84b, 0x1048, 0x1, 0x0);
        gbc.writeMem(0x5ae0, { 0x78 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xccc4, gbc.sp());
        EXPECT(0x5ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00CE
        gbc.setState(0x91f1, 0x1d29, 0xd210, 0x3854, 0x855a, 0xcb76, 0x0, 0x1);
        gbc.writeMem(0x91f1, { 0x78 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1d29, gbc.sp());
        EXPECT(0x91f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x91f1));
        // 78 00CF
        gbc.setState(0xcce4, 0x9e70, 0x2a90, 0xe033, 0x7ff8, 0x86d3, 0x0, 0x0);
        gbc.writeMem(0xcce4, { 0x78 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9e70, gbc.sp());
        EXPECT(0xcce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcce4));
        // 78 00D0
        gbc.setState(0x11f2, 0x1c17, 0xcfb0, 0xd687, 0xff35, 0x429f, 0x0, 0x0);
        gbc.writeMem(0x11f2, { 0x78 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1c17, gbc.sp());
        EXPECT(0x11f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00D1
        gbc.setState(0xa0d, 0x706f, 0x97e0, 0x4666, 0xaa2c, 0xe95a, 0x1, 0x1);
        gbc.writeMem(0xa0d, { 0x78 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x706f, gbc.sp());
        EXPECT(0xa0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00D2
        gbc.setState(0xa4fa, 0xa6f, 0xd000, 0x31d0, 0x84fb, 0x570c, 0x0, 0x0);
        gbc.writeMem(0xa4fa, { 0x78 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa6f, gbc.sp());
        EXPECT(0xa4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa4fa));
        // 78 00D3
        gbc.setState(0x71e1, 0x8377, 0x3c90, 0x235a, 0x61a, 0x4e82, 0x1, 0x1);
        gbc.writeMem(0x71e1, { 0x78 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8377, gbc.sp());
        EXPECT(0x71e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00D4
        gbc.setState(0x5a58, 0x148f, 0x94f0, 0x5403, 0xf595, 0xeeb7, 0x1, 0x0);
        gbc.writeMem(0x5a58, { 0x78 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x148f, gbc.sp());
        EXPECT(0x5a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00D5
        gbc.setState(0xc62b, 0xea1b, 0xda90, 0xdf1d, 0x42e8, 0x91c4, 0x0, 0x0);
        gbc.writeMem(0xc62b, { 0x78 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xea1b, gbc.sp());
        EXPECT(0xc62c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc62b));
        // 78 00D6
        gbc.setState(0x8938, 0xbd4, 0x7990, 0x880e, 0xbc20, 0xba8b, 0x1, 0x1);
        gbc.writeMem(0x8938, { 0x78 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbd4, gbc.sp());
        EXPECT(0x8939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8938));
        // 78 00D7
        gbc.setState(0xb441, 0xa6b5, 0x4780, 0xc10d, 0x7f4, 0xb530, 0x0, 0x1);
        gbc.writeMem(0xb441, { 0x78 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa6b5, gbc.sp());
        EXPECT(0xb442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb441));
        // 78 00D8
        gbc.setState(0x64d5, 0x328b, 0xab40, 0x1e17, 0xa008, 0xb9ca, 0x0, 0x0);
        gbc.writeMem(0x64d5, { 0x78 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x328b, gbc.sp());
        EXPECT(0x64d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00D9
        gbc.setState(0xa0, 0xca2b, 0x45a0, 0x3bfb, 0x9e4f, 0xfd6d, 0x0, 0x1);
        gbc.writeMem(0xa0, { 0x78 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xca2b, gbc.sp());
        EXPECT(0xa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00DA
        gbc.setState(0x42d3, 0xf82f, 0x9420, 0x626b, 0x4b88, 0x98, 0x0, 0x0);
        gbc.writeMem(0x42d3, { 0x78 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf82f, gbc.sp());
        EXPECT(0x42d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00DB
        gbc.setState(0xadfb, 0xced7, 0x4970, 0xcbad, 0x92c2, 0x903d, 0x0, 0x1);
        gbc.writeMem(0xadfb, { 0x78 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xced7, gbc.sp());
        EXPECT(0xadfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xadfb));
        // 78 00DC
        gbc.setState(0xa8ad, 0xca26, 0xc030, 0x138e, 0x74ea, 0x8123, 0x0, 0x1);
        gbc.writeMem(0xa8ad, { 0x78 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xca26, gbc.sp());
        EXPECT(0xa8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa8ad));
        // 78 00DD
        gbc.setState(0xadd4, 0x1e75, 0xf100, 0xaad, 0x4313, 0x63ed, 0x0, 0x0);
        gbc.writeMem(0xadd4, { 0x78 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1e75, gbc.sp());
        EXPECT(0xadd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xadd4));
        // 78 00DE
        gbc.setState(0x2021, 0x525f, 0x2f40, 0x48e0, 0x8f7f, 0x953c, 0x1, 0x1);
        gbc.writeMem(0x2021, { 0x78 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x525f, gbc.sp());
        EXPECT(0x2022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00DF
        gbc.setState(0x7a73, 0x86e0, 0x7a40, 0xb9b9, 0x11dd, 0xaad7, 0x1, 0x0);
        gbc.writeMem(0x7a73, { 0x78 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x86e0, gbc.sp());
        EXPECT(0x7a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00E0
        gbc.setState(0x4465, 0xb72d, 0xbd30, 0xebac, 0x26e8, 0x5df7, 0x1, 0x1);
        gbc.writeMem(0x4465, { 0x78 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb72d, gbc.sp());
        EXPECT(0x4466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00E1
        gbc.setState(0xdbe, 0xd87, 0xbb30, 0xae01, 0x22e4, 0x78d8, 0x1, 0x0);
        gbc.writeMem(0xdbe, { 0x78 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd87, gbc.sp());
        EXPECT(0xdbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00E2
        gbc.setState(0x7233, 0xff08, 0xdd00, 0x36d1, 0x8e64, 0x4c80, 0x1, 0x0);
        gbc.writeMem(0x7233, { 0x78 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xff08, gbc.sp());
        EXPECT(0x7234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00E3
        gbc.setState(0x2d62, 0x24ce, 0x5de0, 0xc992, 0x8c69, 0x43a2, 0x0, 0x1);
        gbc.writeMem(0x2d62, { 0x78 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x24ce, gbc.sp());
        EXPECT(0x2d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00E4
        gbc.setState(0x2042, 0x387c, 0xc1b0, 0xeeaf, 0x983f, 0xab8b, 0x0, 0x0);
        gbc.writeMem(0x2042, { 0x78 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x387c, gbc.sp());
        EXPECT(0x2043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00E5
        gbc.setState(0xc658, 0xd395, 0x6700, 0xe225, 0xe1e6, 0xcf18, 0x1, 0x1);
        gbc.writeMem(0xc658, { 0x78 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd395, gbc.sp());
        EXPECT(0xc659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc658));
        // 78 00E6
        gbc.setState(0x38c0, 0xed70, 0xcce0, 0xfe60, 0x74c3, 0xaf88, 0x1, 0x1);
        gbc.writeMem(0x38c0, { 0x78 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xed70, gbc.sp());
        EXPECT(0x38c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00E7
        gbc.setState(0x7be3, 0xcf50, 0x3c40, 0xf910, 0x2c93, 0x9fcb, 0x0, 0x1);
        gbc.writeMem(0x7be3, { 0x78 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcf50, gbc.sp());
        EXPECT(0x7be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00E8
        gbc.setState(0x94bf, 0x12c6, 0xc3a0, 0xfcdd, 0x4406, 0x5ee9, 0x0, 0x0);
        gbc.writeMem(0x94bf, { 0x78 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x12c6, gbc.sp());
        EXPECT(0x94c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x94bf));
        // 78 00E9
        gbc.setState(0x82e6, 0x4883, 0x42a0, 0x5756, 0x8c3, 0xd083, 0x0, 0x0);
        gbc.writeMem(0x82e6, { 0x78 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4883, gbc.sp());
        EXPECT(0x82e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x82e6));
        // 78 00EA
        gbc.setState(0xc789, 0x50c3, 0x1a70, 0x31ec, 0x16ac, 0x8c8, 0x1, 0x1);
        gbc.writeMem(0xc789, { 0x78 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x50c3, gbc.sp());
        EXPECT(0xc78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc789));
        // 78 00EB
        gbc.setState(0xc03a, 0xfb29, 0x3dc0, 0x8689, 0x4f22, 0x929e, 0x0, 0x1);
        gbc.writeMem(0xc03a, { 0x78 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfb29, gbc.sp());
        EXPECT(0xc03b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc03a));
        // 78 00EC
        gbc.setState(0x2280, 0xfd48, 0xc9a0, 0x2329, 0x8881, 0xe889, 0x1, 0x1);
        gbc.writeMem(0x2280, { 0x78 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfd48, gbc.sp());
        EXPECT(0x2281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00ED
        gbc.setState(0x124f, 0xfc52, 0x2250, 0x6f83, 0x1f14, 0x7802, 0x1, 0x1);
        gbc.writeMem(0x124f, { 0x78 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfc52, gbc.sp());
        EXPECT(0x1250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00EE
        gbc.setState(0xadef, 0x69e4, 0xfa0, 0xfd47, 0x4689, 0x6bea, 0x1, 0x0);
        gbc.writeMem(0xadef, { 0x78 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x69e4, gbc.sp());
        EXPECT(0xadf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xadef));
        // 78 00EF
        gbc.setState(0x7a0c, 0x8fdc, 0x87e0, 0x5423, 0x8eca, 0x1a12, 0x1, 0x1);
        gbc.writeMem(0x7a0c, { 0x78 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8fdc, gbc.sp());
        EXPECT(0x7a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00F0
        gbc.setState(0x2b6d, 0xe050, 0x3d70, 0x6f9b, 0xe2fc, 0x19fc, 0x0, 0x0);
        gbc.writeMem(0x2b6d, { 0x78 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe050, gbc.sp());
        EXPECT(0x2b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00F2
        gbc.setState(0x7701, 0x7e61, 0xb380, 0xa875, 0x515b, 0xd312, 0x1, 0x0);
        gbc.writeMem(0x7701, { 0x78 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7e61, gbc.sp());
        EXPECT(0x7702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00F3
        gbc.setState(0xc9f, 0xc5b2, 0x1190, 0x6aaf, 0x5c0c, 0x160c, 0x0, 0x1);
        gbc.writeMem(0xc9f, { 0x78 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc5b2, gbc.sp());
        EXPECT(0xca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00F4
        gbc.setState(0x242b, 0xd895, 0x3650, 0xbd66, 0xcb2b, 0x6f93, 0x0, 0x0);
        gbc.writeMem(0x242b, { 0x78 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd895, gbc.sp());
        EXPECT(0x242c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00F5
        gbc.setState(0x10d2, 0x9e9d, 0x5d00, 0x8ff2, 0x4463, 0x7749, 0x0, 0x0);
        gbc.writeMem(0x10d2, { 0x78 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9e9d, gbc.sp());
        EXPECT(0x10d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00F6
        gbc.setState(0xbe96, 0xd28e, 0x7f50, 0x265b, 0xaff2, 0xc75a, 0x0, 0x0);
        gbc.writeMem(0xbe96, { 0x78 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd28e, gbc.sp());
        EXPECT(0xbe97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbe96));
        // 78 00F7
        gbc.setState(0xca31, 0xb255, 0xa00, 0x3d36, 0x9464, 0x8a05, 0x0, 0x1);
        gbc.writeMem(0xca31, { 0x78 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb255, gbc.sp());
        EXPECT(0xca32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xca31));
        // 78 00F8
        gbc.setState(0x5586, 0x67cb, 0xa3c0, 0xd082, 0x2f5a, 0xc5be, 0x1, 0x0);
        gbc.writeMem(0x5586, { 0x78 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x67cb, gbc.sp());
        EXPECT(0x5587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00F9
        gbc.setState(0xaae3, 0xf05b, 0xb940, 0x8e2d, 0x508, 0x98b7, 0x1, 0x1);
        gbc.writeMem(0xaae3, { 0x78 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf05b, gbc.sp());
        EXPECT(0xaae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xaae3));
        // 78 00FA
        gbc.setState(0x45ed, 0x52d1, 0x4cb0, 0x91c2, 0xbb40, 0x1f38, 0x1, 0x0);
        gbc.writeMem(0x45ed, { 0x78 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x52d1, gbc.sp());
        EXPECT(0x45ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 00FB
        gbc.setState(0x2e4b, 0x935a, 0xee0, 0xbbb5, 0x1caa, 0x8427, 0x0, 0x0);
        gbc.writeMem(0x2e4b, { 0x78 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x935a, gbc.sp());
        EXPECT(0x2e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00FC
        gbc.setState(0xe35b, 0xc57, 0x5170, 0x8095, 0xc41e, 0xe1c6, 0x1, 0x0);
        gbc.writeMem(0xe35b, { 0x78 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc57, gbc.sp());
        EXPECT(0xe35c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe35b));
        // 78 00FD
        gbc.setState(0x5c8e, 0x176a, 0x41e0, 0xe363, 0xcf20, 0x6665, 0x1, 0x0);
        gbc.writeMem(0x5c8e, { 0x78 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x176a, gbc.sp());
        EXPECT(0x5c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00FE
        gbc.setState(0x55ab, 0x9df6, 0x8820, 0x2145, 0x74ee, 0xfc4f, 0x0, 0x0);
        gbc.writeMem(0x55ab, { 0x78 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9df6, gbc.sp());
        EXPECT(0x55ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 00FF
        gbc.setState(0x6d48, 0x4d46, 0xdcc0, 0x4de0, 0x4c27, 0x9698, 0x1, 0x0);
        gbc.writeMem(0x6d48, { 0x78 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4d46, gbc.sp());
        EXPECT(0x6d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0100
        gbc.setState(0xaa1, 0x4044, 0x5280, 0x780b, 0x794d, 0xc149, 0x1, 0x1);
        gbc.writeMem(0xaa1, { 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4044, gbc.sp());
        EXPECT(0xaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0101
        gbc.setState(0x1f96, 0x8fe3, 0xff20, 0x9a30, 0xdd5, 0x78a6, 0x1, 0x0);
        gbc.writeMem(0x1f96, { 0x78 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8fe3, gbc.sp());
        EXPECT(0x1f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0102
        gbc.setState(0xc960, 0x8307, 0x1810, 0x6b7, 0x3c4b, 0x65a6, 0x1, 0x0);
        gbc.writeMem(0xc960, { 0x78 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8307, gbc.sp());
        EXPECT(0xc961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc960));
        // 78 0103
        gbc.setState(0x4bc2, 0x4b46, 0x9170, 0xb0ab, 0xaf2e, 0x1c35, 0x0, 0x1);
        gbc.writeMem(0x4bc2, { 0x78 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4b46, gbc.sp());
        EXPECT(0x4bc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0104
        gbc.setState(0xba9a, 0x7a2, 0xb760, 0x5ae5, 0x14bd, 0xa290, 0x0, 0x1);
        gbc.writeMem(0xba9a, { 0x78 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7a2, gbc.sp());
        EXPECT(0xba9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xba9a));
        // 78 0105
        gbc.setState(0xcbd4, 0x728e, 0x98f0, 0x6bf0, 0x261e, 0xc749, 0x0, 0x1);
        gbc.writeMem(0xcbd4, { 0x78 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x728e, gbc.sp());
        EXPECT(0xcbd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcbd4));
        // 78 0106
        gbc.setState(0x92db, 0xef37, 0x1e20, 0x71cd, 0xe11, 0xb440, 0x0, 0x0);
        gbc.writeMem(0x92db, { 0x78 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xef37, gbc.sp());
        EXPECT(0x92dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x92db));
        // 78 0107
        gbc.setState(0x4abf, 0xeeaf, 0x3350, 0x717a, 0x9178, 0x5c42, 0x0, 0x1);
        gbc.writeMem(0x4abf, { 0x78 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xeeaf, gbc.sp());
        EXPECT(0x4ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0108
        gbc.setState(0xcad8, 0xabd1, 0x8f0, 0x62e5, 0x2f4b, 0xebfa, 0x1, 0x1);
        gbc.writeMem(0xcad8, { 0x78 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xabd1, gbc.sp());
        EXPECT(0xcad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcad8));
        // 78 0109
        gbc.setState(0x7bfa, 0x45b3, 0xe3f0, 0x90a2, 0x9ced, 0xeb10, 0x0, 0x1);
        gbc.writeMem(0x7bfa, { 0x78 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x45b3, gbc.sp());
        EXPECT(0x7bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 010B
        gbc.setState(0x343e, 0x68c3, 0x5bc0, 0x4c2f, 0xca3a, 0x2b62, 0x1, 0x1);
        gbc.writeMem(0x343e, { 0x78 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x68c3, gbc.sp());
        EXPECT(0x343f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 010C
        gbc.setState(0x4297, 0x85a0, 0xe0a0, 0xd72c, 0xbe7, 0x2dd4, 0x0, 0x0);
        gbc.writeMem(0x4297, { 0x78 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x85a0, gbc.sp());
        EXPECT(0x4298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 010D
        gbc.setState(0x2f86, 0x5e4a, 0xbdd0, 0x6d1e, 0x60a5, 0xb49c, 0x0, 0x1);
        gbc.writeMem(0x2f86, { 0x78 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5e4a, gbc.sp());
        EXPECT(0x2f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 010E
        gbc.setState(0x22aa, 0xdfb, 0xbba0, 0x69da, 0xa11f, 0x586f, 0x1, 0x0);
        gbc.writeMem(0x22aa, { 0x78 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdfb, gbc.sp());
        EXPECT(0x22ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 010F
        gbc.setState(0xd6, 0xbe3c, 0xf300, 0x91c1, 0x8c4f, 0x66e6, 0x0, 0x1);
        gbc.writeMem(0xd6, { 0x78 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbe3c, gbc.sp());
        EXPECT(0xd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0110
        gbc.setState(0x4e20, 0x4ada, 0x1440, 0x1d62, 0x4e36, 0xb53e, 0x1, 0x1);
        gbc.writeMem(0x4e20, { 0x78 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4ada, gbc.sp());
        EXPECT(0x4e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0111
        gbc.setState(0x208f, 0xec46, 0x73e0, 0x2940, 0xed39, 0xa982, 0x0, 0x1);
        gbc.writeMem(0x208f, { 0x78 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xec46, gbc.sp());
        EXPECT(0x2090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0112
        gbc.setState(0xb077, 0xf87, 0xef50, 0xcfeb, 0xac0, 0xb814, 0x0, 0x0);
        gbc.writeMem(0xb077, { 0x78 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf87, gbc.sp());
        EXPECT(0xb078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb077));
        // 78 0113
        gbc.setState(0xcd08, 0x62cc, 0x9070, 0x1596, 0xa4d3, 0xdd3b, 0x0, 0x0);
        gbc.writeMem(0xcd08, { 0x78 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x62cc, gbc.sp());
        EXPECT(0xcd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcd08));
        // 78 0114
        gbc.setState(0x6fec, 0x2cf8, 0x1050, 0x2057, 0x5704, 0x1408, 0x0, 0x1);
        gbc.writeMem(0x6fec, { 0x78 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2cf8, gbc.sp());
        EXPECT(0x6fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0115
        gbc.setState(0x964e, 0xf354, 0x5170, 0x328a, 0xc950, 0xedac, 0x1, 0x0);
        gbc.writeMem(0x964e, { 0x78 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf354, gbc.sp());
        EXPECT(0x964f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x964e));
        // 78 0116
        gbc.setState(0xeee5, 0xaa78, 0x5750, 0x944f, 0xb6a5, 0xb9d2, 0x1, 0x1);
        gbc.writeMem(0xeee5, { 0x78 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xaa78, gbc.sp());
        EXPECT(0xeee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xeee5));
        // 78 0117
        gbc.setState(0xd82f, 0xba09, 0x40b0, 0x1f52, 0x1158, 0xf6c, 0x1, 0x0);
        gbc.writeMem(0xd82f, { 0x78 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xba09, gbc.sp());
        EXPECT(0xd830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd82f));
        // 78 0118
        gbc.setState(0xd003, 0x7307, 0x5750, 0x6313, 0xc1bd, 0xf0ac, 0x0, 0x1);
        gbc.writeMem(0xd003, { 0x78 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7307, gbc.sp());
        EXPECT(0xd004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd003));
        // 78 0119
        gbc.setState(0x5aeb, 0xb90c, 0x9df0, 0x33e7, 0xe1f8, 0x221b, 0x1, 0x1);
        gbc.writeMem(0x5aeb, { 0x78 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb90c, gbc.sp());
        EXPECT(0x5aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 011A
        gbc.setState(0xc2b1, 0xdd45, 0xb40, 0x1cde, 0x13b9, 0x4fae, 0x0, 0x1);
        gbc.writeMem(0xc2b1, { 0x78 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdd45, gbc.sp());
        EXPECT(0xc2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc2b1));
        // 78 011B
        gbc.setState(0x1bc8, 0x6485, 0xf770, 0x5b1b, 0x94d2, 0x2627, 0x1, 0x1);
        gbc.writeMem(0x1bc8, { 0x78 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6485, gbc.sp());
        EXPECT(0x1bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 011C
        gbc.setState(0x6e1e, 0x82ef, 0xb1e0, 0x2d5, 0xa50b, 0xd941, 0x1, 0x1);
        gbc.writeMem(0x6e1e, { 0x78 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x82ef, gbc.sp());
        EXPECT(0x6e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 011D
        gbc.setState(0x4498, 0x8f59, 0xa950, 0x457, 0x3685, 0xbbf3, 0x0, 0x1);
        gbc.writeMem(0x4498, { 0x78 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8f59, gbc.sp());
        EXPECT(0x4499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 011E
        gbc.setState(0xbc92, 0x1f67, 0xf260, 0xb00d, 0xe802, 0x495f, 0x0, 0x0);
        gbc.writeMem(0xbc92, { 0x78 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1f67, gbc.sp());
        EXPECT(0xbc93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbc92));
        // 78 011F
        gbc.setState(0x89e1, 0x2933, 0x28d0, 0x264c, 0x16ab, 0x626e, 0x0, 0x0);
        gbc.writeMem(0x89e1, { 0x78 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2933, gbc.sp());
        EXPECT(0x89e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x89e1));
        // 78 0120
        gbc.setState(0xe8ff, 0xed1c, 0x5300, 0x251a, 0xbccc, 0xa40, 0x1, 0x1);
        gbc.writeMem(0xe8ff, { 0x78 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xed1c, gbc.sp());
        EXPECT(0xe900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe8ff));
        // 78 0121
        gbc.setState(0x35c5, 0xdfa4, 0x51e0, 0x4f95, 0xce2a, 0x415a, 0x0, 0x1);
        gbc.writeMem(0x35c5, { 0x78 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdfa4, gbc.sp());
        EXPECT(0x35c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0122
        gbc.setState(0xb7ec, 0x541f, 0xb1e0, 0x4f6d, 0x8587, 0xaf62, 0x1, 0x1);
        gbc.writeMem(0xb7ec, { 0x78 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x541f, gbc.sp());
        EXPECT(0xb7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb7ec));
        // 78 0123
        gbc.setState(0x4949, 0x76af, 0x9930, 0x8355, 0x9712, 0x5b54, 0x0, 0x1);
        gbc.writeMem(0x4949, { 0x78 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x76af, gbc.sp());
        EXPECT(0x494a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0124
        gbc.setState(0x498d, 0xe6ab, 0xf0f0, 0xbfcb, 0x7058, 0x8726, 0x1, 0x0);
        gbc.writeMem(0x498d, { 0x78 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe6ab, gbc.sp());
        EXPECT(0x498e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0125
        gbc.setState(0xb118, 0x96, 0x2910, 0x8370, 0x4b5a, 0x4925, 0x1, 0x0);
        gbc.writeMem(0xb118, { 0x78 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x96, gbc.sp());
        EXPECT(0xb119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb118));
        // 78 0126
        gbc.setState(0x135d, 0x332b, 0x80b0, 0x22fc, 0x5beb, 0xb767, 0x0, 0x1);
        gbc.writeMem(0x135d, { 0x78 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x332b, gbc.sp());
        EXPECT(0x135e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0127
        gbc.setState(0x4299, 0x97fa, 0x3a0, 0xc3d8, 0xeaeb, 0x72c3, 0x1, 0x0);
        gbc.writeMem(0x4299, { 0x78 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x97fa, gbc.sp());
        EXPECT(0x429a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0128
        gbc.setState(0xedc8, 0xa6df, 0xbda0, 0xd9e4, 0x8ecd, 0x5ae3, 0x1, 0x1);
        gbc.writeMem(0xedc8, { 0x78 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa6df, gbc.sp());
        EXPECT(0xedc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xedc8));
        // 78 0129
        gbc.setState(0xdc7d, 0x811e, 0x64c0, 0x2d92, 0x5f33, 0xf1e2, 0x1, 0x1);
        gbc.writeMem(0xdc7d, { 0x78 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x811e, gbc.sp());
        EXPECT(0xdc7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdc7d));
        // 78 012A
        gbc.setState(0x7dbe, 0xaa27, 0x9810, 0x2321, 0x6f5c, 0x21e0, 0x1, 0x0);
        gbc.writeMem(0x7dbe, { 0x78 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xaa27, gbc.sp());
        EXPECT(0x7dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 012B
        gbc.setState(0xbb16, 0xd516, 0x9850, 0x512c, 0x99cf, 0xb96a, 0x0, 0x0);
        gbc.writeMem(0xbb16, { 0x78 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd516, gbc.sp());
        EXPECT(0xbb17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbb16));
        // 78 012C
        gbc.setState(0xcdc, 0x85b2, 0x9d20, 0xbf87, 0xbdbe, 0xa056, 0x1, 0x1);
        gbc.writeMem(0xcdc, { 0x78 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x85b2, gbc.sp());
        EXPECT(0xcdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 012D
        gbc.setState(0x388d, 0xb071, 0x6e40, 0x931d, 0xdd36, 0xd4a8, 0x1, 0x0);
        gbc.writeMem(0x388d, { 0x78 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb071, gbc.sp());
        EXPECT(0x388e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 012E
        gbc.setState(0xab5d, 0x14f1, 0x82d0, 0x1cac, 0xab5d, 0xeade, 0x0, 0x1);
        gbc.writeMem(0xab5d, { 0x78 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x14f1, gbc.sp());
        EXPECT(0xab5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xab5d));
        // 78 012F
        gbc.setState(0x7c60, 0xaea4, 0x1380, 0x88cf, 0xbb6a, 0x8184, 0x0, 0x0);
        gbc.writeMem(0x7c60, { 0x78 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xaea4, gbc.sp());
        EXPECT(0x7c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0130
        gbc.setState(0xa4b, 0x8b8c, 0xc280, 0x593b, 0x92a8, 0x6a76, 0x0, 0x1);
        gbc.writeMem(0xa4b, { 0x78 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8b8c, gbc.sp());
        EXPECT(0xa4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0131
        gbc.setState(0xc7fd, 0x29fa, 0xe00, 0x40e0, 0x8c67, 0xcbc4, 0x1, 0x1);
        gbc.writeMem(0xc7fd, { 0x78 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x29fa, gbc.sp());
        EXPECT(0xc7fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc7fd));
        // 78 0132
        gbc.setState(0x71f4, 0x31c9, 0x4af0, 0xde3, 0x750e, 0xfcd0, 0x1, 0x1);
        gbc.writeMem(0x71f4, { 0x78 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x31c9, gbc.sp());
        EXPECT(0x71f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0133
        gbc.setState(0x8340, 0xd078, 0x3050, 0x9277, 0x9a74, 0x1d4c, 0x0, 0x0);
        gbc.writeMem(0x8340, { 0x78 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd078, gbc.sp());
        EXPECT(0x8341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8340));
        // 78 0134
        gbc.setState(0x161e, 0xbc8, 0x5d60, 0xd24b, 0x6a4f, 0x7932, 0x0, 0x0);
        gbc.writeMem(0x161e, { 0x78 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbc8, gbc.sp());
        EXPECT(0x161f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0135
        gbc.setState(0x7f9d, 0x6435, 0x1c0, 0xd89c, 0x1889, 0x4cf7, 0x1, 0x0);
        gbc.writeMem(0x7f9d, { 0x78 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6435, gbc.sp());
        EXPECT(0x7f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0136
        gbc.setState(0x8e8, 0xd86, 0xba50, 0x98d5, 0xb0c6, 0x971, 0x1, 0x0);
        gbc.writeMem(0x8e8, { 0x78 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd86, gbc.sp());
        EXPECT(0x8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0137
        gbc.setState(0xc306, 0xfbc1, 0x4500, 0xd06c, 0x9318, 0xef18, 0x1, 0x0);
        gbc.writeMem(0xc306, { 0x78 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfbc1, gbc.sp());
        EXPECT(0xc307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc306));
        // 78 0138
        gbc.setState(0x7ccd, 0xc828, 0xbc30, 0x1735, 0xbf25, 0x622f, 0x1, 0x0);
        gbc.writeMem(0x7ccd, { 0x78 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc828, gbc.sp());
        EXPECT(0x7cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0139
        gbc.setState(0xec40, 0x2e8b, 0x64b0, 0xeb4e, 0xfb53, 0x273f, 0x0, 0x1);
        gbc.writeMem(0xec40, { 0x78 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2e8b, gbc.sp());
        EXPECT(0xec41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xec40));
        // 78 013A
        gbc.setState(0x62e, 0xc420, 0xb8c0, 0xe221, 0x913c, 0xa263, 0x1, 0x0);
        gbc.writeMem(0x62e, { 0x78 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc420, gbc.sp());
        EXPECT(0x62f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 013B
        gbc.setState(0x1b1a, 0xc051, 0xe9f0, 0xda41, 0x6fc7, 0x1088, 0x1, 0x0);
        gbc.writeMem(0x1b1a, { 0x78 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc051, gbc.sp());
        EXPECT(0x1b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 013C
        gbc.setState(0x8599, 0xc338, 0x9320, 0x446e, 0x384c, 0x43f2, 0x0, 0x1);
        gbc.writeMem(0x8599, { 0x78 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc338, gbc.sp());
        EXPECT(0x859a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8599));
        // 78 013D
        gbc.setState(0x356d, 0x790, 0xa2a0, 0xfd95, 0x89d0, 0x737f, 0x0, 0x0);
        gbc.writeMem(0x356d, { 0x78 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x790, gbc.sp());
        EXPECT(0x356e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 013E
        gbc.setState(0x4f19, 0x36e1, 0xa800, 0x5f2a, 0xdc61, 0x1f53, 0x1, 0x0);
        gbc.writeMem(0x4f19, { 0x78 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x36e1, gbc.sp());
        EXPECT(0x4f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 013F
        gbc.setState(0x1cfb, 0x3f86, 0xc6f0, 0x4723, 0x6e, 0x9b64, 0x1, 0x0);
        gbc.writeMem(0x1cfb, { 0x78 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3f86, gbc.sp());
        EXPECT(0x1cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0140
        gbc.setState(0xdc11, 0x9f76, 0xa180, 0xbe75, 0x41e8, 0xfc42, 0x1, 0x0);
        gbc.writeMem(0xdc11, { 0x78 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9f76, gbc.sp());
        EXPECT(0xdc12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdc11));
        // 78 0141
        gbc.setState(0x9856, 0x8b1a, 0xef50, 0xa9db, 0xbafc, 0x2968, 0x1, 0x0);
        gbc.writeMem(0x9856, { 0x78 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8b1a, gbc.sp());
        EXPECT(0x9857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9856));
        // 78 0142
        gbc.setState(0xc0c8, 0x3fb, 0x72c0, 0x6bf0, 0x2eaa, 0x8867, 0x0, 0x1);
        gbc.writeMem(0xc0c8, { 0x78 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3fb, gbc.sp());
        EXPECT(0xc0c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc0c8));
        // 78 0143
        gbc.setState(0x89d0, 0x2501, 0xc520, 0x6154, 0x8639, 0xa6db, 0x1, 0x0);
        gbc.writeMem(0x89d0, { 0x78 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2501, gbc.sp());
        EXPECT(0x89d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x89d0));
        // 78 0144
        gbc.setState(0x6bac, 0x9e78, 0x9a10, 0x1344, 0x662c, 0xdec2, 0x0, 0x0);
        gbc.writeMem(0x6bac, { 0x78 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9e78, gbc.sp());
        EXPECT(0x6bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0146
        gbc.setState(0xcf02, 0x39a, 0x7610, 0x78e1, 0xe2ce, 0xca44, 0x1, 0x0);
        gbc.writeMem(0xcf02, { 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x39a, gbc.sp());
        EXPECT(0xcf03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcf02));
        // 78 0147
        gbc.setState(0x6932, 0xa639, 0xcd50, 0xba82, 0xc0b2, 0xb62d, 0x0, 0x1);
        gbc.writeMem(0x6932, { 0x78 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa639, gbc.sp());
        EXPECT(0x6933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0148
        gbc.setState(0x58de, 0xa89b, 0x90a0, 0xb65d, 0x32dd, 0x6f79, 0x1, 0x1);
        gbc.writeMem(0x58de, { 0x78 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa89b, gbc.sp());
        EXPECT(0x58df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0149
        gbc.setState(0xa5c7, 0x3278, 0x2720, 0x93f, 0xc015, 0xd6b7, 0x0, 0x0);
        gbc.writeMem(0xa5c7, { 0x78 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3278, gbc.sp());
        EXPECT(0xa5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa5c7));
        // 78 014A
        gbc.setState(0x69ee, 0x41af, 0x7250, 0xda2c, 0x7194, 0xf33d, 0x0, 0x0);
        gbc.writeMem(0x69ee, { 0x78 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x41af, gbc.sp());
        EXPECT(0x69ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 014B
        gbc.setState(0xe75f, 0x5235, 0x2230, 0x18a5, 0xce0f, 0xf606, 0x0, 0x0);
        gbc.writeMem(0xe75f, { 0x78 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5235, gbc.sp());
        EXPECT(0xe760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe75f));
        // 78 014C
        gbc.setState(0xea7b, 0xcf62, 0x4690, 0x79f, 0xf28b, 0xe4f7, 0x0, 0x1);
        gbc.writeMem(0xea7b, { 0x78 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcf62, gbc.sp());
        EXPECT(0xea7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xea7b));
        // 78 014D
        gbc.setState(0x9323, 0x88f6, 0xb1d0, 0xdbb9, 0xb116, 0x820a, 0x1, 0x0);
        gbc.writeMem(0x9323, { 0x78 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x88f6, gbc.sp());
        EXPECT(0x9324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9323));
        // 78 014E
        gbc.setState(0xaadf, 0x1545, 0xfd50, 0xba14, 0xd6b5, 0x7acf, 0x0, 0x1);
        gbc.writeMem(0xaadf, { 0x78 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1545, gbc.sp());
        EXPECT(0xaae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xaadf));
        // 78 014F
        gbc.setState(0x4702, 0xf48d, 0xb760, 0xe5c5, 0xf873, 0x6685, 0x1, 0x1);
        gbc.writeMem(0x4702, { 0x78 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf48d, gbc.sp());
        EXPECT(0x4703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0150
        gbc.setState(0xd00a, 0x89ed, 0xf4f0, 0xc4cd, 0xb610, 0xb8ed, 0x1, 0x1);
        gbc.writeMem(0xd00a, { 0x78 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x89ed, gbc.sp());
        EXPECT(0xd00b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd00a));
        // 78 0151
        gbc.setState(0xb9a2, 0x3fb6, 0x51d0, 0xc1db, 0xad64, 0xd869, 0x1, 0x1);
        gbc.writeMem(0xb9a2, { 0x78 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3fb6, gbc.sp());
        EXPECT(0xb9a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb9a2));
        // 78 0152
        gbc.setState(0xf42, 0xed37, 0xf90, 0xb0cf, 0xfe83, 0xf9a9, 0x1, 0x0);
        gbc.writeMem(0xf42, { 0x78 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xed37, gbc.sp());
        EXPECT(0xf43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0153
        gbc.setState(0xd534, 0x4371, 0x3d90, 0x5347, 0x3a06, 0x75a8, 0x1, 0x1);
        gbc.writeMem(0xd534, { 0x78 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4371, gbc.sp());
        EXPECT(0xd535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd534));
        // 78 0154
        gbc.setState(0xed76, 0x6763, 0x4ab0, 0xe555, 0xd074, 0xa071, 0x1, 0x0);
        gbc.writeMem(0xed76, { 0x78 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6763, gbc.sp());
        EXPECT(0xed77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xed76));
        // 78 0155
        gbc.setState(0x3f3d, 0x9310, 0x6090, 0x178d, 0x55bc, 0xfac0, 0x1, 0x0);
        gbc.writeMem(0x3f3d, { 0x78 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9310, gbc.sp());
        EXPECT(0x3f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0156
        gbc.setState(0x151c, 0xb20d, 0xb6f0, 0x33c4, 0x7ea7, 0x65ba, 0x1, 0x0);
        gbc.writeMem(0x151c, { 0x78 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb20d, gbc.sp());
        EXPECT(0x151d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0157
        gbc.setState(0xef03, 0x5c7e, 0xc4e0, 0x2eb7, 0xdd9c, 0xf4a0, 0x0, 0x0);
        gbc.writeMem(0xef03, { 0x78 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5c7e, gbc.sp());
        EXPECT(0xef04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xef03));
        // 78 0159
        gbc.setState(0x909c, 0xb9c5, 0xc3b0, 0xb2b2, 0x3ddf, 0xdfef, 0x0, 0x0);
        gbc.writeMem(0x909c, { 0x78 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb9c5, gbc.sp());
        EXPECT(0x909d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x909c));
        // 78 015A
        gbc.setState(0x57ec, 0xa550, 0x6220, 0x1d0e, 0xc822, 0xad99, 0x0, 0x0);
        gbc.writeMem(0x57ec, { 0x78 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa550, gbc.sp());
        EXPECT(0x57ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 015B
        gbc.setState(0xbedd, 0x66b4, 0xd4a0, 0xf2b1, 0xa277, 0xefbf, 0x1, 0x1);
        gbc.writeMem(0xbedd, { 0x78 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x66b4, gbc.sp());
        EXPECT(0xbede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbedd));
        // 78 015C
        gbc.setState(0xecaf, 0x8404, 0xce20, 0x807d, 0x780f, 0xf0f, 0x0, 0x0);
        gbc.writeMem(0xecaf, { 0x78 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8404, gbc.sp());
        EXPECT(0xecb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xecaf));
        // 78 015D
        gbc.setState(0x9fba, 0xb8c9, 0xcaa0, 0x4533, 0x9ff, 0xff1, 0x0, 0x0);
        gbc.writeMem(0x9fba, { 0x78 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb8c9, gbc.sp());
        EXPECT(0x9fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9fba));
        // 78 015E
        gbc.setState(0x6404, 0xcf9f, 0x8b10, 0xf76d, 0x5904, 0x8965, 0x0, 0x0);
        gbc.writeMem(0x6404, { 0x78 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcf9f, gbc.sp());
        EXPECT(0x6405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 015F
        gbc.setState(0x8b4f, 0xd0c6, 0xb50, 0x9cfe, 0x58ed, 0x806a, 0x0, 0x0);
        gbc.writeMem(0x8b4f, { 0x78 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd0c6, gbc.sp());
        EXPECT(0x8b50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8b4f));
        // 78 0160
        gbc.setState(0x10ef, 0x4d35, 0xc7e0, 0xbf20, 0xcae7, 0xc5e3, 0x1, 0x0);
        gbc.writeMem(0x10ef, { 0x78 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4d35, gbc.sp());
        EXPECT(0x10f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0161
        gbc.setState(0x65ec, 0x70eb, 0x67b0, 0xdf34, 0xc87a, 0xefef, 0x1, 0x0);
        gbc.writeMem(0x65ec, { 0x78 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x70eb, gbc.sp());
        EXPECT(0x65ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0163
        gbc.setState(0xa347, 0xfe6b, 0x1360, 0x2ad2, 0x306e, 0xedb6, 0x0, 0x1);
        gbc.writeMem(0xa347, { 0x78 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfe6b, gbc.sp());
        EXPECT(0xa348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa347));
        // 78 0164
        gbc.setState(0x194f, 0xf780, 0xf510, 0xe2a2, 0x1943, 0xbf, 0x0, 0x0);
        gbc.writeMem(0x194f, { 0x78 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf780, gbc.sp());
        EXPECT(0x1950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0165
        gbc.setState(0x6ed1, 0x57d5, 0x270, 0xc319, 0xe5c6, 0xda09, 0x1, 0x0);
        gbc.writeMem(0x6ed1, { 0x78 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x57d5, gbc.sp());
        EXPECT(0x6ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0167
        gbc.setState(0xe572, 0x9934, 0xc090, 0xa4c2, 0xb361, 0x8205, 0x1, 0x0);
        gbc.writeMem(0xe572, { 0x78 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9934, gbc.sp());
        EXPECT(0xe573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe572));
        // 78 0168
        gbc.setState(0x35a8, 0x52d4, 0x44c0, 0xe5a9, 0x61a9, 0x3c42, 0x1, 0x0);
        gbc.writeMem(0x35a8, { 0x78 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x52d4, gbc.sp());
        EXPECT(0x35a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0169
        gbc.setState(0x2cad, 0x8b30, 0xae90, 0x2e6, 0x4c48, 0x5e0, 0x1, 0x1);
        gbc.writeMem(0x2cad, { 0x78 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8b30, gbc.sp());
        EXPECT(0x2cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 016A
        gbc.setState(0xeb20, 0x36e4, 0xbbd0, 0xdf4b, 0xf19d, 0xc754, 0x0, 0x0);
        gbc.writeMem(0xeb20, { 0x78 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x36e4, gbc.sp());
        EXPECT(0xeb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xeb20));
        // 78 016B
        gbc.setState(0xd267, 0xb087, 0x34e0, 0xe2bf, 0x2dcb, 0x354c, 0x1, 0x1);
        gbc.writeMem(0xd267, { 0x78 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb087, gbc.sp());
        EXPECT(0xd268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd267));
        // 78 016C
        gbc.setState(0x9c40, 0x409a, 0xa780, 0x14e2, 0xc015, 0xae3c, 0x0, 0x0);
        gbc.writeMem(0x9c40, { 0x78 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x409a, gbc.sp());
        EXPECT(0x9c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9c40));
        // 78 016D
        gbc.setState(0x1357, 0xcc19, 0xed60, 0xb007, 0x22a1, 0xf26a, 0x0, 0x1);
        gbc.writeMem(0x1357, { 0x78 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xcc19, gbc.sp());
        EXPECT(0x1358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 016E
        gbc.setState(0xbf1b, 0xef86, 0xaa20, 0x7e7e, 0x50e3, 0xac97, 0x1, 0x0);
        gbc.writeMem(0xbf1b, { 0x78 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xef86, gbc.sp());
        EXPECT(0xbf1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbf1b));
        // 78 016F
        gbc.setState(0x1520, 0x3744, 0x58f0, 0x2511, 0x655b, 0x5f82, 0x1, 0x0);
        gbc.writeMem(0x1520, { 0x78 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3744, gbc.sp());
        EXPECT(0x1521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0170
        gbc.setState(0x6067, 0xd4b0, 0xb530, 0xddf5, 0x6d4d, 0x5353, 0x0, 0x0);
        gbc.writeMem(0x6067, { 0x78 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd4b0, gbc.sp());
        EXPECT(0x6068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0171
        gbc.setState(0xd477, 0x132d, 0x4840, 0x96e3, 0x2045, 0xe3d7, 0x1, 0x1);
        gbc.writeMem(0xd477, { 0x78 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x132d, gbc.sp());
        EXPECT(0xd478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd477));
        // 78 0173
        gbc.setState(0x4d22, 0xf110, 0xfa80, 0xb316, 0xe040, 0x8768, 0x0, 0x1);
        gbc.writeMem(0x4d22, { 0x78 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf110, gbc.sp());
        EXPECT(0x4d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0174
        gbc.setState(0x3ae3, 0x634e, 0x5790, 0x4c94, 0x48c5, 0xecc, 0x1, 0x1);
        gbc.writeMem(0x3ae3, { 0x78 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x634e, gbc.sp());
        EXPECT(0x3ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0176
        gbc.setState(0x4b3c, 0xfa9a, 0xe1e0, 0xf5fb, 0x34a6, 0xa60f, 0x1, 0x0);
        gbc.writeMem(0x4b3c, { 0x78 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfa9a, gbc.sp());
        EXPECT(0x4b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0177
        gbc.setState(0x3e10, 0x2d11, 0xecd0, 0xb653, 0x5d, 0xbab4, 0x1, 0x1);
        gbc.writeMem(0x3e10, { 0x78 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2d11, gbc.sp());
        EXPECT(0x3e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0178
        gbc.setState(0x3066, 0x13f6, 0x4340, 0xf2c9, 0x6d16, 0x9e88, 0x1, 0x1);
        gbc.writeMem(0x3066, { 0x78 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x13f6, gbc.sp());
        EXPECT(0x3067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0179
        gbc.setState(0xda59, 0xdbcb, 0x2a40, 0xb78d, 0xfe8b, 0xbc06, 0x1, 0x0);
        gbc.writeMem(0xda59, { 0x78 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdbcb, gbc.sp());
        EXPECT(0xda5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xda59));
        // 78 017A
        gbc.setState(0xc592, 0xe7a2, 0x9d80, 0xf6ca, 0x52a0, 0x5f8, 0x0, 0x0);
        gbc.writeMem(0xc592, { 0x78 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe7a2, gbc.sp());
        EXPECT(0xc593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc592));
        // 78 017B
        gbc.setState(0xeab9, 0x8567, 0x4770, 0x62fc, 0xec19, 0xe3c5, 0x1, 0x0);
        gbc.writeMem(0xeab9, { 0x78 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8567, gbc.sp());
        EXPECT(0xeaba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xeab9));
        // 78 017C
        gbc.setState(0x998a, 0xa16f, 0x8760, 0xd6f8, 0xd842, 0xa040, 0x1, 0x0);
        gbc.writeMem(0x998a, { 0x78 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa16f, gbc.sp());
        EXPECT(0x998b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x998a));
        // 78 017E
        gbc.setState(0x4b34, 0x8fa7, 0x7e90, 0x34a2, 0x9cba, 0xa63e, 0x1, 0x1);
        gbc.writeMem(0x4b34, { 0x78 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8fa7, gbc.sp());
        EXPECT(0x4b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0180
        gbc.setState(0x1485, 0xf9f7, 0x2460, 0xf678, 0xd2ad, 0xd1e6, 0x1, 0x1);
        gbc.writeMem(0x1485, { 0x78 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf9f7, gbc.sp());
        EXPECT(0x1486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0181
        gbc.setState(0xa8e8, 0x9f83, 0xb4f0, 0x5aaa, 0xd912, 0x367f, 0x1, 0x1);
        gbc.writeMem(0xa8e8, { 0x78 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9f83, gbc.sp());
        EXPECT(0xa8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa8e8));
        // 78 0182
        gbc.setState(0x8877, 0xfdd9, 0x3b40, 0x7f56, 0x48d3, 0x9d2a, 0x1, 0x0);
        gbc.writeMem(0x8877, { 0x78 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfdd9, gbc.sp());
        EXPECT(0x8878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8877));
        // 78 0183
        gbc.setState(0xe851, 0xefdd, 0x23e0, 0x37ef, 0xa929, 0x62f8, 0x1, 0x0);
        gbc.writeMem(0xe851, { 0x78 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xefdd, gbc.sp());
        EXPECT(0xe852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe851));
        // 78 0184
        gbc.setState(0x9447, 0x1ad9, 0x1190, 0x3f54, 0x15b7, 0x5527, 0x0, 0x1);
        gbc.writeMem(0x9447, { 0x78 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1ad9, gbc.sp());
        EXPECT(0x9448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9447));
        // 78 0185
        gbc.setState(0xd3af, 0xdcac, 0xf110, 0x170e, 0xbfaa, 0xd60b, 0x1, 0x1);
        gbc.writeMem(0xd3af, { 0x78 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdcac, gbc.sp());
        EXPECT(0xd3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd3af));
        // 78 0186
        gbc.setState(0xcfa2, 0xbaee, 0x9e30, 0x67c, 0xca86, 0x8e0c, 0x1, 0x1);
        gbc.writeMem(0xcfa2, { 0x78 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbaee, gbc.sp());
        EXPECT(0xcfa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcfa2));
        // 78 0187
        gbc.setState(0x7987, 0x239c, 0xfea0, 0x8229, 0x7c7, 0x418d, 0x0, 0x1);
        gbc.writeMem(0x7987, { 0x78 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x239c, gbc.sp());
        EXPECT(0x7988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0188
        gbc.setState(0xc0fb, 0xbaf8, 0xfb90, 0xf6ef, 0xe29a, 0xed2f, 0x0, 0x0);
        gbc.writeMem(0xc0fb, { 0x78 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbaf8, gbc.sp());
        EXPECT(0xc0fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc0fb));
        // 78 0189
        gbc.setState(0x46d1, 0x66f4, 0x6460, 0x750b, 0x356d, 0x9e80, 0x1, 0x0);
        gbc.writeMem(0x46d1, { 0x78 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x66f4, gbc.sp());
        EXPECT(0x46d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 018A
        gbc.setState(0x5de2, 0xf65c, 0xce90, 0xb542, 0xb3ad, 0xf377, 0x1, 0x1);
        gbc.writeMem(0x5de2, { 0x78 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf65c, gbc.sp());
        EXPECT(0x5de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 018B
        gbc.setState(0x3704, 0xcccd, 0x3030, 0xce8f, 0xd92f, 0x951b, 0x0, 0x0);
        gbc.writeMem(0x3704, { 0x78 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xcccd, gbc.sp());
        EXPECT(0x3705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 018C
        gbc.setState(0x75f8, 0x9f10, 0xa10, 0x33bf, 0x1716, 0xd7cf, 0x1, 0x1);
        gbc.writeMem(0x75f8, { 0x78 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9f10, gbc.sp());
        EXPECT(0x75f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 018D
        gbc.setState(0x8556, 0x9b17, 0x14b0, 0xa0fb, 0x8670, 0xe7e6, 0x1, 0x0);
        gbc.writeMem(0x8556, { 0x78 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9b17, gbc.sp());
        EXPECT(0x8557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8556));
        // 78 018E
        gbc.setState(0x10c7, 0x92a7, 0x43c0, 0xbf9b, 0xd83a, 0x2798, 0x0, 0x1);
        gbc.writeMem(0x10c7, { 0x78 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x92a7, gbc.sp());
        EXPECT(0x10c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 018F
        gbc.setState(0xa86f, 0xd733, 0x2ee0, 0xbbee, 0x21a, 0x179c, 0x1, 0x0);
        gbc.writeMem(0xa86f, { 0x78 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd733, gbc.sp());
        EXPECT(0xa870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa86f));
        // 78 0191
        gbc.setState(0x58c8, 0x6f14, 0x6710, 0x916e, 0x7ad2, 0x8d1c, 0x0, 0x1);
        gbc.writeMem(0x58c8, { 0x78 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6f14, gbc.sp());
        EXPECT(0x58c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0192
        gbc.setState(0xecc9, 0x9209, 0x6780, 0xb2f5, 0x882, 0x798f, 0x1, 0x1);
        gbc.writeMem(0xecc9, { 0x78 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9209, gbc.sp());
        EXPECT(0xecca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xecc9));
        // 78 0193
        gbc.setState(0x9cca, 0x104f, 0xbfd0, 0x2d5, 0x82ff, 0x7e16, 0x0, 0x0);
        gbc.writeMem(0x9cca, { 0x78 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x104f, gbc.sp());
        EXPECT(0x9ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9cca));
        // 78 0194
        gbc.setState(0x5fd1, 0x4bc0, 0xdf00, 0xfb8c, 0x6088, 0x5f78, 0x0, 0x0);
        gbc.writeMem(0x5fd1, { 0x78 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4bc0, gbc.sp());
        EXPECT(0x5fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0196
        gbc.setState(0x97cc, 0x3b8d, 0x35d0, 0xfbcd, 0xcf5c, 0x5557, 0x1, 0x0);
        gbc.writeMem(0x97cc, { 0x78 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3b8d, gbc.sp());
        EXPECT(0x97cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x97cc));
        // 78 0197
        gbc.setState(0x6d5b, 0xf1b9, 0x64e0, 0xb643, 0xc40f, 0x181, 0x1, 0x1);
        gbc.writeMem(0x6d5b, { 0x78 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf1b9, gbc.sp());
        EXPECT(0x6d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0198
        gbc.setState(0x5183, 0xb04d, 0x1fe0, 0x1c38, 0xa087, 0xfe64, 0x0, 0x1);
        gbc.writeMem(0x5183, { 0x78 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb04d, gbc.sp());
        EXPECT(0x5184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0199
        gbc.setState(0x63b7, 0xc4ac, 0x2f40, 0xcd25, 0xbab1, 0xf87, 0x0, 0x0);
        gbc.writeMem(0x63b7, { 0x78 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc4ac, gbc.sp());
        EXPECT(0x63b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 019A
        gbc.setState(0xdc50, 0x7fc5, 0x8ed0, 0x8f9b, 0x8c78, 0x9862, 0x1, 0x1);
        gbc.writeMem(0xdc50, { 0x78 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7fc5, gbc.sp());
        EXPECT(0xdc51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdc50));
        // 78 019B
        gbc.setState(0xbc45, 0x8e6c, 0x1950, 0x6f72, 0x9d08, 0x6454, 0x1, 0x1);
        gbc.writeMem(0xbc45, { 0x78 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8e6c, gbc.sp());
        EXPECT(0xbc46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbc45));
        // 78 019C
        gbc.setState(0x60e3, 0x5534, 0x21b0, 0x926, 0xf68d, 0x72b1, 0x0, 0x0);
        gbc.writeMem(0x60e3, { 0x78 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5534, gbc.sp());
        EXPECT(0x60e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 019D
        gbc.setState(0x55aa, 0x9fdd, 0x7fe0, 0x301d, 0xb7e9, 0x2c2f, 0x0, 0x1);
        gbc.writeMem(0x55aa, { 0x78 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9fdd, gbc.sp());
        EXPECT(0x55ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 019E
        gbc.setState(0x4a4c, 0x93fc, 0x3cd0, 0x5c19, 0x768e, 0xe360, 0x1, 0x0);
        gbc.writeMem(0x4a4c, { 0x78 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x93fc, gbc.sp());
        EXPECT(0x4a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 019F
        gbc.setState(0x9aee, 0xd7eb, 0xac70, 0xb0c1, 0xc298, 0x63e5, 0x1, 0x1);
        gbc.writeMem(0x9aee, { 0x78 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd7eb, gbc.sp());
        EXPECT(0x9aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9aee));
        // 78 01A1
        gbc.setState(0xab3f, 0x207f, 0xe270, 0x6107, 0xff74, 0x6830, 0x1, 0x0);
        gbc.writeMem(0xab3f, { 0x78 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x207f, gbc.sp());
        EXPECT(0xab40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xab3f));
        // 78 01A2
        gbc.setState(0xeba6, 0xfc22, 0x5960, 0x5443, 0x3dac, 0x37f0, 0x1, 0x1);
        gbc.writeMem(0xeba6, { 0x78 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfc22, gbc.sp());
        EXPECT(0xeba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xeba6));
        // 78 01A3
        gbc.setState(0xdbcf, 0x70, 0x4e30, 0xd832, 0x80be, 0x4032, 0x1, 0x1);
        gbc.writeMem(0xdbcf, { 0x78 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x70, gbc.sp());
        EXPECT(0xdbd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdbcf));
        // 78 01A5
        gbc.setState(0x5b93, 0x931a, 0x6b90, 0x4326, 0x43e9, 0xb485, 0x1, 0x0);
        gbc.writeMem(0x5b93, { 0x78 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x931a, gbc.sp());
        EXPECT(0x5b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01A6
        gbc.setState(0xd9e8, 0x55f4, 0xf220, 0x6d21, 0xe7a, 0x56d2, 0x1, 0x1);
        gbc.writeMem(0xd9e8, { 0x78 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x55f4, gbc.sp());
        EXPECT(0xd9e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd9e8));
        // 78 01A7
        gbc.setState(0x4ccd, 0xc2fa, 0xc30, 0x2690, 0x545f, 0xaea7, 0x1, 0x0);
        gbc.writeMem(0x4ccd, { 0x78 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc2fa, gbc.sp());
        EXPECT(0x4cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01A8
        gbc.setState(0x311f, 0xa3fe, 0x2bb0, 0xa788, 0x8ec7, 0xcab2, 0x0, 0x0);
        gbc.writeMem(0x311f, { 0x78 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa3fe, gbc.sp());
        EXPECT(0x3120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01A9
        gbc.setState(0x347c, 0xc195, 0xfd0, 0x7966, 0x9104, 0x4888, 0x1, 0x0);
        gbc.writeMem(0x347c, { 0x78 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc195, gbc.sp());
        EXPECT(0x347d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01AA
        gbc.setState(0xed95, 0x8127, 0x5050, 0x16f5, 0x8e43, 0x60c3, 0x0, 0x1);
        gbc.writeMem(0xed95, { 0x78 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8127, gbc.sp());
        EXPECT(0xed96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xed95));
        // 78 01AB
        gbc.setState(0x7aff, 0x2da0, 0xf650, 0xe124, 0x6a94, 0xe9c0, 0x0, 0x0);
        gbc.writeMem(0x7aff, { 0x78 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2da0, gbc.sp());
        EXPECT(0x7b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01AC
        gbc.setState(0xbbb6, 0x7b60, 0xed90, 0x56ad, 0x46ee, 0x6eb9, 0x1, 0x1);
        gbc.writeMem(0xbbb6, { 0x78 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7b60, gbc.sp());
        EXPECT(0xbbb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbbb6));
        // 78 01AD
        gbc.setState(0x97c9, 0xe029, 0xfb80, 0x7ac5, 0x6fd3, 0xae09, 0x0, 0x0);
        gbc.writeMem(0x97c9, { 0x78 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe029, gbc.sp());
        EXPECT(0x97ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x97c9));
        // 78 01AE
        gbc.setState(0x7e43, 0x6140, 0xad80, 0xb80c, 0x6d93, 0x53ad, 0x1, 0x1);
        gbc.writeMem(0x7e43, { 0x78 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6140, gbc.sp());
        EXPECT(0x7e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 01AF
        gbc.setState(0x5454, 0xc9ab, 0xad20, 0x79e1, 0x2374, 0x936f, 0x0, 0x1);
        gbc.writeMem(0x5454, { 0x78 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc9ab, gbc.sp());
        EXPECT(0x5455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 01B1
        gbc.setState(0x81a3, 0xb79d, 0xa6f0, 0x13a3, 0xe2ee, 0xff74, 0x1, 0x1);
        gbc.writeMem(0x81a3, { 0x78 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb79d, gbc.sp());
        EXPECT(0x81a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x81a3));
        // 78 01B2
        gbc.setState(0xdce0, 0xe654, 0xc2b0, 0xe88d, 0x6d68, 0x8601, 0x0, 0x0);
        gbc.writeMem(0xdce0, { 0x78 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe654, gbc.sp());
        EXPECT(0xdce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdce0));
        // 78 01B3
        gbc.setState(0xdbc9, 0x2adc, 0x1f50, 0x2ebe, 0xfd9d, 0xba16, 0x0, 0x0);
        gbc.writeMem(0xdbc9, { 0x78 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2adc, gbc.sp());
        EXPECT(0xdbca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdbc9));
        // 78 01B4
        gbc.setState(0x31e9, 0x794e, 0x8d20, 0x4e6d, 0x2892, 0x4174, 0x1, 0x1);
        gbc.writeMem(0x31e9, { 0x78 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x794e, gbc.sp());
        EXPECT(0x31ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 01B5
        gbc.setState(0xb036, 0x9566, 0x5f20, 0x62fb, 0xd696, 0xe92, 0x1, 0x0);
        gbc.writeMem(0xb036, { 0x78 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9566, gbc.sp());
        EXPECT(0xb037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb036));
        // 78 01B6
        gbc.setState(0xbd40, 0x7c24, 0x5100, 0xee70, 0x7d2a, 0x92bc, 0x1, 0x0);
        gbc.writeMem(0xbd40, { 0x78 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7c24, gbc.sp());
        EXPECT(0xbd41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbd40));
        // 78 01B7
        gbc.setState(0x55e5, 0xd90c, 0x1460, 0x4a04, 0xe69f, 0x5fc2, 0x0, 0x1);
        gbc.writeMem(0x55e5, { 0x78 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd90c, gbc.sp());
        EXPECT(0x55e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 01B8
        gbc.setState(0xdb4f, 0x5a43, 0xbaa0, 0x1135, 0x2c9, 0x68a6, 0x0, 0x0);
        gbc.writeMem(0xdb4f, { 0x78 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5a43, gbc.sp());
        EXPECT(0xdb50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdb4f));
        // 78 01B9
        gbc.setState(0x7f9c, 0x9a40, 0x5b10, 0x7373, 0x8ef1, 0x3a35, 0x0, 0x0);
        gbc.writeMem(0x7f9c, { 0x78 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9a40, gbc.sp());
        EXPECT(0x7f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01BA
        gbc.setState(0x4e99, 0x2aac, 0x2570, 0x3f60, 0xafd2, 0xc248, 0x0, 0x1);
        gbc.writeMem(0x4e99, { 0x78 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2aac, gbc.sp());
        EXPECT(0x4e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01BB
        gbc.setState(0xafd1, 0x32b6, 0x7300, 0xf965, 0x9b67, 0xd8e1, 0x0, 0x1);
        gbc.writeMem(0xafd1, { 0x78 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x32b6, gbc.sp());
        EXPECT(0xafd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xafd1));
        // 78 01BC
        gbc.setState(0x9aa9, 0xbc52, 0x5880, 0xa460, 0x8ddd, 0x63c1, 0x1, 0x1);
        gbc.writeMem(0x9aa9, { 0x78 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbc52, gbc.sp());
        EXPECT(0x9aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9aa9));
        // 78 01BD
        gbc.setState(0x4a1, 0x7acb, 0x2840, 0x7107, 0xf02d, 0x49cf, 0x1, 0x0);
        gbc.writeMem(0x4a1, { 0x78 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7acb, gbc.sp());
        EXPECT(0x4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 01BE
        gbc.setState(0x804f, 0x9fe2, 0x50f0, 0x8bd1, 0x4b06, 0x7318, 0x0, 0x1);
        gbc.writeMem(0x804f, { 0x78 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9fe2, gbc.sp());
        EXPECT(0x8050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x804f));
        // 78 01BF
        gbc.setState(0x24f1, 0xad3, 0xb750, 0xcb8b, 0x96c5, 0x5e92, 0x1, 0x0);
        gbc.writeMem(0x24f1, { 0x78 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xad3, gbc.sp());
        EXPECT(0x24f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01C0
        gbc.setState(0x8e, 0x1561, 0xff10, 0x7a65, 0xfb92, 0x81d9, 0x0, 0x0);
        gbc.writeMem(0x8e, { 0x78 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1561, gbc.sp());
        EXPECT(0x8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01C1
        gbc.setState(0x6bfa, 0x9fee, 0x1c90, 0xd632, 0xfacb, 0xa7e2, 0x0, 0x1);
        gbc.writeMem(0x6bfa, { 0x78 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9fee, gbc.sp());
        EXPECT(0x6bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01C2
        gbc.setState(0x6265, 0x5616, 0xaf60, 0x970, 0xd8f3, 0x7353, 0x0, 0x0);
        gbc.writeMem(0x6265, { 0x78 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5616, gbc.sp());
        EXPECT(0x6266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 01C3
        gbc.setState(0xdeca, 0x1d12, 0xc0a0, 0xfc94, 0x5777, 0xe96e, 0x0, 0x0);
        gbc.writeMem(0xdeca, { 0x78 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1d12, gbc.sp());
        EXPECT(0xdecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdeca));
        // 78 01C4
        gbc.setState(0xb0f, 0x4dd0, 0x3cf0, 0x74b, 0xcc61, 0xa1fe, 0x0, 0x1);
        gbc.writeMem(0xb0f, { 0x78 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4dd0, gbc.sp());
        EXPECT(0xb10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01C5
        gbc.setState(0x8a87, 0xff41, 0xde0, 0xb34f, 0x80ca, 0xcfcd, 0x0, 0x0);
        gbc.writeMem(0x8a87, { 0x78 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xff41, gbc.sp());
        EXPECT(0x8a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8a87));
        // 78 01C6
        gbc.setState(0x7d54, 0x164d, 0xadd0, 0xa627, 0xf586, 0xbf7b, 0x1, 0x0);
        gbc.writeMem(0x7d54, { 0x78 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x164d, gbc.sp());
        EXPECT(0x7d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01C7
        gbc.setState(0x9043, 0xa86c, 0x55d0, 0xb3f1, 0xf8ac, 0x3cdb, 0x1, 0x1);
        gbc.writeMem(0x9043, { 0x78 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa86c, gbc.sp());
        EXPECT(0x9044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9043));
        // 78 01C8
        gbc.setState(0xc1aa, 0x6a00, 0xbe10, 0x7375, 0xf08a, 0x9ded, 0x0, 0x0);
        gbc.writeMem(0xc1aa, { 0x78 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6a00, gbc.sp());
        EXPECT(0xc1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc1aa));
        // 78 01C9
        gbc.setState(0xb61c, 0x8454, 0x5ea0, 0x157e, 0x7a24, 0x9446, 0x0, 0x1);
        gbc.writeMem(0xb61c, { 0x78 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8454, gbc.sp());
        EXPECT(0xb61d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb61c));
        // 78 01CB
        gbc.setState(0x7128, 0x2fd8, 0xcd50, 0x3f8b, 0x3951, 0xaf1c, 0x0, 0x1);
        gbc.writeMem(0x7128, { 0x78 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2fd8, gbc.sp());
        EXPECT(0x7129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01CD
        gbc.setState(0x3e28, 0x59f2, 0x1500, 0xf467, 0xd784, 0x3f99, 0x1, 0x1);
        gbc.writeMem(0x3e28, { 0x78 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x59f2, gbc.sp());
        EXPECT(0x3e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 01CE
        gbc.setState(0x5d14, 0x31ea, 0x6430, 0x9f01, 0xe90b, 0x9e1, 0x0, 0x1);
        gbc.writeMem(0x5d14, { 0x78 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x31ea, gbc.sp());
        EXPECT(0x5d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01CF
        gbc.setState(0xeeb1, 0x28c8, 0x11e0, 0x8e3b, 0xb9f0, 0xa4b1, 0x1, 0x0);
        gbc.writeMem(0xeeb1, { 0x78 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x28c8, gbc.sp());
        EXPECT(0xeeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xeeb1));
        // 78 01D0
        gbc.setState(0xedce, 0xde0f, 0xb680, 0x1c51, 0x6b90, 0xc144, 0x1, 0x0);
        gbc.writeMem(0xedce, { 0x78 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xde0f, gbc.sp());
        EXPECT(0xedcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xedce));
        // 78 01D1
        gbc.setState(0xd904, 0x843c, 0xe250, 0x1bb, 0xe9c9, 0x9451, 0x0, 0x1);
        gbc.writeMem(0xd904, { 0x78 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x843c, gbc.sp());
        EXPECT(0xd905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd904));
        // 78 01D2
        gbc.setState(0x5b50, 0xd8d9, 0xeed0, 0xbedc, 0xc9ac, 0xd0fb, 0x1, 0x0);
        gbc.writeMem(0x5b50, { 0x78 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd8d9, gbc.sp());
        EXPECT(0x5b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01D3
        gbc.setState(0xbced, 0xce9e, 0x7000, 0xc8a0, 0x5480, 0x903b, 0x1, 0x0);
        gbc.writeMem(0xbced, { 0x78 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xce9e, gbc.sp());
        EXPECT(0xbcee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbced));
        // 78 01D4
        gbc.setState(0x82e0, 0xb031, 0x2480, 0x5061, 0x1620, 0x820c, 0x1, 0x0);
        gbc.writeMem(0x82e0, { 0x78 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb031, gbc.sp());
        EXPECT(0x82e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x82e0));
        // 78 01D5
        gbc.setState(0xee6e, 0x6ad5, 0xd8a0, 0xa4e5, 0x1e9a, 0x95cb, 0x1, 0x0);
        gbc.writeMem(0xee6e, { 0x78 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6ad5, gbc.sp());
        EXPECT(0xee6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xee6e));
        // 78 01D6
        gbc.setState(0x472a, 0xa1da, 0x6fe0, 0x950f, 0xe41d, 0x7fd5, 0x0, 0x0);
        gbc.writeMem(0x472a, { 0x78 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa1da, gbc.sp());
        EXPECT(0x472b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 01D7
        gbc.setState(0xd0d9, 0xca35, 0x7050, 0x7aa1, 0xcb6e, 0xca60, 0x1, 0x0);
        gbc.writeMem(0xd0d9, { 0x78 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xca35, gbc.sp());
        EXPECT(0xd0da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd0d9));
        // 78 01D9
        gbc.setState(0x54ce, 0x1cfa, 0x1920, 0xf1b3, 0xb8cb, 0x76c4, 0x1, 0x0);
        gbc.writeMem(0x54ce, { 0x78 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1cfa, gbc.sp());
        EXPECT(0x54cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 01DB
        gbc.setState(0x34a9, 0x80fe, 0xb0f0, 0x8b5b, 0xbf34, 0x7f9d, 0x1, 0x0);
        gbc.writeMem(0x34a9, { 0x78 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x80fe, gbc.sp());
        EXPECT(0x34aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01DC
        gbc.setState(0x24b7, 0x6a61, 0xe70, 0x2f33, 0xc82f, 0xc4a5, 0x0, 0x1);
        gbc.writeMem(0x24b7, { 0x78 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6a61, gbc.sp());
        EXPECT(0x24b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01DD
        gbc.setState(0x3319, 0xa1d, 0xc150, 0xb349, 0x6115, 0x39dd, 0x0, 0x0);
        gbc.writeMem(0x3319, { 0x78 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa1d, gbc.sp());
        EXPECT(0x331a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01DE
        gbc.setState(0x9faa, 0xe8a3, 0x5490, 0x5fa7, 0x2836, 0xdebb, 0x0, 0x0);
        gbc.writeMem(0x9faa, { 0x78 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe8a3, gbc.sp());
        EXPECT(0x9fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9faa));
        // 78 01DF
        gbc.setState(0x9d41, 0x2d30, 0x1890, 0xabe5, 0x9500, 0x184c, 0x1, 0x1);
        gbc.writeMem(0x9d41, { 0x78 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2d30, gbc.sp());
        EXPECT(0x9d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9d41));
        // 78 01E0
        gbc.setState(0x267a, 0x447e, 0xce0, 0xb6ee, 0x5124, 0xb98d, 0x1, 0x0);
        gbc.writeMem(0x267a, { 0x78 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x447e, gbc.sp());
        EXPECT(0x267b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 01E1
        gbc.setState(0xea4a, 0x5985, 0x2f10, 0x3a5a, 0xaa0b, 0x6848, 0x1, 0x0);
        gbc.writeMem(0xea4a, { 0x78 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5985, gbc.sp());
        EXPECT(0xea4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xea4a));
        // 78 01E3
        gbc.setState(0x8f94, 0xe89b, 0x5d60, 0xbb26, 0x3fd2, 0x6359, 0x1, 0x1);
        gbc.writeMem(0x8f94, { 0x78 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe89b, gbc.sp());
        EXPECT(0x8f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8f94));
        // 78 01E4
        gbc.setState(0xddbe, 0x8d7e, 0x4d20, 0x98f5, 0x250c, 0x24c3, 0x0, 0x1);
        gbc.writeMem(0xddbe, { 0x78 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8d7e, gbc.sp());
        EXPECT(0xddbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xddbe));
        // 78 01E5
        gbc.setState(0x42b7, 0x7aa4, 0xd2f0, 0xf9cf, 0xc04e, 0x6d3f, 0x1, 0x1);
        gbc.writeMem(0x42b7, { 0x78 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7aa4, gbc.sp());
        EXPECT(0x42b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01E6
        gbc.setState(0xb44d, 0xacdd, 0xf5d0, 0x4c54, 0xa3c2, 0x73a2, 0x1, 0x1);
        gbc.writeMem(0xb44d, { 0x78 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xacdd, gbc.sp());
        EXPECT(0xb44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb44d));
        // 78 01E7
        gbc.setState(0x9374, 0xc0d1, 0x5950, 0xf01, 0x507f, 0x7048, 0x0, 0x1);
        gbc.writeMem(0x9374, { 0x78 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc0d1, gbc.sp());
        EXPECT(0x9375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9374));
        // 78 01E8
        gbc.setState(0x8988, 0x32a, 0xc9c0, 0x3007, 0xb871, 0x1e12, 0x0, 0x1);
        gbc.writeMem(0x8988, { 0x78 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x32a, gbc.sp());
        EXPECT(0x8989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8988));
        // 78 01E9
        gbc.setState(0xa861, 0x53a5, 0x5ac0, 0xc605, 0xd7ef, 0x435b, 0x1, 0x0);
        gbc.writeMem(0xa861, { 0x78 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x53a5, gbc.sp());
        EXPECT(0xa862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa861));
        // 78 01EA
        gbc.setState(0xbaaa, 0x2189, 0xfae0, 0x66ad, 0xe668, 0x603e, 0x1, 0x1);
        gbc.writeMem(0xbaaa, { 0x78 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2189, gbc.sp());
        EXPECT(0xbaab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbaaa));
        // 78 01EB
        gbc.setState(0xdd2c, 0xc456, 0x90b0, 0xfc5, 0xff21, 0x64d8, 0x1, 0x0);
        gbc.writeMem(0xdd2c, { 0x78 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc456, gbc.sp());
        EXPECT(0xdd2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdd2c));
        // 78 01EC
        gbc.setState(0xec3c, 0x9fe6, 0x3cc0, 0xb09b, 0x8b66, 0x9786, 0x0, 0x0);
        gbc.writeMem(0xec3c, { 0x78 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9fe6, gbc.sp());
        EXPECT(0xec3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xec3c));
        // 78 01ED
        gbc.setState(0x9bdb, 0x818a, 0x1480, 0x4776, 0x16d0, 0xea12, 0x0, 0x0);
        gbc.writeMem(0x9bdb, { 0x78 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x818a, gbc.sp());
        EXPECT(0x9bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9bdb));
        // 78 01EE
        gbc.setState(0x454, 0x8919, 0x9c30, 0x9568, 0xcf59, 0x52b0, 0x0, 0x1);
        gbc.writeMem(0x454, { 0x78 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8919, gbc.sp());
        EXPECT(0x455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01EF
        gbc.setState(0x97b2, 0xdafd, 0x3730, 0xf014, 0xd508, 0xec4, 0x0, 0x1);
        gbc.writeMem(0x97b2, { 0x78 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdafd, gbc.sp());
        EXPECT(0x97b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x97b2));
        // 78 01F0
        gbc.setState(0xe14f, 0xd97c, 0x54a0, 0x188d, 0xd171, 0xabd1, 0x1, 0x0);
        gbc.writeMem(0xe14f, { 0x78 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd97c, gbc.sp());
        EXPECT(0xe150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe14f));
        // 78 01F1
        gbc.setState(0xaf11, 0xfddc, 0x8270, 0x16cc, 0xaf8, 0x1186, 0x1, 0x0);
        gbc.writeMem(0xaf11, { 0x78 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfddc, gbc.sp());
        EXPECT(0xaf12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xaf11));
        // 78 01F2
        gbc.setState(0x974f, 0x755b, 0x9050, 0xba1b, 0x655e, 0xb17d, 0x1, 0x0);
        gbc.writeMem(0x974f, { 0x78 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x755b, gbc.sp());
        EXPECT(0x9750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x974f));
        // 78 01F4
        gbc.setState(0xda5c, 0xb9d9, 0x7860, 0xc69a, 0xbd30, 0xe3e3, 0x0, 0x0);
        gbc.writeMem(0xda5c, { 0x78 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb9d9, gbc.sp());
        EXPECT(0xda5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xda5c));
        // 78 01F5
        gbc.setState(0x6ed0, 0x8e73, 0x8230, 0x1056, 0x8b08, 0xb133, 0x0, 0x0);
        gbc.writeMem(0x6ed0, { 0x78 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8e73, gbc.sp());
        EXPECT(0x6ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01F6
        gbc.setState(0xe7bf, 0xf4c0, 0x7230, 0x7343, 0x7aaa, 0x7d61, 0x1, 0x1);
        gbc.writeMem(0xe7bf, { 0x78 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf4c0, gbc.sp());
        EXPECT(0xe7c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe7bf));
        // 78 01F7
        gbc.setState(0x9c89, 0x69fb, 0xeb70, 0x72a, 0x26b4, 0x82e0, 0x1, 0x1);
        gbc.writeMem(0x9c89, { 0x78 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x69fb, gbc.sp());
        EXPECT(0x9c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9c89));
        // 78 01F8
        gbc.setState(0xd641, 0x6d04, 0x9580, 0x1ad6, 0x8e7a, 0xfadb, 0x1, 0x1);
        gbc.writeMem(0xd641, { 0x78 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6d04, gbc.sp());
        EXPECT(0xd642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd641));
        // 78 01F9
        gbc.setState(0x84bf, 0x5608, 0xabc0, 0x27b7, 0xde27, 0x8aa5, 0x1, 0x1);
        gbc.writeMem(0x84bf, { 0x78 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5608, gbc.sp());
        EXPECT(0x84c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x84bf));
        // 78 01FA
        gbc.setState(0x8d74, 0x260c, 0x4c30, 0x9e71, 0x4031, 0x561e, 0x0, 0x0);
        gbc.writeMem(0x8d74, { 0x78 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x260c, gbc.sp());
        EXPECT(0x8d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8d74));
        // 78 01FB
        gbc.setState(0x8d63, 0xacd6, 0x38a0, 0x9f1a, 0x7765, 0x3eed, 0x1, 0x0);
        gbc.writeMem(0x8d63, { 0x78 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xacd6, gbc.sp());
        EXPECT(0x8d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8d63));
        // 78 01FC
        gbc.setState(0xc75, 0x22fa, 0x6b30, 0x4246, 0xbdf5, 0xabe6, 0x0, 0x1);
        gbc.writeMem(0xc75, { 0x78 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x22fa, gbc.sp());
        EXPECT(0xc76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01FD
        gbc.setState(0x53fa, 0xe8a9, 0xd2d0, 0x4d1c, 0x16f3, 0x725a, 0x0, 0x1);
        gbc.writeMem(0x53fa, { 0x78 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe8a9, gbc.sp());
        EXPECT(0x53fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 01FE
        gbc.setState(0xd88, 0x2e1c, 0x180, 0x1c48, 0x7fd8, 0xc5c3, 0x0, 0x0);
        gbc.writeMem(0xd88, { 0x78 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2e1c, gbc.sp());
        EXPECT(0xd89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 01FF
        gbc.setState(0x3db3, 0xb362, 0x7710, 0xc641, 0x4dda, 0xd84d, 0x0, 0x1);
        gbc.writeMem(0x3db3, { 0x78 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb362, gbc.sp());
        EXPECT(0x3db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0200
        gbc.setState(0x1a55, 0xec4a, 0xfe40, 0xfc1c, 0x4fb5, 0x9994, 0x1, 0x0);
        gbc.writeMem(0x1a55, { 0x78 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xec4a, gbc.sp());
        EXPECT(0x1a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0201
        gbc.setState(0xb2fa, 0x1956, 0x99d0, 0xc73c, 0x552f, 0x3410, 0x0, 0x1);
        gbc.writeMem(0xb2fa, { 0x78 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1956, gbc.sp());
        EXPECT(0xb2fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb2fa));
        // 78 0202
        gbc.setState(0x5e1c, 0xcdd4, 0xa8e0, 0xc8cc, 0x136b, 0xf127, 0x0, 0x0);
        gbc.writeMem(0x5e1c, { 0x78 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcdd4, gbc.sp());
        EXPECT(0x5e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0203
        gbc.setState(0x29a7, 0x150c, 0xb590, 0xb037, 0x9030, 0x97cc, 0x1, 0x0);
        gbc.writeMem(0x29a7, { 0x78 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x150c, gbc.sp());
        EXPECT(0x29a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0204
        gbc.setState(0x8cb0, 0x6f4d, 0xf7d0, 0xd1e8, 0xffd7, 0xdc4a, 0x0, 0x0);
        gbc.writeMem(0x8cb0, { 0x78 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6f4d, gbc.sp());
        EXPECT(0x8cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8cb0));
        // 78 0205
        gbc.setState(0xe5f8, 0xf0c8, 0x5f90, 0xce23, 0xb61d, 0x4f24, 0x0, 0x0);
        gbc.writeMem(0xe5f8, { 0x78 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf0c8, gbc.sp());
        EXPECT(0xe5f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe5f8));
        // 78 0206
        gbc.setState(0x6452, 0x6bf5, 0x7a80, 0x979d, 0x4932, 0xd45f, 0x0, 0x0);
        gbc.writeMem(0x6452, { 0x78 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6bf5, gbc.sp());
        EXPECT(0x6453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0207
        gbc.setState(0xa39b, 0xb873, 0xad00, 0xd767, 0xcd1e, 0x371d, 0x0, 0x1);
        gbc.writeMem(0xa39b, { 0x78 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb873, gbc.sp());
        EXPECT(0xa39c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa39b));
        // 78 0208
        gbc.setState(0x7cb0, 0x3002, 0xa6c0, 0xdb0f, 0xb7f, 0x6bb, 0x0, 0x1);
        gbc.writeMem(0x7cb0, { 0x78 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3002, gbc.sp());
        EXPECT(0x7cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0209
        gbc.setState(0x5cb3, 0x869a, 0xa80, 0xaa25, 0x9521, 0xe7dc, 0x0, 0x1);
        gbc.writeMem(0x5cb3, { 0x78 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x869a, gbc.sp());
        EXPECT(0x5cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 020A
        gbc.setState(0x1c1, 0x9257, 0x6400, 0x996b, 0xe241, 0xd38e, 0x0, 0x0);
        gbc.writeMem(0x1c1, { 0x78 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9257, gbc.sp());
        EXPECT(0x1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 020B
        gbc.setState(0xce2f, 0xa3d1, 0xc180, 0xde45, 0x731d, 0x323, 0x1, 0x0);
        gbc.writeMem(0xce2f, { 0x78 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa3d1, gbc.sp());
        EXPECT(0xce30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xce2f));
        // 78 020C
        gbc.setState(0x1e76, 0x8468, 0x5a80, 0xc78, 0x56ad, 0x74e6, 0x1, 0x1);
        gbc.writeMem(0x1e76, { 0x78 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8468, gbc.sp());
        EXPECT(0x1e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 020D
        gbc.setState(0x5a92, 0xe2ef, 0x60d0, 0xb15b, 0x850c, 0x5c9b, 0x1, 0x0);
        gbc.writeMem(0x5a92, { 0x78 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe2ef, gbc.sp());
        EXPECT(0x5a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 020E
        gbc.setState(0x3c47, 0x530c, 0x92c0, 0x4f04, 0x32d3, 0x4574, 0x0, 0x1);
        gbc.writeMem(0x3c47, { 0x78 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x530c, gbc.sp());
        EXPECT(0x3c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 020F
        gbc.setState(0x698d, 0x9827, 0x10d0, 0xcff7, 0x2d1d, 0x67e0, 0x1, 0x0);
        gbc.writeMem(0x698d, { 0x78 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9827, gbc.sp());
        EXPECT(0x698e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0211
        gbc.setState(0x8f6f, 0xebd9, 0x3f60, 0x4c94, 0xb93, 0x1c05, 0x0, 0x0);
        gbc.writeMem(0x8f6f, { 0x78 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xebd9, gbc.sp());
        EXPECT(0x8f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8f6f));
        // 78 0212
        gbc.setState(0xda4c, 0xe7c, 0x93a0, 0x75c8, 0x2e11, 0xe721, 0x0, 0x0);
        gbc.writeMem(0xda4c, { 0x78 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe7c, gbc.sp());
        EXPECT(0xda4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xda4c));
        // 78 0213
        gbc.setState(0x181b, 0x6fad, 0x4ce0, 0xdeb8, 0xa641, 0x8cd0, 0x1, 0x0);
        gbc.writeMem(0x181b, { 0x78 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6fad, gbc.sp());
        EXPECT(0x181c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0214
        gbc.setState(0x57bf, 0x412e, 0x4030, 0x681c, 0x18f8, 0x7f81, 0x1, 0x1);
        gbc.writeMem(0x57bf, { 0x78 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x412e, gbc.sp());
        EXPECT(0x57c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0215
        gbc.setState(0x65ca, 0x98e6, 0x8bb0, 0x69b5, 0x565d, 0x136f, 0x1, 0x0);
        gbc.writeMem(0x65ca, { 0x78 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x98e6, gbc.sp());
        EXPECT(0x65cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0216
        gbc.setState(0xe460, 0x83fd, 0x9ed0, 0x17eb, 0x7b92, 0x9642, 0x1, 0x0);
        gbc.writeMem(0xe460, { 0x78 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x83fd, gbc.sp());
        EXPECT(0xe461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe460));
        // 78 0217
        gbc.setState(0x8b9e, 0x3d40, 0x2af0, 0x5a8, 0xc7e3, 0xa22e, 0x0, 0x0);
        gbc.writeMem(0x8b9e, { 0x78 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3d40, gbc.sp());
        EXPECT(0x8b9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8b9e));
        // 78 0218
        gbc.setState(0x2fb9, 0xba0d, 0x8560, 0xb606, 0x56e5, 0x7e29, 0x0, 0x1);
        gbc.writeMem(0x2fb9, { 0x78 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xba0d, gbc.sp());
        EXPECT(0x2fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0219
        gbc.setState(0xd56, 0x3bbb, 0x64c0, 0xaf73, 0xc135, 0xf8d1, 0x1, 0x1);
        gbc.writeMem(0xd56, { 0x78 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3bbb, gbc.sp());
        EXPECT(0xd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 021A
        gbc.setState(0x62e0, 0x3c7b, 0xc500, 0x8eb3, 0x508, 0xc606, 0x0, 0x1);
        gbc.writeMem(0x62e0, { 0x78 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3c7b, gbc.sp());
        EXPECT(0x62e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 021B
        gbc.setState(0xeaa0, 0x7721, 0xe020, 0xa20f, 0xaac9, 0x40fc, 0x0, 0x0);
        gbc.writeMem(0xeaa0, { 0x78 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7721, gbc.sp());
        EXPECT(0xeaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xeaa0));
        // 78 021C
        gbc.setState(0xd292, 0x5bdc, 0x7cf0, 0xeab, 0x3493, 0xeac4, 0x0, 0x0);
        gbc.writeMem(0xd292, { 0x78 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5bdc, gbc.sp());
        EXPECT(0xd293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd292));
        // 78 021D
        gbc.setState(0xa521, 0xa4e, 0xc420, 0x6100, 0x8195, 0x9643, 0x0, 0x0);
        gbc.writeMem(0xa521, { 0x78 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa4e, gbc.sp());
        EXPECT(0xa522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa521));
        // 78 021E
        gbc.setState(0x9b31, 0xb21c, 0xc4a0, 0xaa2c, 0x921e, 0x531b, 0x1, 0x1);
        gbc.writeMem(0x9b31, { 0x78 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb21c, gbc.sp());
        EXPECT(0x9b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9b31));
        // 78 021F
        gbc.setState(0xdb41, 0xf3e, 0xf720, 0x2584, 0xd19b, 0xdc80, 0x0, 0x0);
        gbc.writeMem(0xdb41, { 0x78 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf3e, gbc.sp());
        EXPECT(0xdb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdb41));
        // 78 0220
        gbc.setState(0x1a83, 0xac7e, 0xd360, 0xcde7, 0xd1d0, 0x966e, 0x1, 0x1);
        gbc.writeMem(0x1a83, { 0x78 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xac7e, gbc.sp());
        EXPECT(0x1a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0221
        gbc.setState(0xb3cc, 0x3a94, 0xc9a0, 0x174b, 0x46c6, 0x873d, 0x1, 0x1);
        gbc.writeMem(0xb3cc, { 0x78 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3a94, gbc.sp());
        EXPECT(0xb3cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb3cc));
        // 78 0222
        gbc.setState(0x3db9, 0x380, 0x6660, 0x95a0, 0x8ddb, 0x3ae5, 0x0, 0x1);
        gbc.writeMem(0x3db9, { 0x78 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x380, gbc.sp());
        EXPECT(0x3dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0223
        gbc.setState(0xb46, 0xe0f5, 0x9bf0, 0x8a30, 0x9011, 0x170, 0x1, 0x1);
        gbc.writeMem(0xb46, { 0x78 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe0f5, gbc.sp());
        EXPECT(0xb47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0224
        gbc.setState(0xb50b, 0xf2cf, 0x79f0, 0xa705, 0xa80a, 0x4264, 0x0, 0x0);
        gbc.writeMem(0xb50b, { 0x78 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf2cf, gbc.sp());
        EXPECT(0xb50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb50b));
        // 78 0225
        gbc.setState(0x7731, 0x34f0, 0x2bd0, 0x5f6, 0x98ee, 0x4742, 0x0, 0x0);
        gbc.writeMem(0x7731, { 0x78 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x34f0, gbc.sp());
        EXPECT(0x7732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0227
        gbc.setState(0x8b63, 0x83e2, 0xa9a0, 0x8bb7, 0xe01a, 0x7f71, 0x1, 0x1);
        gbc.writeMem(0x8b63, { 0x78 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x83e2, gbc.sp());
        EXPECT(0x8b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8b63));
        // 78 0228
        gbc.setState(0xde2b, 0x972c, 0x8f80, 0x692e, 0xf1ab, 0xeedc, 0x1, 0x0);
        gbc.writeMem(0xde2b, { 0x78 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x972c, gbc.sp());
        EXPECT(0xde2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xde2b));
        // 78 0229
        gbc.setState(0x20e8, 0xb606, 0x5e10, 0x5c64, 0xeea5, 0x48e1, 0x0, 0x1);
        gbc.writeMem(0x20e8, { 0x78 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb606, gbc.sp());
        EXPECT(0x20e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 022A
        gbc.setState(0xeb46, 0x431c, 0xdf80, 0xfa49, 0x34b7, 0x5910, 0x0, 0x1);
        gbc.writeMem(0xeb46, { 0x78 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x431c, gbc.sp());
        EXPECT(0xeb47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xeb46));
        // 78 022B
        gbc.setState(0x4fc2, 0xf834, 0xa330, 0xd620, 0x21f4, 0x7dca, 0x1, 0x1);
        gbc.writeMem(0x4fc2, { 0x78 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf834, gbc.sp());
        EXPECT(0x4fc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 022C
        gbc.setState(0xc794, 0x146a, 0x8600, 0xaa09, 0xa1c0, 0x344c, 0x0, 0x1);
        gbc.writeMem(0xc794, { 0x78 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x146a, gbc.sp());
        EXPECT(0xc795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc794));
        // 78 022D
        gbc.setState(0xd778, 0xbe32, 0x4ca0, 0xb5f, 0xd7ad, 0x2646, 0x0, 0x1);
        gbc.writeMem(0xd778, { 0x78 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbe32, gbc.sp());
        EXPECT(0xd779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd778));
        // 78 022E
        gbc.setState(0xc07f, 0xa968, 0x94a0, 0x3d4c, 0xd6b5, 0x909a, 0x1, 0x1);
        gbc.writeMem(0xc07f, { 0x78 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa968, gbc.sp());
        EXPECT(0xc080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc07f));
        // 78 022F
        gbc.setState(0xc711, 0x76fc, 0xa540, 0x7b40, 0xe562, 0x342a, 0x0, 0x1);
        gbc.writeMem(0xc711, { 0x78 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x76fc, gbc.sp());
        EXPECT(0xc712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc711));
        // 78 0231
        gbc.setState(0xdac, 0x9898, 0x7590, 0xf34d, 0xbe3e, 0x8683, 0x1, 0x0);
        gbc.writeMem(0xdac, { 0x78 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9898, gbc.sp());
        EXPECT(0xdad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0232
        gbc.setState(0x8c13, 0xa0bf, 0x4150, 0xfd49, 0x66ef, 0xe3d9, 0x0, 0x1);
        gbc.writeMem(0x8c13, { 0x78 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa0bf, gbc.sp());
        EXPECT(0x8c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8c13));
        // 78 0233
        gbc.setState(0x5d90, 0x3699, 0x8db0, 0xd79d, 0x18e6, 0x1221, 0x0, 0x1);
        gbc.writeMem(0x5d90, { 0x78 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3699, gbc.sp());
        EXPECT(0x5d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0234
        gbc.setState(0xdbfa, 0x63a2, 0xf9a0, 0x418, 0x7b52, 0xd022, 0x0, 0x1);
        gbc.writeMem(0xdbfa, { 0x78 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x63a2, gbc.sp());
        EXPECT(0xdbfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdbfa));
        // 78 0235
        gbc.setState(0xd005, 0x983c, 0xf30, 0x62dc, 0x340d, 0x46e0, 0x0, 0x0);
        gbc.writeMem(0xd005, { 0x78 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x983c, gbc.sp());
        EXPECT(0xd006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd005));
        // 78 0236
        gbc.setState(0x36b5, 0xb30c, 0xee40, 0x1ecd, 0xb605, 0x7535, 0x1, 0x0);
        gbc.writeMem(0x36b5, { 0x78 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb30c, gbc.sp());
        EXPECT(0x36b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0237
        gbc.setState(0x1276, 0x4ccb, 0xcf20, 0x7b0, 0xafc9, 0x9778, 0x1, 0x1);
        gbc.writeMem(0x1276, { 0x78 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4ccb, gbc.sp());
        EXPECT(0x1277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0238
        gbc.setState(0x455a, 0xcc44, 0x8420, 0x9c3c, 0x1329, 0xd0a0, 0x1, 0x1);
        gbc.writeMem(0x455a, { 0x78 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcc44, gbc.sp());
        EXPECT(0x455b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0239
        gbc.setState(0xb59f, 0xbacd, 0xead0, 0xd32f, 0x117f, 0x39e4, 0x1, 0x1);
        gbc.writeMem(0xb59f, { 0x78 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbacd, gbc.sp());
        EXPECT(0xb5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb59f));
        // 78 023A
        gbc.setState(0xa65c, 0xcfbb, 0xa100, 0x8b87, 0x20ba, 0xa4f9, 0x0, 0x1);
        gbc.writeMem(0xa65c, { 0x78 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcfbb, gbc.sp());
        EXPECT(0xa65d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa65c));
        // 78 023B
        gbc.setState(0xd35d, 0x1818, 0x4420, 0xd87d, 0xb13b, 0xe889, 0x0, 0x0);
        gbc.writeMem(0xd35d, { 0x78 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1818, gbc.sp());
        EXPECT(0xd35e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd35d));
        // 78 023C
        gbc.setState(0x445e, 0xda0, 0xe0c0, 0x10e, 0xc0c5, 0xa4e4, 0x0, 0x0);
        gbc.writeMem(0x445e, { 0x78 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xda0, gbc.sp());
        EXPECT(0x445f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 023D
        gbc.setState(0x80dc, 0x58, 0x28a0, 0x2c47, 0x3a79, 0xa6db, 0x1, 0x0);
        gbc.writeMem(0x80dc, { 0x78 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x58, gbc.sp());
        EXPECT(0x80dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x80dc));
        // 78 023E
        gbc.setState(0x9339, 0x8367, 0x36c0, 0xaea6, 0x2921, 0x8423, 0x0, 0x1);
        gbc.writeMem(0x9339, { 0x78 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8367, gbc.sp());
        EXPECT(0x933a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9339));
        // 78 023F
        gbc.setState(0xe639, 0xe4e6, 0x1090, 0x2db5, 0x1e8b, 0x95f6, 0x1, 0x0);
        gbc.writeMem(0xe639, { 0x78 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe4e6, gbc.sp());
        EXPECT(0xe63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe639));
        // 78 0240
        gbc.setState(0x3960, 0x20d0, 0x1330, 0xb29a, 0xf6eb, 0xea1, 0x0, 0x1);
        gbc.writeMem(0x3960, { 0x78 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x20d0, gbc.sp());
        EXPECT(0x3961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0241
        gbc.setState(0x4ac7, 0x4718, 0x6570, 0x3a30, 0x471a, 0xc3c, 0x0, 0x0);
        gbc.writeMem(0x4ac7, { 0x78 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4718, gbc.sp());
        EXPECT(0x4ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0242
        gbc.setState(0x5e6c, 0x5765, 0xa080, 0x6ca2, 0x1432, 0x1ec8, 0x0, 0x0);
        gbc.writeMem(0x5e6c, { 0x78 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5765, gbc.sp());
        EXPECT(0x5e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0243
        gbc.setState(0xd32e, 0xc37e, 0x2d30, 0xb0b4, 0x17d5, 0xe9c4, 0x0, 0x0);
        gbc.writeMem(0xd32e, { 0x78 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc37e, gbc.sp());
        EXPECT(0xd32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd32e));
        // 78 0245
        gbc.setState(0xaf67, 0x7cc, 0x97f0, 0xf8cb, 0x19, 0x534b, 0x0, 0x0);
        gbc.writeMem(0xaf67, { 0x78 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7cc, gbc.sp());
        EXPECT(0xaf68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xaf67));
        // 78 0246
        gbc.setState(0x5260, 0x306, 0x97b0, 0x77d3, 0xa0b2, 0xd0e4, 0x1, 0x0);
        gbc.writeMem(0x5260, { 0x78 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x306, gbc.sp());
        EXPECT(0x5261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0248
        gbc.setState(0xee47, 0xc618, 0x4090, 0x2243, 0x94b6, 0xfed8, 0x0, 0x0);
        gbc.writeMem(0xee47, { 0x78 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc618, gbc.sp());
        EXPECT(0xee48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xee47));
        // 78 0249
        gbc.setState(0xd6ff, 0x124, 0xc8a0, 0x8840, 0x22b7, 0x7b39, 0x1, 0x0);
        gbc.writeMem(0xd6ff, { 0x78 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x124, gbc.sp());
        EXPECT(0xd700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd6ff));
        // 78 024A
        gbc.setState(0x6cd5, 0xd398, 0xf9f0, 0x1a9e, 0xa47b, 0x17cd, 0x0, 0x1);
        gbc.writeMem(0x6cd5, { 0x78 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd398, gbc.sp());
        EXPECT(0x6cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 024B
        gbc.setState(0x3de8, 0x4e5b, 0xe150, 0xf871, 0xa93d, 0x36d6, 0x1, 0x1);
        gbc.writeMem(0x3de8, { 0x78 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4e5b, gbc.sp());
        EXPECT(0x3de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 024C
        gbc.setState(0x3e0c, 0x440a, 0x4de0, 0xf327, 0xa6ee, 0xe6cf, 0x1, 0x1);
        gbc.writeMem(0x3e0c, { 0x78 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x440a, gbc.sp());
        EXPECT(0x3e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 024D
        gbc.setState(0x7ec0, 0xfbca, 0x25c0, 0x10b3, 0xa20a, 0x6d2f, 0x0, 0x1);
        gbc.writeMem(0x7ec0, { 0x78 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfbca, gbc.sp());
        EXPECT(0x7ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 024E
        gbc.setState(0x387c, 0x2a37, 0xf170, 0x1282, 0xa691, 0x80e5, 0x0, 0x1);
        gbc.writeMem(0x387c, { 0x78 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2a37, gbc.sp());
        EXPECT(0x387d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 024F
        gbc.setState(0xad84, 0x511d, 0x39a0, 0x9222, 0xacc2, 0x6fb4, 0x1, 0x0);
        gbc.writeMem(0xad84, { 0x78 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x511d, gbc.sp());
        EXPECT(0xad85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xad84));
        // 78 0250
        gbc.setState(0x2b8b, 0x5e07, 0xb610, 0xba11, 0x4400, 0x3f7a, 0x0, 0x0);
        gbc.writeMem(0x2b8b, { 0x78 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5e07, gbc.sp());
        EXPECT(0x2b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0251
        gbc.setState(0xe5cd, 0x7e32, 0xe40, 0xfd5a, 0x5517, 0x93ba, 0x0, 0x0);
        gbc.writeMem(0xe5cd, { 0x78 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7e32, gbc.sp());
        EXPECT(0xe5ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe5cd));
        // 78 0252
        gbc.setState(0x5fc7, 0x33d5, 0x5ae0, 0xb0af, 0x1ad3, 0x664c, 0x1, 0x1);
        gbc.writeMem(0x5fc7, { 0x78 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x33d5, gbc.sp());
        EXPECT(0x5fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0253
        gbc.setState(0x41c, 0xabdc, 0x5510, 0x2e01, 0x9c1c, 0xdff6, 0x1, 0x1);
        gbc.writeMem(0x41c, { 0x78 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xabdc, gbc.sp());
        EXPECT(0x41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0254
        gbc.setState(0x45f7, 0xc07c, 0x12e0, 0xf99d, 0xfe5c, 0x8ad2, 0x1, 0x1);
        gbc.writeMem(0x45f7, { 0x78 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc07c, gbc.sp());
        EXPECT(0x45f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0255
        gbc.setState(0xd9c, 0x5878, 0x4f30, 0x7513, 0x68fd, 0x8e91, 0x1, 0x0);
        gbc.writeMem(0xd9c, { 0x78 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5878, gbc.sp());
        EXPECT(0xd9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0256
        gbc.setState(0xeff6, 0xc485, 0x8660, 0x4b1e, 0x21ba, 0x4035, 0x0, 0x0);
        gbc.writeMem(0xeff6, { 0x78 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc485, gbc.sp());
        EXPECT(0xeff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xeff6));
        // 78 0257
        gbc.setState(0xdf1c, 0x779a, 0xe260, 0x559d, 0x1568, 0xbbc6, 0x0, 0x0);
        gbc.writeMem(0xdf1c, { 0x78 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x779a, gbc.sp());
        EXPECT(0xdf1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdf1c));
        // 78 0258
        gbc.setState(0xefdc, 0x3e09, 0x7bb0, 0xd860, 0x1aef, 0xcb, 0x1, 0x0);
        gbc.writeMem(0xefdc, { 0x78 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3e09, gbc.sp());
        EXPECT(0xefdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xefdc));
        // 78 025A
        gbc.setState(0x7502, 0x2c45, 0xb6e0, 0x9a43, 0xcc0e, 0xa217, 0x0, 0x1);
        gbc.writeMem(0x7502, { 0x78 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2c45, gbc.sp());
        EXPECT(0x7503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 025B
        gbc.setState(0x9080, 0x1d82, 0x5850, 0xcd3f, 0x70d6, 0xd9ac, 0x1, 0x1);
        gbc.writeMem(0x9080, { 0x78 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1d82, gbc.sp());
        EXPECT(0x9081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9080));
        // 78 025C
        gbc.setState(0x6410, 0x142f, 0x1160, 0x1b93, 0x85ff, 0x7b4, 0x1, 0x0);
        gbc.writeMem(0x6410, { 0x78 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x142f, gbc.sp());
        EXPECT(0x6411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 025D
        gbc.setState(0x511c, 0x28ba, 0x7740, 0xa49b, 0xe5da, 0xb6fe, 0x0, 0x1);
        gbc.writeMem(0x511c, { 0x78 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x28ba, gbc.sp());
        EXPECT(0x511d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 025E
        gbc.setState(0xcc78, 0x30b1, 0x1ee0, 0x4c34, 0x37e7, 0xc702, 0x1, 0x0);
        gbc.writeMem(0xcc78, { 0x78 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x30b1, gbc.sp());
        EXPECT(0xcc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcc78));
        // 78 025F
        gbc.setState(0x3352, 0x9989, 0x5ac0, 0xc347, 0x13e3, 0xdacf, 0x0, 0x1);
        gbc.writeMem(0x3352, { 0x78 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9989, gbc.sp());
        EXPECT(0x3353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0260
        gbc.setState(0xbf99, 0xa711, 0x3720, 0x7c59, 0xf007, 0xa147, 0x0, 0x0);
        gbc.writeMem(0xbf99, { 0x78 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa711, gbc.sp());
        EXPECT(0xbf9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbf99));
        // 78 0261
        gbc.setState(0xb4f2, 0x772, 0x6050, 0x22e5, 0xc2d3, 0x5943, 0x1, 0x1);
        gbc.writeMem(0xb4f2, { 0x78 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x772, gbc.sp());
        EXPECT(0xb4f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb4f2));
        // 78 0262
        gbc.setState(0xc41f, 0x90f8, 0x4440, 0x67ac, 0x3921, 0x6cef, 0x1, 0x0);
        gbc.writeMem(0xc41f, { 0x78 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x90f8, gbc.sp());
        EXPECT(0xc420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc41f));
        // 78 0263
        gbc.setState(0xbb5d, 0x6556, 0x6e50, 0xde46, 0xc00f, 0xab92, 0x0, 0x0);
        gbc.writeMem(0xbb5d, { 0x78 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6556, gbc.sp());
        EXPECT(0xbb5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbb5d));
        // 78 0264
        gbc.setState(0x8ddb, 0xffcc, 0xfca0, 0x8cd0, 0xaf4e, 0x1215, 0x1, 0x0);
        gbc.writeMem(0x8ddb, { 0x78 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xffcc, gbc.sp());
        EXPECT(0x8ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8ddb));
        // 78 0265
        gbc.setState(0x73bb, 0x5b12, 0xf310, 0xb2db, 0x4a4a, 0x6bd, 0x0, 0x1);
        gbc.writeMem(0x73bb, { 0x78 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5b12, gbc.sp());
        EXPECT(0x73bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0266
        gbc.setState(0x5f10, 0xb805, 0x3af0, 0xe65d, 0x3f95, 0x7e05, 0x1, 0x1);
        gbc.writeMem(0x5f10, { 0x78 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb805, gbc.sp());
        EXPECT(0x5f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0268
        gbc.setState(0xb9d9, 0x48b2, 0xdef0, 0x1fc7, 0x8a96, 0x358f, 0x0, 0x0);
        gbc.writeMem(0xb9d9, { 0x78 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x48b2, gbc.sp());
        EXPECT(0xb9da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb9d9));
        // 78 026A
        gbc.setState(0xde35, 0xe69, 0xe650, 0xb761, 0x2395, 0x56f3, 0x1, 0x0);
        gbc.writeMem(0xde35, { 0x78 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe69, gbc.sp());
        EXPECT(0xde36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xde35));
        // 78 026B
        gbc.setState(0x521e, 0xe4d2, 0x2af0, 0x98c3, 0x8b6d, 0x5c63, 0x0, 0x1);
        gbc.writeMem(0x521e, { 0x78 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe4d2, gbc.sp());
        EXPECT(0x521f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 026C
        gbc.setState(0x6171, 0x576, 0x48d0, 0xf2db, 0xdaf4, 0x5b91, 0x1, 0x1);
        gbc.writeMem(0x6171, { 0x78 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x576, gbc.sp());
        EXPECT(0x6172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 026D
        gbc.setState(0x350a, 0xd9d0, 0x4670, 0x5be6, 0x803a, 0x4b1c, 0x1, 0x1);
        gbc.writeMem(0x350a, { 0x78 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd9d0, gbc.sp());
        EXPECT(0x350b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 026E
        gbc.setState(0x213b, 0x94fd, 0x5dc0, 0x8c1a, 0xb0c7, 0x6281, 0x0, 0x0);
        gbc.writeMem(0x213b, { 0x78 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x94fd, gbc.sp());
        EXPECT(0x213c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 026F
        gbc.setState(0x6ebf, 0x91d0, 0x6040, 0x2b11, 0xe5d4, 0x4770, 0x0, 0x0);
        gbc.writeMem(0x6ebf, { 0x78 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x91d0, gbc.sp());
        EXPECT(0x6ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0270
        gbc.setState(0x99d7, 0x8e9d, 0x27f0, 0x88bc, 0x210, 0xe0b, 0x1, 0x0);
        gbc.writeMem(0x99d7, { 0x78 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8e9d, gbc.sp());
        EXPECT(0x99d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x99d7));
        // 78 0271
        gbc.setState(0xce53, 0xdff8, 0x85e0, 0xa472, 0x6c3a, 0x73e5, 0x1, 0x0);
        gbc.writeMem(0xce53, { 0x78 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdff8, gbc.sp());
        EXPECT(0xce54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xce53));
        // 78 0272
        gbc.setState(0x287a, 0x1961, 0x9e30, 0x96b1, 0xd2c7, 0x414c, 0x0, 0x1);
        gbc.writeMem(0x287a, { 0x78 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1961, gbc.sp());
        EXPECT(0x287b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0273
        gbc.setState(0xdcc2, 0xb4e1, 0x94a0, 0x71e1, 0x74dd, 0x7aed, 0x0, 0x0);
        gbc.writeMem(0xdcc2, { 0x78 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb4e1, gbc.sp());
        EXPECT(0xdcc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdcc2));
        // 78 0274
        gbc.setState(0xc0ea, 0x3cd2, 0xbdb0, 0xabc, 0xa78d, 0x8907, 0x1, 0x0);
        gbc.writeMem(0xc0ea, { 0x78 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3cd2, gbc.sp());
        EXPECT(0xc0eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc0ea));
        // 78 0275
        gbc.setState(0xc61e, 0x2a70, 0x240, 0xbdea, 0x3334, 0xcb0, 0x1, 0x0);
        gbc.writeMem(0xc61e, { 0x78 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2a70, gbc.sp());
        EXPECT(0xc61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc61e));
        // 78 0276
        gbc.setState(0x518d, 0xf1b6, 0x5790, 0xe2d, 0x32b5, 0xc88d, 0x0, 0x0);
        gbc.writeMem(0x518d, { 0x78 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf1b6, gbc.sp());
        EXPECT(0x518e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0277
        gbc.setState(0xc334, 0x7f4b, 0x7cd0, 0xb80f, 0xc1cb, 0x65d2, 0x0, 0x0);
        gbc.writeMem(0xc334, { 0x78 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7f4b, gbc.sp());
        EXPECT(0xc335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc334));
        // 78 0278
        gbc.setState(0x1b67, 0x7714, 0xb0e0, 0x2a14, 0xc367, 0x3a83, 0x0, 0x1);
        gbc.writeMem(0x1b67, { 0x78 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7714, gbc.sp());
        EXPECT(0x1b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0279
        gbc.setState(0x4440, 0xf85b, 0x7b80, 0x3224, 0x4fb6, 0x3269, 0x0, 0x1);
        gbc.writeMem(0x4440, { 0x78 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf85b, gbc.sp());
        EXPECT(0x4441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 027A
        gbc.setState(0x487, 0xb4cb, 0xe460, 0xb546, 0x5171, 0xb7a1, 0x0, 0x0);
        gbc.writeMem(0x487, { 0x78 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb4cb, gbc.sp());
        EXPECT(0x488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 027B
        gbc.setState(0x1ba6, 0x70be, 0x53c0, 0x312a, 0xefb5, 0x9b6f, 0x1, 0x1);
        gbc.writeMem(0x1ba6, { 0x78 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x70be, gbc.sp());
        EXPECT(0x1ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 027C
        gbc.setState(0xe532, 0x2c55, 0x8630, 0xb940, 0x4724, 0xf0c3, 0x1, 0x0);
        gbc.writeMem(0xe532, { 0x78 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2c55, gbc.sp());
        EXPECT(0xe533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe532));
        // 78 027D
        gbc.setState(0xcea1, 0x9db0, 0xd020, 0xde94, 0x574, 0xe112, 0x1, 0x1);
        gbc.writeMem(0xcea1, { 0x78 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9db0, gbc.sp());
        EXPECT(0xcea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcea1));
        // 78 027E
        gbc.setState(0x8129, 0xd0a8, 0xd0a0, 0xd49f, 0x791, 0xec0f, 0x0, 0x1);
        gbc.writeMem(0x8129, { 0x78 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd0a8, gbc.sp());
        EXPECT(0x812a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8129));
        // 78 027F
        gbc.setState(0xd2f7, 0xed3c, 0x8e70, 0x6056, 0x14e0, 0x83ef, 0x1, 0x1);
        gbc.writeMem(0xd2f7, { 0x78 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xed3c, gbc.sp());
        EXPECT(0xd2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd2f7));
        // 78 0280
        gbc.setState(0x1fff, 0x33d1, 0xe440, 0x8ea7, 0x8926, 0x2b51, 0x0, 0x1);
        gbc.writeMem(0x1fff, { 0x78 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x33d1, gbc.sp());
        EXPECT(0x2000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0282
        gbc.setState(0x1f0c, 0x5c9b, 0x130, 0x9fb5, 0x48f, 0x1030, 0x0, 0x1);
        gbc.writeMem(0x1f0c, { 0x78 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5c9b, gbc.sp());
        EXPECT(0x1f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0283
        gbc.setState(0x3600, 0xc83e, 0xbfe0, 0x4053, 0x4948, 0xd490, 0x1, 0x1);
        gbc.writeMem(0x3600, { 0x78 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc83e, gbc.sp());
        EXPECT(0x3601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0284
        gbc.setState(0xa7ee, 0x7ee5, 0xb990, 0x3214, 0xe320, 0x7e49, 0x0, 0x1);
        gbc.writeMem(0xa7ee, { 0x78 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7ee5, gbc.sp());
        EXPECT(0xa7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa7ee));
        // 78 0285
        gbc.setState(0x67de, 0x39ff, 0xdee0, 0xaa21, 0x63d7, 0x5e21, 0x0, 0x0);
        gbc.writeMem(0x67de, { 0x78 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x39ff, gbc.sp());
        EXPECT(0x67df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0286
        gbc.setState(0xaadf, 0xcec9, 0xa560, 0xb0da, 0x7414, 0x3324, 0x1, 0x0);
        gbc.writeMem(0xaadf, { 0x78 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcec9, gbc.sp());
        EXPECT(0xaae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xaadf));
        // 78 0287
        gbc.setState(0xdd9b, 0xabb4, 0x9860, 0x5515, 0xe32e, 0x18a8, 0x0, 0x1);
        gbc.writeMem(0xdd9b, { 0x78 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xabb4, gbc.sp());
        EXPECT(0xdd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdd9b));
        // 78 0288
        gbc.setState(0x48ba, 0xb08b, 0x1b20, 0x2856, 0xf713, 0x5bbb, 0x1, 0x0);
        gbc.writeMem(0x48ba, { 0x78 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb08b, gbc.sp());
        EXPECT(0x48bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0289
        gbc.setState(0x993d, 0x394d, 0x24c0, 0xd524, 0xc752, 0xb9f2, 0x1, 0x0);
        gbc.writeMem(0x993d, { 0x78 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x394d, gbc.sp());
        EXPECT(0x993e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x993d));
        // 78 028A
        gbc.setState(0x8d1f, 0x1bd4, 0x7d60, 0x1931, 0x348b, 0x2745, 0x1, 0x0);
        gbc.writeMem(0x8d1f, { 0x78 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1bd4, gbc.sp());
        EXPECT(0x8d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8d1f));
        // 78 028B
        gbc.setState(0xea5d, 0xc96e, 0x9d10, 0xdce7, 0x15e, 0x9a56, 0x1, 0x1);
        gbc.writeMem(0xea5d, { 0x78 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc96e, gbc.sp());
        EXPECT(0xea5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xea5d));
        // 78 028C
        gbc.setState(0x42cd, 0xb797, 0xd020, 0x1fe2, 0xc63d, 0x646, 0x0, 0x1);
        gbc.writeMem(0x42cd, { 0x78 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb797, gbc.sp());
        EXPECT(0x42ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 028D
        gbc.setState(0xe6c9, 0xa7f, 0x1900, 0x786, 0xe838, 0xe408, 0x1, 0x0);
        gbc.writeMem(0xe6c9, { 0x78 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa7f, gbc.sp());
        EXPECT(0xe6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe6c9));
        // 78 028E
        gbc.setState(0x9333, 0xbfac, 0x9240, 0x6040, 0x1f1c, 0xeb6e, 0x0, 0x0);
        gbc.writeMem(0x9333, { 0x78 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbfac, gbc.sp());
        EXPECT(0x9334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9333));
        // 78 028F
        gbc.setState(0xb33, 0x5dbf, 0x3a0, 0xdac7, 0xd77e, 0x51e6, 0x1, 0x0);
        gbc.writeMem(0xb33, { 0x78 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5dbf, gbc.sp());
        EXPECT(0xb34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0290
        gbc.setState(0x86d3, 0x21ad, 0xa450, 0xd75c, 0xb2ca, 0xfda, 0x1, 0x1);
        gbc.writeMem(0x86d3, { 0x78 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x21ad, gbc.sp());
        EXPECT(0x86d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x86d3));
        // 78 0291
        gbc.setState(0x9664, 0x86fc, 0xa6c0, 0x6356, 0xd789, 0x4084, 0x0, 0x0);
        gbc.writeMem(0x9664, { 0x78 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x86fc, gbc.sp());
        EXPECT(0x9665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9664));
        // 78 0292
        gbc.setState(0x826d, 0x811f, 0x9260, 0xa4b5, 0xcdfa, 0x5d28, 0x1, 0x1);
        gbc.writeMem(0x826d, { 0x78 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x811f, gbc.sp());
        EXPECT(0x826e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x826d));
        // 78 0293
        gbc.setState(0xace2, 0xa686, 0xcf00, 0xbc6c, 0xac48, 0xd4b1, 0x1, 0x0);
        gbc.writeMem(0xace2, { 0x78 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa686, gbc.sp());
        EXPECT(0xace3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xace2));
        // 78 0294
        gbc.setState(0x9ebe, 0x5a39, 0x6890, 0xd3cf, 0xc1e8, 0x3b02, 0x1, 0x1);
        gbc.writeMem(0x9ebe, { 0x78 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5a39, gbc.sp());
        EXPECT(0x9ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9ebe));
        // 78 0295
        gbc.setState(0x8157, 0x1030, 0xacc0, 0x5246, 0x79a2, 0x55c8, 0x1, 0x0);
        gbc.writeMem(0x8157, { 0x78 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1030, gbc.sp());
        EXPECT(0x8158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8157));
        // 78 0296
        gbc.setState(0xe7b, 0xd106, 0xd110, 0xe154, 0xf4cf, 0x1535, 0x0, 0x0);
        gbc.writeMem(0xe7b, { 0x78 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd106, gbc.sp());
        EXPECT(0xe7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0297
        gbc.setState(0x377a, 0xb360, 0xfb0, 0xe6b6, 0xdf9d, 0x42b5, 0x1, 0x1);
        gbc.writeMem(0x377a, { 0x78 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb360, gbc.sp());
        EXPECT(0x377b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0298
        gbc.setState(0x58ad, 0x7b84, 0x86f0, 0xd8fb, 0x22fa, 0x8b0, 0x1, 0x0);
        gbc.writeMem(0x58ad, { 0x78 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7b84, gbc.sp());
        EXPECT(0x58ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 029A
        gbc.setState(0x9c66, 0x63d, 0x5be0, 0xc143, 0x9729, 0x67a6, 0x1, 0x0);
        gbc.writeMem(0x9c66, { 0x78 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x63d, gbc.sp());
        EXPECT(0x9c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9c66));
        // 78 029B
        gbc.setState(0xbcbc, 0xe115, 0xa070, 0x96f5, 0xd9f7, 0x30ae, 0x1, 0x1);
        gbc.writeMem(0xbcbc, { 0x78 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe115, gbc.sp());
        EXPECT(0xbcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbcbc));
        // 78 029D
        gbc.setState(0xa62d, 0xc548, 0x5610, 0xdbb7, 0x6d8, 0xcbdd, 0x0, 0x1);
        gbc.writeMem(0xa62d, { 0x78 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc548, gbc.sp());
        EXPECT(0xa62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa62d));
        // 78 029E
        gbc.setState(0xa686, 0x8730, 0x91b0, 0x3437, 0x45b9, 0xe897, 0x0, 0x0);
        gbc.writeMem(0xa686, { 0x78 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8730, gbc.sp());
        EXPECT(0xa687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa686));
        // 78 029F
        gbc.setState(0x8cf8, 0x18f8, 0xbd60, 0x897d, 0xe37f, 0xac7b, 0x1, 0x0);
        gbc.writeMem(0x8cf8, { 0x78 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x18f8, gbc.sp());
        EXPECT(0x8cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8cf8));
        // 78 02A1
        gbc.setState(0x9db9, 0xc81c, 0x2960, 0x33a0, 0x31d8, 0x3bed, 0x0, 0x0);
        gbc.writeMem(0x9db9, { 0x78 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc81c, gbc.sp());
        EXPECT(0x9dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9db9));
        // 78 02A2
        gbc.setState(0x730b, 0x80fa, 0xbe00, 0xebd9, 0x433e, 0x9d96, 0x1, 0x0);
        gbc.writeMem(0x730b, { 0x78 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x80fa, gbc.sp());
        EXPECT(0x730c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02A3
        gbc.setState(0x9507, 0xe266, 0x73f0, 0x331, 0x318b, 0xfed3, 0x1, 0x1);
        gbc.writeMem(0x9507, { 0x78 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe266, gbc.sp());
        EXPECT(0x9508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9507));
        // 78 02A4
        gbc.setState(0x3a70, 0x3f82, 0xe160, 0x697b, 0xedda, 0xb0f2, 0x1, 0x1);
        gbc.writeMem(0x3a70, { 0x78 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3f82, gbc.sp());
        EXPECT(0x3a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02A5
        gbc.setState(0xc39e, 0x8f51, 0xfca0, 0x624, 0xbd5a, 0xa62, 0x1, 0x0);
        gbc.writeMem(0xc39e, { 0x78 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8f51, gbc.sp());
        EXPECT(0xc39f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc39e));
        // 78 02A6
        gbc.setState(0xec20, 0x76f6, 0x7200, 0xc0e5, 0x8128, 0x2e7c, 0x1, 0x1);
        gbc.writeMem(0xec20, { 0x78 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x76f6, gbc.sp());
        EXPECT(0xec21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xec20));
        // 78 02A7
        gbc.setState(0x9d15, 0x6941, 0x7e10, 0x1dfa, 0xe3e1, 0x7c8e, 0x0, 0x0);
        gbc.writeMem(0x9d15, { 0x78 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6941, gbc.sp());
        EXPECT(0x9d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9d15));
        // 78 02A8
        gbc.setState(0x57cd, 0x5749, 0x6980, 0x8f78, 0x3b65, 0x8df2, 0x0, 0x1);
        gbc.writeMem(0x57cd, { 0x78 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5749, gbc.sp());
        EXPECT(0x57ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02A9
        gbc.setState(0x5251, 0x5be7, 0xc8c0, 0xe365, 0x4376, 0x2ec2, 0x1, 0x1);
        gbc.writeMem(0x5251, { 0x78 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5be7, gbc.sp());
        EXPECT(0x5252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02AA
        gbc.setState(0x52, 0x7dd8, 0x92e0, 0x1e26, 0x8de5, 0x27cb, 0x0, 0x0);
        gbc.writeMem(0x52, { 0x78 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7dd8, gbc.sp());
        EXPECT(0x53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02AB
        gbc.setState(0x1cb7, 0x7f2e, 0x6320, 0x3162, 0x591a, 0xbe21, 0x1, 0x1);
        gbc.writeMem(0x1cb7, { 0x78 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7f2e, gbc.sp());
        EXPECT(0x1cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02AC
        gbc.setState(0x2cf1, 0x2db1, 0xfbb0, 0x5204, 0x9ba3, 0x6926, 0x1, 0x1);
        gbc.writeMem(0x2cf1, { 0x78 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2db1, gbc.sp());
        EXPECT(0x2cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02AD
        gbc.setState(0x81a, 0xccbc, 0x2790, 0x1131, 0xc7ff, 0x7347, 0x0, 0x1);
        gbc.writeMem(0x81a, { 0x78 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xccbc, gbc.sp());
        EXPECT(0x81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02AE
        gbc.setState(0x46b8, 0xccda, 0x5920, 0x55d, 0xda9c, 0x8c1e, 0x1, 0x1);
        gbc.writeMem(0x46b8, { 0x78 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xccda, gbc.sp());
        EXPECT(0x46b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02AF
        gbc.setState(0x2c67, 0x703e, 0x1fc0, 0x141a, 0x8ae5, 0xf559, 0x1, 0x0);
        gbc.writeMem(0x2c67, { 0x78 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x703e, gbc.sp());
        EXPECT(0x2c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02B0
        gbc.setState(0x6c8b, 0x8cd3, 0x5d30, 0x3a7c, 0x9ff7, 0xaf8f, 0x1, 0x1);
        gbc.writeMem(0x6c8b, { 0x78 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8cd3, gbc.sp());
        EXPECT(0x6c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02B1
        gbc.setState(0xce89, 0x91bd, 0x7e40, 0xd0a5, 0xfb22, 0x9e67, 0x1, 0x0);
        gbc.writeMem(0xce89, { 0x78 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x91bd, gbc.sp());
        EXPECT(0xce8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xce89));
        // 78 02B2
        gbc.setState(0x380e, 0x3443, 0x2df0, 0xa587, 0x76e1, 0xb8ff, 0x0, 0x0);
        gbc.writeMem(0x380e, { 0x78 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3443, gbc.sp());
        EXPECT(0x380f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02B3
        gbc.setState(0x53c1, 0xb0bf, 0x6f30, 0x98cb, 0x6497, 0xb5dd, 0x1, 0x0);
        gbc.writeMem(0x53c1, { 0x78 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb0bf, gbc.sp());
        EXPECT(0x53c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02B5
        gbc.setState(0xd9fe, 0x58f0, 0xe190, 0xb483, 0xfd59, 0x6357, 0x0, 0x0);
        gbc.writeMem(0xd9fe, { 0x78 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x58f0, gbc.sp());
        EXPECT(0xd9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd9fe));
        // 78 02B6
        gbc.setState(0x3eb, 0x6eac, 0x770, 0xd303, 0xd802, 0xac6b, 0x1, 0x1);
        gbc.writeMem(0x3eb, { 0x78 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6eac, gbc.sp());
        EXPECT(0x3ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02B7
        gbc.setState(0x46ba, 0xdd8d, 0xbe60, 0x4e02, 0x2d51, 0x3238, 0x1, 0x0);
        gbc.writeMem(0x46ba, { 0x78 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdd8d, gbc.sp());
        EXPECT(0x46bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02B8
        gbc.setState(0x914, 0xf8f0, 0xfe20, 0x4b64, 0xd6e1, 0x91c, 0x1, 0x1);
        gbc.writeMem(0x914, { 0x78 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf8f0, gbc.sp());
        EXPECT(0x915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02B9
        gbc.setState(0x3ad0, 0x466c, 0x7d90, 0xfc16, 0x2d6d, 0x161d, 0x1, 0x0);
        gbc.writeMem(0x3ad0, { 0x78 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x466c, gbc.sp());
        EXPECT(0x3ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02BA
        gbc.setState(0xd3ad, 0x9dc5, 0xc680, 0x99e1, 0x858c, 0xc5db, 0x1, 0x0);
        gbc.writeMem(0xd3ad, { 0x78 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9dc5, gbc.sp());
        EXPECT(0xd3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd3ad));
        // 78 02BB
        gbc.setState(0x2da9, 0x6047, 0x78a0, 0x39c0, 0x8f20, 0xd185, 0x0, 0x1);
        gbc.writeMem(0x2da9, { 0x78 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6047, gbc.sp());
        EXPECT(0x2daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02BC
        gbc.setState(0x83bd, 0x6b51, 0x74e0, 0xd919, 0xf474, 0x9857, 0x1, 0x0);
        gbc.writeMem(0x83bd, { 0x78 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6b51, gbc.sp());
        EXPECT(0x83be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x83bd));
        // 78 02BD
        gbc.setState(0x44f1, 0xf6a0, 0xcb40, 0x2036, 0xad5c, 0x4d2f, 0x1, 0x1);
        gbc.writeMem(0x44f1, { 0x78 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf6a0, gbc.sp());
        EXPECT(0x44f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02BE
        gbc.setState(0x22b0, 0xb90e, 0x33a0, 0x9738, 0x37f2, 0xa9c0, 0x0, 0x0);
        gbc.writeMem(0x22b0, { 0x78 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb90e, gbc.sp());
        EXPECT(0x22b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02BF
        gbc.setState(0x4c13, 0x4716, 0x6cd0, 0x8043, 0x2838, 0x84e5, 0x1, 0x0);
        gbc.writeMem(0x4c13, { 0x78 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4716, gbc.sp());
        EXPECT(0x4c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02C0
        gbc.setState(0xdf16, 0x817c, 0x6040, 0xd0e2, 0xe18e, 0x97b5, 0x0, 0x1);
        gbc.writeMem(0xdf16, { 0x78 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x817c, gbc.sp());
        EXPECT(0xdf17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdf16));
        // 78 02C1
        gbc.setState(0x1a7f, 0x3016, 0xdbb0, 0x9406, 0x16ac, 0x43ed, 0x0, 0x1);
        gbc.writeMem(0x1a7f, { 0x78 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3016, gbc.sp());
        EXPECT(0x1a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02C2
        gbc.setState(0x61d, 0xd3ce, 0x3510, 0xc0cf, 0x3813, 0xe3e0, 0x0, 0x1);
        gbc.writeMem(0x61d, { 0x78 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd3ce, gbc.sp());
        EXPECT(0x61e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02C3
        gbc.setState(0x5e47, 0xe80a, 0x3480, 0xc166, 0x1ae, 0x11ab, 0x0, 0x0);
        gbc.writeMem(0x5e47, { 0x78 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe80a, gbc.sp());
        EXPECT(0x5e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02C4
        gbc.setState(0xd38d, 0x777e, 0xad20, 0xddf5, 0x14c9, 0xd3a5, 0x1, 0x0);
        gbc.writeMem(0xd38d, { 0x78 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x777e, gbc.sp());
        EXPECT(0xd38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd38d));
        // 78 02C5
        gbc.setState(0x7774, 0xc8ee, 0x2a60, 0x2118, 0x47d9, 0x729f, 0x1, 0x0);
        gbc.writeMem(0x7774, { 0x78 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc8ee, gbc.sp());
        EXPECT(0x7775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02C6
        gbc.setState(0x444c, 0x410c, 0x4c0, 0x7bc0, 0x3bd0, 0xb759, 0x1, 0x0);
        gbc.writeMem(0x444c, { 0x78 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x410c, gbc.sp());
        EXPECT(0x444d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02C7
        gbc.setState(0x3542, 0xde3f, 0x840, 0x64b8, 0x8b4a, 0xa31a, 0x1, 0x0);
        gbc.writeMem(0x3542, { 0x78 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xde3f, gbc.sp());
        EXPECT(0x3543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02C8
        gbc.setState(0x8dc4, 0xcaf1, 0xaff0, 0xd4e9, 0xfa9, 0x5cfd, 0x0, 0x1);
        gbc.writeMem(0x8dc4, { 0x78 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcaf1, gbc.sp());
        EXPECT(0x8dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8dc4));
        // 78 02C9
        gbc.setState(0xdd1, 0x34f, 0xa020, 0x325f, 0x6162, 0xc6c3, 0x0, 0x1);
        gbc.writeMem(0xdd1, { 0x78 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x34f, gbc.sp());
        EXPECT(0xdd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02CA
        gbc.setState(0x337a, 0x8d3, 0xac20, 0xa7f3, 0xf509, 0x7cbc, 0x1, 0x1);
        gbc.writeMem(0x337a, { 0x78 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8d3, gbc.sp());
        EXPECT(0x337b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02CC
        gbc.setState(0xf93, 0x92a1, 0x330, 0x8693, 0x1060, 0x4dbb, 0x0, 0x0);
        gbc.writeMem(0xf93, { 0x78 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x92a1, gbc.sp());
        EXPECT(0xf94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02CD
        gbc.setState(0x20a7, 0x87c3, 0x82c0, 0x2da7, 0x9cf1, 0xc394, 0x0, 0x1);
        gbc.writeMem(0x20a7, { 0x78 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x87c3, gbc.sp());
        EXPECT(0x20a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02CE
        gbc.setState(0x5b19, 0x6b3e, 0x3a0, 0x51b8, 0x750b, 0x8c9e, 0x1, 0x1);
        gbc.writeMem(0x5b19, { 0x78 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6b3e, gbc.sp());
        EXPECT(0x5b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02CF
        gbc.setState(0x6075, 0x6e0c, 0xd370, 0x89b1, 0xc7ac, 0x3b70, 0x1, 0x0);
        gbc.writeMem(0x6075, { 0x78 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6e0c, gbc.sp());
        EXPECT(0x6076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02D0
        gbc.setState(0xd609, 0x268d, 0x70e0, 0xba9b, 0xdde2, 0x22e2, 0x1, 0x1);
        gbc.writeMem(0xd609, { 0x78 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x268d, gbc.sp());
        EXPECT(0xd60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd609));
        // 78 02D1
        gbc.setState(0xe348, 0x9586, 0x28f0, 0x3376, 0x8c02, 0x6905, 0x0, 0x0);
        gbc.writeMem(0xe348, { 0x78 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9586, gbc.sp());
        EXPECT(0xe349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe348));
        // 78 02D2
        gbc.setState(0xc04c, 0x5cee, 0x6250, 0xc038, 0x943b, 0x778f, 0x1, 0x0);
        gbc.writeMem(0xc04c, { 0x78 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5cee, gbc.sp());
        EXPECT(0xc04d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc04c));
        // 78 02D3
        gbc.setState(0x6362, 0xf9be, 0xe300, 0x29ba, 0xb69, 0xc29d, 0x0, 0x0);
        gbc.writeMem(0x6362, { 0x78 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf9be, gbc.sp());
        EXPECT(0x6363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02D5
        gbc.setState(0x7e49, 0xa8a, 0x3370, 0xf608, 0x8421, 0x2a66, 0x1, 0x0);
        gbc.writeMem(0x7e49, { 0x78 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa8a, gbc.sp());
        EXPECT(0x7e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02D7
        gbc.setState(0x81ab, 0x79a1, 0x64e0, 0x7bdf, 0x90, 0xbb82, 0x1, 0x1);
        gbc.writeMem(0x81ab, { 0x78 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x79a1, gbc.sp());
        EXPECT(0x81ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x81ab));
        // 78 02D8
        gbc.setState(0x120d, 0x570b, 0x750, 0x490f, 0xd2ae, 0x660a, 0x0, 0x1);
        gbc.writeMem(0x120d, { 0x78 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x570b, gbc.sp());
        EXPECT(0x120e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02D9
        gbc.setState(0xb7a0, 0xb24, 0x210, 0xfdad, 0x4600, 0xcb8c, 0x0, 0x0);
        gbc.writeMem(0xb7a0, { 0x78 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb24, gbc.sp());
        EXPECT(0xb7a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb7a0));
        // 78 02DA
        gbc.setState(0xea3c, 0xa1b, 0xa0a0, 0x8a73, 0xf222, 0x2d51, 0x0, 0x0);
        gbc.writeMem(0xea3c, { 0x78 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa1b, gbc.sp());
        EXPECT(0xea3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xea3c));
        // 78 02DB
        gbc.setState(0x734b, 0x3e90, 0xcb80, 0xdff2, 0x2c11, 0x85a4, 0x0, 0x0);
        gbc.writeMem(0x734b, { 0x78 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3e90, gbc.sp());
        EXPECT(0x734c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02DC
        gbc.setState(0xe842, 0xf4bf, 0x2010, 0x6c00, 0x98fc, 0x8003, 0x1, 0x1);
        gbc.writeMem(0xe842, { 0x78 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf4bf, gbc.sp());
        EXPECT(0xe843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe842));
        // 78 02DD
        gbc.setState(0xa36e, 0x1926, 0xbd90, 0xb24b, 0x88fc, 0xed5d, 0x1, 0x0);
        gbc.writeMem(0xa36e, { 0x78 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1926, gbc.sp());
        EXPECT(0xa36f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa36e));
        // 78 02DF
        gbc.setState(0xa086, 0xb9fd, 0x8630, 0x66c5, 0xfb52, 0x9545, 0x0, 0x0);
        gbc.writeMem(0xa086, { 0x78 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb9fd, gbc.sp());
        EXPECT(0xa087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa086));
        // 78 02E0
        gbc.setState(0x6219, 0x6d14, 0x8d20, 0xc05c, 0x5ebe, 0x329e, 0x1, 0x0);
        gbc.writeMem(0x6219, { 0x78 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6d14, gbc.sp());
        EXPECT(0x621a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02E1
        gbc.setState(0x86a3, 0xdb92, 0xfc10, 0xc9c, 0xb53e, 0x2561, 0x1, 0x0);
        gbc.writeMem(0x86a3, { 0x78 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdb92, gbc.sp());
        EXPECT(0x86a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x86a3));
        // 78 02E2
        gbc.setState(0x3462, 0xbcf2, 0x1230, 0x2730, 0x5f4f, 0x39c9, 0x0, 0x1);
        gbc.writeMem(0x3462, { 0x78 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbcf2, gbc.sp());
        EXPECT(0x3463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02E4
        gbc.setState(0x7922, 0xd196, 0x270, 0x79c0, 0x6731, 0xd430, 0x1, 0x1);
        gbc.writeMem(0x7922, { 0x78 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd196, gbc.sp());
        EXPECT(0x7923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02E5
        gbc.setState(0x786d, 0xbe04, 0xd950, 0x32c1, 0x5ac6, 0xd1f8, 0x1, 0x1);
        gbc.writeMem(0x786d, { 0x78 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbe04, gbc.sp());
        EXPECT(0x786e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02E6
        gbc.setState(0xef89, 0xa040, 0x7bf0, 0xebe6, 0x4aa, 0x32ca, 0x1, 0x0);
        gbc.writeMem(0xef89, { 0x78 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa040, gbc.sp());
        EXPECT(0xef8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xef89));
        // 78 02E8
        gbc.setState(0x3858, 0xa836, 0x1680, 0xfac6, 0x6bc3, 0x7cd2, 0x0, 0x0);
        gbc.writeMem(0x3858, { 0x78 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa836, gbc.sp());
        EXPECT(0x3859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02E9
        gbc.setState(0xc5ac, 0xe207, 0x1270, 0x597f, 0xf700, 0x74b5, 0x0, 0x1);
        gbc.writeMem(0xc5ac, { 0x78 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe207, gbc.sp());
        EXPECT(0xc5ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc5ac));
        // 78 02EA
        gbc.setState(0x4c1d, 0xc9cd, 0x57c0, 0x2d29, 0xaff5, 0x9f9b, 0x0, 0x0);
        gbc.writeMem(0x4c1d, { 0x78 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc9cd, gbc.sp());
        EXPECT(0x4c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02EB
        gbc.setState(0xca6e, 0x5c19, 0x58b0, 0x518, 0x2ca4, 0x9e1b, 0x0, 0x0);
        gbc.writeMem(0xca6e, { 0x78 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5c19, gbc.sp());
        EXPECT(0xca6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xca6e));
        // 78 02EC
        gbc.setState(0x9fa2, 0x214a, 0x15c0, 0xcc9b, 0x8e8e, 0x8853, 0x0, 0x0);
        gbc.writeMem(0x9fa2, { 0x78 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x214a, gbc.sp());
        EXPECT(0x9fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9fa2));
        // 78 02EE
        gbc.setState(0xc335, 0xd1db, 0x52c0, 0x319f, 0x217e, 0x6850, 0x0, 0x0);
        gbc.writeMem(0xc335, { 0x78 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd1db, gbc.sp());
        EXPECT(0xc336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc335));
        // 78 02EF
        gbc.setState(0x72ed, 0x7f2, 0xbe90, 0x7f46, 0x8e2d, 0x3359, 0x1, 0x0);
        gbc.writeMem(0x72ed, { 0x78 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7f2, gbc.sp());
        EXPECT(0x72ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02F0
        gbc.setState(0x8af1, 0x4b76, 0x7f90, 0x60bc, 0x80e6, 0x9df8, 0x0, 0x0);
        gbc.writeMem(0x8af1, { 0x78 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4b76, gbc.sp());
        EXPECT(0x8af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8af1));
        // 78 02F1
        gbc.setState(0xcc7a, 0xb6c8, 0xd330, 0x90d9, 0xe862, 0xaef9, 0x1, 0x1);
        gbc.writeMem(0xcc7a, { 0x78 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb6c8, gbc.sp());
        EXPECT(0xcc7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcc7a));
        // 78 02F2
        gbc.setState(0x32f5, 0x7651, 0xd540, 0xa4ce, 0xcfd7, 0xbbc3, 0x0, 0x1);
        gbc.writeMem(0x32f5, { 0x78 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7651, gbc.sp());
        EXPECT(0x32f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02F3
        gbc.setState(0xd319, 0xff5a, 0x4430, 0x6ed9, 0x6c23, 0x69b9, 0x0, 0x1);
        gbc.writeMem(0xd319, { 0x78 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xff5a, gbc.sp());
        EXPECT(0xd31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd319));
        // 78 02F4
        gbc.setState(0xd50a, 0xa504, 0x7e30, 0x1320, 0x1ff9, 0x84c4, 0x1, 0x0);
        gbc.writeMem(0xd50a, { 0x78 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa504, gbc.sp());
        EXPECT(0xd50b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd50a));
        // 78 02F5
        gbc.setState(0x6804, 0x708f, 0x7e0, 0xfc94, 0xc955, 0x2d26, 0x1, 0x0);
        gbc.writeMem(0x6804, { 0x78 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x708f, gbc.sp());
        EXPECT(0x6805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 02F6
        gbc.setState(0xe1e4, 0xc62, 0xfd50, 0x33c1, 0x6ac6, 0x432a, 0x1, 0x0);
        gbc.writeMem(0xe1e4, { 0x78 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc62, gbc.sp());
        EXPECT(0xe1e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe1e4));
        // 78 02F7
        gbc.setState(0xcac, 0xf2e0, 0x8010, 0x6f15, 0x321e, 0xc3b5, 0x0, 0x0);
        gbc.writeMem(0xcac, { 0x78 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf2e0, gbc.sp());
        EXPECT(0xcad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02F8
        gbc.setState(0xa68c, 0x4849, 0xe5b0, 0xcc9b, 0xbced, 0x4e01, 0x0, 0x1);
        gbc.writeMem(0xa68c, { 0x78 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4849, gbc.sp());
        EXPECT(0xa68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa68c));
        // 78 02F9
        gbc.setState(0xcc52, 0x9d2b, 0x4f70, 0xd472, 0xcc38, 0xfd2d, 0x0, 0x0);
        gbc.writeMem(0xcc52, { 0x78 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9d2b, gbc.sp());
        EXPECT(0xcc53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcc52));
        // 78 02FA
        gbc.setState(0x8d2c, 0x9c8d, 0xe540, 0xe973, 0xbd54, 0xb5b, 0x0, 0x1);
        gbc.writeMem(0x8d2c, { 0x78 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9c8d, gbc.sp());
        EXPECT(0x8d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8d2c));
        // 78 02FC
        gbc.setState(0x55bd, 0x9d2e, 0xb890, 0xda86, 0xb419, 0x27b, 0x0, 0x0);
        gbc.writeMem(0x55bd, { 0x78 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9d2e, gbc.sp());
        EXPECT(0x55be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02FD
        gbc.setState(0x9a4e, 0x49a9, 0x3df0, 0xe36c, 0x9c73, 0x2035, 0x1, 0x0);
        gbc.writeMem(0x9a4e, { 0x78 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x49a9, gbc.sp());
        EXPECT(0x9a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9a4e));
        // 78 02FE
        gbc.setState(0x33be, 0x4499, 0xea90, 0x16ae, 0x2ae7, 0x7d96, 0x0, 0x0);
        gbc.writeMem(0x33be, { 0x78 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4499, gbc.sp());
        EXPECT(0x33bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 02FF
        gbc.setState(0x4207, 0x2564, 0xc8b0, 0x1387, 0x60f7, 0xfdff, 0x1, 0x1);
        gbc.writeMem(0x4207, { 0x78 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2564, gbc.sp());
        EXPECT(0x4208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0301
        gbc.setState(0x61a7, 0x5b93, 0xfca0, 0x4f81, 0xe4d, 0xcf6e, 0x0, 0x1);
        gbc.writeMem(0x61a7, { 0x78 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5b93, gbc.sp());
        EXPECT(0x61a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0302
        gbc.setState(0xd2ce, 0xd5a6, 0x6c0, 0xccc9, 0x16b8, 0x2443, 0x0, 0x1);
        gbc.writeMem(0xd2ce, { 0x78 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd5a6, gbc.sp());
        EXPECT(0xd2cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd2ce));
        // 78 0303
        gbc.setState(0x9b32, 0x7e72, 0xc4d0, 0x996f, 0xcb95, 0x9db0, 0x0, 0x1);
        gbc.writeMem(0x9b32, { 0x78 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7e72, gbc.sp());
        EXPECT(0x9b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9b32));
        // 78 0304
        gbc.setState(0x9a1c, 0xea5d, 0xa310, 0x28ea, 0x8e82, 0xd0af, 0x0, 0x1);
        gbc.writeMem(0x9a1c, { 0x78 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xea5d, gbc.sp());
        EXPECT(0x9a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9a1c));
        // 78 0305
        gbc.setState(0x4ed6, 0x1429, 0xafe0, 0x7026, 0x85d7, 0x6ec4, 0x1, 0x1);
        gbc.writeMem(0x4ed6, { 0x78 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1429, gbc.sp());
        EXPECT(0x4ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0306
        gbc.setState(0x8c90, 0x2f34, 0xed30, 0x51c9, 0x2110, 0xa2de, 0x0, 0x1);
        gbc.writeMem(0x8c90, { 0x78 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2f34, gbc.sp());
        EXPECT(0x8c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8c90));
        // 78 0307
        gbc.setState(0x37e9, 0x3410, 0x74a0, 0xc6f3, 0xe26b, 0x36a9, 0x1, 0x0);
        gbc.writeMem(0x37e9, { 0x78 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3410, gbc.sp());
        EXPECT(0x37ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0308
        gbc.setState(0xde30, 0xf2f0, 0xffd0, 0x22e3, 0xb716, 0x9eb7, 0x0, 0x1);
        gbc.writeMem(0xde30, { 0x78 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf2f0, gbc.sp());
        EXPECT(0xde31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xde30));
        // 78 0309
        gbc.setState(0x28c7, 0x8205, 0x1d40, 0xf0ee, 0xad07, 0x3e59, 0x1, 0x0);
        gbc.writeMem(0x28c7, { 0x78 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8205, gbc.sp());
        EXPECT(0x28c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 030A
        gbc.setState(0x2d0c, 0x5a8e, 0x6d50, 0x5e25, 0xed1c, 0x5fd5, 0x1, 0x1);
        gbc.writeMem(0x2d0c, { 0x78 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5a8e, gbc.sp());
        EXPECT(0x2d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 030B
        gbc.setState(0x2005, 0x152c, 0x1d50, 0x5e87, 0x90e2, 0x8a84, 0x0, 0x1);
        gbc.writeMem(0x2005, { 0x78 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x152c, gbc.sp());
        EXPECT(0x2006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 030C
        gbc.setState(0x9c08, 0xe090, 0x2300, 0x76c, 0x3f72, 0xc80, 0x0, 0x0);
        gbc.writeMem(0x9c08, { 0x78 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe090, gbc.sp());
        EXPECT(0x9c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9c08));
        // 78 030D
        gbc.setState(0x9373, 0x596f, 0xb730, 0x42ba, 0x1e34, 0xc536, 0x1, 0x0);
        gbc.writeMem(0x9373, { 0x78 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x596f, gbc.sp());
        EXPECT(0x9374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9373));
        // 78 030E
        gbc.setState(0x4ddc, 0x150a, 0xbb70, 0xc85d, 0xed4e, 0x39a1, 0x0, 0x0);
        gbc.writeMem(0x4ddc, { 0x78 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x150a, gbc.sp());
        EXPECT(0x4ddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 030F
        gbc.setState(0x9957, 0xa7e1, 0x6200, 0x5dc1, 0x7163, 0x70ee, 0x1, 0x0);
        gbc.writeMem(0x9957, { 0x78 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa7e1, gbc.sp());
        EXPECT(0x9958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9957));
        // 78 0310
        gbc.setState(0x36f5, 0xdb7f, 0x2a10, 0x462e, 0x94c4, 0x115e, 0x1, 0x1);
        gbc.writeMem(0x36f5, { 0x78 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xdb7f, gbc.sp());
        EXPECT(0x36f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0311
        gbc.setState(0x11be, 0x35e2, 0x3760, 0xbf50, 0x4589, 0xffe1, 0x0, 0x1);
        gbc.writeMem(0x11be, { 0x78 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x35e2, gbc.sp());
        EXPECT(0x11bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0312
        gbc.setState(0xe95e, 0xef7b, 0x27b0, 0xb475, 0x7e2, 0xbf4d, 0x0, 0x0);
        gbc.writeMem(0xe95e, { 0x78 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xef7b, gbc.sp());
        EXPECT(0xe95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe95e));
        // 78 0313
        gbc.setState(0x66a5, 0x52c8, 0x85f0, 0x40bb, 0x2cef, 0xa544, 0x0, 0x0);
        gbc.writeMem(0x66a5, { 0x78 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x52c8, gbc.sp());
        EXPECT(0x66a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0314
        gbc.setState(0x6e65, 0x656, 0xdde0, 0x32dc, 0x4db3, 0xf0b3, 0x0, 0x1);
        gbc.writeMem(0x6e65, { 0x78 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x656, gbc.sp());
        EXPECT(0x6e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0315
        gbc.setState(0x3fe4, 0xb730, 0x95c0, 0x5d53, 0xcaf3, 0x8e61, 0x0, 0x1);
        gbc.writeMem(0x3fe4, { 0x78 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb730, gbc.sp());
        EXPECT(0x3fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0316
        gbc.setState(0x56e6, 0x51d1, 0xe9c0, 0x1640, 0xaf79, 0xc8a7, 0x0, 0x1);
        gbc.writeMem(0x56e6, { 0x78 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x51d1, gbc.sp());
        EXPECT(0x56e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0317
        gbc.setState(0x976f, 0x2566, 0x3ce0, 0xdb12, 0xafb5, 0xee16, 0x1, 0x0);
        gbc.writeMem(0x976f, { 0x78 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2566, gbc.sp());
        EXPECT(0x9770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x976f));
        // 78 0318
        gbc.setState(0x3fe8, 0x727b, 0xfe50, 0x882d, 0x9f6f, 0xe42c, 0x0, 0x1);
        gbc.writeMem(0x3fe8, { 0x78 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x727b, gbc.sp());
        EXPECT(0x3fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0319
        gbc.setState(0x137, 0xcda0, 0xadc0, 0x983d, 0x90cb, 0x12e5, 0x1, 0x1);
        gbc.writeMem(0x137, { 0x78 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcda0, gbc.sp());
        EXPECT(0x138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 031A
        gbc.setState(0x475b, 0xf0dd, 0x83b0, 0xafab, 0x36f7, 0xa26b, 0x1, 0x0);
        gbc.writeMem(0x475b, { 0x78 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf0dd, gbc.sp());
        EXPECT(0x475c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 031B
        gbc.setState(0xeac8, 0x4573, 0x1490, 0xa283, 0xca23, 0xaacf, 0x0, 0x1);
        gbc.writeMem(0xeac8, { 0x78 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4573, gbc.sp());
        EXPECT(0xeac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xeac8));
        // 78 031C
        gbc.setState(0xc8dc, 0xa5a4, 0x6fa0, 0x3c73, 0x5a3d, 0x6767, 0x0, 0x0);
        gbc.writeMem(0xc8dc, { 0x78 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa5a4, gbc.sp());
        EXPECT(0xc8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc8dc));
        // 78 031D
        gbc.setState(0x39f9, 0x274d, 0xc030, 0x61bc, 0x38af, 0xdc3e, 0x1, 0x1);
        gbc.writeMem(0x39f9, { 0x78 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x274d, gbc.sp());
        EXPECT(0x39fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 031E
        gbc.setState(0x9343, 0xf712, 0x1890, 0xe00c, 0x335f, 0xd20d, 0x0, 0x1);
        gbc.writeMem(0x9343, { 0x78 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf712, gbc.sp());
        EXPECT(0x9344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9343));
        // 78 031F
        gbc.setState(0x53d3, 0x5f66, 0x24f0, 0x3e3d, 0x3f11, 0xeec8, 0x1, 0x1);
        gbc.writeMem(0x53d3, { 0x78 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5f66, gbc.sp());
        EXPECT(0x53d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0320
        gbc.setState(0x119d, 0x9c4b, 0x8d60, 0xa3f8, 0x6d1a, 0xd364, 0x0, 0x1);
        gbc.writeMem(0x119d, { 0x78 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9c4b, gbc.sp());
        EXPECT(0x119e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0321
        gbc.setState(0xe1ed, 0xdaef, 0x250, 0xa0da, 0x6071, 0x3b79, 0x0, 0x1);
        gbc.writeMem(0xe1ed, { 0x78 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdaef, gbc.sp());
        EXPECT(0xe1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe1ed));
        // 78 0322
        gbc.setState(0x9efc, 0xde76, 0xa8b0, 0x5b3e, 0x4f5e, 0xfd50, 0x0, 0x1);
        gbc.writeMem(0x9efc, { 0x78 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xde76, gbc.sp());
        EXPECT(0x9efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9efc));
        // 78 0323
        gbc.setState(0x9eda, 0x6d3f, 0x7190, 0x6c9e, 0x24f0, 0x44d0, 0x0, 0x0);
        gbc.writeMem(0x9eda, { 0x78 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6d3f, gbc.sp());
        EXPECT(0x9edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9eda));
        // 78 0324
        gbc.setState(0x86dc, 0x4141, 0xa9e0, 0xc69e, 0xb10c, 0xe918, 0x0, 0x0);
        gbc.writeMem(0x86dc, { 0x78 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4141, gbc.sp());
        EXPECT(0x86dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x86dc));
        // 78 0325
        gbc.setState(0x393, 0x296, 0xfa30, 0x859f, 0x497e, 0x16e9, 0x0, 0x1);
        gbc.writeMem(0x393, { 0x78 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x296, gbc.sp());
        EXPECT(0x394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0326
        gbc.setState(0xbd1d, 0x6eed, 0xfbf0, 0x4c4f, 0x3d8a, 0xd038, 0x0, 0x1);
        gbc.writeMem(0xbd1d, { 0x78 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6eed, gbc.sp());
        EXPECT(0xbd1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbd1d));
        // 78 0327
        gbc.setState(0x9048, 0x37d9, 0x2290, 0xc823, 0x3f96, 0xf967, 0x0, 0x1);
        gbc.writeMem(0x9048, { 0x78 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x37d9, gbc.sp());
        EXPECT(0x9049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9048));
        // 78 0328
        gbc.setState(0x1716, 0x45b4, 0xcd70, 0x5ae6, 0x2253, 0xb3f2, 0x0, 0x1);
        gbc.writeMem(0x1716, { 0x78 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x45b4, gbc.sp());
        EXPECT(0x1717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0329
        gbc.setState(0x2727, 0xf6c7, 0x7630, 0xed8, 0xa880, 0x7149, 0x1, 0x1);
        gbc.writeMem(0x2727, { 0x78 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf6c7, gbc.sp());
        EXPECT(0x2728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 032A
        gbc.setState(0x3c1c, 0xc36d, 0x5150, 0x136b, 0x1939, 0xe609, 0x0, 0x0);
        gbc.writeMem(0x3c1c, { 0x78 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc36d, gbc.sp());
        EXPECT(0x3c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 032B
        gbc.setState(0x1f72, 0xc84d, 0x2020, 0x2fb5, 0xda99, 0x70c, 0x0, 0x1);
        gbc.writeMem(0x1f72, { 0x78 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc84d, gbc.sp());
        EXPECT(0x1f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 032C
        gbc.setState(0xa529, 0x7949, 0xb9f0, 0x4f9d, 0x9db2, 0xceac, 0x1, 0x1);
        gbc.writeMem(0xa529, { 0x78 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7949, gbc.sp());
        EXPECT(0xa52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa529));
        // 78 032D
        gbc.setState(0x8bf9, 0x5f72, 0x4d30, 0xdbad, 0x2287, 0x1368, 0x1, 0x0);
        gbc.writeMem(0x8bf9, { 0x78 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5f72, gbc.sp());
        EXPECT(0x8bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8bf9));
        // 78 032E
        gbc.setState(0x2500, 0x6389, 0x6780, 0x9dde, 0x7ad0, 0x5177, 0x1, 0x0);
        gbc.writeMem(0x2500, { 0x78 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6389, gbc.sp());
        EXPECT(0x2501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 032F
        gbc.setState(0x2887, 0x25a1, 0x8f60, 0x2b23, 0xd903, 0x4a58, 0x0, 0x0);
        gbc.writeMem(0x2887, { 0x78 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x25a1, gbc.sp());
        EXPECT(0x2888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0330
        gbc.setState(0x8613, 0xbec, 0x5e00, 0xe6e4, 0xe849, 0x3238, 0x1, 0x0);
        gbc.writeMem(0x8613, { 0x78 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbec, gbc.sp());
        EXPECT(0x8614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8613));
        // 78 0331
        gbc.setState(0x252a, 0x93, 0xd530, 0x8517, 0xb4ef, 0xeb00, 0x1, 0x0);
        gbc.writeMem(0x252a, { 0x78 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x93, gbc.sp());
        EXPECT(0x252b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0332
        gbc.setState(0x77c5, 0xa1f3, 0x9730, 0x92d8, 0x2e8c, 0x94f0, 0x0, 0x1);
        gbc.writeMem(0x77c5, { 0x78 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa1f3, gbc.sp());
        EXPECT(0x77c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0333
        gbc.setState(0xe467, 0x7b58, 0x1010, 0x1fe2, 0x1816, 0xdcd1, 0x1, 0x0);
        gbc.writeMem(0xe467, { 0x78 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7b58, gbc.sp());
        EXPECT(0xe468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe467));
        // 78 0334
        gbc.setState(0x6e50, 0x6d8d, 0x52a0, 0x797d, 0xca0d, 0x689d, 0x1, 0x1);
        gbc.writeMem(0x6e50, { 0x78 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6d8d, gbc.sp());
        EXPECT(0x6e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0335
        gbc.setState(0x1cde, 0xf9b9, 0x1440, 0x6f06, 0x4f02, 0xd04, 0x0, 0x1);
        gbc.writeMem(0x1cde, { 0x78 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf9b9, gbc.sp());
        EXPECT(0x1cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0336
        gbc.setState(0x4ecf, 0x615e, 0xe320, 0x5053, 0xf2e1, 0xe4db, 0x1, 0x0);
        gbc.writeMem(0x4ecf, { 0x78 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x615e, gbc.sp());
        EXPECT(0x4ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0338
        gbc.setState(0xda66, 0x841f, 0x6f60, 0xc0b4, 0x1323, 0xfca6, 0x0, 0x0);
        gbc.writeMem(0xda66, { 0x78 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x841f, gbc.sp());
        EXPECT(0xda67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xda66));
        // 78 0339
        gbc.setState(0x56a3, 0xd1a, 0x6110, 0xf7b7, 0x5481, 0x9e8f, 0x0, 0x1);
        gbc.writeMem(0x56a3, { 0x78 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd1a, gbc.sp());
        EXPECT(0x56a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 033A
        gbc.setState(0xaba7, 0xa5ee, 0xd910, 0x5ef0, 0x335d, 0xcff, 0x1, 0x0);
        gbc.writeMem(0xaba7, { 0x78 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa5ee, gbc.sp());
        EXPECT(0xaba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xaba7));
        // 78 033B
        gbc.setState(0xcd0, 0x7c75, 0x2160, 0x68e6, 0x7241, 0x31f0, 0x1, 0x1);
        gbc.writeMem(0xcd0, { 0x78 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7c75, gbc.sp());
        EXPECT(0xcd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 033C
        gbc.setState(0xaf55, 0xa379, 0x6470, 0xb220, 0x440e, 0x868e, 0x0, 0x0);
        gbc.writeMem(0xaf55, { 0x78 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa379, gbc.sp());
        EXPECT(0xaf56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xaf55));
        // 78 033E
        gbc.setState(0x8771, 0x71fe, 0x6c10, 0x9930, 0x285, 0x395, 0x0, 0x1);
        gbc.writeMem(0x8771, { 0x78 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x71fe, gbc.sp());
        EXPECT(0x8772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8771));
        // 78 033F
        gbc.setState(0xc889, 0x944b, 0xdb80, 0x1b7, 0x5a65, 0x6352, 0x0, 0x0);
        gbc.writeMem(0xc889, { 0x78 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x944b, gbc.sp());
        EXPECT(0xc88a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc889));
        // 78 0340
        gbc.setState(0x80f8, 0xd530, 0xfe30, 0x4ff4, 0x1739, 0xdf25, 0x1, 0x0);
        gbc.writeMem(0x80f8, { 0x78 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd530, gbc.sp());
        EXPECT(0x80f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x80f8));
        // 78 0341
        gbc.setState(0xec3e, 0x22b3, 0xe5c0, 0x33e2, 0xa8d9, 0x1922, 0x1, 0x0);
        gbc.writeMem(0xec3e, { 0x78 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x22b3, gbc.sp());
        EXPECT(0xec3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xec3e));
        // 78 0342
        gbc.setState(0xa3c9, 0xd6b6, 0x450, 0xcfe3, 0x177a, 0xf790, 0x1, 0x1);
        gbc.writeMem(0xa3c9, { 0x78 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd6b6, gbc.sp());
        EXPECT(0xa3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa3c9));
        // 78 0343
        gbc.setState(0xc5dd, 0xf21d, 0xe000, 0x8bd8, 0x2943, 0x541d, 0x0, 0x0);
        gbc.writeMem(0xc5dd, { 0x78 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf21d, gbc.sp());
        EXPECT(0xc5de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc5dd));
        // 78 0344
        gbc.setState(0x6969, 0xf08c, 0x2270, 0xbf07, 0x5fcb, 0xb762, 0x0, 0x1);
        gbc.writeMem(0x6969, { 0x78 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf08c, gbc.sp());
        EXPECT(0x696a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0345
        gbc.setState(0x3580, 0x31e7, 0x4fc0, 0x6fcc, 0x9d76, 0x330f, 0x0, 0x1);
        gbc.writeMem(0x3580, { 0x78 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x31e7, gbc.sp());
        EXPECT(0x3581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0346
        gbc.setState(0xb7a8, 0x1239, 0x47d0, 0x8504, 0x2e53, 0x4018, 0x1, 0x1);
        gbc.writeMem(0xb7a8, { 0x78 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1239, gbc.sp());
        EXPECT(0xb7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb7a8));
        // 78 0347
        gbc.setState(0xee75, 0xd1ab, 0xb3b0, 0xe323, 0xb94, 0xf8eb, 0x1, 0x0);
        gbc.writeMem(0xee75, { 0x78 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd1ab, gbc.sp());
        EXPECT(0xee76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xee75));
        // 78 0348
        gbc.setState(0x5447, 0x9c3d, 0x2510, 0x6794, 0xa58d, 0x82a, 0x0, 0x0);
        gbc.writeMem(0x5447, { 0x78 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9c3d, gbc.sp());
        EXPECT(0x5448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0349
        gbc.setState(0xe832, 0xfa02, 0x9da0, 0x38c2, 0xb37f, 0x861f, 0x1, 0x1);
        gbc.writeMem(0xe832, { 0x78 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfa02, gbc.sp());
        EXPECT(0xe833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe832));
        // 78 034A
        gbc.setState(0x494f, 0x2043, 0x2f30, 0x587b, 0xa039, 0xe5f8, 0x0, 0x0);
        gbc.writeMem(0x494f, { 0x78 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2043, gbc.sp());
        EXPECT(0x4950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 034B
        gbc.setState(0xd973, 0x8f0d, 0x4520, 0x350d, 0x52e, 0xe03c, 0x1, 0x0);
        gbc.writeMem(0xd973, { 0x78 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8f0d, gbc.sp());
        EXPECT(0xd974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd973));
        // 78 034C
        gbc.setState(0x6a93, 0x981a, 0xea40, 0x56c9, 0xa75c, 0x343d, 0x0, 0x1);
        gbc.writeMem(0x6a93, { 0x78 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x981a, gbc.sp());
        EXPECT(0x6a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 034D
        gbc.setState(0xabb7, 0xa421, 0xcfe0, 0x5fc7, 0xb83a, 0x75a9, 0x1, 0x0);
        gbc.writeMem(0xabb7, { 0x78 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa421, gbc.sp());
        EXPECT(0xabb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xabb7));
        // 78 034E
        gbc.setState(0xa12d, 0x19ea, 0x9470, 0xc413, 0xd4e1, 0x1615, 0x1, 0x1);
        gbc.writeMem(0xa12d, { 0x78 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x19ea, gbc.sp());
        EXPECT(0xa12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa12d));
        // 78 034F
        gbc.setState(0xdd35, 0x12c5, 0xcd80, 0x48ee, 0x8031, 0xb324, 0x1, 0x1);
        gbc.writeMem(0xdd35, { 0x78 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x12c5, gbc.sp());
        EXPECT(0xdd36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdd35));
        // 78 0350
        gbc.setState(0x96b7, 0x466, 0x2fc0, 0xb532, 0xca18, 0x921d, 0x1, 0x1);
        gbc.writeMem(0x96b7, { 0x78 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x466, gbc.sp());
        EXPECT(0x96b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x96b7));
        // 78 0351
        gbc.setState(0x17e2, 0x2f4a, 0xa7c0, 0x9a24, 0xfef0, 0x542f, 0x0, 0x0);
        gbc.writeMem(0x17e2, { 0x78 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2f4a, gbc.sp());
        EXPECT(0x17e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0352
        gbc.setState(0xe6db, 0x325, 0x8bd0, 0x2717, 0xe488, 0xede2, 0x0, 0x1);
        gbc.writeMem(0xe6db, { 0x78 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x325, gbc.sp());
        EXPECT(0xe6dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe6db));
        // 78 0353
        gbc.setState(0x2727, 0xbe88, 0x29d0, 0x876, 0x9b6e, 0xfdf8, 0x0, 0x1);
        gbc.writeMem(0x2727, { 0x78 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbe88, gbc.sp());
        EXPECT(0x2728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0354
        gbc.setState(0x766a, 0x54be, 0xe660, 0xe884, 0x865a, 0x2108, 0x0, 0x1);
        gbc.writeMem(0x766a, { 0x78 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x54be, gbc.sp());
        EXPECT(0x766b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0355
        gbc.setState(0x98db, 0xa106, 0xeef0, 0xc047, 0xb552, 0xde5a, 0x1, 0x0);
        gbc.writeMem(0x98db, { 0x78 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa106, gbc.sp());
        EXPECT(0x98dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x98db));
        // 78 0356
        gbc.setState(0xbfcf, 0xc5ae, 0x2d80, 0x719f, 0x35dd, 0x4177, 0x0, 0x1);
        gbc.writeMem(0xbfcf, { 0x78 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc5ae, gbc.sp());
        EXPECT(0xbfd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbfcf));
        // 78 0357
        gbc.setState(0x20a, 0xde8c, 0x2100, 0x3a2e, 0x6d76, 0xfbfe, 0x1, 0x1);
        gbc.writeMem(0x20a, { 0x78 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xde8c, gbc.sp());
        EXPECT(0x20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0358
        gbc.setState(0xd63d, 0xc401, 0x65d0, 0x6405, 0x9691, 0xcacf, 0x0, 0x1);
        gbc.writeMem(0xd63d, { 0x78 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc401, gbc.sp());
        EXPECT(0xd63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd63d));
        // 78 0359
        gbc.setState(0xadff, 0x9b52, 0xea0, 0x91ef, 0x386d, 0x7b74, 0x0, 0x0);
        gbc.writeMem(0xadff, { 0x78 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9b52, gbc.sp());
        EXPECT(0xae00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xadff));
        // 78 035B
        gbc.setState(0x2770, 0x9be6, 0xa210, 0x4102, 0xff65, 0x34e1, 0x1, 0x0);
        gbc.writeMem(0x2770, { 0x78 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9be6, gbc.sp());
        EXPECT(0x2771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 035C
        gbc.setState(0x88d, 0xec09, 0x2380, 0x780, 0xad69, 0xd39c, 0x1, 0x0);
        gbc.writeMem(0x88d, { 0x78 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xec09, gbc.sp());
        EXPECT(0x88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 035D
        gbc.setState(0xb5f2, 0x2244, 0x3030, 0x84a2, 0xe4dc, 0x7ccc, 0x0, 0x0);
        gbc.writeMem(0xb5f2, { 0x78 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2244, gbc.sp());
        EXPECT(0xb5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb5f2));
        // 78 035E
        gbc.setState(0x8a57, 0xfd16, 0x8e50, 0x3482, 0x31e4, 0x37b4, 0x0, 0x0);
        gbc.writeMem(0x8a57, { 0x78 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfd16, gbc.sp());
        EXPECT(0x8a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8a57));
        // 78 035F
        gbc.setState(0xd5b8, 0x558b, 0xd070, 0xa757, 0x27e7, 0x8bad, 0x0, 0x1);
        gbc.writeMem(0xd5b8, { 0x78 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x558b, gbc.sp());
        EXPECT(0xd5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd5b8));
        // 78 0360
        gbc.setState(0x9f7e, 0xcc9b, 0x6770, 0xd045, 0xa6c2, 0x406a, 0x0, 0x1);
        gbc.writeMem(0x9f7e, { 0x78 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xcc9b, gbc.sp());
        EXPECT(0x9f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9f7e));
        // 78 0361
        gbc.setState(0xbc7d, 0xcbec, 0x9240, 0x38e2, 0xce29, 0x5f4e, 0x0, 0x0);
        gbc.writeMem(0xbc7d, { 0x78 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcbec, gbc.sp());
        EXPECT(0xbc7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbc7d));
        // 78 0362
        gbc.setState(0x354d, 0x33a6, 0xc5d0, 0xc341, 0xcc1b, 0x988f, 0x0, 0x1);
        gbc.writeMem(0x354d, { 0x78 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x33a6, gbc.sp());
        EXPECT(0x354e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0363
        gbc.setState(0x4bec, 0x96b0, 0xbc0, 0x1d05, 0x6259, 0x994, 0x1, 0x1);
        gbc.writeMem(0x4bec, { 0x78 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x96b0, gbc.sp());
        EXPECT(0x4bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0364
        gbc.setState(0x990b, 0x6b0e, 0x2e90, 0xe338, 0xc71f, 0x2ff9, 0x0, 0x1);
        gbc.writeMem(0x990b, { 0x78 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6b0e, gbc.sp());
        EXPECT(0x990c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x990b));
        // 78 0365
        gbc.setState(0xad42, 0xaa01, 0xc540, 0xe94f, 0x699c, 0xa9f7, 0x1, 0x0);
        gbc.writeMem(0xad42, { 0x78 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaa01, gbc.sp());
        EXPECT(0xad43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xad42));
        // 78 0366
        gbc.setState(0x40a6, 0xea84, 0xc2c0, 0x34ab, 0x427a, 0xc2d9, 0x0, 0x1);
        gbc.writeMem(0x40a6, { 0x78 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xea84, gbc.sp());
        EXPECT(0x40a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0368
        gbc.setState(0xb679, 0xe521, 0xaa50, 0x478f, 0x1108, 0xc03e, 0x1, 0x0);
        gbc.writeMem(0xb679, { 0x78 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe521, gbc.sp());
        EXPECT(0xb67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb679));
        // 78 0369
        gbc.setState(0xaea5, 0xed87, 0x63e0, 0xaff9, 0x3ea4, 0x2592, 0x1, 0x0);
        gbc.writeMem(0xaea5, { 0x78 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xed87, gbc.sp());
        EXPECT(0xaea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xaea5));
        // 78 036A
        gbc.setState(0x8d25, 0xe37d, 0x1cf0, 0xf5b6, 0x9e2d, 0x2c9b, 0x0, 0x1);
        gbc.writeMem(0x8d25, { 0x78 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe37d, gbc.sp());
        EXPECT(0x8d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8d25));
        // 78 036B
        gbc.setState(0xd43a, 0x533d, 0x77c0, 0xd6a, 0x212e, 0x3c45, 0x0, 0x0);
        gbc.writeMem(0xd43a, { 0x78 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x533d, gbc.sp());
        EXPECT(0xd43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd43a));
        // 78 036C
        gbc.setState(0x127e, 0x9dab, 0x76f0, 0x3ec8, 0x4bd3, 0x35f8, 0x1, 0x0);
        gbc.writeMem(0x127e, { 0x78 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9dab, gbc.sp());
        EXPECT(0x127f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 036D
        gbc.setState(0x4ed1, 0xd1b6, 0xbe80, 0xb140, 0xbb06, 0xc801, 0x1, 0x0);
        gbc.writeMem(0x4ed1, { 0x78 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd1b6, gbc.sp());
        EXPECT(0x4ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 036E
        gbc.setState(0x14a4, 0xf499, 0x51a0, 0x1f06, 0x6855, 0xe61, 0x0, 0x1);
        gbc.writeMem(0x14a4, { 0x78 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf499, gbc.sp());
        EXPECT(0x14a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 036F
        gbc.setState(0xa697, 0xf183, 0x2ba0, 0xf920, 0x162d, 0x24cb, 0x1, 0x1);
        gbc.writeMem(0xa697, { 0x78 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf183, gbc.sp());
        EXPECT(0xa698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa697));
        // 78 0370
        gbc.setState(0xa8f1, 0xb545, 0x2290, 0x7e2, 0x2b3e, 0x8d6a, 0x0, 0x0);
        gbc.writeMem(0xa8f1, { 0x78 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb545, gbc.sp());
        EXPECT(0xa8f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa8f1));
        // 78 0372
        gbc.setState(0xc01e, 0xcbc3, 0x9fd0, 0xa2ec, 0x1f6b, 0x4da1, 0x0, 0x1);
        gbc.writeMem(0xc01e, { 0x78 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcbc3, gbc.sp());
        EXPECT(0xc01f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc01e));
        // 78 0373
        gbc.setState(0xfc5, 0xcfd3, 0x5e0, 0xd754, 0x50c, 0xc3, 0x0, 0x0);
        gbc.writeMem(0xfc5, { 0x78 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcfd3, gbc.sp());
        EXPECT(0xfc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0374
        gbc.setState(0xc134, 0xe90, 0xbc30, 0x1b21, 0x8cb0, 0x7e48, 0x1, 0x1);
        gbc.writeMem(0xc134, { 0x78 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe90, gbc.sp());
        EXPECT(0xc135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc134));
        // 78 0376
        gbc.setState(0x1c70, 0x3ce5, 0x88f0, 0xd18c, 0x1402, 0xa227, 0x0, 0x0);
        gbc.writeMem(0x1c70, { 0x78 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3ce5, gbc.sp());
        EXPECT(0x1c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0377
        gbc.setState(0xae42, 0x169c, 0xd720, 0x21fb, 0x45b9, 0xd526, 0x0, 0x1);
        gbc.writeMem(0xae42, { 0x78 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x169c, gbc.sp());
        EXPECT(0xae43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xae42));
        // 78 0378
        gbc.setState(0x5274, 0xb79e, 0x6a50, 0x1c61, 0x73c8, 0xdb61, 0x0, 0x1);
        gbc.writeMem(0x5274, { 0x78 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb79e, gbc.sp());
        EXPECT(0x5275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0379
        gbc.setState(0x86cc, 0x3528, 0x3cf0, 0x7e0e, 0x30c8, 0x5afe, 0x0, 0x0);
        gbc.writeMem(0x86cc, { 0x78 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3528, gbc.sp());
        EXPECT(0x86cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x86cc));
        // 78 037A
        gbc.setState(0x8b28, 0xc1fd, 0x14c0, 0xcc4c, 0x8c79, 0xbdd6, 0x1, 0x1);
        gbc.writeMem(0x8b28, { 0x78 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc1fd, gbc.sp());
        EXPECT(0x8b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8b28));
        // 78 037B
        gbc.setState(0xddd3, 0x1fa7, 0x6700, 0x3cd1, 0xf378, 0x4b8c, 0x1, 0x0);
        gbc.writeMem(0xddd3, { 0x78 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1fa7, gbc.sp());
        EXPECT(0xddd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xddd3));
        // 78 037C
        gbc.setState(0x4487, 0x4217, 0x3c30, 0x82fa, 0x84a4, 0x2962, 0x1, 0x0);
        gbc.writeMem(0x4487, { 0x78 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4217, gbc.sp());
        EXPECT(0x4488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 037D
        gbc.setState(0x597c, 0x72d, 0x3160, 0x3244, 0xef67, 0xb8c, 0x0, 0x1);
        gbc.writeMem(0x597c, { 0x78 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x72d, gbc.sp());
        EXPECT(0x597d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 037E
        gbc.setState(0x4bf9, 0x567e, 0x9530, 0xe2a3, 0x3cc4, 0x72c6, 0x1, 0x0);
        gbc.writeMem(0x4bf9, { 0x78 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x567e, gbc.sp());
        EXPECT(0x4bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 037F
        gbc.setState(0x582a, 0xe7ca, 0xd6b0, 0x8134, 0x3dd8, 0x1a51, 0x0, 0x1);
        gbc.writeMem(0x582a, { 0x78 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe7ca, gbc.sp());
        EXPECT(0x582b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0380
        gbc.setState(0xc35d, 0x1f3d, 0xa480, 0x3f9c, 0x14e5, 0xab2d, 0x0, 0x0);
        gbc.writeMem(0xc35d, { 0x78 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1f3d, gbc.sp());
        EXPECT(0xc35e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc35d));
        // 78 0381
        gbc.setState(0x5907, 0x9e8f, 0x9800, 0xa617, 0x4d2f, 0x9352, 0x0, 0x1);
        gbc.writeMem(0x5907, { 0x78 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9e8f, gbc.sp());
        EXPECT(0x5908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0382
        gbc.setState(0x1145, 0x317b, 0xc440, 0x8131, 0x7b13, 0x7d7c, 0x0, 0x1);
        gbc.writeMem(0x1145, { 0x78 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x317b, gbc.sp());
        EXPECT(0x1146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0383
        gbc.setState(0xe56e, 0xb348, 0x3260, 0xe89d, 0x32b5, 0xa5c, 0x1, 0x0);
        gbc.writeMem(0xe56e, { 0x78 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb348, gbc.sp());
        EXPECT(0xe56f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe56e));
        // 78 0384
        gbc.setState(0x5a31, 0x38d9, 0x7a10, 0xa6e, 0x5dba, 0xaf6f, 0x1, 0x0);
        gbc.writeMem(0x5a31, { 0x78 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x38d9, gbc.sp());
        EXPECT(0x5a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0385
        gbc.setState(0xb2aa, 0x5572, 0x7ab0, 0x5c28, 0x66bc, 0x785, 0x1, 0x0);
        gbc.writeMem(0xb2aa, { 0x78 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5572, gbc.sp());
        EXPECT(0xb2ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb2aa));
        // 78 0386
        gbc.setState(0x8bcb, 0x2c38, 0x73b0, 0x71b6, 0x57d8, 0x325a, 0x1, 0x0);
        gbc.writeMem(0x8bcb, { 0x78 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2c38, gbc.sp());
        EXPECT(0x8bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8bcb));
        // 78 0387
        gbc.setState(0x4ea6, 0x9b64, 0xa580, 0xc637, 0xbafc, 0x37ac, 0x1, 0x1);
        gbc.writeMem(0x4ea6, { 0x78 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9b64, gbc.sp());
        EXPECT(0x4ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0388
        gbc.setState(0xe14b, 0xe009, 0xa3d0, 0xa0f, 0x688b, 0x6d5e, 0x1, 0x0);
        gbc.writeMem(0xe14b, { 0x78 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe009, gbc.sp());
        EXPECT(0xe14c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe14b));
        // 78 0389
        gbc.setState(0x3c24, 0xc6a2, 0xeee0, 0x615b, 0x3172, 0xe77f, 0x1, 0x1);
        gbc.writeMem(0x3c24, { 0x78 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc6a2, gbc.sp());
        EXPECT(0x3c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 038A
        gbc.setState(0xa10b, 0x31e4, 0x9990, 0x8468, 0x128d, 0x2836, 0x0, 0x0);
        gbc.writeMem(0xa10b, { 0x78 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x31e4, gbc.sp());
        EXPECT(0xa10c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa10b));
        // 78 038B
        gbc.setState(0xb75d, 0xa105, 0x2e50, 0x1bc2, 0xf77a, 0x5243, 0x1, 0x0);
        gbc.writeMem(0xb75d, { 0x78 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa105, gbc.sp());
        EXPECT(0xb75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb75d));
        // 78 038C
        gbc.setState(0x9907, 0x7e32, 0xb420, 0x3044, 0x13d1, 0xb609, 0x1, 0x1);
        gbc.writeMem(0x9907, { 0x78 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7e32, gbc.sp());
        EXPECT(0x9908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9907));
        // 78 038D
        gbc.setState(0xb380, 0xc7c2, 0x2f50, 0x372f, 0x7372, 0xa3fa, 0x0, 0x1);
        gbc.writeMem(0xb380, { 0x78 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc7c2, gbc.sp());
        EXPECT(0xb381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb380));
        // 78 038E
        gbc.setState(0x41cb, 0x7b87, 0x4f20, 0xda18, 0x3563, 0xbed6, 0x0, 0x1);
        gbc.writeMem(0x41cb, { 0x78 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7b87, gbc.sp());
        EXPECT(0x41cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 038F
        gbc.setState(0x72ff, 0xe533, 0x9660, 0x7f64, 0xfca0, 0x3397, 0x0, 0x0);
        gbc.writeMem(0x72ff, { 0x78 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe533, gbc.sp());
        EXPECT(0x7300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0390
        gbc.setState(0x4cf, 0x38ba, 0xb390, 0x8575, 0xd904, 0x1aea, 0x0, 0x0);
        gbc.writeMem(0x4cf, { 0x78 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x38ba, gbc.sp());
        EXPECT(0x4d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0391
        gbc.setState(0x52c1, 0xa09b, 0xaec0, 0x94a3, 0xb3a4, 0x8514, 0x1, 0x1);
        gbc.writeMem(0x52c1, { 0x78 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa09b, gbc.sp());
        EXPECT(0x52c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0392
        gbc.setState(0x54b1, 0x35ad, 0x6af0, 0x8eaf, 0x3b19, 0x9300, 0x0, 0x0);
        gbc.writeMem(0x54b1, { 0x78 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x35ad, gbc.sp());
        EXPECT(0x54b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 0393
        gbc.setState(0xd126, 0xc990, 0xbab0, 0xccdb, 0xc434, 0x40d1, 0x1, 0x0);
        gbc.writeMem(0xd126, { 0x78 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc990, gbc.sp());
        EXPECT(0xd127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd126));
        // 78 0394
        gbc.setState(0xa9c2, 0xba9a, 0x3320, 0x60f9, 0x35b5, 0x1f0e, 0x0, 0x0);
        gbc.writeMem(0xa9c2, { 0x78 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xba9a, gbc.sp());
        EXPECT(0xa9c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa9c2));
        // 78 0396
        gbc.setState(0xcc48, 0x80d, 0x72f0, 0xf7e1, 0x75bd, 0xf5d5, 0x1, 0x1);
        gbc.writeMem(0xcc48, { 0x78 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x80d, gbc.sp());
        EXPECT(0xcc49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcc48));
        // 78 0397
        gbc.setState(0x6b87, 0x1590, 0xe420, 0x5f54, 0xde0f, 0xe4bf, 0x1, 0x0);
        gbc.writeMem(0x6b87, { 0x78 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1590, gbc.sp());
        EXPECT(0x6b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 0398
        gbc.setState(0xbc05, 0xad72, 0xf320, 0xb885, 0x2936, 0x6257, 0x0, 0x0);
        gbc.writeMem(0xbc05, { 0x78 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xad72, gbc.sp());
        EXPECT(0xbc06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbc05));
        // 78 0399
        gbc.setState(0x84dd, 0x4257, 0xdd30, 0x62cf, 0xb891, 0xb393, 0x0, 0x1);
        gbc.writeMem(0x84dd, { 0x78 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4257, gbc.sp());
        EXPECT(0x84de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x84dd));
        // 78 039A
        gbc.setState(0x651, 0x2795, 0xc4f0, 0xdb54, 0xfc52, 0x1e2a, 0x1, 0x1);
        gbc.writeMem(0x651, { 0x78 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2795, gbc.sp());
        EXPECT(0x652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 039B
        gbc.setState(0xc63e, 0xfa6a, 0x6c40, 0xd249, 0x7106, 0x9c01, 0x1, 0x0);
        gbc.writeMem(0xc63e, { 0x78 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfa6a, gbc.sp());
        EXPECT(0xc63f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc63e));
        // 78 039C
        gbc.setState(0x8466, 0xccb, 0x8a50, 0xbba5, 0xe44d, 0x7a87, 0x1, 0x0);
        gbc.writeMem(0x8466, { 0x78 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xccb, gbc.sp());
        EXPECT(0x8467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8466));
        // 78 039D
        gbc.setState(0x298, 0xbcdd, 0x11b0, 0xe3e3, 0xa572, 0xb45b, 0x0, 0x0);
        gbc.writeMem(0x298, { 0x78 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbcdd, gbc.sp());
        EXPECT(0x299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 039F
        gbc.setState(0x6707, 0xa984, 0x58a0, 0x7e3f, 0x47e8, 0xc792, 0x0, 0x1);
        gbc.writeMem(0x6707, { 0x78 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa984, gbc.sp());
        EXPECT(0x6708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03A0
        gbc.setState(0x2117, 0xea7f, 0x7d90, 0xcd5, 0x915b, 0x3dec, 0x1, 0x0);
        gbc.writeMem(0x2117, { 0x78 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xea7f, gbc.sp());
        EXPECT(0x2118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03A1
        gbc.setState(0x3fa0, 0xfffd, 0x4d50, 0x5de2, 0x3d52, 0xb9f5, 0x1, 0x0);
        gbc.writeMem(0x3fa0, { 0x78 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfffd, gbc.sp());
        EXPECT(0x3fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03A3
        gbc.setState(0x86f7, 0x2644, 0x21d0, 0x137a, 0xebf8, 0xca37, 0x0, 0x0);
        gbc.writeMem(0x86f7, { 0x78 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2644, gbc.sp());
        EXPECT(0x86f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x86f7));
        // 78 03A4
        gbc.setState(0x2454, 0xacd1, 0x7bd0, 0xa100, 0x4092, 0xa87a, 0x1, 0x0);
        gbc.writeMem(0x2454, { 0x78 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xacd1, gbc.sp());
        EXPECT(0x2455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03A5
        gbc.setState(0x297e, 0xb6b3, 0x35f0, 0x63ac, 0xc084, 0x5b30, 0x0, 0x1);
        gbc.writeMem(0x297e, { 0x78 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb6b3, gbc.sp());
        EXPECT(0x297f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03A6
        gbc.setState(0xef36, 0x1ff4, 0x2450, 0x1620, 0xb423, 0x1f4b, 0x0, 0x0);
        gbc.writeMem(0xef36, { 0x78 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1ff4, gbc.sp());
        EXPECT(0xef37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xef36));
        // 78 03A7
        gbc.setState(0x3f71, 0xc9c3, 0x5600, 0xabfe, 0x4335, 0x96db, 0x0, 0x0);
        gbc.writeMem(0x3f71, { 0x78 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc9c3, gbc.sp());
        EXPECT(0x3f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03A8
        gbc.setState(0x5ca4, 0xb053, 0xb0b0, 0x8775, 0xefc8, 0x61d1, 0x0, 0x1);
        gbc.writeMem(0x5ca4, { 0x78 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb053, gbc.sp());
        EXPECT(0x5ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03A9
        gbc.setState(0x6d71, 0xeec, 0xcc10, 0xb89d, 0xdf49, 0x9751, 0x0, 0x1);
        gbc.writeMem(0x6d71, { 0x78 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xeec, gbc.sp());
        EXPECT(0x6d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03AA
        gbc.setState(0xd70a, 0x44d9, 0x7db0, 0x817f, 0x2385, 0xe7e7, 0x1, 0x0);
        gbc.writeMem(0xd70a, { 0x78 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x44d9, gbc.sp());
        EXPECT(0xd70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd70a));
        // 78 03AB
        gbc.setState(0x4766, 0x14c8, 0x6050, 0xb9c8, 0x8ae1, 0xf3a0, 0x0, 0x0);
        gbc.writeMem(0x4766, { 0x78 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x14c8, gbc.sp());
        EXPECT(0x4767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03AC
        gbc.setState(0xd799, 0x8968, 0x8660, 0x5399, 0x52, 0x13f2, 0x0, 0x0);
        gbc.writeMem(0xd799, { 0x78 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8968, gbc.sp());
        EXPECT(0xd79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd799));
        // 78 03AD
        gbc.setState(0x23db, 0xba17, 0xef00, 0xb69b, 0xf723, 0x27df, 0x1, 0x0);
        gbc.writeMem(0x23db, { 0x78 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xba17, gbc.sp());
        EXPECT(0x23dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03AE
        gbc.setState(0xdde1, 0x40b6, 0xf410, 0xc39a, 0x728c, 0x6846, 0x1, 0x0);
        gbc.writeMem(0xdde1, { 0x78 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x40b6, gbc.sp());
        EXPECT(0xdde2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdde1));
        // 78 03AF
        gbc.setState(0xe06c, 0xa602, 0xa610, 0x1ac6, 0x8187, 0xf86f, 0x1, 0x0);
        gbc.writeMem(0xe06c, { 0x78 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa602, gbc.sp());
        EXPECT(0xe06d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe06c));
        // 78 03B0
        gbc.setState(0x56e6, 0x60c9, 0xd7c0, 0x5a67, 0x688b, 0xbb22, 0x1, 0x0);
        gbc.writeMem(0x56e6, { 0x78 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x60c9, gbc.sp());
        EXPECT(0x56e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03B1
        gbc.setState(0x7606, 0xa8ea, 0xf340, 0x6821, 0xe40d, 0x157d, 0x0, 0x1);
        gbc.writeMem(0x7606, { 0x78 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa8ea, gbc.sp());
        EXPECT(0x7607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03B2
        gbc.setState(0x838f, 0x789e, 0x2a0, 0xd2e9, 0x1cae, 0x7bab, 0x0, 0x1);
        gbc.writeMem(0x838f, { 0x78 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x789e, gbc.sp());
        EXPECT(0x8390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x838f));
        // 78 03B4
        gbc.setState(0xa8dc, 0xe2d6, 0xcbd0, 0x866e, 0x6b2d, 0x6f78, 0x0, 0x0);
        gbc.writeMem(0xa8dc, { 0x78 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe2d6, gbc.sp());
        EXPECT(0xa8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa8dc));
        // 78 03B5
        gbc.setState(0xe168, 0x898b, 0xbb0, 0x6d24, 0x887b, 0x94c6, 0x0, 0x0);
        gbc.writeMem(0xe168, { 0x78 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x898b, gbc.sp());
        EXPECT(0xe169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe168));
        // 78 03B6
        gbc.setState(0xcfbb, 0x93be, 0x6b80, 0xc98c, 0xb72a, 0x4f7e, 0x1, 0x0);
        gbc.writeMem(0xcfbb, { 0x78 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x93be, gbc.sp());
        EXPECT(0xcfbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcfbb));
        // 78 03B7
        gbc.setState(0x274, 0xe984, 0xcc0, 0xf74f, 0xb9e4, 0xec1c, 0x0, 0x0);
        gbc.writeMem(0x274, { 0x78 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe984, gbc.sp());
        EXPECT(0x275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03B8
        gbc.setState(0x5b1c, 0xfa06, 0x5220, 0x3285, 0x17eb, 0x1157, 0x0, 0x0);
        gbc.writeMem(0x5b1c, { 0x78 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfa06, gbc.sp());
        EXPECT(0x5b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03B9
        gbc.setState(0x6850, 0xb36f, 0xd660, 0xe742, 0x8947, 0x5531, 0x0, 0x0);
        gbc.writeMem(0x6850, { 0x78 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb36f, gbc.sp());
        EXPECT(0x6851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03BA
        gbc.setState(0x713d, 0x2329, 0xeae0, 0x59ae, 0x9162, 0x9f6b, 0x0, 0x0);
        gbc.writeMem(0x713d, { 0x78 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2329, gbc.sp());
        EXPECT(0x713e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03BB
        gbc.setState(0x803f, 0xf203, 0x6410, 0x988c, 0x2b64, 0xc231, 0x0, 0x0);
        gbc.writeMem(0x803f, { 0x78 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf203, gbc.sp());
        EXPECT(0x8040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x803f));
        // 78 03BC
        gbc.setState(0xaee0, 0x9aec, 0xd030, 0xc4d, 0xef09, 0x4384, 0x0, 0x1);
        gbc.writeMem(0xaee0, { 0x78 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9aec, gbc.sp());
        EXPECT(0xaee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xaee0));
        // 78 03BD
        gbc.setState(0xa2b2, 0x3de6, 0xa120, 0xd7ae, 0x6273, 0x9730, 0x1, 0x1);
        gbc.writeMem(0xa2b2, { 0x78 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3de6, gbc.sp());
        EXPECT(0xa2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa2b2));
        // 78 03BE
        gbc.setState(0x7b0a, 0x2f81, 0x1490, 0x2378, 0xb524, 0x13e7, 0x0, 0x0);
        gbc.writeMem(0x7b0a, { 0x78 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2f81, gbc.sp());
        EXPECT(0x7b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03BF
        gbc.setState(0xd78e, 0x2d84, 0x5d0, 0x79d0, 0x1bf3, 0x1d84, 0x1, 0x1);
        gbc.writeMem(0xd78e, { 0x78 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2d84, gbc.sp());
        EXPECT(0xd78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd78e));
        // 78 03C0
        gbc.setState(0xbe1b, 0xb747, 0x5910, 0x8648, 0xe228, 0xc563, 0x0, 0x1);
        gbc.writeMem(0xbe1b, { 0x78 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb747, gbc.sp());
        EXPECT(0xbe1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbe1b));
        // 78 03C1
        gbc.setState(0xebfc, 0x9afc, 0xa440, 0x398, 0xc928, 0xfb57, 0x1, 0x0);
        gbc.writeMem(0xebfc, { 0x78 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9afc, gbc.sp());
        EXPECT(0xebfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xebfc));
        // 78 03C2
        gbc.setState(0xc0e0, 0xa4db, 0x2670, 0x51a3, 0xbec4, 0xca9d, 0x0, 0x0);
        gbc.writeMem(0xc0e0, { 0x78 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa4db, gbc.sp());
        EXPECT(0xc0e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc0e0));
        // 78 03C3
        gbc.setState(0x94ff, 0xfa47, 0xbc90, 0x2b38, 0xe286, 0x5160, 0x1, 0x0);
        gbc.writeMem(0x94ff, { 0x78 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfa47, gbc.sp());
        EXPECT(0x9500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x94ff));
        // 78 03C4
        gbc.setState(0x1b70, 0xb359, 0xee20, 0xc25, 0x6170, 0xf29, 0x0, 0x1);
        gbc.writeMem(0x1b70, { 0x78 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb359, gbc.sp());
        EXPECT(0x1b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03C5
        gbc.setState(0xc642, 0x21ba, 0x2080, 0x18f5, 0x6ee8, 0xd112, 0x1, 0x0);
        gbc.writeMem(0xc642, { 0x78 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x21ba, gbc.sp());
        EXPECT(0xc643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc642));
        // 78 03C6
        gbc.setState(0xb5a9, 0xa816, 0xc2e0, 0xa584, 0x98e8, 0xd5a6, 0x0, 0x1);
        gbc.writeMem(0xb5a9, { 0x78 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa816, gbc.sp());
        EXPECT(0xb5aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb5a9));
        // 78 03C7
        gbc.setState(0x8e8, 0xf9d4, 0xf110, 0xfa1d, 0x1b06, 0x948, 0x1, 0x0);
        gbc.writeMem(0x8e8, { 0x78 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf9d4, gbc.sp());
        EXPECT(0x8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03C8
        gbc.setState(0xec1, 0x74e, 0x1a90, 0x1a13, 0xcda3, 0xb63a, 0x1, 0x0);
        gbc.writeMem(0xec1, { 0x78 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x74e, gbc.sp());
        EXPECT(0xec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03C9
        gbc.setState(0x3af9, 0xcc05, 0x31a0, 0x5cbf, 0x663, 0xaa5f, 0x0, 0x1);
        gbc.writeMem(0x3af9, { 0x78 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcc05, gbc.sp());
        EXPECT(0x3afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03CA
        gbc.setState(0x8cb3, 0xd33, 0x2720, 0x9203, 0x1563, 0xcff, 0x1, 0x1);
        gbc.writeMem(0x8cb3, { 0x78 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd33, gbc.sp());
        EXPECT(0x8cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8cb3));
        // 78 03CC
        gbc.setState(0x75b4, 0xa24e, 0xec00, 0x5af9, 0x3072, 0x35c5, 0x1, 0x0);
        gbc.writeMem(0x75b4, { 0x78 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa24e, gbc.sp());
        EXPECT(0x75b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03CD
        gbc.setState(0x6a49, 0x5c5f, 0x85b0, 0x9832, 0x6c00, 0x85bc, 0x1, 0x1);
        gbc.writeMem(0x6a49, { 0x78 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5c5f, gbc.sp());
        EXPECT(0x6a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03CE
        gbc.setState(0x876b, 0x7b2f, 0x8b00, 0x732b, 0x464a, 0xdf53, 0x1, 0x1);
        gbc.writeMem(0x876b, { 0x78 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7b2f, gbc.sp());
        EXPECT(0x876c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x876b));
        // 78 03CF
        gbc.setState(0x8e48, 0x57d5, 0xd3f0, 0x4dd5, 0x55a3, 0xd366, 0x0, 0x1);
        gbc.writeMem(0x8e48, { 0x78 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x57d5, gbc.sp());
        EXPECT(0x8e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8e48));
        // 78 03D0
        gbc.setState(0xbab4, 0x5fc7, 0x3610, 0x353a, 0xe3d5, 0xc16b, 0x1, 0x0);
        gbc.writeMem(0xbab4, { 0x78 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5fc7, gbc.sp());
        EXPECT(0xbab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbab4));
        // 78 03D1
        gbc.setState(0xb668, 0x7da7, 0xea80, 0xd9b1, 0xa24a, 0x6828, 0x0, 0x1);
        gbc.writeMem(0xb668, { 0x78 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7da7, gbc.sp());
        EXPECT(0xb669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb668));
        // 78 03D2
        gbc.setState(0x8c44, 0x490, 0xee0, 0x1834, 0x4488, 0xb63c, 0x0, 0x1);
        gbc.writeMem(0x8c44, { 0x78 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x490, gbc.sp());
        EXPECT(0x8c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8c44));
        // 78 03D3
        gbc.setState(0xe64e, 0x32ad, 0x8cb0, 0xb3cb, 0xf091, 0x4f76, 0x0, 0x0);
        gbc.writeMem(0xe64e, { 0x78 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x32ad, gbc.sp());
        EXPECT(0xe64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe64e));
        // 78 03D4
        gbc.setState(0xec8f, 0xa1f, 0x9f70, 0xdadf, 0x8cfd, 0xf0c, 0x1, 0x0);
        gbc.writeMem(0xec8f, { 0x78 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa1f, gbc.sp());
        EXPECT(0xec90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xec8f));
        // 78 03D5
        gbc.setState(0xa9f8, 0x56b, 0xf780, 0x8c08, 0x4003, 0xbc7f, 0x0, 0x0);
        gbc.writeMem(0xa9f8, { 0x78 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x56b, gbc.sp());
        EXPECT(0xa9f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa9f8));
        // 78 03D6
        gbc.setState(0xeaf8, 0x7a3a, 0x7900, 0x4e25, 0xd7, 0x6b8f, 0x1, 0x0);
        gbc.writeMem(0xeaf8, { 0x78 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7a3a, gbc.sp());
        EXPECT(0xeaf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xeaf8));
        // 78 03D7
        gbc.setState(0x4e36, 0xf9ef, 0xcb10, 0xf0fd, 0x6d9c, 0x6e4, 0x1, 0x0);
        gbc.writeMem(0x4e36, { 0x78 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf9ef, gbc.sp());
        EXPECT(0x4e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03D8
        gbc.setState(0x96b7, 0xf17a, 0xfa80, 0x5975, 0xdb14, 0x14cf, 0x1, 0x1);
        gbc.writeMem(0x96b7, { 0x78 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf17a, gbc.sp());
        EXPECT(0x96b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x96b7));
        // 78 03D9
        gbc.setState(0x4e35, 0x5289, 0x1350, 0xd133, 0x5435, 0x1863, 0x1, 0x1);
        gbc.writeMem(0x4e35, { 0x78 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5289, gbc.sp());
        EXPECT(0x4e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03DA
        gbc.setState(0xad7, 0x8b41, 0xbd60, 0xc141, 0xa7b4, 0x1840, 0x0, 0x1);
        gbc.writeMem(0xad7, { 0x78 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8b41, gbc.sp());
        EXPECT(0xad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03DB
        gbc.setState(0x3277, 0x63a, 0xf100, 0xa2be, 0xd2f, 0xa962, 0x1, 0x0);
        gbc.writeMem(0x3277, { 0x78 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x63a, gbc.sp());
        EXPECT(0x3278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03DC
        gbc.setState(0x606f, 0xab0, 0xa290, 0x986d, 0x9c57, 0x855, 0x1, 0x0);
        gbc.writeMem(0x606f, { 0x78 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xab0, gbc.sp());
        EXPECT(0x6070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03DD
        gbc.setState(0x9458, 0x1cce, 0x820, 0x3d0e, 0x3482, 0x31b7, 0x1, 0x1);
        gbc.writeMem(0x9458, { 0x78 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1cce, gbc.sp());
        EXPECT(0x9459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9458));
        // 78 03DE
        gbc.setState(0xb31, 0x5bbc, 0x6310, 0x9629, 0x4343, 0x3b96, 0x0, 0x0);
        gbc.writeMem(0xb31, { 0x78 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5bbc, gbc.sp());
        EXPECT(0xb32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03DF
        gbc.setState(0x6017, 0xad68, 0xe520, 0xdf85, 0x1873, 0xa149, 0x0, 0x0);
        gbc.writeMem(0x6017, { 0x78 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xad68, gbc.sp());
        EXPECT(0x6018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03E0
        gbc.setState(0xb315, 0xd2f7, 0xf570, 0xfb3a, 0x2b0a, 0x4fe, 0x0, 0x1);
        gbc.writeMem(0xb315, { 0x78 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd2f7, gbc.sp());
        EXPECT(0xb316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb315));
        // 78 03E1
        gbc.setState(0xc0e3, 0x86b7, 0xbf70, 0xd7ce, 0xa6c6, 0xbe40, 0x1, 0x0);
        gbc.writeMem(0xc0e3, { 0x78 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x86b7, gbc.sp());
        EXPECT(0xc0e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc0e3));
        // 78 03E2
        gbc.setState(0x703e, 0xe9fc, 0x8b90, 0x23b4, 0xe262, 0x4057, 0x1, 0x0);
        gbc.writeMem(0x703e, { 0x78 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe9fc, gbc.sp());
        EXPECT(0x703f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03E3
        gbc.setState(0xbbf, 0xad20, 0x9e70, 0xdbc3, 0x6deb, 0x3cbd, 0x0, 0x0);
        gbc.writeMem(0xbbf, { 0x78 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xad20, gbc.sp());
        EXPECT(0xbc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 78 03E4
        gbc.setState(0x701f, 0x74e7, 0xb660, 0xd180, 0xe8ee, 0x7ef7, 0x0, 0x0);
        gbc.writeMem(0x701f, { 0x78 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x74e7, gbc.sp());
        EXPECT(0x7020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03E5
        gbc.setState(0x7d30, 0xf0f9, 0xe3c0, 0xffc8, 0x94ca, 0xcbdf, 0x1, 0x1);
        gbc.writeMem(0x7d30, { 0x78 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf0f9, gbc.sp());
        EXPECT(0x7d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 78 03E6
        gbc.setState(0xc866, 0x3433, 0x8430, 0xac6e, 0xd246, 0xd030, 0x1, 0x0);
        gbc.writeMem(0xc866, { 0x78 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3433, gbc.sp());
        EXPECT(0xc867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc866));
        // 78 03E7
        gbc.setState(0x336, 0xcf6a, 0xb3b0, 0x185d, 0xf8aa, 0x671e, 0x1, 0x1);
        gbc.writeMem(0x336, { 0x78 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcf6a, gbc.sp());
        EXPECT(0x337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
