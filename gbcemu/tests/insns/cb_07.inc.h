    TEST(gbcemu, opcode_cb_07) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 07 0000
        gbc.setState(0x3ef2, 0x445c, 0xbfb0, 0x13e1, 0xe1da, 0xc66d, 0x0, 0x0);
        gbc.writeMem(0x3ef2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x445c, gbc.sp());
        EXPECT(0x3ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0001
        gbc.setState(0x18b0, 0x6076, 0x6970, 0x9f35, 0xca32, 0xb3fb, 0x0, 0x0);
        gbc.writeMem(0x18b0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6076, gbc.sp());
        EXPECT(0x18b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0002
        gbc.setState(0x795f, 0x435e, 0xb0d0, 0xe5a4, 0x1449, 0x9faa, 0x1, 0x1);
        gbc.writeMem(0x795f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x435e, gbc.sp());
        EXPECT(0x7961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0003
        gbc.setState(0x8dfa, 0x4306, 0x6c20, 0x7410, 0x554b, 0xcf02, 0x0, 0x1);
        gbc.writeMem(0x8dfa, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4306, gbc.sp());
        EXPECT(0x8dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dfa));
        EXPECT(0x7, gbc.readMem(0x8dfb));
        // CB 07 0004
        gbc.setState(0xbfc9, 0xdaf4, 0xc1a0, 0x7da3, 0xb861, 0xc7a3, 0x0, 0x0);
        gbc.writeMem(0xbfc9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdaf4, gbc.sp());
        EXPECT(0xbfcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc9));
        EXPECT(0x7, gbc.readMem(0xbfca));
        // CB 07 0005
        gbc.setState(0x5ce5, 0xc21d, 0x9a80, 0xa3, 0xf25a, 0xc510, 0x0, 0x1);
        gbc.writeMem(0x5ce5, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc21d, gbc.sp());
        EXPECT(0x5ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0006
        gbc.setState(0x6451, 0x39d2, 0xd140, 0x264d, 0xe634, 0x7507, 0x1, 0x1);
        gbc.writeMem(0x6451, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x39d2, gbc.sp());
        EXPECT(0x6453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0007
        gbc.setState(0x3d8b, 0x134b, 0xf710, 0x2cae, 0xda9c, 0x2164, 0x0, 0x0);
        gbc.writeMem(0x3d8b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x134b, gbc.sp());
        EXPECT(0x3d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0008
        gbc.setState(0x1d7f, 0xd858, 0xf50, 0x7197, 0xeb10, 0x6a3d, 0x1, 0x0);
        gbc.writeMem(0x1d7f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd858, gbc.sp());
        EXPECT(0x1d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0009
        gbc.setState(0xa0b1, 0x26db, 0xfd30, 0x89e, 0xcc5d, 0x1263, 0x0, 0x0);
        gbc.writeMem(0xa0b1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x26db, gbc.sp());
        EXPECT(0xa0b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b1));
        EXPECT(0x7, gbc.readMem(0xa0b2));
        // CB 07 000A
        gbc.setState(0x4e23, 0x6857, 0xeb40, 0xa06d, 0x5e4b, 0xc472, 0x0, 0x0);
        gbc.writeMem(0x4e23, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6857, gbc.sp());
        EXPECT(0x4e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 000B
        gbc.setState(0x38aa, 0x9599, 0x3220, 0x5b0f, 0x594e, 0x7c70, 0x0, 0x1);
        gbc.writeMem(0x38aa, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9599, gbc.sp());
        EXPECT(0x38ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 000C
        gbc.setState(0x20c, 0x973e, 0xd140, 0x77c6, 0x80a1, 0x2407, 0x0, 0x0);
        gbc.writeMem(0x20c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x973e, gbc.sp());
        EXPECT(0x20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 000D
        gbc.setState(0x6c1d, 0x6cf8, 0xa2f0, 0xb643, 0xf83b, 0x4d93, 0x1, 0x0);
        gbc.writeMem(0x6c1d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6cf8, gbc.sp());
        EXPECT(0x6c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 000E
        gbc.setState(0x3578, 0xc472, 0x3820, 0xfd91, 0x7423, 0xf18a, 0x0, 0x0);
        gbc.writeMem(0x3578, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc472, gbc.sp());
        EXPECT(0x357a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 000F
        gbc.setState(0xb66d, 0xfef4, 0x4ab0, 0x53fb, 0xe9d5, 0x28e8, 0x0, 0x1);
        gbc.writeMem(0xb66d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfef4, gbc.sp());
        EXPECT(0xb66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb66d));
        EXPECT(0x7, gbc.readMem(0xb66e));
        // CB 07 0010
        gbc.setState(0xc08d, 0x45, 0x2320, 0xcea4, 0x9deb, 0xe01b, 0x0, 0x1);
        gbc.writeMem(0xc08d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x45, gbc.sp());
        EXPECT(0xc08f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc08d));
        EXPECT(0x7, gbc.readMem(0xc08e));
        // CB 07 0011
        gbc.setState(0x8b6c, 0xd410, 0x5590, 0x3105, 0x785d, 0x6216, 0x0, 0x0);
        gbc.writeMem(0x8b6c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd410, gbc.sp());
        EXPECT(0x8b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6c));
        EXPECT(0x7, gbc.readMem(0x8b6d));
        // CB 07 0012
        gbc.setState(0x1633, 0xa91a, 0x5550, 0xaec2, 0x603, 0x1f0d, 0x0, 0x0);
        gbc.writeMem(0x1633, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa91a, gbc.sp());
        EXPECT(0x1635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0013
        gbc.setState(0x1a3b, 0x404, 0xb230, 0x4273, 0x3ae1, 0x73d, 0x0, 0x0);
        gbc.writeMem(0x1a3b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x404, gbc.sp());
        EXPECT(0x1a3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0014
        gbc.setState(0x6457, 0x860a, 0x7ee0, 0xee64, 0xee67, 0x520b, 0x1, 0x0);
        gbc.writeMem(0x6457, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x860a, gbc.sp());
        EXPECT(0x6459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0015
        gbc.setState(0xe2cc, 0x8fec, 0x8940, 0xf275, 0x5f9b, 0x7d3d, 0x1, 0x1);
        gbc.writeMem(0xe2cc, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8fec, gbc.sp());
        EXPECT(0xe2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2cc));
        EXPECT(0x7, gbc.readMem(0xe2cd));
        // CB 07 0016
        gbc.setState(0xa0a2, 0x343, 0xdf40, 0x83d9, 0xe07a, 0xe2fe, 0x1, 0x1);
        gbc.writeMem(0xa0a2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x343, gbc.sp());
        EXPECT(0xa0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a2));
        EXPECT(0x7, gbc.readMem(0xa0a3));
        // CB 07 0017
        gbc.setState(0x573e, 0x4485, 0xbde0, 0xa2ae, 0xe728, 0x58ed, 0x0, 0x1);
        gbc.writeMem(0x573e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4485, gbc.sp());
        EXPECT(0x5740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0018
        gbc.setState(0xa098, 0x95cf, 0x4f60, 0xe14, 0x41aa, 0xe920, 0x0, 0x0);
        gbc.writeMem(0xa098, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x95cf, gbc.sp());
        EXPECT(0xa09a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa098));
        EXPECT(0x7, gbc.readMem(0xa099));
        // CB 07 0019
        gbc.setState(0x90d7, 0xdb57, 0x1c0, 0x84c9, 0x8a16, 0x757d, 0x1, 0x1);
        gbc.writeMem(0x90d7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdb57, gbc.sp());
        EXPECT(0x90d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d7));
        EXPECT(0x7, gbc.readMem(0x90d8));
        // CB 07 001A
        gbc.setState(0x916, 0xc4af, 0xb5c0, 0x6b6a, 0xc86d, 0x98ae, 0x0, 0x1);
        gbc.writeMem(0x916, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc4af, gbc.sp());
        EXPECT(0x918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 001B
        gbc.setState(0xe2ee, 0x38c8, 0xdf00, 0xcbf7, 0xf993, 0x5d44, 0x1, 0x0);
        gbc.writeMem(0xe2ee, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x38c8, gbc.sp());
        EXPECT(0xe2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ee));
        EXPECT(0x7, gbc.readMem(0xe2ef));
        // CB 07 001C
        gbc.setState(0x5862, 0xb991, 0x8760, 0xda2d, 0x44e5, 0xb6fa, 0x1, 0x0);
        gbc.writeMem(0x5862, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb991, gbc.sp());
        EXPECT(0x5864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 001D
        gbc.setState(0x93ed, 0x7e86, 0x61d0, 0x6649, 0x7105, 0xf0f9, 0x0, 0x0);
        gbc.writeMem(0x93ed, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7e86, gbc.sp());
        EXPECT(0x93ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ed));
        EXPECT(0x7, gbc.readMem(0x93ee));
        // CB 07 001E
        gbc.setState(0xb5fc, 0x1a6, 0x3be0, 0x799e, 0xc48f, 0x2dec, 0x0, 0x0);
        gbc.writeMem(0xb5fc, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1a6, gbc.sp());
        EXPECT(0xb5fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5fc));
        EXPECT(0x7, gbc.readMem(0xb5fd));
        // CB 07 001F
        gbc.setState(0x5187, 0x1ba4, 0x5260, 0x577d, 0x9d5c, 0xb998, 0x1, 0x1);
        gbc.writeMem(0x5187, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1ba4, gbc.sp());
        EXPECT(0x5189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0021
        gbc.setState(0xaa14, 0x9721, 0x5e30, 0x7b1a, 0x8ca5, 0x64bf, 0x0, 0x1);
        gbc.writeMem(0xaa14, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9721, gbc.sp());
        EXPECT(0xaa16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa14));
        EXPECT(0x7, gbc.readMem(0xaa15));
        // CB 07 0022
        gbc.setState(0xd6ce, 0xcac7, 0xf2f0, 0xdb25, 0xaebb, 0x9de5, 0x0, 0x1);
        gbc.writeMem(0xd6ce, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcac7, gbc.sp());
        EXPECT(0xd6d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ce));
        EXPECT(0x7, gbc.readMem(0xd6cf));
        // CB 07 0023
        gbc.setState(0xd451, 0xeb79, 0x26f0, 0x8e77, 0xd2fe, 0x2733, 0x1, 0x1);
        gbc.writeMem(0xd451, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xeb79, gbc.sp());
        EXPECT(0xd453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd451));
        EXPECT(0x7, gbc.readMem(0xd452));
        // CB 07 0024
        gbc.setState(0xee65, 0x1055, 0x670, 0xcc0f, 0x503f, 0x6dcb, 0x1, 0x1);
        gbc.writeMem(0xee65, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1055, gbc.sp());
        EXPECT(0xee67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee65));
        EXPECT(0x7, gbc.readMem(0xee66));
        // CB 07 0025
        gbc.setState(0xae3, 0x1f54, 0xb970, 0xd8fb, 0x1f42, 0x8e59, 0x1, 0x0);
        gbc.writeMem(0xae3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1f54, gbc.sp());
        EXPECT(0xae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0026
        gbc.setState(0xb2fb, 0x35c9, 0xedd0, 0x58f7, 0xafab, 0x7082, 0x0, 0x0);
        gbc.writeMem(0xb2fb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x35c9, gbc.sp());
        EXPECT(0xb2fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2fb));
        EXPECT(0x7, gbc.readMem(0xb2fc));
        // CB 07 0027
        gbc.setState(0xb9b3, 0x403d, 0x3070, 0xccc5, 0xbd5f, 0xfa88, 0x1, 0x1);
        gbc.writeMem(0xb9b3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x403d, gbc.sp());
        EXPECT(0xb9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b3));
        EXPECT(0x7, gbc.readMem(0xb9b4));
        // CB 07 0028
        gbc.setState(0x7090, 0x6a7, 0xc280, 0xcc3c, 0x3c2b, 0xd60, 0x0, 0x0);
        gbc.writeMem(0x7090, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6a7, gbc.sp());
        EXPECT(0x7092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0029
        gbc.setState(0xe2a4, 0xacde, 0x7890, 0xffa2, 0xada9, 0xd186, 0x0, 0x1);
        gbc.writeMem(0xe2a4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xacde, gbc.sp());
        EXPECT(0xe2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a4));
        EXPECT(0x7, gbc.readMem(0xe2a5));
        // CB 07 002A
        gbc.setState(0xec10, 0x1b53, 0xcda0, 0xc8fc, 0x6ab7, 0x64f0, 0x0, 0x1);
        gbc.writeMem(0xec10, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1b53, gbc.sp());
        EXPECT(0xec12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec10));
        EXPECT(0x7, gbc.readMem(0xec11));
        // CB 07 002B
        gbc.setState(0x46d2, 0xceac, 0x9420, 0xad3a, 0x3335, 0x6a26, 0x0, 0x0);
        gbc.writeMem(0x46d2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xceac, gbc.sp());
        EXPECT(0x46d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 002C
        gbc.setState(0xa547, 0x8e96, 0x2380, 0xcabc, 0xc836, 0x4cc7, 0x1, 0x0);
        gbc.writeMem(0xa547, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8e96, gbc.sp());
        EXPECT(0xa549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa547));
        EXPECT(0x7, gbc.readMem(0xa548));
        // CB 07 002D
        gbc.setState(0xb3d3, 0x5602, 0xf560, 0x3968, 0xb9b7, 0x6529, 0x1, 0x1);
        gbc.writeMem(0xb3d3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5602, gbc.sp());
        EXPECT(0xb3d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d3));
        EXPECT(0x7, gbc.readMem(0xb3d4));
        // CB 07 002E
        gbc.setState(0x2164, 0xbe33, 0xc620, 0x3a50, 0x662a, 0x52dd, 0x1, 0x0);
        gbc.writeMem(0x2164, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbe33, gbc.sp());
        EXPECT(0x2166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 002F
        gbc.setState(0x6ad8, 0x4545, 0xac50, 0x6a6b, 0x981b, 0x7074, 0x0, 0x0);
        gbc.writeMem(0x6ad8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4545, gbc.sp());
        EXPECT(0x6ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0030
        gbc.setState(0xa43b, 0x9e72, 0xbc30, 0x3638, 0xe16c, 0xf5d2, 0x1, 0x1);
        gbc.writeMem(0xa43b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9e72, gbc.sp());
        EXPECT(0xa43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43b));
        EXPECT(0x7, gbc.readMem(0xa43c));
        // CB 07 0031
        gbc.setState(0x6255, 0x4397, 0x1d70, 0x2eea, 0x2e71, 0x6250, 0x0, 0x1);
        gbc.writeMem(0x6255, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4397, gbc.sp());
        EXPECT(0x6257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0032
        gbc.setState(0xcd95, 0x2e59, 0x4840, 0xae0a, 0x8b84, 0x8e12, 0x1, 0x1);
        gbc.writeMem(0xcd95, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2e59, gbc.sp());
        EXPECT(0xcd97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd95));
        EXPECT(0x7, gbc.readMem(0xcd96));
        // CB 07 0033
        gbc.setState(0x4b68, 0xa2a5, 0x48c0, 0x232d, 0xfd7a, 0xe92e, 0x0, 0x0);
        gbc.writeMem(0x4b68, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa2a5, gbc.sp());
        EXPECT(0x4b6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0034
        gbc.setState(0x1395, 0x3d96, 0x8bd0, 0xfd7d, 0xa7d3, 0x652b, 0x0, 0x1);
        gbc.writeMem(0x1395, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3d96, gbc.sp());
        EXPECT(0x1397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0035
        gbc.setState(0xe53a, 0x3daf, 0xe300, 0x1ec1, 0x5bff, 0xe271, 0x1, 0x0);
        gbc.writeMem(0xe53a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3daf, gbc.sp());
        EXPECT(0xe53c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53a));
        EXPECT(0x7, gbc.readMem(0xe53b));
        // CB 07 0036
        gbc.setState(0x25c1, 0xfe7e, 0x9340, 0x7b42, 0x6567, 0x6af1, 0x1, 0x1);
        gbc.writeMem(0x25c1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfe7e, gbc.sp());
        EXPECT(0x25c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0037
        gbc.setState(0xaf26, 0xc8c9, 0x15c0, 0x697b, 0xf6ed, 0x9ff8, 0x0, 0x1);
        gbc.writeMem(0xaf26, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc8c9, gbc.sp());
        EXPECT(0xaf28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf26));
        EXPECT(0x7, gbc.readMem(0xaf27));
        // CB 07 0038
        gbc.setState(0x64bf, 0x2ac5, 0x5ae0, 0xef5e, 0xc487, 0x2cc4, 0x0, 0x1);
        gbc.writeMem(0x64bf, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2ac5, gbc.sp());
        EXPECT(0x64c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0039
        gbc.setState(0xc121, 0xeb0, 0xaa90, 0x616, 0x6718, 0xdcfe, 0x1, 0x0);
        gbc.writeMem(0xc121, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xeb0, gbc.sp());
        EXPECT(0xc123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc121));
        EXPECT(0x7, gbc.readMem(0xc122));
        // CB 07 003A
        gbc.setState(0x82ea, 0x3532, 0x3df0, 0xcbed, 0xb084, 0xd81d, 0x0, 0x1);
        gbc.writeMem(0x82ea, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3532, gbc.sp());
        EXPECT(0x82ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ea));
        EXPECT(0x7, gbc.readMem(0x82eb));
        // CB 07 003B
        gbc.setState(0x4a23, 0x9297, 0x8320, 0xd4f2, 0x14e2, 0x863e, 0x1, 0x0);
        gbc.writeMem(0x4a23, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9297, gbc.sp());
        EXPECT(0x4a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 003C
        gbc.setState(0xbcdc, 0x6195, 0x2210, 0x83c2, 0x88fc, 0x57a9, 0x0, 0x0);
        gbc.writeMem(0xbcdc, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6195, gbc.sp());
        EXPECT(0xbcde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcdc));
        EXPECT(0x7, gbc.readMem(0xbcdd));
        // CB 07 003D
        gbc.setState(0x9eae, 0x1c1a, 0x8290, 0xd215, 0xc072, 0x7165, 0x1, 0x1);
        gbc.writeMem(0x9eae, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1c1a, gbc.sp());
        EXPECT(0x9eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eae));
        EXPECT(0x7, gbc.readMem(0x9eaf));
        // CB 07 003E
        gbc.setState(0x86e7, 0x119f, 0xb9a0, 0xd646, 0x6953, 0xb306, 0x1, 0x0);
        gbc.writeMem(0x86e7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x119f, gbc.sp());
        EXPECT(0x86e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e7));
        EXPECT(0x7, gbc.readMem(0x86e8));
        // CB 07 003F
        gbc.setState(0xaea, 0x3d66, 0xc600, 0xe2c7, 0xcd5, 0x2e3, 0x1, 0x1);
        gbc.writeMem(0xaea, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3d66, gbc.sp());
        EXPECT(0xaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0040
        gbc.setState(0x8d5e, 0xc0b, 0x55b0, 0x3ef8, 0x48fc, 0x77e, 0x1, 0x1);
        gbc.writeMem(0x8d5e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc0b, gbc.sp());
        EXPECT(0x8d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d5e));
        EXPECT(0x7, gbc.readMem(0x8d5f));
        // CB 07 0041
        gbc.setState(0xd4c6, 0x1bce, 0x3990, 0x992e, 0x6880, 0xd61c, 0x0, 0x1);
        gbc.writeMem(0xd4c6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1bce, gbc.sp());
        EXPECT(0xd4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c6));
        EXPECT(0x7, gbc.readMem(0xd4c7));
        // CB 07 0042
        gbc.setState(0xa191, 0x2048, 0xd4c0, 0x1301, 0x25c2, 0x5c9e, 0x1, 0x0);
        gbc.writeMem(0xa191, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2048, gbc.sp());
        EXPECT(0xa193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa191));
        EXPECT(0x7, gbc.readMem(0xa192));
        // CB 07 0043
        gbc.setState(0x2594, 0xa9d1, 0x59d0, 0x8561, 0xe616, 0x59cb, 0x1, 0x0);
        gbc.writeMem(0x2594, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa9d1, gbc.sp());
        EXPECT(0x2596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0044
        gbc.setState(0x1bb6, 0x3d0b, 0x9200, 0x35a2, 0x35be, 0xb660, 0x0, 0x0);
        gbc.writeMem(0x1bb6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3d0b, gbc.sp());
        EXPECT(0x1bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0045
        gbc.setState(0x9b3e, 0xb794, 0x4730, 0x307a, 0xd184, 0xd97f, 0x1, 0x1);
        gbc.writeMem(0x9b3e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb794, gbc.sp());
        EXPECT(0x9b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b3e));
        EXPECT(0x7, gbc.readMem(0x9b3f));
        // CB 07 0046
        gbc.setState(0xaa97, 0x5e71, 0xb7a0, 0xcdb1, 0x4183, 0x9859, 0x1, 0x0);
        gbc.writeMem(0xaa97, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5e71, gbc.sp());
        EXPECT(0xaa99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa97));
        EXPECT(0x7, gbc.readMem(0xaa98));
        // CB 07 0047
        gbc.setState(0xec6f, 0x86a2, 0x2320, 0x5868, 0xfe5a, 0x8d12, 0x0, 0x1);
        gbc.writeMem(0xec6f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x86a2, gbc.sp());
        EXPECT(0xec71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec6f));
        EXPECT(0x7, gbc.readMem(0xec70));
        // CB 07 0048
        gbc.setState(0x2328, 0x6795, 0x5660, 0xb4c7, 0xeb39, 0xb8ad, 0x0, 0x0);
        gbc.writeMem(0x2328, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6795, gbc.sp());
        EXPECT(0x232a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0049
        gbc.setState(0x64b7, 0x4179, 0x7ff0, 0x88bb, 0x3120, 0x3ddc, 0x0, 0x0);
        gbc.writeMem(0x64b7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4179, gbc.sp());
        EXPECT(0x64b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 004B
        gbc.setState(0xaec8, 0x5bb, 0x8130, 0xed04, 0xbb09, 0x3347, 0x1, 0x0);
        gbc.writeMem(0xaec8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5bb, gbc.sp());
        EXPECT(0xaeca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec8));
        EXPECT(0x7, gbc.readMem(0xaec9));
        // CB 07 004C
        gbc.setState(0x262a, 0x288b, 0x4e10, 0x5a5e, 0x4572, 0x51a0, 0x1, 0x1);
        gbc.writeMem(0x262a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x288b, gbc.sp());
        EXPECT(0x262c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 004D
        gbc.setState(0x18, 0x372b, 0x6620, 0x5d29, 0x99f2, 0xcf51, 0x1, 0x1);
        gbc.writeMem(0x18, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x372b, gbc.sp());
        EXPECT(0x1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 004E
        gbc.setState(0x6c4a, 0x221, 0x9b10, 0x40ce, 0xb7e2, 0x3675, 0x0, 0x1);
        gbc.writeMem(0x6c4a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x221, gbc.sp());
        EXPECT(0x6c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 004F
        gbc.setState(0xa50f, 0x1d3d, 0x5ca0, 0xd797, 0x149, 0x2243, 0x0, 0x0);
        gbc.writeMem(0xa50f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1d3d, gbc.sp());
        EXPECT(0xa511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50f));
        EXPECT(0x7, gbc.readMem(0xa510));
        // CB 07 0050
        gbc.setState(0x5179, 0xc7bb, 0x68b0, 0x6978, 0x62a, 0x5c24, 0x1, 0x0);
        gbc.writeMem(0x5179, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc7bb, gbc.sp());
        EXPECT(0x517b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0051
        gbc.setState(0x14ad, 0xfa25, 0x4200, 0x43fd, 0x87c6, 0xbb5d, 0x1, 0x0);
        gbc.writeMem(0x14ad, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfa25, gbc.sp());
        EXPECT(0x14af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0052
        gbc.setState(0x4630, 0x6f2f, 0x7570, 0xbf54, 0x6cbd, 0xab6, 0x0, 0x0);
        gbc.writeMem(0x4630, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6f2f, gbc.sp());
        EXPECT(0x4632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0053
        gbc.setState(0x596, 0x6373, 0x1980, 0x7744, 0x1a46, 0x81ba, 0x0, 0x1);
        gbc.writeMem(0x596, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6373, gbc.sp());
        EXPECT(0x598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0054
        gbc.setState(0x52fb, 0x6749, 0x98b0, 0xcfc8, 0x3849, 0x2a95, 0x0, 0x1);
        gbc.writeMem(0x52fb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6749, gbc.sp());
        EXPECT(0x52fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0055
        gbc.setState(0xc9a3, 0xb569, 0x5830, 0xf6ef, 0xe53e, 0xc59, 0x0, 0x0);
        gbc.writeMem(0xc9a3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb569, gbc.sp());
        EXPECT(0xc9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a3));
        EXPECT(0x7, gbc.readMem(0xc9a4));
        // CB 07 0057
        gbc.setState(0x23bc, 0xa2c1, 0xb1c0, 0x7a20, 0xe3d, 0x13c4, 0x1, 0x1);
        gbc.writeMem(0x23bc, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa2c1, gbc.sp());
        EXPECT(0x23be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0058
        gbc.setState(0xdde3, 0x7c05, 0x3160, 0x9524, 0xfa69, 0x1b41, 0x0, 0x0);
        gbc.writeMem(0xdde3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7c05, gbc.sp());
        EXPECT(0xdde5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde3));
        EXPECT(0x7, gbc.readMem(0xdde4));
        // CB 07 0059
        gbc.setState(0x7e29, 0x5e62, 0x7e0, 0x287a, 0x1ce, 0xa20f, 0x1, 0x1);
        gbc.writeMem(0x7e29, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5e62, gbc.sp());
        EXPECT(0x7e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 005A
        gbc.setState(0xe467, 0x81cd, 0xad60, 0x1b14, 0x6b22, 0xee18, 0x1, 0x1);
        gbc.writeMem(0xe467, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x81cd, gbc.sp());
        EXPECT(0xe469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe467));
        EXPECT(0x7, gbc.readMem(0xe468));
        // CB 07 005B
        gbc.setState(0x2c53, 0x671b, 0xbe40, 0x58bd, 0xb8c4, 0x4e2f, 0x0, 0x1);
        gbc.writeMem(0x2c53, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x671b, gbc.sp());
        EXPECT(0x2c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 005C
        gbc.setState(0x102d, 0x5fe8, 0x53f0, 0x22b6, 0xef13, 0x5e01, 0x1, 0x0);
        gbc.writeMem(0x102d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5fe8, gbc.sp());
        EXPECT(0x102f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 005E
        gbc.setState(0x9db6, 0xc72f, 0x2b40, 0x9800, 0x8fce, 0xf50b, 0x1, 0x1);
        gbc.writeMem(0x9db6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc72f, gbc.sp());
        EXPECT(0x9db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db6));
        EXPECT(0x7, gbc.readMem(0x9db7));
        // CB 07 005F
        gbc.setState(0xe343, 0x55cc, 0x81d0, 0x56e6, 0x8c5c, 0x5eb4, 0x0, 0x1);
        gbc.writeMem(0xe343, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x55cc, gbc.sp());
        EXPECT(0xe345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe343));
        EXPECT(0x7, gbc.readMem(0xe344));
        // CB 07 0060
        gbc.setState(0xa5f2, 0xa040, 0xb980, 0xbc38, 0x835a, 0x845f, 0x0, 0x1);
        gbc.writeMem(0xa5f2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa040, gbc.sp());
        EXPECT(0xa5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f2));
        EXPECT(0x7, gbc.readMem(0xa5f3));
        // CB 07 0061
        gbc.setState(0xc79, 0xb231, 0x4590, 0x783f, 0x3731, 0xb3ad, 0x1, 0x0);
        gbc.writeMem(0xc79, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb231, gbc.sp());
        EXPECT(0xc7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0062
        gbc.setState(0x24d1, 0x7363, 0x6840, 0x81a5, 0x3dae, 0x9236, 0x1, 0x0);
        gbc.writeMem(0x24d1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7363, gbc.sp());
        EXPECT(0x24d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0064
        gbc.setState(0x694a, 0x393f, 0x4d50, 0xa383, 0x7a98, 0x9cda, 0x0, 0x0);
        gbc.writeMem(0x694a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x393f, gbc.sp());
        EXPECT(0x694c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0065
        gbc.setState(0x2348, 0x71c0, 0xcef0, 0xa9bc, 0x9513, 0x106, 0x1, 0x1);
        gbc.writeMem(0x2348, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x71c0, gbc.sp());
        EXPECT(0x234a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0066
        gbc.setState(0xbfa5, 0x18b0, 0xc840, 0x6c48, 0xc136, 0x68cb, 0x1, 0x1);
        gbc.writeMem(0xbfa5, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x18b0, gbc.sp());
        EXPECT(0xbfa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa5));
        EXPECT(0x7, gbc.readMem(0xbfa6));
        // CB 07 0067
        gbc.setState(0x5586, 0x4d59, 0x16a0, 0xaa45, 0xb208, 0x5a11, 0x1, 0x1);
        gbc.writeMem(0x5586, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4d59, gbc.sp());
        EXPECT(0x5588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0068
        gbc.setState(0x160b, 0xbaa3, 0x4cc0, 0xe45, 0x48c7, 0xe4ab, 0x1, 0x1);
        gbc.writeMem(0x160b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbaa3, gbc.sp());
        EXPECT(0x160d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0069
        gbc.setState(0x857d, 0x1686, 0x5dc0, 0x8cb9, 0x8956, 0x647a, 0x0, 0x1);
        gbc.writeMem(0x857d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1686, gbc.sp());
        EXPECT(0x857f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x857d));
        EXPECT(0x7, gbc.readMem(0x857e));
        // CB 07 006A
        gbc.setState(0xe180, 0xed6, 0x2bd0, 0x1bac, 0x3c57, 0xdf64, 0x1, 0x0);
        gbc.writeMem(0xe180, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xed6, gbc.sp());
        EXPECT(0xe182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe180));
        EXPECT(0x7, gbc.readMem(0xe181));
        // CB 07 006B
        gbc.setState(0x3afd, 0xddb4, 0x2690, 0xfdbd, 0x31cf, 0xd97d, 0x0, 0x1);
        gbc.writeMem(0x3afd, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xddb4, gbc.sp());
        EXPECT(0x3aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 006C
        gbc.setState(0xa953, 0x6100, 0x6c40, 0xa5f0, 0x7094, 0x73b8, 0x0, 0x1);
        gbc.writeMem(0xa953, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6100, gbc.sp());
        EXPECT(0xa955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa953));
        EXPECT(0x7, gbc.readMem(0xa954));
        // CB 07 006D
        gbc.setState(0x9343, 0xdbe8, 0x2d30, 0xe434, 0xc67, 0x9cc0, 0x1, 0x0);
        gbc.writeMem(0x9343, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdbe8, gbc.sp());
        EXPECT(0x9345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9343));
        EXPECT(0x7, gbc.readMem(0x9344));
        // CB 07 006E
        gbc.setState(0x1a41, 0x69ec, 0x1200, 0x168f, 0x77e9, 0xd66d, 0x0, 0x0);
        gbc.writeMem(0x1a41, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x69ec, gbc.sp());
        EXPECT(0x1a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 006F
        gbc.setState(0x6f2f, 0x8395, 0x10a0, 0xdb94, 0x70ee, 0x7b81, 0x1, 0x1);
        gbc.writeMem(0x6f2f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8395, gbc.sp());
        EXPECT(0x6f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0070
        gbc.setState(0xab7f, 0xf486, 0x33d0, 0x21f5, 0x8f8, 0xf24e, 0x1, 0x1);
        gbc.writeMem(0xab7f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf486, gbc.sp());
        EXPECT(0xab81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab7f));
        EXPECT(0x7, gbc.readMem(0xab80));
        // CB 07 0071
        gbc.setState(0xc8b4, 0x7f57, 0xc870, 0x839b, 0xa3b, 0x5aec, 0x1, 0x1);
        gbc.writeMem(0xc8b4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7f57, gbc.sp());
        EXPECT(0xc8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b4));
        EXPECT(0x7, gbc.readMem(0xc8b5));
        // CB 07 0072
        gbc.setState(0x8c76, 0xdf42, 0x67f0, 0x4cf, 0x377d, 0xf79f, 0x0, 0x1);
        gbc.writeMem(0x8c76, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdf42, gbc.sp());
        EXPECT(0x8c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c76));
        EXPECT(0x7, gbc.readMem(0x8c77));
        // CB 07 0073
        gbc.setState(0x9cd, 0x5166, 0xfe40, 0xd78, 0xca57, 0x2de, 0x0, 0x1);
        gbc.writeMem(0x9cd, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5166, gbc.sp());
        EXPECT(0x9cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0074
        gbc.setState(0x127b, 0xdf42, 0x8690, 0xec4a, 0xabaa, 0xecb9, 0x1, 0x0);
        gbc.writeMem(0x127b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdf42, gbc.sp());
        EXPECT(0x127d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0075
        gbc.setState(0xb674, 0x599c, 0xf020, 0x1c71, 0xe291, 0x83b4, 0x1, 0x0);
        gbc.writeMem(0xb674, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x599c, gbc.sp());
        EXPECT(0xb676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb674));
        EXPECT(0x7, gbc.readMem(0xb675));
        // CB 07 0076
        gbc.setState(0x84b6, 0x6f55, 0xdc20, 0x1120, 0xf52, 0x3a08, 0x0, 0x0);
        gbc.writeMem(0x84b6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6f55, gbc.sp());
        EXPECT(0x84b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b6));
        EXPECT(0x7, gbc.readMem(0x84b7));
        // CB 07 0077
        gbc.setState(0xb031, 0x52b6, 0x8f10, 0x3632, 0x71ac, 0x1f84, 0x1, 0x1);
        gbc.writeMem(0xb031, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x52b6, gbc.sp());
        EXPECT(0xb033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb031));
        EXPECT(0x7, gbc.readMem(0xb032));
        // CB 07 0078
        gbc.setState(0x9751, 0x23a4, 0xa770, 0x257d, 0x8c65, 0xdfc0, 0x0, 0x0);
        gbc.writeMem(0x9751, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x23a4, gbc.sp());
        EXPECT(0x9753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9751));
        EXPECT(0x7, gbc.readMem(0x9752));
        // CB 07 0079
        gbc.setState(0x2769, 0x27e2, 0x94d0, 0x90e1, 0xb6be, 0xf38b, 0x1, 0x1);
        gbc.writeMem(0x2769, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x27e2, gbc.sp());
        EXPECT(0x276b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 007A
        gbc.setState(0xbb97, 0x1225, 0x11e0, 0x77ec, 0xe928, 0x1e01, 0x1, 0x1);
        gbc.writeMem(0xbb97, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1225, gbc.sp());
        EXPECT(0xbb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb97));
        EXPECT(0x7, gbc.readMem(0xbb98));
        // CB 07 007B
        gbc.setState(0x9aed, 0xf985, 0x3c10, 0x1191, 0xbe96, 0x556, 0x1, 0x0);
        gbc.writeMem(0x9aed, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf985, gbc.sp());
        EXPECT(0x9aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aed));
        EXPECT(0x7, gbc.readMem(0x9aee));
        // CB 07 007C
        gbc.setState(0x94e1, 0xa7a4, 0x9cb0, 0xba03, 0x19b3, 0x2bc9, 0x1, 0x0);
        gbc.writeMem(0x94e1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa7a4, gbc.sp());
        EXPECT(0x94e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e1));
        EXPECT(0x7, gbc.readMem(0x94e2));
        // CB 07 007D
        gbc.setState(0xca6b, 0xd685, 0x3d00, 0x3d3b, 0x3d8a, 0x3df9, 0x0, 0x0);
        gbc.writeMem(0xca6b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd685, gbc.sp());
        EXPECT(0xca6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca6b));
        EXPECT(0x7, gbc.readMem(0xca6c));
        // CB 07 007F
        gbc.setState(0xccf1, 0x1bf1, 0x74d0, 0x423f, 0xc7fa, 0x2449, 0x1, 0x1);
        gbc.writeMem(0xccf1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1bf1, gbc.sp());
        EXPECT(0xccf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf1));
        EXPECT(0x7, gbc.readMem(0xccf2));
        // CB 07 0080
        gbc.setState(0x140b, 0x252d, 0xb60, 0xdfd3, 0x7814, 0x2190, 0x1, 0x1);
        gbc.writeMem(0x140b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x252d, gbc.sp());
        EXPECT(0x140d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0081
        gbc.setState(0xa605, 0xe600, 0xe080, 0xde80, 0xf687, 0xbcfe, 0x0, 0x1);
        gbc.writeMem(0xa605, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe600, gbc.sp());
        EXPECT(0xa607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa605));
        EXPECT(0x7, gbc.readMem(0xa606));
        // CB 07 0082
        gbc.setState(0x6202, 0x14ee, 0xc3d0, 0x3037, 0xfa4c, 0xb8a4, 0x0, 0x1);
        gbc.writeMem(0x6202, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x14ee, gbc.sp());
        EXPECT(0x6204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0083
        gbc.setState(0x794f, 0xcd89, 0x6f30, 0x4c6e, 0xa55c, 0x432b, 0x0, 0x1);
        gbc.writeMem(0x794f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcd89, gbc.sp());
        EXPECT(0x7951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0084
        gbc.setState(0x7b74, 0x29b9, 0x6880, 0xb72, 0x2c4, 0x476b, 0x0, 0x1);
        gbc.writeMem(0x7b74, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x29b9, gbc.sp());
        EXPECT(0x7b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0085
        gbc.setState(0x1544, 0x9ed3, 0xf150, 0x9642, 0x5aa0, 0xba15, 0x1, 0x0);
        gbc.writeMem(0x1544, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9ed3, gbc.sp());
        EXPECT(0x1546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0087
        gbc.setState(0x3177, 0x9468, 0xe9c0, 0xfda9, 0x7c1f, 0xe77f, 0x0, 0x1);
        gbc.writeMem(0x3177, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9468, gbc.sp());
        EXPECT(0x3179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0088
        gbc.setState(0xe708, 0x947f, 0x97d0, 0x7e31, 0xabd9, 0x32ab, 0x0, 0x1);
        gbc.writeMem(0xe708, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x947f, gbc.sp());
        EXPECT(0xe70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe708));
        EXPECT(0x7, gbc.readMem(0xe709));
        // CB 07 008A
        gbc.setState(0x9660, 0xe340, 0x5200, 0xe0b1, 0x4c52, 0x5539, 0x1, 0x0);
        gbc.writeMem(0x9660, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe340, gbc.sp());
        EXPECT(0x9662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9660));
        EXPECT(0x7, gbc.readMem(0x9661));
        // CB 07 008B
        gbc.setState(0xdf50, 0xe7e9, 0xd70, 0xc3b1, 0xb718, 0xc718, 0x0, 0x0);
        gbc.writeMem(0xdf50, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe7e9, gbc.sp());
        EXPECT(0xdf52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf50));
        EXPECT(0x7, gbc.readMem(0xdf51));
        // CB 07 008C
        gbc.setState(0x950a, 0xc7da, 0xc4f0, 0x609, 0x1b51, 0x535a, 0x1, 0x0);
        gbc.writeMem(0x950a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc7da, gbc.sp());
        EXPECT(0x950c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950a));
        EXPECT(0x7, gbc.readMem(0x950b));
        // CB 07 008D
        gbc.setState(0xdd1, 0xf19e, 0xd450, 0x33e3, 0xe1e6, 0xb7d2, 0x1, 0x1);
        gbc.writeMem(0xdd1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf19e, gbc.sp());
        EXPECT(0xdd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 008E
        gbc.setState(0x6485, 0xdf70, 0x8f90, 0x3636, 0x4c8a, 0xa9fc, 0x0, 0x0);
        gbc.writeMem(0x6485, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdf70, gbc.sp());
        EXPECT(0x6487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 008F
        gbc.setState(0xc5f, 0x6a53, 0x2d50, 0xee6c, 0x41c7, 0x626a, 0x0, 0x0);
        gbc.writeMem(0xc5f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6a53, gbc.sp());
        EXPECT(0xc61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0090
        gbc.setState(0xe70c, 0x4591, 0x7020, 0x2661, 0x1656, 0xc1a, 0x0, 0x0);
        gbc.writeMem(0xe70c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4591, gbc.sp());
        EXPECT(0xe70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe70c));
        EXPECT(0x7, gbc.readMem(0xe70d));
        // CB 07 0091
        gbc.setState(0x43ba, 0xbcbd, 0x82b0, 0x906, 0x18a4, 0xbb1a, 0x0, 0x1);
        gbc.writeMem(0x43ba, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbcbd, gbc.sp());
        EXPECT(0x43bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0092
        gbc.setState(0x1dd3, 0x3871, 0x34e0, 0x700f, 0x4f80, 0x5a7d, 0x1, 0x1);
        gbc.writeMem(0x1dd3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3871, gbc.sp());
        EXPECT(0x1dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0093
        gbc.setState(0x3dc, 0xa991, 0xc360, 0xbc4c, 0x8a6d, 0xc365, 0x0, 0x1);
        gbc.writeMem(0x3dc, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa991, gbc.sp());
        EXPECT(0x3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0095
        gbc.setState(0x3c00, 0x579e, 0x1dc0, 0xe997, 0xe371, 0x385d, 0x0, 0x1);
        gbc.writeMem(0x3c00, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x579e, gbc.sp());
        EXPECT(0x3c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0096
        gbc.setState(0xee37, 0x151d, 0x1560, 0x7ca4, 0x80e7, 0x93b, 0x1, 0x0);
        gbc.writeMem(0xee37, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x151d, gbc.sp());
        EXPECT(0xee39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee37));
        EXPECT(0x7, gbc.readMem(0xee38));
        // CB 07 0097
        gbc.setState(0x4a32, 0x6f74, 0xd470, 0x518a, 0xa9fb, 0xe50c, 0x0, 0x0);
        gbc.writeMem(0x4a32, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6f74, gbc.sp());
        EXPECT(0x4a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0098
        gbc.setState(0x2333, 0x8374, 0xcac0, 0x398b, 0x70bd, 0x9e7, 0x1, 0x0);
        gbc.writeMem(0x2333, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8374, gbc.sp());
        EXPECT(0x2335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0099
        gbc.setState(0x34da, 0x346c, 0x9d10, 0xee7a, 0x8cf2, 0xd111, 0x1, 0x1);
        gbc.writeMem(0x34da, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x346c, gbc.sp());
        EXPECT(0x34dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 009A
        gbc.setState(0xc412, 0xfe2c, 0xadd0, 0xd053, 0xd36c, 0x8d56, 0x1, 0x0);
        gbc.writeMem(0xc412, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfe2c, gbc.sp());
        EXPECT(0xc414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc412));
        EXPECT(0x7, gbc.readMem(0xc413));
        // CB 07 009B
        gbc.setState(0x63c7, 0x4428, 0x55b0, 0x1dd6, 0xbeeb, 0x5d7c, 0x0, 0x1);
        gbc.writeMem(0x63c7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4428, gbc.sp());
        EXPECT(0x63c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 009D
        gbc.setState(0x98af, 0xf295, 0x3e30, 0x12d6, 0xfbe8, 0x372b, 0x1, 0x1);
        gbc.writeMem(0x98af, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf295, gbc.sp());
        EXPECT(0x98b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98af));
        EXPECT(0x7, gbc.readMem(0x98b0));
        // CB 07 009E
        gbc.setState(0xbef9, 0x2494, 0x6cd0, 0x5028, 0x225a, 0x2d3c, 0x1, 0x1);
        gbc.writeMem(0xbef9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2494, gbc.sp());
        EXPECT(0xbefb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef9));
        EXPECT(0x7, gbc.readMem(0xbefa));
        // CB 07 00A0
        gbc.setState(0x208b, 0x7450, 0xe330, 0x561a, 0xafc1, 0x4811, 0x0, 0x1);
        gbc.writeMem(0x208b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7450, gbc.sp());
        EXPECT(0x208d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00A1
        gbc.setState(0xb1d6, 0xe917, 0x4e0, 0x5ba1, 0x9ef6, 0x7940, 0x1, 0x1);
        gbc.writeMem(0xb1d6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe917, gbc.sp());
        EXPECT(0xb1d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d6));
        EXPECT(0x7, gbc.readMem(0xb1d7));
        // CB 07 00A2
        gbc.setState(0x3459, 0x2797, 0x88b0, 0x6090, 0xb220, 0xba83, 0x1, 0x1);
        gbc.writeMem(0x3459, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2797, gbc.sp());
        EXPECT(0x345b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00A3
        gbc.setState(0x3e67, 0xcf12, 0x5e50, 0xf396, 0x7477, 0x3efe, 0x0, 0x1);
        gbc.writeMem(0x3e67, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcf12, gbc.sp());
        EXPECT(0x3e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00A4
        gbc.setState(0x9375, 0x7260, 0xfe00, 0xc3ef, 0xd9fb, 0x1058, 0x1, 0x1);
        gbc.writeMem(0x9375, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7260, gbc.sp());
        EXPECT(0x9377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9375));
        EXPECT(0x7, gbc.readMem(0x9376));
        // CB 07 00A5
        gbc.setState(0x444d, 0x435d, 0x7c50, 0xd5ee, 0xb0f6, 0xe46f, 0x1, 0x1);
        gbc.writeMem(0x444d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x435d, gbc.sp());
        EXPECT(0x444f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00A6
        gbc.setState(0x563e, 0x3bbd, 0x32e0, 0x78e7, 0x9de7, 0x294a, 0x0, 0x0);
        gbc.writeMem(0x563e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3bbd, gbc.sp());
        EXPECT(0x5640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00A7
        gbc.setState(0xc77b, 0x44ec, 0xee50, 0x6aa1, 0xdb2, 0x8fea, 0x1, 0x0);
        gbc.writeMem(0xc77b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x44ec, gbc.sp());
        EXPECT(0xc77d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc77b));
        EXPECT(0x7, gbc.readMem(0xc77c));
        // CB 07 00A9
        gbc.setState(0xde63, 0xc57, 0xf20, 0xdbb1, 0xf274, 0x1e9e, 0x1, 0x1);
        gbc.writeMem(0xde63, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc57, gbc.sp());
        EXPECT(0xde65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde63));
        EXPECT(0x7, gbc.readMem(0xde64));
        // CB 07 00AA
        gbc.setState(0x610c, 0x9cb6, 0xd2a0, 0xd0a3, 0xdba5, 0x3422, 0x0, 0x0);
        gbc.writeMem(0x610c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9cb6, gbc.sp());
        EXPECT(0x610e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00AB
        gbc.setState(0x733, 0x5d00, 0x360, 0xc0a4, 0xcbae, 0x92e, 0x0, 0x0);
        gbc.writeMem(0x733, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5d00, gbc.sp());
        EXPECT(0x735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00AC
        gbc.setState(0x9946, 0xd891, 0x91f0, 0x9d8e, 0x171, 0xb80b, 0x0, 0x0);
        gbc.writeMem(0x9946, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd891, gbc.sp());
        EXPECT(0x9948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9946));
        EXPECT(0x7, gbc.readMem(0x9947));
        // CB 07 00AD
        gbc.setState(0x99e6, 0x5e, 0x3190, 0xe249, 0xe3f5, 0xa3af, 0x0, 0x0);
        gbc.writeMem(0x99e6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5e, gbc.sp());
        EXPECT(0x99e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e6));
        EXPECT(0x7, gbc.readMem(0x99e7));
        // CB 07 00AE
        gbc.setState(0xb188, 0xdd2f, 0x30a0, 0x96ea, 0xa62e, 0x367a, 0x1, 0x0);
        gbc.writeMem(0xb188, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdd2f, gbc.sp());
        EXPECT(0xb18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb188));
        EXPECT(0x7, gbc.readMem(0xb189));
        // CB 07 00AF
        gbc.setState(0xcb93, 0x6468, 0xf470, 0x4384, 0x5340, 0x5fca, 0x1, 0x1);
        gbc.writeMem(0xcb93, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6468, gbc.sp());
        EXPECT(0xcb95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb93));
        EXPECT(0x7, gbc.readMem(0xcb94));
        // CB 07 00B0
        gbc.setState(0x3306, 0x4761, 0xfeb0, 0x9692, 0xa42a, 0x54da, 0x0, 0x1);
        gbc.writeMem(0x3306, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4761, gbc.sp());
        EXPECT(0x3308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00B1
        gbc.setState(0x8841, 0xfc27, 0x67b0, 0x9946, 0x968a, 0x2aad, 0x0, 0x0);
        gbc.writeMem(0x8841, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfc27, gbc.sp());
        EXPECT(0x8843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8841));
        EXPECT(0x7, gbc.readMem(0x8842));
        // CB 07 00B2
        gbc.setState(0xd708, 0xe384, 0x8080, 0x1d45, 0xb272, 0x481e, 0x0, 0x0);
        gbc.writeMem(0xd708, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe384, gbc.sp());
        EXPECT(0xd70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd708));
        EXPECT(0x7, gbc.readMem(0xd709));
        // CB 07 00B3
        gbc.setState(0x245, 0x7738, 0x5bc0, 0x31e2, 0x3e88, 0x7253, 0x0, 0x1);
        gbc.writeMem(0x245, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7738, gbc.sp());
        EXPECT(0x247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00B4
        gbc.setState(0xa9ce, 0xe142, 0x5290, 0x18e0, 0xf63b, 0x9364, 0x0, 0x1);
        gbc.writeMem(0xa9ce, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe142, gbc.sp());
        EXPECT(0xa9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ce));
        EXPECT(0x7, gbc.readMem(0xa9cf));
        // CB 07 00B5
        gbc.setState(0xb2ed, 0xe80e, 0x72f0, 0x990b, 0x8e28, 0xd583, 0x0, 0x0);
        gbc.writeMem(0xb2ed, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe80e, gbc.sp());
        EXPECT(0xb2ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ed));
        EXPECT(0x7, gbc.readMem(0xb2ee));
        // CB 07 00B6
        gbc.setState(0x27d1, 0xcfdf, 0x4ea0, 0x6a93, 0x1d4b, 0xc873, 0x1, 0x1);
        gbc.writeMem(0x27d1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcfdf, gbc.sp());
        EXPECT(0x27d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00B7
        gbc.setState(0x9d90, 0xb684, 0x20b0, 0x2197, 0x29a7, 0x615e, 0x1, 0x0);
        gbc.writeMem(0x9d90, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb684, gbc.sp());
        EXPECT(0x9d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d90));
        EXPECT(0x7, gbc.readMem(0x9d91));
        // CB 07 00B8
        gbc.setState(0x7ebe, 0x71fa, 0x18d0, 0xc97a, 0xa6bc, 0x905, 0x1, 0x1);
        gbc.writeMem(0x7ebe, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x71fa, gbc.sp());
        EXPECT(0x7ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00BA
        gbc.setState(0x30ad, 0xc7ae, 0xfb40, 0x67dd, 0x86dd, 0x98f7, 0x0, 0x0);
        gbc.writeMem(0x30ad, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc7ae, gbc.sp());
        EXPECT(0x30af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00BB
        gbc.setState(0x2f7a, 0xb46b, 0x88e0, 0x5224, 0x2f53, 0xec81, 0x1, 0x0);
        gbc.writeMem(0x2f7a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb46b, gbc.sp());
        EXPECT(0x2f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00BC
        gbc.setState(0x540f, 0x45aa, 0x85e0, 0x117c, 0xe573, 0xb52d, 0x0, 0x1);
        gbc.writeMem(0x540f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x45aa, gbc.sp());
        EXPECT(0x5411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00BD
        gbc.setState(0xbacb, 0xc193, 0x8850, 0x69c0, 0x549d, 0x44d1, 0x0, 0x1);
        gbc.writeMem(0xbacb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc193, gbc.sp());
        EXPECT(0xbacd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbacb));
        EXPECT(0x7, gbc.readMem(0xbacc));
        // CB 07 00BE
        gbc.setState(0x8f21, 0xd722, 0x90b0, 0x6c0f, 0xcfaa, 0x2bf6, 0x1, 0x1);
        gbc.writeMem(0x8f21, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd722, gbc.sp());
        EXPECT(0x8f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f21));
        EXPECT(0x7, gbc.readMem(0x8f22));
        // CB 07 00BF
        gbc.setState(0xe3d0, 0xb9c0, 0x1690, 0x134, 0x92d1, 0xb66c, 0x0, 0x1);
        gbc.writeMem(0xe3d0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb9c0, gbc.sp());
        EXPECT(0xe3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d0));
        EXPECT(0x7, gbc.readMem(0xe3d1));
        // CB 07 00C0
        gbc.setState(0xe72, 0x180a, 0x5b70, 0xfff2, 0x5201, 0x112, 0x1, 0x1);
        gbc.writeMem(0xe72, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x180a, gbc.sp());
        EXPECT(0xe74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00C1
        gbc.setState(0x749c, 0x3f75, 0xb940, 0x5dbe, 0x90b3, 0xda00, 0x0, 0x1);
        gbc.writeMem(0x749c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3f75, gbc.sp());
        EXPECT(0x749e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00C2
        gbc.setState(0x64d3, 0xcc88, 0x9900, 0x7971, 0x38a1, 0xb65f, 0x0, 0x1);
        gbc.writeMem(0x64d3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcc88, gbc.sp());
        EXPECT(0x64d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00C3
        gbc.setState(0xeee6, 0x6e41, 0xaa00, 0xf27f, 0xb21, 0xacfe, 0x1, 0x0);
        gbc.writeMem(0xeee6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6e41, gbc.sp());
        EXPECT(0xeee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee6));
        EXPECT(0x7, gbc.readMem(0xeee7));
        // CB 07 00C4
        gbc.setState(0x8bc3, 0x9140, 0xe4b0, 0xcd8, 0xfb7b, 0xdfbf, 0x0, 0x1);
        gbc.writeMem(0x8bc3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9140, gbc.sp());
        EXPECT(0x8bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc3));
        EXPECT(0x7, gbc.readMem(0x8bc4));
        // CB 07 00C5
        gbc.setState(0x82e8, 0x1ee0, 0xd020, 0x30b4, 0xb897, 0x4ea6, 0x0, 0x1);
        gbc.writeMem(0x82e8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1ee0, gbc.sp());
        EXPECT(0x82ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e8));
        EXPECT(0x7, gbc.readMem(0x82e9));
        // CB 07 00C6
        gbc.setState(0xefbb, 0x20b8, 0xd3b0, 0xe7ae, 0x7477, 0x5ce1, 0x0, 0x1);
        gbc.writeMem(0xefbb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x20b8, gbc.sp());
        EXPECT(0xefbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefbb));
        EXPECT(0x7, gbc.readMem(0xefbc));
        // CB 07 00C7
        gbc.setState(0x847b, 0x3d3b, 0xe610, 0x8124, 0xa7f0, 0x74c3, 0x1, 0x0);
        gbc.writeMem(0x847b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3d3b, gbc.sp());
        EXPECT(0x847d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847b));
        EXPECT(0x7, gbc.readMem(0x847c));
        // CB 07 00C8
        gbc.setState(0x1192, 0x7c4a, 0x73b0, 0x3e0d, 0x59f7, 0x6c58, 0x1, 0x1);
        gbc.writeMem(0x1192, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7c4a, gbc.sp());
        EXPECT(0x1194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00C9
        gbc.setState(0x3b0c, 0x8d3d, 0x5830, 0x662c, 0x8fab, 0x2cef, 0x1, 0x1);
        gbc.writeMem(0x3b0c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8d3d, gbc.sp());
        EXPECT(0x3b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00CA
        gbc.setState(0x4cea, 0xdaf9, 0xf350, 0x8e27, 0x935a, 0x4a9, 0x0, 0x1);
        gbc.writeMem(0x4cea, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdaf9, gbc.sp());
        EXPECT(0x4cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00CB
        gbc.setState(0x8f6, 0xeafb, 0xae10, 0x4f15, 0xd2de, 0x10e5, 0x0, 0x1);
        gbc.writeMem(0x8f6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xeafb, gbc.sp());
        EXPECT(0x8f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00CC
        gbc.setState(0x49ea, 0x1736, 0x72a0, 0x8dd5, 0x5591, 0x45ba, 0x0, 0x0);
        gbc.writeMem(0x49ea, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1736, gbc.sp());
        EXPECT(0x49ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00CD
        gbc.setState(0xb9ce, 0x39d4, 0x5f40, 0x8875, 0xfebe, 0xe27b, 0x0, 0x1);
        gbc.writeMem(0xb9ce, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x39d4, gbc.sp());
        EXPECT(0xb9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ce));
        EXPECT(0x7, gbc.readMem(0xb9cf));
        // CB 07 00CE
        gbc.setState(0x3a62, 0x825e, 0x73c0, 0x7cf3, 0x6d02, 0x1fcc, 0x1, 0x0);
        gbc.writeMem(0x3a62, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x825e, gbc.sp());
        EXPECT(0x3a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00CF
        gbc.setState(0x2fe6, 0xe5ba, 0xc4c0, 0xe1fe, 0x47cc, 0x9b3e, 0x1, 0x0);
        gbc.writeMem(0x2fe6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe5ba, gbc.sp());
        EXPECT(0x2fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00D1
        gbc.setState(0x6d7a, 0x42a3, 0x7ed0, 0x9203, 0x99c5, 0xdd68, 0x0, 0x0);
        gbc.writeMem(0x6d7a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x42a3, gbc.sp());
        EXPECT(0x6d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00D2
        gbc.setState(0x497e, 0x893e, 0x24d0, 0xf98f, 0x71ac, 0x4a80, 0x1, 0x0);
        gbc.writeMem(0x497e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x893e, gbc.sp());
        EXPECT(0x4980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00D3
        gbc.setState(0x787, 0x182, 0x75a0, 0x759, 0xdd87, 0xf186, 0x0, 0x1);
        gbc.writeMem(0x787, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x182, gbc.sp());
        EXPECT(0x789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00D4
        gbc.setState(0xe5f1, 0x2a00, 0x1b80, 0x5477, 0x7cbb, 0x88c6, 0x0, 0x0);
        gbc.writeMem(0xe5f1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2a00, gbc.sp());
        EXPECT(0xe5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5f1));
        EXPECT(0x7, gbc.readMem(0xe5f2));
        // CB 07 00D5
        gbc.setState(0xdb5c, 0x44a5, 0xc370, 0x36d, 0x87fa, 0xf591, 0x0, 0x1);
        gbc.writeMem(0xdb5c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x44a5, gbc.sp());
        EXPECT(0xdb5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb5c));
        EXPECT(0x7, gbc.readMem(0xdb5d));
        // CB 07 00D6
        gbc.setState(0xdc8b, 0x4b7f, 0xb970, 0x2c7, 0x3fab, 0x1e84, 0x1, 0x1);
        gbc.writeMem(0xdc8b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4b7f, gbc.sp());
        EXPECT(0xdc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8b));
        EXPECT(0x7, gbc.readMem(0xdc8c));
        // CB 07 00D8
        gbc.setState(0x563, 0x68db, 0xd0f0, 0x6c68, 0xeef6, 0xd8d5, 0x0, 0x0);
        gbc.writeMem(0x563, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x68db, gbc.sp());
        EXPECT(0x565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00D9
        gbc.setState(0x8861, 0x1280, 0x4930, 0x13f8, 0x55ac, 0xab91, 0x1, 0x0);
        gbc.writeMem(0x8861, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1280, gbc.sp());
        EXPECT(0x8863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8861));
        EXPECT(0x7, gbc.readMem(0x8862));
        // CB 07 00DA
        gbc.setState(0x2e2c, 0xf5f0, 0xb2c0, 0xe6dc, 0xccc5, 0x602, 0x0, 0x0);
        gbc.writeMem(0x2e2c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf5f0, gbc.sp());
        EXPECT(0x2e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00DB
        gbc.setState(0xc16, 0xff05, 0x68d0, 0xf1a3, 0x2686, 0xc30d, 0x0, 0x0);
        gbc.writeMem(0xc16, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xff05, gbc.sp());
        EXPECT(0xc18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00DC
        gbc.setState(0x370b, 0x98e, 0xa400, 0xcaa4, 0x33ab, 0x35ac, 0x0, 0x1);
        gbc.writeMem(0x370b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x98e, gbc.sp());
        EXPECT(0x370d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00DD
        gbc.setState(0xe6e1, 0x81dd, 0x46a0, 0xfa29, 0xc6b5, 0x25fb, 0x0, 0x0);
        gbc.writeMem(0xe6e1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x81dd, gbc.sp());
        EXPECT(0xe6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e1));
        EXPECT(0x7, gbc.readMem(0xe6e2));
        // CB 07 00DE
        gbc.setState(0xd8ea, 0x7e70, 0xb8e0, 0x6e64, 0xc383, 0x643c, 0x0, 0x0);
        gbc.writeMem(0xd8ea, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7e70, gbc.sp());
        EXPECT(0xd8ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ea));
        EXPECT(0x7, gbc.readMem(0xd8eb));
        // CB 07 00E0
        gbc.setState(0x8c89, 0xba7, 0x14e0, 0xd37b, 0xf443, 0x8932, 0x0, 0x0);
        gbc.writeMem(0x8c89, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xba7, gbc.sp());
        EXPECT(0x8c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c89));
        EXPECT(0x7, gbc.readMem(0x8c8a));
        // CB 07 00E1
        gbc.setState(0x2615, 0x44bf, 0xe8e0, 0x3309, 0x783e, 0xc307, 0x1, 0x0);
        gbc.writeMem(0x2615, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x44bf, gbc.sp());
        EXPECT(0x2617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00E2
        gbc.setState(0x4d54, 0x2f1c, 0xd830, 0x2fe0, 0x4def, 0xb198, 0x0, 0x0);
        gbc.writeMem(0x4d54, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2f1c, gbc.sp());
        EXPECT(0x4d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00E3
        gbc.setState(0x7d0, 0x9ce8, 0xb210, 0xc497, 0xf8f, 0x906, 0x1, 0x0);
        gbc.writeMem(0x7d0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9ce8, gbc.sp());
        EXPECT(0x7d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00E4
        gbc.setState(0xa512, 0x2da2, 0x75c0, 0xb93d, 0x296f, 0xef09, 0x1, 0x0);
        gbc.writeMem(0xa512, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2da2, gbc.sp());
        EXPECT(0xa514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa512));
        EXPECT(0x7, gbc.readMem(0xa513));
        // CB 07 00E6
        gbc.setState(0xdf43, 0xba83, 0x13d0, 0xbc18, 0x9ca, 0x830f, 0x0, 0x0);
        gbc.writeMem(0xdf43, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xba83, gbc.sp());
        EXPECT(0xdf45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf43));
        EXPECT(0x7, gbc.readMem(0xdf44));
        // CB 07 00E8
        gbc.setState(0xcc36, 0xe803, 0x4ab0, 0xdb72, 0x2e1b, 0xbe0d, 0x1, 0x1);
        gbc.writeMem(0xcc36, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe803, gbc.sp());
        EXPECT(0xcc38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc36));
        EXPECT(0x7, gbc.readMem(0xcc37));
        // CB 07 00E9
        gbc.setState(0x160f, 0xb906, 0x680, 0xe54d, 0xee22, 0xbc67, 0x0, 0x1);
        gbc.writeMem(0x160f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb906, gbc.sp());
        EXPECT(0x1611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00EA
        gbc.setState(0x3f74, 0x6e36, 0x40c0, 0xd884, 0x768f, 0x9f27, 0x1, 0x1);
        gbc.writeMem(0x3f74, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6e36, gbc.sp());
        EXPECT(0x3f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00EB
        gbc.setState(0xbed2, 0x1b11, 0xc7b0, 0x583b, 0xd390, 0xf35f, 0x0, 0x1);
        gbc.writeMem(0xbed2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1b11, gbc.sp());
        EXPECT(0xbed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed2));
        EXPECT(0x7, gbc.readMem(0xbed3));
        // CB 07 00EC
        gbc.setState(0x62d2, 0xa035, 0xdab0, 0x4d27, 0xf8de, 0xaa78, 0x0, 0x1);
        gbc.writeMem(0x62d2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa035, gbc.sp());
        EXPECT(0x62d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00ED
        gbc.setState(0x1863, 0x272a, 0xec50, 0x7d0, 0x7adb, 0xb7e3, 0x0, 0x1);
        gbc.writeMem(0x1863, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x272a, gbc.sp());
        EXPECT(0x1865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00EE
        gbc.setState(0x992b, 0xdc3b, 0x2a20, 0x8e27, 0x4ef1, 0xdd38, 0x0, 0x0);
        gbc.writeMem(0x992b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdc3b, gbc.sp());
        EXPECT(0x992d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x992b));
        EXPECT(0x7, gbc.readMem(0x992c));
        // CB 07 00EF
        gbc.setState(0x1a49, 0x6549, 0x8b70, 0x1e85, 0x6c56, 0x350a, 0x1, 0x0);
        gbc.writeMem(0x1a49, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6549, gbc.sp());
        EXPECT(0x1a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00F0
        gbc.setState(0x8c00, 0xd178, 0x9ae0, 0x98a3, 0x3535, 0xe1a3, 0x1, 0x1);
        gbc.writeMem(0x8c00, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd178, gbc.sp());
        EXPECT(0x8c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c00));
        EXPECT(0x7, gbc.readMem(0x8c01));
        // CB 07 00F1
        gbc.setState(0x5b64, 0x5cfa, 0x7140, 0x6285, 0x1048, 0x32a0, 0x0, 0x0);
        gbc.writeMem(0x5b64, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5cfa, gbc.sp());
        EXPECT(0x5b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00F2
        gbc.setState(0x5772, 0xf1ac, 0x2630, 0x38d8, 0x5d47, 0x7144, 0x1, 0x1);
        gbc.writeMem(0x5772, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf1ac, gbc.sp());
        EXPECT(0x5774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00F3
        gbc.setState(0x459b, 0x85f5, 0xd3f0, 0xbdf8, 0xb2c5, 0xca79, 0x1, 0x1);
        gbc.writeMem(0x459b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x85f5, gbc.sp());
        EXPECT(0x459d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00F4
        gbc.setState(0x9f45, 0x27fb, 0xb7b0, 0xe509, 0xd45d, 0x257, 0x0, 0x1);
        gbc.writeMem(0x9f45, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x27fb, gbc.sp());
        EXPECT(0x9f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f45));
        EXPECT(0x7, gbc.readMem(0x9f46));
        // CB 07 00F5
        gbc.setState(0x9199, 0xe6c3, 0x8290, 0xbea6, 0xf3b3, 0x7aae, 0x0, 0x0);
        gbc.writeMem(0x9199, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe6c3, gbc.sp());
        EXPECT(0x919b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9199));
        EXPECT(0x7, gbc.readMem(0x919a));
        // CB 07 00F6
        gbc.setState(0x4292, 0x3849, 0x3ce0, 0xd120, 0x351d, 0x3f2b, 0x1, 0x1);
        gbc.writeMem(0x4292, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3849, gbc.sp());
        EXPECT(0x4294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00F7
        gbc.setState(0x6b1b, 0x62f2, 0x85c0, 0xcc16, 0xb039, 0xddf9, 0x0, 0x1);
        gbc.writeMem(0x6b1b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x62f2, gbc.sp());
        EXPECT(0x6b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00F8
        gbc.setState(0x50ed, 0xe4d5, 0x6540, 0x6b3d, 0x702b, 0xc749, 0x1, 0x0);
        gbc.writeMem(0x50ed, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe4d5, gbc.sp());
        EXPECT(0x50ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00F9
        gbc.setState(0xd973, 0x8fd9, 0x8020, 0xf217, 0xbba7, 0x51e7, 0x1, 0x0);
        gbc.writeMem(0xd973, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8fd9, gbc.sp());
        EXPECT(0xd975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd973));
        EXPECT(0x7, gbc.readMem(0xd974));
        // CB 07 00FA
        gbc.setState(0x2cfc, 0x2cf3, 0x63c0, 0x3f31, 0xa652, 0xbe19, 0x0, 0x0);
        gbc.writeMem(0x2cfc, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2cf3, gbc.sp());
        EXPECT(0x2cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 00FB
        gbc.setState(0xa073, 0x3836, 0xb960, 0x76f3, 0x1e21, 0x71c1, 0x1, 0x1);
        gbc.writeMem(0xa073, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3836, gbc.sp());
        EXPECT(0xa075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa073));
        EXPECT(0x7, gbc.readMem(0xa074));
        // CB 07 00FC
        gbc.setState(0x1c33, 0xe985, 0xbf30, 0x3800, 0xc1f2, 0x976b, 0x1, 0x0);
        gbc.writeMem(0x1c33, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe985, gbc.sp());
        EXPECT(0x1c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00FD
        gbc.setState(0x17c4, 0xefdd, 0xea00, 0x9ffa, 0xbe48, 0x8aa7, 0x1, 0x0);
        gbc.writeMem(0x17c4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xefdd, gbc.sp());
        EXPECT(0x17c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 00FE
        gbc.setState(0xbd86, 0xc1fe, 0x2120, 0x983f, 0xddca, 0x2cab, 0x1, 0x1);
        gbc.writeMem(0xbd86, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc1fe, gbc.sp());
        EXPECT(0xbd88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd86));
        EXPECT(0x7, gbc.readMem(0xbd87));
        // CB 07 00FF
        gbc.setState(0xd22f, 0x54de, 0xda0, 0xd8, 0x94d, 0xe4cd, 0x0, 0x0);
        gbc.writeMem(0xd22f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x54de, gbc.sp());
        EXPECT(0xd231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22f));
        EXPECT(0x7, gbc.readMem(0xd230));
        // CB 07 0100
        gbc.setState(0xef3c, 0x6684, 0xfd00, 0xbeb9, 0x5b0f, 0x2e31, 0x0, 0x0);
        gbc.writeMem(0xef3c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6684, gbc.sp());
        EXPECT(0xef3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3c));
        EXPECT(0x7, gbc.readMem(0xef3d));
        // CB 07 0101
        gbc.setState(0x1566, 0x458, 0xe1c0, 0xf056, 0xb878, 0xf7c6, 0x1, 0x0);
        gbc.writeMem(0x1566, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x458, gbc.sp());
        EXPECT(0x1568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0102
        gbc.setState(0xa466, 0x813, 0x6090, 0xf384, 0x6643, 0x8b15, 0x0, 0x0);
        gbc.writeMem(0xa466, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x813, gbc.sp());
        EXPECT(0xa468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa466));
        EXPECT(0x7, gbc.readMem(0xa467));
        // CB 07 0103
        gbc.setState(0x9493, 0x843b, 0x1f50, 0x31b7, 0x7e15, 0xd7d0, 0x1, 0x0);
        gbc.writeMem(0x9493, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x843b, gbc.sp());
        EXPECT(0x9495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9493));
        EXPECT(0x7, gbc.readMem(0x9494));
        // CB 07 0104
        gbc.setState(0xe26c, 0x20c3, 0xf4b0, 0x15cb, 0x43a0, 0x7ddc, 0x0, 0x0);
        gbc.writeMem(0xe26c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x20c3, gbc.sp());
        EXPECT(0xe26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe26c));
        EXPECT(0x7, gbc.readMem(0xe26d));
        // CB 07 0105
        gbc.setState(0xc273, 0x8052, 0x6110, 0x298f, 0xffaf, 0x8144, 0x1, 0x0);
        gbc.writeMem(0xc273, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8052, gbc.sp());
        EXPECT(0xc275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc273));
        EXPECT(0x7, gbc.readMem(0xc274));
        // CB 07 0106
        gbc.setState(0x618e, 0x94c5, 0x3ec0, 0xb1, 0xf6a4, 0xd92, 0x0, 0x1);
        gbc.writeMem(0x618e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x94c5, gbc.sp());
        EXPECT(0x6190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0107
        gbc.setState(0xd38c, 0x63c1, 0x4d70, 0x5f7f, 0x2017, 0xde49, 0x0, 0x1);
        gbc.writeMem(0xd38c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x63c1, gbc.sp());
        EXPECT(0xd38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd38c));
        EXPECT(0x7, gbc.readMem(0xd38d));
        // CB 07 0108
        gbc.setState(0x211, 0x2d70, 0xc450, 0x16a7, 0xd9bd, 0xaf43, 0x1, 0x1);
        gbc.writeMem(0x211, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2d70, gbc.sp());
        EXPECT(0x213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0109
        gbc.setState(0x4365, 0x6a24, 0x3870, 0x4489, 0xba47, 0xa47f, 0x1, 0x1);
        gbc.writeMem(0x4365, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6a24, gbc.sp());
        EXPECT(0x4367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 010A
        gbc.setState(0xa0ed, 0x62d8, 0xcc50, 0xca43, 0x8b7c, 0xc9a6, 0x1, 0x0);
        gbc.writeMem(0xa0ed, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x62d8, gbc.sp());
        EXPECT(0xa0ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ed));
        EXPECT(0x7, gbc.readMem(0xa0ee));
        // CB 07 010B
        gbc.setState(0x8aac, 0xdfd5, 0x24d0, 0x8dd6, 0xc47b, 0x6380, 0x1, 0x0);
        gbc.writeMem(0x8aac, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdfd5, gbc.sp());
        EXPECT(0x8aae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aac));
        EXPECT(0x7, gbc.readMem(0x8aad));
        // CB 07 010C
        gbc.setState(0x4293, 0x5ee8, 0x2df0, 0xf6da, 0x22ae, 0x728, 0x1, 0x1);
        gbc.writeMem(0x4293, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5ee8, gbc.sp());
        EXPECT(0x4295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 010D
        gbc.setState(0x5eb2, 0x174d, 0x6120, 0xadff, 0x2aa2, 0xb486, 0x1, 0x1);
        gbc.writeMem(0x5eb2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x174d, gbc.sp());
        EXPECT(0x5eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 010E
        gbc.setState(0xece4, 0xc10a, 0xdc70, 0xff69, 0x43db, 0x2a06, 0x0, 0x0);
        gbc.writeMem(0xece4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc10a, gbc.sp());
        EXPECT(0xece6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece4));
        EXPECT(0x7, gbc.readMem(0xece5));
        // CB 07 010F
        gbc.setState(0x9613, 0x96d0, 0x410, 0x7ad, 0x100a, 0x815a, 0x0, 0x1);
        gbc.writeMem(0x9613, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x96d0, gbc.sp());
        EXPECT(0x9615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9613));
        EXPECT(0x7, gbc.readMem(0x9614));
        // CB 07 0110
        gbc.setState(0xeeb6, 0x3b25, 0x3460, 0xaeb, 0x2ce2, 0x958c, 0x0, 0x0);
        gbc.writeMem(0xeeb6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3b25, gbc.sp());
        EXPECT(0xeeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb6));
        EXPECT(0x7, gbc.readMem(0xeeb7));
        // CB 07 0111
        gbc.setState(0xd37e, 0xc81d, 0xad60, 0x101d, 0x4d35, 0x950e, 0x0, 0x0);
        gbc.writeMem(0xd37e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc81d, gbc.sp());
        EXPECT(0xd380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37e));
        EXPECT(0x7, gbc.readMem(0xd37f));
        // CB 07 0113
        gbc.setState(0x4370, 0x2c98, 0x2590, 0x6135, 0x8d4d, 0x92ef, 0x0, 0x0);
        gbc.writeMem(0x4370, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2c98, gbc.sp());
        EXPECT(0x4372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0114
        gbc.setState(0x7022, 0xef21, 0x70d0, 0xa376, 0x5f8c, 0xed2a, 0x0, 0x1);
        gbc.writeMem(0x7022, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xef21, gbc.sp());
        EXPECT(0x7024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0115
        gbc.setState(0xe2ff, 0xd450, 0x9940, 0x138c, 0xd19d, 0xe1a6, 0x0, 0x1);
        gbc.writeMem(0xe2ff, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd450, gbc.sp());
        EXPECT(0xe301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ff));
        EXPECT(0x7, gbc.readMem(0xe300));
        // CB 07 0116
        gbc.setState(0x513d, 0xa36, 0x6a90, 0xb814, 0xb725, 0x65b7, 0x1, 0x0);
        gbc.writeMem(0x513d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa36, gbc.sp());
        EXPECT(0x513f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0117
        gbc.setState(0xa24b, 0xed63, 0x1ae0, 0xf216, 0x8bc1, 0x28c5, 0x0, 0x0);
        gbc.writeMem(0xa24b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xed63, gbc.sp());
        EXPECT(0xa24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24b));
        EXPECT(0x7, gbc.readMem(0xa24c));
        // CB 07 0118
        gbc.setState(0x95b4, 0xcbf6, 0x1eb0, 0x9119, 0x69ba, 0x625d, 0x1, 0x0);
        gbc.writeMem(0x95b4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcbf6, gbc.sp());
        EXPECT(0x95b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b4));
        EXPECT(0x7, gbc.readMem(0x95b5));
        // CB 07 0119
        gbc.setState(0x7031, 0xd0ae, 0xcf90, 0xec7f, 0xa097, 0x62d3, 0x1, 0x0);
        gbc.writeMem(0x7031, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd0ae, gbc.sp());
        EXPECT(0x7033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 011A
        gbc.setState(0x6d8, 0x8891, 0x4cf0, 0x7cc3, 0x9c21, 0x3270, 0x0, 0x1);
        gbc.writeMem(0x6d8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8891, gbc.sp());
        EXPECT(0x6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 011B
        gbc.setState(0x1230, 0x11fa, 0xbf50, 0x9789, 0xa10f, 0xe58b, 0x0, 0x0);
        gbc.writeMem(0x1230, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x11fa, gbc.sp());
        EXPECT(0x1232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 011D
        gbc.setState(0x5a23, 0x373e, 0x5590, 0xbb3b, 0xb7b3, 0x5e13, 0x1, 0x1);
        gbc.writeMem(0x5a23, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x373e, gbc.sp());
        EXPECT(0x5a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 011E
        gbc.setState(0xd259, 0xfe3e, 0x6310, 0x2b65, 0xa009, 0x32d8, 0x1, 0x1);
        gbc.writeMem(0xd259, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfe3e, gbc.sp());
        EXPECT(0xd25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd259));
        EXPECT(0x7, gbc.readMem(0xd25a));
        // CB 07 0120
        gbc.setState(0xeaab, 0x20fc, 0x65d0, 0x1578, 0x61ae, 0x5170, 0x0, 0x1);
        gbc.writeMem(0xeaab, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x20fc, gbc.sp());
        EXPECT(0xeaad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaab));
        EXPECT(0x7, gbc.readMem(0xeaac));
        // CB 07 0121
        gbc.setState(0x269c, 0xb251, 0x51d0, 0x78e9, 0x229, 0xa27, 0x0, 0x0);
        gbc.writeMem(0x269c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb251, gbc.sp());
        EXPECT(0x269e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0122
        gbc.setState(0xae19, 0xa206, 0x7ac0, 0x58b9, 0x4a8c, 0x23ec, 0x1, 0x0);
        gbc.writeMem(0xae19, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa206, gbc.sp());
        EXPECT(0xae1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae19));
        EXPECT(0x7, gbc.readMem(0xae1a));
        // CB 07 0124
        gbc.setState(0xda9c, 0x2b2f, 0xf200, 0x4f53, 0x8efd, 0x4538, 0x0, 0x0);
        gbc.writeMem(0xda9c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2b2f, gbc.sp());
        EXPECT(0xda9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9c));
        EXPECT(0x7, gbc.readMem(0xda9d));
        // CB 07 0125
        gbc.setState(0xce80, 0xee04, 0xc060, 0x4d5a, 0x116e, 0x498c, 0x1, 0x0);
        gbc.writeMem(0xce80, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xee04, gbc.sp());
        EXPECT(0xce82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce80));
        EXPECT(0x7, gbc.readMem(0xce81));
        // CB 07 0126
        gbc.setState(0xcef8, 0xf99, 0xcd00, 0x27ac, 0x85b6, 0x3678, 0x1, 0x1);
        gbc.writeMem(0xcef8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf99, gbc.sp());
        EXPECT(0xcefa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef8));
        EXPECT(0x7, gbc.readMem(0xcef9));
        // CB 07 0127
        gbc.setState(0xe284, 0x3123, 0x8a90, 0xafc1, 0xee2c, 0x1731, 0x1, 0x0);
        gbc.writeMem(0xe284, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3123, gbc.sp());
        EXPECT(0xe286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe284));
        EXPECT(0x7, gbc.readMem(0xe285));
        // CB 07 0128
        gbc.setState(0xb911, 0xe0b9, 0xc100, 0x9148, 0x9397, 0x5fa5, 0x1, 0x0);
        gbc.writeMem(0xb911, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe0b9, gbc.sp());
        EXPECT(0xb913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb911));
        EXPECT(0x7, gbc.readMem(0xb912));
        // CB 07 0129
        gbc.setState(0x62ed, 0xd242, 0x86e0, 0x89df, 0xc0d, 0x1252, 0x0, 0x1);
        gbc.writeMem(0x62ed, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd242, gbc.sp());
        EXPECT(0x62ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 012A
        gbc.setState(0x575f, 0x563f, 0x98b0, 0xc8b5, 0x911b, 0xac3, 0x0, 0x1);
        gbc.writeMem(0x575f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x563f, gbc.sp());
        EXPECT(0x5761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 012C
        gbc.setState(0xc1c, 0xa638, 0x6d80, 0xba91, 0xab74, 0x3e2, 0x1, 0x0);
        gbc.writeMem(0xc1c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa638, gbc.sp());
        EXPECT(0xc1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 012D
        gbc.setState(0x86e, 0x7766, 0xf770, 0x7e1f, 0xbcea, 0xd690, 0x1, 0x0);
        gbc.writeMem(0x86e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7766, gbc.sp());
        EXPECT(0x870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 012E
        gbc.setState(0xee61, 0xa2e9, 0x5f10, 0x5b0d, 0xac83, 0xa2f1, 0x1, 0x0);
        gbc.writeMem(0xee61, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa2e9, gbc.sp());
        EXPECT(0xee63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee61));
        EXPECT(0x7, gbc.readMem(0xee62));
        // CB 07 012F
        gbc.setState(0x496b, 0xd146, 0xf010, 0xb6d3, 0x15ce, 0x4f1c, 0x0, 0x1);
        gbc.writeMem(0x496b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd146, gbc.sp());
        EXPECT(0x496d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0130
        gbc.setState(0x814, 0x6867, 0xf7d0, 0xdaa5, 0xb35f, 0x10b8, 0x1, 0x1);
        gbc.writeMem(0x814, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6867, gbc.sp());
        EXPECT(0x816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0131
        gbc.setState(0x7183, 0x8adf, 0x6710, 0x9a56, 0xebc, 0xe545, 0x1, 0x0);
        gbc.writeMem(0x7183, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8adf, gbc.sp());
        EXPECT(0x7185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0132
        gbc.setState(0x4eaf, 0x28f3, 0xed60, 0x5f0, 0x45be, 0x457d, 0x1, 0x0);
        gbc.writeMem(0x4eaf, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x28f3, gbc.sp());
        EXPECT(0x4eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0133
        gbc.setState(0xd919, 0xdaf6, 0x4b50, 0xf88d, 0x10e5, 0x3017, 0x1, 0x1);
        gbc.writeMem(0xd919, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdaf6, gbc.sp());
        EXPECT(0xd91b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd919));
        EXPECT(0x7, gbc.readMem(0xd91a));
        // CB 07 0134
        gbc.setState(0x2a8a, 0xe182, 0x90, 0x196f, 0x625a, 0x543a, 0x0, 0x0);
        gbc.writeMem(0x2a8a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe182, gbc.sp());
        EXPECT(0x2a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0135
        gbc.setState(0xdbce, 0xdf7f, 0xb7d0, 0xbbc8, 0xc47, 0x4e9b, 0x1, 0x1);
        gbc.writeMem(0xdbce, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdf7f, gbc.sp());
        EXPECT(0xdbd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbce));
        EXPECT(0x7, gbc.readMem(0xdbcf));
        // CB 07 0136
        gbc.setState(0x7524, 0x2903, 0x5180, 0x6c6f, 0x9dfd, 0x71d5, 0x1, 0x1);
        gbc.writeMem(0x7524, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2903, gbc.sp());
        EXPECT(0x7526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0137
        gbc.setState(0x6807, 0xec43, 0x1070, 0xa0cc, 0xbc32, 0xb636, 0x0, 0x0);
        gbc.writeMem(0x6807, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xec43, gbc.sp());
        EXPECT(0x6809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0138
        gbc.setState(0x530c, 0xd3c2, 0xb240, 0x4c0c, 0x5c8a, 0x2df2, 0x1, 0x1);
        gbc.writeMem(0x530c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd3c2, gbc.sp());
        EXPECT(0x530e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0139
        gbc.setState(0x11b0, 0xe423, 0x7350, 0xffd, 0x53a3, 0x7f4, 0x1, 0x1);
        gbc.writeMem(0x11b0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe423, gbc.sp());
        EXPECT(0x11b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 013A
        gbc.setState(0xcafb, 0x3a27, 0x3dc0, 0xe0cc, 0xf194, 0x86da, 0x1, 0x1);
        gbc.writeMem(0xcafb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3a27, gbc.sp());
        EXPECT(0xcafd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcafb));
        EXPECT(0x7, gbc.readMem(0xcafc));
        // CB 07 013C
        gbc.setState(0x221e, 0xead9, 0x8760, 0xc894, 0x1aac, 0x5891, 0x0, 0x1);
        gbc.writeMem(0x221e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xead9, gbc.sp());
        EXPECT(0x2220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 013D
        gbc.setState(0x99b4, 0xf07f, 0x5720, 0xd2ee, 0x64e5, 0x16c4, 0x1, 0x1);
        gbc.writeMem(0x99b4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf07f, gbc.sp());
        EXPECT(0x99b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b4));
        EXPECT(0x7, gbc.readMem(0x99b5));
        // CB 07 013E
        gbc.setState(0x9db1, 0xd5e0, 0xc210, 0xd1aa, 0x3227, 0x723b, 0x1, 0x1);
        gbc.writeMem(0x9db1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd5e0, gbc.sp());
        EXPECT(0x9db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db1));
        EXPECT(0x7, gbc.readMem(0x9db2));
        // CB 07 013F
        gbc.setState(0x81c6, 0x16e, 0x2410, 0xf061, 0x9dd0, 0xd720, 0x0, 0x0);
        gbc.writeMem(0x81c6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x16e, gbc.sp());
        EXPECT(0x81c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c6));
        EXPECT(0x7, gbc.readMem(0x81c7));
        // CB 07 0140
        gbc.setState(0x9742, 0x35f8, 0x7c90, 0x6b5d, 0x11f8, 0xb0a8, 0x0, 0x1);
        gbc.writeMem(0x9742, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x35f8, gbc.sp());
        EXPECT(0x9744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9742));
        EXPECT(0x7, gbc.readMem(0x9743));
        // CB 07 0141
        gbc.setState(0x8286, 0xa5cd, 0x9830, 0xd92c, 0xf50, 0xe875, 0x1, 0x1);
        gbc.writeMem(0x8286, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa5cd, gbc.sp());
        EXPECT(0x8288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8286));
        EXPECT(0x7, gbc.readMem(0x8287));
        // CB 07 0142
        gbc.setState(0x4ab1, 0x3411, 0x910, 0xb850, 0xd1f9, 0x848b, 0x1, 0x0);
        gbc.writeMem(0x4ab1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3411, gbc.sp());
        EXPECT(0x4ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0143
        gbc.setState(0xaa9e, 0x1700, 0x9d50, 0x953d, 0x78b6, 0x84fd, 0x0, 0x0);
        gbc.writeMem(0xaa9e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1700, gbc.sp());
        EXPECT(0xaaa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa9e));
        EXPECT(0x7, gbc.readMem(0xaa9f));
        // CB 07 0144
        gbc.setState(0x6c11, 0xef61, 0xe2e0, 0xc310, 0x97ff, 0x207d, 0x1, 0x0);
        gbc.writeMem(0x6c11, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xef61, gbc.sp());
        EXPECT(0x6c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0145
        gbc.setState(0xb3d7, 0xd492, 0xd110, 0xd7e6, 0xe766, 0xff2a, 0x0, 0x1);
        gbc.writeMem(0xb3d7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd492, gbc.sp());
        EXPECT(0xb3d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d7));
        EXPECT(0x7, gbc.readMem(0xb3d8));
        // CB 07 0146
        gbc.setState(0xeb91, 0xe34d, 0x6ac0, 0xa61c, 0xbda1, 0x9808, 0x0, 0x1);
        gbc.writeMem(0xeb91, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe34d, gbc.sp());
        EXPECT(0xeb93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb91));
        EXPECT(0x7, gbc.readMem(0xeb92));
        // CB 07 0147
        gbc.setState(0x2517, 0x390a, 0xe1c0, 0x378, 0x601f, 0xb9d2, 0x0, 0x0);
        gbc.writeMem(0x2517, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x390a, gbc.sp());
        EXPECT(0x2519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0148
        gbc.setState(0x9400, 0x2443, 0xe140, 0x19b3, 0x1e88, 0x9c4c, 0x1, 0x1);
        gbc.writeMem(0x9400, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2443, gbc.sp());
        EXPECT(0x9402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9400));
        EXPECT(0x7, gbc.readMem(0x9401));
        // CB 07 0149
        gbc.setState(0xaaa5, 0xed9b, 0xcc10, 0xeccb, 0xedd6, 0xf0b, 0x1, 0x0);
        gbc.writeMem(0xaaa5, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xed9b, gbc.sp());
        EXPECT(0xaaa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa5));
        EXPECT(0x7, gbc.readMem(0xaaa6));
        // CB 07 014A
        gbc.setState(0x49a3, 0xbc, 0x4d30, 0xa6dd, 0xc753, 0x3833, 0x0, 0x1);
        gbc.writeMem(0x49a3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbc, gbc.sp());
        EXPECT(0x49a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 014B
        gbc.setState(0x33ae, 0xb474, 0xeae0, 0xe35c, 0x4475, 0x15ee, 0x1, 0x0);
        gbc.writeMem(0x33ae, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb474, gbc.sp());
        EXPECT(0x33b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 014C
        gbc.setState(0x228d, 0xe1bf, 0xbc10, 0x64d3, 0x78b9, 0x36c0, 0x0, 0x0);
        gbc.writeMem(0x228d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe1bf, gbc.sp());
        EXPECT(0x228f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 014D
        gbc.setState(0xc77d, 0x4336, 0xf9f0, 0xcbc0, 0xb244, 0xf8fc, 0x0, 0x0);
        gbc.writeMem(0xc77d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4336, gbc.sp());
        EXPECT(0xc77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc77d));
        EXPECT(0x7, gbc.readMem(0xc77e));
        // CB 07 014E
        gbc.setState(0xa96e, 0x4890, 0x6380, 0x31ab, 0xf7d3, 0xc6b, 0x0, 0x0);
        gbc.writeMem(0xa96e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4890, gbc.sp());
        EXPECT(0xa970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96e));
        EXPECT(0x7, gbc.readMem(0xa96f));
        // CB 07 014F
        gbc.setState(0x414d, 0x2bf9, 0x3990, 0x98e8, 0x863b, 0xef47, 0x1, 0x0);
        gbc.writeMem(0x414d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2bf9, gbc.sp());
        EXPECT(0x414f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0150
        gbc.setState(0x22a, 0xe12d, 0x6e80, 0x4441, 0x963, 0xcac3, 0x0, 0x0);
        gbc.writeMem(0x22a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe12d, gbc.sp());
        EXPECT(0x22c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0151
        gbc.setState(0xd039, 0x40d9, 0x2530, 0xa120, 0x4561, 0x9265, 0x1, 0x1);
        gbc.writeMem(0xd039, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x40d9, gbc.sp());
        EXPECT(0xd03b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd039));
        EXPECT(0x7, gbc.readMem(0xd03a));
        // CB 07 0152
        gbc.setState(0x2462, 0x7f79, 0x490, 0xe74b, 0x3bc, 0xee6a, 0x0, 0x0);
        gbc.writeMem(0x2462, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7f79, gbc.sp());
        EXPECT(0x2464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0153
        gbc.setState(0x8c71, 0x9a0a, 0x4c30, 0x84a7, 0xe346, 0xf75e, 0x0, 0x1);
        gbc.writeMem(0x8c71, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9a0a, gbc.sp());
        EXPECT(0x8c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c71));
        EXPECT(0x7, gbc.readMem(0x8c72));
        // CB 07 0154
        gbc.setState(0x16d8, 0xe0f3, 0x66a0, 0x1c1a, 0xa3a2, 0x67db, 0x1, 0x1);
        gbc.writeMem(0x16d8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe0f3, gbc.sp());
        EXPECT(0x16da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0155
        gbc.setState(0x43be, 0x56d0, 0xcfa0, 0xb87a, 0x7324, 0x74ee, 0x0, 0x1);
        gbc.writeMem(0x43be, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x56d0, gbc.sp());
        EXPECT(0x43c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0156
        gbc.setState(0xc8f6, 0x1270, 0x60e0, 0x6ef5, 0xbd07, 0xd20c, 0x1, 0x0);
        gbc.writeMem(0xc8f6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1270, gbc.sp());
        EXPECT(0xc8f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f6));
        EXPECT(0x7, gbc.readMem(0xc8f7));
        // CB 07 0158
        gbc.setState(0xa40d, 0x3056, 0x80e0, 0x8909, 0xb407, 0x6781, 0x1, 0x1);
        gbc.writeMem(0xa40d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3056, gbc.sp());
        EXPECT(0xa40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40d));
        EXPECT(0x7, gbc.readMem(0xa40e));
        // CB 07 0159
        gbc.setState(0x7138, 0x2e5, 0xd800, 0x44f4, 0xaca1, 0x9ffc, 0x0, 0x0);
        gbc.writeMem(0x7138, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2e5, gbc.sp());
        EXPECT(0x713a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 015A
        gbc.setState(0xe1a4, 0xab10, 0xa9f0, 0xe06c, 0xc191, 0xd05a, 0x0, 0x0);
        gbc.writeMem(0xe1a4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xab10, gbc.sp());
        EXPECT(0xe1a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a4));
        EXPECT(0x7, gbc.readMem(0xe1a5));
        // CB 07 015B
        gbc.setState(0xbd43, 0xd87f, 0x1cb0, 0x480a, 0xaaa5, 0x7b41, 0x0, 0x1);
        gbc.writeMem(0xbd43, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd87f, gbc.sp());
        EXPECT(0xbd45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd43));
        EXPECT(0x7, gbc.readMem(0xbd44));
        // CB 07 015D
        gbc.setState(0x779e, 0xd306, 0x1800, 0xd963, 0x613c, 0x375d, 0x1, 0x1);
        gbc.writeMem(0x779e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd306, gbc.sp());
        EXPECT(0x77a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 015E
        gbc.setState(0xcf2, 0x44f1, 0x4ba0, 0x6849, 0x1bd2, 0xef7, 0x0, 0x0);
        gbc.writeMem(0xcf2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x44f1, gbc.sp());
        EXPECT(0xcf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 015F
        gbc.setState(0x9c67, 0xd4dd, 0xec00, 0x172c, 0x8860, 0xdc15, 0x1, 0x0);
        gbc.writeMem(0x9c67, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd4dd, gbc.sp());
        EXPECT(0x9c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c67));
        EXPECT(0x7, gbc.readMem(0x9c68));
        // CB 07 0161
        gbc.setState(0x2c4a, 0x3080, 0x95a0, 0x74cf, 0xd690, 0x43aa, 0x1, 0x1);
        gbc.writeMem(0x2c4a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3080, gbc.sp());
        EXPECT(0x2c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0162
        gbc.setState(0x449b, 0xd08c, 0x8830, 0x6787, 0x2b0d, 0x2621, 0x1, 0x1);
        gbc.writeMem(0x449b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd08c, gbc.sp());
        EXPECT(0x449d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0163
        gbc.setState(0xd558, 0xd72, 0xd440, 0xcf53, 0xad54, 0x5a62, 0x1, 0x0);
        gbc.writeMem(0xd558, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd72, gbc.sp());
        EXPECT(0xd55a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd558));
        EXPECT(0x7, gbc.readMem(0xd559));
        // CB 07 0164
        gbc.setState(0x12c9, 0xdc83, 0x3410, 0x1758, 0xb890, 0xd39e, 0x1, 0x1);
        gbc.writeMem(0x12c9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdc83, gbc.sp());
        EXPECT(0x12cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0165
        gbc.setState(0x41c6, 0xcd45, 0x5020, 0x9ee5, 0x84da, 0x208a, 0x0, 0x1);
        gbc.writeMem(0x41c6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcd45, gbc.sp());
        EXPECT(0x41c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0166
        gbc.setState(0x6cc0, 0x4c66, 0x2f80, 0xfa19, 0xad8c, 0x5e5d, 0x0, 0x1);
        gbc.writeMem(0x6cc0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4c66, gbc.sp());
        EXPECT(0x6cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0167
        gbc.setState(0xeede, 0xb256, 0x65e0, 0xe9b5, 0xb992, 0x42a5, 0x1, 0x1);
        gbc.writeMem(0xeede, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb256, gbc.sp());
        EXPECT(0xeee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeede));
        EXPECT(0x7, gbc.readMem(0xeedf));
        // CB 07 0168
        gbc.setState(0x7f57, 0xdfde, 0x8000, 0xcedd, 0x3cbf, 0x78b8, 0x1, 0x0);
        gbc.writeMem(0x7f57, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdfde, gbc.sp());
        EXPECT(0x7f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0169
        gbc.setState(0x2b9d, 0xcbb8, 0x9810, 0x81be, 0x9bb2, 0xbd0f, 0x0, 0x0);
        gbc.writeMem(0x2b9d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcbb8, gbc.sp());
        EXPECT(0x2b9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 016B
        gbc.setState(0x6b6a, 0xd8e2, 0xd000, 0x4607, 0x713c, 0x6dbe, 0x1, 0x0);
        gbc.writeMem(0x6b6a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd8e2, gbc.sp());
        EXPECT(0x6b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 016C
        gbc.setState(0x5dcb, 0x1dfa, 0x8970, 0x3333, 0xfa9b, 0x3679, 0x1, 0x0);
        gbc.writeMem(0x5dcb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1dfa, gbc.sp());
        EXPECT(0x5dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 016D
        gbc.setState(0x7691, 0xe6a9, 0xc750, 0xd7d7, 0x585e, 0x1853, 0x0, 0x0);
        gbc.writeMem(0x7691, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe6a9, gbc.sp());
        EXPECT(0x7693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 016F
        gbc.setState(0xcb75, 0xeb9, 0xda40, 0x52d0, 0x9902, 0xb6e1, 0x0, 0x0);
        gbc.writeMem(0xcb75, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xeb9, gbc.sp());
        EXPECT(0xcb77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb75));
        EXPECT(0x7, gbc.readMem(0xcb76));
        // CB 07 0170
        gbc.setState(0xb33b, 0x447a, 0x15a0, 0x272f, 0xf817, 0x799a, 0x0, 0x1);
        gbc.writeMem(0xb33b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x447a, gbc.sp());
        EXPECT(0xb33d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb33b));
        EXPECT(0x7, gbc.readMem(0xb33c));
        // CB 07 0171
        gbc.setState(0x2110, 0x29c2, 0x9720, 0x78a4, 0x1ada, 0x7e21, 0x1, 0x0);
        gbc.writeMem(0x2110, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x29c2, gbc.sp());
        EXPECT(0x2112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0172
        gbc.setState(0x9393, 0xc958, 0xc050, 0xf8f9, 0x7638, 0x2a80, 0x1, 0x0);
        gbc.writeMem(0x9393, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc958, gbc.sp());
        EXPECT(0x9395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9393));
        EXPECT(0x7, gbc.readMem(0x9394));
        // CB 07 0173
        gbc.setState(0x8c45, 0x52b1, 0xdec0, 0x5771, 0x4bae, 0x57ff, 0x1, 0x0);
        gbc.writeMem(0x8c45, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x52b1, gbc.sp());
        EXPECT(0x8c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c45));
        EXPECT(0x7, gbc.readMem(0x8c46));
        // CB 07 0174
        gbc.setState(0xb7eb, 0x30a9, 0x49d0, 0x6314, 0x64da, 0x6091, 0x0, 0x1);
        gbc.writeMem(0xb7eb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x30a9, gbc.sp());
        EXPECT(0xb7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7eb));
        EXPECT(0x7, gbc.readMem(0xb7ec));
        // CB 07 0175
        gbc.setState(0x809a, 0xf891, 0x6b0, 0x369b, 0xce27, 0x6e5a, 0x0, 0x1);
        gbc.writeMem(0x809a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf891, gbc.sp());
        EXPECT(0x809c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809a));
        EXPECT(0x7, gbc.readMem(0x809b));
        // CB 07 0176
        gbc.setState(0x3b16, 0x22c5, 0x9410, 0x9010, 0x2673, 0x6e51, 0x0, 0x1);
        gbc.writeMem(0x3b16, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x22c5, gbc.sp());
        EXPECT(0x3b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0177
        gbc.setState(0x5fef, 0xa655, 0x3b40, 0x7e04, 0xe39f, 0xc6e2, 0x0, 0x0);
        gbc.writeMem(0x5fef, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa655, gbc.sp());
        EXPECT(0x5ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0178
        gbc.setState(0x62e3, 0x8e33, 0x6c20, 0xb5ee, 0x79ab, 0xf487, 0x1, 0x1);
        gbc.writeMem(0x62e3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8e33, gbc.sp());
        EXPECT(0x62e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 017A
        gbc.setState(0xcb71, 0x276d, 0x77c0, 0x3a63, 0x5eb6, 0xe080, 0x1, 0x1);
        gbc.writeMem(0xcb71, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x276d, gbc.sp());
        EXPECT(0xcb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb71));
        EXPECT(0x7, gbc.readMem(0xcb72));
        // CB 07 017B
        gbc.setState(0xc03f, 0x78c4, 0x99b0, 0x9da2, 0xeda1, 0xf608, 0x0, 0x1);
        gbc.writeMem(0xc03f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x78c4, gbc.sp());
        EXPECT(0xc041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03f));
        EXPECT(0x7, gbc.readMem(0xc040));
        // CB 07 017D
        gbc.setState(0x7c6c, 0xe7b5, 0x6550, 0x6e9c, 0x8d9a, 0x75fb, 0x0, 0x1);
        gbc.writeMem(0x7c6c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe7b5, gbc.sp());
        EXPECT(0x7c6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 017F
        gbc.setState(0x2dcd, 0xee15, 0x2160, 0x7f13, 0xf354, 0x4119, 0x0, 0x0);
        gbc.writeMem(0x2dcd, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xee15, gbc.sp());
        EXPECT(0x2dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0180
        gbc.setState(0x6ad2, 0x1bd3, 0x66c0, 0x8bbf, 0x25ea, 0x8ade, 0x1, 0x0);
        gbc.writeMem(0x6ad2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1bd3, gbc.sp());
        EXPECT(0x6ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0181
        gbc.setState(0x129e, 0x6ed2, 0x2c30, 0xc0b9, 0xed73, 0x80e9, 0x0, 0x0);
        gbc.writeMem(0x129e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6ed2, gbc.sp());
        EXPECT(0x12a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0182
        gbc.setState(0x4431, 0x64a4, 0xd440, 0x1a9, 0x28e4, 0x5296, 0x1, 0x0);
        gbc.writeMem(0x4431, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x64a4, gbc.sp());
        EXPECT(0x4433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0183
        gbc.setState(0x75e, 0x8e46, 0xdca0, 0xc5c4, 0xcd11, 0xa8a9, 0x1, 0x0);
        gbc.writeMem(0x75e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8e46, gbc.sp());
        EXPECT(0x760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0184
        gbc.setState(0x781f, 0x8955, 0xa410, 0x34eb, 0xe519, 0x5801, 0x1, 0x0);
        gbc.writeMem(0x781f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8955, gbc.sp());
        EXPECT(0x7821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0185
        gbc.setState(0x8f48, 0x5d98, 0x2410, 0x1422, 0x7a6d, 0xee45, 0x1, 0x1);
        gbc.writeMem(0x8f48, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5d98, gbc.sp());
        EXPECT(0x8f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f48));
        EXPECT(0x7, gbc.readMem(0x8f49));
        // CB 07 0186
        gbc.setState(0x96be, 0x7259, 0xd590, 0x5f3f, 0x812d, 0x7359, 0x1, 0x0);
        gbc.writeMem(0x96be, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7259, gbc.sp());
        EXPECT(0x96c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96be));
        EXPECT(0x7, gbc.readMem(0x96bf));
        // CB 07 0187
        gbc.setState(0x896f, 0x1112, 0xb130, 0xc8a6, 0x2c86, 0xe149, 0x0, 0x0);
        gbc.writeMem(0x896f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1112, gbc.sp());
        EXPECT(0x8971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x896f));
        EXPECT(0x7, gbc.readMem(0x8970));
        // CB 07 0188
        gbc.setState(0x1a66, 0xadba, 0x7bc0, 0x7a2b, 0xa23c, 0xf132, 0x0, 0x1);
        gbc.writeMem(0x1a66, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xadba, gbc.sp());
        EXPECT(0x1a68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0189
        gbc.setState(0x6eb1, 0xf84f, 0x5c0, 0x55ef, 0x7816, 0x1a65, 0x0, 0x1);
        gbc.writeMem(0x6eb1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf84f, gbc.sp());
        EXPECT(0x6eb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 018A
        gbc.setState(0x3e37, 0x5c8c, 0x4b60, 0xae8d, 0x54cf, 0x31a7, 0x0, 0x0);
        gbc.writeMem(0x3e37, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5c8c, gbc.sp());
        EXPECT(0x3e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 018B
        gbc.setState(0x178b, 0x16c9, 0x7810, 0x6b35, 0x92b7, 0x7185, 0x0, 0x1);
        gbc.writeMem(0x178b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x16c9, gbc.sp());
        EXPECT(0x178d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 018C
        gbc.setState(0xaa7d, 0xe8d3, 0xc9c0, 0x7cc1, 0xb8c8, 0xbcac, 0x0, 0x0);
        gbc.writeMem(0xaa7d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe8d3, gbc.sp());
        EXPECT(0xaa7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa7d));
        EXPECT(0x7, gbc.readMem(0xaa7e));
        // CB 07 018D
        gbc.setState(0x837d, 0x909, 0x86f0, 0x2916, 0x3386, 0xd83b, 0x0, 0x0);
        gbc.writeMem(0x837d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x909, gbc.sp());
        EXPECT(0x837f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837d));
        EXPECT(0x7, gbc.readMem(0x837e));
        // CB 07 018F
        gbc.setState(0xab61, 0x3a5c, 0xefc0, 0xccee, 0x7245, 0x7d1d, 0x0, 0x0);
        gbc.writeMem(0xab61, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3a5c, gbc.sp());
        EXPECT(0xab63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab61));
        EXPECT(0x7, gbc.readMem(0xab62));
        // CB 07 0190
        gbc.setState(0x39b3, 0x9ff6, 0xa620, 0xb870, 0x67ac, 0x734c, 0x0, 0x0);
        gbc.writeMem(0x39b3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9ff6, gbc.sp());
        EXPECT(0x39b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0191
        gbc.setState(0x319c, 0x1daa, 0x7300, 0xe6cb, 0x6412, 0xdd2, 0x1, 0x1);
        gbc.writeMem(0x319c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1daa, gbc.sp());
        EXPECT(0x319e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0192
        gbc.setState(0xba56, 0xa8e7, 0x68a0, 0xd20a, 0x759f, 0x4ede, 0x1, 0x0);
        gbc.writeMem(0xba56, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa8e7, gbc.sp());
        EXPECT(0xba58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba56));
        EXPECT(0x7, gbc.readMem(0xba57));
        // CB 07 0193
        gbc.setState(0x1a9e, 0x816, 0xd630, 0xea91, 0x8d27, 0x2662, 0x0, 0x1);
        gbc.writeMem(0x1a9e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x816, gbc.sp());
        EXPECT(0x1aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0194
        gbc.setState(0xe271, 0xb577, 0x550, 0xedd4, 0x84a2, 0xd3c7, 0x1, 0x1);
        gbc.writeMem(0xe271, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb577, gbc.sp());
        EXPECT(0xe273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe271));
        EXPECT(0x7, gbc.readMem(0xe272));
        // CB 07 0195
        gbc.setState(0xea7, 0x812e, 0xa9e0, 0x9fd6, 0x57b5, 0xb0d1, 0x1, 0x1);
        gbc.writeMem(0xea7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x812e, gbc.sp());
        EXPECT(0xea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0196
        gbc.setState(0x691c, 0x7ae, 0x8420, 0xf6ad, 0xfd1b, 0x75ea, 0x1, 0x0);
        gbc.writeMem(0x691c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7ae, gbc.sp());
        EXPECT(0x691e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0197
        gbc.setState(0xace9, 0x6d9a, 0xe690, 0x82d5, 0x2f4d, 0xdc17, 0x1, 0x0);
        gbc.writeMem(0xace9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6d9a, gbc.sp());
        EXPECT(0xaceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace9));
        EXPECT(0x7, gbc.readMem(0xacea));
        // CB 07 0198
        gbc.setState(0x4f96, 0x86ae, 0x83e0, 0x3adb, 0xa2da, 0xccf, 0x0, 0x0);
        gbc.writeMem(0x4f96, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x86ae, gbc.sp());
        EXPECT(0x4f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0199
        gbc.setState(0x7d53, 0x75fc, 0x6030, 0x97d6, 0x3245, 0x22f9, 0x0, 0x0);
        gbc.writeMem(0x7d53, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x75fc, gbc.sp());
        EXPECT(0x7d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 019A
        gbc.setState(0x6fa, 0x9eea, 0x5140, 0xbe20, 0x3dee, 0x7df1, 0x0, 0x1);
        gbc.writeMem(0x6fa, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9eea, gbc.sp());
        EXPECT(0x6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 019B
        gbc.setState(0x9994, 0x3a29, 0xd940, 0xc7e4, 0xcfbb, 0x291, 0x0, 0x0);
        gbc.writeMem(0x9994, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3a29, gbc.sp());
        EXPECT(0x9996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9994));
        EXPECT(0x7, gbc.readMem(0x9995));
        // CB 07 019C
        gbc.setState(0x2111, 0xd9e5, 0xca50, 0xc873, 0x255f, 0x963a, 0x0, 0x1);
        gbc.writeMem(0x2111, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd9e5, gbc.sp());
        EXPECT(0x2113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 019D
        gbc.setState(0x6de8, 0xda85, 0xbdf0, 0x43d3, 0x4ca4, 0x1369, 0x0, 0x1);
        gbc.writeMem(0x6de8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xda85, gbc.sp());
        EXPECT(0x6dea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 019E
        gbc.setState(0xa3a9, 0xc1f7, 0x9cc0, 0xe249, 0x8c19, 0xc42e, 0x1, 0x0);
        gbc.writeMem(0xa3a9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc1f7, gbc.sp());
        EXPECT(0xa3ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a9));
        EXPECT(0x7, gbc.readMem(0xa3aa));
        // CB 07 019F
        gbc.setState(0xac7d, 0xb8b3, 0x37d0, 0xfc2f, 0x7143, 0xb7cc, 0x1, 0x0);
        gbc.writeMem(0xac7d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb8b3, gbc.sp());
        EXPECT(0xac7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac7d));
        EXPECT(0x7, gbc.readMem(0xac7e));
        // CB 07 01A0
        gbc.setState(0x92d5, 0x5b30, 0x3a40, 0x7e07, 0x66a7, 0x682d, 0x1, 0x1);
        gbc.writeMem(0x92d5, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5b30, gbc.sp());
        EXPECT(0x92d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d5));
        EXPECT(0x7, gbc.readMem(0x92d6));
        // CB 07 01A1
        gbc.setState(0x93f6, 0x662b, 0xcbc0, 0x501d, 0x30e8, 0x954d, 0x1, 0x0);
        gbc.writeMem(0x93f6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x662b, gbc.sp());
        EXPECT(0x93f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f6));
        EXPECT(0x7, gbc.readMem(0x93f7));
        // CB 07 01A2
        gbc.setState(0xbbcc, 0xe724, 0xfe60, 0x10f0, 0x5849, 0x77d4, 0x1, 0x0);
        gbc.writeMem(0xbbcc, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe724, gbc.sp());
        EXPECT(0xbbce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbcc));
        EXPECT(0x7, gbc.readMem(0xbbcd));
        // CB 07 01A3
        gbc.setState(0x33ff, 0x95c3, 0xc530, 0x2b3a, 0x5a7d, 0x1fbc, 0x0, 0x1);
        gbc.writeMem(0x33ff, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x95c3, gbc.sp());
        EXPECT(0x3401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01A4
        gbc.setState(0x2e18, 0x913e, 0xbc50, 0x5397, 0x7979, 0xbca2, 0x0, 0x0);
        gbc.writeMem(0x2e18, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x913e, gbc.sp());
        EXPECT(0x2e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01A5
        gbc.setState(0x2144, 0x2d3b, 0x7050, 0x773b, 0x9bf4, 0xb2c4, 0x1, 0x1);
        gbc.writeMem(0x2144, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2d3b, gbc.sp());
        EXPECT(0x2146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01A6
        gbc.setState(0x5c4a, 0xde99, 0x8c50, 0xd3b5, 0xde14, 0xb517, 0x0, 0x0);
        gbc.writeMem(0x5c4a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xde99, gbc.sp());
        EXPECT(0x5c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01A7
        gbc.setState(0xdbf8, 0xf609, 0xe8e0, 0x2b3d, 0xc88a, 0x9dcd, 0x0, 0x0);
        gbc.writeMem(0xdbf8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf609, gbc.sp());
        EXPECT(0xdbfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf8));
        EXPECT(0x7, gbc.readMem(0xdbf9));
        // CB 07 01A8
        gbc.setState(0x994b, 0x1150, 0x49b0, 0xd3ec, 0xf43d, 0x83ef, 0x1, 0x0);
        gbc.writeMem(0x994b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1150, gbc.sp());
        EXPECT(0x994d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994b));
        EXPECT(0x7, gbc.readMem(0x994c));
        // CB 07 01A9
        gbc.setState(0x788f, 0xfc4f, 0xa340, 0xa3e, 0x8218, 0xfb6a, 0x0, 0x0);
        gbc.writeMem(0x788f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfc4f, gbc.sp());
        EXPECT(0x7891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01AA
        gbc.setState(0x77e9, 0x7aeb, 0xf90, 0xca56, 0xd656, 0x12d9, 0x0, 0x0);
        gbc.writeMem(0x77e9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7aeb, gbc.sp());
        EXPECT(0x77eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01AB
        gbc.setState(0x314d, 0xd645, 0xdb10, 0x4c08, 0x86ca, 0xc188, 0x1, 0x0);
        gbc.writeMem(0x314d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd645, gbc.sp());
        EXPECT(0x314f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01AC
        gbc.setState(0xd499, 0x7cc5, 0x7170, 0xb0c8, 0x2518, 0x6f2a, 0x1, 0x1);
        gbc.writeMem(0xd499, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7cc5, gbc.sp());
        EXPECT(0xd49b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd499));
        EXPECT(0x7, gbc.readMem(0xd49a));
        // CB 07 01AD
        gbc.setState(0x78df, 0x6286, 0x4cd0, 0xcd5d, 0x4920, 0xade9, 0x1, 0x0);
        gbc.writeMem(0x78df, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6286, gbc.sp());
        EXPECT(0x78e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01AF
        gbc.setState(0xb483, 0x9edb, 0x5110, 0x5234, 0xc5da, 0x7a09, 0x0, 0x0);
        gbc.writeMem(0xb483, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9edb, gbc.sp());
        EXPECT(0xb485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb483));
        EXPECT(0x7, gbc.readMem(0xb484));
        // CB 07 01B0
        gbc.setState(0x2df5, 0xc467, 0x2da0, 0x8e86, 0xea78, 0x58b2, 0x1, 0x1);
        gbc.writeMem(0x2df5, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc467, gbc.sp());
        EXPECT(0x2df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01B1
        gbc.setState(0x2f13, 0x16f5, 0xf470, 0x2fb0, 0x4ff3, 0xb4a4, 0x1, 0x0);
        gbc.writeMem(0x2f13, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x16f5, gbc.sp());
        EXPECT(0x2f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01B2
        gbc.setState(0x7e5d, 0x2d3c, 0x5390, 0x29e, 0x653d, 0x76b8, 0x0, 0x0);
        gbc.writeMem(0x7e5d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2d3c, gbc.sp());
        EXPECT(0x7e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01B3
        gbc.setState(0xe653, 0x9c31, 0x6d30, 0xf25b, 0x4f3d, 0xf66, 0x0, 0x1);
        gbc.writeMem(0xe653, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9c31, gbc.sp());
        EXPECT(0xe655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe653));
        EXPECT(0x7, gbc.readMem(0xe654));
        // CB 07 01B4
        gbc.setState(0x3bab, 0xa48e, 0xd460, 0x7ca3, 0x68ee, 0x86a0, 0x0, 0x1);
        gbc.writeMem(0x3bab, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa48e, gbc.sp());
        EXPECT(0x3bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01B5
        gbc.setState(0x452a, 0x80aa, 0x4590, 0x8dc3, 0x2c6b, 0x82a9, 0x1, 0x0);
        gbc.writeMem(0x452a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x80aa, gbc.sp());
        EXPECT(0x452c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01B6
        gbc.setState(0x3d1c, 0x804f, 0xa860, 0x2a64, 0xb4c7, 0xe651, 0x0, 0x0);
        gbc.writeMem(0x3d1c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x804f, gbc.sp());
        EXPECT(0x3d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01B7
        gbc.setState(0x55b0, 0x2b34, 0xe240, 0xd27e, 0x1af7, 0xea10, 0x0, 0x0);
        gbc.writeMem(0x55b0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2b34, gbc.sp());
        EXPECT(0x55b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01B8
        gbc.setState(0x8938, 0x63cd, 0x33f0, 0xcf3c, 0xa451, 0x6e71, 0x0, 0x1);
        gbc.writeMem(0x8938, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x63cd, gbc.sp());
        EXPECT(0x893a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8938));
        EXPECT(0x7, gbc.readMem(0x8939));
        // CB 07 01B9
        gbc.setState(0x8cea, 0x197e, 0xc440, 0x2193, 0x5c4f, 0xe6a8, 0x0, 0x1);
        gbc.writeMem(0x8cea, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x197e, gbc.sp());
        EXPECT(0x8cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cea));
        EXPECT(0x7, gbc.readMem(0x8ceb));
        // CB 07 01BA
        gbc.setState(0xa57f, 0x9029, 0x3520, 0x8dd7, 0x2f5f, 0x6eea, 0x1, 0x0);
        gbc.writeMem(0xa57f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9029, gbc.sp());
        EXPECT(0xa581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57f));
        EXPECT(0x7, gbc.readMem(0xa580));
        // CB 07 01BB
        gbc.setState(0x6e7c, 0xf8a2, 0xe3a0, 0x2cf2, 0xb263, 0xdfb2, 0x0, 0x1);
        gbc.writeMem(0x6e7c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf8a2, gbc.sp());
        EXPECT(0x6e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01BC
        gbc.setState(0x8a3f, 0xa642, 0xe8a0, 0x5639, 0x4d72, 0x4176, 0x0, 0x1);
        gbc.writeMem(0x8a3f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa642, gbc.sp());
        EXPECT(0x8a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a3f));
        EXPECT(0x7, gbc.readMem(0x8a40));
        // CB 07 01BD
        gbc.setState(0xe5de, 0x8e3f, 0x3150, 0xa0f7, 0xd552, 0xcbde, 0x1, 0x0);
        gbc.writeMem(0xe5de, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8e3f, gbc.sp());
        EXPECT(0xe5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5de));
        EXPECT(0x7, gbc.readMem(0xe5df));
        // CB 07 01BE
        gbc.setState(0x4c62, 0xfec0, 0x7e90, 0xd9e9, 0x924c, 0x5c2b, 0x1, 0x1);
        gbc.writeMem(0x4c62, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfec0, gbc.sp());
        EXPECT(0x4c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01BF
        gbc.setState(0x1d0f, 0x59aa, 0x3c40, 0x144e, 0x2e4a, 0xda07, 0x1, 0x0);
        gbc.writeMem(0x1d0f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x59aa, gbc.sp());
        EXPECT(0x1d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01C0
        gbc.setState(0x2243, 0x2878, 0xdc30, 0xf8b3, 0x70ab, 0x5637, 0x1, 0x1);
        gbc.writeMem(0x2243, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2878, gbc.sp());
        EXPECT(0x2245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01C1
        gbc.setState(0xae79, 0xfa77, 0x1a30, 0xba2d, 0xb10b, 0xbc5f, 0x0, 0x0);
        gbc.writeMem(0xae79, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfa77, gbc.sp());
        EXPECT(0xae7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae79));
        EXPECT(0x7, gbc.readMem(0xae7a));
        // CB 07 01C2
        gbc.setState(0xbdb, 0x3cf4, 0xa000, 0x792, 0xe644, 0xb499, 0x0, 0x0);
        gbc.writeMem(0xbdb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3cf4, gbc.sp());
        EXPECT(0xbdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01C3
        gbc.setState(0x2c23, 0x9b03, 0x2110, 0xf98c, 0xe698, 0x7115, 0x0, 0x0);
        gbc.writeMem(0x2c23, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9b03, gbc.sp());
        EXPECT(0x2c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01C4
        gbc.setState(0x4e3d, 0xfcb9, 0x1910, 0xb61b, 0x3ec5, 0x938b, 0x1, 0x0);
        gbc.writeMem(0x4e3d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfcb9, gbc.sp());
        EXPECT(0x4e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01C5
        gbc.setState(0x9357, 0x38b, 0xa990, 0xbd07, 0x9c07, 0xe181, 0x0, 0x0);
        gbc.writeMem(0x9357, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x38b, gbc.sp());
        EXPECT(0x9359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9357));
        EXPECT(0x7, gbc.readMem(0x9358));
        // CB 07 01C6
        gbc.setState(0xac2b, 0x7381, 0x57b0, 0x2f8b, 0xedc8, 0x24bc, 0x0, 0x1);
        gbc.writeMem(0xac2b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7381, gbc.sp());
        EXPECT(0xac2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2b));
        EXPECT(0x7, gbc.readMem(0xac2c));
        // CB 07 01C7
        gbc.setState(0xd1c0, 0xee29, 0xeff0, 0xc595, 0x2b48, 0xc1a1, 0x0, 0x0);
        gbc.writeMem(0xd1c0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xee29, gbc.sp());
        EXPECT(0xd1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c0));
        EXPECT(0x7, gbc.readMem(0xd1c1));
        // CB 07 01C8
        gbc.setState(0x2429, 0x5fad, 0x8cd0, 0x2231, 0xe609, 0x86a9, 0x0, 0x0);
        gbc.writeMem(0x2429, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5fad, gbc.sp());
        EXPECT(0x242b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01C9
        gbc.setState(0x6280, 0xb7c7, 0x5000, 0x6d3, 0xb3b6, 0xc512, 0x1, 0x0);
        gbc.writeMem(0x6280, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb7c7, gbc.sp());
        EXPECT(0x6282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01CB
        gbc.setState(0xc914, 0x4f3f, 0x2170, 0x9037, 0xf465, 0xbaef, 0x0, 0x1);
        gbc.writeMem(0xc914, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4f3f, gbc.sp());
        EXPECT(0xc916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc914));
        EXPECT(0x7, gbc.readMem(0xc915));
        // CB 07 01CC
        gbc.setState(0x7d1a, 0x403c, 0x1fa0, 0x1c71, 0xfd67, 0xd1f6, 0x1, 0x1);
        gbc.writeMem(0x7d1a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x403c, gbc.sp());
        EXPECT(0x7d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01CD
        gbc.setState(0x597d, 0xf6d8, 0xd850, 0xbd2b, 0x50b7, 0xb1a, 0x1, 0x1);
        gbc.writeMem(0x597d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf6d8, gbc.sp());
        EXPECT(0x597f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01CE
        gbc.setState(0x4a45, 0x9c1b, 0x8e50, 0xf0ae, 0x4f90, 0xbd65, 0x0, 0x0);
        gbc.writeMem(0x4a45, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9c1b, gbc.sp());
        EXPECT(0x4a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01CF
        gbc.setState(0x4131, 0x600a, 0x1590, 0xb64b, 0xc4b, 0x45be, 0x0, 0x0);
        gbc.writeMem(0x4131, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x600a, gbc.sp());
        EXPECT(0x4133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01D0
        gbc.setState(0x747f, 0xf547, 0xddc0, 0x7081, 0x7db7, 0x750d, 0x1, 0x0);
        gbc.writeMem(0x747f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf547, gbc.sp());
        EXPECT(0x7481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01D1
        gbc.setState(0xb715, 0x69e1, 0x1990, 0xca5f, 0x5d4b, 0x1efd, 0x1, 0x0);
        gbc.writeMem(0xb715, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x69e1, gbc.sp());
        EXPECT(0xb717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb715));
        EXPECT(0x7, gbc.readMem(0xb716));
        // CB 07 01D2
        gbc.setState(0xcc61, 0xcdb8, 0x3440, 0x1bf6, 0x871, 0xf501, 0x1, 0x1);
        gbc.writeMem(0xcc61, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcdb8, gbc.sp());
        EXPECT(0xcc63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc61));
        EXPECT(0x7, gbc.readMem(0xcc62));
        // CB 07 01D3
        gbc.setState(0xca78, 0x7c37, 0x22f0, 0xa851, 0x984f, 0x76b8, 0x0, 0x0);
        gbc.writeMem(0xca78, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7c37, gbc.sp());
        EXPECT(0xca7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca78));
        EXPECT(0x7, gbc.readMem(0xca79));
        // CB 07 01D4
        gbc.setState(0x67f, 0x4659, 0x42c0, 0xa63a, 0x574a, 0xe27a, 0x0, 0x1);
        gbc.writeMem(0x67f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4659, gbc.sp());
        EXPECT(0x681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01D5
        gbc.setState(0x8c6a, 0xfe37, 0xe7c0, 0xc466, 0xab9b, 0xb183, 0x1, 0x1);
        gbc.writeMem(0x8c6a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfe37, gbc.sp());
        EXPECT(0x8c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c6a));
        EXPECT(0x7, gbc.readMem(0x8c6b));
        // CB 07 01D6
        gbc.setState(0x7407, 0x5bb6, 0xb520, 0xe7a, 0x6b1b, 0x5898, 0x1, 0x1);
        gbc.writeMem(0x7407, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5bb6, gbc.sp());
        EXPECT(0x7409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01D7
        gbc.setState(0x3c76, 0xc41, 0x7c70, 0x9929, 0xe227, 0x1f8e, 0x0, 0x1);
        gbc.writeMem(0x3c76, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc41, gbc.sp());
        EXPECT(0x3c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01D8
        gbc.setState(0x42b5, 0x4db4, 0xcf0, 0xb0d4, 0xd3b5, 0x7781, 0x1, 0x0);
        gbc.writeMem(0x42b5, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4db4, gbc.sp());
        EXPECT(0x42b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01D9
        gbc.setState(0x9d4b, 0x1477, 0x7390, 0x5f53, 0xc07d, 0xa875, 0x1, 0x0);
        gbc.writeMem(0x9d4b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1477, gbc.sp());
        EXPECT(0x9d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d4b));
        EXPECT(0x7, gbc.readMem(0x9d4c));
        // CB 07 01DA
        gbc.setState(0xa99e, 0x5e75, 0x8350, 0x906f, 0xd03e, 0xf77, 0x1, 0x1);
        gbc.writeMem(0xa99e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5e75, gbc.sp());
        EXPECT(0xa9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99e));
        EXPECT(0x7, gbc.readMem(0xa99f));
        // CB 07 01DB
        gbc.setState(0x4769, 0x833e, 0xfc40, 0x6336, 0x4da9, 0xfefa, 0x0, 0x0);
        gbc.writeMem(0x4769, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x833e, gbc.sp());
        EXPECT(0x476b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01DC
        gbc.setState(0x934, 0x60b4, 0xc0e0, 0xf551, 0x408a, 0xbab, 0x0, 0x0);
        gbc.writeMem(0x934, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x60b4, gbc.sp());
        EXPECT(0x936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01DD
        gbc.setState(0x53e8, 0xfd30, 0xc5e0, 0x2601, 0x616, 0x15e1, 0x0, 0x1);
        gbc.writeMem(0x53e8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfd30, gbc.sp());
        EXPECT(0x53ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01DE
        gbc.setState(0x8286, 0x71c4, 0xfe0, 0xb7b7, 0xc7ab, 0x8d16, 0x1, 0x1);
        gbc.writeMem(0x8286, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x71c4, gbc.sp());
        EXPECT(0x8288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8286));
        EXPECT(0x7, gbc.readMem(0x8287));
        // CB 07 01DF
        gbc.setState(0xb3d3, 0xe6c6, 0x93e0, 0xd57d, 0xc618, 0x31b7, 0x1, 0x1);
        gbc.writeMem(0xb3d3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe6c6, gbc.sp());
        EXPECT(0xb3d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d3));
        EXPECT(0x7, gbc.readMem(0xb3d4));
        // CB 07 01E0
        gbc.setState(0xe38e, 0xa512, 0xaee0, 0x5a73, 0xdaac, 0x7957, 0x0, 0x0);
        gbc.writeMem(0xe38e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa512, gbc.sp());
        EXPECT(0xe390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe38e));
        EXPECT(0x7, gbc.readMem(0xe38f));
        // CB 07 01E1
        gbc.setState(0x5645, 0xf15c, 0x3d50, 0xad2b, 0xb0d5, 0x6102, 0x0, 0x0);
        gbc.writeMem(0x5645, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf15c, gbc.sp());
        EXPECT(0x5647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01E2
        gbc.setState(0x7a4c, 0xad9c, 0xa2d0, 0xb7c7, 0xaa73, 0xa359, 0x1, 0x1);
        gbc.writeMem(0x7a4c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xad9c, gbc.sp());
        EXPECT(0x7a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01E3
        gbc.setState(0xed71, 0xbf37, 0xcd80, 0x9c55, 0x589a, 0xa36, 0x1, 0x0);
        gbc.writeMem(0xed71, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbf37, gbc.sp());
        EXPECT(0xed73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed71));
        EXPECT(0x7, gbc.readMem(0xed72));
        // CB 07 01E5
        gbc.setState(0x6c1c, 0xa0fb, 0xe80, 0x1051, 0xf785, 0xe95a, 0x0, 0x1);
        gbc.writeMem(0x6c1c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa0fb, gbc.sp());
        EXPECT(0x6c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01E6
        gbc.setState(0x7965, 0x5319, 0xb950, 0xa56f, 0xaa23, 0x43e7, 0x1, 0x1);
        gbc.writeMem(0x7965, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5319, gbc.sp());
        EXPECT(0x7967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01E7
        gbc.setState(0x33fc, 0xd227, 0x9ec0, 0x1d5b, 0x27de, 0xca27, 0x1, 0x0);
        gbc.writeMem(0x33fc, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd227, gbc.sp());
        EXPECT(0x33fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01E8
        gbc.setState(0x2f9f, 0x5680, 0xc600, 0xbdf8, 0xa046, 0x9bc4, 0x1, 0x1);
        gbc.writeMem(0x2f9f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5680, gbc.sp());
        EXPECT(0x2fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01E9
        gbc.setState(0x74fb, 0x2ce6, 0x2730, 0xf267, 0x83c2, 0xd308, 0x1, 0x1);
        gbc.writeMem(0x74fb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2ce6, gbc.sp());
        EXPECT(0x74fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01EA
        gbc.setState(0xde68, 0xfab6, 0xb870, 0xe830, 0x4bbc, 0xb575, 0x0, 0x1);
        gbc.writeMem(0xde68, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfab6, gbc.sp());
        EXPECT(0xde6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde68));
        EXPECT(0x7, gbc.readMem(0xde69));
        // CB 07 01EB
        gbc.setState(0x93a2, 0xe335, 0x6bf0, 0x1c47, 0xef69, 0x5bb8, 0x1, 0x1);
        gbc.writeMem(0x93a2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe335, gbc.sp());
        EXPECT(0x93a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a2));
        EXPECT(0x7, gbc.readMem(0x93a3));
        // CB 07 01EC
        gbc.setState(0x9061, 0x6bae, 0xbb50, 0xa80a, 0x5780, 0xa76f, 0x0, 0x0);
        gbc.writeMem(0x9061, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6bae, gbc.sp());
        EXPECT(0x9063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9061));
        EXPECT(0x7, gbc.readMem(0x9062));
        // CB 07 01ED
        gbc.setState(0x2d90, 0xce0a, 0x7900, 0x74c0, 0x7d8f, 0x2a76, 0x1, 0x0);
        gbc.writeMem(0x2d90, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xce0a, gbc.sp());
        EXPECT(0x2d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01EE
        gbc.setState(0x219a, 0x3f41, 0xa4b0, 0xf7e7, 0x63b0, 0xd987, 0x1, 0x1);
        gbc.writeMem(0x219a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3f41, gbc.sp());
        EXPECT(0x219c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01EF
        gbc.setState(0x31c3, 0x1208, 0x72b0, 0x19c4, 0x6a76, 0x3d47, 0x1, 0x1);
        gbc.writeMem(0x31c3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1208, gbc.sp());
        EXPECT(0x31c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01F0
        gbc.setState(0xbc3c, 0xb8f9, 0x8800, 0x59cd, 0xd2a2, 0x1e62, 0x0, 0x1);
        gbc.writeMem(0xbc3c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb8f9, gbc.sp());
        EXPECT(0xbc3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3c));
        EXPECT(0x7, gbc.readMem(0xbc3d));
        // CB 07 01F1
        gbc.setState(0x8192, 0x81d6, 0xb060, 0x8f58, 0x9419, 0x4353, 0x0, 0x0);
        gbc.writeMem(0x8192, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x81d6, gbc.sp());
        EXPECT(0x8194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8192));
        EXPECT(0x7, gbc.readMem(0x8193));
        // CB 07 01F2
        gbc.setState(0xdd75, 0x422b, 0xb140, 0x8fa8, 0x9791, 0x6382, 0x1, 0x1);
        gbc.writeMem(0xdd75, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x422b, gbc.sp());
        EXPECT(0xdd77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd75));
        EXPECT(0x7, gbc.readMem(0xdd76));
        // CB 07 01F3
        gbc.setState(0x2107, 0xed54, 0x71d0, 0xfa18, 0x7447, 0x1c43, 0x0, 0x1);
        gbc.writeMem(0x2107, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xed54, gbc.sp());
        EXPECT(0x2109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01F4
        gbc.setState(0xc531, 0xd8b6, 0xc110, 0xd2f0, 0x52e4, 0x5782, 0x0, 0x0);
        gbc.writeMem(0xc531, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd8b6, gbc.sp());
        EXPECT(0xc533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc531));
        EXPECT(0x7, gbc.readMem(0xc532));
        // CB 07 01F5
        gbc.setState(0x9801, 0x4eb9, 0x7330, 0xec5c, 0x4a5b, 0x67be, 0x1, 0x0);
        gbc.writeMem(0x9801, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4eb9, gbc.sp());
        EXPECT(0x9803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9801));
        EXPECT(0x7, gbc.readMem(0x9802));
        // CB 07 01F6
        gbc.setState(0x904c, 0x3b2b, 0xb620, 0x89ef, 0x73c2, 0x2c5d, 0x1, 0x0);
        gbc.writeMem(0x904c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3b2b, gbc.sp());
        EXPECT(0x904e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x904c));
        EXPECT(0x7, gbc.readMem(0x904d));
        // CB 07 01F7
        gbc.setState(0x56bd, 0xed69, 0x970, 0xb2e0, 0x5211, 0x79de, 0x0, 0x1);
        gbc.writeMem(0x56bd, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xed69, gbc.sp());
        EXPECT(0x56bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01F8
        gbc.setState(0x63d9, 0x4eaf, 0xc600, 0x73cb, 0x1864, 0x658e, 0x1, 0x0);
        gbc.writeMem(0x63d9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4eaf, gbc.sp());
        EXPECT(0x63db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01F9
        gbc.setState(0xb152, 0x491d, 0x7740, 0x87ac, 0x6091, 0xcb4a, 0x1, 0x0);
        gbc.writeMem(0xb152, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x491d, gbc.sp());
        EXPECT(0xb154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb152));
        EXPECT(0x7, gbc.readMem(0xb153));
        // CB 07 01FA
        gbc.setState(0x729a, 0x78bf, 0xe8c0, 0xcfce, 0xb900, 0x87d9, 0x0, 0x1);
        gbc.writeMem(0x729a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x78bf, gbc.sp());
        EXPECT(0x729c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01FB
        gbc.setState(0x84c5, 0xba66, 0x3070, 0x4a44, 0x7d70, 0xdbce, 0x1, 0x0);
        gbc.writeMem(0x84c5, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xba66, gbc.sp());
        EXPECT(0x84c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c5));
        EXPECT(0x7, gbc.readMem(0x84c6));
        // CB 07 01FC
        gbc.setState(0x1e29, 0x7321, 0x9d40, 0xafdd, 0x4ca1, 0xbdda, 0x0, 0x0);
        gbc.writeMem(0x1e29, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7321, gbc.sp());
        EXPECT(0x1e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 01FD
        gbc.setState(0xa27, 0x496a, 0x4bf0, 0xa174, 0x6db7, 0xc973, 0x1, 0x1);
        gbc.writeMem(0xa27, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x496a, gbc.sp());
        EXPECT(0xa29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 01FE
        gbc.setState(0xb2b0, 0x5cf3, 0xa2c0, 0xda0b, 0x4659, 0x46d0, 0x1, 0x0);
        gbc.writeMem(0xb2b0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5cf3, gbc.sp());
        EXPECT(0xb2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b0));
        EXPECT(0x7, gbc.readMem(0xb2b1));
        // CB 07 01FF
        gbc.setState(0x87df, 0xcc51, 0xe790, 0x8274, 0x248c, 0x5e86, 0x1, 0x1);
        gbc.writeMem(0x87df, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcc51, gbc.sp());
        EXPECT(0x87e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87df));
        EXPECT(0x7, gbc.readMem(0x87e0));
        // CB 07 0200
        gbc.setState(0x6d40, 0x33dd, 0xb0, 0xb447, 0x3081, 0x1fec, 0x0, 0x0);
        gbc.writeMem(0x6d40, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x33dd, gbc.sp());
        EXPECT(0x6d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0201
        gbc.setState(0xb9c6, 0xf0c1, 0x9e40, 0x2ac8, 0xfd54, 0x3eba, 0x1, 0x1);
        gbc.writeMem(0xb9c6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf0c1, gbc.sp());
        EXPECT(0xb9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c6));
        EXPECT(0x7, gbc.readMem(0xb9c7));
        // CB 07 0202
        gbc.setState(0x982e, 0x5c86, 0xa680, 0x21b4, 0x1f9e, 0xabce, 0x0, 0x0);
        gbc.writeMem(0x982e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5c86, gbc.sp());
        EXPECT(0x9830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x982e));
        EXPECT(0x7, gbc.readMem(0x982f));
        // CB 07 0203
        gbc.setState(0x141f, 0xd0f2, 0x4f50, 0x52b8, 0x8fd, 0x3b47, 0x0, 0x1);
        gbc.writeMem(0x141f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd0f2, gbc.sp());
        EXPECT(0x1421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0204
        gbc.setState(0xda26, 0x3b19, 0x22a0, 0xeffa, 0xb468, 0xa8d2, 0x0, 0x0);
        gbc.writeMem(0xda26, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3b19, gbc.sp());
        EXPECT(0xda28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda26));
        EXPECT(0x7, gbc.readMem(0xda27));
        // CB 07 0205
        gbc.setState(0xa4c9, 0xcec0, 0xd5e0, 0xfb8f, 0x11ef, 0x8904, 0x0, 0x0);
        gbc.writeMem(0xa4c9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcec0, gbc.sp());
        EXPECT(0xa4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c9));
        EXPECT(0x7, gbc.readMem(0xa4ca));
        // CB 07 0206
        gbc.setState(0xa274, 0xe5b6, 0x3a60, 0x7841, 0x51a1, 0x17f2, 0x0, 0x1);
        gbc.writeMem(0xa274, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe5b6, gbc.sp());
        EXPECT(0xa276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa274));
        EXPECT(0x7, gbc.readMem(0xa275));
        // CB 07 0207
        gbc.setState(0x751a, 0x6ebb, 0xe310, 0xaf52, 0xa1c, 0xb9a5, 0x1, 0x1);
        gbc.writeMem(0x751a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6ebb, gbc.sp());
        EXPECT(0x751c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0208
        gbc.setState(0xb826, 0x2775, 0x1a40, 0x9106, 0x8d67, 0x7aa8, 0x1, 0x0);
        gbc.writeMem(0xb826, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2775, gbc.sp());
        EXPECT(0xb828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb826));
        EXPECT(0x7, gbc.readMem(0xb827));
        // CB 07 0209
        gbc.setState(0x431e, 0xb5c2, 0xdd70, 0x49fb, 0x8a12, 0x558f, 0x0, 0x0);
        gbc.writeMem(0x431e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb5c2, gbc.sp());
        EXPECT(0x4320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 020A
        gbc.setState(0xcf79, 0xff31, 0x920, 0xc49c, 0x1bd4, 0x65a8, 0x1, 0x1);
        gbc.writeMem(0xcf79, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xff31, gbc.sp());
        EXPECT(0xcf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf79));
        EXPECT(0x7, gbc.readMem(0xcf7a));
        // CB 07 020C
        gbc.setState(0x7b3e, 0xd5f0, 0xae40, 0x9a0e, 0xe853, 0x5f9c, 0x1, 0x0);
        gbc.writeMem(0x7b3e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd5f0, gbc.sp());
        EXPECT(0x7b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 020D
        gbc.setState(0xbc56, 0x8420, 0x30e0, 0x6cfc, 0x5e2a, 0x4212, 0x0, 0x0);
        gbc.writeMem(0xbc56, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8420, gbc.sp());
        EXPECT(0xbc58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc56));
        EXPECT(0x7, gbc.readMem(0xbc57));
        // CB 07 020E
        gbc.setState(0xe6, 0x33d4, 0x3940, 0x10f1, 0x70d5, 0xeac5, 0x0, 0x0);
        gbc.writeMem(0xe6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x33d4, gbc.sp());
        EXPECT(0xe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 020F
        gbc.setState(0xdf4b, 0x1268, 0xe440, 0x2d02, 0x6727, 0xa96a, 0x0, 0x0);
        gbc.writeMem(0xdf4b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1268, gbc.sp());
        EXPECT(0xdf4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf4b));
        EXPECT(0x7, gbc.readMem(0xdf4c));
        // CB 07 0210
        gbc.setState(0xa950, 0xdf90, 0xc0a0, 0x8e26, 0x84ae, 0x1531, 0x0, 0x1);
        gbc.writeMem(0xa950, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdf90, gbc.sp());
        EXPECT(0xa952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa950));
        EXPECT(0x7, gbc.readMem(0xa951));
        // CB 07 0211
        gbc.setState(0x5d1a, 0x9050, 0xf880, 0x7837, 0x67bc, 0xb3ba, 0x0, 0x0);
        gbc.writeMem(0x5d1a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9050, gbc.sp());
        EXPECT(0x5d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0212
        gbc.setState(0x4abb, 0xe780, 0x5f80, 0xfeba, 0x436a, 0x672d, 0x1, 0x1);
        gbc.writeMem(0x4abb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe780, gbc.sp());
        EXPECT(0x4abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0213
        gbc.setState(0x37d0, 0xab36, 0x6e50, 0x57d9, 0xd528, 0xd636, 0x1, 0x0);
        gbc.writeMem(0x37d0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xab36, gbc.sp());
        EXPECT(0x37d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0214
        gbc.setState(0x2352, 0x150d, 0x23a0, 0x617c, 0x6233, 0xf95e, 0x1, 0x0);
        gbc.writeMem(0x2352, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x150d, gbc.sp());
        EXPECT(0x2354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0215
        gbc.setState(0x866b, 0x6fc4, 0xff60, 0x56fc, 0xc27f, 0x425f, 0x1, 0x1);
        gbc.writeMem(0x866b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6fc4, gbc.sp());
        EXPECT(0x866d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x866b));
        EXPECT(0x7, gbc.readMem(0x866c));
        // CB 07 0216
        gbc.setState(0xd310, 0xd840, 0x9880, 0x9161, 0x5923, 0x2349, 0x0, 0x1);
        gbc.writeMem(0xd310, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd840, gbc.sp());
        EXPECT(0xd312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd310));
        EXPECT(0x7, gbc.readMem(0xd311));
        // CB 07 0217
        gbc.setState(0x8bfd, 0xe001, 0x5490, 0x62e2, 0x3946, 0xc817, 0x1, 0x1);
        gbc.writeMem(0x8bfd, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe001, gbc.sp());
        EXPECT(0x8bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bfd));
        EXPECT(0x7, gbc.readMem(0x8bfe));
        // CB 07 0218
        gbc.setState(0xe3e0, 0x9bda, 0xd270, 0x239c, 0x73ba, 0x80c9, 0x0, 0x0);
        gbc.writeMem(0xe3e0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9bda, gbc.sp());
        EXPECT(0xe3e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e0));
        EXPECT(0x7, gbc.readMem(0xe3e1));
        // CB 07 0219
        gbc.setState(0x8ba7, 0x168e, 0x24d0, 0x12b5, 0xfda1, 0x98e9, 0x0, 0x1);
        gbc.writeMem(0x8ba7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x168e, gbc.sp());
        EXPECT(0x8ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba7));
        EXPECT(0x7, gbc.readMem(0x8ba8));
        // CB 07 021A
        gbc.setState(0x410c, 0x6614, 0xde80, 0xeedb, 0x9e76, 0x95a3, 0x0, 0x1);
        gbc.writeMem(0x410c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6614, gbc.sp());
        EXPECT(0x410e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 021B
        gbc.setState(0xd949, 0xd84d, 0xcab0, 0xdaa, 0xf740, 0x7dd2, 0x0, 0x0);
        gbc.writeMem(0xd949, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd84d, gbc.sp());
        EXPECT(0xd94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd949));
        EXPECT(0x7, gbc.readMem(0xd94a));
        // CB 07 021C
        gbc.setState(0x376f, 0x5185, 0x1b60, 0x91b5, 0xd48c, 0x9d1b, 0x1, 0x0);
        gbc.writeMem(0x376f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5185, gbc.sp());
        EXPECT(0x3771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 021D
        gbc.setState(0xa896, 0x7b07, 0x2320, 0x1153, 0x250c, 0x9ad4, 0x0, 0x1);
        gbc.writeMem(0xa896, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7b07, gbc.sp());
        EXPECT(0xa898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa896));
        EXPECT(0x7, gbc.readMem(0xa897));
        // CB 07 021E
        gbc.setState(0x9cf2, 0x3d5b, 0x91d0, 0xed83, 0x12cd, 0x4dd9, 0x1, 0x0);
        gbc.writeMem(0x9cf2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3d5b, gbc.sp());
        EXPECT(0x9cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf2));
        EXPECT(0x7, gbc.readMem(0x9cf3));
        // CB 07 021F
        gbc.setState(0xd0b, 0x15b7, 0xfe00, 0x233f, 0x8ea7, 0x10aa, 0x0, 0x1);
        gbc.writeMem(0xd0b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x15b7, gbc.sp());
        EXPECT(0xd0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0221
        gbc.setState(0x340e, 0xb36e, 0x1a40, 0x5262, 0xc62f, 0x650f, 0x1, 0x0);
        gbc.writeMem(0x340e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb36e, gbc.sp());
        EXPECT(0x3410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0222
        gbc.setState(0x2809, 0x7234, 0x2e30, 0xa681, 0x5c62, 0xf93, 0x1, 0x0);
        gbc.writeMem(0x2809, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7234, gbc.sp());
        EXPECT(0x280b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0223
        gbc.setState(0x9a3d, 0x3264, 0x1280, 0xc50e, 0xfd1e, 0xea25, 0x0, 0x1);
        gbc.writeMem(0x9a3d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3264, gbc.sp());
        EXPECT(0x9a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3d));
        EXPECT(0x7, gbc.readMem(0x9a3e));
        // CB 07 0224
        gbc.setState(0x6ee4, 0x4a57, 0xcc20, 0x5e9d, 0xe82f, 0x8e90, 0x0, 0x1);
        gbc.writeMem(0x6ee4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4a57, gbc.sp());
        EXPECT(0x6ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0225
        gbc.setState(0xcdf, 0x26e7, 0xb0e0, 0xde22, 0xde6d, 0xa4aa, 0x1, 0x0);
        gbc.writeMem(0xcdf, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x26e7, gbc.sp());
        EXPECT(0xce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0226
        gbc.setState(0x919, 0xe583, 0x1ca0, 0x9e3, 0x44da, 0xc8c5, 0x1, 0x1);
        gbc.writeMem(0x919, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe583, gbc.sp());
        EXPECT(0x91b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0227
        gbc.setState(0xb864, 0x1fce, 0x7040, 0x6829, 0x9779, 0x350c, 0x0, 0x1);
        gbc.writeMem(0xb864, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1fce, gbc.sp());
        EXPECT(0xb866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb864));
        EXPECT(0x7, gbc.readMem(0xb865));
        // CB 07 0228
        gbc.setState(0x48af, 0xf66, 0x9240, 0x6f80, 0xbb97, 0xe850, 0x1, 0x1);
        gbc.writeMem(0x48af, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf66, gbc.sp());
        EXPECT(0x48b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0229
        gbc.setState(0x2cba, 0x4abe, 0xb340, 0xacd0, 0x2af2, 0x63a6, 0x1, 0x0);
        gbc.writeMem(0x2cba, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4abe, gbc.sp());
        EXPECT(0x2cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 022A
        gbc.setState(0x85df, 0xd8fc, 0xc560, 0xe282, 0xa635, 0x2b31, 0x1, 0x0);
        gbc.writeMem(0x85df, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd8fc, gbc.sp());
        EXPECT(0x85e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85df));
        EXPECT(0x7, gbc.readMem(0x85e0));
        // CB 07 022B
        gbc.setState(0x873c, 0x883d, 0x49f0, 0x4328, 0xe65e, 0x23d3, 0x1, 0x1);
        gbc.writeMem(0x873c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x883d, gbc.sp());
        EXPECT(0x873e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873c));
        EXPECT(0x7, gbc.readMem(0x873d));
        // CB 07 022C
        gbc.setState(0xf34, 0xa8e0, 0xcc00, 0x1dc3, 0xbea4, 0x8dbe, 0x1, 0x1);
        gbc.writeMem(0xf34, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa8e0, gbc.sp());
        EXPECT(0xf36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 022D
        gbc.setState(0xbd41, 0xf5e9, 0x8530, 0xc15f, 0x19c5, 0x97f6, 0x0, 0x0);
        gbc.writeMem(0xbd41, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf5e9, gbc.sp());
        EXPECT(0xbd43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd41));
        EXPECT(0x7, gbc.readMem(0xbd42));
        // CB 07 022E
        gbc.setState(0x1a36, 0x25e0, 0x2680, 0x5700, 0x7cea, 0x11ee, 0x0, 0x1);
        gbc.writeMem(0x1a36, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x25e0, gbc.sp());
        EXPECT(0x1a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 022F
        gbc.setState(0xe3f7, 0x62c9, 0xe4a0, 0x734a, 0xa32e, 0x3c14, 0x0, 0x0);
        gbc.writeMem(0xe3f7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x62c9, gbc.sp());
        EXPECT(0xe3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f7));
        EXPECT(0x7, gbc.readMem(0xe3f8));
        // CB 07 0230
        gbc.setState(0x52be, 0xc8b7, 0xb780, 0xfa06, 0xb132, 0xb0d3, 0x1, 0x0);
        gbc.writeMem(0x52be, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc8b7, gbc.sp());
        EXPECT(0x52c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0231
        gbc.setState(0x7b9a, 0x6757, 0xfa80, 0x3e0a, 0x78a9, 0x86ae, 0x1, 0x0);
        gbc.writeMem(0x7b9a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6757, gbc.sp());
        EXPECT(0x7b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0232
        gbc.setState(0x4265, 0x9f28, 0x85f0, 0x1ff3, 0xc5a9, 0xbdde, 0x1, 0x1);
        gbc.writeMem(0x4265, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9f28, gbc.sp());
        EXPECT(0x4267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0233
        gbc.setState(0xe551, 0x5ad0, 0x7b50, 0xc27d, 0xa3ff, 0x9bb2, 0x1, 0x1);
        gbc.writeMem(0xe551, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5ad0, gbc.sp());
        EXPECT(0xe553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe551));
        EXPECT(0x7, gbc.readMem(0xe552));
        // CB 07 0234
        gbc.setState(0x75b, 0xa95f, 0xe470, 0xe090, 0x2ce6, 0x6b69, 0x1, 0x0);
        gbc.writeMem(0x75b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa95f, gbc.sp());
        EXPECT(0x75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0235
        gbc.setState(0xae14, 0x9ac4, 0x59c0, 0x3c6f, 0x11b5, 0x3033, 0x0, 0x1);
        gbc.writeMem(0xae14, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9ac4, gbc.sp());
        EXPECT(0xae16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae14));
        EXPECT(0x7, gbc.readMem(0xae15));
        // CB 07 0236
        gbc.setState(0xadba, 0xabef, 0x3fb0, 0x442b, 0xfaba, 0x6017, 0x1, 0x0);
        gbc.writeMem(0xadba, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xabef, gbc.sp());
        EXPECT(0xadbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadba));
        EXPECT(0x7, gbc.readMem(0xadbb));
        // CB 07 0237
        gbc.setState(0x5bda, 0x8677, 0x29a0, 0x1d15, 0xae4d, 0x9ab7, 0x0, 0x0);
        gbc.writeMem(0x5bda, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8677, gbc.sp());
        EXPECT(0x5bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0238
        gbc.setState(0xc016, 0x9f24, 0x8330, 0x99eb, 0x5b8c, 0x2cb9, 0x0, 0x1);
        gbc.writeMem(0xc016, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9f24, gbc.sp());
        EXPECT(0xc018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc016));
        EXPECT(0x7, gbc.readMem(0xc017));
        // CB 07 0239
        gbc.setState(0xce6b, 0x1edf, 0x74e0, 0xb74e, 0xcfd9, 0xd590, 0x0, 0x1);
        gbc.writeMem(0xce6b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1edf, gbc.sp());
        EXPECT(0xce6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce6b));
        EXPECT(0x7, gbc.readMem(0xce6c));
        // CB 07 023A
        gbc.setState(0x4387, 0xb1a5, 0xde50, 0xc54e, 0xb81b, 0x6814, 0x1, 0x1);
        gbc.writeMem(0x4387, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb1a5, gbc.sp());
        EXPECT(0x4389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 023B
        gbc.setState(0x932a, 0xf876, 0xc240, 0x32ff, 0x306d, 0xf013, 0x1, 0x1);
        gbc.writeMem(0x932a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf876, gbc.sp());
        EXPECT(0x932c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x932a));
        EXPECT(0x7, gbc.readMem(0x932b));
        // CB 07 023C
        gbc.setState(0xcf33, 0xeb6b, 0xd680, 0xbe99, 0x85dd, 0xf06b, 0x0, 0x0);
        gbc.writeMem(0xcf33, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xeb6b, gbc.sp());
        EXPECT(0xcf35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf33));
        EXPECT(0x7, gbc.readMem(0xcf34));
        // CB 07 023D
        gbc.setState(0x470, 0xc9b7, 0xb520, 0x250e, 0x952e, 0x9fb1, 0x0, 0x0);
        gbc.writeMem(0x470, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc9b7, gbc.sp());
        EXPECT(0x472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 023E
        gbc.setState(0x1ed9, 0x8a1c, 0x270, 0x91a1, 0x16cb, 0x479a, 0x0, 0x0);
        gbc.writeMem(0x1ed9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8a1c, gbc.sp());
        EXPECT(0x1edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 023F
        gbc.setState(0x1402, 0x9635, 0xce10, 0x7bde, 0xb29d, 0x8ddb, 0x0, 0x1);
        gbc.writeMem(0x1402, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9635, gbc.sp());
        EXPECT(0x1404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0240
        gbc.setState(0x8a60, 0xb5a2, 0xf560, 0xc30f, 0x29ae, 0x8e23, 0x0, 0x1);
        gbc.writeMem(0x8a60, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb5a2, gbc.sp());
        EXPECT(0x8a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a60));
        EXPECT(0x7, gbc.readMem(0x8a61));
        // CB 07 0241
        gbc.setState(0x2516, 0xd154, 0xf150, 0xe9b5, 0xf5b4, 0xaf04, 0x1, 0x0);
        gbc.writeMem(0x2516, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd154, gbc.sp());
        EXPECT(0x2518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0242
        gbc.setState(0x7657, 0x18ec, 0x8420, 0xe378, 0xf744, 0x3a9d, 0x0, 0x0);
        gbc.writeMem(0x7657, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x18ec, gbc.sp());
        EXPECT(0x7659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0243
        gbc.setState(0xc04b, 0x966e, 0x4610, 0x8de8, 0xacec, 0xa9d0, 0x1, 0x1);
        gbc.writeMem(0xc04b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x966e, gbc.sp());
        EXPECT(0xc04d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc04b));
        EXPECT(0x7, gbc.readMem(0xc04c));
        // CB 07 0245
        gbc.setState(0x6170, 0x94db, 0xf5e0, 0x29f6, 0xb893, 0x9cf7, 0x0, 0x1);
        gbc.writeMem(0x6170, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x94db, gbc.sp());
        EXPECT(0x6172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0246
        gbc.setState(0x4305, 0xe705, 0x7b50, 0xf38, 0x79aa, 0xa0cf, 0x0, 0x0);
        gbc.writeMem(0x4305, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe705, gbc.sp());
        EXPECT(0x4307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0247
        gbc.setState(0x8e0d, 0x6548, 0x9a70, 0xfd19, 0xf71b, 0x347b, 0x0, 0x1);
        gbc.writeMem(0x8e0d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6548, gbc.sp());
        EXPECT(0x8e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0d));
        EXPECT(0x7, gbc.readMem(0x8e0e));
        // CB 07 0248
        gbc.setState(0xb2b8, 0x9fb9, 0x32a0, 0xd36c, 0x7e99, 0x97b2, 0x0, 0x1);
        gbc.writeMem(0xb2b8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9fb9, gbc.sp());
        EXPECT(0xb2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b8));
        EXPECT(0x7, gbc.readMem(0xb2b9));
        // CB 07 0249
        gbc.setState(0x55cb, 0x3be6, 0x8840, 0x1e2b, 0xd48d, 0xccc5, 0x1, 0x1);
        gbc.writeMem(0x55cb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3be6, gbc.sp());
        EXPECT(0x55cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 024A
        gbc.setState(0xda6, 0xcc7f, 0x84b0, 0x5904, 0x8000, 0x7ebf, 0x0, 0x0);
        gbc.writeMem(0xda6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcc7f, gbc.sp());
        EXPECT(0xda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 024B
        gbc.setState(0xe05e, 0x8ea9, 0x2080, 0x6ae5, 0x2b38, 0x930d, 0x0, 0x1);
        gbc.writeMem(0xe05e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8ea9, gbc.sp());
        EXPECT(0xe060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe05e));
        EXPECT(0x7, gbc.readMem(0xe05f));
        // CB 07 024D
        gbc.setState(0xcd19, 0x5275, 0x1510, 0xb021, 0xd4d8, 0xa32a, 0x1, 0x1);
        gbc.writeMem(0xcd19, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5275, gbc.sp());
        EXPECT(0xcd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd19));
        EXPECT(0x7, gbc.readMem(0xcd1a));
        // CB 07 024E
        gbc.setState(0x3d54, 0xde1c, 0xfe80, 0xffea, 0x86da, 0x4bfb, 0x1, 0x0);
        gbc.writeMem(0x3d54, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xde1c, gbc.sp());
        EXPECT(0x3d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 024F
        gbc.setState(0xc6f, 0x578d, 0xbad0, 0x2320, 0x8214, 0xf288, 0x0, 0x0);
        gbc.writeMem(0xc6f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x578d, gbc.sp());
        EXPECT(0xc71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0250
        gbc.setState(0x75b2, 0x720b, 0xac10, 0x29cf, 0xe1ad, 0x1db2, 0x0, 0x0);
        gbc.writeMem(0x75b2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x720b, gbc.sp());
        EXPECT(0x75b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0251
        gbc.setState(0xdfb6, 0x9c44, 0xdfc0, 0x77c9, 0xb1ca, 0xd28f, 0x1, 0x1);
        gbc.writeMem(0xdfb6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9c44, gbc.sp());
        EXPECT(0xdfb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb6));
        EXPECT(0x7, gbc.readMem(0xdfb7));
        // CB 07 0252
        gbc.setState(0x1c46, 0xf47c, 0x4be0, 0xc2b7, 0x2967, 0x70ab, 0x1, 0x0);
        gbc.writeMem(0x1c46, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf47c, gbc.sp());
        EXPECT(0x1c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0253
        gbc.setState(0x4d9, 0x9205, 0xde90, 0xddb5, 0x41, 0xc310, 0x1, 0x0);
        gbc.writeMem(0x4d9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9205, gbc.sp());
        EXPECT(0x4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0256
        gbc.setState(0x978e, 0x3262, 0x6dd0, 0x80e0, 0xd4e5, 0x6dad, 0x0, 0x0);
        gbc.writeMem(0x978e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3262, gbc.sp());
        EXPECT(0x9790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x978e));
        EXPECT(0x7, gbc.readMem(0x978f));
        // CB 07 0257
        gbc.setState(0x51c9, 0x7cbb, 0xf830, 0x8c17, 0xcc76, 0x6fa4, 0x0, 0x1);
        gbc.writeMem(0x51c9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7cbb, gbc.sp());
        EXPECT(0x51cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0258
        gbc.setState(0x4231, 0xb0d2, 0x51f0, 0x8f82, 0xabee, 0xece, 0x1, 0x1);
        gbc.writeMem(0x4231, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb0d2, gbc.sp());
        EXPECT(0x4233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0259
        gbc.setState(0xb703, 0x3898, 0x4510, 0xaf8c, 0x17b1, 0x75e9, 0x1, 0x1);
        gbc.writeMem(0xb703, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3898, gbc.sp());
        EXPECT(0xb705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb703));
        EXPECT(0x7, gbc.readMem(0xb704));
        // CB 07 025A
        gbc.setState(0x5f47, 0x54e3, 0x41f0, 0x9603, 0x16db, 0x7641, 0x1, 0x0);
        gbc.writeMem(0x5f47, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x54e3, gbc.sp());
        EXPECT(0x5f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 025B
        gbc.setState(0xa3dc, 0x2b52, 0xe360, 0x761c, 0x8a1, 0x922b, 0x1, 0x1);
        gbc.writeMem(0xa3dc, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2b52, gbc.sp());
        EXPECT(0xa3de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3dc));
        EXPECT(0x7, gbc.readMem(0xa3dd));
        // CB 07 025C
        gbc.setState(0x5023, 0x6475, 0xc90, 0x65b5, 0xc288, 0xf445, 0x1, 0x0);
        gbc.writeMem(0x5023, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6475, gbc.sp());
        EXPECT(0x5025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 025D
        gbc.setState(0x1d96, 0x65c5, 0x4ca0, 0x1bf5, 0xdb84, 0xde19, 0x1, 0x0);
        gbc.writeMem(0x1d96, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x65c5, gbc.sp());
        EXPECT(0x1d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 025E
        gbc.setState(0xc2a, 0x6c0d, 0x6f40, 0x4e04, 0x60bf, 0x3a8c, 0x0, 0x0);
        gbc.writeMem(0xc2a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6c0d, gbc.sp());
        EXPECT(0xc2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 025F
        gbc.setState(0x1552, 0xf63c, 0xe5c0, 0xe9d5, 0x591c, 0xa108, 0x1, 0x1);
        gbc.writeMem(0x1552, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf63c, gbc.sp());
        EXPECT(0x1554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0260
        gbc.setState(0x45ef, 0xd7cc, 0x9170, 0x499c, 0x9e37, 0x36a5, 0x1, 0x1);
        gbc.writeMem(0x45ef, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd7cc, gbc.sp());
        EXPECT(0x45f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0261
        gbc.setState(0xc30a, 0xf400, 0x8220, 0x112c, 0xcb7a, 0x6002, 0x0, 0x1);
        gbc.writeMem(0xc30a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf400, gbc.sp());
        EXPECT(0xc30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30a));
        EXPECT(0x7, gbc.readMem(0xc30b));
        // CB 07 0262
        gbc.setState(0xc61b, 0xad65, 0xbb40, 0x707e, 0x685, 0x509c, 0x0, 0x1);
        gbc.writeMem(0xc61b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xad65, gbc.sp());
        EXPECT(0xc61d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc61b));
        EXPECT(0x7, gbc.readMem(0xc61c));
        // CB 07 0263
        gbc.setState(0xb88d, 0x5df2, 0x7890, 0xbd6, 0xdad2, 0x617, 0x0, 0x1);
        gbc.writeMem(0xb88d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5df2, gbc.sp());
        EXPECT(0xb88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88d));
        EXPECT(0x7, gbc.readMem(0xb88e));
        // CB 07 0264
        gbc.setState(0x5daf, 0x4354, 0x4440, 0xb40d, 0xf5c5, 0xa4cf, 0x0, 0x0);
        gbc.writeMem(0x5daf, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4354, gbc.sp());
        EXPECT(0x5db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0265
        gbc.setState(0x156f, 0xe79d, 0x67d0, 0xe914, 0x29a5, 0x69cd, 0x1, 0x0);
        gbc.writeMem(0x156f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe79d, gbc.sp());
        EXPECT(0x1571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0266
        gbc.setState(0xc9ad, 0xabc4, 0x4640, 0x5b55, 0x493b, 0xe545, 0x0, 0x1);
        gbc.writeMem(0xc9ad, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xabc4, gbc.sp());
        EXPECT(0xc9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ad));
        EXPECT(0x7, gbc.readMem(0xc9ae));
        // CB 07 0267
        gbc.setState(0x350f, 0x6756, 0xc540, 0xbcab, 0x54ad, 0xfb3c, 0x1, 0x0);
        gbc.writeMem(0x350f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6756, gbc.sp());
        EXPECT(0x3511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0268
        gbc.setState(0x8ae2, 0x119e, 0x1a20, 0xc500, 0x52e2, 0x269b, 0x1, 0x0);
        gbc.writeMem(0x8ae2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x119e, gbc.sp());
        EXPECT(0x8ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae2));
        EXPECT(0x7, gbc.readMem(0x8ae3));
        // CB 07 0269
        gbc.setState(0x7993, 0xe73e, 0xef40, 0x3cd8, 0x4eaf, 0x6e97, 0x0, 0x0);
        gbc.writeMem(0x7993, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe73e, gbc.sp());
        EXPECT(0x7995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 026A
        gbc.setState(0x43a6, 0xcef0, 0x27c0, 0xf5f1, 0xc6ff, 0x703c, 0x1, 0x1);
        gbc.writeMem(0x43a6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcef0, gbc.sp());
        EXPECT(0x43a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 026B
        gbc.setState(0x9362, 0x4236, 0x4580, 0x79e1, 0xe88e, 0x4bd6, 0x1, 0x0);
        gbc.writeMem(0x9362, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4236, gbc.sp());
        EXPECT(0x9364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9362));
        EXPECT(0x7, gbc.readMem(0x9363));
        // CB 07 026C
        gbc.setState(0xc5cf, 0x3ea2, 0x8f30, 0x30e4, 0x1363, 0x10e5, 0x1, 0x1);
        gbc.writeMem(0xc5cf, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3ea2, gbc.sp());
        EXPECT(0xc5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5cf));
        EXPECT(0x7, gbc.readMem(0xc5d0));
        // CB 07 026D
        gbc.setState(0x314b, 0x1b51, 0xc340, 0x7006, 0xba8, 0xeea, 0x0, 0x0);
        gbc.writeMem(0x314b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1b51, gbc.sp());
        EXPECT(0x314d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 026E
        gbc.setState(0xb035, 0x94d6, 0x5d50, 0xcfd8, 0x7559, 0xfd4a, 0x0, 0x0);
        gbc.writeMem(0xb035, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x94d6, gbc.sp());
        EXPECT(0xb037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb035));
        EXPECT(0x7, gbc.readMem(0xb036));
        // CB 07 026F
        gbc.setState(0x300f, 0x7ab, 0xb4a0, 0x902b, 0xe9b7, 0xe5ec, 0x0, 0x0);
        gbc.writeMem(0x300f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7ab, gbc.sp());
        EXPECT(0x3011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0270
        gbc.setState(0xd366, 0xf092, 0xef00, 0xd6e6, 0x5cf6, 0xe2f5, 0x0, 0x1);
        gbc.writeMem(0xd366, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf092, gbc.sp());
        EXPECT(0xd368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd366));
        EXPECT(0x7, gbc.readMem(0xd367));
        // CB 07 0271
        gbc.setState(0x6de, 0xf3fa, 0x7b50, 0xf0f, 0xcf1e, 0xe70, 0x0, 0x0);
        gbc.writeMem(0x6de, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf3fa, gbc.sp());
        EXPECT(0x6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0274
        gbc.setState(0xb9c2, 0x4753, 0xaae0, 0xb595, 0x62a0, 0xb3e1, 0x0, 0x0);
        gbc.writeMem(0xb9c2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4753, gbc.sp());
        EXPECT(0xb9c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c2));
        EXPECT(0x7, gbc.readMem(0xb9c3));
        // CB 07 0275
        gbc.setState(0xaf5b, 0xe21b, 0x9920, 0xbb26, 0x8a86, 0x9506, 0x1, 0x1);
        gbc.writeMem(0xaf5b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe21b, gbc.sp());
        EXPECT(0xaf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5b));
        EXPECT(0x7, gbc.readMem(0xaf5c));
        // CB 07 0276
        gbc.setState(0x8b41, 0x29bb, 0x9dd0, 0x1938, 0x603c, 0x33d5, 0x0, 0x0);
        gbc.writeMem(0x8b41, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x29bb, gbc.sp());
        EXPECT(0x8b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b41));
        EXPECT(0x7, gbc.readMem(0x8b42));
        // CB 07 0278
        gbc.setState(0xd44d, 0xb4c2, 0xac50, 0xc53b, 0xe5b, 0x70cd, 0x1, 0x0);
        gbc.writeMem(0xd44d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb4c2, gbc.sp());
        EXPECT(0xd44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd44d));
        EXPECT(0x7, gbc.readMem(0xd44e));
        // CB 07 0279
        gbc.setState(0xef97, 0x787a, 0x3ef0, 0xae32, 0x7f3e, 0xd8b3, 0x1, 0x0);
        gbc.writeMem(0xef97, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x787a, gbc.sp());
        EXPECT(0xef99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef97));
        EXPECT(0x7, gbc.readMem(0xef98));
        // CB 07 027A
        gbc.setState(0x1de0, 0xa5ad, 0x19b0, 0xd89e, 0x3540, 0xf00a, 0x0, 0x0);
        gbc.writeMem(0x1de0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa5ad, gbc.sp());
        EXPECT(0x1de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 027B
        gbc.setState(0xade, 0x12ed, 0x5cc0, 0xcf77, 0x5ed9, 0x1b0f, 0x0, 0x1);
        gbc.writeMem(0xade, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x12ed, gbc.sp());
        EXPECT(0xae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 027C
        gbc.setState(0xe3e5, 0x67da, 0xc310, 0x880a, 0xdace, 0x4fdc, 0x1, 0x1);
        gbc.writeMem(0xe3e5, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x67da, gbc.sp());
        EXPECT(0xe3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e5));
        EXPECT(0x7, gbc.readMem(0xe3e6));
        // CB 07 027D
        gbc.setState(0xe36, 0x5132, 0xd5b0, 0x7d03, 0xf439, 0xdc1b, 0x1, 0x0);
        gbc.writeMem(0xe36, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5132, gbc.sp());
        EXPECT(0xe38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 027E
        gbc.setState(0x905d, 0xa761, 0x9f70, 0x7e5, 0x9220, 0x849d, 0x1, 0x0);
        gbc.writeMem(0x905d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa761, gbc.sp());
        EXPECT(0x905f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905d));
        EXPECT(0x7, gbc.readMem(0x905e));
        // CB 07 027F
        gbc.setState(0x7c86, 0xc6d9, 0xbc30, 0xb8aa, 0xd93b, 0xf185, 0x0, 0x1);
        gbc.writeMem(0x7c86, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc6d9, gbc.sp());
        EXPECT(0x7c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0280
        gbc.setState(0xd917, 0x1731, 0x97b0, 0x8fea, 0x9327, 0xee3f, 0x1, 0x1);
        gbc.writeMem(0xd917, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1731, gbc.sp());
        EXPECT(0xd919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd917));
        EXPECT(0x7, gbc.readMem(0xd918));
        // CB 07 0281
        gbc.setState(0x5ffa, 0xd33d, 0x3370, 0xc5f7, 0x7140, 0xf935, 0x0, 0x0);
        gbc.writeMem(0x5ffa, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd33d, gbc.sp());
        EXPECT(0x5ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0282
        gbc.setState(0x252f, 0x2f76, 0x18b0, 0x6db3, 0x9d1c, 0x67a2, 0x1, 0x1);
        gbc.writeMem(0x252f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2f76, gbc.sp());
        EXPECT(0x2531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0283
        gbc.setState(0x6f24, 0xb1ed, 0xed50, 0x9fb0, 0x3484, 0x7f6a, 0x1, 0x0);
        gbc.writeMem(0x6f24, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb1ed, gbc.sp());
        EXPECT(0x6f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0284
        gbc.setState(0xbc2a, 0xc8f9, 0xdf90, 0xe88, 0x794, 0x5f04, 0x1, 0x1);
        gbc.writeMem(0xbc2a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc8f9, gbc.sp());
        EXPECT(0xbc2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2a));
        EXPECT(0x7, gbc.readMem(0xbc2b));
        // CB 07 0285
        gbc.setState(0x2c51, 0x843b, 0x39e0, 0x6d76, 0xb418, 0x1109, 0x1, 0x0);
        gbc.writeMem(0x2c51, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x843b, gbc.sp());
        EXPECT(0x2c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0286
        gbc.setState(0x6fc9, 0xb1b0, 0xd290, 0xa6c, 0x8e09, 0x9285, 0x0, 0x1);
        gbc.writeMem(0x6fc9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb1b0, gbc.sp());
        EXPECT(0x6fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0287
        gbc.setState(0x14d8, 0x6c1c, 0x6390, 0xaad0, 0x3242, 0x74a8, 0x0, 0x1);
        gbc.writeMem(0x14d8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6c1c, gbc.sp());
        EXPECT(0x14da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0288
        gbc.setState(0x53b1, 0x2de2, 0xbb70, 0x822c, 0x3af0, 0x63f8, 0x1, 0x0);
        gbc.writeMem(0x53b1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2de2, gbc.sp());
        EXPECT(0x53b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0289
        gbc.setState(0x8183, 0xa453, 0x5690, 0x3c8c, 0xd0cf, 0xb689, 0x1, 0x0);
        gbc.writeMem(0x8183, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa453, gbc.sp());
        EXPECT(0x8185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8183));
        EXPECT(0x7, gbc.readMem(0x8184));
        // CB 07 028A
        gbc.setState(0xbc33, 0x973c, 0xb090, 0x9a04, 0xdb78, 0x6f2a, 0x0, 0x0);
        gbc.writeMem(0xbc33, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x973c, gbc.sp());
        EXPECT(0xbc35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc33));
        EXPECT(0x7, gbc.readMem(0xbc34));
        // CB 07 028B
        gbc.setState(0xe970, 0x4b71, 0xbd0, 0xe542, 0xbbce, 0x8cc0, 0x1, 0x0);
        gbc.writeMem(0xe970, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4b71, gbc.sp());
        EXPECT(0xe972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe970));
        EXPECT(0x7, gbc.readMem(0xe971));
        // CB 07 028C
        gbc.setState(0x4006, 0x964, 0x1ab0, 0x43ec, 0x139b, 0x139f, 0x1, 0x1);
        gbc.writeMem(0x4006, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x964, gbc.sp());
        EXPECT(0x4008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 028D
        gbc.setState(0x582c, 0xec4d, 0xfc40, 0x86ad, 0x912f, 0x2d20, 0x1, 0x1);
        gbc.writeMem(0x582c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xec4d, gbc.sp());
        EXPECT(0x582e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 028E
        gbc.setState(0x4a4d, 0x87ec, 0x5470, 0xe8d5, 0x135, 0x753a, 0x0, 0x1);
        gbc.writeMem(0x4a4d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x87ec, gbc.sp());
        EXPECT(0x4a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 028F
        gbc.setState(0x293c, 0x10ab, 0x40, 0x1c66, 0x5c8e, 0x3016, 0x1, 0x0);
        gbc.writeMem(0x293c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x10ab, gbc.sp());
        EXPECT(0x293e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0290
        gbc.setState(0x102b, 0x3651, 0x4630, 0xeb6b, 0x575, 0xf200, 0x0, 0x0);
        gbc.writeMem(0x102b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3651, gbc.sp());
        EXPECT(0x102d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0291
        gbc.setState(0x50a4, 0xdde9, 0xad20, 0x7185, 0x5040, 0xf6f3, 0x1, 0x0);
        gbc.writeMem(0x50a4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdde9, gbc.sp());
        EXPECT(0x50a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0292
        gbc.setState(0xb12, 0x9455, 0xc060, 0xceb5, 0x9841, 0x86db, 0x1, 0x1);
        gbc.writeMem(0xb12, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9455, gbc.sp());
        EXPECT(0xb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0293
        gbc.setState(0x583f, 0x6af2, 0xe240, 0x549e, 0x8ae4, 0xdfd6, 0x1, 0x0);
        gbc.writeMem(0x583f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6af2, gbc.sp());
        EXPECT(0x5841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0294
        gbc.setState(0x881f, 0xa87d, 0xc350, 0x28ee, 0x322, 0xe79f, 0x0, 0x0);
        gbc.writeMem(0x881f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa87d, gbc.sp());
        EXPECT(0x8821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881f));
        EXPECT(0x7, gbc.readMem(0x8820));
        // CB 07 0295
        gbc.setState(0x94bf, 0xfa8f, 0x4130, 0xb69f, 0xaff, 0xe934, 0x1, 0x1);
        gbc.writeMem(0x94bf, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfa8f, gbc.sp());
        EXPECT(0x94c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94bf));
        EXPECT(0x7, gbc.readMem(0x94c0));
        // CB 07 0296
        gbc.setState(0x7f9d, 0x30cf, 0xac50, 0xf1c, 0x2838, 0x925a, 0x1, 0x0);
        gbc.writeMem(0x7f9d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x30cf, gbc.sp());
        EXPECT(0x7f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0297
        gbc.setState(0x15b5, 0xe25d, 0x41a0, 0x268f, 0xadf8, 0x58a0, 0x1, 0x0);
        gbc.writeMem(0x15b5, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe25d, gbc.sp());
        EXPECT(0x15b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0298
        gbc.setState(0xda9b, 0x4921, 0xd8a0, 0xd0d5, 0xfcde, 0x9dcc, 0x0, 0x1);
        gbc.writeMem(0xda9b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4921, gbc.sp());
        EXPECT(0xda9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9b));
        EXPECT(0x7, gbc.readMem(0xda9c));
        // CB 07 0299
        gbc.setState(0x7250, 0x5c74, 0x69d0, 0x1629, 0x7ae5, 0xcf0f, 0x0, 0x0);
        gbc.writeMem(0x7250, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5c74, gbc.sp());
        EXPECT(0x7252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 029A
        gbc.setState(0x36bf, 0x9592, 0x3ea0, 0x6051, 0x146f, 0xb699, 0x0, 0x0);
        gbc.writeMem(0x36bf, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9592, gbc.sp());
        EXPECT(0x36c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 029B
        gbc.setState(0x129e, 0xc054, 0xecf0, 0x7d5c, 0xec75, 0xe339, 0x1, 0x0);
        gbc.writeMem(0x129e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc054, gbc.sp());
        EXPECT(0x12a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 029C
        gbc.setState(0x8d69, 0xe912, 0x6270, 0x93f4, 0xa8b6, 0x5eaf, 0x0, 0x1);
        gbc.writeMem(0x8d69, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe912, gbc.sp());
        EXPECT(0x8d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d69));
        EXPECT(0x7, gbc.readMem(0x8d6a));
        // CB 07 029D
        gbc.setState(0xb1f1, 0x5567, 0x8a0, 0x5e39, 0xf4dc, 0x9bf4, 0x0, 0x1);
        gbc.writeMem(0xb1f1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5567, gbc.sp());
        EXPECT(0xb1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f1));
        EXPECT(0x7, gbc.readMem(0xb1f2));
        // CB 07 029E
        gbc.setState(0x280e, 0x7c5e, 0x2bb0, 0x48c6, 0xcfab, 0xc454, 0x0, 0x1);
        gbc.writeMem(0x280e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7c5e, gbc.sp());
        EXPECT(0x2810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 029F
        gbc.setState(0x52b2, 0xb7b4, 0xc650, 0x234c, 0xd9bb, 0xf88c, 0x0, 0x1);
        gbc.writeMem(0x52b2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb7b4, gbc.sp());
        EXPECT(0x52b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02A0
        gbc.setState(0xc775, 0xa4af, 0xd0f0, 0x34c6, 0x366f, 0xc8ca, 0x1, 0x1);
        gbc.writeMem(0xc775, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa4af, gbc.sp());
        EXPECT(0xc777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc775));
        EXPECT(0x7, gbc.readMem(0xc776));
        // CB 07 02A1
        gbc.setState(0x7fb5, 0xd6af, 0xf50, 0x219e, 0x504a, 0x24c4, 0x1, 0x0);
        gbc.writeMem(0x7fb5, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd6af, gbc.sp());
        EXPECT(0x7fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02A2
        gbc.setState(0x2177, 0x3fc9, 0xede0, 0x5d00, 0xdeb4, 0xe40, 0x0, 0x1);
        gbc.writeMem(0x2177, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3fc9, gbc.sp());
        EXPECT(0x2179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02A3
        gbc.setState(0xa40a, 0x22a9, 0x9bb0, 0x8df, 0x3422, 0xde6, 0x1, 0x1);
        gbc.writeMem(0xa40a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x22a9, gbc.sp());
        EXPECT(0xa40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40a));
        EXPECT(0x7, gbc.readMem(0xa40b));
        // CB 07 02A4
        gbc.setState(0x7fe2, 0x8929, 0x71e0, 0xf13c, 0xab53, 0x92ef, 0x0, 0x1);
        gbc.writeMem(0x7fe2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8929, gbc.sp());
        EXPECT(0x7fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02A5
        gbc.setState(0x3833, 0xd75c, 0x8200, 0x4075, 0x99e6, 0x3763, 0x1, 0x0);
        gbc.writeMem(0x3833, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd75c, gbc.sp());
        EXPECT(0x3835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02A6
        gbc.setState(0x9745, 0xb82c, 0xb540, 0x59b2, 0xa5f2, 0xe9a4, 0x0, 0x0);
        gbc.writeMem(0x9745, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb82c, gbc.sp());
        EXPECT(0x9747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9745));
        EXPECT(0x7, gbc.readMem(0x9746));
        // CB 07 02A7
        gbc.setState(0x1b72, 0xbd7c, 0x9d0, 0x3ba7, 0x6348, 0xba71, 0x1, 0x0);
        gbc.writeMem(0x1b72, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbd7c, gbc.sp());
        EXPECT(0x1b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02A8
        gbc.setState(0xd5c7, 0xb7e4, 0x6d80, 0xc9c7, 0xa2ae, 0x737f, 0x0, 0x0);
        gbc.writeMem(0xd5c7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb7e4, gbc.sp());
        EXPECT(0xd5c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c7));
        EXPECT(0x7, gbc.readMem(0xd5c8));
        // CB 07 02A9
        gbc.setState(0x4f8f, 0x9943, 0xd760, 0xfb51, 0x2fcc, 0x7a49, 0x1, 0x1);
        gbc.writeMem(0x4f8f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9943, gbc.sp());
        EXPECT(0x4f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02AA
        gbc.setState(0x648d, 0x53b0, 0xd330, 0x9d73, 0x3a29, 0x316c, 0x0, 0x0);
        gbc.writeMem(0x648d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x53b0, gbc.sp());
        EXPECT(0x648f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02AB
        gbc.setState(0xcd3, 0xac84, 0x5f60, 0xa500, 0x9ea5, 0xdcb3, 0x1, 0x1);
        gbc.writeMem(0xcd3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xac84, gbc.sp());
        EXPECT(0xcd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02AC
        gbc.setState(0x3cfd, 0xfaa8, 0x90, 0xdcb5, 0xa3d0, 0x1ff8, 0x0, 0x0);
        gbc.writeMem(0x3cfd, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfaa8, gbc.sp());
        EXPECT(0x3cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02AD
        gbc.setState(0xa06f, 0x1d4d, 0xf080, 0x62dd, 0x1df3, 0x341e, 0x0, 0x1);
        gbc.writeMem(0xa06f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1d4d, gbc.sp());
        EXPECT(0xa071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06f));
        EXPECT(0x7, gbc.readMem(0xa070));
        // CB 07 02AE
        gbc.setState(0x4c8d, 0xf72e, 0x9e90, 0x1751, 0x95f8, 0x101c, 0x1, 0x1);
        gbc.writeMem(0x4c8d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf72e, gbc.sp());
        EXPECT(0x4c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02AF
        gbc.setState(0xa3f5, 0xd6ca, 0xd6b0, 0xcad3, 0x3376, 0x88c9, 0x0, 0x0);
        gbc.writeMem(0xa3f5, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd6ca, gbc.sp());
        EXPECT(0xa3f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f5));
        EXPECT(0x7, gbc.readMem(0xa3f6));
        // CB 07 02B0
        gbc.setState(0x2b6b, 0x715, 0x1d10, 0x218b, 0x211b, 0x51f7, 0x0, 0x0);
        gbc.writeMem(0x2b6b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x715, gbc.sp());
        EXPECT(0x2b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02B1
        gbc.setState(0xa743, 0xc7ed, 0x73b0, 0x6527, 0x6108, 0xf002, 0x0, 0x0);
        gbc.writeMem(0xa743, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc7ed, gbc.sp());
        EXPECT(0xa745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa743));
        EXPECT(0x7, gbc.readMem(0xa744));
        // CB 07 02B2
        gbc.setState(0xad8a, 0x50c9, 0x9770, 0xb0e0, 0x9564, 0x983a, 0x0, 0x1);
        gbc.writeMem(0xad8a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x50c9, gbc.sp());
        EXPECT(0xad8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad8a));
        EXPECT(0x7, gbc.readMem(0xad8b));
        // CB 07 02B3
        gbc.setState(0xdf0d, 0x7079, 0x9040, 0x249a, 0x9e10, 0x566, 0x1, 0x0);
        gbc.writeMem(0xdf0d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7079, gbc.sp());
        EXPECT(0xdf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf0d));
        EXPECT(0x7, gbc.readMem(0xdf0e));
        // CB 07 02B4
        gbc.setState(0x4dde, 0x5b38, 0xb040, 0x9f0c, 0xb819, 0x43ec, 0x0, 0x0);
        gbc.writeMem(0x4dde, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5b38, gbc.sp());
        EXPECT(0x4de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02B5
        gbc.setState(0x2eda, 0xc20a, 0x6cb0, 0xe25e, 0x76d6, 0x9a8c, 0x1, 0x1);
        gbc.writeMem(0x2eda, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc20a, gbc.sp());
        EXPECT(0x2edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02B6
        gbc.setState(0x2623, 0x34ab, 0x9950, 0xc21c, 0x3b4, 0xf388, 0x1, 0x0);
        gbc.writeMem(0x2623, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x34ab, gbc.sp());
        EXPECT(0x2625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02B7
        gbc.setState(0x2392, 0x20ea, 0x6120, 0x2a0e, 0x1386, 0x4f86, 0x1, 0x1);
        gbc.writeMem(0x2392, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x20ea, gbc.sp());
        EXPECT(0x2394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02B8
        gbc.setState(0x43b6, 0x95ff, 0x9c60, 0x4fb9, 0xfce4, 0xf1bd, 0x0, 0x1);
        gbc.writeMem(0x43b6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x95ff, gbc.sp());
        EXPECT(0x43b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02B9
        gbc.setState(0xa0bf, 0x5234, 0xaa60, 0xd681, 0xce1f, 0x8b2d, 0x0, 0x0);
        gbc.writeMem(0xa0bf, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5234, gbc.sp());
        EXPECT(0xa0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0bf));
        EXPECT(0x7, gbc.readMem(0xa0c0));
        // CB 07 02BA
        gbc.setState(0x25ce, 0x4226, 0x1660, 0xa7dd, 0x7206, 0x9a91, 0x1, 0x1);
        gbc.writeMem(0x25ce, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4226, gbc.sp());
        EXPECT(0x25d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02BB
        gbc.setState(0x8248, 0x5249, 0x5bf0, 0xe336, 0x551b, 0x4a3b, 0x1, 0x0);
        gbc.writeMem(0x8248, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5249, gbc.sp());
        EXPECT(0x824a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8248));
        EXPECT(0x7, gbc.readMem(0x8249));
        // CB 07 02BC
        gbc.setState(0x1aae, 0xa9c8, 0x8fc0, 0xfdee, 0xff77, 0xc673, 0x0, 0x1);
        gbc.writeMem(0x1aae, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa9c8, gbc.sp());
        EXPECT(0x1ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02BD
        gbc.setState(0xa5aa, 0xc93f, 0xea60, 0xef98, 0x6adf, 0x508b, 0x1, 0x0);
        gbc.writeMem(0xa5aa, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc93f, gbc.sp());
        EXPECT(0xa5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5aa));
        EXPECT(0x7, gbc.readMem(0xa5ab));
        // CB 07 02BE
        gbc.setState(0xc439, 0xbbcd, 0x34b0, 0x717, 0xc125, 0x47d8, 0x1, 0x1);
        gbc.writeMem(0xc439, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbbcd, gbc.sp());
        EXPECT(0xc43b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc439));
        EXPECT(0x7, gbc.readMem(0xc43a));
        // CB 07 02BF
        gbc.setState(0x903, 0x3859, 0x37a0, 0x99ac, 0x8f9c, 0x1692, 0x0, 0x0);
        gbc.writeMem(0x903, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3859, gbc.sp());
        EXPECT(0x905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02C0
        gbc.setState(0x8fb2, 0xd4f1, 0xebd0, 0xc088, 0xd340, 0xfb99, 0x0, 0x1);
        gbc.writeMem(0x8fb2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd4f1, gbc.sp());
        EXPECT(0x8fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb2));
        EXPECT(0x7, gbc.readMem(0x8fb3));
        // CB 07 02C1
        gbc.setState(0x2cc7, 0x5c6a, 0x7b60, 0x237d, 0x6f1a, 0x8e82, 0x1, 0x0);
        gbc.writeMem(0x2cc7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5c6a, gbc.sp());
        EXPECT(0x2cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02C2
        gbc.setState(0x351c, 0xa985, 0xfae0, 0x9102, 0x95c3, 0x41e0, 0x0, 0x1);
        gbc.writeMem(0x351c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa985, gbc.sp());
        EXPECT(0x351e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02C3
        gbc.setState(0x19d1, 0xc209, 0x3270, 0xd063, 0x1d86, 0xe32, 0x1, 0x1);
        gbc.writeMem(0x19d1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc209, gbc.sp());
        EXPECT(0x19d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02C4
        gbc.setState(0x8b76, 0xc6d9, 0xab40, 0x16c3, 0x6da8, 0xbe2, 0x1, 0x1);
        gbc.writeMem(0x8b76, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc6d9, gbc.sp());
        EXPECT(0x8b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b76));
        EXPECT(0x7, gbc.readMem(0x8b77));
        // CB 07 02C5
        gbc.setState(0xe3fa, 0x83aa, 0xaf70, 0xefac, 0xf8bc, 0x3bf5, 0x0, 0x0);
        gbc.writeMem(0xe3fa, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x83aa, gbc.sp());
        EXPECT(0xe3fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3fa));
        EXPECT(0x7, gbc.readMem(0xe3fb));
        // CB 07 02C6
        gbc.setState(0x5556, 0x8acd, 0x7c90, 0x65f3, 0x9796, 0x2d7a, 0x0, 0x0);
        gbc.writeMem(0x5556, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8acd, gbc.sp());
        EXPECT(0x5558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02C7
        gbc.setState(0x173a, 0x9af3, 0x1d0, 0x8e13, 0x4741, 0x4010, 0x0, 0x1);
        gbc.writeMem(0x173a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9af3, gbc.sp());
        EXPECT(0x173c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02C8
        gbc.setState(0xc1ec, 0x7291, 0x5d30, 0x38af, 0x1c2f, 0xc771, 0x0, 0x0);
        gbc.writeMem(0xc1ec, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7291, gbc.sp());
        EXPECT(0xc1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ec));
        EXPECT(0x7, gbc.readMem(0xc1ed));
        // CB 07 02C9
        gbc.setState(0x9b83, 0x8cce, 0xc560, 0x3ddb, 0x16, 0x7ed6, 0x0, 0x1);
        gbc.writeMem(0x9b83, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8cce, gbc.sp());
        EXPECT(0x9b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b83));
        EXPECT(0x7, gbc.readMem(0x9b84));
        // CB 07 02CA
        gbc.setState(0x7c56, 0xe90b, 0xf160, 0x1c4c, 0x49dd, 0x5d4a, 0x0, 0x0);
        gbc.writeMem(0x7c56, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe90b, gbc.sp());
        EXPECT(0x7c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02CB
        gbc.setState(0x7ce4, 0xa3e2, 0xfb30, 0xe647, 0x2be, 0xcf7c, 0x0, 0x0);
        gbc.writeMem(0x7ce4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa3e2, gbc.sp());
        EXPECT(0x7ce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02CC
        gbc.setState(0x5b0, 0x58a1, 0x91a0, 0x29b8, 0xbaa, 0xf722, 0x1, 0x1);
        gbc.writeMem(0x5b0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x58a1, gbc.sp());
        EXPECT(0x5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02CD
        gbc.setState(0xb0e9, 0xbc05, 0x5f10, 0x3921, 0x43f9, 0x780a, 0x0, 0x1);
        gbc.writeMem(0xb0e9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbc05, gbc.sp());
        EXPECT(0xb0eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e9));
        EXPECT(0x7, gbc.readMem(0xb0ea));
        // CB 07 02CE
        gbc.setState(0x7a6a, 0xb416, 0x6690, 0xfd64, 0x141, 0x8ad3, 0x1, 0x1);
        gbc.writeMem(0x7a6a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb416, gbc.sp());
        EXPECT(0x7a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02CF
        gbc.setState(0xe233, 0x9238, 0xb690, 0xdc60, 0xe846, 0x37b, 0x0, 0x1);
        gbc.writeMem(0xe233, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9238, gbc.sp());
        EXPECT(0xe235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe233));
        EXPECT(0x7, gbc.readMem(0xe234));
        // CB 07 02D0
        gbc.setState(0x7115, 0xd93f, 0xcdb0, 0x96ba, 0xd4e6, 0x7d6a, 0x1, 0x1);
        gbc.writeMem(0x7115, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd93f, gbc.sp());
        EXPECT(0x7117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02D1
        gbc.setState(0x680e, 0xb7de, 0xa780, 0x3a55, 0xe280, 0x9130, 0x1, 0x0);
        gbc.writeMem(0x680e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb7de, gbc.sp());
        EXPECT(0x6810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02D2
        gbc.setState(0x8ba2, 0x3bb4, 0x1010, 0xd550, 0xcb26, 0x4e8f, 0x0, 0x1);
        gbc.writeMem(0x8ba2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3bb4, gbc.sp());
        EXPECT(0x8ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba2));
        EXPECT(0x7, gbc.readMem(0x8ba3));
        // CB 07 02D3
        gbc.setState(0xc335, 0x5afa, 0xb440, 0x7a17, 0xaa04, 0x822c, 0x1, 0x0);
        gbc.writeMem(0xc335, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5afa, gbc.sp());
        EXPECT(0xc337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc335));
        EXPECT(0x7, gbc.readMem(0xc336));
        // CB 07 02D4
        gbc.setState(0x8d56, 0xcbdb, 0xc020, 0x5a72, 0x4db, 0xce10, 0x1, 0x0);
        gbc.writeMem(0x8d56, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcbdb, gbc.sp());
        EXPECT(0x8d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d56));
        EXPECT(0x7, gbc.readMem(0x8d57));
        // CB 07 02D5
        gbc.setState(0x3214, 0x6ec7, 0x7830, 0x751e, 0x5b44, 0x4d09, 0x1, 0x1);
        gbc.writeMem(0x3214, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6ec7, gbc.sp());
        EXPECT(0x3216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02D7
        gbc.setState(0x1790, 0x510b, 0xf220, 0x4b1a, 0x3547, 0x4a3, 0x1, 0x0);
        gbc.writeMem(0x1790, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x510b, gbc.sp());
        EXPECT(0x1792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02D8
        gbc.setState(0x3c53, 0x4abc, 0x37a0, 0xb204, 0x55d, 0xaf55, 0x1, 0x1);
        gbc.writeMem(0x3c53, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4abc, gbc.sp());
        EXPECT(0x3c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02D9
        gbc.setState(0x8901, 0x5582, 0xe330, 0xcc20, 0xc6ff, 0xeed9, 0x1, 0x1);
        gbc.writeMem(0x8901, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5582, gbc.sp());
        EXPECT(0x8903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8901));
        EXPECT(0x7, gbc.readMem(0x8902));
        // CB 07 02DA
        gbc.setState(0x3390, 0x7eb5, 0x1ec0, 0xaab6, 0x5f57, 0x8dd9, 0x0, 0x1);
        gbc.writeMem(0x3390, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7eb5, gbc.sp());
        EXPECT(0x3392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02DB
        gbc.setState(0xd922, 0x1a9, 0x8410, 0x8c1d, 0x1b8d, 0x7217, 0x0, 0x1);
        gbc.writeMem(0xd922, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1a9, gbc.sp());
        EXPECT(0xd924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd922));
        EXPECT(0x7, gbc.readMem(0xd923));
        // CB 07 02DD
        gbc.setState(0xe862, 0xa183, 0x83c0, 0x42f, 0xb7f7, 0x55f3, 0x0, 0x1);
        gbc.writeMem(0xe862, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa183, gbc.sp());
        EXPECT(0xe864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe862));
        EXPECT(0x7, gbc.readMem(0xe863));
        // CB 07 02DE
        gbc.setState(0x3b20, 0xa8ea, 0x2f60, 0xa2e5, 0xf3ca, 0xfbb7, 0x0, 0x0);
        gbc.writeMem(0x3b20, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa8ea, gbc.sp());
        EXPECT(0x3b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02DF
        gbc.setState(0x7169, 0xf3e, 0x8920, 0xd85c, 0x698f, 0x5ac1, 0x0, 0x0);
        gbc.writeMem(0x7169, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf3e, gbc.sp());
        EXPECT(0x716b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02E0
        gbc.setState(0x2124, 0x791f, 0x3fc0, 0xfade, 0x346c, 0xddaf, 0x1, 0x1);
        gbc.writeMem(0x2124, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x791f, gbc.sp());
        EXPECT(0x2126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02E1
        gbc.setState(0x216e, 0xd325, 0xc5b0, 0x63a2, 0x4ee9, 0xbacc, 0x1, 0x1);
        gbc.writeMem(0x216e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd325, gbc.sp());
        EXPECT(0x2170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02E2
        gbc.setState(0x1411, 0x8c73, 0xb7e0, 0xb08a, 0x5f, 0x3c31, 0x0, 0x0);
        gbc.writeMem(0x1411, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8c73, gbc.sp());
        EXPECT(0x1413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02E3
        gbc.setState(0x37b8, 0x8825, 0xf610, 0xa2e5, 0x40ff, 0xcb1f, 0x0, 0x0);
        gbc.writeMem(0x37b8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8825, gbc.sp());
        EXPECT(0x37ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02E4
        gbc.setState(0x6c43, 0x3caa, 0xdef0, 0x3358, 0x2930, 0x1508, 0x1, 0x1);
        gbc.writeMem(0x6c43, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3caa, gbc.sp());
        EXPECT(0x6c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02E5
        gbc.setState(0xee16, 0x35da, 0x7f60, 0x1ef4, 0x192e, 0xf9bf, 0x1, 0x0);
        gbc.writeMem(0xee16, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x35da, gbc.sp());
        EXPECT(0xee18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee16));
        EXPECT(0x7, gbc.readMem(0xee17));
        // CB 07 02E6
        gbc.setState(0xdb09, 0x499a, 0xee70, 0xacac, 0xc798, 0x470f, 0x1, 0x1);
        gbc.writeMem(0xdb09, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x499a, gbc.sp());
        EXPECT(0xdb0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb09));
        EXPECT(0x7, gbc.readMem(0xdb0a));
        // CB 07 02E7
        gbc.setState(0x41a0, 0xca12, 0x7570, 0x4844, 0x2254, 0x7aa5, 0x1, 0x0);
        gbc.writeMem(0x41a0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xca12, gbc.sp());
        EXPECT(0x41a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02E9
        gbc.setState(0x59ae, 0x2572, 0xfd50, 0x97e8, 0xf522, 0x9bc8, 0x1, 0x1);
        gbc.writeMem(0x59ae, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2572, gbc.sp());
        EXPECT(0x59b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02EA
        gbc.setState(0x2d4, 0x5153, 0x12c0, 0x8000, 0x4371, 0x863d, 0x0, 0x0);
        gbc.writeMem(0x2d4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5153, gbc.sp());
        EXPECT(0x2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02EB
        gbc.setState(0xb44d, 0xe641, 0x5520, 0x355a, 0x73f2, 0x116a, 0x0, 0x1);
        gbc.writeMem(0xb44d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe641, gbc.sp());
        EXPECT(0xb44f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb44d));
        EXPECT(0x7, gbc.readMem(0xb44e));
        // CB 07 02EC
        gbc.setState(0x719c, 0x777b, 0xd740, 0x572d, 0x99f8, 0xab2f, 0x1, 0x1);
        gbc.writeMem(0x719c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x777b, gbc.sp());
        EXPECT(0x719e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02ED
        gbc.setState(0xd38f, 0x5459, 0xf500, 0xd69e, 0xd35a, 0x7b70, 0x0, 0x1);
        gbc.writeMem(0xd38f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5459, gbc.sp());
        EXPECT(0xd391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd38f));
        EXPECT(0x7, gbc.readMem(0xd390));
        // CB 07 02EE
        gbc.setState(0x5fc0, 0xe5dd, 0xf570, 0xb01d, 0xc902, 0x7529, 0x0, 0x1);
        gbc.writeMem(0x5fc0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe5dd, gbc.sp());
        EXPECT(0x5fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02F0
        gbc.setState(0x195, 0x5667, 0x80, 0xa953, 0x4c79, 0x921b, 0x1, 0x1);
        gbc.writeMem(0x195, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5667, gbc.sp());
        EXPECT(0x197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02F1
        gbc.setState(0xba00, 0x66fd, 0x6a90, 0xfebb, 0x230d, 0x95db, 0x0, 0x1);
        gbc.writeMem(0xba00, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x66fd, gbc.sp());
        EXPECT(0xba02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba00));
        EXPECT(0x7, gbc.readMem(0xba01));
        // CB 07 02F2
        gbc.setState(0x55b1, 0xf9bc, 0xad00, 0xdc9d, 0x69f, 0x768b, 0x0, 0x1);
        gbc.writeMem(0x55b1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf9bc, gbc.sp());
        EXPECT(0x55b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02F3
        gbc.setState(0xbea4, 0x61d6, 0x7190, 0x31d8, 0x9e, 0x5b64, 0x1, 0x1);
        gbc.writeMem(0xbea4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x61d6, gbc.sp());
        EXPECT(0xbea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea4));
        EXPECT(0x7, gbc.readMem(0xbea5));
        // CB 07 02F4
        gbc.setState(0xdf80, 0x7a9, 0xd9d0, 0x5777, 0x6e58, 0x1960, 0x0, 0x1);
        gbc.writeMem(0xdf80, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7a9, gbc.sp());
        EXPECT(0xdf82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf80));
        EXPECT(0x7, gbc.readMem(0xdf81));
        // CB 07 02F5
        gbc.setState(0x815a, 0x342f, 0x8cd0, 0x794e, 0xc84, 0x9856, 0x1, 0x1);
        gbc.writeMem(0x815a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x342f, gbc.sp());
        EXPECT(0x815c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815a));
        EXPECT(0x7, gbc.readMem(0x815b));
        // CB 07 02F6
        gbc.setState(0x625, 0xfc6b, 0xe450, 0x95a4, 0xadd1, 0x64c, 0x1, 0x1);
        gbc.writeMem(0x625, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfc6b, gbc.sp());
        EXPECT(0x627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02F7
        gbc.setState(0xb7c1, 0xecd2, 0xd3f0, 0x8a27, 0x8a0d, 0x9085, 0x1, 0x1);
        gbc.writeMem(0xb7c1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xecd2, gbc.sp());
        EXPECT(0xb7c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c1));
        EXPECT(0x7, gbc.readMem(0xb7c2));
        // CB 07 02F8
        gbc.setState(0xcfd3, 0xccee, 0xe730, 0x6738, 0xe00d, 0x471f, 0x1, 0x0);
        gbc.writeMem(0xcfd3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xccee, gbc.sp());
        EXPECT(0xcfd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd3));
        EXPECT(0x7, gbc.readMem(0xcfd4));
        // CB 07 02F9
        gbc.setState(0xb13d, 0xae36, 0x3a50, 0x6d06, 0x40c7, 0xaac, 0x0, 0x1);
        gbc.writeMem(0xb13d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xae36, gbc.sp());
        EXPECT(0xb13f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb13d));
        EXPECT(0x7, gbc.readMem(0xb13e));
        // CB 07 02FA
        gbc.setState(0x3640, 0xeed, 0x3680, 0x9d32, 0xf2e3, 0x7f9b, 0x0, 0x0);
        gbc.writeMem(0x3640, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeed, gbc.sp());
        EXPECT(0x3642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 02FD
        gbc.setState(0x44ee, 0x7c3c, 0xe860, 0xf619, 0x9f7f, 0x6bc3, 0x1, 0x1);
        gbc.writeMem(0x44ee, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7c3c, gbc.sp());
        EXPECT(0x44f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 02FE
        gbc.setState(0xe764, 0x5a8a, 0x1d80, 0xacb3, 0xb9c2, 0x41f4, 0x1, 0x0);
        gbc.writeMem(0xe764, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5a8a, gbc.sp());
        EXPECT(0xe766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe764));
        EXPECT(0x7, gbc.readMem(0xe765));
        // CB 07 02FF
        gbc.setState(0x28a2, 0xf167, 0x8f30, 0x5bdc, 0x952e, 0x489d, 0x1, 0x1);
        gbc.writeMem(0x28a2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf167, gbc.sp());
        EXPECT(0x28a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0300
        gbc.setState(0x530e, 0x95b0, 0xdee0, 0x2d90, 0x865, 0xa2, 0x1, 0x1);
        gbc.writeMem(0x530e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x95b0, gbc.sp());
        EXPECT(0x5310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0302
        gbc.setState(0x6c71, 0x958a, 0xf370, 0x529d, 0x9deb, 0xe399, 0x1, 0x0);
        gbc.writeMem(0x6c71, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x958a, gbc.sp());
        EXPECT(0x6c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0303
        gbc.setState(0xef2c, 0x7024, 0x42e0, 0xf3ea, 0xa1c4, 0x93ee, 0x0, 0x1);
        gbc.writeMem(0xef2c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7024, gbc.sp());
        EXPECT(0xef2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2c));
        EXPECT(0x7, gbc.readMem(0xef2d));
        // CB 07 0304
        gbc.setState(0x1110, 0x8154, 0xb710, 0xf18f, 0xd1a0, 0x2735, 0x0, 0x0);
        gbc.writeMem(0x1110, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8154, gbc.sp());
        EXPECT(0x1112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0305
        gbc.setState(0x4b90, 0xaebc, 0xf7e0, 0x12c7, 0xfa9f, 0x68bb, 0x1, 0x1);
        gbc.writeMem(0x4b90, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xaebc, gbc.sp());
        EXPECT(0x4b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0306
        gbc.setState(0xb887, 0x55ac, 0x2b10, 0x280c, 0x7f18, 0xcd05, 0x0, 0x1);
        gbc.writeMem(0xb887, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x55ac, gbc.sp());
        EXPECT(0xb889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb887));
        EXPECT(0x7, gbc.readMem(0xb888));
        // CB 07 0307
        gbc.setState(0x1440, 0x1939, 0x4c40, 0x8342, 0x3f66, 0x6bd5, 0x1, 0x1);
        gbc.writeMem(0x1440, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1939, gbc.sp());
        EXPECT(0x1442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0308
        gbc.setState(0x5c07, 0x724b, 0xf890, 0x287d, 0x81bb, 0x1e18, 0x1, 0x1);
        gbc.writeMem(0x5c07, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x724b, gbc.sp());
        EXPECT(0x5c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0309
        gbc.setState(0x531a, 0x87ea, 0xd370, 0xdc53, 0x5cf6, 0x47b4, 0x1, 0x0);
        gbc.writeMem(0x531a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x87ea, gbc.sp());
        EXPECT(0x531c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 030A
        gbc.setState(0xc0b2, 0x4ed5, 0x8840, 0xba90, 0x434e, 0xc7f3, 0x0, 0x0);
        gbc.writeMem(0xc0b2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4ed5, gbc.sp());
        EXPECT(0xc0b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b2));
        EXPECT(0x7, gbc.readMem(0xc0b3));
        // CB 07 030B
        gbc.setState(0xb48c, 0xedf4, 0x4060, 0xcbf7, 0x8d4e, 0x9749, 0x0, 0x0);
        gbc.writeMem(0xb48c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xedf4, gbc.sp());
        EXPECT(0xb48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb48c));
        EXPECT(0x7, gbc.readMem(0xb48d));
        // CB 07 030C
        gbc.setState(0xb123, 0x76f, 0x58a0, 0x4349, 0xa4b2, 0xbdfd, 0x1, 0x0);
        gbc.writeMem(0xb123, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x76f, gbc.sp());
        EXPECT(0xb125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb123));
        EXPECT(0x7, gbc.readMem(0xb124));
        // CB 07 030D
        gbc.setState(0x86bb, 0xb83f, 0xd330, 0x6213, 0x8a86, 0xd598, 0x0, 0x0);
        gbc.writeMem(0x86bb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb83f, gbc.sp());
        EXPECT(0x86bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86bb));
        EXPECT(0x7, gbc.readMem(0x86bc));
        // CB 07 030F
        gbc.setState(0x1683, 0x9c9d, 0x2620, 0x15ad, 0x47ba, 0xe0ff, 0x0, 0x1);
        gbc.writeMem(0x1683, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9c9d, gbc.sp());
        EXPECT(0x1685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0310
        gbc.setState(0x6152, 0x4488, 0x8f80, 0xda6d, 0x527d, 0x519, 0x0, 0x1);
        gbc.writeMem(0x6152, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4488, gbc.sp());
        EXPECT(0x6154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0311
        gbc.setState(0x15d8, 0x45cc, 0xe300, 0x2ca9, 0x6483, 0x2f43, 0x0, 0x1);
        gbc.writeMem(0x15d8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x45cc, gbc.sp());
        EXPECT(0x15da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0312
        gbc.setState(0xcae7, 0xfe41, 0x2810, 0x1ae1, 0xfafe, 0x35e6, 0x1, 0x0);
        gbc.writeMem(0xcae7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfe41, gbc.sp());
        EXPECT(0xcae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae7));
        EXPECT(0x7, gbc.readMem(0xcae8));
        // CB 07 0313
        gbc.setState(0xc3af, 0x1a1d, 0x540, 0x5c7d, 0x4f55, 0x2f02, 0x1, 0x1);
        gbc.writeMem(0xc3af, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1a1d, gbc.sp());
        EXPECT(0xc3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3af));
        EXPECT(0x7, gbc.readMem(0xc3b0));
        // CB 07 0314
        gbc.setState(0x8ab4, 0x7caa, 0xc080, 0x7a16, 0xfd85, 0x1d72, 0x1, 0x0);
        gbc.writeMem(0x8ab4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7caa, gbc.sp());
        EXPECT(0x8ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab4));
        EXPECT(0x7, gbc.readMem(0x8ab5));
        // CB 07 0315
        gbc.setState(0x1f34, 0x9831, 0xf170, 0xee03, 0x6395, 0xc46e, 0x0, 0x0);
        gbc.writeMem(0x1f34, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9831, gbc.sp());
        EXPECT(0x1f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0316
        gbc.setState(0x8af5, 0xe5c5, 0xcc60, 0xfd65, 0xe7ba, 0x84f6, 0x0, 0x1);
        gbc.writeMem(0x8af5, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe5c5, gbc.sp());
        EXPECT(0x8af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af5));
        EXPECT(0x7, gbc.readMem(0x8af6));
        // CB 07 0317
        gbc.setState(0x479b, 0x3e40, 0xf590, 0xc1b4, 0x577b, 0x5804, 0x1, 0x0);
        gbc.writeMem(0x479b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3e40, gbc.sp());
        EXPECT(0x479d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0318
        gbc.setState(0x6ec1, 0x5181, 0xc550, 0xd51f, 0x503f, 0x9f0c, 0x1, 0x0);
        gbc.writeMem(0x6ec1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5181, gbc.sp());
        EXPECT(0x6ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0319
        gbc.setState(0x7fcb, 0x32e2, 0x1180, 0xf5bc, 0x3a36, 0x8997, 0x0, 0x0);
        gbc.writeMem(0x7fcb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x32e2, gbc.sp());
        EXPECT(0x7fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 031A
        gbc.setState(0xa8e8, 0xb860, 0x98c0, 0x8cf4, 0x5c36, 0x231c, 0x1, 0x1);
        gbc.writeMem(0xa8e8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb860, gbc.sp());
        EXPECT(0xa8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e8));
        EXPECT(0x7, gbc.readMem(0xa8e9));
        // CB 07 031C
        gbc.setState(0xa628, 0x1f1e, 0xfc20, 0xaf4c, 0x5d88, 0x707c, 0x0, 0x0);
        gbc.writeMem(0xa628, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1f1e, gbc.sp());
        EXPECT(0xa62a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa628));
        EXPECT(0x7, gbc.readMem(0xa629));
        // CB 07 031D
        gbc.setState(0x1f7a, 0xb179, 0xc970, 0xdb4e, 0xd301, 0x50dd, 0x1, 0x0);
        gbc.writeMem(0x1f7a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb179, gbc.sp());
        EXPECT(0x1f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 031E
        gbc.setState(0xdcad, 0x1f65, 0x54a0, 0xf077, 0x2be4, 0xa088, 0x1, 0x1);
        gbc.writeMem(0xdcad, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1f65, gbc.sp());
        EXPECT(0xdcaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcad));
        EXPECT(0x7, gbc.readMem(0xdcae));
        // CB 07 031F
        gbc.setState(0x483e, 0x3772, 0x3f20, 0x42a7, 0x2162, 0x1cd0, 0x0, 0x1);
        gbc.writeMem(0x483e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3772, gbc.sp());
        EXPECT(0x4840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0320
        gbc.setState(0x3480, 0x4b1e, 0x4ec0, 0x721a, 0xcb07, 0x827b, 0x0, 0x0);
        gbc.writeMem(0x3480, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4b1e, gbc.sp());
        EXPECT(0x3482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0321
        gbc.setState(0x8841, 0xb87a, 0x5530, 0xbe7a, 0xf7ba, 0x25fb, 0x1, 0x0);
        gbc.writeMem(0x8841, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb87a, gbc.sp());
        EXPECT(0x8843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8841));
        EXPECT(0x7, gbc.readMem(0x8842));
        // CB 07 0322
        gbc.setState(0xaa0b, 0xe5fc, 0xa6e0, 0x8a3e, 0xf84f, 0x4aa1, 0x1, 0x1);
        gbc.writeMem(0xaa0b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe5fc, gbc.sp());
        EXPECT(0xaa0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0b));
        EXPECT(0x7, gbc.readMem(0xaa0c));
        // CB 07 0323
        gbc.setState(0x540f, 0xcbd1, 0x4900, 0xe841, 0x80fb, 0xa806, 0x1, 0x1);
        gbc.writeMem(0x540f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcbd1, gbc.sp());
        EXPECT(0x5411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0324
        gbc.setState(0x1921, 0xa89b, 0x8340, 0xcf5d, 0x1900, 0x153b, 0x1, 0x1);
        gbc.writeMem(0x1921, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa89b, gbc.sp());
        EXPECT(0x1923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0325
        gbc.setState(0x2370, 0xed7c, 0xb110, 0x7b3b, 0x3093, 0x227d, 0x1, 0x0);
        gbc.writeMem(0x2370, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xed7c, gbc.sp());
        EXPECT(0x2372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0326
        gbc.setState(0xc1a, 0x26c8, 0x2990, 0xf511, 0x8fc5, 0xf0d0, 0x1, 0x0);
        gbc.writeMem(0xc1a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x26c8, gbc.sp());
        EXPECT(0xc1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0327
        gbc.setState(0x577e, 0x68c, 0x65c0, 0xc079, 0xac7b, 0xd295, 0x0, 0x0);
        gbc.writeMem(0x577e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x68c, gbc.sp());
        EXPECT(0x5780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0328
        gbc.setState(0x64f6, 0x1295, 0x1ef0, 0x1677, 0x3cdf, 0xb884, 0x0, 0x1);
        gbc.writeMem(0x64f6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1295, gbc.sp());
        EXPECT(0x64f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0329
        gbc.setState(0x87ba, 0x7f10, 0x50, 0x3a63, 0xba18, 0xeac1, 0x1, 0x1);
        gbc.writeMem(0x87ba, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7f10, gbc.sp());
        EXPECT(0x87bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ba));
        EXPECT(0x7, gbc.readMem(0x87bb));
        // CB 07 032B
        gbc.setState(0x36c9, 0x8700, 0x43a0, 0x79e7, 0x9831, 0x411c, 0x1, 0x1);
        gbc.writeMem(0x36c9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8700, gbc.sp());
        EXPECT(0x36cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 032C
        gbc.setState(0xeb9, 0x1a39, 0xb9b0, 0x1e57, 0x583d, 0x9257, 0x0, 0x1);
        gbc.writeMem(0xeb9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1a39, gbc.sp());
        EXPECT(0xebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 032D
        gbc.setState(0xb73f, 0x96d1, 0xcf70, 0x76a5, 0xd7f9, 0xa13b, 0x0, 0x0);
        gbc.writeMem(0xb73f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x96d1, gbc.sp());
        EXPECT(0xb741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73f));
        EXPECT(0x7, gbc.readMem(0xb740));
        // CB 07 032E
        gbc.setState(0x698c, 0xa65b, 0x75a0, 0xe866, 0x9170, 0x66c6, 0x0, 0x0);
        gbc.writeMem(0x698c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa65b, gbc.sp());
        EXPECT(0x698e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 032F
        gbc.setState(0x1168, 0x336e, 0xbd00, 0xebc9, 0x2c6a, 0xb2f2, 0x1, 0x1);
        gbc.writeMem(0x1168, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x336e, gbc.sp());
        EXPECT(0x116a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0330
        gbc.setState(0x55d2, 0x92d3, 0xbf0, 0xd9e5, 0x48f9, 0x8bd6, 0x0, 0x0);
        gbc.writeMem(0x55d2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x92d3, gbc.sp());
        EXPECT(0x55d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0332
        gbc.setState(0x6a62, 0x1e00, 0x8f10, 0xd7fd, 0x2878, 0x10b0, 0x0, 0x1);
        gbc.writeMem(0x6a62, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1e00, gbc.sp());
        EXPECT(0x6a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0333
        gbc.setState(0x36fe, 0x41ca, 0xc0a0, 0xb290, 0xdaf5, 0xf260, 0x0, 0x1);
        gbc.writeMem(0x36fe, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x41ca, gbc.sp());
        EXPECT(0x3700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0334
        gbc.setState(0x6633, 0x3da3, 0x1da0, 0xc833, 0x783c, 0x7efb, 0x0, 0x0);
        gbc.writeMem(0x6633, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3da3, gbc.sp());
        EXPECT(0x6635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0335
        gbc.setState(0xe8cc, 0xd8e4, 0x170, 0x6b76, 0x9964, 0x5f94, 0x1, 0x0);
        gbc.writeMem(0xe8cc, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd8e4, gbc.sp());
        EXPECT(0xe8ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cc));
        EXPECT(0x7, gbc.readMem(0xe8cd));
        // CB 07 0336
        gbc.setState(0x304c, 0x17ef, 0xd0e0, 0x3270, 0x3f44, 0xa443, 0x0, 0x0);
        gbc.writeMem(0x304c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x17ef, gbc.sp());
        EXPECT(0x304e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0337
        gbc.setState(0xb3b2, 0x4539, 0x2b90, 0x8dc5, 0xe6f5, 0x2bc, 0x1, 0x1);
        gbc.writeMem(0xb3b2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4539, gbc.sp());
        EXPECT(0xb3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b2));
        EXPECT(0x7, gbc.readMem(0xb3b3));
        // CB 07 0338
        gbc.setState(0x56c1, 0x920e, 0xbfd0, 0xa7a1, 0xfca3, 0x4042, 0x1, 0x1);
        gbc.writeMem(0x56c1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x920e, gbc.sp());
        EXPECT(0x56c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0339
        gbc.setState(0xd01f, 0x5abc, 0xd490, 0x9a64, 0x6f4a, 0x8ff9, 0x0, 0x1);
        gbc.writeMem(0xd01f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5abc, gbc.sp());
        EXPECT(0xd021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01f));
        EXPECT(0x7, gbc.readMem(0xd020));
        // CB 07 033A
        gbc.setState(0x35f1, 0x40a4, 0xff50, 0xd487, 0xb02f, 0xe85f, 0x1, 0x1);
        gbc.writeMem(0x35f1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x40a4, gbc.sp());
        EXPECT(0x35f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 033B
        gbc.setState(0xe994, 0x38e6, 0xdad0, 0x6462, 0xb85d, 0xbb90, 0x1, 0x0);
        gbc.writeMem(0xe994, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x38e6, gbc.sp());
        EXPECT(0xe996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe994));
        EXPECT(0x7, gbc.readMem(0xe995));
        // CB 07 033C
        gbc.setState(0xecb4, 0x69cf, 0x54a0, 0x73cb, 0x569c, 0x2355, 0x0, 0x1);
        gbc.writeMem(0xecb4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x69cf, gbc.sp());
        EXPECT(0xecb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb4));
        EXPECT(0x7, gbc.readMem(0xecb5));
        // CB 07 033D
        gbc.setState(0x8efc, 0xa612, 0x2860, 0x8fc0, 0x5701, 0xe56a, 0x0, 0x1);
        gbc.writeMem(0x8efc, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa612, gbc.sp());
        EXPECT(0x8efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efc));
        EXPECT(0x7, gbc.readMem(0x8efd));
        // CB 07 033E
        gbc.setState(0x8668, 0xfbc8, 0xd2f0, 0xb8ad, 0x6672, 0xa5c8, 0x1, 0x1);
        gbc.writeMem(0x8668, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfbc8, gbc.sp());
        EXPECT(0x866a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8668));
        EXPECT(0x7, gbc.readMem(0x8669));
        // CB 07 033F
        gbc.setState(0xedc8, 0x1eb1, 0xb130, 0x8d8c, 0x412e, 0x3df0, 0x1, 0x1);
        gbc.writeMem(0xedc8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1eb1, gbc.sp());
        EXPECT(0xedca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc8));
        EXPECT(0x7, gbc.readMem(0xedc9));
        // CB 07 0340
        gbc.setState(0x3a67, 0x1ae0, 0x2f60, 0xa87, 0x6c8a, 0x4590, 0x0, 0x0);
        gbc.writeMem(0x3a67, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1ae0, gbc.sp());
        EXPECT(0x3a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0341
        gbc.setState(0xcc3a, 0xbad2, 0xb1c0, 0x9fd, 0xc526, 0xfea5, 0x0, 0x1);
        gbc.writeMem(0xcc3a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbad2, gbc.sp());
        EXPECT(0xcc3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3a));
        EXPECT(0x7, gbc.readMem(0xcc3b));
        // CB 07 0342
        gbc.setState(0x7403, 0x2cd4, 0x2d50, 0x47f8, 0xe852, 0x52b9, 0x1, 0x0);
        gbc.writeMem(0x7403, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2cd4, gbc.sp());
        EXPECT(0x7405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0343
        gbc.setState(0xcb8, 0x1594, 0x59b0, 0x7042, 0x30b0, 0x309c, 0x0, 0x1);
        gbc.writeMem(0xcb8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1594, gbc.sp());
        EXPECT(0xcba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0344
        gbc.setState(0x6814, 0x393a, 0xa60, 0xf569, 0x42a3, 0x904b, 0x1, 0x0);
        gbc.writeMem(0x6814, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x393a, gbc.sp());
        EXPECT(0x6816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0345
        gbc.setState(0xa383, 0x54c3, 0x64a0, 0x1e2a, 0x9fb, 0x4444, 0x1, 0x1);
        gbc.writeMem(0xa383, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x54c3, gbc.sp());
        EXPECT(0xa385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa383));
        EXPECT(0x7, gbc.readMem(0xa384));
        // CB 07 0346
        gbc.setState(0x76d, 0xa4dc, 0x37e0, 0xc278, 0xe67d, 0xec7c, 0x0, 0x0);
        gbc.writeMem(0x76d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa4dc, gbc.sp());
        EXPECT(0x76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0347
        gbc.setState(0x1f9b, 0xe2c6, 0x60d0, 0x2bab, 0xcaf4, 0x2c00, 0x0, 0x0);
        gbc.writeMem(0x1f9b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe2c6, gbc.sp());
        EXPECT(0x1f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0348
        gbc.setState(0xd942, 0xcabb, 0x7420, 0x6d95, 0x6758, 0x5f9b, 0x0, 0x0);
        gbc.writeMem(0xd942, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcabb, gbc.sp());
        EXPECT(0xd944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd942));
        EXPECT(0x7, gbc.readMem(0xd943));
        // CB 07 0349
        gbc.setState(0x136a, 0x5929, 0x13f0, 0x527b, 0xbaf0, 0x8625, 0x0, 0x0);
        gbc.writeMem(0x136a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5929, gbc.sp());
        EXPECT(0x136c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 034A
        gbc.setState(0x8a0e, 0xcfea, 0x3ee0, 0x52eb, 0x250e, 0xa2d5, 0x1, 0x1);
        gbc.writeMem(0x8a0e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcfea, gbc.sp());
        EXPECT(0x8a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a0e));
        EXPECT(0x7, gbc.readMem(0x8a0f));
        // CB 07 034B
        gbc.setState(0xc57c, 0x41fb, 0x6590, 0x913a, 0xfc9e, 0xbe8, 0x0, 0x1);
        gbc.writeMem(0xc57c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x41fb, gbc.sp());
        EXPECT(0xc57e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57c));
        EXPECT(0x7, gbc.readMem(0xc57d));
        // CB 07 034C
        gbc.setState(0xd197, 0x2e12, 0xc2b0, 0xebb7, 0x8970, 0x218a, 0x0, 0x0);
        gbc.writeMem(0xd197, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2e12, gbc.sp());
        EXPECT(0xd199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd197));
        EXPECT(0x7, gbc.readMem(0xd198));
        // CB 07 034D
        gbc.setState(0x3b87, 0xcf12, 0x8410, 0x8c23, 0xee22, 0x2b6f, 0x1, 0x1);
        gbc.writeMem(0x3b87, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcf12, gbc.sp());
        EXPECT(0x3b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 034E
        gbc.setState(0x6f87, 0xce50, 0xec40, 0x5c4e, 0xc31e, 0xe8e9, 0x1, 0x0);
        gbc.writeMem(0x6f87, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xce50, gbc.sp());
        EXPECT(0x6f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 034F
        gbc.setState(0xd3e6, 0xbffb, 0x45c0, 0xa87d, 0xd0f2, 0xe5d2, 0x1, 0x1);
        gbc.writeMem(0xd3e6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbffb, gbc.sp());
        EXPECT(0xd3e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e6));
        EXPECT(0x7, gbc.readMem(0xd3e7));
        // CB 07 0350
        gbc.setState(0x7a58, 0x6039, 0xc020, 0xe0e1, 0xb33b, 0x66ce, 0x0, 0x0);
        gbc.writeMem(0x7a58, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6039, gbc.sp());
        EXPECT(0x7a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0351
        gbc.setState(0x13b4, 0x517f, 0xc5b0, 0xc1db, 0x1938, 0xc482, 0x0, 0x0);
        gbc.writeMem(0x13b4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x517f, gbc.sp());
        EXPECT(0x13b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0352
        gbc.setState(0xc9c0, 0x4a4f, 0xd580, 0xf795, 0xf67e, 0x906, 0x1, 0x0);
        gbc.writeMem(0xc9c0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4a4f, gbc.sp());
        EXPECT(0xc9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c0));
        EXPECT(0x7, gbc.readMem(0xc9c1));
        // CB 07 0353
        gbc.setState(0x84c9, 0x87fe, 0x36c0, 0xb3b0, 0x3130, 0xb665, 0x0, 0x1);
        gbc.writeMem(0x84c9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x87fe, gbc.sp());
        EXPECT(0x84cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c9));
        EXPECT(0x7, gbc.readMem(0x84ca));
        // CB 07 0354
        gbc.setState(0x1ab8, 0x8931, 0x9570, 0xdabf, 0xe785, 0xd87f, 0x0, 0x0);
        gbc.writeMem(0x1ab8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8931, gbc.sp());
        EXPECT(0x1aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0355
        gbc.setState(0xb50f, 0x5307, 0x5430, 0xd331, 0x467, 0xecb, 0x1, 0x0);
        gbc.writeMem(0xb50f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5307, gbc.sp());
        EXPECT(0xb511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb50f));
        EXPECT(0x7, gbc.readMem(0xb510));
        // CB 07 0356
        gbc.setState(0x3bbb, 0x8644, 0x2d00, 0x4fb5, 0x789c, 0x931a, 0x0, 0x1);
        gbc.writeMem(0x3bbb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8644, gbc.sp());
        EXPECT(0x3bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0357
        gbc.setState(0x1c84, 0xe46f, 0x5860, 0xb6bf, 0xee2f, 0xea30, 0x0, 0x0);
        gbc.writeMem(0x1c84, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe46f, gbc.sp());
        EXPECT(0x1c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0359
        gbc.setState(0xc1e2, 0xdd50, 0x2aa0, 0xdc58, 0x33ba, 0xe583, 0x1, 0x0);
        gbc.writeMem(0xc1e2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdd50, gbc.sp());
        EXPECT(0xc1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1e2));
        EXPECT(0x7, gbc.readMem(0xc1e3));
        // CB 07 035A
        gbc.setState(0x6362, 0x53d9, 0xed0, 0x1a25, 0xc6b1, 0x962b, 0x1, 0x1);
        gbc.writeMem(0x6362, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x53d9, gbc.sp());
        EXPECT(0x6364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 035B
        gbc.setState(0x2141, 0x9301, 0xb2e0, 0xb339, 0x29bc, 0x3db3, 0x1, 0x1);
        gbc.writeMem(0x2141, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9301, gbc.sp());
        EXPECT(0x2143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 035C
        gbc.setState(0x4295, 0x67cc, 0x600, 0xe61f, 0xa8a2, 0xf625, 0x1, 0x1);
        gbc.writeMem(0x4295, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x67cc, gbc.sp());
        EXPECT(0x4297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 035D
        gbc.setState(0x5509, 0x2261, 0xb70, 0xe23a, 0xf353, 0xaae6, 0x0, 0x0);
        gbc.writeMem(0x5509, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2261, gbc.sp());
        EXPECT(0x550b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 035E
        gbc.setState(0x934, 0x5155, 0xf8b0, 0xc189, 0xeb63, 0x56a, 0x1, 0x0);
        gbc.writeMem(0x934, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5155, gbc.sp());
        EXPECT(0x936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 035F
        gbc.setState(0xd18c, 0x5692, 0x19a0, 0x2d18, 0x55, 0x9fb0, 0x1, 0x1);
        gbc.writeMem(0xd18c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5692, gbc.sp());
        EXPECT(0xd18e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd18c));
        EXPECT(0x7, gbc.readMem(0xd18d));
        // CB 07 0360
        gbc.setState(0x5384, 0xc960, 0x9500, 0xaa70, 0xa8f0, 0xe676, 0x1, 0x0);
        gbc.writeMem(0x5384, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc960, gbc.sp());
        EXPECT(0x5386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0361
        gbc.setState(0xd153, 0x2ff, 0x2c10, 0x9647, 0xfc1a, 0x6045, 0x1, 0x1);
        gbc.writeMem(0xd153, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2ff, gbc.sp());
        EXPECT(0xd155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd153));
        EXPECT(0x7, gbc.readMem(0xd154));
        // CB 07 0362
        gbc.setState(0xa1c4, 0x5c64, 0xc8b0, 0x31ef, 0x3f87, 0x3fa5, 0x0, 0x0);
        gbc.writeMem(0xa1c4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5c64, gbc.sp());
        EXPECT(0xa1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c4));
        EXPECT(0x7, gbc.readMem(0xa1c5));
        // CB 07 0363
        gbc.setState(0xa169, 0x6e2a, 0x7840, 0x2c4, 0x256b, 0x6f4, 0x1, 0x1);
        gbc.writeMem(0xa169, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6e2a, gbc.sp());
        EXPECT(0xa16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa169));
        EXPECT(0x7, gbc.readMem(0xa16a));
        // CB 07 0364
        gbc.setState(0x54b0, 0x523d, 0x56e0, 0x4d8a, 0x7bca, 0xdb8f, 0x1, 0x0);
        gbc.writeMem(0x54b0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x523d, gbc.sp());
        EXPECT(0x54b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0365
        gbc.setState(0x4af7, 0xb361, 0x4770, 0x3d16, 0x42f5, 0xfd02, 0x0, 0x0);
        gbc.writeMem(0x4af7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb361, gbc.sp());
        EXPECT(0x4af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0366
        gbc.setState(0x17a2, 0xadd4, 0x8b10, 0x762c, 0x787d, 0xe7ac, 0x1, 0x0);
        gbc.writeMem(0x17a2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xadd4, gbc.sp());
        EXPECT(0x17a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0367
        gbc.setState(0x10ee, 0x547a, 0x36d0, 0x2f3f, 0xf266, 0x3463, 0x1, 0x1);
        gbc.writeMem(0x10ee, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x547a, gbc.sp());
        EXPECT(0x10f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0368
        gbc.setState(0xe50c, 0xa7d1, 0xd590, 0x1992, 0x5da9, 0x5f37, 0x1, 0x0);
        gbc.writeMem(0xe50c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa7d1, gbc.sp());
        EXPECT(0xe50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50c));
        EXPECT(0x7, gbc.readMem(0xe50d));
        // CB 07 0369
        gbc.setState(0x1667, 0xfb05, 0x110, 0x5863, 0x4977, 0xbfce, 0x1, 0x1);
        gbc.writeMem(0x1667, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfb05, gbc.sp());
        EXPECT(0x1669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 036A
        gbc.setState(0x3877, 0x5f6d, 0xec50, 0x7a41, 0x6e28, 0xfce7, 0x0, 0x1);
        gbc.writeMem(0x3877, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5f6d, gbc.sp());
        EXPECT(0x3879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 036B
        gbc.setState(0x6689, 0x9c89, 0xf510, 0x5715, 0x45e4, 0xd4ad, 0x1, 0x0);
        gbc.writeMem(0x6689, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9c89, gbc.sp());
        EXPECT(0x668b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 036C
        gbc.setState(0x6de2, 0xab42, 0xb8b0, 0x4b2, 0xed8d, 0xcba7, 0x1, 0x0);
        gbc.writeMem(0x6de2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xab42, gbc.sp());
        EXPECT(0x6de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 036D
        gbc.setState(0xd3b4, 0xe55a, 0xfcc0, 0x1d95, 0xaf1, 0xfc99, 0x1, 0x0);
        gbc.writeMem(0xd3b4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe55a, gbc.sp());
        EXPECT(0xd3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b4));
        EXPECT(0x7, gbc.readMem(0xd3b5));
        // CB 07 036E
        gbc.setState(0xb769, 0x6cc8, 0x9c0, 0xaa9, 0xde56, 0x1286, 0x1, 0x0);
        gbc.writeMem(0xb769, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6cc8, gbc.sp());
        EXPECT(0xb76b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb769));
        EXPECT(0x7, gbc.readMem(0xb76a));
        // CB 07 036F
        gbc.setState(0xefa8, 0x8f95, 0x88d0, 0xd9af, 0xaaf8, 0xdc32, 0x0, 0x0);
        gbc.writeMem(0xefa8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8f95, gbc.sp());
        EXPECT(0xefaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa8));
        EXPECT(0x7, gbc.readMem(0xefa9));
        // CB 07 0370
        gbc.setState(0x58b0, 0xb5f6, 0x6230, 0x7638, 0x677c, 0x5390, 0x1, 0x1);
        gbc.writeMem(0x58b0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb5f6, gbc.sp());
        EXPECT(0x58b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0371
        gbc.setState(0x40b9, 0xe5fb, 0xa010, 0x8947, 0xb83f, 0x7667, 0x0, 0x0);
        gbc.writeMem(0x40b9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe5fb, gbc.sp());
        EXPECT(0x40bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0372
        gbc.setState(0xbabe, 0xbccd, 0x1c60, 0x91e9, 0xbd0e, 0xbc19, 0x0, 0x0);
        gbc.writeMem(0xbabe, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbccd, gbc.sp());
        EXPECT(0xbac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbabe));
        EXPECT(0x7, gbc.readMem(0xbabf));
        // CB 07 0373
        gbc.setState(0xb65, 0xfee0, 0x2df0, 0x3574, 0x936d, 0xe55a, 0x0, 0x1);
        gbc.writeMem(0xb65, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfee0, gbc.sp());
        EXPECT(0xb67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0375
        gbc.setState(0x61e4, 0x5db6, 0x62b0, 0xce, 0x6fa3, 0x73b, 0x0, 0x1);
        gbc.writeMem(0x61e4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5db6, gbc.sp());
        EXPECT(0x61e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0376
        gbc.setState(0xa178, 0x41f0, 0x4420, 0x9937, 0xb5d2, 0xabf3, 0x1, 0x0);
        gbc.writeMem(0xa178, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x41f0, gbc.sp());
        EXPECT(0xa17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa178));
        EXPECT(0x7, gbc.readMem(0xa179));
        // CB 07 0377
        gbc.setState(0xab08, 0x6eb1, 0xe640, 0x1170, 0x7a6b, 0x1a49, 0x0, 0x1);
        gbc.writeMem(0xab08, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6eb1, gbc.sp());
        EXPECT(0xab0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab08));
        EXPECT(0x7, gbc.readMem(0xab09));
        // CB 07 0378
        gbc.setState(0xbb18, 0x7945, 0x7b80, 0x835c, 0xed79, 0x39dd, 0x1, 0x0);
        gbc.writeMem(0xbb18, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7945, gbc.sp());
        EXPECT(0xbb1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb18));
        EXPECT(0x7, gbc.readMem(0xbb19));
        // CB 07 0379
        gbc.setState(0xdf75, 0x607e, 0x4790, 0xc69d, 0x61fb, 0x8442, 0x1, 0x0);
        gbc.writeMem(0xdf75, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x607e, gbc.sp());
        EXPECT(0xdf77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf75));
        EXPECT(0x7, gbc.readMem(0xdf76));
        // CB 07 037A
        gbc.setState(0x6d5d, 0x7c30, 0x9e00, 0xc1a4, 0xbc0c, 0x7ea6, 0x1, 0x0);
        gbc.writeMem(0x6d5d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7c30, gbc.sp());
        EXPECT(0x6d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 037B
        gbc.setState(0xd7fa, 0x360e, 0x7b20, 0xa13b, 0xad64, 0x1111, 0x0, 0x0);
        gbc.writeMem(0xd7fa, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x360e, gbc.sp());
        EXPECT(0xd7fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7fa));
        EXPECT(0x7, gbc.readMem(0xd7fb));
        // CB 07 037C
        gbc.setState(0xb3c4, 0xf95a, 0x7730, 0xc758, 0x6dd7, 0x3ec, 0x0, 0x1);
        gbc.writeMem(0xb3c4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf95a, gbc.sp());
        EXPECT(0xb3c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c4));
        EXPECT(0x7, gbc.readMem(0xb3c5));
        // CB 07 037D
        gbc.setState(0xd7e1, 0xab66, 0x9e00, 0xc74d, 0x7c60, 0xbb5e, 0x0, 0x0);
        gbc.writeMem(0xd7e1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xab66, gbc.sp());
        EXPECT(0xd7e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e1));
        EXPECT(0x7, gbc.readMem(0xd7e2));
        // CB 07 037E
        gbc.setState(0xb5db, 0x6f6b, 0x5040, 0xf12a, 0x6826, 0xaa5a, 0x0, 0x0);
        gbc.writeMem(0xb5db, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6f6b, gbc.sp());
        EXPECT(0xb5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5db));
        EXPECT(0x7, gbc.readMem(0xb5dc));
        // CB 07 037F
        gbc.setState(0x6987, 0x1b37, 0x8720, 0x684b, 0x9c8a, 0xd07e, 0x1, 0x0);
        gbc.writeMem(0x6987, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1b37, gbc.sp());
        EXPECT(0x6989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0380
        gbc.setState(0x6a97, 0x379, 0x56e0, 0x662e, 0xb13, 0xddc3, 0x0, 0x1);
        gbc.writeMem(0x6a97, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x379, gbc.sp());
        EXPECT(0x6a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0381
        gbc.setState(0xb9b3, 0x8fa, 0x9240, 0xd9d0, 0x7e50, 0xd7e4, 0x1, 0x1);
        gbc.writeMem(0xb9b3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8fa, gbc.sp());
        EXPECT(0xb9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b3));
        EXPECT(0x7, gbc.readMem(0xb9b4));
        // CB 07 0382
        gbc.setState(0x4c54, 0xb192, 0x3c10, 0x380, 0x1c9, 0x2ddd, 0x0, 0x1);
        gbc.writeMem(0x4c54, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb192, gbc.sp());
        EXPECT(0x4c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0383
        gbc.setState(0x36c0, 0xe3ab, 0xe800, 0x9c33, 0x5acb, 0x1a50, 0x0, 0x0);
        gbc.writeMem(0x36c0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe3ab, gbc.sp());
        EXPECT(0x36c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0384
        gbc.setState(0x6495, 0x41c1, 0xa430, 0xc127, 0x8ab9, 0x8d90, 0x0, 0x1);
        gbc.writeMem(0x6495, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x41c1, gbc.sp());
        EXPECT(0x6497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0385
        gbc.setState(0x396a, 0x4880, 0xad40, 0x2407, 0x3854, 0xc665, 0x1, 0x1);
        gbc.writeMem(0x396a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4880, gbc.sp());
        EXPECT(0x396c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0386
        gbc.setState(0xd398, 0xd00d, 0x6600, 0xb75a, 0xd758, 0xf234, 0x0, 0x1);
        gbc.writeMem(0xd398, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd00d, gbc.sp());
        EXPECT(0xd39a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd398));
        EXPECT(0x7, gbc.readMem(0xd399));
        // CB 07 0387
        gbc.setState(0x7808, 0xa850, 0x7460, 0x57cb, 0xf8c, 0x960, 0x1, 0x0);
        gbc.writeMem(0x7808, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa850, gbc.sp());
        EXPECT(0x780a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0388
        gbc.setState(0xcd8b, 0x6524, 0x9b50, 0x40de, 0xd87c, 0x5d41, 0x1, 0x0);
        gbc.writeMem(0xcd8b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6524, gbc.sp());
        EXPECT(0xcd8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8b));
        EXPECT(0x7, gbc.readMem(0xcd8c));
        // CB 07 0389
        gbc.setState(0x55a7, 0x81ad, 0x32f0, 0x4542, 0x46a4, 0x4a6f, 0x0, 0x0);
        gbc.writeMem(0x55a7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x81ad, gbc.sp());
        EXPECT(0x55a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 038A
        gbc.setState(0xb44c, 0x99df, 0xc570, 0x46de, 0x1e85, 0xae6a, 0x1, 0x1);
        gbc.writeMem(0xb44c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x99df, gbc.sp());
        EXPECT(0xb44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb44c));
        EXPECT(0x7, gbc.readMem(0xb44d));
        // CB 07 038B
        gbc.setState(0xa24b, 0xa987, 0xf260, 0x3398, 0x173e, 0x1ae5, 0x0, 0x1);
        gbc.writeMem(0xa24b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa987, gbc.sp());
        EXPECT(0xa24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24b));
        EXPECT(0x7, gbc.readMem(0xa24c));
        // CB 07 038C
        gbc.setState(0xc09d, 0x9c34, 0x11c0, 0xe46a, 0x485b, 0x2b24, 0x1, 0x0);
        gbc.writeMem(0xc09d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9c34, gbc.sp());
        EXPECT(0xc09f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09d));
        EXPECT(0x7, gbc.readMem(0xc09e));
        // CB 07 038D
        gbc.setState(0x2fe2, 0x7c6e, 0x7320, 0x686b, 0x73b6, 0x9282, 0x1, 0x1);
        gbc.writeMem(0x2fe2, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7c6e, gbc.sp());
        EXPECT(0x2fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 038E
        gbc.setState(0x1787, 0x575, 0x300, 0x7ae0, 0x79f6, 0x1528, 0x0, 0x0);
        gbc.writeMem(0x1787, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x575, gbc.sp());
        EXPECT(0x1789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0390
        gbc.setState(0xe8d0, 0xe135, 0xc3b0, 0xfa49, 0xf52d, 0x1222, 0x1, 0x1);
        gbc.writeMem(0xe8d0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe135, gbc.sp());
        EXPECT(0xe8d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d0));
        EXPECT(0x7, gbc.readMem(0xe8d1));
        // CB 07 0391
        gbc.setState(0xdc95, 0x23be, 0xfec0, 0x343b, 0xc4ed, 0x1b08, 0x1, 0x1);
        gbc.writeMem(0xdc95, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x23be, gbc.sp());
        EXPECT(0xdc97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc95));
        EXPECT(0x7, gbc.readMem(0xdc96));
        // CB 07 0392
        gbc.setState(0x68e5, 0x3955, 0xba30, 0xf2, 0x7b43, 0x9782, 0x0, 0x1);
        gbc.writeMem(0x68e5, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3955, gbc.sp());
        EXPECT(0x68e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0393
        gbc.setState(0xc0d3, 0x40e0, 0x4a00, 0xdfc4, 0x9259, 0x8bbe, 0x1, 0x1);
        gbc.writeMem(0xc0d3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x40e0, gbc.sp());
        EXPECT(0xc0d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d3));
        EXPECT(0x7, gbc.readMem(0xc0d4));
        // CB 07 0394
        gbc.setState(0xb506, 0x7562, 0x5120, 0xfe6, 0x3db4, 0xa089, 0x0, 0x0);
        gbc.writeMem(0xb506, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7562, gbc.sp());
        EXPECT(0xb508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb506));
        EXPECT(0x7, gbc.readMem(0xb507));
        // CB 07 0395
        gbc.setState(0xa609, 0x6673, 0x8f0, 0x16e7, 0xf83a, 0x62b1, 0x0, 0x1);
        gbc.writeMem(0xa609, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6673, gbc.sp());
        EXPECT(0xa60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa609));
        EXPECT(0x7, gbc.readMem(0xa60a));
        // CB 07 0396
        gbc.setState(0x28c4, 0x5341, 0x1d0, 0x9c53, 0xcdbf, 0x719c, 0x0, 0x0);
        gbc.writeMem(0x28c4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5341, gbc.sp());
        EXPECT(0x28c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 0397
        gbc.setState(0x749a, 0xc9c5, 0xffa0, 0xe252, 0x90fb, 0x2931, 0x0, 0x1);
        gbc.writeMem(0x749a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc9c5, gbc.sp());
        EXPECT(0x749c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 0398
        gbc.setState(0x53a0, 0xdcb7, 0xf450, 0xbb8f, 0x897a, 0xc229, 0x0, 0x0);
        gbc.writeMem(0x53a0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xdcb7, gbc.sp());
        EXPECT(0x53a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 039A
        gbc.setState(0x36f7, 0x1a8, 0x7aa0, 0xc0e0, 0xf167, 0x2d70, 0x0, 0x0);
        gbc.writeMem(0x36f7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1a8, gbc.sp());
        EXPECT(0x36f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 039B
        gbc.setState(0x89c5, 0x99dc, 0xee00, 0xe4fa, 0x602d, 0xc284, 0x0, 0x1);
        gbc.writeMem(0x89c5, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x99dc, gbc.sp());
        EXPECT(0x89c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c5));
        EXPECT(0x7, gbc.readMem(0x89c6));
        // CB 07 039C
        gbc.setState(0x5d59, 0x91b, 0xc620, 0xffeb, 0xfc81, 0x9461, 0x1, 0x1);
        gbc.writeMem(0x5d59, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x91b, gbc.sp());
        EXPECT(0x5d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 039D
        gbc.setState(0x1391, 0x6878, 0x5660, 0x7e78, 0x5eef, 0x84b9, 0x1, 0x1);
        gbc.writeMem(0x1391, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6878, gbc.sp());
        EXPECT(0x1393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 039F
        gbc.setState(0xbb3a, 0x6106, 0x60, 0x979b, 0xec6e, 0x972b, 0x1, 0x1);
        gbc.writeMem(0xbb3a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6106, gbc.sp());
        EXPECT(0xbb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb3a));
        EXPECT(0x7, gbc.readMem(0xbb3b));
        // CB 07 03A0
        gbc.setState(0x3cbe, 0xa137, 0x7310, 0xa514, 0x4abc, 0x8ef0, 0x1, 0x1);
        gbc.writeMem(0x3cbe, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa137, gbc.sp());
        EXPECT(0x3cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03A1
        gbc.setState(0xc7a9, 0x6b64, 0x6de0, 0xa928, 0x2ef3, 0xc807, 0x0, 0x1);
        gbc.writeMem(0xc7a9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6b64, gbc.sp());
        EXPECT(0xc7ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a9));
        EXPECT(0x7, gbc.readMem(0xc7aa));
        // CB 07 03A2
        gbc.setState(0x76d1, 0xd766, 0xbe60, 0x45c2, 0xa10c, 0x356b, 0x0, 0x0);
        gbc.writeMem(0x76d1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd766, gbc.sp());
        EXPECT(0x76d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03A3
        gbc.setState(0x1b0, 0xc507, 0x78a0, 0xf1e2, 0xbf5c, 0x3476, 0x0, 0x1);
        gbc.writeMem(0x1b0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc507, gbc.sp());
        EXPECT(0x1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03A4
        gbc.setState(0x6aaa, 0x1038, 0xb9c0, 0x6fda, 0xbf76, 0xf98a, 0x1, 0x0);
        gbc.writeMem(0x6aaa, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1038, gbc.sp());
        EXPECT(0x6aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03A5
        gbc.setState(0x79f4, 0x95f0, 0xeea0, 0xdf06, 0xe794, 0x11b5, 0x1, 0x1);
        gbc.writeMem(0x79f4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x95f0, gbc.sp());
        EXPECT(0x79f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03A6
        gbc.setState(0x7878, 0x30b1, 0xf270, 0x20dd, 0xc676, 0x8e9c, 0x0, 0x1);
        gbc.writeMem(0x7878, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x30b1, gbc.sp());
        EXPECT(0x787a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03A7
        gbc.setState(0xc837, 0xa88a, 0x6650, 0x8dc9, 0x64aa, 0x8174, 0x1, 0x1);
        gbc.writeMem(0xc837, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa88a, gbc.sp());
        EXPECT(0xc839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc837));
        EXPECT(0x7, gbc.readMem(0xc838));
        // CB 07 03A8
        gbc.setState(0x3529, 0xb317, 0xc1a0, 0x68d8, 0x6aec, 0x8b15, 0x0, 0x0);
        gbc.writeMem(0x3529, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb317, gbc.sp());
        EXPECT(0x352b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03A9
        gbc.setState(0xb4, 0x3576, 0x28d0, 0x9f5c, 0xba86, 0xdf2d, 0x1, 0x1);
        gbc.writeMem(0xb4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3576, gbc.sp());
        EXPECT(0xb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03AA
        gbc.setState(0x4ad, 0x1ed7, 0x1870, 0x42d6, 0xda9b, 0xbfc, 0x0, 0x0);
        gbc.writeMem(0x4ad, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1ed7, gbc.sp());
        EXPECT(0x4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03AB
        gbc.setState(0xc23c, 0xa47, 0x19f0, 0x409e, 0x47e2, 0x369c, 0x0, 0x1);
        gbc.writeMem(0xc23c, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa47, gbc.sp());
        EXPECT(0xc23e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc23c));
        EXPECT(0x7, gbc.readMem(0xc23d));
        // CB 07 03AD
        gbc.setState(0xffa, 0xc0ef, 0x2410, 0x5d4, 0x6f0b, 0xfaa9, 0x0, 0x0);
        gbc.writeMem(0xffa, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc0ef, gbc.sp());
        EXPECT(0xffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03AF
        gbc.setState(0x305b, 0x5fd7, 0x7990, 0x68e3, 0x8ddc, 0xca39, 0x1, 0x1);
        gbc.writeMem(0x305b, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5fd7, gbc.sp());
        EXPECT(0x305d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03B0
        gbc.setState(0x4963, 0x7de7, 0x77f0, 0x422c, 0xdf6b, 0xa792, 0x1, 0x1);
        gbc.writeMem(0x4963, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7de7, gbc.sp());
        EXPECT(0x4965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03B2
        gbc.setState(0x95ca, 0x863c, 0x4570, 0x1970, 0xfab0, 0x13ac, 0x0, 0x0);
        gbc.writeMem(0x95ca, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x863c, gbc.sp());
        EXPECT(0x95cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ca));
        EXPECT(0x7, gbc.readMem(0x95cb));
        // CB 07 03B3
        gbc.setState(0x7654, 0x4724, 0x8dc0, 0x3ef4, 0x9a8e, 0x4ea6, 0x0, 0x0);
        gbc.writeMem(0x7654, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4724, gbc.sp());
        EXPECT(0x7656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03B4
        gbc.setState(0xcff0, 0x96ce, 0xe560, 0x1930, 0xbe31, 0xa050, 0x1, 0x1);
        gbc.writeMem(0xcff0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x96ce, gbc.sp());
        EXPECT(0xcff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff0));
        EXPECT(0x7, gbc.readMem(0xcff1));
        // CB 07 03B5
        gbc.setState(0x1c90, 0xf596, 0xa140, 0xb8c4, 0xd423, 0x3a79, 0x0, 0x0);
        gbc.writeMem(0x1c90, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf596, gbc.sp());
        EXPECT(0x1c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03B6
        gbc.setState(0xbda6, 0x65ee, 0x4590, 0x59e3, 0x7757, 0x6b74, 0x1, 0x1);
        gbc.writeMem(0xbda6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x65ee, gbc.sp());
        EXPECT(0xbda8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda6));
        EXPECT(0x7, gbc.readMem(0xbda7));
        // CB 07 03B7
        gbc.setState(0x6f79, 0x534c, 0xa1d0, 0x40a8, 0xe28b, 0x889, 0x0, 0x0);
        gbc.writeMem(0x6f79, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x534c, gbc.sp());
        EXPECT(0x6f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03B8
        gbc.setState(0x6cad, 0x1ff, 0x9ee0, 0x87e6, 0xc199, 0xd459, 0x1, 0x0);
        gbc.writeMem(0x6cad, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1ff, gbc.sp());
        EXPECT(0x6caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03B9
        gbc.setState(0x1eeb, 0xe138, 0xbe70, 0x7246, 0x9dfb, 0x384a, 0x1, 0x1);
        gbc.writeMem(0x1eeb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe138, gbc.sp());
        EXPECT(0x1eed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03BA
        gbc.setState(0x5191, 0x8042, 0x7cd0, 0x527, 0xc3af, 0x1f03, 0x1, 0x0);
        gbc.writeMem(0x5191, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8042, gbc.sp());
        EXPECT(0x5193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03BB
        gbc.setState(0x6bfa, 0x12e9, 0x35a0, 0xe562, 0xa4df, 0xe939, 0x1, 0x1);
        gbc.writeMem(0x6bfa, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x12e9, gbc.sp());
        EXPECT(0x6bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03BC
        gbc.setState(0x1ec8, 0x8441, 0x64a0, 0x894e, 0x67be, 0xc97e, 0x0, 0x1);
        gbc.writeMem(0x1ec8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8441, gbc.sp());
        EXPECT(0x1eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03BD
        gbc.setState(0xb0f8, 0x80f4, 0x8be0, 0xf4c4, 0xbdfe, 0xbaff, 0x0, 0x0);
        gbc.writeMem(0xb0f8, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x80f4, gbc.sp());
        EXPECT(0xb0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f8));
        EXPECT(0x7, gbc.readMem(0xb0f9));
        // CB 07 03BF
        gbc.setState(0x84ae, 0x89d3, 0x9c60, 0x1630, 0xfb9, 0x29dd, 0x1, 0x0);
        gbc.writeMem(0x84ae, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x89d3, gbc.sp());
        EXPECT(0x84b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ae));
        EXPECT(0x7, gbc.readMem(0x84af));
        // CB 07 03C0
        gbc.setState(0xaf55, 0xccfd, 0xf710, 0xe048, 0x7e7e, 0xe, 0x0, 0x0);
        gbc.writeMem(0xaf55, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xccfd, gbc.sp());
        EXPECT(0xaf57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf55));
        EXPECT(0x7, gbc.readMem(0xaf56));
        // CB 07 03C1
        gbc.setState(0x9e2f, 0xb408, 0xe590, 0x5572, 0x801f, 0xa60, 0x0, 0x1);
        gbc.writeMem(0x9e2f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb408, gbc.sp());
        EXPECT(0x9e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e2f));
        EXPECT(0x7, gbc.readMem(0x9e30));
        // CB 07 03C2
        gbc.setState(0x87fe, 0x96fb, 0x35e0, 0x8290, 0xfb82, 0x1c1b, 0x1, 0x0);
        gbc.writeMem(0x87fe, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x96fb, gbc.sp());
        EXPECT(0x8800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87fe));
        EXPECT(0x7, gbc.readMem(0x87ff));
        // CB 07 03C3
        gbc.setState(0x3a83, 0x5d38, 0x4860, 0xe051, 0x23e8, 0xf4e1, 0x0, 0x0);
        gbc.writeMem(0x3a83, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5d38, gbc.sp());
        EXPECT(0x3a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03C4
        gbc.setState(0x464e, 0x467, 0x6ea0, 0xa7bf, 0x60a5, 0x8b4, 0x1, 0x0);
        gbc.writeMem(0x464e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x467, gbc.sp());
        EXPECT(0x4650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03C5
        gbc.setState(0x7bc7, 0x3d10, 0x6eb0, 0xe22, 0x4304, 0x33f4, 0x0, 0x1);
        gbc.writeMem(0x7bc7, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3d10, gbc.sp());
        EXPECT(0x7bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03C6
        gbc.setState(0x8e78, 0xde87, 0xf6f0, 0x36dd, 0x4097, 0x83cf, 0x1, 0x1);
        gbc.writeMem(0x8e78, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xde87, gbc.sp());
        EXPECT(0x8e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e78));
        EXPECT(0x7, gbc.readMem(0x8e79));
        // CB 07 03C7
        gbc.setState(0xe034, 0x76a9, 0x8cf0, 0xcc3d, 0xf5b0, 0x3006, 0x0, 0x1);
        gbc.writeMem(0xe034, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x76a9, gbc.sp());
        EXPECT(0xe036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe034));
        EXPECT(0x7, gbc.readMem(0xe035));
        // CB 07 03C8
        gbc.setState(0xc1ae, 0xc5e6, 0xde60, 0x46a7, 0x8f6, 0xe996, 0x0, 0x0);
        gbc.writeMem(0xc1ae, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc5e6, gbc.sp());
        EXPECT(0xc1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ae));
        EXPECT(0x7, gbc.readMem(0xc1af));
        // CB 07 03C9
        gbc.setState(0x59c4, 0x79ce, 0x1cb0, 0xda83, 0x3522, 0x50f9, 0x1, 0x0);
        gbc.writeMem(0x59c4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x79ce, gbc.sp());
        EXPECT(0x59c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03CB
        gbc.setState(0x7014, 0xccd4, 0xfe10, 0xb660, 0x9210, 0x73e9, 0x0, 0x0);
        gbc.writeMem(0x7014, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xccd4, gbc.sp());
        EXPECT(0x7016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03CC
        gbc.setState(0xd835, 0xf378, 0xf220, 0x510a, 0xd9f7, 0xa568, 0x1, 0x0);
        gbc.writeMem(0xd835, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf378, gbc.sp());
        EXPECT(0xd837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd835));
        EXPECT(0x7, gbc.readMem(0xd836));
        // CB 07 03CD
        gbc.setState(0x8ab0, 0xa529, 0x2490, 0x7cad, 0xf6a7, 0x81fc, 0x1, 0x0);
        gbc.writeMem(0x8ab0, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa529, gbc.sp());
        EXPECT(0x8ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab0));
        EXPECT(0x7, gbc.readMem(0x8ab1));
        // CB 07 03CE
        gbc.setState(0xbb1e, 0xc565, 0x7ac0, 0x1b88, 0x711c, 0xbdf8, 0x1, 0x1);
        gbc.writeMem(0xbb1e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc565, gbc.sp());
        EXPECT(0xbb20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb1e));
        EXPECT(0x7, gbc.readMem(0xbb1f));
        // CB 07 03CF
        gbc.setState(0xb86e, 0x3ae1, 0xc940, 0xf101, 0x104d, 0x1b61, 0x1, 0x1);
        gbc.writeMem(0xb86e, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3ae1, gbc.sp());
        EXPECT(0xb870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb86e));
        EXPECT(0x7, gbc.readMem(0xb86f));
        // CB 07 03D0
        gbc.setState(0xb4e3, 0x5914, 0x7dd0, 0x3381, 0x76f9, 0x60b1, 0x1, 0x0);
        gbc.writeMem(0xb4e3, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5914, gbc.sp());
        EXPECT(0xb4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e3));
        EXPECT(0x7, gbc.readMem(0xb4e4));
        // CB 07 03D1
        gbc.setState(0xa2a9, 0x6bc2, 0x9390, 0x2950, 0xa452, 0x53ac, 0x1, 0x1);
        gbc.writeMem(0xa2a9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6bc2, gbc.sp());
        EXPECT(0xa2ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a9));
        EXPECT(0x7, gbc.readMem(0xa2aa));
        // CB 07 03D2
        gbc.setState(0x9d9f, 0x97a2, 0x7b50, 0xe652, 0x2c05, 0x30a2, 0x0, 0x1);
        gbc.writeMem(0x9d9f, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x97a2, gbc.sp());
        EXPECT(0x9da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d9f));
        EXPECT(0x7, gbc.readMem(0x9da0));
        // CB 07 03D3
        gbc.setState(0x7bc9, 0x1a79, 0x2d30, 0x262, 0xd200, 0x2e05, 0x1, 0x1);
        gbc.writeMem(0x7bc9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1a79, gbc.sp());
        EXPECT(0x7bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03D4
        gbc.setState(0x1f22, 0x14ad, 0x9f70, 0xbfcc, 0xf929, 0x2663, 0x1, 0x1);
        gbc.writeMem(0x1f22, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x14ad, gbc.sp());
        EXPECT(0x1f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03D5
        gbc.setState(0xa7cb, 0xeac5, 0x1810, 0xb61f, 0x440, 0x57f3, 0x0, 0x1);
        gbc.writeMem(0xa7cb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xeac5, gbc.sp());
        EXPECT(0xa7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7cb));
        EXPECT(0x7, gbc.readMem(0xa7cc));
        // CB 07 03D6
        gbc.setState(0xe3bb, 0x296b, 0x1c30, 0xbebb, 0xccf1, 0xf594, 0x1, 0x0);
        gbc.writeMem(0xe3bb, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x296b, gbc.sp());
        EXPECT(0xe3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3bb));
        EXPECT(0x7, gbc.readMem(0xe3bc));
        // CB 07 03D7
        gbc.setState(0x6f4d, 0x1005, 0x6360, 0xa5b1, 0x9236, 0x5562, 0x1, 0x1);
        gbc.writeMem(0x6f4d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1005, gbc.sp());
        EXPECT(0x6f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03D8
        gbc.setState(0xdd1a, 0xea28, 0x69e0, 0x86fb, 0x934d, 0x993e, 0x1, 0x1);
        gbc.writeMem(0xdd1a, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xea28, gbc.sp());
        EXPECT(0xdd1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1a));
        EXPECT(0x7, gbc.readMem(0xdd1b));
        // CB 07 03D9
        gbc.setState(0x58b1, 0x3f97, 0xf490, 0xa93f, 0x8292, 0xd9b6, 0x0, 0x1);
        gbc.writeMem(0x58b1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3f97, gbc.sp());
        EXPECT(0x58b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03DA
        gbc.setState(0x5701, 0xccf0, 0xdc80, 0xe635, 0x1d28, 0x3b05, 0x0, 0x0);
        gbc.writeMem(0x5701, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xccf0, gbc.sp());
        EXPECT(0x5703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03DB
        gbc.setState(0x21b4, 0xc80c, 0x8ef0, 0xc6b3, 0xc677, 0xa815, 0x1, 0x0);
        gbc.writeMem(0x21b4, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc80c, gbc.sp());
        EXPECT(0x21b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03DC
        gbc.setState(0x60c6, 0x581e, 0xe9c0, 0xaf8a, 0xf7bb, 0x9082, 0x1, 0x1);
        gbc.writeMem(0x60c6, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x581e, gbc.sp());
        EXPECT(0x60c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03DE
        gbc.setState(0x8112, 0x90fa, 0xef00, 0xe001, 0xc60c, 0xe26d, 0x1, 0x0);
        gbc.writeMem(0x8112, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x90fa, gbc.sp());
        EXPECT(0x8114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8112));
        EXPECT(0x7, gbc.readMem(0x8113));
        // CB 07 03DF
        gbc.setState(0x65b9, 0xcad1, 0xe810, 0xb1b3, 0xc200, 0xbd02, 0x0, 0x1);
        gbc.writeMem(0x65b9, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcad1, gbc.sp());
        EXPECT(0x65bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03E0
        gbc.setState(0x30fa, 0x9fa4, 0xa1c0, 0xf0ee, 0x24d7, 0xd303, 0x0, 0x0);
        gbc.writeMem(0x30fa, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9fa4, gbc.sp());
        EXPECT(0x30fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03E1
        gbc.setState(0x9299, 0x8ea7, 0x2f90, 0x7bc7, 0x828e, 0x4f43, 0x0, 0x0);
        gbc.writeMem(0x9299, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8ea7, gbc.sp());
        EXPECT(0x929b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9299));
        EXPECT(0x7, gbc.readMem(0x929a));
        // CB 07 03E2
        gbc.setState(0x3fe1, 0xfa9b, 0xa180, 0x1121, 0x1eb2, 0x6558, 0x0, 0x0);
        gbc.writeMem(0x3fe1, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfa9b, gbc.sp());
        EXPECT(0x3fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 07 03E3
        gbc.setState(0x4307, 0xd1b5, 0x6470, 0x68ef, 0x8349, 0x6fdd, 0x1, 0x0);
        gbc.writeMem(0x4307, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd1b5, gbc.sp());
        EXPECT(0x4309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03E4
        gbc.setState(0x447d, 0x5d36, 0x2a70, 0x982b, 0x358b, 0x2ac2, 0x0, 0x1);
        gbc.writeMem(0x447d, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5d36, gbc.sp());
        EXPECT(0x447f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03E5
        gbc.setState(0x5020, 0xe66e, 0x75b0, 0x63bc, 0xfe74, 0x626f, 0x1, 0x1);
        gbc.writeMem(0x5020, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe66e, gbc.sp());
        EXPECT(0x5022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03E6
        gbc.setState(0x7395, 0xa2fe, 0x1600, 0x937d, 0x766d, 0x77a, 0x1, 0x0);
        gbc.writeMem(0x7395, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa2fe, gbc.sp());
        EXPECT(0x7397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 07 03E7
        gbc.setState(0x60ca, 0x5bb3, 0xd880, 0x77ff, 0x8ffd, 0x8b5c, 0x0, 0x1);
        gbc.writeMem(0x60ca, { 0xcb, 0x7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5bb3, gbc.sp());
        EXPECT(0x60cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
