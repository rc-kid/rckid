    TEST(gbcemu, opcode_cb_b5) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B5 0000
        gbc.setState(0xc40, 0xb6c5, 0xa200, 0xa461, 0xbfc1, 0xbfbf, 0x1, 0x1);
        gbc.writeMem(0xc40, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb6c5, gbc.sp());
        EXPECT(0xc42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0001
        gbc.setState(0x76ac, 0x76f9, 0xdbb0, 0x62f8, 0xa70d, 0x8b74, 0x1, 0x1);
        gbc.writeMem(0x76ac, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x76f9, gbc.sp());
        EXPECT(0x76ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0002
        gbc.setState(0xab15, 0x5049, 0x3630, 0x4033, 0x1f18, 0xefa6, 0x1, 0x1);
        gbc.writeMem(0xab15, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5049, gbc.sp());
        EXPECT(0xab17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab15));
        EXPECT(0xb5, gbc.readMem(0xab16));
        // CB B5 0003
        gbc.setState(0xbb7c, 0xb512, 0xece0, 0xf601, 0x11fe, 0x281, 0x1, 0x0);
        gbc.writeMem(0xbb7c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb512, gbc.sp());
        EXPECT(0xbb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb7c));
        EXPECT(0xb5, gbc.readMem(0xbb7d));
        // CB B5 0004
        gbc.setState(0x3dd3, 0xc341, 0x1070, 0xc165, 0x8da6, 0x7a97, 0x1, 0x0);
        gbc.writeMem(0x3dd3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc341, gbc.sp());
        EXPECT(0x3dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0005
        gbc.setState(0x65e5, 0x1ef2, 0x77f0, 0x685, 0xff79, 0x7253, 0x0, 0x0);
        gbc.writeMem(0x65e5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1ef2, gbc.sp());
        EXPECT(0x65e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0006
        gbc.setState(0x8327, 0xe509, 0x7480, 0xaaea, 0xc929, 0x50e2, 0x1, 0x0);
        gbc.writeMem(0x8327, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe509, gbc.sp());
        EXPECT(0x8329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8327));
        EXPECT(0xb5, gbc.readMem(0x8328));
        // CB B5 0007
        gbc.setState(0x9352, 0xa2d8, 0xea50, 0xd2ae, 0x4eb8, 0xa35c, 0x0, 0x1);
        gbc.writeMem(0x9352, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa2d8, gbc.sp());
        EXPECT(0x9354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9352));
        EXPECT(0xb5, gbc.readMem(0x9353));
        // CB B5 0008
        gbc.setState(0xafd8, 0xf3c2, 0xc0, 0xe33f, 0x77d9, 0x18eb, 0x0, 0x1);
        gbc.writeMem(0xafd8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf3c2, gbc.sp());
        EXPECT(0xafda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd8));
        EXPECT(0xb5, gbc.readMem(0xafd9));
        // CB B5 0009
        gbc.setState(0x1171, 0xc857, 0xcac0, 0xe721, 0xdcaa, 0x1323, 0x1, 0x1);
        gbc.writeMem(0x1171, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc857, gbc.sp());
        EXPECT(0x1173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 000A
        gbc.setState(0x811a, 0xa2dc, 0x84a0, 0x7da, 0xc306, 0x20a1, 0x0, 0x0);
        gbc.writeMem(0x811a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa2dc, gbc.sp());
        EXPECT(0x811c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811a));
        EXPECT(0xb5, gbc.readMem(0x811b));
        // CB B5 000C
        gbc.setState(0x6508, 0x5714, 0xb260, 0xbd8b, 0x2bc4, 0xcf70, 0x1, 0x1);
        gbc.writeMem(0x6508, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5714, gbc.sp());
        EXPECT(0x650a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 000D
        gbc.setState(0x5feb, 0x25ac, 0x1ad0, 0xa946, 0x7d10, 0x230a, 0x0, 0x0);
        gbc.writeMem(0x5feb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x25ac, gbc.sp());
        EXPECT(0x5fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 000E
        gbc.setState(0x3f13, 0xd53f, 0xa60, 0xc44b, 0x831c, 0xd2ac, 0x0, 0x0);
        gbc.writeMem(0x3f13, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd53f, gbc.sp());
        EXPECT(0x3f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 000F
        gbc.setState(0x348a, 0xa07b, 0x52c0, 0x50a0, 0x2384, 0x4266, 0x1, 0x0);
        gbc.writeMem(0x348a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa07b, gbc.sp());
        EXPECT(0x348c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0010
        gbc.setState(0x2a7c, 0x58a6, 0xc6f0, 0x9824, 0x1828, 0x30b1, 0x1, 0x1);
        gbc.writeMem(0x2a7c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x58a6, gbc.sp());
        EXPECT(0x2a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0011
        gbc.setState(0x4270, 0x818a, 0x7b20, 0x1b78, 0x3039, 0x10b3, 0x1, 0x0);
        gbc.writeMem(0x4270, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x818a, gbc.sp());
        EXPECT(0x4272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0012
        gbc.setState(0x89d, 0xe52f, 0x7e70, 0x33fe, 0xa2f, 0x8522, 0x0, 0x0);
        gbc.writeMem(0x89d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe52f, gbc.sp());
        EXPECT(0x89f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0013
        gbc.setState(0xdae7, 0x9164, 0xe480, 0x83c0, 0x54e2, 0xde98, 0x0, 0x0);
        gbc.writeMem(0xdae7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9164, gbc.sp());
        EXPECT(0xdae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae7));
        EXPECT(0xb5, gbc.readMem(0xdae8));
        // CB B5 0014
        gbc.setState(0x959e, 0x2621, 0xee0, 0x9e73, 0xc9f1, 0x9f8, 0x0, 0x0);
        gbc.writeMem(0x959e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2621, gbc.sp());
        EXPECT(0x95a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x959e));
        EXPECT(0xb5, gbc.readMem(0x959f));
        // CB B5 0015
        gbc.setState(0xe648, 0x6eea, 0xd220, 0x7100, 0x6f02, 0x471c, 0x1, 0x1);
        gbc.writeMem(0xe648, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6eea, gbc.sp());
        EXPECT(0xe64a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe648));
        EXPECT(0xb5, gbc.readMem(0xe649));
        // CB B5 0016
        gbc.setState(0x9aff, 0x5b0, 0xf3d0, 0x7c6d, 0x5fa9, 0xf761, 0x1, 0x0);
        gbc.writeMem(0x9aff, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5b0, gbc.sp());
        EXPECT(0x9b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aff));
        EXPECT(0xb5, gbc.readMem(0x9b00));
        // CB B5 0017
        gbc.setState(0x439c, 0x72cf, 0x2f60, 0xa222, 0x4a49, 0x36a7, 0x1, 0x0);
        gbc.writeMem(0x439c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x72cf, gbc.sp());
        EXPECT(0x439e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0018
        gbc.setState(0xee4d, 0x538d, 0x9120, 0x36d3, 0x4f60, 0xb3bd, 0x0, 0x1);
        gbc.writeMem(0xee4d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x538d, gbc.sp());
        EXPECT(0xee4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee4d));
        EXPECT(0xb5, gbc.readMem(0xee4e));
        // CB B5 0019
        gbc.setState(0x2d55, 0x7cb1, 0x4d50, 0xda5, 0x82cb, 0x812a, 0x0, 0x0);
        gbc.writeMem(0x2d55, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7cb1, gbc.sp());
        EXPECT(0x2d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 001A
        gbc.setState(0x4b06, 0xf7c, 0xe4d0, 0xecc8, 0xf08d, 0x971a, 0x0, 0x0);
        gbc.writeMem(0x4b06, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf7c, gbc.sp());
        EXPECT(0x4b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 001B
        gbc.setState(0x2034, 0xd1be, 0x87a0, 0xf64a, 0x247c, 0xa336, 0x1, 0x0);
        gbc.writeMem(0x2034, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd1be, gbc.sp());
        EXPECT(0x2036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 001C
        gbc.setState(0xa900, 0x344b, 0x2dd0, 0x3395, 0x9ace, 0xab57, 0x1, 0x0);
        gbc.writeMem(0xa900, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x344b, gbc.sp());
        EXPECT(0xa902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa900));
        EXPECT(0xb5, gbc.readMem(0xa901));
        // CB B5 001D
        gbc.setState(0x53ed, 0x61f0, 0xda90, 0x410f, 0x5097, 0x9fc8, 0x0, 0x1);
        gbc.writeMem(0x53ed, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x61f0, gbc.sp());
        EXPECT(0x53ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 001E
        gbc.setState(0x6eb0, 0x1f40, 0xc960, 0x4aa9, 0x80c2, 0xad8, 0x0, 0x1);
        gbc.writeMem(0x6eb0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1f40, gbc.sp());
        EXPECT(0x6eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 001F
        gbc.setState(0x9527, 0xb792, 0x29c0, 0xc6d6, 0xa779, 0x5ef0, 0x0, 0x1);
        gbc.writeMem(0x9527, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb792, gbc.sp());
        EXPECT(0x9529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9527));
        EXPECT(0xb5, gbc.readMem(0x9528));
        // CB B5 0020
        gbc.setState(0xe260, 0xc1de, 0x2490, 0xb3ef, 0x5524, 0x80c5, 0x1, 0x0);
        gbc.writeMem(0xe260, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc1de, gbc.sp());
        EXPECT(0xe262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe260));
        EXPECT(0xb5, gbc.readMem(0xe261));
        // CB B5 0022
        gbc.setState(0x34b6, 0x50fb, 0x5ff0, 0xbd55, 0xa285, 0xf23, 0x1, 0x0);
        gbc.writeMem(0x34b6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x50fb, gbc.sp());
        EXPECT(0x34b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0023
        gbc.setState(0x897b, 0xeb95, 0x4bd0, 0x14bd, 0x2945, 0xb6f9, 0x0, 0x0);
        gbc.writeMem(0x897b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xeb95, gbc.sp());
        EXPECT(0x897d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x897b));
        EXPECT(0xb5, gbc.readMem(0x897c));
        // CB B5 0024
        gbc.setState(0xa78a, 0x55c8, 0x79a0, 0x60db, 0xd805, 0xe301, 0x1, 0x1);
        gbc.writeMem(0xa78a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x55c8, gbc.sp());
        EXPECT(0xa78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa78a));
        EXPECT(0xb5, gbc.readMem(0xa78b));
        // CB B5 0025
        gbc.setState(0x21a9, 0xf213, 0x5cd0, 0xaa8d, 0xa84, 0x87f9, 0x1, 0x0);
        gbc.writeMem(0x21a9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf213, gbc.sp());
        EXPECT(0x21ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0026
        gbc.setState(0x5728, 0xfcd5, 0x9f0, 0x53be, 0xf435, 0xadb9, 0x0, 0x0);
        gbc.writeMem(0x5728, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfcd5, gbc.sp());
        EXPECT(0x572a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0027
        gbc.setState(0xb7bf, 0xb243, 0x24f0, 0x7ca, 0x870e, 0x47b5, 0x0, 0x1);
        gbc.writeMem(0xb7bf, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb243, gbc.sp());
        EXPECT(0xb7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7bf));
        EXPECT(0xb5, gbc.readMem(0xb7c0));
        // CB B5 0028
        gbc.setState(0x45bd, 0xcafb, 0x9340, 0xe2e0, 0xbf9a, 0xc937, 0x1, 0x1);
        gbc.writeMem(0x45bd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcafb, gbc.sp());
        EXPECT(0x45bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0029
        gbc.setState(0x3a51, 0xe00, 0x7a60, 0x24d1, 0x8e6a, 0x8155, 0x1, 0x1);
        gbc.writeMem(0x3a51, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe00, gbc.sp());
        EXPECT(0x3a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 002A
        gbc.setState(0xcc59, 0x1432, 0x9d0, 0x3cfa, 0x6c78, 0xd8c1, 0x1, 0x0);
        gbc.writeMem(0xcc59, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1432, gbc.sp());
        EXPECT(0xcc5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc59));
        EXPECT(0xb5, gbc.readMem(0xcc5a));
        // CB B5 002B
        gbc.setState(0x125e, 0xff5f, 0x1190, 0x8d5b, 0x7a90, 0x263b, 0x0, 0x1);
        gbc.writeMem(0x125e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xff5f, gbc.sp());
        EXPECT(0x1260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 002C
        gbc.setState(0xefc4, 0x5da4, 0x8bd0, 0x8d19, 0x271e, 0x45f, 0x0, 0x1);
        gbc.writeMem(0xefc4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5da4, gbc.sp());
        EXPECT(0xefc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc4));
        EXPECT(0xb5, gbc.readMem(0xefc5));
        // CB B5 002E
        gbc.setState(0xe73f, 0x6048, 0x9380, 0x6f5a, 0xf8e9, 0x8c32, 0x0, 0x0);
        gbc.writeMem(0xe73f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6048, gbc.sp());
        EXPECT(0xe741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73f));
        EXPECT(0xb5, gbc.readMem(0xe740));
        // CB B5 002F
        gbc.setState(0x38a8, 0x4797, 0xafc0, 0x99f4, 0x2304, 0x4cd2, 0x1, 0x0);
        gbc.writeMem(0x38a8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4797, gbc.sp());
        EXPECT(0x38aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0030
        gbc.setState(0x7fc, 0x4076, 0x610, 0x68b9, 0x5ee1, 0x9eae, 0x1, 0x0);
        gbc.writeMem(0x7fc, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4076, gbc.sp());
        EXPECT(0x7fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0032
        gbc.setState(0xa10c, 0xa3ca, 0x310, 0xb0e9, 0xa56c, 0x1e1e, 0x1, 0x1);
        gbc.writeMem(0xa10c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa3ca, gbc.sp());
        EXPECT(0xa10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa10c));
        EXPECT(0xb5, gbc.readMem(0xa10d));
        // CB B5 0034
        gbc.setState(0xc231, 0x6cdf, 0x90f0, 0xd1ec, 0x65b5, 0xb5c, 0x0, 0x1);
        gbc.writeMem(0xc231, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6cdf, gbc.sp());
        EXPECT(0xc233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc231));
        EXPECT(0xb5, gbc.readMem(0xc232));
        // CB B5 0035
        gbc.setState(0x8f37, 0x2347, 0xd8a0, 0xcf42, 0x2418, 0x7b4, 0x1, 0x1);
        gbc.writeMem(0x8f37, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2347, gbc.sp());
        EXPECT(0x8f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f37));
        EXPECT(0xb5, gbc.readMem(0x8f38));
        // CB B5 0036
        gbc.setState(0xae82, 0x59a, 0xe840, 0xf5bf, 0x9f59, 0xd97, 0x1, 0x1);
        gbc.writeMem(0xae82, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x59a, gbc.sp());
        EXPECT(0xae84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae82));
        EXPECT(0xb5, gbc.readMem(0xae83));
        // CB B5 0037
        gbc.setState(0xcbb6, 0xed37, 0xffa0, 0xb45d, 0x5938, 0x6444, 0x1, 0x1);
        gbc.writeMem(0xcbb6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xed37, gbc.sp());
        EXPECT(0xcbb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb6));
        EXPECT(0xb5, gbc.readMem(0xcbb7));
        // CB B5 0038
        gbc.setState(0x3ec6, 0xc8f7, 0x7220, 0x549e, 0xef6b, 0xa53a, 0x0, 0x1);
        gbc.writeMem(0x3ec6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc8f7, gbc.sp());
        EXPECT(0x3ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0039
        gbc.setState(0x3b0d, 0xb65d, 0xe400, 0x372f, 0x1888, 0x234e, 0x1, 0x0);
        gbc.writeMem(0x3b0d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb65d, gbc.sp());
        EXPECT(0x3b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 003A
        gbc.setState(0x6cc7, 0x424, 0xa510, 0xef42, 0x3d5, 0xea6b, 0x0, 0x1);
        gbc.writeMem(0x6cc7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x424, gbc.sp());
        EXPECT(0x6cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 003C
        gbc.setState(0xdba6, 0xba1f, 0xa9a0, 0xed7b, 0xf919, 0xd9e8, 0x1, 0x1);
        gbc.writeMem(0xdba6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xba1f, gbc.sp());
        EXPECT(0xdba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba6));
        EXPECT(0xb5, gbc.readMem(0xdba7));
        // CB B5 003D
        gbc.setState(0xddd9, 0xf21e, 0x46a0, 0x7b9, 0x71f7, 0x9ac5, 0x1, 0x1);
        gbc.writeMem(0xddd9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf21e, gbc.sp());
        EXPECT(0xdddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd9));
        EXPECT(0xb5, gbc.readMem(0xddda));
        // CB B5 003E
        gbc.setState(0x23cb, 0xe398, 0x5e90, 0x237d, 0xa386, 0x679d, 0x1, 0x1);
        gbc.writeMem(0x23cb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe398, gbc.sp());
        EXPECT(0x23cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 003F
        gbc.setState(0x336f, 0xed73, 0xfa20, 0x5b07, 0x13d0, 0x7b86, 0x1, 0x1);
        gbc.writeMem(0x336f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xed73, gbc.sp());
        EXPECT(0x3371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0040
        gbc.setState(0x6006, 0x8a30, 0x6980, 0x6e65, 0xf172, 0x6136, 0x1, 0x0);
        gbc.writeMem(0x6006, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8a30, gbc.sp());
        EXPECT(0x6008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0041
        gbc.setState(0x98c2, 0x1b05, 0x9d50, 0x757f, 0x7cd4, 0xbb7d, 0x0, 0x1);
        gbc.writeMem(0x98c2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1b05, gbc.sp());
        EXPECT(0x98c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c2));
        EXPECT(0xb5, gbc.readMem(0x98c3));
        // CB B5 0042
        gbc.setState(0x4270, 0xab17, 0x2b60, 0x5401, 0x32b7, 0xde7, 0x1, 0x1);
        gbc.writeMem(0x4270, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xab17, gbc.sp());
        EXPECT(0x4272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0043
        gbc.setState(0x40a8, 0x931e, 0x92d0, 0xff7e, 0x7481, 0xf3d1, 0x1, 0x0);
        gbc.writeMem(0x40a8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x931e, gbc.sp());
        EXPECT(0x40aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0044
        gbc.setState(0xb115, 0x65b1, 0xb900, 0x4786, 0x4746, 0x5221, 0x0, 0x0);
        gbc.writeMem(0xb115, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x65b1, gbc.sp());
        EXPECT(0xb117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb115));
        EXPECT(0xb5, gbc.readMem(0xb116));
        // CB B5 0045
        gbc.setState(0x832d, 0x825f, 0x3f40, 0xa2fa, 0x58f8, 0xaf0f, 0x1, 0x1);
        gbc.writeMem(0x832d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x825f, gbc.sp());
        EXPECT(0x832f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x832d));
        EXPECT(0xb5, gbc.readMem(0x832e));
        // CB B5 0046
        gbc.setState(0xe815, 0x7c1e, 0xfc00, 0xe61c, 0x820d, 0xfa56, 0x1, 0x0);
        gbc.writeMem(0xe815, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7c1e, gbc.sp());
        EXPECT(0xe817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe815));
        EXPECT(0xb5, gbc.readMem(0xe816));
        // CB B5 0047
        gbc.setState(0x379f, 0x48d6, 0x9870, 0xafaa, 0x3149, 0xe027, 0x1, 0x0);
        gbc.writeMem(0x379f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x48d6, gbc.sp());
        EXPECT(0x37a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0048
        gbc.setState(0x2415, 0xbd93, 0x5220, 0x4684, 0x4061, 0x768f, 0x0, 0x0);
        gbc.writeMem(0x2415, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbd93, gbc.sp());
        EXPECT(0x2417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0049
        gbc.setState(0xd935, 0xc2fa, 0x1110, 0x53b6, 0xdb4c, 0xa202, 0x0, 0x0);
        gbc.writeMem(0xd935, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc2fa, gbc.sp());
        EXPECT(0xd937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd935));
        EXPECT(0xb5, gbc.readMem(0xd936));
        // CB B5 004A
        gbc.setState(0x9ffb, 0x96e8, 0xf5c0, 0xbfa3, 0xd392, 0xac76, 0x0, 0x1);
        gbc.writeMem(0x9ffb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x96e8, gbc.sp());
        EXPECT(0x9ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ffb));
        EXPECT(0xb5, gbc.readMem(0x9ffc));
        // CB B5 004B
        gbc.setState(0xa694, 0xccc7, 0xf010, 0xdbae, 0x70f2, 0x31bc, 0x1, 0x1);
        gbc.writeMem(0xa694, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xccc7, gbc.sp());
        EXPECT(0xa696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa694));
        EXPECT(0xb5, gbc.readMem(0xa695));
        // CB B5 004C
        gbc.setState(0xd726, 0x5aff, 0x55b0, 0xf689, 0xcf68, 0x3ff3, 0x0, 0x1);
        gbc.writeMem(0xd726, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5aff, gbc.sp());
        EXPECT(0xd728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd726));
        EXPECT(0xb5, gbc.readMem(0xd727));
        // CB B5 004D
        gbc.setState(0x1362, 0x427, 0xb7d0, 0x4be, 0x5e20, 0x5619, 0x0, 0x1);
        gbc.writeMem(0x1362, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x427, gbc.sp());
        EXPECT(0x1364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 004E
        gbc.setState(0xf22, 0x2709, 0xbdf0, 0x1eca, 0x3c6e, 0xa1b1, 0x0, 0x1);
        gbc.writeMem(0xf22, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2709, gbc.sp());
        EXPECT(0xf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 004F
        gbc.setState(0x6e28, 0x24f2, 0xabc0, 0xbc57, 0xd2fc, 0xee14, 0x1, 0x0);
        gbc.writeMem(0x6e28, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x24f2, gbc.sp());
        EXPECT(0x6e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0050
        gbc.setState(0xda9c, 0x499a, 0x2760, 0x662e, 0x42a2, 0x97d0, 0x0, 0x1);
        gbc.writeMem(0xda9c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x499a, gbc.sp());
        EXPECT(0xda9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9c));
        EXPECT(0xb5, gbc.readMem(0xda9d));
        // CB B5 0051
        gbc.setState(0xda16, 0xfaec, 0x1bc0, 0xf379, 0xdfe8, 0xcdcc, 0x1, 0x1);
        gbc.writeMem(0xda16, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfaec, gbc.sp());
        EXPECT(0xda18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda16));
        EXPECT(0xb5, gbc.readMem(0xda17));
        // CB B5 0053
        gbc.setState(0x2b64, 0xde43, 0x3710, 0x334c, 0x1256, 0x7050, 0x0, 0x0);
        gbc.writeMem(0x2b64, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xde43, gbc.sp());
        EXPECT(0x2b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0054
        gbc.setState(0x840d, 0x4827, 0xc580, 0xda96, 0x68d9, 0x3895, 0x0, 0x1);
        gbc.writeMem(0x840d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4827, gbc.sp());
        EXPECT(0x840f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840d));
        EXPECT(0xb5, gbc.readMem(0x840e));
        // CB B5 0055
        gbc.setState(0xecbd, 0xb0ed, 0xa720, 0x51ad, 0x9d1e, 0x69ad, 0x1, 0x0);
        gbc.writeMem(0xecbd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb0ed, gbc.sp());
        EXPECT(0xecbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbd));
        EXPECT(0xb5, gbc.readMem(0xecbe));
        // CB B5 0056
        gbc.setState(0x6451, 0x4686, 0xb270, 0x7a6e, 0x8f53, 0x861a, 0x0, 0x0);
        gbc.writeMem(0x6451, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4686, gbc.sp());
        EXPECT(0x6453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0057
        gbc.setState(0x454c, 0x8915, 0x4460, 0x3dd8, 0x53a8, 0xa29f, 0x1, 0x1);
        gbc.writeMem(0x454c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8915, gbc.sp());
        EXPECT(0x454e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0058
        gbc.setState(0x6a13, 0xb002, 0x5d10, 0x6e18, 0xac90, 0x7487, 0x1, 0x1);
        gbc.writeMem(0x6a13, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb002, gbc.sp());
        EXPECT(0x6a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0059
        gbc.setState(0x479c, 0x34fd, 0x55c0, 0x5a77, 0xb3ee, 0xb16d, 0x1, 0x0);
        gbc.writeMem(0x479c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x34fd, gbc.sp());
        EXPECT(0x479e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 005A
        gbc.setState(0x7915, 0xacc6, 0x2d40, 0x76db, 0x150d, 0x73af, 0x0, 0x0);
        gbc.writeMem(0x7915, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xacc6, gbc.sp());
        EXPECT(0x7917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 005B
        gbc.setState(0x46ea, 0xabc2, 0x53d0, 0x6f47, 0xef28, 0x6ecd, 0x0, 0x1);
        gbc.writeMem(0x46ea, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xabc2, gbc.sp());
        EXPECT(0x46ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 005C
        gbc.setState(0x571e, 0xb5b4, 0xf70, 0xc6bf, 0xfe39, 0x4a5b, 0x1, 0x0);
        gbc.writeMem(0x571e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb5b4, gbc.sp());
        EXPECT(0x5720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 005D
        gbc.setState(0xf84, 0x4532, 0x6320, 0xcb8a, 0x9b3e, 0xdaa0, 0x1, 0x1);
        gbc.writeMem(0xf84, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4532, gbc.sp());
        EXPECT(0xf86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 005E
        gbc.setState(0x3824, 0x7f91, 0x44a0, 0x2bd6, 0x197c, 0x35ac, 0x0, 0x1);
        gbc.writeMem(0x3824, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7f91, gbc.sp());
        EXPECT(0x3826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 005F
        gbc.setState(0x640b, 0x12c1, 0xbbb0, 0xa32c, 0xdc2e, 0xc421, 0x1, 0x1);
        gbc.writeMem(0x640b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x12c1, gbc.sp());
        EXPECT(0x640d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0060
        gbc.setState(0x5cc5, 0xcd9c, 0x1bb0, 0xaad0, 0x36ad, 0x4ac4, 0x1, 0x0);
        gbc.writeMem(0x5cc5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcd9c, gbc.sp());
        EXPECT(0x5cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0061
        gbc.setState(0x36e2, 0x7a73, 0x16c0, 0x3682, 0x5bb8, 0x6ea2, 0x1, 0x0);
        gbc.writeMem(0x36e2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7a73, gbc.sp());
        EXPECT(0x36e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0063
        gbc.setState(0x46b9, 0x36, 0x5290, 0xa3f8, 0x6af0, 0x6e86, 0x1, 0x0);
        gbc.writeMem(0x46b9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x36, gbc.sp());
        EXPECT(0x46bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0064
        gbc.setState(0x88f2, 0x3e97, 0xc970, 0x287c, 0x3f0d, 0x463d, 0x0, 0x0);
        gbc.writeMem(0x88f2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3e97, gbc.sp());
        EXPECT(0x88f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f2));
        EXPECT(0xb5, gbc.readMem(0x88f3));
        // CB B5 0065
        gbc.setState(0x8862, 0xa556, 0xbac0, 0x2310, 0x3500, 0xaa03, 0x0, 0x1);
        gbc.writeMem(0x8862, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa556, gbc.sp());
        EXPECT(0x8864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8862));
        EXPECT(0xb5, gbc.readMem(0x8863));
        // CB B5 0066
        gbc.setState(0x1b4b, 0x2b5d, 0xeda0, 0x5870, 0x2f28, 0x24ef, 0x0, 0x1);
        gbc.writeMem(0x1b4b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2b5d, gbc.sp());
        EXPECT(0x1b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0067
        gbc.setState(0xd898, 0x5117, 0x61e0, 0x5178, 0xe4d7, 0x4917, 0x0, 0x1);
        gbc.writeMem(0xd898, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5117, gbc.sp());
        EXPECT(0xd89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd898));
        EXPECT(0xb5, gbc.readMem(0xd899));
        // CB B5 0068
        gbc.setState(0xe012, 0x13d, 0xa3e0, 0xb7e1, 0xa84a, 0x4577, 0x1, 0x0);
        gbc.writeMem(0xe012, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x13d, gbc.sp());
        EXPECT(0xe014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe012));
        EXPECT(0xb5, gbc.readMem(0xe013));
        // CB B5 0069
        gbc.setState(0x9a68, 0xb601, 0x3e10, 0x227e, 0xb10, 0xf4dc, 0x1, 0x1);
        gbc.writeMem(0x9a68, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb601, gbc.sp());
        EXPECT(0x9a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a68));
        EXPECT(0xb5, gbc.readMem(0x9a69));
        // CB B5 006A
        gbc.setState(0xcebb, 0x8bc6, 0x23a0, 0x82ef, 0x94e1, 0x50ec, 0x0, 0x0);
        gbc.writeMem(0xcebb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8bc6, gbc.sp());
        EXPECT(0xcebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcebb));
        EXPECT(0xb5, gbc.readMem(0xcebc));
        // CB B5 006B
        gbc.setState(0x2a97, 0xdc28, 0xcef0, 0xccdd, 0x57cf, 0xa300, 0x1, 0x1);
        gbc.writeMem(0x2a97, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdc28, gbc.sp());
        EXPECT(0x2a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 006C
        gbc.setState(0xc85e, 0xcdbd, 0xf440, 0x90aa, 0x7206, 0x357a, 0x0, 0x1);
        gbc.writeMem(0xc85e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcdbd, gbc.sp());
        EXPECT(0xc860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc85e));
        EXPECT(0xb5, gbc.readMem(0xc85f));
        // CB B5 006D
        gbc.setState(0x750e, 0xd125, 0x320, 0x66e0, 0xae44, 0x4fbd, 0x0, 0x1);
        gbc.writeMem(0x750e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd125, gbc.sp());
        EXPECT(0x7510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 006E
        gbc.setState(0xa344, 0xe964, 0xba50, 0xf081, 0x2807, 0xb32b, 0x0, 0x1);
        gbc.writeMem(0xa344, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe964, gbc.sp());
        EXPECT(0xa346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa344));
        EXPECT(0xb5, gbc.readMem(0xa345));
        // CB B5 006F
        gbc.setState(0x9f13, 0xfe18, 0xc180, 0x8bae, 0xd3a2, 0xccdf, 0x1, 0x0);
        gbc.writeMem(0x9f13, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfe18, gbc.sp());
        EXPECT(0x9f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f13));
        EXPECT(0xb5, gbc.readMem(0x9f14));
        // CB B5 0070
        gbc.setState(0x5b55, 0x53dd, 0x58a0, 0x1001, 0x26c0, 0x8623, 0x0, 0x1);
        gbc.writeMem(0x5b55, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x53dd, gbc.sp());
        EXPECT(0x5b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0071
        gbc.setState(0x16ea, 0x31c2, 0x2000, 0x5112, 0xbab5, 0xa2ab, 0x1, 0x0);
        gbc.writeMem(0x16ea, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x31c2, gbc.sp());
        EXPECT(0x16ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0072
        gbc.setState(0x2d5e, 0xb971, 0x14d0, 0x3044, 0x5c66, 0x1713, 0x0, 0x0);
        gbc.writeMem(0x2d5e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb971, gbc.sp());
        EXPECT(0x2d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0073
        gbc.setState(0xbd1f, 0xe670, 0x6ef0, 0x5b4d, 0x9e5c, 0x6365, 0x0, 0x1);
        gbc.writeMem(0xbd1f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe670, gbc.sp());
        EXPECT(0xbd21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd1f));
        EXPECT(0xb5, gbc.readMem(0xbd20));
        // CB B5 0074
        gbc.setState(0x5d96, 0x52fb, 0xa4f0, 0xbc97, 0xf737, 0x9d71, 0x1, 0x0);
        gbc.writeMem(0x5d96, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x52fb, gbc.sp());
        EXPECT(0x5d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0075
        gbc.setState(0x6b86, 0x5ddd, 0xbce0, 0x949, 0xa04f, 0x81a8, 0x0, 0x0);
        gbc.writeMem(0x6b86, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5ddd, gbc.sp());
        EXPECT(0x6b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0076
        gbc.setState(0x450c, 0xeab1, 0x2210, 0x78c2, 0x7b0d, 0xa591, 0x1, 0x0);
        gbc.writeMem(0x450c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xeab1, gbc.sp());
        EXPECT(0x450e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0077
        gbc.setState(0x22d3, 0x997b, 0x41e0, 0xf299, 0x1bd, 0xe94f, 0x1, 0x0);
        gbc.writeMem(0x22d3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x997b, gbc.sp());
        EXPECT(0x22d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0078
        gbc.setState(0x8aee, 0xe67a, 0xd3f0, 0x38d2, 0x1dfb, 0xa680, 0x1, 0x0);
        gbc.writeMem(0x8aee, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe67a, gbc.sp());
        EXPECT(0x8af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aee));
        EXPECT(0xb5, gbc.readMem(0x8aef));
        // CB B5 0079
        gbc.setState(0x26ad, 0x6175, 0x2ea0, 0xa9ff, 0x5d90, 0x36b2, 0x1, 0x0);
        gbc.writeMem(0x26ad, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6175, gbc.sp());
        EXPECT(0x26af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 007A
        gbc.setState(0xdda6, 0xdd64, 0xf50, 0xe2d7, 0x3138, 0x9aa7, 0x0, 0x0);
        gbc.writeMem(0xdda6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdd64, gbc.sp());
        EXPECT(0xdda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda6));
        EXPECT(0xb5, gbc.readMem(0xdda7));
        // CB B5 007B
        gbc.setState(0x3dd7, 0xdde0, 0xfa90, 0xb8cc, 0xf619, 0x6390, 0x0, 0x1);
        gbc.writeMem(0x3dd7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdde0, gbc.sp());
        EXPECT(0x3dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 007C
        gbc.setState(0xed2f, 0xbf71, 0x130, 0xee62, 0x6b3e, 0xb57e, 0x1, 0x1);
        gbc.writeMem(0xed2f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbf71, gbc.sp());
        EXPECT(0xed31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2f));
        EXPECT(0xb5, gbc.readMem(0xed30));
        // CB B5 007D
        gbc.setState(0xa7ed, 0xb22e, 0x5cf0, 0xb30d, 0x2142, 0xc8b4, 0x0, 0x0);
        gbc.writeMem(0xa7ed, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb22e, gbc.sp());
        EXPECT(0xa7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ed));
        EXPECT(0xb5, gbc.readMem(0xa7ee));
        // CB B5 007E
        gbc.setState(0x8ffd, 0x1329, 0x62d0, 0xe12c, 0x74c, 0xb0a8, 0x0, 0x1);
        gbc.writeMem(0x8ffd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1329, gbc.sp());
        EXPECT(0x8fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ffd));
        EXPECT(0xb5, gbc.readMem(0x8ffe));
        // CB B5 007F
        gbc.setState(0x80f7, 0x6cb4, 0x9550, 0x7126, 0x62ab, 0x3c6f, 0x0, 0x0);
        gbc.writeMem(0x80f7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6cb4, gbc.sp());
        EXPECT(0x80f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f7));
        EXPECT(0xb5, gbc.readMem(0x80f8));
        // CB B5 0080
        gbc.setState(0x5ce1, 0x4634, 0x82e0, 0xa73, 0xaa20, 0xd91, 0x1, 0x0);
        gbc.writeMem(0x5ce1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4634, gbc.sp());
        EXPECT(0x5ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0081
        gbc.setState(0x79e6, 0x11ac, 0xcc20, 0xd76c, 0xaa49, 0xcad9, 0x1, 0x1);
        gbc.writeMem(0x79e6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x11ac, gbc.sp());
        EXPECT(0x79e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0082
        gbc.setState(0x65d5, 0x54c9, 0x83f0, 0x88ca, 0xc3c2, 0x55dc, 0x0, 0x1);
        gbc.writeMem(0x65d5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x54c9, gbc.sp());
        EXPECT(0x65d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0083
        gbc.setState(0x5e44, 0xc883, 0xbd0, 0x34c6, 0x8257, 0x975, 0x1, 0x0);
        gbc.writeMem(0x5e44, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc883, gbc.sp());
        EXPECT(0x5e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0084
        gbc.setState(0xae4f, 0xc2a6, 0x7760, 0x432d, 0x670e, 0x8681, 0x0, 0x1);
        gbc.writeMem(0xae4f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc2a6, gbc.sp());
        EXPECT(0xae51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae4f));
        EXPECT(0xb5, gbc.readMem(0xae50));
        // CB B5 0085
        gbc.setState(0xa2f5, 0x8387, 0x1720, 0x23a2, 0x7a33, 0x6672, 0x1, 0x0);
        gbc.writeMem(0xa2f5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8387, gbc.sp());
        EXPECT(0xa2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f5));
        EXPECT(0xb5, gbc.readMem(0xa2f6));
        // CB B5 0086
        gbc.setState(0x953b, 0x5cf1, 0x45e0, 0x5123, 0xf718, 0x2543, 0x1, 0x0);
        gbc.writeMem(0x953b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5cf1, gbc.sp());
        EXPECT(0x953d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x953b));
        EXPECT(0xb5, gbc.readMem(0x953c));
        // CB B5 0087
        gbc.setState(0x8be4, 0x6252, 0x9ac0, 0xfa29, 0xf0fe, 0x1cc4, 0x1, 0x0);
        gbc.writeMem(0x8be4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6252, gbc.sp());
        EXPECT(0x8be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be4));
        EXPECT(0xb5, gbc.readMem(0x8be5));
        // CB B5 0088
        gbc.setState(0x6ebb, 0x4233, 0x82f0, 0xac5e, 0x4413, 0x40eb, 0x0, 0x1);
        gbc.writeMem(0x6ebb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4233, gbc.sp());
        EXPECT(0x6ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0089
        gbc.setState(0xe54f, 0xfea8, 0x58d0, 0xcfdf, 0x95a0, 0x2261, 0x0, 0x1);
        gbc.writeMem(0xe54f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfea8, gbc.sp());
        EXPECT(0xe551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe54f));
        EXPECT(0xb5, gbc.readMem(0xe550));
        // CB B5 008A
        gbc.setState(0x81b6, 0x5f0e, 0x75e0, 0x16c1, 0x946b, 0x9c12, 0x0, 0x1);
        gbc.writeMem(0x81b6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5f0e, gbc.sp());
        EXPECT(0x81b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b6));
        EXPECT(0xb5, gbc.readMem(0x81b7));
        // CB B5 008B
        gbc.setState(0xcb88, 0x6229, 0x8590, 0x574f, 0x784c, 0x3154, 0x0, 0x0);
        gbc.writeMem(0xcb88, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6229, gbc.sp());
        EXPECT(0xcb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb88));
        EXPECT(0xb5, gbc.readMem(0xcb89));
        // CB B5 008C
        gbc.setState(0x87e5, 0x9522, 0x72d0, 0x24fc, 0x1738, 0xfc63, 0x0, 0x0);
        gbc.writeMem(0x87e5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9522, gbc.sp());
        EXPECT(0x87e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e5));
        EXPECT(0xb5, gbc.readMem(0x87e6));
        // CB B5 008D
        gbc.setState(0x81ac, 0xe7bf, 0x86e0, 0xcaf7, 0xdf31, 0x36ae, 0x0, 0x0);
        gbc.writeMem(0x81ac, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe7bf, gbc.sp());
        EXPECT(0x81ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ac));
        EXPECT(0xb5, gbc.readMem(0x81ad));
        // CB B5 008E
        gbc.setState(0xb380, 0xc541, 0x6870, 0x4599, 0x19e8, 0x359f, 0x1, 0x1);
        gbc.writeMem(0xb380, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc541, gbc.sp());
        EXPECT(0xb382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb380));
        EXPECT(0xb5, gbc.readMem(0xb381));
        // CB B5 008F
        gbc.setState(0xebf, 0x906f, 0x470, 0x5c23, 0xaf64, 0xb7a2, 0x0, 0x0);
        gbc.writeMem(0xebf, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x906f, gbc.sp());
        EXPECT(0xec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0090
        gbc.setState(0x6f27, 0xda9e, 0xcab0, 0x673c, 0xd77b, 0xa02c, 0x1, 0x1);
        gbc.writeMem(0x6f27, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xda9e, gbc.sp());
        EXPECT(0x6f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0091
        gbc.setState(0xa964, 0x6ea5, 0x55c0, 0xa899, 0xc791, 0xd24d, 0x0, 0x1);
        gbc.writeMem(0xa964, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6ea5, gbc.sp());
        EXPECT(0xa966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa964));
        EXPECT(0xb5, gbc.readMem(0xa965));
        // CB B5 0092
        gbc.setState(0x77c2, 0x4e81, 0x8780, 0xa311, 0x4b39, 0x2507, 0x0, 0x1);
        gbc.writeMem(0x77c2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4e81, gbc.sp());
        EXPECT(0x77c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0093
        gbc.setState(0xde0, 0xf588, 0x3460, 0x83fe, 0x706, 0x6b66, 0x1, 0x1);
        gbc.writeMem(0xde0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf588, gbc.sp());
        EXPECT(0xde2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0094
        gbc.setState(0xa5d6, 0xaebf, 0x8120, 0x2334, 0xed83, 0xa6b9, 0x1, 0x0);
        gbc.writeMem(0xa5d6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xaebf, gbc.sp());
        EXPECT(0xa5d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d6));
        EXPECT(0xb5, gbc.readMem(0xa5d7));
        // CB B5 0095
        gbc.setState(0x9490, 0x1276, 0xb6e0, 0x3844, 0x1abd, 0xe12a, 0x0, 0x1);
        gbc.writeMem(0x9490, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1276, gbc.sp());
        EXPECT(0x9492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9490));
        EXPECT(0xb5, gbc.readMem(0x9491));
        // CB B5 0096
        gbc.setState(0x817, 0x9c9f, 0x46e0, 0x13cb, 0x2bb8, 0xca44, 0x0, 0x1);
        gbc.writeMem(0x817, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9c9f, gbc.sp());
        EXPECT(0x819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0097
        gbc.setState(0xc686, 0xc292, 0xdb00, 0xdbf8, 0xcc82, 0xf793, 0x1, 0x0);
        gbc.writeMem(0xc686, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc292, gbc.sp());
        EXPECT(0xc688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc686));
        EXPECT(0xb5, gbc.readMem(0xc687));
        // CB B5 0098
        gbc.setState(0xa3c3, 0x3f98, 0x3940, 0x3c6f, 0xbe6a, 0x513f, 0x0, 0x0);
        gbc.writeMem(0xa3c3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3f98, gbc.sp());
        EXPECT(0xa3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c3));
        EXPECT(0xb5, gbc.readMem(0xa3c4));
        // CB B5 0099
        gbc.setState(0xb9e9, 0x5a06, 0x570, 0xd57d, 0x571f, 0x6f0, 0x1, 0x1);
        gbc.writeMem(0xb9e9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5a06, gbc.sp());
        EXPECT(0xb9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e9));
        EXPECT(0xb5, gbc.readMem(0xb9ea));
        // CB B5 009A
        gbc.setState(0x66bd, 0x618b, 0xb50, 0xa517, 0xd80a, 0xa29f, 0x0, 0x1);
        gbc.writeMem(0x66bd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x618b, gbc.sp());
        EXPECT(0x66bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 009B
        gbc.setState(0x973f, 0xb131, 0x4990, 0xb9cf, 0x777d, 0xb372, 0x0, 0x1);
        gbc.writeMem(0x973f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb131, gbc.sp());
        EXPECT(0x9741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973f));
        EXPECT(0xb5, gbc.readMem(0x9740));
        // CB B5 009C
        gbc.setState(0x732c, 0x11c6, 0x5af0, 0xb191, 0x3fa4, 0x4b9a, 0x0, 0x1);
        gbc.writeMem(0x732c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x11c6, gbc.sp());
        EXPECT(0x732e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 009D
        gbc.setState(0x3de7, 0x2aec, 0xf470, 0x45bb, 0xd5f4, 0x16d2, 0x0, 0x1);
        gbc.writeMem(0x3de7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2aec, gbc.sp());
        EXPECT(0x3de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 009E
        gbc.setState(0xeab9, 0x55a7, 0x84e0, 0xceab, 0xf1ea, 0xe788, 0x1, 0x1);
        gbc.writeMem(0xeab9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x55a7, gbc.sp());
        EXPECT(0xeabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab9));
        EXPECT(0xb5, gbc.readMem(0xeaba));
        // CB B5 009F
        gbc.setState(0xb3e9, 0x1ed4, 0xcd60, 0x9445, 0xe7ff, 0x36a3, 0x0, 0x0);
        gbc.writeMem(0xb3e9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1ed4, gbc.sp());
        EXPECT(0xb3eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e9));
        EXPECT(0xb5, gbc.readMem(0xb3ea));
        // CB B5 00A0
        gbc.setState(0x4450, 0x104f, 0x33a0, 0x5f8e, 0xbb72, 0xd71f, 0x1, 0x0);
        gbc.writeMem(0x4450, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x104f, gbc.sp());
        EXPECT(0x4452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00A1
        gbc.setState(0x12c2, 0xa509, 0xa010, 0x1130, 0x1878, 0x154, 0x0, 0x1);
        gbc.writeMem(0x12c2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa509, gbc.sp());
        EXPECT(0x12c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00A2
        gbc.setState(0xde21, 0xc72f, 0x3c0, 0x3221, 0x21e3, 0x353b, 0x0, 0x0);
        gbc.writeMem(0xde21, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc72f, gbc.sp());
        EXPECT(0xde23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde21));
        EXPECT(0xb5, gbc.readMem(0xde22));
        // CB B5 00A3
        gbc.setState(0x4e4c, 0x9fd7, 0x17b0, 0x1883, 0x263c, 0x3616, 0x0, 0x1);
        gbc.writeMem(0x4e4c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9fd7, gbc.sp());
        EXPECT(0x4e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00A4
        gbc.setState(0xadf, 0x41b5, 0xe260, 0xcacb, 0x244c, 0x20d0, 0x0, 0x0);
        gbc.writeMem(0xadf, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x41b5, gbc.sp());
        EXPECT(0xae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00A5
        gbc.setState(0x91c4, 0x9df5, 0x9970, 0x59ef, 0x8973, 0x244a, 0x1, 0x0);
        gbc.writeMem(0x91c4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9df5, gbc.sp());
        EXPECT(0x91c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c4));
        EXPECT(0xb5, gbc.readMem(0x91c5));
        // CB B5 00A6
        gbc.setState(0x504f, 0x80b7, 0x1670, 0xe2a, 0x1acf, 0x357b, 0x1, 0x1);
        gbc.writeMem(0x504f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x80b7, gbc.sp());
        EXPECT(0x5051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00A7
        gbc.setState(0xba94, 0x16b1, 0x2500, 0x9ff, 0x3cc2, 0x4d4f, 0x1, 0x0);
        gbc.writeMem(0xba94, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x16b1, gbc.sp());
        EXPECT(0xba96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba94));
        EXPECT(0xb5, gbc.readMem(0xba95));
        // CB B5 00A8
        gbc.setState(0x7b3c, 0x6d30, 0x7f10, 0xa2d1, 0x4fae, 0xf0ff, 0x1, 0x0);
        gbc.writeMem(0x7b3c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6d30, gbc.sp());
        EXPECT(0x7b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00A9
        gbc.setState(0x8a59, 0xca2e, 0xfe10, 0x5da6, 0x4efb, 0x3441, 0x0, 0x0);
        gbc.writeMem(0x8a59, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xca2e, gbc.sp());
        EXPECT(0x8a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a59));
        EXPECT(0xb5, gbc.readMem(0x8a5a));
        // CB B5 00AA
        gbc.setState(0x954b, 0x300f, 0xd900, 0xbe6, 0x3dc, 0x4780, 0x1, 0x0);
        gbc.writeMem(0x954b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x300f, gbc.sp());
        EXPECT(0x954d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x954b));
        EXPECT(0xb5, gbc.readMem(0x954c));
        // CB B5 00AB
        gbc.setState(0x3740, 0xfdec, 0xdf0, 0x4343, 0xde6, 0x6185, 0x1, 0x1);
        gbc.writeMem(0x3740, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfdec, gbc.sp());
        EXPECT(0x3742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00AC
        gbc.setState(0xb4e6, 0x2dab, 0xa70, 0x1a83, 0x7253, 0x5285, 0x1, 0x0);
        gbc.writeMem(0xb4e6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2dab, gbc.sp());
        EXPECT(0xb4e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e6));
        EXPECT(0xb5, gbc.readMem(0xb4e7));
        // CB B5 00AD
        gbc.setState(0x9339, 0xd715, 0x1e60, 0x9c71, 0x2a66, 0x1c65, 0x0, 0x1);
        gbc.writeMem(0x9339, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd715, gbc.sp());
        EXPECT(0x933b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9339));
        EXPECT(0xb5, gbc.readMem(0x933a));
        // CB B5 00AE
        gbc.setState(0x8d37, 0x48b3, 0xa650, 0x9369, 0xce53, 0xe115, 0x0, 0x0);
        gbc.writeMem(0x8d37, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x48b3, gbc.sp());
        EXPECT(0x8d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d37));
        EXPECT(0xb5, gbc.readMem(0x8d38));
        // CB B5 00AF
        gbc.setState(0xcbed, 0x2c26, 0xc790, 0xf582, 0xf6, 0x3b18, 0x1, 0x0);
        gbc.writeMem(0xcbed, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2c26, gbc.sp());
        EXPECT(0xcbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbed));
        EXPECT(0xb5, gbc.readMem(0xcbee));
        // CB B5 00B0
        gbc.setState(0x55fd, 0xef8f, 0xd600, 0x3d7f, 0x598f, 0xeeb5, 0x0, 0x1);
        gbc.writeMem(0x55fd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xef8f, gbc.sp());
        EXPECT(0x55ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00B1
        gbc.setState(0xc9d2, 0xf284, 0x4d90, 0xe416, 0x6f99, 0x3e98, 0x1, 0x0);
        gbc.writeMem(0xc9d2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf284, gbc.sp());
        EXPECT(0xc9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d2));
        EXPECT(0xb5, gbc.readMem(0xc9d3));
        // CB B5 00B2
        gbc.setState(0xdf2d, 0x2bc3, 0xe10, 0x9d67, 0xc283, 0xfa2e, 0x0, 0x0);
        gbc.writeMem(0xdf2d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2bc3, gbc.sp());
        EXPECT(0xdf2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2d));
        EXPECT(0xb5, gbc.readMem(0xdf2e));
        // CB B5 00B4
        gbc.setState(0x7fe1, 0xc956, 0xfeb0, 0x912e, 0x4efe, 0x331c, 0x0, 0x1);
        gbc.writeMem(0x7fe1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc956, gbc.sp());
        EXPECT(0x7fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00B5
        gbc.setState(0x9ad3, 0x3d5f, 0x9770, 0xe6f5, 0x6a07, 0x231, 0x1, 0x0);
        gbc.writeMem(0x9ad3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3d5f, gbc.sp());
        EXPECT(0x9ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad3));
        EXPECT(0xb5, gbc.readMem(0x9ad4));
        // CB B5 00B6
        gbc.setState(0xcee3, 0xff7f, 0x1b0, 0x3754, 0xc576, 0xa66b, 0x0, 0x1);
        gbc.writeMem(0xcee3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xff7f, gbc.sp());
        EXPECT(0xcee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee3));
        EXPECT(0xb5, gbc.readMem(0xcee4));
        // CB B5 00B7
        gbc.setState(0xd58a, 0xbab7, 0xa560, 0xc3db, 0x4b98, 0x6c1c, 0x0, 0x0);
        gbc.writeMem(0xd58a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xbab7, gbc.sp());
        EXPECT(0xd58c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58a));
        EXPECT(0xb5, gbc.readMem(0xd58b));
        // CB B5 00B8
        gbc.setState(0x9bf0, 0x43e8, 0x3da0, 0x35e1, 0x513b, 0x1889, 0x0, 0x1);
        gbc.writeMem(0x9bf0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x43e8, gbc.sp());
        EXPECT(0x9bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf0));
        EXPECT(0xb5, gbc.readMem(0x9bf1));
        // CB B5 00B9
        gbc.setState(0x74a3, 0x5869, 0x5c90, 0xb4bd, 0x1c7c, 0xa58b, 0x1, 0x0);
        gbc.writeMem(0x74a3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5869, gbc.sp());
        EXPECT(0x74a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00BA
        gbc.setState(0x3a02, 0x629d, 0x8100, 0x5beb, 0x6ce, 0x952, 0x0, 0x1);
        gbc.writeMem(0x3a02, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x629d, gbc.sp());
        EXPECT(0x3a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00BB
        gbc.setState(0xa762, 0x9578, 0xcb60, 0x45ef, 0xc9b5, 0x6df3, 0x1, 0x1);
        gbc.writeMem(0xa762, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9578, gbc.sp());
        EXPECT(0xa764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa762));
        EXPECT(0xb5, gbc.readMem(0xa763));
        // CB B5 00BC
        gbc.setState(0x2f2c, 0x1e92, 0x7850, 0x783a, 0x5114, 0x2648, 0x0, 0x1);
        gbc.writeMem(0x2f2c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1e92, gbc.sp());
        EXPECT(0x2f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00BD
        gbc.setState(0x725e, 0xf78e, 0xc960, 0xb9cf, 0xae92, 0x4453, 0x1, 0x0);
        gbc.writeMem(0x725e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf78e, gbc.sp());
        EXPECT(0x7260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00BE
        gbc.setState(0xc2e7, 0xa21b, 0x9ae0, 0xe610, 0xf846, 0x7b7c, 0x1, 0x1);
        gbc.writeMem(0xc2e7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa21b, gbc.sp());
        EXPECT(0xc2e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e7));
        EXPECT(0xb5, gbc.readMem(0xc2e8));
        // CB B5 00BF
        gbc.setState(0x6357, 0x814e, 0xccd0, 0x6468, 0x5da0, 0x1f06, 0x1, 0x1);
        gbc.writeMem(0x6357, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x814e, gbc.sp());
        EXPECT(0x6359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00C0
        gbc.setState(0xd4d7, 0xc1a8, 0x1840, 0x5a52, 0x4994, 0xb706, 0x1, 0x0);
        gbc.writeMem(0xd4d7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc1a8, gbc.sp());
        EXPECT(0xd4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d7));
        EXPECT(0xb5, gbc.readMem(0xd4d8));
        // CB B5 00C1
        gbc.setState(0x297c, 0xae0d, 0x2800, 0x7e37, 0x4572, 0x1bd6, 0x0, 0x1);
        gbc.writeMem(0x297c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xae0d, gbc.sp());
        EXPECT(0x297e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00C2
        gbc.setState(0x7db6, 0x163a, 0x65c0, 0xd1a2, 0xa530, 0x52cb, 0x1, 0x0);
        gbc.writeMem(0x7db6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x163a, gbc.sp());
        EXPECT(0x7db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00C3
        gbc.setState(0x2d7e, 0xe7a0, 0x9190, 0x9891, 0x9eb9, 0xaa5c, 0x1, 0x0);
        gbc.writeMem(0x2d7e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe7a0, gbc.sp());
        EXPECT(0x2d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00C4
        gbc.setState(0x3ea8, 0x9183, 0x5900, 0x5d01, 0xa412, 0x3601, 0x0, 0x1);
        gbc.writeMem(0x3ea8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9183, gbc.sp());
        EXPECT(0x3eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00C5
        gbc.setState(0xe10, 0xa5d2, 0xf210, 0xf416, 0xcf75, 0xc46e, 0x0, 0x0);
        gbc.writeMem(0xe10, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa5d2, gbc.sp());
        EXPECT(0xe12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00C6
        gbc.setState(0xba73, 0x3ac8, 0xaf20, 0xd6d9, 0xc703, 0xe831, 0x1, 0x1);
        gbc.writeMem(0xba73, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3ac8, gbc.sp());
        EXPECT(0xba75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba73));
        EXPECT(0xb5, gbc.readMem(0xba74));
        // CB B5 00C7
        gbc.setState(0x7df7, 0x8473, 0x8ef0, 0x244e, 0xd257, 0x28f, 0x0, 0x0);
        gbc.writeMem(0x7df7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8473, gbc.sp());
        EXPECT(0x7df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00C8
        gbc.setState(0x8220, 0xb41f, 0x91b0, 0x951e, 0xf96a, 0x6f2e, 0x1, 0x1);
        gbc.writeMem(0x8220, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb41f, gbc.sp());
        EXPECT(0x8222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8220));
        EXPECT(0xb5, gbc.readMem(0x8221));
        // CB B5 00C9
        gbc.setState(0x90d9, 0xc1b7, 0xade0, 0x39dd, 0xf3ab, 0x78ab, 0x0, 0x1);
        gbc.writeMem(0x90d9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc1b7, gbc.sp());
        EXPECT(0x90db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d9));
        EXPECT(0xb5, gbc.readMem(0x90da));
        // CB B5 00CA
        gbc.setState(0xc721, 0x8ed8, 0x86f0, 0x5770, 0x610e, 0x7ed0, 0x0, 0x0);
        gbc.writeMem(0xc721, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8ed8, gbc.sp());
        EXPECT(0xc723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc721));
        EXPECT(0xb5, gbc.readMem(0xc722));
        // CB B5 00CB
        gbc.setState(0xc98b, 0x3798, 0xef0, 0xe979, 0x3262, 0x2496, 0x0, 0x0);
        gbc.writeMem(0xc98b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3798, gbc.sp());
        EXPECT(0xc98d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98b));
        EXPECT(0xb5, gbc.readMem(0xc98c));
        // CB B5 00CC
        gbc.setState(0x8a4c, 0xc0f4, 0xd6b0, 0x849, 0x6132, 0x8b35, 0x0, 0x0);
        gbc.writeMem(0x8a4c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc0f4, gbc.sp());
        EXPECT(0x8a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4c));
        EXPECT(0xb5, gbc.readMem(0x8a4d));
        // CB B5 00CD
        gbc.setState(0xda23, 0x1a79, 0xf140, 0xd2be, 0xe820, 0xa236, 0x0, 0x1);
        gbc.writeMem(0xda23, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1a79, gbc.sp());
        EXPECT(0xda25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda23));
        EXPECT(0xb5, gbc.readMem(0xda24));
        // CB B5 00CE
        gbc.setState(0x7623, 0x729, 0x72c0, 0x63be, 0x1ce8, 0x195a, 0x0, 0x1);
        gbc.writeMem(0x7623, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x729, gbc.sp());
        EXPECT(0x7625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00CF
        gbc.setState(0x7424, 0x7e94, 0x5630, 0x8353, 0x9091, 0x6b3d, 0x0, 0x0);
        gbc.writeMem(0x7424, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7e94, gbc.sp());
        EXPECT(0x7426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00D1
        gbc.setState(0xf87, 0xcbec, 0x6c80, 0x62a4, 0x5249, 0x882b, 0x0, 0x1);
        gbc.writeMem(0xf87, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcbec, gbc.sp());
        EXPECT(0xf89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00D2
        gbc.setState(0xdbc3, 0x9333, 0xa480, 0xcdeb, 0x63e8, 0x72ba, 0x1, 0x1);
        gbc.writeMem(0xdbc3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9333, gbc.sp());
        EXPECT(0xdbc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc3));
        EXPECT(0xb5, gbc.readMem(0xdbc4));
        // CB B5 00D3
        gbc.setState(0x9d6e, 0x7113, 0x26a0, 0x2d78, 0x7200, 0x932e, 0x0, 0x1);
        gbc.writeMem(0x9d6e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7113, gbc.sp());
        EXPECT(0x9d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6e));
        EXPECT(0xb5, gbc.readMem(0x9d6f));
        // CB B5 00D4
        gbc.setState(0x1436, 0x55fd, 0x6660, 0x8042, 0x3826, 0xda19, 0x0, 0x1);
        gbc.writeMem(0x1436, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x55fd, gbc.sp());
        EXPECT(0x1438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00D5
        gbc.setState(0x7c74, 0x1401, 0xb8a0, 0x272c, 0x546b, 0xce0c, 0x0, 0x0);
        gbc.writeMem(0x7c74, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1401, gbc.sp());
        EXPECT(0x7c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00D6
        gbc.setState(0xa6aa, 0xa8e2, 0xcc60, 0x10be, 0x8f, 0x52fa, 0x0, 0x1);
        gbc.writeMem(0xa6aa, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa8e2, gbc.sp());
        EXPECT(0xa6ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6aa));
        EXPECT(0xb5, gbc.readMem(0xa6ab));
        // CB B5 00D7
        gbc.setState(0x7e14, 0xd26f, 0x7210, 0xa10f, 0xd315, 0x3391, 0x1, 0x1);
        gbc.writeMem(0x7e14, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd26f, gbc.sp());
        EXPECT(0x7e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00D8
        gbc.setState(0x2899, 0x615a, 0xb010, 0x1356, 0xafd7, 0xe0b2, 0x0, 0x0);
        gbc.writeMem(0x2899, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x615a, gbc.sp());
        EXPECT(0x289b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00D9
        gbc.setState(0x1f56, 0x4c90, 0x6d30, 0x5697, 0xec07, 0x846f, 0x1, 0x1);
        gbc.writeMem(0x1f56, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4c90, gbc.sp());
        EXPECT(0x1f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00DA
        gbc.setState(0xd7d1, 0x416d, 0xca20, 0xb1e2, 0x9801, 0xeb01, 0x1, 0x1);
        gbc.writeMem(0xd7d1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x416d, gbc.sp());
        EXPECT(0xd7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d1));
        EXPECT(0xb5, gbc.readMem(0xd7d2));
        // CB B5 00DB
        gbc.setState(0x84bf, 0xb1e6, 0xc320, 0xd551, 0x1a45, 0x92c4, 0x0, 0x0);
        gbc.writeMem(0x84bf, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb1e6, gbc.sp());
        EXPECT(0x84c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84bf));
        EXPECT(0xb5, gbc.readMem(0x84c0));
        // CB B5 00DC
        gbc.setState(0x1ebd, 0x1d8f, 0xc960, 0xdab7, 0xf19c, 0x56a4, 0x0, 0x0);
        gbc.writeMem(0x1ebd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1d8f, gbc.sp());
        EXPECT(0x1ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00DD
        gbc.setState(0xa2bf, 0xf68c, 0xa280, 0x56d7, 0xa826, 0xafcd, 0x1, 0x1);
        gbc.writeMem(0xa2bf, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf68c, gbc.sp());
        EXPECT(0xa2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2bf));
        EXPECT(0xb5, gbc.readMem(0xa2c0));
        // CB B5 00DE
        gbc.setState(0xc6ef, 0x7263, 0xe700, 0x5022, 0x6f92, 0xbcf7, 0x1, 0x0);
        gbc.writeMem(0xc6ef, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7263, gbc.sp());
        EXPECT(0xc6f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ef));
        EXPECT(0xb5, gbc.readMem(0xc6f0));
        // CB B5 00DF
        gbc.setState(0xd429, 0x32f5, 0x4a90, 0x2589, 0xea35, 0x34e7, 0x0, 0x1);
        gbc.writeMem(0xd429, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x32f5, gbc.sp());
        EXPECT(0xd42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd429));
        EXPECT(0xb5, gbc.readMem(0xd42a));
        // CB B5 00E0
        gbc.setState(0xa46f, 0x6afd, 0x2860, 0x9d0d, 0x4eaf, 0x543e, 0x1, 0x0);
        gbc.writeMem(0xa46f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6afd, gbc.sp());
        EXPECT(0xa471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46f));
        EXPECT(0xb5, gbc.readMem(0xa470));
        // CB B5 00E1
        gbc.setState(0x35bc, 0xa61d, 0xaa30, 0xa38e, 0x7417, 0xc83f, 0x0, 0x1);
        gbc.writeMem(0x35bc, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa61d, gbc.sp());
        EXPECT(0x35be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00E2
        gbc.setState(0x8064, 0x8411, 0x1410, 0x74dc, 0x1d17, 0x5604, 0x0, 0x1);
        gbc.writeMem(0x8064, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8411, gbc.sp());
        EXPECT(0x8066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8064));
        EXPECT(0xb5, gbc.readMem(0x8065));
        // CB B5 00E3
        gbc.setState(0x9b9a, 0xe8fe, 0x6e60, 0x6ffa, 0x1cf4, 0x822a, 0x1, 0x0);
        gbc.writeMem(0x9b9a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe8fe, gbc.sp());
        EXPECT(0x9b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b9a));
        EXPECT(0xb5, gbc.readMem(0x9b9b));
        // CB B5 00E4
        gbc.setState(0x7e16, 0x8d5a, 0x4800, 0x8f89, 0x1c77, 0xf46f, 0x1, 0x1);
        gbc.writeMem(0x7e16, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8d5a, gbc.sp());
        EXPECT(0x7e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00E5
        gbc.setState(0x9ee7, 0xb0b5, 0xa670, 0x894d, 0x6895, 0x97c5, 0x1, 0x0);
        gbc.writeMem(0x9ee7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb0b5, gbc.sp());
        EXPECT(0x9ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee7));
        EXPECT(0xb5, gbc.readMem(0x9ee8));
        // CB B5 00E6
        gbc.setState(0x2915, 0x5d06, 0xe800, 0xceec, 0xa515, 0x3b75, 0x0, 0x0);
        gbc.writeMem(0x2915, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5d06, gbc.sp());
        EXPECT(0x2917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00E7
        gbc.setState(0xd4e4, 0xc6f0, 0x3d40, 0xa382, 0x46d0, 0xcfc6, 0x1, 0x1);
        gbc.writeMem(0xd4e4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc6f0, gbc.sp());
        EXPECT(0xd4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e4));
        EXPECT(0xb5, gbc.readMem(0xd4e5));
        // CB B5 00E8
        gbc.setState(0x215c, 0xb68d, 0x9db0, 0x62fe, 0x4add, 0x30bf, 0x0, 0x1);
        gbc.writeMem(0x215c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb68d, gbc.sp());
        EXPECT(0x215e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00E9
        gbc.setState(0x34b, 0x47b2, 0xc640, 0xcf2c, 0xc221, 0xaca1, 0x1, 0x0);
        gbc.writeMem(0x34b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x47b2, gbc.sp());
        EXPECT(0x34d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00EA
        gbc.setState(0x48ca, 0x8b82, 0xf850, 0x3255, 0xaf82, 0x8a01, 0x1, 0x1);
        gbc.writeMem(0x48ca, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8b82, gbc.sp());
        EXPECT(0x48cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00EB
        gbc.setState(0x42d4, 0x76fd, 0x3760, 0x7e2f, 0xeadd, 0x7d1b, 0x1, 0x0);
        gbc.writeMem(0x42d4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x76fd, gbc.sp());
        EXPECT(0x42d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00EC
        gbc.setState(0xa8a9, 0x1eca, 0x70e0, 0x4094, 0xabae, 0xde94, 0x1, 0x0);
        gbc.writeMem(0xa8a9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1eca, gbc.sp());
        EXPECT(0xa8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a9));
        EXPECT(0xb5, gbc.readMem(0xa8aa));
        // CB B5 00ED
        gbc.setState(0xa6a, 0x3d79, 0x2f00, 0x431c, 0x4241, 0x5da0, 0x0, 0x1);
        gbc.writeMem(0xa6a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3d79, gbc.sp());
        EXPECT(0xa6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00EE
        gbc.setState(0x644e, 0x308b, 0xfa40, 0xa10c, 0x8997, 0xab55, 0x1, 0x1);
        gbc.writeMem(0x644e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x308b, gbc.sp());
        EXPECT(0x6450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00EF
        gbc.setState(0x3f25, 0x8155, 0x1af0, 0x5645, 0xc203, 0x9bc6, 0x1, 0x0);
        gbc.writeMem(0x3f25, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8155, gbc.sp());
        EXPECT(0x3f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00F0
        gbc.setState(0x668f, 0xea0c, 0x98d0, 0xa3ff, 0xd7be, 0x811a, 0x1, 0x0);
        gbc.writeMem(0x668f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xea0c, gbc.sp());
        EXPECT(0x6691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00F1
        gbc.setState(0x8b71, 0xb888, 0x5cf0, 0x4fab, 0x76a3, 0x4783, 0x0, 0x0);
        gbc.writeMem(0x8b71, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb888, gbc.sp());
        EXPECT(0x8b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b71));
        EXPECT(0xb5, gbc.readMem(0x8b72));
        // CB B5 00F2
        gbc.setState(0xa755, 0x1af2, 0xf880, 0xa84c, 0x4a18, 0xec4b, 0x1, 0x1);
        gbc.writeMem(0xa755, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1af2, gbc.sp());
        EXPECT(0xa757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa755));
        EXPECT(0xb5, gbc.readMem(0xa756));
        // CB B5 00F3
        gbc.setState(0x8ef9, 0x862, 0x9180, 0xf1ec, 0x37d8, 0x91db, 0x0, 0x1);
        gbc.writeMem(0x8ef9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x862, gbc.sp());
        EXPECT(0x8efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef9));
        EXPECT(0xb5, gbc.readMem(0x8efa));
        // CB B5 00F4
        gbc.setState(0x2b86, 0x48f7, 0x2460, 0x58ae, 0xeaa, 0x4126, 0x1, 0x1);
        gbc.writeMem(0x2b86, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x48f7, gbc.sp());
        EXPECT(0x2b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00F5
        gbc.setState(0xc80a, 0x2aca, 0xcb80, 0x4fe2, 0x4ccf, 0x3e90, 0x1, 0x1);
        gbc.writeMem(0xc80a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2aca, gbc.sp());
        EXPECT(0xc80c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80a));
        EXPECT(0xb5, gbc.readMem(0xc80b));
        // CB B5 00F6
        gbc.setState(0xa16a, 0xfa3d, 0x5910, 0x1dba, 0x267, 0x2a6c, 0x1, 0x0);
        gbc.writeMem(0xa16a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfa3d, gbc.sp());
        EXPECT(0xa16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16a));
        EXPECT(0xb5, gbc.readMem(0xa16b));
        // CB B5 00F7
        gbc.setState(0xbd18, 0x3c44, 0x7510, 0x4605, 0xad95, 0x7dbe, 0x1, 0x0);
        gbc.writeMem(0xbd18, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3c44, gbc.sp());
        EXPECT(0xbd1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd18));
        EXPECT(0xb5, gbc.readMem(0xbd19));
        // CB B5 00F8
        gbc.setState(0x3cdb, 0xf71e, 0x5670, 0x4078, 0x5cb7, 0x5678, 0x1, 0x1);
        gbc.writeMem(0x3cdb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf71e, gbc.sp());
        EXPECT(0x3cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00F9
        gbc.setState(0xbd63, 0x1018, 0x9580, 0x566, 0xfd4c, 0x6757, 0x0, 0x0);
        gbc.writeMem(0xbd63, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1018, gbc.sp());
        EXPECT(0xbd65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd63));
        EXPECT(0xb5, gbc.readMem(0xbd64));
        // CB B5 00FA
        gbc.setState(0x4a27, 0xa3e, 0x1650, 0x799c, 0x358b, 0xc047, 0x0, 0x1);
        gbc.writeMem(0x4a27, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa3e, gbc.sp());
        EXPECT(0x4a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00FB
        gbc.setState(0x6eb7, 0xa9ec, 0xd470, 0x74fc, 0x50f5, 0x724, 0x0, 0x0);
        gbc.writeMem(0x6eb7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa9ec, gbc.sp());
        EXPECT(0x6eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00FC
        gbc.setState(0x48f6, 0x2a5b, 0xdbb0, 0xec25, 0x503c, 0x9b7e, 0x1, 0x0);
        gbc.writeMem(0x48f6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2a5b, gbc.sp());
        EXPECT(0x48f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 00FD
        gbc.setState(0x5863, 0x2589, 0x2560, 0x5c89, 0x252f, 0x46ed, 0x1, 0x1);
        gbc.writeMem(0x5863, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2589, gbc.sp());
        EXPECT(0x5865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 00FE
        gbc.setState(0xee85, 0x76f7, 0xc0e0, 0xec15, 0xf79f, 0xe4c5, 0x1, 0x1);
        gbc.writeMem(0xee85, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x76f7, gbc.sp());
        EXPECT(0xee87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee85));
        EXPECT(0xb5, gbc.readMem(0xee86));
        // CB B5 00FF
        gbc.setState(0x69d1, 0x5922, 0x7e0, 0x4ba4, 0x1c20, 0xd7e7, 0x0, 0x1);
        gbc.writeMem(0x69d1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5922, gbc.sp());
        EXPECT(0x69d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0100
        gbc.setState(0xe9ed, 0xc4f0, 0xc4c0, 0x7283, 0x1be0, 0x6f30, 0x1, 0x0);
        gbc.writeMem(0xe9ed, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc4f0, gbc.sp());
        EXPECT(0xe9ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ed));
        EXPECT(0xb5, gbc.readMem(0xe9ee));
        // CB B5 0101
        gbc.setState(0xc5b7, 0x4adc, 0x4410, 0x54c2, 0x2487, 0x68c8, 0x0, 0x0);
        gbc.writeMem(0xc5b7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4adc, gbc.sp());
        EXPECT(0xc5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b7));
        EXPECT(0xb5, gbc.readMem(0xc5b8));
        // CB B5 0102
        gbc.setState(0xd94d, 0xcaee, 0x8380, 0xacb4, 0xb98f, 0x7cba, 0x1, 0x0);
        gbc.writeMem(0xd94d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcaee, gbc.sp());
        EXPECT(0xd94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94d));
        EXPECT(0xb5, gbc.readMem(0xd94e));
        // CB B5 0103
        gbc.setState(0xbbce, 0xe80f, 0xb60, 0xb53c, 0x4176, 0xbd2e, 0x1, 0x1);
        gbc.writeMem(0xbbce, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe80f, gbc.sp());
        EXPECT(0xbbd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbce));
        EXPECT(0xb5, gbc.readMem(0xbbcf));
        // CB B5 0104
        gbc.setState(0x2566, 0xae91, 0xa290, 0x2486, 0xd6b2, 0x6160, 0x0, 0x1);
        gbc.writeMem(0x2566, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xae91, gbc.sp());
        EXPECT(0x2568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0105
        gbc.setState(0xbd8b, 0x3f62, 0x12c0, 0xd945, 0xe5db, 0x2305, 0x0, 0x1);
        gbc.writeMem(0xbd8b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3f62, gbc.sp());
        EXPECT(0xbd8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd8b));
        EXPECT(0xb5, gbc.readMem(0xbd8c));
        // CB B5 0106
        gbc.setState(0x7417, 0x253c, 0xb500, 0x47fe, 0xccc9, 0x277d, 0x1, 0x0);
        gbc.writeMem(0x7417, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x253c, gbc.sp());
        EXPECT(0x7419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0107
        gbc.setState(0x4c87, 0x92d1, 0x2a20, 0xafac, 0xacd9, 0x84e0, 0x1, 0x1);
        gbc.writeMem(0x4c87, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x92d1, gbc.sp());
        EXPECT(0x4c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0108
        gbc.setState(0x24f0, 0xa45d, 0xc200, 0x241e, 0xdaca, 0xca42, 0x0, 0x1);
        gbc.writeMem(0x24f0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa45d, gbc.sp());
        EXPECT(0x24f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0109
        gbc.setState(0xbf21, 0xe064, 0xa100, 0xa819, 0x394c, 0x90c5, 0x0, 0x0);
        gbc.writeMem(0xbf21, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe064, gbc.sp());
        EXPECT(0xbf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf21));
        EXPECT(0xb5, gbc.readMem(0xbf22));
        // CB B5 010B
        gbc.setState(0x85ec, 0x2c0d, 0x1240, 0x95e4, 0xc72f, 0xd51b, 0x0, 0x1);
        gbc.writeMem(0x85ec, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2c0d, gbc.sp());
        EXPECT(0x85ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ec));
        EXPECT(0xb5, gbc.readMem(0x85ed));
        // CB B5 010C
        gbc.setState(0xe866, 0xeaca, 0xbdb0, 0x6213, 0xd010, 0x2d07, 0x1, 0x0);
        gbc.writeMem(0xe866, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xeaca, gbc.sp());
        EXPECT(0xe868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe866));
        EXPECT(0xb5, gbc.readMem(0xe867));
        // CB B5 010D
        gbc.setState(0xad92, 0x1e8b, 0xfbc0, 0xa3ae, 0xe7df, 0x7db0, 0x0, 0x0);
        gbc.writeMem(0xad92, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1e8b, gbc.sp());
        EXPECT(0xad94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad92));
        EXPECT(0xb5, gbc.readMem(0xad93));
        // CB B5 010E
        gbc.setState(0xd7d7, 0x41ee, 0xa2b0, 0x2354, 0x15f1, 0x7021, 0x0, 0x0);
        gbc.writeMem(0xd7d7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x41ee, gbc.sp());
        EXPECT(0xd7d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d7));
        EXPECT(0xb5, gbc.readMem(0xd7d8));
        // CB B5 010F
        gbc.setState(0x443a, 0x5457, 0xbee0, 0xcddf, 0xcead, 0x67e3, 0x1, 0x1);
        gbc.writeMem(0x443a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5457, gbc.sp());
        EXPECT(0x443c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0110
        gbc.setState(0x2561, 0xda2b, 0x8b70, 0xc50a, 0x30f5, 0x6788, 0x1, 0x1);
        gbc.writeMem(0x2561, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xda2b, gbc.sp());
        EXPECT(0x2563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0111
        gbc.setState(0x46f0, 0x178d, 0x9e00, 0xe446, 0x8586, 0xe21c, 0x1, 0x1);
        gbc.writeMem(0x46f0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x178d, gbc.sp());
        EXPECT(0x46f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0112
        gbc.setState(0xa985, 0xe7be, 0xe770, 0xfbe7, 0x98da, 0xd992, 0x1, 0x1);
        gbc.writeMem(0xa985, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe7be, gbc.sp());
        EXPECT(0xa987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa985));
        EXPECT(0xb5, gbc.readMem(0xa986));
        // CB B5 0114
        gbc.setState(0x345b, 0x12db, 0x72f0, 0xf1dd, 0x3d14, 0xcb94, 0x0, 0x1);
        gbc.writeMem(0x345b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x12db, gbc.sp());
        EXPECT(0x345d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0115
        gbc.setState(0x5e5, 0xf576, 0x7e10, 0xad68, 0x4034, 0x9918, 0x0, 0x1);
        gbc.writeMem(0x5e5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf576, gbc.sp());
        EXPECT(0x5e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0116
        gbc.setState(0xd577, 0xa488, 0x5150, 0x936e, 0xc767, 0x44b5, 0x0, 0x0);
        gbc.writeMem(0xd577, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa488, gbc.sp());
        EXPECT(0xd579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd577));
        EXPECT(0xb5, gbc.readMem(0xd578));
        // CB B5 0117
        gbc.setState(0xd9a8, 0x156c, 0x54b0, 0x9bff, 0xd110, 0x80e, 0x1, 0x1);
        gbc.writeMem(0xd9a8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x156c, gbc.sp());
        EXPECT(0xd9aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a8));
        EXPECT(0xb5, gbc.readMem(0xd9a9));
        // CB B5 0118
        gbc.setState(0x15a, 0x715a, 0xa0d0, 0xde23, 0xbc7, 0x4601, 0x0, 0x0);
        gbc.writeMem(0x15a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x715a, gbc.sp());
        EXPECT(0x15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0119
        gbc.setState(0x235f, 0xb16, 0x4150, 0x1e79, 0xd2bb, 0x2f95, 0x0, 0x0);
        gbc.writeMem(0x235f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb16, gbc.sp());
        EXPECT(0x2361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 011A
        gbc.setState(0x1253, 0x21f9, 0xbce0, 0xee3e, 0xa966, 0x4943, 0x1, 0x0);
        gbc.writeMem(0x1253, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x21f9, gbc.sp());
        EXPECT(0x1255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 011B
        gbc.setState(0x8169, 0x556c, 0xe950, 0x4241, 0x60e8, 0xd7f9, 0x0, 0x1);
        gbc.writeMem(0x8169, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x556c, gbc.sp());
        EXPECT(0x816b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8169));
        EXPECT(0xb5, gbc.readMem(0x816a));
        // CB B5 011C
        gbc.setState(0xb285, 0x1594, 0xaae0, 0xc2a7, 0xbf6a, 0xebc2, 0x1, 0x0);
        gbc.writeMem(0xb285, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1594, gbc.sp());
        EXPECT(0xb287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb285));
        EXPECT(0xb5, gbc.readMem(0xb286));
        // CB B5 011D
        gbc.setState(0x9dae, 0x8fa6, 0xa5e0, 0xa982, 0xad3a, 0x13fd, 0x0, 0x1);
        gbc.writeMem(0x9dae, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8fa6, gbc.sp());
        EXPECT(0x9db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dae));
        EXPECT(0xb5, gbc.readMem(0x9daf));
        // CB B5 011E
        gbc.setState(0xe1c7, 0x27c1, 0x4c50, 0x723e, 0xba78, 0x9c3e, 0x0, 0x0);
        gbc.writeMem(0xe1c7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x27c1, gbc.sp());
        EXPECT(0xe1c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c7));
        EXPECT(0xb5, gbc.readMem(0xe1c8));
        // CB B5 011F
        gbc.setState(0xc3e5, 0xefa1, 0xbb20, 0xcf1e, 0x61d8, 0x13fe, 0x0, 0x1);
        gbc.writeMem(0xc3e5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xefa1, gbc.sp());
        EXPECT(0xc3e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e5));
        EXPECT(0xb5, gbc.readMem(0xc3e6));
        // CB B5 0120
        gbc.setState(0x5f3f, 0xf84, 0x78a0, 0x96f6, 0x3b66, 0x2190, 0x1, 0x0);
        gbc.writeMem(0x5f3f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf84, gbc.sp());
        EXPECT(0x5f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0121
        gbc.setState(0x5ed9, 0x80ec, 0x1fe0, 0xd407, 0xe7bf, 0x93fe, 0x0, 0x0);
        gbc.writeMem(0x5ed9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x80ec, gbc.sp());
        EXPECT(0x5edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0122
        gbc.setState(0x3d5f, 0x9c8e, 0xfac0, 0x65df, 0xb0ef, 0x940f, 0x0, 0x1);
        gbc.writeMem(0x3d5f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9c8e, gbc.sp());
        EXPECT(0x3d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0123
        gbc.setState(0x33fd, 0x233, 0xcec0, 0x8f34, 0xa969, 0x8904, 0x0, 0x0);
        gbc.writeMem(0x33fd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x233, gbc.sp());
        EXPECT(0x33ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0124
        gbc.setState(0xe051, 0xc9f, 0x9a70, 0xe2f4, 0xdd29, 0xd1af, 0x1, 0x1);
        gbc.writeMem(0xe051, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc9f, gbc.sp());
        EXPECT(0xe053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe051));
        EXPECT(0xb5, gbc.readMem(0xe052));
        // CB B5 0125
        gbc.setState(0x9e97, 0x24e3, 0x2970, 0x8af4, 0x249, 0x60bd, 0x1, 0x0);
        gbc.writeMem(0x9e97, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x24e3, gbc.sp());
        EXPECT(0x9e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e97));
        EXPECT(0xb5, gbc.readMem(0x9e98));
        // CB B5 0126
        gbc.setState(0xa6eb, 0xb593, 0x3df0, 0x9dd6, 0x7577, 0xaef7, 0x1, 0x1);
        gbc.writeMem(0xa6eb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb593, gbc.sp());
        EXPECT(0xa6ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6eb));
        EXPECT(0xb5, gbc.readMem(0xa6ec));
        // CB B5 0127
        gbc.setState(0x3513, 0x9939, 0xa370, 0x269a, 0xf5fd, 0x26f6, 0x1, 0x1);
        gbc.writeMem(0x3513, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9939, gbc.sp());
        EXPECT(0x3515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0128
        gbc.setState(0xd10d, 0x9eeb, 0xac0, 0xdb9, 0xe2f9, 0x5701, 0x0, 0x0);
        gbc.writeMem(0xd10d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9eeb, gbc.sp());
        EXPECT(0xd10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10d));
        EXPECT(0xb5, gbc.readMem(0xd10e));
        // CB B5 0129
        gbc.setState(0x4e57, 0xaf0c, 0x6980, 0xcdd5, 0x494b, 0x8c1a, 0x1, 0x0);
        gbc.writeMem(0x4e57, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xaf0c, gbc.sp());
        EXPECT(0x4e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 012A
        gbc.setState(0x2256, 0x227c, 0xd400, 0xcdcb, 0x65c3, 0x72a1, 0x1, 0x1);
        gbc.writeMem(0x2256, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x227c, gbc.sp());
        EXPECT(0x2258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 012B
        gbc.setState(0xdca2, 0xd7ee, 0xbb20, 0x34f3, 0x6809, 0x4f76, 0x0, 0x1);
        gbc.writeMem(0xdca2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd7ee, gbc.sp());
        EXPECT(0xdca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdca2));
        EXPECT(0xb5, gbc.readMem(0xdca3));
        // CB B5 012C
        gbc.setState(0xb4ab, 0xb17e, 0xd600, 0x8f8b, 0x3121, 0xf64c, 0x0, 0x1);
        gbc.writeMem(0xb4ab, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb17e, gbc.sp());
        EXPECT(0xb4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ab));
        EXPECT(0xb5, gbc.readMem(0xb4ac));
        // CB B5 012D
        gbc.setState(0x6e76, 0x3658, 0xeff0, 0xb2e2, 0xbe1, 0x622a, 0x1, 0x0);
        gbc.writeMem(0x6e76, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3658, gbc.sp());
        EXPECT(0x6e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 012E
        gbc.setState(0xdc7e, 0x2464, 0x85a0, 0x4557, 0x18b6, 0xf6e1, 0x0, 0x0);
        gbc.writeMem(0xdc7e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2464, gbc.sp());
        EXPECT(0xdc80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7e));
        EXPECT(0xb5, gbc.readMem(0xdc7f));
        // CB B5 012F
        gbc.setState(0x9b7d, 0xc0f9, 0xb130, 0x6ed7, 0x7d6c, 0x67f7, 0x0, 0x1);
        gbc.writeMem(0x9b7d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc0f9, gbc.sp());
        EXPECT(0x9b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b7d));
        EXPECT(0xb5, gbc.readMem(0x9b7e));
        // CB B5 0130
        gbc.setState(0x681f, 0xbc88, 0x4d0, 0x8d81, 0x1eaf, 0xe310, 0x0, 0x0);
        gbc.writeMem(0x681f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbc88, gbc.sp());
        EXPECT(0x6821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0131
        gbc.setState(0x6c86, 0x845d, 0xb140, 0xa2b1, 0xe5ff, 0x272d, 0x0, 0x0);
        gbc.writeMem(0x6c86, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x845d, gbc.sp());
        EXPECT(0x6c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0132
        gbc.setState(0xcdb6, 0x3410, 0x1b20, 0x37aa, 0x6094, 0x1c1, 0x1, 0x0);
        gbc.writeMem(0xcdb6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3410, gbc.sp());
        EXPECT(0xcdb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb6));
        EXPECT(0xb5, gbc.readMem(0xcdb7));
        // CB B5 0134
        gbc.setState(0x8dc0, 0xba1e, 0x1660, 0x7dba, 0xaed5, 0xb846, 0x1, 0x1);
        gbc.writeMem(0x8dc0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xba1e, gbc.sp());
        EXPECT(0x8dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc0));
        EXPECT(0xb5, gbc.readMem(0x8dc1));
        // CB B5 0135
        gbc.setState(0xa594, 0xbdbd, 0x6f90, 0x2cef, 0x46cc, 0x7a4, 0x1, 0x1);
        gbc.writeMem(0xa594, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbdbd, gbc.sp());
        EXPECT(0xa596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa594));
        EXPECT(0xb5, gbc.readMem(0xa595));
        // CB B5 0136
        gbc.setState(0x3089, 0xcf40, 0x3130, 0x8355, 0xeb64, 0x7dfd, 0x0, 0x1);
        gbc.writeMem(0x3089, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcf40, gbc.sp());
        EXPECT(0x308b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0138
        gbc.setState(0x6a85, 0xe233, 0x6120, 0x4d83, 0x91da, 0xeeb4, 0x0, 0x0);
        gbc.writeMem(0x6a85, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe233, gbc.sp());
        EXPECT(0x6a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0139
        gbc.setState(0x7fa2, 0x8192, 0xf380, 0x2c04, 0xe5c5, 0x9fc3, 0x1, 0x0);
        gbc.writeMem(0x7fa2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8192, gbc.sp());
        EXPECT(0x7fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 013A
        gbc.setState(0xbd2f, 0xe54, 0xadb0, 0x6f94, 0x2974, 0x222c, 0x1, 0x0);
        gbc.writeMem(0xbd2f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe54, gbc.sp());
        EXPECT(0xbd31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2f));
        EXPECT(0xb5, gbc.readMem(0xbd30));
        // CB B5 013B
        gbc.setState(0xaa8b, 0x48f1, 0x2760, 0xaa84, 0x6686, 0x41b8, 0x1, 0x1);
        gbc.writeMem(0xaa8b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x48f1, gbc.sp());
        EXPECT(0xaa8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa8b));
        EXPECT(0xb5, gbc.readMem(0xaa8c));
        // CB B5 013C
        gbc.setState(0x61cd, 0xa66b, 0x790, 0xe133, 0xf576, 0xaef7, 0x1, 0x0);
        gbc.writeMem(0x61cd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa66b, gbc.sp());
        EXPECT(0x61cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 013D
        gbc.setState(0xb2d8, 0x9a2, 0x9f50, 0x6d8a, 0x9abc, 0x5b62, 0x1, 0x1);
        gbc.writeMem(0xb2d8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9a2, gbc.sp());
        EXPECT(0xb2da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d8));
        EXPECT(0xb5, gbc.readMem(0xb2d9));
        // CB B5 013E
        gbc.setState(0xb4e2, 0x85a8, 0x46c0, 0x6ef4, 0x9a6d, 0x23bd, 0x1, 0x0);
        gbc.writeMem(0xb4e2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x85a8, gbc.sp());
        EXPECT(0xb4e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e2));
        EXPECT(0xb5, gbc.readMem(0xb4e3));
        // CB B5 0141
        gbc.setState(0x4227, 0x5809, 0x12b0, 0x7b0d, 0x7769, 0xe461, 0x1, 0x0);
        gbc.writeMem(0x4227, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5809, gbc.sp());
        EXPECT(0x4229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0142
        gbc.setState(0x276f, 0xa990, 0x2d70, 0xd305, 0xb980, 0x7009, 0x1, 0x0);
        gbc.writeMem(0x276f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa990, gbc.sp());
        EXPECT(0x2771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0143
        gbc.setState(0xa6c6, 0xdfb0, 0xc540, 0x4026, 0x4e2d, 0xfcbf, 0x1, 0x1);
        gbc.writeMem(0xa6c6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdfb0, gbc.sp());
        EXPECT(0xa6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c6));
        EXPECT(0xb5, gbc.readMem(0xa6c7));
        // CB B5 0144
        gbc.setState(0x96cb, 0x8ddc, 0x45b0, 0x1be4, 0x310e, 0x5975, 0x1, 0x1);
        gbc.writeMem(0x96cb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8ddc, gbc.sp());
        EXPECT(0x96cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96cb));
        EXPECT(0xb5, gbc.readMem(0x96cc));
        // CB B5 0145
        gbc.setState(0xdae2, 0xdc66, 0x8be0, 0xdf61, 0x536b, 0xa64, 0x0, 0x0);
        gbc.writeMem(0xdae2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdc66, gbc.sp());
        EXPECT(0xdae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae2));
        EXPECT(0xb5, gbc.readMem(0xdae3));
        // CB B5 0146
        gbc.setState(0xdfa3, 0x1383, 0xeeb0, 0xa7f4, 0xd07a, 0x5525, 0x1, 0x0);
        gbc.writeMem(0xdfa3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1383, gbc.sp());
        EXPECT(0xdfa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa3));
        EXPECT(0xb5, gbc.readMem(0xdfa4));
        // CB B5 0147
        gbc.setState(0xb8e8, 0x57f5, 0x6e00, 0x9f66, 0x4a98, 0x52cf, 0x1, 0x0);
        gbc.writeMem(0xb8e8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x57f5, gbc.sp());
        EXPECT(0xb8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e8));
        EXPECT(0xb5, gbc.readMem(0xb8e9));
        // CB B5 0148
        gbc.setState(0xa8a5, 0xf101, 0x1ed0, 0xe481, 0x2b1f, 0x4d23, 0x0, 0x1);
        gbc.writeMem(0xa8a5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf101, gbc.sp());
        EXPECT(0xa8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a5));
        EXPECT(0xb5, gbc.readMem(0xa8a6));
        // CB B5 0149
        gbc.setState(0xe319, 0xe0de, 0x1610, 0x56c1, 0xacf8, 0xb662, 0x0, 0x0);
        gbc.writeMem(0xe319, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe0de, gbc.sp());
        EXPECT(0xe31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe319));
        EXPECT(0xb5, gbc.readMem(0xe31a));
        // CB B5 014B
        gbc.setState(0x64c4, 0x972b, 0x8400, 0x6818, 0x586c, 0xec31, 0x1, 0x1);
        gbc.writeMem(0x64c4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x972b, gbc.sp());
        EXPECT(0x64c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 014C
        gbc.setState(0xbb99, 0xee9e, 0x4d60, 0x79f8, 0x1410, 0x6fc8, 0x0, 0x0);
        gbc.writeMem(0xbb99, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xee9e, gbc.sp());
        EXPECT(0xbb9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb99));
        EXPECT(0xb5, gbc.readMem(0xbb9a));
        // CB B5 014D
        gbc.setState(0x3b52, 0xa39b, 0xdea0, 0xe7af, 0xadb4, 0x76d9, 0x1, 0x0);
        gbc.writeMem(0x3b52, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa39b, gbc.sp());
        EXPECT(0x3b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 014E
        gbc.setState(0xd3bf, 0x148e, 0x28a0, 0xbb13, 0xd39b, 0x72cf, 0x0, 0x1);
        gbc.writeMem(0xd3bf, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x148e, gbc.sp());
        EXPECT(0xd3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3bf));
        EXPECT(0xb5, gbc.readMem(0xd3c0));
        // CB B5 014F
        gbc.setState(0xac4d, 0x1dcd, 0x9b80, 0x61ae, 0x9d83, 0x3686, 0x1, 0x0);
        gbc.writeMem(0xac4d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1dcd, gbc.sp());
        EXPECT(0xac4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac4d));
        EXPECT(0xb5, gbc.readMem(0xac4e));
        // CB B5 0150
        gbc.setState(0x5ab7, 0x73a1, 0xf330, 0x5579, 0xb0ec, 0x76b3, 0x0, 0x1);
        gbc.writeMem(0x5ab7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x73a1, gbc.sp());
        EXPECT(0x5ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0151
        gbc.setState(0xdb53, 0x56fb, 0x2d30, 0x3ff8, 0xc9c8, 0x3ccb, 0x0, 0x1);
        gbc.writeMem(0xdb53, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x56fb, gbc.sp());
        EXPECT(0xdb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb53));
        EXPECT(0xb5, gbc.readMem(0xdb54));
        // CB B5 0152
        gbc.setState(0x6f1c, 0xe787, 0xd630, 0x6c30, 0x78d8, 0x2f4b, 0x1, 0x0);
        gbc.writeMem(0x6f1c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe787, gbc.sp());
        EXPECT(0x6f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0153
        gbc.setState(0xc36d, 0xc981, 0x1910, 0x935b, 0xd8fc, 0x9775, 0x0, 0x0);
        gbc.writeMem(0xc36d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc981, gbc.sp());
        EXPECT(0xc36f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc36d));
        EXPECT(0xb5, gbc.readMem(0xc36e));
        // CB B5 0154
        gbc.setState(0xc61a, 0x2609, 0xa710, 0xad43, 0x184a, 0xd7ac, 0x1, 0x1);
        gbc.writeMem(0xc61a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2609, gbc.sp());
        EXPECT(0xc61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc61a));
        EXPECT(0xb5, gbc.readMem(0xc61b));
        // CB B5 0155
        gbc.setState(0x6e31, 0x83f6, 0x4160, 0x7107, 0x4c4b, 0x44aa, 0x0, 0x0);
        gbc.writeMem(0x6e31, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x83f6, gbc.sp());
        EXPECT(0x6e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0156
        gbc.setState(0x7c24, 0x4cf3, 0x18f0, 0x6640, 0xaa1d, 0x86bc, 0x0, 0x0);
        gbc.writeMem(0x7c24, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4cf3, gbc.sp());
        EXPECT(0x7c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0157
        gbc.setState(0x45a8, 0x13d7, 0xa750, 0x288a, 0x422f, 0x1d47, 0x1, 0x1);
        gbc.writeMem(0x45a8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x13d7, gbc.sp());
        EXPECT(0x45aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0158
        gbc.setState(0xa430, 0x95e1, 0x7e0, 0x5fb, 0x520a, 0x854d, 0x1, 0x0);
        gbc.writeMem(0xa430, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x95e1, gbc.sp());
        EXPECT(0xa432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa430));
        EXPECT(0xb5, gbc.readMem(0xa431));
        // CB B5 0159
        gbc.setState(0xceee, 0xedab, 0xf4f0, 0x6528, 0xd034, 0x78c3, 0x1, 0x1);
        gbc.writeMem(0xceee, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xedab, gbc.sp());
        EXPECT(0xcef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceee));
        EXPECT(0xb5, gbc.readMem(0xceef));
        // CB B5 015A
        gbc.setState(0x1a6, 0x5235, 0x1690, 0xa3e1, 0x1b0c, 0x7509, 0x1, 0x0);
        gbc.writeMem(0x1a6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5235, gbc.sp());
        EXPECT(0x1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 015B
        gbc.setState(0xca48, 0xd2a1, 0xaff0, 0x6f7f, 0xd6eb, 0xd928, 0x0, 0x0);
        gbc.writeMem(0xca48, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd2a1, gbc.sp());
        EXPECT(0xca4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca48));
        EXPECT(0xb5, gbc.readMem(0xca49));
        // CB B5 015C
        gbc.setState(0x5e56, 0xdd79, 0x9970, 0xbee5, 0x26bf, 0xb1d7, 0x1, 0x1);
        gbc.writeMem(0x5e56, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdd79, gbc.sp());
        EXPECT(0x5e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 015D
        gbc.setState(0x53a4, 0xd8e7, 0x3950, 0xcf7b, 0x4cc, 0xd15, 0x0, 0x1);
        gbc.writeMem(0x53a4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd8e7, gbc.sp());
        EXPECT(0x53a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 015E
        gbc.setState(0x1982, 0xcce0, 0x2ec0, 0x73da, 0x559c, 0xf672, 0x1, 0x1);
        gbc.writeMem(0x1982, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcce0, gbc.sp());
        EXPECT(0x1984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 015F
        gbc.setState(0xc362, 0x8683, 0xacc0, 0x39a6, 0xa125, 0xe478, 0x0, 0x1);
        gbc.writeMem(0xc362, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8683, gbc.sp());
        EXPECT(0xc364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc362));
        EXPECT(0xb5, gbc.readMem(0xc363));
        // CB B5 0160
        gbc.setState(0x8f06, 0x20db, 0xbd80, 0x74c7, 0xda5e, 0xba6d, 0x0, 0x1);
        gbc.writeMem(0x8f06, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x20db, gbc.sp());
        EXPECT(0x8f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f06));
        EXPECT(0xb5, gbc.readMem(0x8f07));
        // CB B5 0161
        gbc.setState(0xcbe9, 0x7ccf, 0x8020, 0x8131, 0xb1ed, 0xc280, 0x0, 0x1);
        gbc.writeMem(0xcbe9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7ccf, gbc.sp());
        EXPECT(0xcbeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe9));
        EXPECT(0xb5, gbc.readMem(0xcbea));
        // CB B5 0162
        gbc.setState(0x2ff9, 0xa712, 0xb8d0, 0x9975, 0x1d4e, 0x377a, 0x1, 0x1);
        gbc.writeMem(0x2ff9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa712, gbc.sp());
        EXPECT(0x2ffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0164
        gbc.setState(0xaa83, 0x9430, 0xfcb0, 0x5ac3, 0xa614, 0x3570, 0x1, 0x1);
        gbc.writeMem(0xaa83, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9430, gbc.sp());
        EXPECT(0xaa85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa83));
        EXPECT(0xb5, gbc.readMem(0xaa84));
        // CB B5 0165
        gbc.setState(0xe973, 0x5472, 0x6c60, 0x8d7, 0x8490, 0x62a2, 0x1, 0x1);
        gbc.writeMem(0xe973, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5472, gbc.sp());
        EXPECT(0xe975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe973));
        EXPECT(0xb5, gbc.readMem(0xe974));
        // CB B5 0166
        gbc.setState(0x1301, 0x9899, 0x60a0, 0x1928, 0xbb87, 0xa455, 0x0, 0x0);
        gbc.writeMem(0x1301, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9899, gbc.sp());
        EXPECT(0x1303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0167
        gbc.setState(0x99f0, 0xa1ca, 0x3390, 0x39fc, 0x64a6, 0xc0d9, 0x1, 0x0);
        gbc.writeMem(0x99f0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa1ca, gbc.sp());
        EXPECT(0x99f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f0));
        EXPECT(0xb5, gbc.readMem(0x99f1));
        // CB B5 0168
        gbc.setState(0x47a9, 0xa514, 0x8680, 0xec58, 0x7cab, 0x715d, 0x1, 0x1);
        gbc.writeMem(0x47a9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa514, gbc.sp());
        EXPECT(0x47ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0169
        gbc.setState(0x3b6c, 0xd50a, 0x7600, 0xfd9c, 0x1e56, 0x765e, 0x0, 0x1);
        gbc.writeMem(0x3b6c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd50a, gbc.sp());
        EXPECT(0x3b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 016A
        gbc.setState(0x6800, 0x9f48, 0x2850, 0x44fc, 0xb6af, 0xaeaf, 0x0, 0x0);
        gbc.writeMem(0x6800, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9f48, gbc.sp());
        EXPECT(0x6802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 016B
        gbc.setState(0xb95d, 0x46d, 0x1c10, 0x828a, 0xeee9, 0xb1ff, 0x1, 0x1);
        gbc.writeMem(0xb95d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x46d, gbc.sp());
        EXPECT(0xb95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb95d));
        EXPECT(0xb5, gbc.readMem(0xb95e));
        // CB B5 016C
        gbc.setState(0x390e, 0x8cc9, 0xb4e0, 0xd31c, 0xdac0, 0xb1bb, 0x0, 0x0);
        gbc.writeMem(0x390e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8cc9, gbc.sp());
        EXPECT(0x3910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 016D
        gbc.setState(0x25c1, 0x24a, 0xd850, 0x3afa, 0xd58c, 0xe2d7, 0x1, 0x0);
        gbc.writeMem(0x25c1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x24a, gbc.sp());
        EXPECT(0x25c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 016E
        gbc.setState(0x6664, 0x22c1, 0x9740, 0x395d, 0x5a10, 0xb259, 0x1, 0x0);
        gbc.writeMem(0x6664, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x22c1, gbc.sp());
        EXPECT(0x6666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 016F
        gbc.setState(0x1452, 0x1ae5, 0x5eb0, 0x8442, 0xe568, 0xd25e, 0x0, 0x0);
        gbc.writeMem(0x1452, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1ae5, gbc.sp());
        EXPECT(0x1454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0170
        gbc.setState(0xc587, 0xf84a, 0x1f0, 0x70aa, 0x474b, 0x14f, 0x1, 0x0);
        gbc.writeMem(0xc587, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf84a, gbc.sp());
        EXPECT(0xc589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc587));
        EXPECT(0xb5, gbc.readMem(0xc588));
        // CB B5 0171
        gbc.setState(0x2af, 0xd7d5, 0x71b0, 0x570, 0xed63, 0xc575, 0x0, 0x1);
        gbc.writeMem(0x2af, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd7d5, gbc.sp());
        EXPECT(0x2b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0172
        gbc.setState(0xdc28, 0xa4, 0x5fd0, 0xe072, 0x1f17, 0xf677, 0x1, 0x1);
        gbc.writeMem(0xdc28, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa4, gbc.sp());
        EXPECT(0xdc2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc28));
        EXPECT(0xb5, gbc.readMem(0xdc29));
        // CB B5 0174
        gbc.setState(0x47a6, 0x6316, 0xc1a0, 0x97ed, 0x7506, 0xfaa2, 0x1, 0x1);
        gbc.writeMem(0x47a6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6316, gbc.sp());
        EXPECT(0x47a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0175
        gbc.setState(0x9e8, 0x8c27, 0x75a0, 0x7ab4, 0xdab4, 0x9a81, 0x1, 0x1);
        gbc.writeMem(0x9e8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8c27, gbc.sp());
        EXPECT(0x9ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0176
        gbc.setState(0xe945, 0x2c99, 0xa050, 0x495b, 0xcd4d, 0x2646, 0x1, 0x1);
        gbc.writeMem(0xe945, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2c99, gbc.sp());
        EXPECT(0xe947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe945));
        EXPECT(0xb5, gbc.readMem(0xe946));
        // CB B5 0177
        gbc.setState(0xc622, 0x36b8, 0xc70, 0xffd9, 0x21b7, 0x323e, 0x0, 0x1);
        gbc.writeMem(0xc622, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x36b8, gbc.sp());
        EXPECT(0xc624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc622));
        EXPECT(0xb5, gbc.readMem(0xc623));
        // CB B5 0178
        gbc.setState(0x56dd, 0x4e70, 0xec70, 0xfc3c, 0xc60e, 0x26cd, 0x1, 0x1);
        gbc.writeMem(0x56dd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4e70, gbc.sp());
        EXPECT(0x56df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0179
        gbc.setState(0x408d, 0xb802, 0x6410, 0x1bea, 0x74aa, 0x46b3, 0x1, 0x1);
        gbc.writeMem(0x408d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb802, gbc.sp());
        EXPECT(0x408f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 017A
        gbc.setState(0x4665, 0x5754, 0xd7e0, 0x7c0e, 0x29f4, 0xdbe8, 0x1, 0x1);
        gbc.writeMem(0x4665, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5754, gbc.sp());
        EXPECT(0x4667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 017B
        gbc.setState(0x7154, 0xc04d, 0xc470, 0x2706, 0xeff1, 0xcd9d, 0x0, 0x1);
        gbc.writeMem(0x7154, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc04d, gbc.sp());
        EXPECT(0x7156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 017C
        gbc.setState(0xc2b1, 0x32ff, 0x5b70, 0xe1, 0x5bc9, 0xbc4b, 0x0, 0x0);
        gbc.writeMem(0xc2b1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x32ff, gbc.sp());
        EXPECT(0xc2b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b1));
        EXPECT(0xb5, gbc.readMem(0xc2b2));
        // CB B5 017D
        gbc.setState(0x52fe, 0x58fb, 0xff40, 0x955, 0x47d9, 0xf0c0, 0x0, 0x1);
        gbc.writeMem(0x52fe, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x58fb, gbc.sp());
        EXPECT(0x5300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 017E
        gbc.setState(0x5656, 0xf9fd, 0x19b0, 0xe5cf, 0x851f, 0x644c, 0x1, 0x0);
        gbc.writeMem(0x5656, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf9fd, gbc.sp());
        EXPECT(0x5658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 017F
        gbc.setState(0x8208, 0x2eac, 0x9140, 0xb8bd, 0x2397, 0x8f9e, 0x1, 0x0);
        gbc.writeMem(0x8208, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2eac, gbc.sp());
        EXPECT(0x820a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8208));
        EXPECT(0xb5, gbc.readMem(0x8209));
        // CB B5 0180
        gbc.setState(0xb36b, 0x46a4, 0xa110, 0x355f, 0xe991, 0x9c58, 0x1, 0x1);
        gbc.writeMem(0xb36b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x46a4, gbc.sp());
        EXPECT(0xb36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb36b));
        EXPECT(0xb5, gbc.readMem(0xb36c));
        // CB B5 0181
        gbc.setState(0x2485, 0x78a8, 0xd10, 0x23e6, 0x19d9, 0xf307, 0x1, 0x0);
        gbc.writeMem(0x2485, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x78a8, gbc.sp());
        EXPECT(0x2487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0182
        gbc.setState(0x46ff, 0x52c5, 0x2f10, 0x6b76, 0xca36, 0xa29d, 0x1, 0x0);
        gbc.writeMem(0x46ff, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x52c5, gbc.sp());
        EXPECT(0x4701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0183
        gbc.setState(0x241, 0xa62a, 0xf710, 0x19df, 0xb9ac, 0xf10, 0x1, 0x1);
        gbc.writeMem(0x241, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa62a, gbc.sp());
        EXPECT(0x243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0184
        gbc.setState(0x1e5, 0x5521, 0xb040, 0x2ff7, 0xd6e0, 0xf3ef, 0x1, 0x1);
        gbc.writeMem(0x1e5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5521, gbc.sp());
        EXPECT(0x1e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0186
        gbc.setState(0x4e99, 0xf1bb, 0x2700, 0x2db1, 0x4609, 0xbbf1, 0x0, 0x1);
        gbc.writeMem(0x4e99, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf1bb, gbc.sp());
        EXPECT(0x4e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0187
        gbc.setState(0xafd8, 0x8eea, 0x1d10, 0xc02f, 0xd96f, 0x14cb, 0x1, 0x0);
        gbc.writeMem(0xafd8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8eea, gbc.sp());
        EXPECT(0xafda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd8));
        EXPECT(0xb5, gbc.readMem(0xafd9));
        // CB B5 0188
        gbc.setState(0x96ea, 0xa4f5, 0x3ce0, 0x77a9, 0xf320, 0xd0, 0x1, 0x0);
        gbc.writeMem(0x96ea, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa4f5, gbc.sp());
        EXPECT(0x96ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ea));
        EXPECT(0xb5, gbc.readMem(0x96eb));
        // CB B5 0189
        gbc.setState(0x1e42, 0xbd30, 0xfc30, 0x318d, 0xcd35, 0x862f, 0x0, 0x1);
        gbc.writeMem(0x1e42, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbd30, gbc.sp());
        EXPECT(0x1e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 018A
        gbc.setState(0xe2d7, 0xfc80, 0x4c90, 0x3aaa, 0xc24b, 0x9e7f, 0x0, 0x0);
        gbc.writeMem(0xe2d7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfc80, gbc.sp());
        EXPECT(0xe2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d7));
        EXPECT(0xb5, gbc.readMem(0xe2d8));
        // CB B5 018B
        gbc.setState(0xa1f5, 0xf400, 0x8d0, 0xe322, 0xf259, 0xf896, 0x1, 0x0);
        gbc.writeMem(0xa1f5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf400, gbc.sp());
        EXPECT(0xa1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f5));
        EXPECT(0xb5, gbc.readMem(0xa1f6));
        // CB B5 018C
        gbc.setState(0x3da9, 0xd5a, 0x5d20, 0x433e, 0x5100, 0x2ed9, 0x1, 0x1);
        gbc.writeMem(0x3da9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd5a, gbc.sp());
        EXPECT(0x3dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 018D
        gbc.setState(0x3d66, 0x632a, 0x70d0, 0xbffc, 0xd15f, 0xde7c, 0x0, 0x0);
        gbc.writeMem(0x3d66, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x632a, gbc.sp());
        EXPECT(0x3d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 018E
        gbc.setState(0xab2d, 0x2ac1, 0xb480, 0x11e0, 0x8122, 0x86ad, 0x1, 0x0);
        gbc.writeMem(0xab2d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2ac1, gbc.sp());
        EXPECT(0xab2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2d));
        EXPECT(0xb5, gbc.readMem(0xab2e));
        // CB B5 018F
        gbc.setState(0xdf90, 0x26d3, 0x79d0, 0xdc56, 0x38, 0x3b0a, 0x0, 0x0);
        gbc.writeMem(0xdf90, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x26d3, gbc.sp());
        EXPECT(0xdf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf90));
        EXPECT(0xb5, gbc.readMem(0xdf91));
        // CB B5 0190
        gbc.setState(0xe4e7, 0xf14, 0xf40, 0x5ffd, 0x5e15, 0xdf1, 0x1, 0x0);
        gbc.writeMem(0xe4e7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf14, gbc.sp());
        EXPECT(0xe4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e7));
        EXPECT(0xb5, gbc.readMem(0xe4e8));
        // CB B5 0192
        gbc.setState(0xe1b1, 0x3c26, 0x15c0, 0x38fc, 0xe141, 0xcff8, 0x0, 0x1);
        gbc.writeMem(0xe1b1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3c26, gbc.sp());
        EXPECT(0xe1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b1));
        EXPECT(0xb5, gbc.readMem(0xe1b2));
        // CB B5 0193
        gbc.setState(0x62df, 0xdaf0, 0x6650, 0x2385, 0xc7dd, 0x43d8, 0x0, 0x0);
        gbc.writeMem(0x62df, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdaf0, gbc.sp());
        EXPECT(0x62e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0194
        gbc.setState(0x92d1, 0x6d9a, 0xd040, 0x50b9, 0x8149, 0x5a1c, 0x0, 0x0);
        gbc.writeMem(0x92d1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6d9a, gbc.sp());
        EXPECT(0x92d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d1));
        EXPECT(0xb5, gbc.readMem(0x92d2));
        // CB B5 0195
        gbc.setState(0xad59, 0x8775, 0xc810, 0x73ec, 0x6067, 0xb71b, 0x0, 0x0);
        gbc.writeMem(0xad59, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8775, gbc.sp());
        EXPECT(0xad5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad59));
        EXPECT(0xb5, gbc.readMem(0xad5a));
        // CB B5 0196
        gbc.setState(0x5b5, 0x7e24, 0x43a0, 0xaf6d, 0x464a, 0xed55, 0x1, 0x1);
        gbc.writeMem(0x5b5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7e24, gbc.sp());
        EXPECT(0x5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0197
        gbc.setState(0xed05, 0x184d, 0x1d00, 0xeba4, 0x38bb, 0xf925, 0x0, 0x0);
        gbc.writeMem(0xed05, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x184d, gbc.sp());
        EXPECT(0xed07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed05));
        EXPECT(0xb5, gbc.readMem(0xed06));
        // CB B5 0198
        gbc.setState(0x260, 0xa771, 0xe120, 0x698f, 0xb8a, 0x98e5, 0x1, 0x0);
        gbc.writeMem(0x260, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa771, gbc.sp());
        EXPECT(0x262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0199
        gbc.setState(0x4c07, 0x2288, 0x1150, 0x7d31, 0x7dfb, 0x684f, 0x0, 0x0);
        gbc.writeMem(0x4c07, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2288, gbc.sp());
        EXPECT(0x4c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 019A
        gbc.setState(0x5a43, 0x7dd7, 0xbfc0, 0x88e5, 0xe57f, 0xdbc4, 0x1, 0x1);
        gbc.writeMem(0x5a43, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7dd7, gbc.sp());
        EXPECT(0x5a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 019B
        gbc.setState(0x5ced, 0x3f84, 0x1860, 0x4e72, 0x9776, 0x388a, 0x1, 0x0);
        gbc.writeMem(0x5ced, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3f84, gbc.sp());
        EXPECT(0x5cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 019C
        gbc.setState(0xbdbf, 0xe449, 0xa2a0, 0x7455, 0x376f, 0x45d1, 0x0, 0x1);
        gbc.writeMem(0xbdbf, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe449, gbc.sp());
        EXPECT(0xbdc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdbf));
        EXPECT(0xb5, gbc.readMem(0xbdc0));
        // CB B5 019D
        gbc.setState(0x91a, 0xa754, 0x3ba0, 0xbf09, 0x7a26, 0x1f3d, 0x1, 0x0);
        gbc.writeMem(0x91a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa754, gbc.sp());
        EXPECT(0x91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 019E
        gbc.setState(0x2e74, 0x8fae, 0x75e0, 0x8a6, 0x3ca6, 0x3327, 0x1, 0x0);
        gbc.writeMem(0x2e74, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8fae, gbc.sp());
        EXPECT(0x2e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 019F
        gbc.setState(0xef8e, 0xdf99, 0xa700, 0x9365, 0x652e, 0x1cb5, 0x1, 0x1);
        gbc.writeMem(0xef8e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xdf99, gbc.sp());
        EXPECT(0xef90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef8e));
        EXPECT(0xb5, gbc.readMem(0xef8f));
        // CB B5 01A0
        gbc.setState(0x7bcf, 0xc694, 0x67d0, 0x831d, 0x2745, 0x3c9, 0x0, 0x1);
        gbc.writeMem(0x7bcf, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc694, gbc.sp());
        EXPECT(0x7bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01A1
        gbc.setState(0xd110, 0xadbf, 0x8e30, 0xd2b0, 0x454a, 0x8369, 0x1, 0x1);
        gbc.writeMem(0xd110, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xadbf, gbc.sp());
        EXPECT(0xd112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd110));
        EXPECT(0xb5, gbc.readMem(0xd111));
        // CB B5 01A2
        gbc.setState(0x7f78, 0x2615, 0x9050, 0xc166, 0xe702, 0x1e6d, 0x1, 0x0);
        gbc.writeMem(0x7f78, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2615, gbc.sp());
        EXPECT(0x7f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01A3
        gbc.setState(0xd913, 0xc58f, 0x3f40, 0x9e69, 0x6959, 0xac54, 0x1, 0x0);
        gbc.writeMem(0xd913, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc58f, gbc.sp());
        EXPECT(0xd915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd913));
        EXPECT(0xb5, gbc.readMem(0xd914));
        // CB B5 01A4
        gbc.setState(0x7a73, 0xe3da, 0xbca0, 0x7c68, 0x8cb0, 0xc692, 0x1, 0x0);
        gbc.writeMem(0x7a73, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe3da, gbc.sp());
        EXPECT(0x7a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01A5
        gbc.setState(0xd3d5, 0x3b75, 0xebc0, 0x3fe9, 0xdeee, 0xc76, 0x1, 0x0);
        gbc.writeMem(0xd3d5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3b75, gbc.sp());
        EXPECT(0xd3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d5));
        EXPECT(0xb5, gbc.readMem(0xd3d6));
        // CB B5 01A6
        gbc.setState(0x93ef, 0x7b29, 0x7440, 0xa347, 0xad5a, 0x9c5c, 0x0, 0x1);
        gbc.writeMem(0x93ef, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7b29, gbc.sp());
        EXPECT(0x93f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ef));
        EXPECT(0xb5, gbc.readMem(0x93f0));
        // CB B5 01A7
        gbc.setState(0xe07c, 0xf588, 0x4120, 0x98e4, 0x78e9, 0x292a, 0x0, 0x1);
        gbc.writeMem(0xe07c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf588, gbc.sp());
        EXPECT(0xe07e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe07c));
        EXPECT(0xb5, gbc.readMem(0xe07d));
        // CB B5 01A8
        gbc.setState(0xe2b, 0x4f07, 0x9910, 0x502a, 0xce36, 0x3448, 0x0, 0x1);
        gbc.writeMem(0xe2b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4f07, gbc.sp());
        EXPECT(0xe2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01A9
        gbc.setState(0x479a, 0x602a, 0xff60, 0xdfc0, 0x133f, 0xbf72, 0x1, 0x1);
        gbc.writeMem(0x479a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x602a, gbc.sp());
        EXPECT(0x479c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01AA
        gbc.setState(0x4a88, 0xe2a3, 0x3c00, 0xcd86, 0x9542, 0x634a, 0x0, 0x0);
        gbc.writeMem(0x4a88, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe2a3, gbc.sp());
        EXPECT(0x4a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01AB
        gbc.setState(0x40ae, 0xdd6e, 0x2ba0, 0x384e, 0xa0f4, 0xbb39, 0x1, 0x0);
        gbc.writeMem(0x40ae, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xdd6e, gbc.sp());
        EXPECT(0x40b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01AC
        gbc.setState(0xda7, 0x8b01, 0x4840, 0x5d85, 0x53c4, 0x6083, 0x0, 0x1);
        gbc.writeMem(0xda7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8b01, gbc.sp());
        EXPECT(0xda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01AD
        gbc.setState(0x911c, 0x4ce1, 0x2720, 0xdb4a, 0x1a04, 0x8b60, 0x1, 0x0);
        gbc.writeMem(0x911c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4ce1, gbc.sp());
        EXPECT(0x911e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x911c));
        EXPECT(0xb5, gbc.readMem(0x911d));
        // CB B5 01AE
        gbc.setState(0x3dbc, 0x10b, 0x8ed0, 0xdaea, 0x84ca, 0x311, 0x0, 0x1);
        gbc.writeMem(0x3dbc, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x10b, gbc.sp());
        EXPECT(0x3dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01AF
        gbc.setState(0x4398, 0xafba, 0xb320, 0x4c0, 0xf4fd, 0xed20, 0x0, 0x0);
        gbc.writeMem(0x4398, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xafba, gbc.sp());
        EXPECT(0x439a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01B1
        gbc.setState(0xaafa, 0xa26e, 0xddd0, 0xb713, 0x2ca1, 0xc3ee, 0x1, 0x1);
        gbc.writeMem(0xaafa, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa26e, gbc.sp());
        EXPECT(0xaafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaafa));
        EXPECT(0xb5, gbc.readMem(0xaafb));
        // CB B5 01B2
        gbc.setState(0x7058, 0x3786, 0x5000, 0x5d3, 0x1d94, 0xf503, 0x0, 0x0);
        gbc.writeMem(0x7058, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3786, gbc.sp());
        EXPECT(0x705a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01B3
        gbc.setState(0x593d, 0xebd5, 0x7100, 0x9fe5, 0xcf78, 0xd05b, 0x1, 0x0);
        gbc.writeMem(0x593d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xebd5, gbc.sp());
        EXPECT(0x593f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01B4
        gbc.setState(0xda9e, 0x3c20, 0x82f0, 0xc282, 0xa4d9, 0x9522, 0x1, 0x0);
        gbc.writeMem(0xda9e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3c20, gbc.sp());
        EXPECT(0xdaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9e));
        EXPECT(0xb5, gbc.readMem(0xda9f));
        // CB B5 01B5
        gbc.setState(0x243, 0xb86, 0x7580, 0x8fbe, 0xfc56, 0x8a6b, 0x0, 0x1);
        gbc.writeMem(0x243, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb86, gbc.sp());
        EXPECT(0x245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01B6
        gbc.setState(0xb1d3, 0x3f06, 0x1b20, 0x3708, 0xf703, 0xcd1d, 0x0, 0x0);
        gbc.writeMem(0xb1d3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3f06, gbc.sp());
        EXPECT(0xb1d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d3));
        EXPECT(0xb5, gbc.readMem(0xb1d4));
        // CB B5 01B7
        gbc.setState(0x65e1, 0xbd2, 0x3f90, 0x5cab, 0xc252, 0x468f, 0x1, 0x1);
        gbc.writeMem(0x65e1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbd2, gbc.sp());
        EXPECT(0x65e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01B8
        gbc.setState(0x13aa, 0x4451, 0x4780, 0xc0dc, 0xd92d, 0xcd56, 0x1, 0x1);
        gbc.writeMem(0x13aa, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4451, gbc.sp());
        EXPECT(0x13ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01B9
        gbc.setState(0x2b7f, 0x6884, 0xdee0, 0xc675, 0xb187, 0xb252, 0x0, 0x1);
        gbc.writeMem(0x2b7f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6884, gbc.sp());
        EXPECT(0x2b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01BA
        gbc.setState(0x31fc, 0xb655, 0xfa70, 0x1ac9, 0xa84, 0xe091, 0x0, 0x1);
        gbc.writeMem(0x31fc, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb655, gbc.sp());
        EXPECT(0x31fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01BB
        gbc.setState(0x614f, 0xe26b, 0xe890, 0xcc7b, 0xe0c2, 0x86f, 0x1, 0x1);
        gbc.writeMem(0x614f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe26b, gbc.sp());
        EXPECT(0x6151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01BC
        gbc.setState(0x2033, 0x80d6, 0xb090, 0xe817, 0x2506, 0x28ab, 0x0, 0x1);
        gbc.writeMem(0x2033, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x80d6, gbc.sp());
        EXPECT(0x2035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01BD
        gbc.setState(0x4bcc, 0x326f, 0x2290, 0xc2ea, 0xfb05, 0x857d, 0x1, 0x0);
        gbc.writeMem(0x4bcc, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x326f, gbc.sp());
        EXPECT(0x4bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01BE
        gbc.setState(0x19ec, 0xb079, 0x2bb0, 0x4191, 0x9484, 0x19a3, 0x0, 0x0);
        gbc.writeMem(0x19ec, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb079, gbc.sp());
        EXPECT(0x19ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01BF
        gbc.setState(0x2eb1, 0xe95f, 0xd400, 0x87bd, 0xafba, 0x30cf, 0x0, 0x0);
        gbc.writeMem(0x2eb1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe95f, gbc.sp());
        EXPECT(0x2eb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01C0
        gbc.setState(0xaa49, 0xc0de, 0x2320, 0x817a, 0x2db8, 0xbef2, 0x0, 0x0);
        gbc.writeMem(0xaa49, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc0de, gbc.sp());
        EXPECT(0xaa4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa49));
        EXPECT(0xb5, gbc.readMem(0xaa4a));
        // CB B5 01C1
        gbc.setState(0x808d, 0x4e38, 0x52a0, 0x47df, 0x14e4, 0x268a, 0x1, 0x1);
        gbc.writeMem(0x808d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4e38, gbc.sp());
        EXPECT(0x808f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x808d));
        EXPECT(0xb5, gbc.readMem(0x808e));
        // CB B5 01C3
        gbc.setState(0x7028, 0xf729, 0x20, 0xc0a3, 0x1c99, 0x4d75, 0x1, 0x1);
        gbc.writeMem(0x7028, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf729, gbc.sp());
        EXPECT(0x702a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01C4
        gbc.setState(0xe0b6, 0x3021, 0x2900, 0x89be, 0xf0d6, 0xc8f8, 0x0, 0x0);
        gbc.writeMem(0xe0b6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3021, gbc.sp());
        EXPECT(0xe0b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b6));
        EXPECT(0xb5, gbc.readMem(0xe0b7));
        // CB B5 01C5
        gbc.setState(0x852f, 0xf2b, 0x2450, 0xd526, 0x469c, 0x5389, 0x1, 0x1);
        gbc.writeMem(0x852f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf2b, gbc.sp());
        EXPECT(0x8531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852f));
        EXPECT(0xb5, gbc.readMem(0x8530));
        // CB B5 01C6
        gbc.setState(0xcc9b, 0x1e2f, 0xc170, 0xa693, 0x30d7, 0x4c6b, 0x1, 0x0);
        gbc.writeMem(0xcc9b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1e2f, gbc.sp());
        EXPECT(0xcc9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc9b));
        EXPECT(0xb5, gbc.readMem(0xcc9c));
        // CB B5 01C7
        gbc.setState(0x5369, 0x2ec, 0xad40, 0x327e, 0x632c, 0x5ef1, 0x1, 0x1);
        gbc.writeMem(0x5369, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2ec, gbc.sp());
        EXPECT(0x536b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01C8
        gbc.setState(0xe6a6, 0x44d3, 0xb740, 0x32be, 0xc162, 0x7777, 0x1, 0x0);
        gbc.writeMem(0xe6a6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x44d3, gbc.sp());
        EXPECT(0xe6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a6));
        EXPECT(0xb5, gbc.readMem(0xe6a7));
        // CB B5 01C9
        gbc.setState(0x4f30, 0x85f8, 0x8ea0, 0xc768, 0x6f31, 0x6919, 0x1, 0x0);
        gbc.writeMem(0x4f30, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x85f8, gbc.sp());
        EXPECT(0x4f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01CA
        gbc.setState(0x7098, 0x951d, 0xaee0, 0xc69c, 0x2138, 0x6140, 0x0, 0x1);
        gbc.writeMem(0x7098, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x951d, gbc.sp());
        EXPECT(0x709a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01CB
        gbc.setState(0xe784, 0x8d1, 0xf0e0, 0xad60, 0x1aa3, 0xcf3b, 0x1, 0x0);
        gbc.writeMem(0xe784, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8d1, gbc.sp());
        EXPECT(0xe786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe784));
        EXPECT(0xb5, gbc.readMem(0xe785));
        // CB B5 01CC
        gbc.setState(0x6a7b, 0x8e30, 0x5080, 0xbe0d, 0xce6b, 0x74ef, 0x0, 0x1);
        gbc.writeMem(0x6a7b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8e30, gbc.sp());
        EXPECT(0x6a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01CD
        gbc.setState(0x7ebe, 0xcb86, 0x74a0, 0xeba6, 0x1266, 0x951d, 0x0, 0x0);
        gbc.writeMem(0x7ebe, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcb86, gbc.sp());
        EXPECT(0x7ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01CE
        gbc.setState(0xb50, 0x5691, 0x9150, 0x8dc, 0x8416, 0x4aa6, 0x1, 0x0);
        gbc.writeMem(0xb50, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5691, gbc.sp());
        EXPECT(0xb52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01CF
        gbc.setState(0x2e5a, 0xa926, 0x3430, 0x90db, 0x282c, 0x92c3, 0x1, 0x0);
        gbc.writeMem(0x2e5a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa926, gbc.sp());
        EXPECT(0x2e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01D0
        gbc.setState(0xa10c, 0x58cb, 0x37a0, 0x790a, 0x15a3, 0xbcab, 0x0, 0x1);
        gbc.writeMem(0xa10c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x58cb, gbc.sp());
        EXPECT(0xa10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa10c));
        EXPECT(0xb5, gbc.readMem(0xa10d));
        // CB B5 01D1
        gbc.setState(0x2, 0x4110, 0xb5d0, 0x5146, 0xa1, 0x1888, 0x0, 0x0);
        gbc.writeMem(0x2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4110, gbc.sp());
        EXPECT(0x4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01D2
        gbc.setState(0xb4c3, 0xe77b, 0x2f0, 0x8dd2, 0xea85, 0xbee1, 0x0, 0x0);
        gbc.writeMem(0xb4c3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe77b, gbc.sp());
        EXPECT(0xb4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c3));
        EXPECT(0xb5, gbc.readMem(0xb4c4));
        // CB B5 01D3
        gbc.setState(0x29af, 0x8dbc, 0x6bf0, 0xefc9, 0x3ea9, 0x1d45, 0x0, 0x1);
        gbc.writeMem(0x29af, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8dbc, gbc.sp());
        EXPECT(0x29b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01D4
        gbc.setState(0x6642, 0x8c6, 0x7260, 0x8506, 0x660c, 0xaf6f, 0x0, 0x0);
        gbc.writeMem(0x6642, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8c6, gbc.sp());
        EXPECT(0x6644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01D5
        gbc.setState(0x355b, 0x546b, 0x31b0, 0x94e2, 0x7573, 0xf9c9, 0x0, 0x1);
        gbc.writeMem(0x355b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x546b, gbc.sp());
        EXPECT(0x355d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01D6
        gbc.setState(0x4230, 0x6720, 0x9ec0, 0x847f, 0xf9e6, 0xd39b, 0x1, 0x1);
        gbc.writeMem(0x4230, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6720, gbc.sp());
        EXPECT(0x4232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01D7
        gbc.setState(0x6d22, 0xac82, 0xb930, 0xe09e, 0x5ab1, 0x3552, 0x0, 0x1);
        gbc.writeMem(0x6d22, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xac82, gbc.sp());
        EXPECT(0x6d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01D8
        gbc.setState(0x7b7b, 0xb77d, 0xcec0, 0x83bb, 0xd7a3, 0xbb70, 0x1, 0x0);
        gbc.writeMem(0x7b7b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb77d, gbc.sp());
        EXPECT(0x7b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01D9
        gbc.setState(0x6d94, 0x2a1b, 0x5540, 0x7eb0, 0x5965, 0x7cc6, 0x1, 0x1);
        gbc.writeMem(0x6d94, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2a1b, gbc.sp());
        EXPECT(0x6d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01DB
        gbc.setState(0xa46c, 0xd948, 0xc250, 0x42f, 0x251, 0xa289, 0x1, 0x0);
        gbc.writeMem(0xa46c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd948, gbc.sp());
        EXPECT(0xa46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46c));
        EXPECT(0xb5, gbc.readMem(0xa46d));
        // CB B5 01DC
        gbc.setState(0x837e, 0xa40a, 0x3940, 0xa552, 0x8739, 0xc1fe, 0x1, 0x1);
        gbc.writeMem(0x837e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa40a, gbc.sp());
        EXPECT(0x8380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837e));
        EXPECT(0xb5, gbc.readMem(0x837f));
        // CB B5 01DD
        gbc.setState(0xaf79, 0x94d1, 0x1260, 0x3dcb, 0xbb38, 0x9961, 0x1, 0x1);
        gbc.writeMem(0xaf79, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x94d1, gbc.sp());
        EXPECT(0xaf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf79));
        EXPECT(0xb5, gbc.readMem(0xaf7a));
        // CB B5 01DF
        gbc.setState(0xb664, 0xdfe7, 0x9d0, 0x4424, 0x3366, 0xd554, 0x1, 0x0);
        gbc.writeMem(0xb664, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdfe7, gbc.sp());
        EXPECT(0xb666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb664));
        EXPECT(0xb5, gbc.readMem(0xb665));
        // CB B5 01E0
        gbc.setState(0xc18c, 0xe378, 0xadf0, 0xa9a8, 0xa933, 0xaebe, 0x1, 0x0);
        gbc.writeMem(0xc18c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe378, gbc.sp());
        EXPECT(0xc18e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc18c));
        EXPECT(0xb5, gbc.readMem(0xc18d));
        // CB B5 01E1
        gbc.setState(0xe35c, 0x77a1, 0x34c0, 0x8d32, 0xa5bc, 0x6389, 0x1, 0x0);
        gbc.writeMem(0xe35c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x77a1, gbc.sp());
        EXPECT(0xe35e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35c));
        EXPECT(0xb5, gbc.readMem(0xe35d));
        // CB B5 01E2
        gbc.setState(0x60c3, 0x42f3, 0xda30, 0x171, 0xe269, 0xd129, 0x0, 0x1);
        gbc.writeMem(0x60c3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x42f3, gbc.sp());
        EXPECT(0x60c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01E3
        gbc.setState(0xab89, 0xa1d0, 0xcec0, 0x4a31, 0xd59a, 0x9d0e, 0x1, 0x1);
        gbc.writeMem(0xab89, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa1d0, gbc.sp());
        EXPECT(0xab8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab89));
        EXPECT(0xb5, gbc.readMem(0xab8a));
        // CB B5 01E4
        gbc.setState(0xc32b, 0x23c4, 0x5e40, 0xf82, 0xb59a, 0xf3ee, 0x0, 0x0);
        gbc.writeMem(0xc32b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x23c4, gbc.sp());
        EXPECT(0xc32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32b));
        EXPECT(0xb5, gbc.readMem(0xc32c));
        // CB B5 01E5
        gbc.setState(0x132c, 0x3c33, 0x350, 0x42a0, 0x33fd, 0xc903, 0x0, 0x0);
        gbc.writeMem(0x132c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3c33, gbc.sp());
        EXPECT(0x132e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01E7
        gbc.setState(0xc9a, 0xbe8b, 0x3900, 0x5cab, 0x9bcb, 0x698e, 0x1, 0x1);
        gbc.writeMem(0xc9a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbe8b, gbc.sp());
        EXPECT(0xc9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01E8
        gbc.setState(0x772c, 0x9bfa, 0x3f60, 0xb431, 0x8e47, 0xf592, 0x0, 0x1);
        gbc.writeMem(0x772c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9bfa, gbc.sp());
        EXPECT(0x772e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01E9
        gbc.setState(0xc343, 0x8260, 0xa890, 0x86b6, 0xefa8, 0x1e25, 0x0, 0x0);
        gbc.writeMem(0xc343, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8260, gbc.sp());
        EXPECT(0xc345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc343));
        EXPECT(0xb5, gbc.readMem(0xc344));
        // CB B5 01EA
        gbc.setState(0xb7e6, 0x8db4, 0x95f0, 0x1c1b, 0x6142, 0xe857, 0x1, 0x1);
        gbc.writeMem(0xb7e6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8db4, gbc.sp());
        EXPECT(0xb7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e6));
        EXPECT(0xb5, gbc.readMem(0xb7e7));
        // CB B5 01EB
        gbc.setState(0x70a6, 0x80fe, 0x60f0, 0xd1b9, 0x2132, 0x7edb, 0x0, 0x1);
        gbc.writeMem(0x70a6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x80fe, gbc.sp());
        EXPECT(0x70a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01ED
        gbc.setState(0x2b69, 0x6b84, 0xff70, 0x1093, 0xc0cb, 0x1b6d, 0x0, 0x0);
        gbc.writeMem(0x2b69, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6b84, gbc.sp());
        EXPECT(0x2b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01EE
        gbc.setState(0x62d5, 0xa9c7, 0x9f80, 0x55dc, 0x90f, 0x34d4, 0x1, 0x0);
        gbc.writeMem(0x62d5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa9c7, gbc.sp());
        EXPECT(0x62d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01F0
        gbc.setState(0xd33, 0x1daf, 0xad0, 0x97a7, 0xe68d, 0x5f67, 0x1, 0x0);
        gbc.writeMem(0xd33, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1daf, gbc.sp());
        EXPECT(0xd35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01F1
        gbc.setState(0x3a0f, 0xd57a, 0x10c0, 0xbb84, 0x6500, 0x5fdb, 0x1, 0x1);
        gbc.writeMem(0x3a0f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd57a, gbc.sp());
        EXPECT(0x3a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01F2
        gbc.setState(0x95db, 0x1ca9, 0xa510, 0x2c99, 0x3e96, 0x71e7, 0x0, 0x1);
        gbc.writeMem(0x95db, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1ca9, gbc.sp());
        EXPECT(0x95dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95db));
        EXPECT(0xb5, gbc.readMem(0x95dc));
        // CB B5 01F3
        gbc.setState(0xe439, 0x4ffa, 0x880, 0x206f, 0x5c32, 0xbb37, 0x0, 0x1);
        gbc.writeMem(0xe439, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4ffa, gbc.sp());
        EXPECT(0xe43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe439));
        EXPECT(0xb5, gbc.readMem(0xe43a));
        // CB B5 01F5
        gbc.setState(0x602d, 0xc8a, 0xd740, 0x67bf, 0x9afa, 0xeba9, 0x1, 0x1);
        gbc.writeMem(0x602d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc8a, gbc.sp());
        EXPECT(0x602f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01F6
        gbc.setState(0x6bfd, 0x9563, 0x4f50, 0x238d, 0xdaa7, 0x1b74, 0x1, 0x1);
        gbc.writeMem(0x6bfd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9563, gbc.sp());
        EXPECT(0x6bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01F7
        gbc.setState(0x58ac, 0x8cf8, 0x7f40, 0xd8e1, 0xf4d5, 0x36ba, 0x0, 0x0);
        gbc.writeMem(0x58ac, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8cf8, gbc.sp());
        EXPECT(0x58ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01F8
        gbc.setState(0x114c, 0x31d8, 0xb3a0, 0x34bd, 0xa0bb, 0x5dbb, 0x0, 0x0);
        gbc.writeMem(0x114c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x31d8, gbc.sp());
        EXPECT(0x114e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01F9
        gbc.setState(0xbc89, 0x891b, 0x8fc0, 0xbe2, 0x8681, 0xdcc2, 0x0, 0x1);
        gbc.writeMem(0xbc89, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x891b, gbc.sp());
        EXPECT(0xbc8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc89));
        EXPECT(0xb5, gbc.readMem(0xbc8a));
        // CB B5 01FA
        gbc.setState(0xab9c, 0x41d9, 0x17f0, 0xdec5, 0xc22, 0xbf0c, 0x0, 0x1);
        gbc.writeMem(0xab9c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x41d9, gbc.sp());
        EXPECT(0xab9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9c));
        EXPECT(0xb5, gbc.readMem(0xab9d));
        // CB B5 01FB
        gbc.setState(0x6789, 0x83b1, 0x3a40, 0xb249, 0x1d7e, 0xdb9b, 0x1, 0x1);
        gbc.writeMem(0x6789, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x83b1, gbc.sp());
        EXPECT(0x678b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01FC
        gbc.setState(0x4fd1, 0xf7bc, 0x2e90, 0x4651, 0xd274, 0xf27a, 0x0, 0x1);
        gbc.writeMem(0x4fd1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf7bc, gbc.sp());
        EXPECT(0x4fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 01FD
        gbc.setState(0x858a, 0xd55a, 0x4760, 0x27ef, 0x3064, 0x2125, 0x1, 0x1);
        gbc.writeMem(0x858a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd55a, gbc.sp());
        EXPECT(0x858c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858a));
        EXPECT(0xb5, gbc.readMem(0x858b));
        // CB B5 01FE
        gbc.setState(0x2e0c, 0xf190, 0xede0, 0x4e24, 0x7cf9, 0x9aaa, 0x0, 0x1);
        gbc.writeMem(0x2e0c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf190, gbc.sp());
        EXPECT(0x2e0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 01FF
        gbc.setState(0x273, 0xdb1c, 0x2390, 0x88b7, 0xc393, 0x9eac, 0x1, 0x0);
        gbc.writeMem(0x273, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdb1c, gbc.sp());
        EXPECT(0x275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0200
        gbc.setState(0x3bb4, 0xa642, 0x24e0, 0x4e33, 0x41b7, 0xd2bc, 0x1, 0x1);
        gbc.writeMem(0x3bb4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa642, gbc.sp());
        EXPECT(0x3bb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0202
        gbc.setState(0x2c43, 0xb5e1, 0x8b30, 0x9a2b, 0xbc6a, 0xdb47, 0x0, 0x1);
        gbc.writeMem(0x2c43, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb5e1, gbc.sp());
        EXPECT(0x2c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0203
        gbc.setState(0x4e7a, 0xd914, 0x7b30, 0x7808, 0x79f5, 0x307f, 0x1, 0x0);
        gbc.writeMem(0x4e7a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd914, gbc.sp());
        EXPECT(0x4e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0207
        gbc.setState(0x4c8c, 0xc48a, 0x5ed0, 0xf410, 0xd30e, 0x5204, 0x1, 0x1);
        gbc.writeMem(0x4c8c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc48a, gbc.sp());
        EXPECT(0x4c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0208
        gbc.setState(0x9db, 0x4f16, 0x3700, 0x100f, 0x5e2a, 0x7fcf, 0x1, 0x1);
        gbc.writeMem(0x9db, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4f16, gbc.sp());
        EXPECT(0x9dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0209
        gbc.setState(0x52b4, 0xe203, 0x1190, 0x8c51, 0x3e9b, 0x71ac, 0x1, 0x0);
        gbc.writeMem(0x52b4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe203, gbc.sp());
        EXPECT(0x52b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 020A
        gbc.setState(0x673, 0x1b9e, 0xfef0, 0x8cee, 0x2ac5, 0x838e, 0x0, 0x0);
        gbc.writeMem(0x673, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1b9e, gbc.sp());
        EXPECT(0x675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 020B
        gbc.setState(0x291f, 0xa6b3, 0xb970, 0xba5d, 0x660a, 0xd18a, 0x1, 0x1);
        gbc.writeMem(0x291f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa6b3, gbc.sp());
        EXPECT(0x2921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 020C
        gbc.setState(0x7748, 0x6c78, 0xa080, 0x602a, 0x3240, 0x28d0, 0x1, 0x0);
        gbc.writeMem(0x7748, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6c78, gbc.sp());
        EXPECT(0x774a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 020D
        gbc.setState(0x6e1c, 0x70b9, 0x9b00, 0xc63d, 0x799f, 0x158c, 0x1, 0x1);
        gbc.writeMem(0x6e1c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x70b9, gbc.sp());
        EXPECT(0x6e1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 020E
        gbc.setState(0x7db2, 0x3a45, 0x4340, 0x3c9c, 0xd5e1, 0xfe26, 0x0, 0x0);
        gbc.writeMem(0x7db2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3a45, gbc.sp());
        EXPECT(0x7db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 020F
        gbc.setState(0xaccf, 0x29db, 0xacb0, 0x2330, 0xa39e, 0xc13e, 0x0, 0x1);
        gbc.writeMem(0xaccf, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x29db, gbc.sp());
        EXPECT(0xacd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaccf));
        EXPECT(0xb5, gbc.readMem(0xacd0));
        // CB B5 0210
        gbc.setState(0xe16a, 0x8b97, 0x1d00, 0xbeab, 0xf9b7, 0xe48d, 0x0, 0x0);
        gbc.writeMem(0xe16a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8b97, gbc.sp());
        EXPECT(0xe16c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16a));
        EXPECT(0xb5, gbc.readMem(0xe16b));
        // CB B5 0211
        gbc.setState(0x3f0f, 0xdb03, 0xe1f0, 0xd814, 0xab90, 0x89aa, 0x1, 0x0);
        gbc.writeMem(0x3f0f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdb03, gbc.sp());
        EXPECT(0x3f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0212
        gbc.setState(0xa917, 0xf103, 0x1d10, 0x955, 0x7088, 0x9969, 0x1, 0x0);
        gbc.writeMem(0xa917, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf103, gbc.sp());
        EXPECT(0xa919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa917));
        EXPECT(0xb5, gbc.readMem(0xa918));
        // CB B5 0213
        gbc.setState(0x9616, 0xfbca, 0x2460, 0x4fb, 0x251a, 0x19b2, 0x0, 0x0);
        gbc.writeMem(0x9616, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfbca, gbc.sp());
        EXPECT(0x9618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9616));
        EXPECT(0xb5, gbc.readMem(0x9617));
        // CB B5 0214
        gbc.setState(0xb06f, 0x9bdb, 0x9e70, 0x5e03, 0xff69, 0x3002, 0x1, 0x1);
        gbc.writeMem(0xb06f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9bdb, gbc.sp());
        EXPECT(0xb071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06f));
        EXPECT(0xb5, gbc.readMem(0xb070));
        // CB B5 0215
        gbc.setState(0x1e75, 0x7d0c, 0xd660, 0xcbde, 0x6f2c, 0xe100, 0x1, 0x1);
        gbc.writeMem(0x1e75, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7d0c, gbc.sp());
        EXPECT(0x1e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0216
        gbc.setState(0xde40, 0x8aa2, 0x5960, 0xb65c, 0x20c8, 0x1b45, 0x0, 0x0);
        gbc.writeMem(0xde40, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8aa2, gbc.sp());
        EXPECT(0xde42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde40));
        EXPECT(0xb5, gbc.readMem(0xde41));
        // CB B5 0217
        gbc.setState(0xbfc3, 0x9db8, 0xf1e0, 0xf5de, 0x62d, 0xef10, 0x0, 0x1);
        gbc.writeMem(0xbfc3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9db8, gbc.sp());
        EXPECT(0xbfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc3));
        EXPECT(0xb5, gbc.readMem(0xbfc4));
        // CB B5 0218
        gbc.setState(0x50ed, 0x6d0d, 0x66a0, 0x485e, 0xaeb3, 0xe65a, 0x1, 0x1);
        gbc.writeMem(0x50ed, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6d0d, gbc.sp());
        EXPECT(0x50ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0219
        gbc.setState(0x7997, 0x2841, 0x4630, 0x45fe, 0x7b59, 0x917a, 0x1, 0x0);
        gbc.writeMem(0x7997, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2841, gbc.sp());
        EXPECT(0x7999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 021A
        gbc.setState(0x46c6, 0x2aba, 0x9f30, 0xcb1c, 0x1ffd, 0x704c, 0x1, 0x1);
        gbc.writeMem(0x46c6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2aba, gbc.sp());
        EXPECT(0x46c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 021B
        gbc.setState(0x49ae, 0xa8d3, 0x9040, 0x9f95, 0x4e58, 0x769d, 0x0, 0x0);
        gbc.writeMem(0x49ae, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa8d3, gbc.sp());
        EXPECT(0x49b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 021C
        gbc.setState(0xaee8, 0x8865, 0xe90, 0xe8d0, 0x7aa6, 0x9d1b, 0x0, 0x0);
        gbc.writeMem(0xaee8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8865, gbc.sp());
        EXPECT(0xaeea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee8));
        EXPECT(0xb5, gbc.readMem(0xaee9));
        // CB B5 021D
        gbc.setState(0x1e2, 0x6e58, 0xe430, 0x853d, 0xb430, 0x5afa, 0x1, 0x0);
        gbc.writeMem(0x1e2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6e58, gbc.sp());
        EXPECT(0x1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 021E
        gbc.setState(0xbe26, 0xfeba, 0xbbb0, 0xf8c0, 0x6e9a, 0x54ec, 0x1, 0x0);
        gbc.writeMem(0xbe26, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfeba, gbc.sp());
        EXPECT(0xbe28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe26));
        EXPECT(0xb5, gbc.readMem(0xbe27));
        // CB B5 021F
        gbc.setState(0xa1ee, 0xc595, 0x7ac0, 0x94bf, 0x37f4, 0x5055, 0x0, 0x1);
        gbc.writeMem(0xa1ee, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc595, gbc.sp());
        EXPECT(0xa1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ee));
        EXPECT(0xb5, gbc.readMem(0xa1ef));
        // CB B5 0221
        gbc.setState(0x9d11, 0x7b17, 0x2970, 0x3d35, 0xe8c2, 0x5b07, 0x1, 0x0);
        gbc.writeMem(0x9d11, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7b17, gbc.sp());
        EXPECT(0x9d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d11));
        EXPECT(0xb5, gbc.readMem(0x9d12));
        // CB B5 0222
        gbc.setState(0xcf74, 0xb68c, 0x97b0, 0xb3ff, 0x99f5, 0xde16, 0x0, 0x0);
        gbc.writeMem(0xcf74, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb68c, gbc.sp());
        EXPECT(0xcf76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf74));
        EXPECT(0xb5, gbc.readMem(0xcf75));
        // CB B5 0223
        gbc.setState(0x2bc2, 0xb2d8, 0x4e20, 0xe714, 0xaa88, 0xe5ef, 0x0, 0x1);
        gbc.writeMem(0x2bc2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb2d8, gbc.sp());
        EXPECT(0x2bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0224
        gbc.setState(0x184c, 0x2e31, 0xb480, 0xf10, 0xc1d9, 0x323c, 0x0, 0x1);
        gbc.writeMem(0x184c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2e31, gbc.sp());
        EXPECT(0x184e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0225
        gbc.setState(0xaea7, 0xcbd2, 0xff0, 0xe358, 0x43c9, 0x6d0e, 0x0, 0x0);
        gbc.writeMem(0xaea7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcbd2, gbc.sp());
        EXPECT(0xaea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea7));
        EXPECT(0xb5, gbc.readMem(0xaea8));
        // CB B5 0226
        gbc.setState(0xdb5f, 0xb8af, 0xf5d0, 0xec1d, 0x6ce5, 0x58cb, 0x1, 0x0);
        gbc.writeMem(0xdb5f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb8af, gbc.sp());
        EXPECT(0xdb61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb5f));
        EXPECT(0xb5, gbc.readMem(0xdb60));
        // CB B5 0227
        gbc.setState(0x6d65, 0x3edc, 0x4d60, 0xabba, 0x2c, 0xc7c0, 0x1, 0x1);
        gbc.writeMem(0x6d65, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3edc, gbc.sp());
        EXPECT(0x6d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0228
        gbc.setState(0x60a4, 0xdef7, 0x67b0, 0x27de, 0xcaef, 0x6c40, 0x0, 0x0);
        gbc.writeMem(0x60a4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdef7, gbc.sp());
        EXPECT(0x60a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0229
        gbc.setState(0x25d2, 0xe627, 0x3280, 0xc636, 0xa2bc, 0x80a7, 0x0, 0x0);
        gbc.writeMem(0x25d2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe627, gbc.sp());
        EXPECT(0x25d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 022A
        gbc.setState(0x9fda, 0xfcad, 0xfa10, 0x9fd7, 0x2716, 0x7fb7, 0x0, 0x1);
        gbc.writeMem(0x9fda, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfcad, gbc.sp());
        EXPECT(0x9fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fda));
        EXPECT(0xb5, gbc.readMem(0x9fdb));
        // CB B5 022B
        gbc.setState(0x747d, 0x25d8, 0x5660, 0xa62, 0xdea0, 0x78e0, 0x0, 0x0);
        gbc.writeMem(0x747d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x25d8, gbc.sp());
        EXPECT(0x747f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 022C
        gbc.setState(0xe586, 0xcb1a, 0xab0, 0x12de, 0x8197, 0xa763, 0x1, 0x0);
        gbc.writeMem(0xe586, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcb1a, gbc.sp());
        EXPECT(0xe588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe586));
        EXPECT(0xb5, gbc.readMem(0xe587));
        // CB B5 022D
        gbc.setState(0xda7e, 0x9e93, 0x21a0, 0x3f5d, 0x7794, 0x1ae9, 0x1, 0x1);
        gbc.writeMem(0xda7e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9e93, gbc.sp());
        EXPECT(0xda80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7e));
        EXPECT(0xb5, gbc.readMem(0xda7f));
        // CB B5 022E
        gbc.setState(0xa02a, 0x7a57, 0x9210, 0xc9e3, 0x4eb4, 0x22ba, 0x1, 0x1);
        gbc.writeMem(0xa02a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7a57, gbc.sp());
        EXPECT(0xa02c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02a));
        EXPECT(0xb5, gbc.readMem(0xa02b));
        // CB B5 022F
        gbc.setState(0x63a4, 0xf709, 0x5af0, 0x65ca, 0x4a4d, 0x590c, 0x1, 0x1);
        gbc.writeMem(0x63a4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf709, gbc.sp());
        EXPECT(0x63a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0230
        gbc.setState(0x35fe, 0x28a6, 0x1990, 0x4a17, 0x348c, 0xa2d4, 0x1, 0x1);
        gbc.writeMem(0x35fe, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x28a6, gbc.sp());
        EXPECT(0x3600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0231
        gbc.setState(0x691c, 0x3c9c, 0xd520, 0x22aa, 0xde7d, 0x4ee8, 0x0, 0x1);
        gbc.writeMem(0x691c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3c9c, gbc.sp());
        EXPECT(0x691e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0232
        gbc.setState(0xac53, 0x6488, 0x3be0, 0x1561, 0x9903, 0xc300, 0x1, 0x0);
        gbc.writeMem(0xac53, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6488, gbc.sp());
        EXPECT(0xac55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac53));
        EXPECT(0xb5, gbc.readMem(0xac54));
        // CB B5 0233
        gbc.setState(0x2e33, 0xc12c, 0xf6f0, 0xf6ef, 0xe11, 0x6fd3, 0x0, 0x0);
        gbc.writeMem(0x2e33, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc12c, gbc.sp());
        EXPECT(0x2e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0234
        gbc.setState(0xe265, 0x7692, 0x97a0, 0xf7e9, 0xd03, 0x90ab, 0x0, 0x1);
        gbc.writeMem(0xe265, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7692, gbc.sp());
        EXPECT(0xe267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe265));
        EXPECT(0xb5, gbc.readMem(0xe266));
        // CB B5 0235
        gbc.setState(0xa2eb, 0xb70c, 0x80d0, 0xec3a, 0x361f, 0xcc40, 0x1, 0x0);
        gbc.writeMem(0xa2eb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb70c, gbc.sp());
        EXPECT(0xa2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2eb));
        EXPECT(0xb5, gbc.readMem(0xa2ec));
        // CB B5 0237
        gbc.setState(0x5d1f, 0x99f9, 0xebb0, 0x4de7, 0x4cdf, 0x9397, 0x0, 0x1);
        gbc.writeMem(0x5d1f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x99f9, gbc.sp());
        EXPECT(0x5d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0239
        gbc.setState(0xdc19, 0x3da6, 0x6470, 0x2075, 0xb624, 0x22d3, 0x1, 0x1);
        gbc.writeMem(0xdc19, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3da6, gbc.sp());
        EXPECT(0xdc1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc19));
        EXPECT(0xb5, gbc.readMem(0xdc1a));
        // CB B5 023A
        gbc.setState(0xef59, 0x4477, 0x3980, 0xf84a, 0x3dd2, 0x281b, 0x1, 0x0);
        gbc.writeMem(0xef59, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4477, gbc.sp());
        EXPECT(0xef5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef59));
        EXPECT(0xb5, gbc.readMem(0xef5a));
        // CB B5 023B
        gbc.setState(0x9b94, 0x4901, 0xec00, 0x6af, 0x508f, 0x600c, 0x0, 0x0);
        gbc.writeMem(0x9b94, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4901, gbc.sp());
        EXPECT(0x9b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b94));
        EXPECT(0xb5, gbc.readMem(0x9b95));
        // CB B5 023C
        gbc.setState(0xa844, 0x9eae, 0x1d00, 0xa94d, 0x9d2, 0x9063, 0x0, 0x0);
        gbc.writeMem(0xa844, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9eae, gbc.sp());
        EXPECT(0xa846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa844));
        EXPECT(0xb5, gbc.readMem(0xa845));
        // CB B5 023D
        gbc.setState(0xa763, 0xaddf, 0xc990, 0x1480, 0x4c64, 0x80a3, 0x1, 0x0);
        gbc.writeMem(0xa763, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xaddf, gbc.sp());
        EXPECT(0xa765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa763));
        EXPECT(0xb5, gbc.readMem(0xa764));
        // CB B5 023E
        gbc.setState(0x3bb6, 0x642, 0xd8a0, 0xa2fc, 0x48f, 0x551f, 0x0, 0x0);
        gbc.writeMem(0x3bb6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x642, gbc.sp());
        EXPECT(0x3bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 023F
        gbc.setState(0x6f67, 0x9f7a, 0x8ba0, 0x3d66, 0x769f, 0x77e7, 0x0, 0x0);
        gbc.writeMem(0x6f67, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9f7a, gbc.sp());
        EXPECT(0x6f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0240
        gbc.setState(0x423a, 0xe18, 0x4e10, 0x2265, 0xfe76, 0x9e2, 0x1, 0x0);
        gbc.writeMem(0x423a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe18, gbc.sp());
        EXPECT(0x423c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0242
        gbc.setState(0x1825, 0xab8a, 0xbeb0, 0x8c71, 0xf3f1, 0x1a49, 0x1, 0x0);
        gbc.writeMem(0x1825, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xab8a, gbc.sp());
        EXPECT(0x1827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0243
        gbc.setState(0x324c, 0xb114, 0xc8c0, 0xf471, 0xbbff, 0xe1fd, 0x0, 0x1);
        gbc.writeMem(0x324c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb114, gbc.sp());
        EXPECT(0x324e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0244
        gbc.setState(0x84cb, 0x81c2, 0x2d0, 0x8d41, 0x50e9, 0xe899, 0x0, 0x0);
        gbc.writeMem(0x84cb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x81c2, gbc.sp());
        EXPECT(0x84cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84cb));
        EXPECT(0xb5, gbc.readMem(0x84cc));
        // CB B5 0245
        gbc.setState(0xc65f, 0x9889, 0x3bb0, 0x21ab, 0x78ab, 0xaf6, 0x1, 0x1);
        gbc.writeMem(0xc65f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9889, gbc.sp());
        EXPECT(0xc661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc65f));
        EXPECT(0xb5, gbc.readMem(0xc660));
        // CB B5 0246
        gbc.setState(0x68ab, 0x33ce, 0x41a0, 0x2077, 0xabae, 0xae72, 0x0, 0x1);
        gbc.writeMem(0x68ab, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x33ce, gbc.sp());
        EXPECT(0x68ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0247
        gbc.setState(0xc33, 0xbc8d, 0xee40, 0x396e, 0xd8be, 0x2b4a, 0x1, 0x0);
        gbc.writeMem(0xc33, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbc8d, gbc.sp());
        EXPECT(0xc35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0248
        gbc.setState(0x554c, 0xcbe3, 0x8570, 0x4ed4, 0x2419, 0x27dd, 0x0, 0x0);
        gbc.writeMem(0x554c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcbe3, gbc.sp());
        EXPECT(0x554e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0249
        gbc.setState(0xc0eb, 0xffef, 0x7ac0, 0x9443, 0x52b9, 0xce6c, 0x0, 0x0);
        gbc.writeMem(0xc0eb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xffef, gbc.sp());
        EXPECT(0xc0ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0eb));
        EXPECT(0xb5, gbc.readMem(0xc0ec));
        // CB B5 024A
        gbc.setState(0x281c, 0xb061, 0xeaf0, 0x431e, 0x9dc5, 0xcf64, 0x1, 0x0);
        gbc.writeMem(0x281c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb061, gbc.sp());
        EXPECT(0x281e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 024B
        gbc.setState(0x4810, 0x3682, 0x6270, 0x3637, 0xbb9a, 0xc644, 0x0, 0x1);
        gbc.writeMem(0x4810, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3682, gbc.sp());
        EXPECT(0x4812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 024C
        gbc.setState(0x7271, 0xad66, 0x3210, 0x7b74, 0x2910, 0x81db, 0x1, 0x0);
        gbc.writeMem(0x7271, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xad66, gbc.sp());
        EXPECT(0x7273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 024D
        gbc.setState(0xd142, 0x46d8, 0x7820, 0x8f54, 0xb153, 0xcb77, 0x0, 0x0);
        gbc.writeMem(0xd142, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x46d8, gbc.sp());
        EXPECT(0xd144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd142));
        EXPECT(0xb5, gbc.readMem(0xd143));
        // CB B5 024E
        gbc.setState(0xab33, 0xb2f, 0x3220, 0xf0cb, 0x8a06, 0xbe2e, 0x1, 0x1);
        gbc.writeMem(0xab33, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb2f, gbc.sp());
        EXPECT(0xab35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab33));
        EXPECT(0xb5, gbc.readMem(0xab34));
        // CB B5 024F
        gbc.setState(0xa4e6, 0x5ca, 0x67f0, 0xb7df, 0xe7e7, 0xfd5c, 0x1, 0x1);
        gbc.writeMem(0xa4e6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5ca, gbc.sp());
        EXPECT(0xa4e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e6));
        EXPECT(0xb5, gbc.readMem(0xa4e7));
        // CB B5 0250
        gbc.setState(0x7307, 0xac99, 0x9730, 0xc370, 0x334, 0xa691, 0x0, 0x0);
        gbc.writeMem(0x7307, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xac99, gbc.sp());
        EXPECT(0x7309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0252
        gbc.setState(0x909b, 0xd27c, 0x1120, 0x2fdd, 0xeb29, 0x2da7, 0x1, 0x1);
        gbc.writeMem(0x909b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd27c, gbc.sp());
        EXPECT(0x909d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909b));
        EXPECT(0xb5, gbc.readMem(0x909c));
        // CB B5 0253
        gbc.setState(0xeb1e, 0x74c4, 0x7330, 0xa6cf, 0xc664, 0x5b8f, 0x0, 0x1);
        gbc.writeMem(0xeb1e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x74c4, gbc.sp());
        EXPECT(0xeb20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1e));
        EXPECT(0xb5, gbc.readMem(0xeb1f));
        // CB B5 0254
        gbc.setState(0xcc3d, 0xd51e, 0x82a0, 0x1983, 0x2285, 0x6b72, 0x1, 0x0);
        gbc.writeMem(0xcc3d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd51e, gbc.sp());
        EXPECT(0xcc3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3d));
        EXPECT(0xb5, gbc.readMem(0xcc3e));
        // CB B5 0255
        gbc.setState(0xd18, 0xf27d, 0x4910, 0x86d8, 0x1a1e, 0xe1bb, 0x0, 0x0);
        gbc.writeMem(0xd18, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf27d, gbc.sp());
        EXPECT(0xd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0256
        gbc.setState(0xab39, 0x9c61, 0x6910, 0x26d5, 0xad36, 0x3081, 0x1, 0x0);
        gbc.writeMem(0xab39, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9c61, gbc.sp());
        EXPECT(0xab3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab39));
        EXPECT(0xb5, gbc.readMem(0xab3a));
        // CB B5 0257
        gbc.setState(0x2c66, 0xb3f2, 0x5850, 0xe302, 0x241f, 0x5a86, 0x1, 0x1);
        gbc.writeMem(0x2c66, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb3f2, gbc.sp());
        EXPECT(0x2c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0258
        gbc.setState(0xcee1, 0xaa45, 0x59d0, 0x950e, 0x9f66, 0x72a6, 0x0, 0x0);
        gbc.writeMem(0xcee1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xaa45, gbc.sp());
        EXPECT(0xcee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee1));
        EXPECT(0xb5, gbc.readMem(0xcee2));
        // CB B5 0259
        gbc.setState(0x62a6, 0xef34, 0x6140, 0xc899, 0x7b36, 0xc984, 0x0, 0x0);
        gbc.writeMem(0x62a6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xef34, gbc.sp());
        EXPECT(0x62a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 025A
        gbc.setState(0x11f0, 0x5c18, 0x9bf0, 0x2a97, 0x77be, 0xda18, 0x0, 0x0);
        gbc.writeMem(0x11f0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5c18, gbc.sp());
        EXPECT(0x11f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 025B
        gbc.setState(0x59c7, 0x461f, 0xe220, 0x821c, 0x40ea, 0x278d, 0x0, 0x0);
        gbc.writeMem(0x59c7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x461f, gbc.sp());
        EXPECT(0x59c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 025C
        gbc.setState(0x57a8, 0x7cee, 0x36b0, 0x715a, 0x22e3, 0x3d0e, 0x1, 0x1);
        gbc.writeMem(0x57a8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7cee, gbc.sp());
        EXPECT(0x57aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 025D
        gbc.setState(0x6603, 0xee17, 0x6bb0, 0x4783, 0xcf64, 0xe42c, 0x0, 0x1);
        gbc.writeMem(0x6603, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xee17, gbc.sp());
        EXPECT(0x6605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 025E
        gbc.setState(0x2882, 0x313b, 0xbea0, 0x8dcd, 0x3b48, 0x6629, 0x0, 0x0);
        gbc.writeMem(0x2882, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x313b, gbc.sp());
        EXPECT(0x2884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 025F
        gbc.setState(0xda63, 0xc5f3, 0xee20, 0x74d, 0x2a9a, 0x2dc0, 0x0, 0x0);
        gbc.writeMem(0xda63, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc5f3, gbc.sp());
        EXPECT(0xda65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda63));
        EXPECT(0xb5, gbc.readMem(0xda64));
        // CB B5 0260
        gbc.setState(0x5d01, 0x3109, 0xbf0, 0x5761, 0xf3ca, 0xb96, 0x1, 0x1);
        gbc.writeMem(0x5d01, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3109, gbc.sp());
        EXPECT(0x5d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0261
        gbc.setState(0x322f, 0x5e3e, 0x5a60, 0xc1b, 0xc17b, 0x40c9, 0x0, 0x1);
        gbc.writeMem(0x322f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5e3e, gbc.sp());
        EXPECT(0x3231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0262
        gbc.setState(0xaabf, 0x5215, 0xc370, 0x9f49, 0x7a96, 0x51b5, 0x0, 0x0);
        gbc.writeMem(0xaabf, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5215, gbc.sp());
        EXPECT(0xaac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaabf));
        EXPECT(0xb5, gbc.readMem(0xaac0));
        // CB B5 0263
        gbc.setState(0xdc1e, 0x588f, 0xa1b0, 0x4f39, 0xb5c6, 0xdb43, 0x0, 0x1);
        gbc.writeMem(0xdc1e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x588f, gbc.sp());
        EXPECT(0xdc20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1e));
        EXPECT(0xb5, gbc.readMem(0xdc1f));
        // CB B5 0264
        gbc.setState(0x1e76, 0x2297, 0xf3b0, 0x1fd6, 0x6fe3, 0x242b, 0x0, 0x1);
        gbc.writeMem(0x1e76, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2297, gbc.sp());
        EXPECT(0x1e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0265
        gbc.setState(0xbecc, 0xce5c, 0xb10, 0xb2e7, 0xc137, 0x4739, 0x0, 0x1);
        gbc.writeMem(0xbecc, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xce5c, gbc.sp());
        EXPECT(0xbece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbecc));
        EXPECT(0xb5, gbc.readMem(0xbecd));
        // CB B5 0266
        gbc.setState(0xcc55, 0x98bd, 0xb5d0, 0xab9e, 0x9ce6, 0xa998, 0x0, 0x1);
        gbc.writeMem(0xcc55, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x98bd, gbc.sp());
        EXPECT(0xcc57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc55));
        EXPECT(0xb5, gbc.readMem(0xcc56));
        // CB B5 0267
        gbc.setState(0x7b8d, 0xd398, 0xb640, 0xf8ed, 0x5dd1, 0xf4b7, 0x1, 0x0);
        gbc.writeMem(0x7b8d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd398, gbc.sp());
        EXPECT(0x7b8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0268
        gbc.setState(0xe81b, 0xfef2, 0xd480, 0x1dce, 0xa162, 0x4953, 0x1, 0x0);
        gbc.writeMem(0xe81b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfef2, gbc.sp());
        EXPECT(0xe81d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe81b));
        EXPECT(0xb5, gbc.readMem(0xe81c));
        // CB B5 0269
        gbc.setState(0x435e, 0xd774, 0x37d0, 0xb934, 0x5c32, 0x1f44, 0x1, 0x1);
        gbc.writeMem(0x435e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd774, gbc.sp());
        EXPECT(0x4360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 026A
        gbc.setState(0x9b90, 0xa5e4, 0xa260, 0x220c, 0x22d8, 0xcb7f, 0x0, 0x1);
        gbc.writeMem(0x9b90, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa5e4, gbc.sp());
        EXPECT(0x9b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b90));
        EXPECT(0xb5, gbc.readMem(0x9b91));
        // CB B5 026B
        gbc.setState(0xa108, 0x8c05, 0x15d0, 0x8a34, 0x29de, 0xaa0f, 0x1, 0x0);
        gbc.writeMem(0xa108, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8c05, gbc.sp());
        EXPECT(0xa10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa108));
        EXPECT(0xb5, gbc.readMem(0xa109));
        // CB B5 026C
        gbc.setState(0xe990, 0x8e5f, 0x6e00, 0x1d3e, 0xf07e, 0x1c25, 0x1, 0x0);
        gbc.writeMem(0xe990, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8e5f, gbc.sp());
        EXPECT(0xe992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe990));
        EXPECT(0xb5, gbc.readMem(0xe991));
        // CB B5 026D
        gbc.setState(0x119e, 0xc7c8, 0x4f60, 0x1a05, 0x1f50, 0xb2ac, 0x0, 0x1);
        gbc.writeMem(0x119e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc7c8, gbc.sp());
        EXPECT(0x11a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 026E
        gbc.setState(0xdb57, 0x8fbf, 0xbcd0, 0xafbc, 0xad2d, 0xf372, 0x0, 0x1);
        gbc.writeMem(0xdb57, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8fbf, gbc.sp());
        EXPECT(0xdb59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb57));
        EXPECT(0xb5, gbc.readMem(0xdb58));
        // CB B5 026F
        gbc.setState(0xaf51, 0x41e8, 0xf6f0, 0x8854, 0x7a11, 0x2dec, 0x0, 0x1);
        gbc.writeMem(0xaf51, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x41e8, gbc.sp());
        EXPECT(0xaf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf51));
        EXPECT(0xb5, gbc.readMem(0xaf52));
        // CB B5 0270
        gbc.setState(0x5266, 0xf9d, 0xa7f0, 0x7d32, 0x274c, 0x429a, 0x1, 0x0);
        gbc.writeMem(0x5266, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf9d, gbc.sp());
        EXPECT(0x5268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0271
        gbc.setState(0x284a, 0x5fda, 0x3840, 0x9f8a, 0xd68b, 0x5a19, 0x0, 0x0);
        gbc.writeMem(0x284a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5fda, gbc.sp());
        EXPECT(0x284c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0272
        gbc.setState(0x3753, 0x3f93, 0xb100, 0xcb95, 0x3028, 0x7b0, 0x0, 0x0);
        gbc.writeMem(0x3753, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3f93, gbc.sp());
        EXPECT(0x3755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0273
        gbc.setState(0x99eb, 0x8b94, 0xeb90, 0xbb24, 0x2e83, 0x69ad, 0x0, 0x1);
        gbc.writeMem(0x99eb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8b94, gbc.sp());
        EXPECT(0x99ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99eb));
        EXPECT(0xb5, gbc.readMem(0x99ec));
        // CB B5 0274
        gbc.setState(0x82c9, 0x2c15, 0x5830, 0x31e, 0xd449, 0x3366, 0x0, 0x0);
        gbc.writeMem(0x82c9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2c15, gbc.sp());
        EXPECT(0x82cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c9));
        EXPECT(0xb5, gbc.readMem(0x82ca));
        // CB B5 0275
        gbc.setState(0x34ed, 0x8aa5, 0xcf10, 0xeac6, 0xb2c1, 0x1384, 0x0, 0x1);
        gbc.writeMem(0x34ed, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8aa5, gbc.sp());
        EXPECT(0x34ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0276
        gbc.setState(0xcb4e, 0xf96f, 0x34f0, 0xdb26, 0x9a47, 0xa14a, 0x1, 0x1);
        gbc.writeMem(0xcb4e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf96f, gbc.sp());
        EXPECT(0xcb50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4e));
        EXPECT(0xb5, gbc.readMem(0xcb4f));
        // CB B5 0277
        gbc.setState(0x68dd, 0x3c0, 0x95b0, 0x3dc2, 0x6e30, 0xfd62, 0x0, 0x1);
        gbc.writeMem(0x68dd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3c0, gbc.sp());
        EXPECT(0x68df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0278
        gbc.setState(0xc99c, 0xe93c, 0xf5a0, 0x81a9, 0xeece, 0xedc9, 0x0, 0x1);
        gbc.writeMem(0xc99c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe93c, gbc.sp());
        EXPECT(0xc99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99c));
        EXPECT(0xb5, gbc.readMem(0xc99d));
        // CB B5 0279
        gbc.setState(0xa44f, 0x29ad, 0xf630, 0x4b6b, 0xf0d2, 0x90cb, 0x0, 0x1);
        gbc.writeMem(0xa44f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x29ad, gbc.sp());
        EXPECT(0xa451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44f));
        EXPECT(0xb5, gbc.readMem(0xa450));
        // CB B5 027B
        gbc.setState(0x73e4, 0xd728, 0x3c50, 0xe580, 0xb085, 0xb8f4, 0x1, 0x0);
        gbc.writeMem(0x73e4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd728, gbc.sp());
        EXPECT(0x73e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 027C
        gbc.setState(0x76c6, 0x170f, 0xd2d0, 0x7333, 0x8a55, 0x5558, 0x1, 0x0);
        gbc.writeMem(0x76c6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x170f, gbc.sp());
        EXPECT(0x76c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 027D
        gbc.setState(0x3a0b, 0x6206, 0x50, 0x3028, 0xeffa, 0x1fc7, 0x0, 0x0);
        gbc.writeMem(0x3a0b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6206, gbc.sp());
        EXPECT(0x3a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 027E
        gbc.setState(0x32e2, 0xa047, 0xa6b0, 0xaf7f, 0xd5b2, 0xf2ab, 0x1, 0x1);
        gbc.writeMem(0x32e2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa047, gbc.sp());
        EXPECT(0x32e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 027F
        gbc.setState(0x2340, 0x5894, 0x2260, 0x3b17, 0x7822, 0x9a5, 0x1, 0x1);
        gbc.writeMem(0x2340, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5894, gbc.sp());
        EXPECT(0x2342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0280
        gbc.setState(0x388b, 0x517, 0x3570, 0x2e1a, 0xf2db, 0x6a79, 0x0, 0x1);
        gbc.writeMem(0x388b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x517, gbc.sp());
        EXPECT(0x388d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0281
        gbc.setState(0x8298, 0x67a3, 0x8390, 0x29fe, 0x99f0, 0x1bad, 0x0, 0x0);
        gbc.writeMem(0x8298, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x67a3, gbc.sp());
        EXPECT(0x829a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8298));
        EXPECT(0xb5, gbc.readMem(0x8299));
        // CB B5 0282
        gbc.setState(0x90e1, 0xd314, 0xfdc0, 0x83f9, 0x30cd, 0xb3ac, 0x1, 0x1);
        gbc.writeMem(0x90e1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd314, gbc.sp());
        EXPECT(0x90e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e1));
        EXPECT(0xb5, gbc.readMem(0x90e2));
        // CB B5 0283
        gbc.setState(0xa3df, 0x9557, 0xb430, 0x5aee, 0xf75d, 0xfffc, 0x0, 0x0);
        gbc.writeMem(0xa3df, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9557, gbc.sp());
        EXPECT(0xa3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3df));
        EXPECT(0xb5, gbc.readMem(0xa3e0));
        // CB B5 0284
        gbc.setState(0xa1f7, 0xf3ee, 0x1690, 0x952a, 0x905f, 0x2bd6, 0x1, 0x0);
        gbc.writeMem(0xa1f7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf3ee, gbc.sp());
        EXPECT(0xa1f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f7));
        EXPECT(0xb5, gbc.readMem(0xa1f8));
        // CB B5 0285
        gbc.setState(0x6a57, 0x4e54, 0x1670, 0xf4ee, 0x5786, 0xc5ba, 0x0, 0x1);
        gbc.writeMem(0x6a57, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4e54, gbc.sp());
        EXPECT(0x6a59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0286
        gbc.setState(0x238e, 0xa84a, 0x9940, 0x485a, 0xde2a, 0xd5cb, 0x0, 0x1);
        gbc.writeMem(0x238e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa84a, gbc.sp());
        EXPECT(0x2390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0287
        gbc.setState(0xa65e, 0x66ed, 0x78d0, 0xffd2, 0xcc1a, 0x5d12, 0x1, 0x1);
        gbc.writeMem(0xa65e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x66ed, gbc.sp());
        EXPECT(0xa660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa65e));
        EXPECT(0xb5, gbc.readMem(0xa65f));
        // CB B5 0288
        gbc.setState(0xb865, 0x5e43, 0x1230, 0xfbfc, 0x1c88, 0x62f9, 0x0, 0x1);
        gbc.writeMem(0xb865, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5e43, gbc.sp());
        EXPECT(0xb867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb865));
        EXPECT(0xb5, gbc.readMem(0xb866));
        // CB B5 028B
        gbc.setState(0xde78, 0x4121, 0xb5d0, 0xed3d, 0x2c19, 0xd98, 0x0, 0x1);
        gbc.writeMem(0xde78, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4121, gbc.sp());
        EXPECT(0xde7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde78));
        EXPECT(0xb5, gbc.readMem(0xde79));
        // CB B5 028C
        gbc.setState(0xe0e4, 0xc6b5, 0xc360, 0x3732, 0xca5b, 0x6491, 0x0, 0x1);
        gbc.writeMem(0xe0e4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc6b5, gbc.sp());
        EXPECT(0xe0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e4));
        EXPECT(0xb5, gbc.readMem(0xe0e5));
        // CB B5 028D
        gbc.setState(0x7227, 0xbe4c, 0x6a00, 0xd57, 0x99b9, 0x6fef, 0x0, 0x1);
        gbc.writeMem(0x7227, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbe4c, gbc.sp());
        EXPECT(0x7229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 028E
        gbc.setState(0xec14, 0xfbcc, 0x5e70, 0xb71d, 0xb0de, 0x65e6, 0x1, 0x0);
        gbc.writeMem(0xec14, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfbcc, gbc.sp());
        EXPECT(0xec16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec14));
        EXPECT(0xb5, gbc.readMem(0xec15));
        // CB B5 028F
        gbc.setState(0xabce, 0x9918, 0xc9e0, 0xb9ac, 0xa4b9, 0x5b0c, 0x0, 0x1);
        gbc.writeMem(0xabce, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9918, gbc.sp());
        EXPECT(0xabd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabce));
        EXPECT(0xb5, gbc.readMem(0xabcf));
        // CB B5 0290
        gbc.setState(0xee30, 0x3cd2, 0x72f0, 0x1b8f, 0x5b6f, 0x171, 0x1, 0x1);
        gbc.writeMem(0xee30, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3cd2, gbc.sp());
        EXPECT(0xee32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee30));
        EXPECT(0xb5, gbc.readMem(0xee31));
        // CB B5 0292
        gbc.setState(0xa729, 0x37a9, 0xe0b0, 0x5671, 0xc4ac, 0x84f8, 0x0, 0x1);
        gbc.writeMem(0xa729, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x37a9, gbc.sp());
        EXPECT(0xa72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa729));
        EXPECT(0xb5, gbc.readMem(0xa72a));
        // CB B5 0293
        gbc.setState(0xd7c3, 0xfdd7, 0x7f0, 0x413b, 0xf3ee, 0x1a6b, 0x0, 0x1);
        gbc.writeMem(0xd7c3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfdd7, gbc.sp());
        EXPECT(0xd7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c3));
        EXPECT(0xb5, gbc.readMem(0xd7c4));
        // CB B5 0294
        gbc.setState(0x9a6, 0x748a, 0x9a00, 0xb1b6, 0x6529, 0x8da4, 0x1, 0x0);
        gbc.writeMem(0x9a6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x748a, gbc.sp());
        EXPECT(0x9a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0295
        gbc.setState(0x2598, 0xd3bc, 0x63c0, 0x6d8c, 0x107a, 0xc97c, 0x1, 0x0);
        gbc.writeMem(0x2598, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd3bc, gbc.sp());
        EXPECT(0x259a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0296
        gbc.setState(0x728f, 0x213b, 0xe520, 0x2a03, 0x41cc, 0xd9d2, 0x1, 0x0);
        gbc.writeMem(0x728f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x213b, gbc.sp());
        EXPECT(0x7291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0297
        gbc.setState(0x6bcf, 0x1cf8, 0x2960, 0x6050, 0x174b, 0x366a, 0x1, 0x1);
        gbc.writeMem(0x6bcf, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1cf8, gbc.sp());
        EXPECT(0x6bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0298
        gbc.setState(0x26c2, 0x8eb7, 0x30d0, 0x9cae, 0xc0e8, 0x940e, 0x1, 0x0);
        gbc.writeMem(0x26c2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8eb7, gbc.sp());
        EXPECT(0x26c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 029A
        gbc.setState(0xb17c, 0x49e8, 0x80b0, 0xaa15, 0xd6be, 0x901f, 0x0, 0x0);
        gbc.writeMem(0xb17c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x49e8, gbc.sp());
        EXPECT(0xb17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17c));
        EXPECT(0xb5, gbc.readMem(0xb17d));
        // CB B5 029B
        gbc.setState(0x971, 0xb3ec, 0x2d50, 0xc9b3, 0x253d, 0x7da4, 0x0, 0x0);
        gbc.writeMem(0x971, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb3ec, gbc.sp());
        EXPECT(0x973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 029C
        gbc.setState(0x2fa6, 0xda44, 0x68a0, 0x64ec, 0x51c2, 0x833e, 0x0, 0x0);
        gbc.writeMem(0x2fa6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xda44, gbc.sp());
        EXPECT(0x2fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 029D
        gbc.setState(0x3f06, 0xcb95, 0x2050, 0xc12b, 0xdd12, 0x20d8, 0x1, 0x1);
        gbc.writeMem(0x3f06, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcb95, gbc.sp());
        EXPECT(0x3f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 029E
        gbc.setState(0x1b05, 0x2e6c, 0xac60, 0x1992, 0xf4e6, 0x7c1a, 0x0, 0x0);
        gbc.writeMem(0x1b05, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2e6c, gbc.sp());
        EXPECT(0x1b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 029F
        gbc.setState(0xd90a, 0xc31, 0xe580, 0xd460, 0x30ec, 0xb3de, 0x1, 0x0);
        gbc.writeMem(0xd90a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc31, gbc.sp());
        EXPECT(0xd90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90a));
        EXPECT(0xb5, gbc.readMem(0xd90b));
        // CB B5 02A0
        gbc.setState(0x9f77, 0x1d2, 0xb940, 0x34e7, 0xb78e, 0xba4c, 0x0, 0x0);
        gbc.writeMem(0x9f77, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1d2, gbc.sp());
        EXPECT(0x9f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f77));
        EXPECT(0xb5, gbc.readMem(0x9f78));
        // CB B5 02A1
        gbc.setState(0xbb2d, 0x6723, 0x3dc0, 0xd417, 0x47, 0x180b, 0x1, 0x1);
        gbc.writeMem(0xbb2d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6723, gbc.sp());
        EXPECT(0xbb2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2d));
        EXPECT(0xb5, gbc.readMem(0xbb2e));
        // CB B5 02A2
        gbc.setState(0xe5c2, 0x18e1, 0x53c0, 0x5519, 0xd3a5, 0x8478, 0x0, 0x0);
        gbc.writeMem(0xe5c2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x18e1, gbc.sp());
        EXPECT(0xe5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c2));
        EXPECT(0xb5, gbc.readMem(0xe5c3));
        // CB B5 02A3
        gbc.setState(0xd048, 0xe25, 0xb70, 0x9fd1, 0xdf7f, 0xe6fe, 0x1, 0x1);
        gbc.writeMem(0xd048, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe25, gbc.sp());
        EXPECT(0xd04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd048));
        EXPECT(0xb5, gbc.readMem(0xd049));
        // CB B5 02A4
        gbc.setState(0xe2a9, 0xa8d9, 0xf7a0, 0x82b, 0xff2c, 0x33d4, 0x1, 0x1);
        gbc.writeMem(0xe2a9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa8d9, gbc.sp());
        EXPECT(0xe2ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a9));
        EXPECT(0xb5, gbc.readMem(0xe2aa));
        // CB B5 02A5
        gbc.setState(0x838a, 0x3b82, 0xed50, 0xbf03, 0xcf2a, 0x87b1, 0x1, 0x1);
        gbc.writeMem(0x838a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3b82, gbc.sp());
        EXPECT(0x838c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x838a));
        EXPECT(0xb5, gbc.readMem(0x838b));
        // CB B5 02A6
        gbc.setState(0x6af5, 0xff6a, 0x52a0, 0x51e7, 0xdfe2, 0xbf80, 0x1, 0x0);
        gbc.writeMem(0x6af5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xff6a, gbc.sp());
        EXPECT(0x6af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02A7
        gbc.setState(0x3c6a, 0xf311, 0x4840, 0x67f6, 0x27a3, 0x7c9a, 0x0, 0x0);
        gbc.writeMem(0x3c6a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf311, gbc.sp());
        EXPECT(0x3c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02A8
        gbc.setState(0x3b18, 0xf117, 0xcff0, 0x60, 0xef9a, 0x1dad, 0x1, 0x1);
        gbc.writeMem(0x3b18, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf117, gbc.sp());
        EXPECT(0x3b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02A9
        gbc.setState(0x2916, 0x7472, 0x2420, 0xe2b9, 0xa6b3, 0x754a, 0x0, 0x1);
        gbc.writeMem(0x2916, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7472, gbc.sp());
        EXPECT(0x2918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02AA
        gbc.setState(0x9655, 0x5cbb, 0x8110, 0x31d3, 0x456b, 0x2375, 0x0, 0x1);
        gbc.writeMem(0x9655, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5cbb, gbc.sp());
        EXPECT(0x9657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9655));
        EXPECT(0xb5, gbc.readMem(0x9656));
        // CB B5 02AB
        gbc.setState(0xe73e, 0x56ca, 0xa200, 0x8b79, 0xfbeb, 0xb711, 0x0, 0x1);
        gbc.writeMem(0xe73e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x56ca, gbc.sp());
        EXPECT(0xe740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73e));
        EXPECT(0xb5, gbc.readMem(0xe73f));
        // CB B5 02AC
        gbc.setState(0x3e53, 0xdd65, 0x3b30, 0x7644, 0xe1be, 0x90e4, 0x1, 0x0);
        gbc.writeMem(0x3e53, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdd65, gbc.sp());
        EXPECT(0x3e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02AD
        gbc.setState(0x65ad, 0xb6c1, 0x2fa0, 0x6763, 0x5942, 0xdd0a, 0x0, 0x1);
        gbc.writeMem(0x65ad, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb6c1, gbc.sp());
        EXPECT(0x65af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02AE
        gbc.setState(0x99e7, 0xb52a, 0xf810, 0x4625, 0xbd30, 0x8d8, 0x1, 0x0);
        gbc.writeMem(0x99e7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb52a, gbc.sp());
        EXPECT(0x99e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e7));
        EXPECT(0xb5, gbc.readMem(0x99e8));
        // CB B5 02AF
        gbc.setState(0x1557, 0x9323, 0x3fe0, 0xaf02, 0x2fab, 0xb06, 0x0, 0x0);
        gbc.writeMem(0x1557, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9323, gbc.sp());
        EXPECT(0x1559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02B1
        gbc.setState(0x587f, 0x2be3, 0x6b20, 0x5450, 0xd313, 0x23a2, 0x0, 0x0);
        gbc.writeMem(0x587f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2be3, gbc.sp());
        EXPECT(0x5881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02B2
        gbc.setState(0x1c2a, 0xef65, 0xa5f0, 0x91b6, 0xea55, 0x5e49, 0x1, 0x1);
        gbc.writeMem(0x1c2a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xef65, gbc.sp());
        EXPECT(0x1c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02B3
        gbc.setState(0x87a8, 0x5da9, 0x84e0, 0xbbff, 0xe605, 0x9069, 0x0, 0x0);
        gbc.writeMem(0x87a8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5da9, gbc.sp());
        EXPECT(0x87aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a8));
        EXPECT(0xb5, gbc.readMem(0x87a9));
        // CB B5 02B4
        gbc.setState(0xb67b, 0xba19, 0x8160, 0xf3fe, 0x119e, 0xa239, 0x1, 0x1);
        gbc.writeMem(0xb67b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xba19, gbc.sp());
        EXPECT(0xb67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb67b));
        EXPECT(0xb5, gbc.readMem(0xb67c));
        // CB B5 02B5
        gbc.setState(0xdc8b, 0x7ff0, 0xd7a0, 0x192d, 0x9fcd, 0xab7, 0x1, 0x1);
        gbc.writeMem(0xdc8b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7ff0, gbc.sp());
        EXPECT(0xdc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8b));
        EXPECT(0xb5, gbc.readMem(0xdc8c));
        // CB B5 02B6
        gbc.setState(0xbcae, 0x708d, 0xe720, 0x8a2b, 0xee45, 0xc18c, 0x1, 0x1);
        gbc.writeMem(0xbcae, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x708d, gbc.sp());
        EXPECT(0xbcb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcae));
        EXPECT(0xb5, gbc.readMem(0xbcaf));
        // CB B5 02B7
        gbc.setState(0x2191, 0x309, 0x1af0, 0xa349, 0x959c, 0x474d, 0x1, 0x1);
        gbc.writeMem(0x2191, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x309, gbc.sp());
        EXPECT(0x2193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02B8
        gbc.setState(0x954e, 0xc8c3, 0xac60, 0xd13f, 0xd79, 0xf0d1, 0x1, 0x0);
        gbc.writeMem(0x954e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc8c3, gbc.sp());
        EXPECT(0x9550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x954e));
        EXPECT(0xb5, gbc.readMem(0x954f));
        // CB B5 02B9
        gbc.setState(0x31e0, 0x1155, 0x3530, 0x5547, 0x68bd, 0xb237, 0x1, 0x0);
        gbc.writeMem(0x31e0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1155, gbc.sp());
        EXPECT(0x31e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02BA
        gbc.setState(0x3d6c, 0x9a5f, 0x74d0, 0x91d3, 0xafe5, 0x8783, 0x0, 0x0);
        gbc.writeMem(0x3d6c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9a5f, gbc.sp());
        EXPECT(0x3d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02BB
        gbc.setState(0x9fad, 0x92b1, 0x6ec0, 0x3d36, 0x8172, 0x7dcb, 0x0, 0x1);
        gbc.writeMem(0x9fad, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x92b1, gbc.sp());
        EXPECT(0x9faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fad));
        EXPECT(0xb5, gbc.readMem(0x9fae));
        // CB B5 02BC
        gbc.setState(0x3e6a, 0x54b9, 0xfd20, 0x411e, 0xfc7b, 0x79b0, 0x1, 0x0);
        gbc.writeMem(0x3e6a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x54b9, gbc.sp());
        EXPECT(0x3e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02BD
        gbc.setState(0xa9, 0xa0d5, 0x6600, 0xb936, 0xf358, 0xf333, 0x0, 0x0);
        gbc.writeMem(0xa9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa0d5, gbc.sp());
        EXPECT(0xab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02BE
        gbc.setState(0x6472, 0xa911, 0x7940, 0x5ebc, 0x4fe, 0x3959, 0x1, 0x0);
        gbc.writeMem(0x6472, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa911, gbc.sp());
        EXPECT(0x6474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02BF
        gbc.setState(0x6acb, 0xbfb, 0xd7f0, 0x6c9b, 0x7f68, 0xf1d5, 0x1, 0x0);
        gbc.writeMem(0x6acb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbfb, gbc.sp());
        EXPECT(0x6acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02C0
        gbc.setState(0xea00, 0xd1d, 0x2730, 0xf3fe, 0xf6e9, 0x1295, 0x1, 0x0);
        gbc.writeMem(0xea00, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd1d, gbc.sp());
        EXPECT(0xea02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea00));
        EXPECT(0xb5, gbc.readMem(0xea01));
        // CB B5 02C1
        gbc.setState(0xd999, 0x1736, 0x9b80, 0xf73, 0xe1b6, 0x2528, 0x1, 0x1);
        gbc.writeMem(0xd999, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1736, gbc.sp());
        EXPECT(0xd99b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd999));
        EXPECT(0xb5, gbc.readMem(0xd99a));
        // CB B5 02C2
        gbc.setState(0x212e, 0xd3d3, 0xcd10, 0xdd05, 0x13d1, 0xe4b5, 0x0, 0x1);
        gbc.writeMem(0x212e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd3d3, gbc.sp());
        EXPECT(0x2130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02C3
        gbc.setState(0x239d, 0x8786, 0x1c00, 0x6bf0, 0xd813, 0xcee2, 0x1, 0x0);
        gbc.writeMem(0x239d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8786, gbc.sp());
        EXPECT(0x239f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02C4
        gbc.setState(0x127a, 0x8c40, 0x4180, 0xb207, 0xad2e, 0xbb05, 0x0, 0x1);
        gbc.writeMem(0x127a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8c40, gbc.sp());
        EXPECT(0x127c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02C5
        gbc.setState(0x3318, 0x3e3, 0x3bd0, 0xb851, 0x820d, 0xb660, 0x0, 0x0);
        gbc.writeMem(0x3318, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3e3, gbc.sp());
        EXPECT(0x331a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02C6
        gbc.setState(0x4f4c, 0xde6, 0xb920, 0xa47e, 0x3a77, 0x98eb, 0x1, 0x1);
        gbc.writeMem(0x4f4c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xde6, gbc.sp());
        EXPECT(0x4f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02C7
        gbc.setState(0x242, 0x6487, 0x6390, 0xb952, 0x3ffc, 0xe031, 0x1, 0x0);
        gbc.writeMem(0x242, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6487, gbc.sp());
        EXPECT(0x244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02C8
        gbc.setState(0x47f1, 0x8f33, 0xf90, 0x6a86, 0x187d, 0x66ee, 0x0, 0x1);
        gbc.writeMem(0x47f1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8f33, gbc.sp());
        EXPECT(0x47f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02C9
        gbc.setState(0xdb90, 0xbcd8, 0xf920, 0x607d, 0xb194, 0x4bd2, 0x1, 0x1);
        gbc.writeMem(0xdb90, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbcd8, gbc.sp());
        EXPECT(0xdb92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb90));
        EXPECT(0xb5, gbc.readMem(0xdb91));
        // CB B5 02CA
        gbc.setState(0xd4f7, 0xb257, 0xc240, 0x2097, 0x1dee, 0xb445, 0x0, 0x1);
        gbc.writeMem(0xd4f7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb257, gbc.sp());
        EXPECT(0xd4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f7));
        EXPECT(0xb5, gbc.readMem(0xd4f8));
        // CB B5 02CB
        gbc.setState(0x401f, 0x8a78, 0xae90, 0xdb0, 0x8667, 0x91c9, 0x0, 0x1);
        gbc.writeMem(0x401f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8a78, gbc.sp());
        EXPECT(0x4021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02CE
        gbc.setState(0xc139, 0x4c6a, 0x2d80, 0x36fe, 0x1edc, 0x6fcb, 0x0, 0x1);
        gbc.writeMem(0xc139, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4c6a, gbc.sp());
        EXPECT(0xc13b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc139));
        EXPECT(0xb5, gbc.readMem(0xc13a));
        // CB B5 02CF
        gbc.setState(0xbad0, 0x9408, 0xa530, 0x7108, 0x3bfe, 0x9bc7, 0x1, 0x0);
        gbc.writeMem(0xbad0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9408, gbc.sp());
        EXPECT(0xbad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad0));
        EXPECT(0xb5, gbc.readMem(0xbad1));
        // CB B5 02D0
        gbc.setState(0x1d18, 0x780c, 0xe580, 0xb71b, 0x291a, 0xe017, 0x1, 0x1);
        gbc.writeMem(0x1d18, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x780c, gbc.sp());
        EXPECT(0x1d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02D1
        gbc.setState(0x2d77, 0xa38c, 0x1f50, 0x554c, 0x9040, 0x552d, 0x1, 0x0);
        gbc.writeMem(0x2d77, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa38c, gbc.sp());
        EXPECT(0x2d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02D2
        gbc.setState(0x52e8, 0x73be, 0xb220, 0x549c, 0xe5f5, 0x1e1c, 0x1, 0x0);
        gbc.writeMem(0x52e8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x73be, gbc.sp());
        EXPECT(0x52ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02D3
        gbc.setState(0x5645, 0x9090, 0x2c90, 0x4f6a, 0x6ddb, 0x412b, 0x0, 0x0);
        gbc.writeMem(0x5645, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9090, gbc.sp());
        EXPECT(0x5647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02D4
        gbc.setState(0xdd1c, 0xea05, 0xfb60, 0x813c, 0x5e25, 0x65e8, 0x1, 0x0);
        gbc.writeMem(0xdd1c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xea05, gbc.sp());
        EXPECT(0xdd1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1c));
        EXPECT(0xb5, gbc.readMem(0xdd1d));
        // CB B5 02D5
        gbc.setState(0x663c, 0x73b4, 0x1190, 0x621f, 0x820, 0x628c, 0x0, 0x1);
        gbc.writeMem(0x663c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x73b4, gbc.sp());
        EXPECT(0x663e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02D6
        gbc.setState(0x7450, 0xbc64, 0xea90, 0xaf91, 0x924, 0xee49, 0x0, 0x0);
        gbc.writeMem(0x7450, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbc64, gbc.sp());
        EXPECT(0x7452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02D7
        gbc.setState(0x7433, 0x1d2, 0x8980, 0x9022, 0xd932, 0x3a40, 0x0, 0x0);
        gbc.writeMem(0x7433, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1d2, gbc.sp());
        EXPECT(0x7435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02D8
        gbc.setState(0xa7ce, 0x154, 0x9190, 0x53d3, 0x6609, 0x906d, 0x1, 0x0);
        gbc.writeMem(0xa7ce, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x154, gbc.sp());
        EXPECT(0xa7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ce));
        EXPECT(0xb5, gbc.readMem(0xa7cf));
        // CB B5 02D9
        gbc.setState(0x1a08, 0x9139, 0x91b0, 0x4571, 0x8ebe, 0x88e9, 0x0, 0x0);
        gbc.writeMem(0x1a08, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9139, gbc.sp());
        EXPECT(0x1a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02DA
        gbc.setState(0xc8c, 0x43f9, 0xb9d0, 0xc9f4, 0x8a12, 0x4639, 0x1, 0x1);
        gbc.writeMem(0xc8c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x43f9, gbc.sp());
        EXPECT(0xc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02DB
        gbc.setState(0xc3ed, 0x5c16, 0x6dc0, 0x54b6, 0xd251, 0x31ed, 0x0, 0x1);
        gbc.writeMem(0xc3ed, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5c16, gbc.sp());
        EXPECT(0xc3ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ed));
        EXPECT(0xb5, gbc.readMem(0xc3ee));
        // CB B5 02DC
        gbc.setState(0xad92, 0x8cb8, 0xcae0, 0xcf8e, 0xef8b, 0x7a3b, 0x1, 0x0);
        gbc.writeMem(0xad92, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8cb8, gbc.sp());
        EXPECT(0xad94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad92));
        EXPECT(0xb5, gbc.readMem(0xad93));
        // CB B5 02DD
        gbc.setState(0x27d0, 0xcf7b, 0x5ea0, 0xc0bc, 0xa164, 0xda68, 0x1, 0x1);
        gbc.writeMem(0x27d0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcf7b, gbc.sp());
        EXPECT(0x27d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02DE
        gbc.setState(0x1577, 0x13f7, 0xb050, 0xef79, 0xba, 0xa206, 0x1, 0x1);
        gbc.writeMem(0x1577, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x13f7, gbc.sp());
        EXPECT(0x1579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02DF
        gbc.setState(0x3ebf, 0xafaa, 0x8da0, 0x8359, 0x4504, 0xf499, 0x0, 0x0);
        gbc.writeMem(0x3ebf, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xafaa, gbc.sp());
        EXPECT(0x3ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02E0
        gbc.setState(0x249b, 0xba52, 0x4e90, 0x6e61, 0x38ce, 0xdf40, 0x1, 0x1);
        gbc.writeMem(0x249b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xba52, gbc.sp());
        EXPECT(0x249d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02E1
        gbc.setState(0x3949, 0xf871, 0xd370, 0xa8e, 0x1999, 0x32f, 0x0, 0x0);
        gbc.writeMem(0x3949, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf871, gbc.sp());
        EXPECT(0x394b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02E2
        gbc.setState(0x2843, 0xfaa2, 0x8650, 0x79b, 0x8ebc, 0x44e6, 0x0, 0x0);
        gbc.writeMem(0x2843, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfaa2, gbc.sp());
        EXPECT(0x2845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02E3
        gbc.setState(0x1a52, 0x764e, 0x71b0, 0xcc6, 0x2723, 0xb611, 0x1, 0x1);
        gbc.writeMem(0x1a52, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x764e, gbc.sp());
        EXPECT(0x1a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02E4
        gbc.setState(0x2c2a, 0xc01b, 0x2240, 0xadca, 0xafb4, 0x253b, 0x1, 0x0);
        gbc.writeMem(0x2c2a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc01b, gbc.sp());
        EXPECT(0x2c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02E5
        gbc.setState(0x2fd7, 0x20ac, 0xe20, 0xe439, 0x4d39, 0x322b, 0x0, 0x1);
        gbc.writeMem(0x2fd7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x20ac, gbc.sp());
        EXPECT(0x2fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02E6
        gbc.setState(0xc67a, 0x5770, 0x21e0, 0xef86, 0xef63, 0x26b5, 0x0, 0x1);
        gbc.writeMem(0xc67a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5770, gbc.sp());
        EXPECT(0xc67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67a));
        EXPECT(0xb5, gbc.readMem(0xc67b));
        // CB B5 02E7
        gbc.setState(0x58ca, 0x1ad3, 0x72e0, 0x4b71, 0x78ea, 0xde7b, 0x1, 0x1);
        gbc.writeMem(0x58ca, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1ad3, gbc.sp());
        EXPECT(0x58cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02E8
        gbc.setState(0x3536, 0xabe0, 0xc060, 0x1e6f, 0xf244, 0x374b, 0x1, 0x1);
        gbc.writeMem(0x3536, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xabe0, gbc.sp());
        EXPECT(0x3538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02E9
        gbc.setState(0xe9c3, 0xd689, 0x53d0, 0x7082, 0x562, 0xef4e, 0x0, 0x1);
        gbc.writeMem(0xe9c3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd689, gbc.sp());
        EXPECT(0xe9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c3));
        EXPECT(0xb5, gbc.readMem(0xe9c4));
        // CB B5 02EA
        gbc.setState(0x9e8b, 0x50a5, 0xfb40, 0xc6d8, 0xb14f, 0xa0c4, 0x0, 0x0);
        gbc.writeMem(0x9e8b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x50a5, gbc.sp());
        EXPECT(0x9e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e8b));
        EXPECT(0xb5, gbc.readMem(0x9e8c));
        // CB B5 02EB
        gbc.setState(0x5fbd, 0xf1f9, 0xa9a0, 0xefcf, 0x12f4, 0xb512, 0x0, 0x0);
        gbc.writeMem(0x5fbd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf1f9, gbc.sp());
        EXPECT(0x5fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02ED
        gbc.setState(0x8007, 0xf374, 0xbff0, 0xfa99, 0xfaed, 0x90aa, 0x1, 0x0);
        gbc.writeMem(0x8007, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf374, gbc.sp());
        EXPECT(0x8009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8007));
        EXPECT(0xb5, gbc.readMem(0x8008));
        // CB B5 02EE
        gbc.setState(0x7fb5, 0x3ae6, 0x6f80, 0xb685, 0x75bf, 0xd61f, 0x1, 0x1);
        gbc.writeMem(0x7fb5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3ae6, gbc.sp());
        EXPECT(0x7fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02EF
        gbc.setState(0xc3a, 0x9381, 0xa190, 0xefe8, 0x1b3c, 0xbc2b, 0x1, 0x0);
        gbc.writeMem(0xc3a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9381, gbc.sp());
        EXPECT(0xc3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02F0
        gbc.setState(0xeec8, 0xd9e5, 0xbb10, 0xef63, 0x73de, 0x97c7, 0x0, 0x1);
        gbc.writeMem(0xeec8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd9e5, gbc.sp());
        EXPECT(0xeeca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec8));
        EXPECT(0xb5, gbc.readMem(0xeec9));
        // CB B5 02F1
        gbc.setState(0xec1f, 0xfa3a, 0x2330, 0x7cbe, 0xc47, 0xaa38, 0x0, 0x1);
        gbc.writeMem(0xec1f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfa3a, gbc.sp());
        EXPECT(0xec21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec1f));
        EXPECT(0xb5, gbc.readMem(0xec20));
        // CB B5 02F2
        gbc.setState(0x1d98, 0x93af, 0x6410, 0xde0b, 0x6637, 0x38d6, 0x0, 0x1);
        gbc.writeMem(0x1d98, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x93af, gbc.sp());
        EXPECT(0x1d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02F3
        gbc.setState(0x22e, 0x378e, 0xb860, 0x8b22, 0xf7c2, 0xb4a9, 0x0, 0x0);
        gbc.writeMem(0x22e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x378e, gbc.sp());
        EXPECT(0x230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02F4
        gbc.setState(0x8905, 0x4817, 0x1340, 0x3df7, 0x9e1a, 0x95b7, 0x0, 0x0);
        gbc.writeMem(0x8905, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4817, gbc.sp());
        EXPECT(0x8907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8905));
        EXPECT(0xb5, gbc.readMem(0x8906));
        // CB B5 02F5
        gbc.setState(0x81b7, 0xc32d, 0xea0, 0x74ea, 0x8b27, 0x669, 0x1, 0x0);
        gbc.writeMem(0x81b7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc32d, gbc.sp());
        EXPECT(0x81b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b7));
        EXPECT(0xb5, gbc.readMem(0x81b8));
        // CB B5 02F6
        gbc.setState(0x9349, 0xab13, 0x2240, 0xe11, 0x8e58, 0x23a, 0x1, 0x1);
        gbc.writeMem(0x9349, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xab13, gbc.sp());
        EXPECT(0x934b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9349));
        EXPECT(0xb5, gbc.readMem(0x934a));
        // CB B5 02F7
        gbc.setState(0xbe0d, 0x8e4a, 0xfc10, 0x8beb, 0xed51, 0x3504, 0x1, 0x0);
        gbc.writeMem(0xbe0d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8e4a, gbc.sp());
        EXPECT(0xbe0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe0d));
        EXPECT(0xb5, gbc.readMem(0xbe0e));
        // CB B5 02F8
        gbc.setState(0x254b, 0x6595, 0xabf0, 0x9c1e, 0x8531, 0x367b, 0x0, 0x0);
        gbc.writeMem(0x254b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6595, gbc.sp());
        EXPECT(0x254d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02F9
        gbc.setState(0x1275, 0x974b, 0x79d0, 0x9ba5, 0x41ed, 0x2cbf, 0x1, 0x1);
        gbc.writeMem(0x1275, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x974b, gbc.sp());
        EXPECT(0x1277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 02FA
        gbc.setState(0xc986, 0x2f0e, 0x8e40, 0x18e7, 0x302f, 0x58ca, 0x0, 0x0);
        gbc.writeMem(0xc986, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2f0e, gbc.sp());
        EXPECT(0xc988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc986));
        EXPECT(0xb5, gbc.readMem(0xc987));
        // CB B5 02FB
        gbc.setState(0xb403, 0xa01e, 0xc5c0, 0xb852, 0x859b, 0xbd0, 0x1, 0x1);
        gbc.writeMem(0xb403, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa01e, gbc.sp());
        EXPECT(0xb405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb403));
        EXPECT(0xb5, gbc.readMem(0xb404));
        // CB B5 02FC
        gbc.setState(0x9770, 0x8bb, 0xa630, 0x9a22, 0xb309, 0xcdf9, 0x1, 0x1);
        gbc.writeMem(0x9770, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8bb, gbc.sp());
        EXPECT(0x9772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9770));
        EXPECT(0xb5, gbc.readMem(0x9771));
        // CB B5 02FD
        gbc.setState(0x7c42, 0x7242, 0xc160, 0x8378, 0x44d9, 0xa7af, 0x0, 0x0);
        gbc.writeMem(0x7c42, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7242, gbc.sp());
        EXPECT(0x7c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 02FE
        gbc.setState(0x8c16, 0xd3d6, 0xaa20, 0xa76b, 0xd2f9, 0x1afa, 0x0, 0x0);
        gbc.writeMem(0x8c16, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd3d6, gbc.sp());
        EXPECT(0x8c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c16));
        EXPECT(0xb5, gbc.readMem(0x8c17));
        // CB B5 02FF
        gbc.setState(0xb46e, 0xc7d3, 0x9cc0, 0xbd3b, 0x30a4, 0xd8e5, 0x1, 0x0);
        gbc.writeMem(0xb46e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc7d3, gbc.sp());
        EXPECT(0xb470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46e));
        EXPECT(0xb5, gbc.readMem(0xb46f));
        // CB B5 0300
        gbc.setState(0xb2e6, 0x26ef, 0xf7b0, 0x4414, 0x8fcf, 0xa4fa, 0x0, 0x0);
        gbc.writeMem(0xb2e6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x26ef, gbc.sp());
        EXPECT(0xb2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e6));
        EXPECT(0xb5, gbc.readMem(0xb2e7));
        // CB B5 0301
        gbc.setState(0x8ae7, 0xae76, 0xd520, 0x407a, 0xd607, 0x9ba3, 0x0, 0x1);
        gbc.writeMem(0x8ae7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xae76, gbc.sp());
        EXPECT(0x8ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae7));
        EXPECT(0xb5, gbc.readMem(0x8ae8));
        // CB B5 0302
        gbc.setState(0xb85e, 0x99aa, 0x38c0, 0x386, 0x567b, 0xb8d, 0x1, 0x0);
        gbc.writeMem(0xb85e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x99aa, gbc.sp());
        EXPECT(0xb860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85e));
        EXPECT(0xb5, gbc.readMem(0xb85f));
        // CB B5 0304
        gbc.setState(0x4c5a, 0xace2, 0xd210, 0x7a40, 0x4103, 0xbd17, 0x0, 0x1);
        gbc.writeMem(0x4c5a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xace2, gbc.sp());
        EXPECT(0x4c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0305
        gbc.setState(0x70cf, 0x5fe5, 0x9830, 0xee47, 0x8b17, 0x8c49, 0x1, 0x0);
        gbc.writeMem(0x70cf, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5fe5, gbc.sp());
        EXPECT(0x70d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0306
        gbc.setState(0x913e, 0xf2e4, 0xcf0, 0xf4b7, 0xa97e, 0xb6d7, 0x0, 0x0);
        gbc.writeMem(0x913e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf2e4, gbc.sp());
        EXPECT(0x9140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x913e));
        EXPECT(0xb5, gbc.readMem(0x913f));
        // CB B5 0307
        gbc.setState(0xe728, 0x32d1, 0xeb60, 0x737e, 0xc7bb, 0x5059, 0x1, 0x0);
        gbc.writeMem(0xe728, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x32d1, gbc.sp());
        EXPECT(0xe72a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe728));
        EXPECT(0xb5, gbc.readMem(0xe729));
        // CB B5 0308
        gbc.setState(0x6862, 0xa117, 0x2c10, 0x7333, 0x59aa, 0x4da, 0x1, 0x1);
        gbc.writeMem(0x6862, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa117, gbc.sp());
        EXPECT(0x6864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0309
        gbc.setState(0x645f, 0x28b2, 0x1d70, 0x271, 0x6ce9, 0xe7f7, 0x1, 0x1);
        gbc.writeMem(0x645f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x28b2, gbc.sp());
        EXPECT(0x6461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 030A
        gbc.setState(0x833f, 0x4db1, 0x8370, 0x2bcd, 0xc227, 0xb92b, 0x0, 0x1);
        gbc.writeMem(0x833f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4db1, gbc.sp());
        EXPECT(0x8341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x833f));
        EXPECT(0xb5, gbc.readMem(0x8340));
        // CB B5 030B
        gbc.setState(0x570a, 0xf441, 0x73f0, 0x9dfc, 0x77e3, 0x84c, 0x1, 0x1);
        gbc.writeMem(0x570a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf441, gbc.sp());
        EXPECT(0x570c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 030C
        gbc.setState(0x6941, 0x505e, 0x2ee0, 0x3d93, 0x1e29, 0xa35c, 0x0, 0x0);
        gbc.writeMem(0x6941, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x505e, gbc.sp());
        EXPECT(0x6943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 030D
        gbc.setState(0xdb82, 0x4b24, 0x8850, 0x811b, 0xe1d1, 0xacf0, 0x1, 0x0);
        gbc.writeMem(0xdb82, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4b24, gbc.sp());
        EXPECT(0xdb84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb82));
        EXPECT(0xb5, gbc.readMem(0xdb83));
        // CB B5 030E
        gbc.setState(0x18ea, 0x873, 0xf070, 0x6885, 0x6330, 0x4eda, 0x1, 0x1);
        gbc.writeMem(0x18ea, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x873, gbc.sp());
        EXPECT(0x18ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 030F
        gbc.setState(0x7046, 0xe541, 0xfac0, 0xa4c2, 0x3be5, 0x2afd, 0x1, 0x0);
        gbc.writeMem(0x7046, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe541, gbc.sp());
        EXPECT(0x7048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0310
        gbc.setState(0xe7fd, 0xc09f, 0x4b0, 0xad08, 0xd1ad, 0xde02, 0x0, 0x1);
        gbc.writeMem(0xe7fd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc09f, gbc.sp());
        EXPECT(0xe7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7fd));
        EXPECT(0xb5, gbc.readMem(0xe7fe));
        // CB B5 0311
        gbc.setState(0xe193, 0x64ae, 0x2750, 0x8210, 0x3997, 0x95b4, 0x0, 0x1);
        gbc.writeMem(0xe193, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x64ae, gbc.sp());
        EXPECT(0xe195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe193));
        EXPECT(0xb5, gbc.readMem(0xe194));
        // CB B5 0312
        gbc.setState(0xcac5, 0x2359, 0x5c10, 0x83b5, 0xc0cf, 0x77de, 0x0, 0x0);
        gbc.writeMem(0xcac5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2359, gbc.sp());
        EXPECT(0xcac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac5));
        EXPECT(0xb5, gbc.readMem(0xcac6));
        // CB B5 0313
        gbc.setState(0x24c9, 0xbe70, 0x5900, 0xc473, 0x5de3, 0x299e, 0x1, 0x1);
        gbc.writeMem(0x24c9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbe70, gbc.sp());
        EXPECT(0x24cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0314
        gbc.setState(0xbb9b, 0xcf6a, 0x3020, 0xfbc5, 0xc87f, 0x5e31, 0x0, 0x1);
        gbc.writeMem(0xbb9b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcf6a, gbc.sp());
        EXPECT(0xbb9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb9b));
        EXPECT(0xb5, gbc.readMem(0xbb9c));
        // CB B5 0315
        gbc.setState(0x990c, 0x3d2a, 0x82d0, 0xb327, 0x4ab9, 0x6deb, 0x0, 0x0);
        gbc.writeMem(0x990c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3d2a, gbc.sp());
        EXPECT(0x990e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990c));
        EXPECT(0xb5, gbc.readMem(0x990d));
        // CB B5 0316
        gbc.setState(0xeb38, 0xa4f1, 0x8af0, 0x2b33, 0x90b5, 0xc87e, 0x1, 0x1);
        gbc.writeMem(0xeb38, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa4f1, gbc.sp());
        EXPECT(0xeb3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb38));
        EXPECT(0xb5, gbc.readMem(0xeb39));
        // CB B5 0317
        gbc.setState(0x7f54, 0xacf0, 0xa440, 0x7a46, 0x43b4, 0x6ae9, 0x1, 0x0);
        gbc.writeMem(0x7f54, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xacf0, gbc.sp());
        EXPECT(0x7f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0318
        gbc.setState(0x5460, 0xb28b, 0x9220, 0xf59e, 0xa8ef, 0xefc6, 0x0, 0x0);
        gbc.writeMem(0x5460, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb28b, gbc.sp());
        EXPECT(0x5462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0319
        gbc.setState(0x4b54, 0x1c43, 0x8c60, 0x403e, 0x3fc7, 0xf7b6, 0x1, 0x1);
        gbc.writeMem(0x4b54, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1c43, gbc.sp());
        EXPECT(0x4b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 031A
        gbc.setState(0x4214, 0x6b5e, 0x2340, 0xb143, 0x397a, 0x56d0, 0x0, 0x0);
        gbc.writeMem(0x4214, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6b5e, gbc.sp());
        EXPECT(0x4216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 031B
        gbc.setState(0xd77f, 0x853f, 0x28e0, 0xe26b, 0xf677, 0x9cc, 0x1, 0x1);
        gbc.writeMem(0xd77f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x853f, gbc.sp());
        EXPECT(0xd781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77f));
        EXPECT(0xb5, gbc.readMem(0xd780));
        // CB B5 031C
        gbc.setState(0xd497, 0x7d0, 0x93b0, 0x7ce4, 0x799a, 0x3152, 0x0, 0x1);
        gbc.writeMem(0xd497, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7d0, gbc.sp());
        EXPECT(0xd499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd497));
        EXPECT(0xb5, gbc.readMem(0xd498));
        // CB B5 031D
        gbc.setState(0xcc15, 0x4342, 0xe450, 0xb91f, 0x4701, 0xed0a, 0x1, 0x0);
        gbc.writeMem(0xcc15, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4342, gbc.sp());
        EXPECT(0xcc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc15));
        EXPECT(0xb5, gbc.readMem(0xcc16));
        // CB B5 031E
        gbc.setState(0x5c53, 0x34b1, 0x4be0, 0x3d84, 0x2321, 0xe648, 0x0, 0x1);
        gbc.writeMem(0x5c53, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x34b1, gbc.sp());
        EXPECT(0x5c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 031F
        gbc.setState(0x4056, 0x7db9, 0xd360, 0x1115, 0xacef, 0x8, 0x0, 0x0);
        gbc.writeMem(0x4056, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7db9, gbc.sp());
        EXPECT(0x4058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0320
        gbc.setState(0xb05f, 0xd1fa, 0xd580, 0x927b, 0x1b5d, 0x5a19, 0x0, 0x0);
        gbc.writeMem(0xb05f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd1fa, gbc.sp());
        EXPECT(0xb061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb05f));
        EXPECT(0xb5, gbc.readMem(0xb060));
        // CB B5 0321
        gbc.setState(0x9993, 0x2e5c, 0x7430, 0xbc9, 0xee2f, 0x2cc7, 0x0, 0x1);
        gbc.writeMem(0x9993, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2e5c, gbc.sp());
        EXPECT(0x9995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9993));
        EXPECT(0xb5, gbc.readMem(0x9994));
        // CB B5 0322
        gbc.setState(0x9eaa, 0xaf80, 0xa0a0, 0xb518, 0xfd3, 0xb04f, 0x0, 0x1);
        gbc.writeMem(0x9eaa, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xaf80, gbc.sp());
        EXPECT(0x9eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eaa));
        EXPECT(0xb5, gbc.readMem(0x9eab));
        // CB B5 0323
        gbc.setState(0xc442, 0xfa65, 0x1b80, 0x5ae3, 0xabfe, 0x669c, 0x1, 0x1);
        gbc.writeMem(0xc442, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfa65, gbc.sp());
        EXPECT(0xc444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc442));
        EXPECT(0xb5, gbc.readMem(0xc443));
        // CB B5 0324
        gbc.setState(0x684c, 0x92d6, 0xfb80, 0x1d97, 0x7a9, 0xe3db, 0x1, 0x1);
        gbc.writeMem(0x684c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x92d6, gbc.sp());
        EXPECT(0x684e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0325
        gbc.setState(0xc57, 0xc0bf, 0x8cd0, 0x46b9, 0xdf3a, 0xb8e8, 0x1, 0x0);
        gbc.writeMem(0xc57, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc0bf, gbc.sp());
        EXPECT(0xc59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0326
        gbc.setState(0x7114, 0xf82b, 0x22c0, 0x6126, 0x8d28, 0x28cd, 0x1, 0x1);
        gbc.writeMem(0x7114, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf82b, gbc.sp());
        EXPECT(0x7116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0327
        gbc.setState(0x16bc, 0x77af, 0x7340, 0xf536, 0xd6bc, 0x3c30, 0x1, 0x0);
        gbc.writeMem(0x16bc, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x77af, gbc.sp());
        EXPECT(0x16be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0328
        gbc.setState(0xee13, 0xc2ba, 0x5a60, 0x28bb, 0x7b15, 0x4c9b, 0x0, 0x1);
        gbc.writeMem(0xee13, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc2ba, gbc.sp());
        EXPECT(0xee15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee13));
        EXPECT(0xb5, gbc.readMem(0xee14));
        // CB B5 0329
        gbc.setState(0x93f9, 0x5153, 0xd20, 0x124a, 0x455e, 0xc1e7, 0x1, 0x0);
        gbc.writeMem(0x93f9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5153, gbc.sp());
        EXPECT(0x93fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f9));
        EXPECT(0xb5, gbc.readMem(0x93fa));
        // CB B5 032B
        gbc.setState(0x87db, 0x6b45, 0x7b80, 0xe1f7, 0xdc2f, 0x5849, 0x0, 0x0);
        gbc.writeMem(0x87db, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6b45, gbc.sp());
        EXPECT(0x87dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87db));
        EXPECT(0xb5, gbc.readMem(0x87dc));
        // CB B5 032C
        gbc.setState(0xa031, 0x69b, 0xd620, 0xef72, 0x5d96, 0xdfca, 0x0, 0x1);
        gbc.writeMem(0xa031, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x69b, gbc.sp());
        EXPECT(0xa033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa031));
        EXPECT(0xb5, gbc.readMem(0xa032));
        // CB B5 032D
        gbc.setState(0xf16, 0x261f, 0xdfb0, 0xb657, 0x3871, 0xebc6, 0x1, 0x0);
        gbc.writeMem(0xf16, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x261f, gbc.sp());
        EXPECT(0xf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 032E
        gbc.setState(0x8cb, 0x5589, 0x5bb0, 0xdd4a, 0xddc7, 0x434f, 0x1, 0x0);
        gbc.writeMem(0x8cb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5589, gbc.sp());
        EXPECT(0x8cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 032F
        gbc.setState(0xb887, 0x4d9, 0x58a0, 0x684c, 0xf1f7, 0x8feb, 0x0, 0x1);
        gbc.writeMem(0xb887, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4d9, gbc.sp());
        EXPECT(0xb889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb887));
        EXPECT(0xb5, gbc.readMem(0xb888));
        // CB B5 0330
        gbc.setState(0xb5c3, 0x9002, 0xa570, 0x61cb, 0x68fd, 0xd66c, 0x0, 0x0);
        gbc.writeMem(0xb5c3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9002, gbc.sp());
        EXPECT(0xb5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c3));
        EXPECT(0xb5, gbc.readMem(0xb5c4));
        // CB B5 0332
        gbc.setState(0xd5b0, 0x1ed2, 0x3c30, 0xef20, 0x5fac, 0x942b, 0x1, 0x0);
        gbc.writeMem(0xd5b0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1ed2, gbc.sp());
        EXPECT(0xd5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b0));
        EXPECT(0xb5, gbc.readMem(0xd5b1));
        // CB B5 0333
        gbc.setState(0x5230, 0x5b2c, 0xd6e0, 0x5238, 0x5931, 0x6ad4, 0x1, 0x0);
        gbc.writeMem(0x5230, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5b2c, gbc.sp());
        EXPECT(0x5232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0334
        gbc.setState(0xe46c, 0x503b, 0x31c0, 0x6ca1, 0x1a8a, 0x6440, 0x1, 0x0);
        gbc.writeMem(0xe46c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x503b, gbc.sp());
        EXPECT(0xe46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe46c));
        EXPECT(0xb5, gbc.readMem(0xe46d));
        // CB B5 0335
        gbc.setState(0x142c, 0xe3cd, 0xe100, 0x1eac, 0xa972, 0xdf29, 0x0, 0x1);
        gbc.writeMem(0x142c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe3cd, gbc.sp());
        EXPECT(0x142e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0336
        gbc.setState(0x19fb, 0xad47, 0x9230, 0xd10e, 0x448, 0x9d77, 0x1, 0x1);
        gbc.writeMem(0x19fb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xad47, gbc.sp());
        EXPECT(0x19fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0337
        gbc.setState(0x569c, 0x898d, 0xde0, 0xf2e, 0x69d5, 0x7204, 0x0, 0x1);
        gbc.writeMem(0x569c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x898d, gbc.sp());
        EXPECT(0x569e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0338
        gbc.setState(0x3c78, 0xd45b, 0x3750, 0x6dd9, 0xdd74, 0x2136, 0x0, 0x1);
        gbc.writeMem(0x3c78, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd45b, gbc.sp());
        EXPECT(0x3c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0339
        gbc.setState(0x7072, 0x41b6, 0x6b20, 0x97b9, 0xac29, 0xbd89, 0x1, 0x0);
        gbc.writeMem(0x7072, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x41b6, gbc.sp());
        EXPECT(0x7074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 033A
        gbc.setState(0xce6e, 0xded5, 0xb220, 0x8972, 0x92e2, 0x9b4e, 0x0, 0x0);
        gbc.writeMem(0xce6e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xded5, gbc.sp());
        EXPECT(0xce70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce6e));
        EXPECT(0xb5, gbc.readMem(0xce6f));
        // CB B5 033B
        gbc.setState(0xa369, 0x7ea0, 0x6240, 0xc628, 0xcdc5, 0x1d0c, 0x0, 0x1);
        gbc.writeMem(0xa369, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7ea0, gbc.sp());
        EXPECT(0xa36b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa369));
        EXPECT(0xb5, gbc.readMem(0xa36a));
        // CB B5 033C
        gbc.setState(0x6c90, 0x8015, 0xa770, 0x87a5, 0x2f33, 0x957e, 0x0, 0x1);
        gbc.writeMem(0x6c90, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8015, gbc.sp());
        EXPECT(0x6c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 033D
        gbc.setState(0x3f1a, 0x1b93, 0x8830, 0x66a7, 0xd3db, 0xc24b, 0x0, 0x1);
        gbc.writeMem(0x3f1a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1b93, gbc.sp());
        EXPECT(0x3f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 033F
        gbc.setState(0xeac7, 0xbf84, 0x180, 0x793c, 0x83dd, 0x972, 0x0, 0x0);
        gbc.writeMem(0xeac7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbf84, gbc.sp());
        EXPECT(0xeac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac7));
        EXPECT(0xb5, gbc.readMem(0xeac8));
        // CB B5 0340
        gbc.setState(0x139a, 0xcc11, 0xed0, 0xb291, 0xc273, 0x8283, 0x1, 0x1);
        gbc.writeMem(0x139a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcc11, gbc.sp());
        EXPECT(0x139c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0341
        gbc.setState(0xa3bc, 0xe77e, 0x4840, 0x12b1, 0x2ea2, 0x775b, 0x0, 0x0);
        gbc.writeMem(0xa3bc, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe77e, gbc.sp());
        EXPECT(0xa3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3bc));
        EXPECT(0xb5, gbc.readMem(0xa3bd));
        // CB B5 0342
        gbc.setState(0x2f24, 0xe9f5, 0x3930, 0xdc19, 0xc86c, 0x70de, 0x0, 0x0);
        gbc.writeMem(0x2f24, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe9f5, gbc.sp());
        EXPECT(0x2f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0343
        gbc.setState(0xa131, 0x7a76, 0x3c10, 0x1606, 0xe32b, 0x5f04, 0x1, 0x1);
        gbc.writeMem(0xa131, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7a76, gbc.sp());
        EXPECT(0xa133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa131));
        EXPECT(0xb5, gbc.readMem(0xa132));
        // CB B5 0344
        gbc.setState(0xed88, 0xbe18, 0xa2b0, 0xb905, 0x3557, 0x383f, 0x1, 0x1);
        gbc.writeMem(0xed88, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbe18, gbc.sp());
        EXPECT(0xed8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed88));
        EXPECT(0xb5, gbc.readMem(0xed89));
        // CB B5 0345
        gbc.setState(0xb9a0, 0xb167, 0xb0b0, 0xb3dd, 0xf674, 0x261d, 0x0, 0x0);
        gbc.writeMem(0xb9a0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb167, gbc.sp());
        EXPECT(0xb9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a0));
        EXPECT(0xb5, gbc.readMem(0xb9a1));
        // CB B5 0346
        gbc.setState(0x91d, 0x7128, 0xd290, 0xab27, 0x3e63, 0x7332, 0x0, 0x1);
        gbc.writeMem(0x91d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7128, gbc.sp());
        EXPECT(0x91f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0348
        gbc.setState(0x4d25, 0x2d1e, 0xd5d0, 0xe31d, 0x67bc, 0xb2d3, 0x0, 0x1);
        gbc.writeMem(0x4d25, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2d1e, gbc.sp());
        EXPECT(0x4d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0349
        gbc.setState(0xc71, 0x6f3e, 0xce0, 0xe115, 0xf862, 0xf075, 0x1, 0x1);
        gbc.writeMem(0xc71, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6f3e, gbc.sp());
        EXPECT(0xc73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 034A
        gbc.setState(0x6ae9, 0xb46a, 0xfb80, 0xeb56, 0x8ed9, 0x2e10, 0x0, 0x1);
        gbc.writeMem(0x6ae9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb46a, gbc.sp());
        EXPECT(0x6aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 034B
        gbc.setState(0x937c, 0xd2c, 0x95c0, 0x3fbf, 0xc2d, 0xb9b0, 0x0, 0x0);
        gbc.writeMem(0x937c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd2c, gbc.sp());
        EXPECT(0x937e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937c));
        EXPECT(0xb5, gbc.readMem(0x937d));
        // CB B5 034C
        gbc.setState(0x95dd, 0xa54b, 0xbbb0, 0x7742, 0xed0c, 0x467c, 0x0, 0x0);
        gbc.writeMem(0x95dd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa54b, gbc.sp());
        EXPECT(0x95df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95dd));
        EXPECT(0xb5, gbc.readMem(0x95de));
        // CB B5 034D
        gbc.setState(0xe741, 0x759d, 0x6dd0, 0xe1d7, 0x8e76, 0x1b2c, 0x0, 0x0);
        gbc.writeMem(0xe741, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x759d, gbc.sp());
        EXPECT(0xe743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe741));
        EXPECT(0xb5, gbc.readMem(0xe742));
        // CB B5 034E
        gbc.setState(0x2201, 0x7e0, 0x84d0, 0x8672, 0xcc66, 0x63fd, 0x0, 0x0);
        gbc.writeMem(0x2201, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7e0, gbc.sp());
        EXPECT(0x2203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 034F
        gbc.setState(0x95e8, 0xe39, 0x1100, 0xe629, 0x328, 0xfa47, 0x1, 0x1);
        gbc.writeMem(0x95e8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe39, gbc.sp());
        EXPECT(0x95ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e8));
        EXPECT(0xb5, gbc.readMem(0x95e9));
        // CB B5 0350
        gbc.setState(0x1771, 0x101b, 0x2100, 0x3763, 0x8d41, 0x1893, 0x0, 0x0);
        gbc.writeMem(0x1771, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x101b, gbc.sp());
        EXPECT(0x1773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0351
        gbc.setState(0x6abb, 0x5f41, 0x2160, 0x96b8, 0xdbbe, 0x7acc, 0x1, 0x0);
        gbc.writeMem(0x6abb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5f41, gbc.sp());
        EXPECT(0x6abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0352
        gbc.setState(0x98e1, 0x3c93, 0xbcd0, 0xffa7, 0xb17f, 0xa3e5, 0x0, 0x0);
        gbc.writeMem(0x98e1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3c93, gbc.sp());
        EXPECT(0x98e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e1));
        EXPECT(0xb5, gbc.readMem(0x98e2));
        // CB B5 0353
        gbc.setState(0x65bd, 0xc268, 0x5be0, 0x8c3d, 0xbb01, 0x100c, 0x0, 0x0);
        gbc.writeMem(0x65bd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc268, gbc.sp());
        EXPECT(0x65bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0354
        gbc.setState(0xc76f, 0x15cd, 0xbc00, 0xe796, 0x19a1, 0x5e0a, 0x0, 0x1);
        gbc.writeMem(0xc76f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x15cd, gbc.sp());
        EXPECT(0xc771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76f));
        EXPECT(0xb5, gbc.readMem(0xc770));
        // CB B5 0355
        gbc.setState(0xdeb, 0xade7, 0xff20, 0xa9b9, 0xa5, 0xc035, 0x1, 0x0);
        gbc.writeMem(0xdeb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xade7, gbc.sp());
        EXPECT(0xded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0356
        gbc.setState(0xe979, 0x48e, 0x2310, 0xb164, 0xe85e, 0x74ef, 0x0, 0x1);
        gbc.writeMem(0xe979, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x48e, gbc.sp());
        EXPECT(0xe97b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe979));
        EXPECT(0xb5, gbc.readMem(0xe97a));
        // CB B5 0357
        gbc.setState(0xa2f2, 0xf9e5, 0x7180, 0x90a, 0x6cc7, 0xf996, 0x0, 0x0);
        gbc.writeMem(0xa2f2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf9e5, gbc.sp());
        EXPECT(0xa2f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f2));
        EXPECT(0xb5, gbc.readMem(0xa2f3));
        // CB B5 0358
        gbc.setState(0x657f, 0x9fa2, 0x5160, 0x367, 0xcdab, 0xf65c, 0x1, 0x0);
        gbc.writeMem(0x657f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9fa2, gbc.sp());
        EXPECT(0x6581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0359
        gbc.setState(0x9e7a, 0x105, 0x9f0, 0x502a, 0xd9e, 0xdabd, 0x0, 0x1);
        gbc.writeMem(0x9e7a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x105, gbc.sp());
        EXPECT(0x9e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7a));
        EXPECT(0xb5, gbc.readMem(0x9e7b));
        // CB B5 035A
        gbc.setState(0x87ee, 0xdefc, 0x1b00, 0xb29a, 0x5056, 0xd2da, 0x0, 0x1);
        gbc.writeMem(0x87ee, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdefc, gbc.sp());
        EXPECT(0x87f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ee));
        EXPECT(0xb5, gbc.readMem(0x87ef));
        // CB B5 035C
        gbc.setState(0xe250, 0xee, 0xef20, 0x9248, 0xa15d, 0xa37c, 0x1, 0x1);
        gbc.writeMem(0xe250, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xee, gbc.sp());
        EXPECT(0xe252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe250));
        EXPECT(0xb5, gbc.readMem(0xe251));
        // CB B5 035D
        gbc.setState(0x4880, 0xad0b, 0x2600, 0xddfb, 0x4fa8, 0x5340, 0x0, 0x1);
        gbc.writeMem(0x4880, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xad0b, gbc.sp());
        EXPECT(0x4882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 035E
        gbc.setState(0x4b12, 0x5472, 0xc8f0, 0xf734, 0x376, 0xcd35, 0x0, 0x1);
        gbc.writeMem(0x4b12, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5472, gbc.sp());
        EXPECT(0x4b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 035F
        gbc.setState(0x3dca, 0xa9db, 0x28d0, 0x25b, 0x4ff9, 0x4ce3, 0x1, 0x0);
        gbc.writeMem(0x3dca, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa9db, gbc.sp());
        EXPECT(0x3dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0360
        gbc.setState(0xc593, 0x6abb, 0xce10, 0x6af2, 0xc3df, 0xdc0d, 0x1, 0x1);
        gbc.writeMem(0xc593, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6abb, gbc.sp());
        EXPECT(0xc595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc593));
        EXPECT(0xb5, gbc.readMem(0xc594));
        // CB B5 0361
        gbc.setState(0x2929, 0x60b7, 0xe270, 0x944d, 0xfd91, 0x4a63, 0x0, 0x0);
        gbc.writeMem(0x2929, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x60b7, gbc.sp());
        EXPECT(0x292b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0362
        gbc.setState(0x1e79, 0x5aad, 0x440, 0xe6de, 0x581e, 0x3faf, 0x1, 0x0);
        gbc.writeMem(0x1e79, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5aad, gbc.sp());
        EXPECT(0x1e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0363
        gbc.setState(0x2b2b, 0x1617, 0xfd70, 0x73a7, 0x7e50, 0x939b, 0x0, 0x1);
        gbc.writeMem(0x2b2b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1617, gbc.sp());
        EXPECT(0x2b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0364
        gbc.setState(0x69c8, 0x81fb, 0x54e0, 0xafeb, 0xeaf9, 0xa0a6, 0x1, 0x0);
        gbc.writeMem(0x69c8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x81fb, gbc.sp());
        EXPECT(0x69ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0365
        gbc.setState(0x68fc, 0xbc41, 0x8070, 0x3e25, 0x7789, 0xd5b2, 0x0, 0x1);
        gbc.writeMem(0x68fc, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbc41, gbc.sp());
        EXPECT(0x68fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0366
        gbc.setState(0x3ac6, 0x1a0f, 0xd400, 0x2c6c, 0x1d2f, 0x3d5c, 0x0, 0x0);
        gbc.writeMem(0x3ac6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1a0f, gbc.sp());
        EXPECT(0x3ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0367
        gbc.setState(0x9eb2, 0x3a41, 0x1b40, 0xc630, 0xd43b, 0x34cb, 0x1, 0x1);
        gbc.writeMem(0x9eb2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3a41, gbc.sp());
        EXPECT(0x9eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb2));
        EXPECT(0xb5, gbc.readMem(0x9eb3));
        // CB B5 0368
        gbc.setState(0xdec5, 0xb1dc, 0xc270, 0xf85a, 0x989f, 0x52f3, 0x1, 0x0);
        gbc.writeMem(0xdec5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb1dc, gbc.sp());
        EXPECT(0xdec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec5));
        EXPECT(0xb5, gbc.readMem(0xdec6));
        // CB B5 0369
        gbc.setState(0xd3d1, 0x8c75, 0x8200, 0xc19a, 0xc944, 0x8b9c, 0x0, 0x0);
        gbc.writeMem(0xd3d1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8c75, gbc.sp());
        EXPECT(0xd3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d1));
        EXPECT(0xb5, gbc.readMem(0xd3d2));
        // CB B5 036A
        gbc.setState(0x2fb1, 0x5728, 0xd290, 0x20bc, 0x969c, 0xd14e, 0x1, 0x0);
        gbc.writeMem(0x2fb1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5728, gbc.sp());
        EXPECT(0x2fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 036B
        gbc.setState(0x2b9f, 0xd98c, 0x93f0, 0x5378, 0x7cc3, 0x3164, 0x0, 0x0);
        gbc.writeMem(0x2b9f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd98c, gbc.sp());
        EXPECT(0x2ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 036C
        gbc.setState(0xe21, 0x2623, 0x73c0, 0x1f3, 0x3568, 0x122f, 0x1, 0x0);
        gbc.writeMem(0xe21, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2623, gbc.sp());
        EXPECT(0xe23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 036D
        gbc.setState(0x6117, 0xaa27, 0xc050, 0xdb1c, 0x302a, 0xd85c, 0x0, 0x1);
        gbc.writeMem(0x6117, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xaa27, gbc.sp());
        EXPECT(0x6119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 036F
        gbc.setState(0xad0d, 0xbde6, 0xb1c0, 0x4a0f, 0x7efc, 0xa2f3, 0x0, 0x0);
        gbc.writeMem(0xad0d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbde6, gbc.sp());
        EXPECT(0xad0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad0d));
        EXPECT(0xb5, gbc.readMem(0xad0e));
        // CB B5 0371
        gbc.setState(0x8f49, 0xd80c, 0x9bb0, 0x77a3, 0x8e97, 0x1548, 0x0, 0x1);
        gbc.writeMem(0x8f49, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd80c, gbc.sp());
        EXPECT(0x8f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f49));
        EXPECT(0xb5, gbc.readMem(0x8f4a));
        // CB B5 0372
        gbc.setState(0xe6c, 0x1f68, 0xa730, 0x378f, 0xf19e, 0x2141, 0x1, 0x0);
        gbc.writeMem(0xe6c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1f68, gbc.sp());
        EXPECT(0xe6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0373
        gbc.setState(0x9300, 0x63c4, 0x5a30, 0x687e, 0x6bf8, 0x19dd, 0x1, 0x0);
        gbc.writeMem(0x9300, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x63c4, gbc.sp());
        EXPECT(0x9302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9300));
        EXPECT(0xb5, gbc.readMem(0x9301));
        // CB B5 0374
        gbc.setState(0x8ddd, 0x1cbd, 0xb520, 0x34b6, 0xbf1c, 0x5b61, 0x0, 0x0);
        gbc.writeMem(0x8ddd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1cbd, gbc.sp());
        EXPECT(0x8ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ddd));
        EXPECT(0xb5, gbc.readMem(0x8dde));
        // CB B5 0375
        gbc.setState(0x7d40, 0x83ab, 0xeef0, 0x7937, 0x6066, 0x6ab7, 0x1, 0x1);
        gbc.writeMem(0x7d40, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x83ab, gbc.sp());
        EXPECT(0x7d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0376
        gbc.setState(0x60fd, 0x41cd, 0x38e0, 0x5ff4, 0xaeb, 0xd19a, 0x1, 0x1);
        gbc.writeMem(0x60fd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x41cd, gbc.sp());
        EXPECT(0x60ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0377
        gbc.setState(0xb660, 0xb619, 0x4c20, 0x540a, 0x1d34, 0x451f, 0x0, 0x0);
        gbc.writeMem(0xb660, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb619, gbc.sp());
        EXPECT(0xb662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb660));
        EXPECT(0xb5, gbc.readMem(0xb661));
        // CB B5 0378
        gbc.setState(0x5114, 0x2e45, 0xfb70, 0xfc22, 0x5a15, 0xcd6d, 0x1, 0x0);
        gbc.writeMem(0x5114, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2e45, gbc.sp());
        EXPECT(0x5116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0379
        gbc.setState(0xaade, 0xe8f6, 0x3fc0, 0x3d02, 0xa67e, 0xd87, 0x0, 0x0);
        gbc.writeMem(0xaade, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe8f6, gbc.sp());
        EXPECT(0xaae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaade));
        EXPECT(0xb5, gbc.readMem(0xaadf));
        // CB B5 037A
        gbc.setState(0xdfda, 0xb437, 0xe890, 0xf631, 0xe2bf, 0x40cd, 0x1, 0x0);
        gbc.writeMem(0xdfda, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb437, gbc.sp());
        EXPECT(0xdfdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfda));
        EXPECT(0xb5, gbc.readMem(0xdfdb));
        // CB B5 037B
        gbc.setState(0x98b2, 0x7838, 0xa60, 0x777, 0xfb87, 0x5ea9, 0x1, 0x1);
        gbc.writeMem(0x98b2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7838, gbc.sp());
        EXPECT(0x98b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b2));
        EXPECT(0xb5, gbc.readMem(0x98b3));
        // CB B5 037D
        gbc.setState(0x71d7, 0x81db, 0x2e10, 0xc3b, 0xde94, 0x6920, 0x0, 0x0);
        gbc.writeMem(0x71d7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x81db, gbc.sp());
        EXPECT(0x71d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 037E
        gbc.setState(0x41d4, 0x2f99, 0x7740, 0xb67b, 0x3059, 0x6a78, 0x1, 0x0);
        gbc.writeMem(0x41d4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2f99, gbc.sp());
        EXPECT(0x41d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 037F
        gbc.setState(0x79e0, 0x6e76, 0xbd00, 0xe9d1, 0x5b12, 0x9d1f, 0x0, 0x0);
        gbc.writeMem(0x79e0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6e76, gbc.sp());
        EXPECT(0x79e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0380
        gbc.setState(0xbe17, 0xff32, 0x9b50, 0x1493, 0x60f0, 0x29d9, 0x1, 0x1);
        gbc.writeMem(0xbe17, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xff32, gbc.sp());
        EXPECT(0xbe19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe17));
        EXPECT(0xb5, gbc.readMem(0xbe18));
        // CB B5 0381
        gbc.setState(0x4596, 0x2564, 0x3a70, 0xa997, 0xe7b5, 0xb1b4, 0x1, 0x1);
        gbc.writeMem(0x4596, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2564, gbc.sp());
        EXPECT(0x4598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0382
        gbc.setState(0xc2f5, 0x2dd0, 0x2970, 0xd4a, 0x52c1, 0xc883, 0x1, 0x0);
        gbc.writeMem(0xc2f5, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2dd0, gbc.sp());
        EXPECT(0xc2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f5));
        EXPECT(0xb5, gbc.readMem(0xc2f6));
        // CB B5 0383
        gbc.setState(0x1eb2, 0xafa2, 0x8dd0, 0xc34a, 0x691, 0xf4a, 0x0, 0x1);
        gbc.writeMem(0x1eb2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xafa2, gbc.sp());
        EXPECT(0x1eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0384
        gbc.setState(0x30f3, 0x3154, 0x8f30, 0xe5cc, 0x733b, 0x159e, 0x0, 0x1);
        gbc.writeMem(0x30f3, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3154, gbc.sp());
        EXPECT(0x30f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0385
        gbc.setState(0x809f, 0x3a37, 0xf690, 0xd3c3, 0xed29, 0xac09, 0x0, 0x0);
        gbc.writeMem(0x809f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3a37, gbc.sp());
        EXPECT(0x80a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809f));
        EXPECT(0xb5, gbc.readMem(0x80a0));
        // CB B5 0386
        gbc.setState(0xc795, 0x3811, 0x6c60, 0xdf1b, 0x4bb8, 0x2c33, 0x1, 0x0);
        gbc.writeMem(0xc795, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3811, gbc.sp());
        EXPECT(0xc797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc795));
        EXPECT(0xb5, gbc.readMem(0xc796));
        // CB B5 0387
        gbc.setState(0x9a29, 0x7a60, 0x9c10, 0x3903, 0xd851, 0xa0a5, 0x0, 0x1);
        gbc.writeMem(0x9a29, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7a60, gbc.sp());
        EXPECT(0x9a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a29));
        EXPECT(0xb5, gbc.readMem(0x9a2a));
        // CB B5 0388
        gbc.setState(0x739e, 0x69c3, 0x53f0, 0x2561, 0xd22c, 0x4c73, 0x0, 0x1);
        gbc.writeMem(0x739e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x69c3, gbc.sp());
        EXPECT(0x73a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0389
        gbc.setState(0xc3d2, 0x3860, 0xf310, 0xdffb, 0x85c2, 0x849d, 0x1, 0x1);
        gbc.writeMem(0xc3d2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3860, gbc.sp());
        EXPECT(0xc3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d2));
        EXPECT(0xb5, gbc.readMem(0xc3d3));
        // CB B5 038A
        gbc.setState(0xc9d7, 0x3f9f, 0x4e90, 0xb331, 0x29cb, 0xe0d2, 0x0, 0x0);
        gbc.writeMem(0xc9d7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3f9f, gbc.sp());
        EXPECT(0xc9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d7));
        EXPECT(0xb5, gbc.readMem(0xc9d8));
        // CB B5 038B
        gbc.setState(0x25ce, 0x219e, 0x29f0, 0xb287, 0xbf24, 0xee5, 0x0, 0x1);
        gbc.writeMem(0x25ce, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x219e, gbc.sp());
        EXPECT(0x25d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 038C
        gbc.setState(0xdecc, 0x2e1c, 0xc290, 0x3c9d, 0x1ccf, 0xdc6a, 0x0, 0x1);
        gbc.writeMem(0xdecc, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2e1c, gbc.sp());
        EXPECT(0xdece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdecc));
        EXPECT(0xb5, gbc.readMem(0xdecd));
        // CB B5 038D
        gbc.setState(0x83e9, 0x27d2, 0x1e90, 0xe205, 0x4778, 0x3da4, 0x1, 0x1);
        gbc.writeMem(0x83e9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x27d2, gbc.sp());
        EXPECT(0x83eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e9));
        EXPECT(0xb5, gbc.readMem(0x83ea));
        // CB B5 0390
        gbc.setState(0x563f, 0x80a6, 0xe960, 0x7ab5, 0x2489, 0x5099, 0x1, 0x0);
        gbc.writeMem(0x563f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x80a6, gbc.sp());
        EXPECT(0x5641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0391
        gbc.setState(0x653f, 0xf8aa, 0xd970, 0x13a4, 0x9a87, 0xb547, 0x1, 0x0);
        gbc.writeMem(0x653f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf8aa, gbc.sp());
        EXPECT(0x6541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0392
        gbc.setState(0x55df, 0x8d91, 0xaa30, 0x5130, 0xff9b, 0x2b97, 0x1, 0x0);
        gbc.writeMem(0x55df, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8d91, gbc.sp());
        EXPECT(0x55e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 0393
        gbc.setState(0xb904, 0x3904, 0xf470, 0xfc, 0x4fb, 0xf83a, 0x0, 0x0);
        gbc.writeMem(0xb904, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3904, gbc.sp());
        EXPECT(0xb906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb904));
        EXPECT(0xb5, gbc.readMem(0xb905));
        // CB B5 0394
        gbc.setState(0xd255, 0xd669, 0x4e70, 0xbc92, 0xf657, 0xa320, 0x0, 0x0);
        gbc.writeMem(0xd255, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd669, gbc.sp());
        EXPECT(0xd257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd255));
        EXPECT(0xb5, gbc.readMem(0xd256));
        // CB B5 0396
        gbc.setState(0x54c8, 0xc49a, 0xd9c0, 0x125d, 0x5274, 0xb79c, 0x0, 0x0);
        gbc.writeMem(0x54c8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc49a, gbc.sp());
        EXPECT(0x54ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 0398
        gbc.setState(0x8e4d, 0x4e1f, 0x8130, 0x5eb4, 0x59a7, 0x66e2, 0x0, 0x1);
        gbc.writeMem(0x8e4d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4e1f, gbc.sp());
        EXPECT(0x8e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e4d));
        EXPECT(0xb5, gbc.readMem(0x8e4e));
        // CB B5 039A
        gbc.setState(0x6279, 0x5ad7, 0xe5c0, 0xa3e4, 0x9c36, 0x36f5, 0x0, 0x1);
        gbc.writeMem(0x6279, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5ad7, gbc.sp());
        EXPECT(0x627b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 039B
        gbc.setState(0x5025, 0x776c, 0x64e0, 0x2e5c, 0x3045, 0x5b76, 0x1, 0x0);
        gbc.writeMem(0x5025, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x776c, gbc.sp());
        EXPECT(0x5027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 039C
        gbc.setState(0xaeec, 0x87f5, 0x16f0, 0x532e, 0x15, 0x4185, 0x0, 0x0);
        gbc.writeMem(0xaeec, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x87f5, gbc.sp());
        EXPECT(0xaeee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeec));
        EXPECT(0xb5, gbc.readMem(0xaeed));
        // CB B5 039D
        gbc.setState(0xc727, 0x4d7b, 0x4550, 0x7ba4, 0xc787, 0x4a57, 0x1, 0x0);
        gbc.writeMem(0xc727, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4d7b, gbc.sp());
        EXPECT(0xc729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc727));
        EXPECT(0xb5, gbc.readMem(0xc728));
        // CB B5 039E
        gbc.setState(0xb17b, 0x2f0b, 0x55c0, 0xa3b8, 0x388f, 0xf90d, 0x1, 0x1);
        gbc.writeMem(0xb17b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2f0b, gbc.sp());
        EXPECT(0xb17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17b));
        EXPECT(0xb5, gbc.readMem(0xb17c));
        // CB B5 039F
        gbc.setState(0x3f4a, 0x8627, 0x9a70, 0xf872, 0x8625, 0x26d5, 0x1, 0x0);
        gbc.writeMem(0x3f4a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8627, gbc.sp());
        EXPECT(0x3f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03A0
        gbc.setState(0x477, 0xe384, 0x3510, 0x78b2, 0xb998, 0xafc8, 0x1, 0x1);
        gbc.writeMem(0x477, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe384, gbc.sp());
        EXPECT(0x479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03A1
        gbc.setState(0x53a0, 0xe35f, 0x6a00, 0x28e6, 0xc887, 0xa0e8, 0x0, 0x0);
        gbc.writeMem(0x53a0, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe35f, gbc.sp());
        EXPECT(0x53a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03A2
        gbc.setState(0x454b, 0xaa51, 0xee0, 0xc55d, 0xe350, 0x47fe, 0x1, 0x1);
        gbc.writeMem(0x454b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xaa51, gbc.sp());
        EXPECT(0x454d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03A3
        gbc.setState(0xe5d6, 0x8b0, 0xa20, 0xaf08, 0x7a97, 0x1ae1, 0x0, 0x1);
        gbc.writeMem(0xe5d6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8b0, gbc.sp());
        EXPECT(0xe5d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d6));
        EXPECT(0xb5, gbc.readMem(0xe5d7));
        // CB B5 03A4
        gbc.setState(0x885a, 0x12c1, 0x840, 0x50b6, 0x21b6, 0xbdbb, 0x1, 0x1);
        gbc.writeMem(0x885a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x12c1, gbc.sp());
        EXPECT(0x885c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x885a));
        EXPECT(0xb5, gbc.readMem(0x885b));
        // CB B5 03A5
        gbc.setState(0x60a6, 0xb910, 0xbd40, 0x64b2, 0xdfa2, 0xbd, 0x1, 0x0);
        gbc.writeMem(0x60a6, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb910, gbc.sp());
        EXPECT(0x60a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03A6
        gbc.setState(0xab82, 0xcda2, 0x3cc0, 0xda29, 0x6db, 0x92f2, 0x0, 0x0);
        gbc.writeMem(0xab82, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcda2, gbc.sp());
        EXPECT(0xab84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab82));
        EXPECT(0xb5, gbc.readMem(0xab83));
        // CB B5 03A7
        gbc.setState(0xa61d, 0x3ca2, 0x650, 0x6062, 0xd3ed, 0x380f, 0x1, 0x0);
        gbc.writeMem(0xa61d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3ca2, gbc.sp());
        EXPECT(0xa61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa61d));
        EXPECT(0xb5, gbc.readMem(0xa61e));
        // CB B5 03A8
        gbc.setState(0xfa1, 0x86bf, 0xdd60, 0x9b9c, 0xd7d2, 0xf3da, 0x0, 0x0);
        gbc.writeMem(0xfa1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x86bf, gbc.sp());
        EXPECT(0xfa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03A9
        gbc.setState(0x1235, 0xd4d, 0x2080, 0x4e35, 0x6e6a, 0xcc9b, 0x1, 0x1);
        gbc.writeMem(0x1235, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd4d, gbc.sp());
        EXPECT(0x1237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03AA
        gbc.setState(0x6522, 0x4641, 0x1d30, 0x7d4a, 0x1211, 0xb2d3, 0x0, 0x1);
        gbc.writeMem(0x6522, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4641, gbc.sp());
        EXPECT(0x6524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03AB
        gbc.setState(0x94cc, 0x84ce, 0xd5b0, 0x6e0a, 0x6269, 0xb86e, 0x1, 0x1);
        gbc.writeMem(0x94cc, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x84ce, gbc.sp());
        EXPECT(0x94ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cc));
        EXPECT(0xb5, gbc.readMem(0x94cd));
        // CB B5 03AC
        gbc.setState(0xefc2, 0x1a96, 0x1800, 0x528d, 0xf90c, 0x459e, 0x1, 0x1);
        gbc.writeMem(0xefc2, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1a96, gbc.sp());
        EXPECT(0xefc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc2));
        EXPECT(0xb5, gbc.readMem(0xefc3));
        // CB B5 03AD
        gbc.setState(0x1a5a, 0xe4f9, 0xad00, 0x1a39, 0xfe3a, 0x6372, 0x0, 0x0);
        gbc.writeMem(0x1a5a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe4f9, gbc.sp());
        EXPECT(0x1a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03AE
        gbc.setState(0xbca1, 0xc1d4, 0x3cd0, 0x8d2c, 0xb287, 0x7d2, 0x0, 0x0);
        gbc.writeMem(0xbca1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc1d4, gbc.sp());
        EXPECT(0xbca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca1));
        EXPECT(0xb5, gbc.readMem(0xbca2));
        // CB B5 03AF
        gbc.setState(0x3aad, 0xec64, 0x34f0, 0x11d6, 0xf693, 0xeebd, 0x1, 0x0);
        gbc.writeMem(0x3aad, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xec64, gbc.sp());
        EXPECT(0x3aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03B0
        gbc.setState(0x9691, 0x8b79, 0x230, 0xb563, 0xd6bb, 0xa358, 0x1, 0x1);
        gbc.writeMem(0x9691, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8b79, gbc.sp());
        EXPECT(0x9693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9691));
        EXPECT(0xb5, gbc.readMem(0x9692));
        // CB B5 03B1
        gbc.setState(0x267b, 0xb16b, 0xc2e0, 0xf42e, 0xf170, 0x95c2, 0x1, 0x1);
        gbc.writeMem(0x267b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb16b, gbc.sp());
        EXPECT(0x267d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03B2
        gbc.setState(0x78fd, 0xe5f4, 0x81d0, 0xba9e, 0x8fad, 0x120b, 0x1, 0x0);
        gbc.writeMem(0x78fd, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe5f4, gbc.sp());
        EXPECT(0x78ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03B3
        gbc.setState(0xce78, 0xf7e1, 0x5000, 0x18e6, 0x7b8f, 0x691, 0x0, 0x1);
        gbc.writeMem(0xce78, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf7e1, gbc.sp());
        EXPECT(0xce7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce78));
        EXPECT(0xb5, gbc.readMem(0xce79));
        // CB B5 03B4
        gbc.setState(0x15c7, 0xcf03, 0xdef0, 0x58b, 0xa413, 0x829f, 0x1, 0x1);
        gbc.writeMem(0x15c7, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcf03, gbc.sp());
        EXPECT(0x15c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03B5
        gbc.setState(0xa97c, 0xcef4, 0x5980, 0xfd86, 0x526e, 0x1077, 0x1, 0x1);
        gbc.writeMem(0xa97c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcef4, gbc.sp());
        EXPECT(0xa97e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97c));
        EXPECT(0xb5, gbc.readMem(0xa97d));
        // CB B5 03B6
        gbc.setState(0x9102, 0x3c18, 0x9f70, 0x916d, 0xc21a, 0x8d54, 0x0, 0x0);
        gbc.writeMem(0x9102, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3c18, gbc.sp());
        EXPECT(0x9104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9102));
        EXPECT(0xb5, gbc.readMem(0x9103));
        // CB B5 03B7
        gbc.setState(0xacac, 0x591, 0x2e70, 0xbb7e, 0x2a4d, 0x67c8, 0x1, 0x0);
        gbc.writeMem(0xacac, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x591, gbc.sp());
        EXPECT(0xacae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacac));
        EXPECT(0xb5, gbc.readMem(0xacad));
        // CB B5 03B8
        gbc.setState(0xd7fa, 0xf919, 0x11a0, 0x5052, 0x42bb, 0x6ec, 0x0, 0x0);
        gbc.writeMem(0xd7fa, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf919, gbc.sp());
        EXPECT(0xd7fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7fa));
        EXPECT(0xb5, gbc.readMem(0xd7fb));
        // CB B5 03B9
        gbc.setState(0x9f49, 0xb45d, 0xbcb0, 0x5c42, 0x3094, 0xa9c1, 0x1, 0x0);
        gbc.writeMem(0x9f49, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb45d, gbc.sp());
        EXPECT(0x9f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f49));
        EXPECT(0xb5, gbc.readMem(0x9f4a));
        // CB B5 03BA
        gbc.setState(0xec3f, 0xbe5c, 0xc430, 0x204e, 0xae7, 0x374, 0x1, 0x1);
        gbc.writeMem(0xec3f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbe5c, gbc.sp());
        EXPECT(0xec41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec3f));
        EXPECT(0xb5, gbc.readMem(0xec40));
        // CB B5 03BB
        gbc.setState(0x9e8c, 0xc5bd, 0x7b30, 0x1372, 0xdca6, 0x3890, 0x1, 0x0);
        gbc.writeMem(0x9e8c, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc5bd, gbc.sp());
        EXPECT(0x9e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e8c));
        EXPECT(0xb5, gbc.readMem(0x9e8d));
        // CB B5 03BC
        gbc.setState(0x7d96, 0x987d, 0x31a0, 0x27d7, 0xb792, 0xc3f9, 0x1, 0x1);
        gbc.writeMem(0x7d96, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x987d, gbc.sp());
        EXPECT(0x7d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03BD
        gbc.setState(0x9a07, 0xde46, 0xdb00, 0xdc9e, 0x7b97, 0x752d, 0x1, 0x1);
        gbc.writeMem(0x9a07, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xde46, gbc.sp());
        EXPECT(0x9a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a07));
        EXPECT(0xb5, gbc.readMem(0x9a08));
        // CB B5 03BE
        gbc.setState(0x2489, 0x4b40, 0xdc10, 0x9154, 0x5544, 0x346d, 0x0, 0x0);
        gbc.writeMem(0x2489, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4b40, gbc.sp());
        EXPECT(0x248b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03BF
        gbc.setState(0x130e, 0x5f8b, 0xc250, 0x8aa8, 0x1d6d, 0xe9b1, 0x0, 0x1);
        gbc.writeMem(0x130e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5f8b, gbc.sp());
        EXPECT(0x1310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03C0
        gbc.setState(0xe06f, 0x4b82, 0x9c00, 0x4bc3, 0x23f5, 0x7418, 0x0, 0x0);
        gbc.writeMem(0xe06f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4b82, gbc.sp());
        EXPECT(0xe071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06f));
        EXPECT(0xb5, gbc.readMem(0xe070));
        // CB B5 03C1
        gbc.setState(0xd894, 0x8be3, 0xe870, 0xb1e4, 0x4ef, 0xf531, 0x1, 0x0);
        gbc.writeMem(0xd894, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8be3, gbc.sp());
        EXPECT(0xd896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd894));
        EXPECT(0xb5, gbc.readMem(0xd895));
        // CB B5 03C2
        gbc.setState(0x8613, 0x5f30, 0x4d40, 0x875f, 0xe726, 0xb911, 0x0, 0x0);
        gbc.writeMem(0x8613, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5f30, gbc.sp());
        EXPECT(0x8615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8613));
        EXPECT(0xb5, gbc.readMem(0x8614));
        // CB B5 03C3
        gbc.setState(0xe142, 0xed3b, 0x55f0, 0x4d07, 0xb7c5, 0x9337, 0x0, 0x1);
        gbc.writeMem(0xe142, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xed3b, gbc.sp());
        EXPECT(0xe144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe142));
        EXPECT(0xb5, gbc.readMem(0xe143));
        // CB B5 03C4
        gbc.setState(0x6dfa, 0xa194, 0x2880, 0xab8c, 0xde62, 0xe6ca, 0x0, 0x1);
        gbc.writeMem(0x6dfa, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa194, gbc.sp());
        EXPECT(0x6dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03C5
        gbc.setState(0x310f, 0x2487, 0xd810, 0xbd27, 0x24e7, 0x9a4e, 0x1, 0x0);
        gbc.writeMem(0x310f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2487, gbc.sp());
        EXPECT(0x3111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03C6
        gbc.setState(0x6e8e, 0xbfe4, 0xcaa0, 0x8fb4, 0xee7a, 0xa47a, 0x1, 0x0);
        gbc.writeMem(0x6e8e, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbfe4, gbc.sp());
        EXPECT(0x6e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03C7
        gbc.setState(0xaa0f, 0x2368, 0x1030, 0x5a13, 0xbe62, 0x543, 0x1, 0x1);
        gbc.writeMem(0xaa0f, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2368, gbc.sp());
        EXPECT(0xaa11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0f));
        EXPECT(0xb5, gbc.readMem(0xaa10));
        // CB B5 03C8
        gbc.setState(0xa90d, 0xc51b, 0x7480, 0xfb22, 0x859b, 0x7782, 0x1, 0x1);
        gbc.writeMem(0xa90d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc51b, gbc.sp());
        EXPECT(0xa90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa90d));
        EXPECT(0xb5, gbc.readMem(0xa90e));
        // CB B5 03C9
        gbc.setState(0x41ee, 0x5bbf, 0x4210, 0xc8bb, 0x8515, 0x6742, 0x0, 0x1);
        gbc.writeMem(0x41ee, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5bbf, gbc.sp());
        EXPECT(0x41f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03CA
        gbc.setState(0x3ce8, 0x1707, 0xde40, 0xbc3a, 0xafab, 0xc6c0, 0x0, 0x0);
        gbc.writeMem(0x3ce8, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1707, gbc.sp());
        EXPECT(0x3cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03CB
        gbc.setState(0x5d24, 0x25b3, 0x1fa0, 0xadfb, 0x470d, 0xed58, 0x0, 0x0);
        gbc.writeMem(0x5d24, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x25b3, gbc.sp());
        EXPECT(0x5d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03CC
        gbc.setState(0x4bfb, 0x74f3, 0xc000, 0x54e3, 0x32d1, 0x3c74, 0x1, 0x0);
        gbc.writeMem(0x4bfb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x74f3, gbc.sp());
        EXPECT(0x4bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03CD
        gbc.setState(0x8b25, 0xf7c1, 0x62b0, 0x415a, 0x33f4, 0xedf7, 0x0, 0x1);
        gbc.writeMem(0x8b25, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf7c1, gbc.sp());
        EXPECT(0x8b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b25));
        EXPECT(0xb5, gbc.readMem(0x8b26));
        // CB B5 03CE
        gbc.setState(0x34be, 0x3a95, 0xd370, 0x2cc1, 0xe814, 0x7f03, 0x0, 0x1);
        gbc.writeMem(0x34be, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3a95, gbc.sp());
        EXPECT(0x34c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03CF
        gbc.setState(0xaf41, 0x8e29, 0xc300, 0xdf49, 0xd5e4, 0x2f4, 0x1, 0x1);
        gbc.writeMem(0xaf41, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8e29, gbc.sp());
        EXPECT(0xaf43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf41));
        EXPECT(0xb5, gbc.readMem(0xaf42));
        // CB B5 03D0
        gbc.setState(0x82c4, 0x579c, 0x9030, 0x6201, 0xb64f, 0x26b8, 0x1, 0x0);
        gbc.writeMem(0x82c4, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x579c, gbc.sp());
        EXPECT(0x82c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c4));
        EXPECT(0xb5, gbc.readMem(0x82c5));
        // CB B5 03D1
        gbc.setState(0x7623, 0x10de, 0xf3c0, 0xf417, 0x184b, 0x8d57, 0x0, 0x0);
        gbc.writeMem(0x7623, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x10de, gbc.sp());
        EXPECT(0x7625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03D2
        gbc.setState(0x3e4a, 0xdc8c, 0x4f40, 0x753f, 0xa2b0, 0xcff4, 0x1, 0x1);
        gbc.writeMem(0x3e4a, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdc8c, gbc.sp());
        EXPECT(0x3e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03D3
        gbc.setState(0xc822, 0x2262, 0xfce0, 0xf955, 0x2fe5, 0xd01a, 0x0, 0x0);
        gbc.writeMem(0xc822, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2262, gbc.sp());
        EXPECT(0xc824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc822));
        EXPECT(0xb5, gbc.readMem(0xc823));
        // CB B5 03D4
        gbc.setState(0xbbd9, 0xfe00, 0x9c50, 0x1bbb, 0xe223, 0xe587, 0x1, 0x0);
        gbc.writeMem(0xbbd9, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfe00, gbc.sp());
        EXPECT(0xbbdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd9));
        EXPECT(0xb5, gbc.readMem(0xbbda));
        // CB B5 03D5
        gbc.setState(0xa52d, 0xd6e6, 0x83a0, 0x8b01, 0x94f4, 0xfcea, 0x1, 0x0);
        gbc.writeMem(0xa52d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd6e6, gbc.sp());
        EXPECT(0xa52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa52d));
        EXPECT(0xb5, gbc.readMem(0xa52e));
        // CB B5 03D6
        gbc.setState(0x1a70, 0x4ee8, 0x7430, 0x7f55, 0xf834, 0x4a55, 0x0, 0x0);
        gbc.writeMem(0x1a70, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4ee8, gbc.sp());
        EXPECT(0x1a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03D7
        gbc.setState(0x421, 0x1b12, 0x94c0, 0x6f06, 0x498, 0xc78c, 0x0, 0x1);
        gbc.writeMem(0x421, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1b12, gbc.sp());
        EXPECT(0x423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03D8
        gbc.setState(0xa742, 0xcf6d, 0x6d90, 0x4d9b, 0x5551, 0xbaa8, 0x1, 0x1);
        gbc.writeMem(0xa742, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcf6d, gbc.sp());
        EXPECT(0xa744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa742));
        EXPECT(0xb5, gbc.readMem(0xa743));
        // CB B5 03D9
        gbc.setState(0x95ce, 0x2664, 0x760, 0xe410, 0xeabd, 0xf447, 0x0, 0x1);
        gbc.writeMem(0x95ce, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2664, gbc.sp());
        EXPECT(0x95d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ce));
        EXPECT(0xb5, gbc.readMem(0x95cf));
        // CB B5 03DA
        gbc.setState(0xb157, 0xddc3, 0x2dd0, 0xf03a, 0xa969, 0xeff8, 0x1, 0x0);
        gbc.writeMem(0xb157, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xddc3, gbc.sp());
        EXPECT(0xb159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb157));
        EXPECT(0xb5, gbc.readMem(0xb158));
        // CB B5 03DB
        gbc.setState(0x4b06, 0x59be, 0x7b90, 0xf3a, 0xd57b, 0x844c, 0x0, 0x0);
        gbc.writeMem(0x4b06, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x59be, gbc.sp());
        EXPECT(0x4b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03DC
        gbc.setState(0x3989, 0x50a9, 0x37f0, 0x1a47, 0xac4d, 0xf727, 0x0, 0x1);
        gbc.writeMem(0x3989, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x50a9, gbc.sp());
        EXPECT(0x398b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03DD
        gbc.setState(0xd187, 0x7335, 0xd720, 0x5e78, 0x800c, 0x3deb, 0x1, 0x1);
        gbc.writeMem(0xd187, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7335, gbc.sp());
        EXPECT(0xd189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd187));
        EXPECT(0xb5, gbc.readMem(0xd188));
        // CB B5 03DE
        gbc.setState(0xe436, 0x1ba8, 0xb6f0, 0xe8bf, 0xe7b3, 0x24c6, 0x0, 0x1);
        gbc.writeMem(0xe436, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1ba8, gbc.sp());
        EXPECT(0xe438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe436));
        EXPECT(0xb5, gbc.readMem(0xe437));
        // CB B5 03DF
        gbc.setState(0x889b, 0x4672, 0x64e0, 0xc66d, 0x3346, 0x1031, 0x1, 0x0);
        gbc.writeMem(0x889b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4672, gbc.sp());
        EXPECT(0x889d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x889b));
        EXPECT(0xb5, gbc.readMem(0x889c));
        // CB B5 03E0
        gbc.setState(0x64f1, 0x6601, 0xc7b0, 0xabb8, 0xbe9d, 0x8858, 0x1, 0x1);
        gbc.writeMem(0x64f1, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6601, gbc.sp());
        EXPECT(0x64f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03E1
        gbc.setState(0xdb54, 0xa6f5, 0xa10, 0x2efd, 0xa4bb, 0x9957, 0x0, 0x1);
        gbc.writeMem(0xdb54, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa6f5, gbc.sp());
        EXPECT(0xdb56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb54));
        EXPECT(0xb5, gbc.readMem(0xdb55));
        // CB B5 03E2
        gbc.setState(0x5a1b, 0x6b2, 0x2be0, 0x36ed, 0xd7e0, 0x2a26, 0x1, 0x0);
        gbc.writeMem(0x5a1b, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6b2, gbc.sp());
        EXPECT(0x5a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03E3
        gbc.setState(0x175d, 0xaad1, 0x680, 0xc054, 0x54ff, 0xd597, 0x0, 0x1);
        gbc.writeMem(0x175d, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xaad1, gbc.sp());
        EXPECT(0x175f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03E4
        gbc.setState(0x8268, 0xc8b2, 0x12e0, 0x16a8, 0xcb57, 0xba47, 0x0, 0x1);
        gbc.writeMem(0x8268, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc8b2, gbc.sp());
        EXPECT(0x826a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8268));
        EXPECT(0xb5, gbc.readMem(0x8269));
        // CB B5 03E5
        gbc.setState(0x2b73, 0xa6b2, 0x590, 0xb897, 0xaa9a, 0xb01d, 0x0, 0x0);
        gbc.writeMem(0x2b73, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa6b2, gbc.sp());
        EXPECT(0x2b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B5 03E6
        gbc.setState(0x1b50, 0xbff4, 0x56e0, 0xbaea, 0xdd99, 0x9b0f, 0x0, 0x1);
        gbc.writeMem(0x1b50, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbff4, gbc.sp());
        EXPECT(0x1b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B5 03E7
        gbc.setState(0xe1fb, 0xcef, 0xa050, 0xbdfa, 0xa329, 0xb152, 0x1, 0x1);
        gbc.writeMem(0xe1fb, { 0xcb, 0xb5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcef, gbc.sp());
        EXPECT(0xe1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1fb));
        EXPECT(0xb5, gbc.readMem(0xe1fc));
    }
