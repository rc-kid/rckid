    TEST(gbcemu, opcode_29) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 29 0000
        gbc.setState(0x4146, 0x349, 0xab50, 0x681d, 0x2ca4, 0xa80c, 0x0, 0x0);
        gbc.writeMem(0x4146, { 0x29 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x349, gbc.sp());
        EXPECT(0x4147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0001
        gbc.setState(0x43a9, 0x4f76, 0x3190, 0x698d, 0x4b36, 0x8dba, 0x1, 0x1);
        gbc.writeMem(0x43a9, { 0x29 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4f76, gbc.sp());
        EXPECT(0x43aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0005
        gbc.setState(0x63bd, 0xe4cf, 0xd310, 0x1436, 0x677, 0x1047, 0x0, 0x0);
        gbc.writeMem(0x63bd, { 0x29 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe4cf, gbc.sp());
        EXPECT(0x63be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0006
        gbc.setState(0x448, 0x8421, 0x96b0, 0x9cb7, 0x168a, 0x1276, 0x1, 0x1);
        gbc.writeMem(0x448, { 0x29 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8421, gbc.sp());
        EXPECT(0x449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0007
        gbc.setState(0xa623, 0x9a8e, 0x1900, 0x2a1c, 0x141e, 0x3660, 0x0, 0x0);
        gbc.writeMem(0xa623, { 0x29 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9a8e, gbc.sp());
        EXPECT(0xa624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa623));
        // 29 0008
        gbc.setState(0xcce0, 0x9295, 0xb190, 0xf2f0, 0x2a7, 0x1312, 0x1, 0x0);
        gbc.writeMem(0xcce0, { 0x29 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9295, gbc.sp());
        EXPECT(0xcce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcce0));
        // 29 0009
        gbc.setState(0xde55, 0x42da, 0x9b80, 0x5bd1, 0x7525, 0x3467, 0x1, 0x0);
        gbc.writeMem(0xde55, { 0x29 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x42da, gbc.sp());
        EXPECT(0xde56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xde55));
        // 29 000A
        gbc.setState(0xb84c, 0xbea2, 0xd740, 0xff63, 0xe94d, 0x1fa, 0x0, 0x0);
        gbc.writeMem(0xb84c, { 0x29 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbea2, gbc.sp());
        EXPECT(0xb84d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb84c));
        // 29 000B
        gbc.setState(0x6ef, 0x4669, 0x4490, 0x5eef, 0x418e, 0x1e0f, 0x0, 0x1);
        gbc.writeMem(0x6ef, { 0x29 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4669, gbc.sp());
        EXPECT(0x6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 000C
        gbc.setState(0xb028, 0x8a7a, 0x2110, 0x7c0a, 0x5d20, 0xf6ce, 0x0, 0x1);
        gbc.writeMem(0xb028, { 0x29 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8a7a, gbc.sp());
        EXPECT(0xb029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb028));
        // 29 000D
        gbc.setState(0x864f, 0x633d, 0x2ce0, 0x9fca, 0x9a98, 0x8862, 0x1, 0x0);
        gbc.writeMem(0x864f, { 0x29 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x633d, gbc.sp());
        EXPECT(0x8650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x864f));
        // 29 000E
        gbc.setState(0xad53, 0x5640, 0x1180, 0xbaf9, 0xfa1c, 0xd64b, 0x1, 0x0);
        gbc.writeMem(0xad53, { 0x29 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5640, gbc.sp());
        EXPECT(0xad54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xad53));
        // 29 000F
        gbc.setState(0x622a, 0xecad, 0x6660, 0x6195, 0x10e, 0xc04b, 0x0, 0x1);
        gbc.writeMem(0x622a, { 0x29 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xecad, gbc.sp());
        EXPECT(0x622b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0010
        gbc.setState(0xb3f7, 0xb5a7, 0xeda0, 0xc29, 0x2534, 0x8231, 0x1, 0x1);
        gbc.writeMem(0xb3f7, { 0x29 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb5a7, gbc.sp());
        EXPECT(0xb3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb3f7));
        // 29 0011
        gbc.setState(0x56b8, 0x80a7, 0xe300, 0x2b52, 0x3e2a, 0x5119, 0x1, 0x1);
        gbc.writeMem(0x56b8, { 0x29 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x80a7, gbc.sp());
        EXPECT(0x56b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0012
        gbc.setState(0x2dde, 0xa8e8, 0x2500, 0x2899, 0x36ba, 0x3a12, 0x1, 0x0);
        gbc.writeMem(0x2dde, { 0x29 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa8e8, gbc.sp());
        EXPECT(0x2ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0013
        gbc.setState(0x5618, 0x75e7, 0x56f0, 0x61bd, 0x7f85, 0xd57e, 0x1, 0x0);
        gbc.writeMem(0x5618, { 0x29 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x75e7, gbc.sp());
        EXPECT(0x5619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0014
        gbc.setState(0xc7e, 0xc74f, 0xa1f0, 0x323e, 0x1de0, 0x49f4, 0x1, 0x1);
        gbc.writeMem(0xc7e, { 0x29 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc74f, gbc.sp());
        EXPECT(0xc7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0015
        gbc.setState(0xa148, 0xbed4, 0xbbc0, 0x1aec, 0x3df4, 0x654a, 0x0, 0x1);
        gbc.writeMem(0xa148, { 0x29 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbed4, gbc.sp());
        EXPECT(0xa149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa148));
        // 29 0016
        gbc.setState(0x16be, 0x819e, 0x8e20, 0x9547, 0x9343, 0x2445, 0x1, 0x1);
        gbc.writeMem(0x16be, { 0x29 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x819e, gbc.sp());
        EXPECT(0x16bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0017
        gbc.setState(0x9e6e, 0x76d3, 0x3f80, 0x774, 0xb72f, 0x7413, 0x1, 0x0);
        gbc.writeMem(0x9e6e, { 0x29 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x76d3, gbc.sp());
        EXPECT(0x9e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9e6e));
        // 29 0018
        gbc.setState(0x9887, 0x2880, 0x70e0, 0xce9b, 0x8e08, 0xddaf, 0x1, 0x1);
        gbc.writeMem(0x9887, { 0x29 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2880, gbc.sp());
        EXPECT(0x9888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9887));
        // 29 0019
        gbc.setState(0x44e1, 0xbcb9, 0xcb10, 0xed2b, 0x5721, 0x816d, 0x0, 0x1);
        gbc.writeMem(0x44e1, { 0x29 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbcb9, gbc.sp());
        EXPECT(0x44e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 001A
        gbc.setState(0x55e4, 0x3ce9, 0x6580, 0x55c5, 0x328c, 0x13dc, 0x1, 0x1);
        gbc.writeMem(0x55e4, { 0x29 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3ce9, gbc.sp());
        EXPECT(0x55e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 001B
        gbc.setState(0x46ec, 0x9d5e, 0x5100, 0x5a5, 0xcbe8, 0x413c, 0x1, 0x0);
        gbc.writeMem(0x46ec, { 0x29 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9d5e, gbc.sp());
        EXPECT(0x46ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 001C
        gbc.setState(0x5591, 0x8be0, 0x5540, 0xce3a, 0xa45b, 0xd28c, 0x1, 0x1);
        gbc.writeMem(0x5591, { 0x29 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8be0, gbc.sp());
        EXPECT(0x5592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 001D
        gbc.setState(0xaa5c, 0xaa71, 0xa150, 0x95dd, 0x362c, 0x47fc, 0x0, 0x1);
        gbc.writeMem(0xaa5c, { 0x29 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xaa71, gbc.sp());
        EXPECT(0xaa5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xaa5c));
        // 29 001E
        gbc.setState(0x5c19, 0x585b, 0xabd0, 0xe64a, 0x6374, 0xc737, 0x1, 0x0);
        gbc.writeMem(0x5c19, { 0x29 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x585b, gbc.sp());
        EXPECT(0x5c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 001F
        gbc.setState(0x1f1c, 0xb182, 0xdbd0, 0xedd5, 0xd9a1, 0xf195, 0x1, 0x0);
        gbc.writeMem(0x1f1c, { 0x29 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb182, gbc.sp());
        EXPECT(0x1f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0020
        gbc.setState(0xa376, 0xd487, 0xa970, 0x6f05, 0xc08c, 0xb00d, 0x0, 0x1);
        gbc.writeMem(0xa376, { 0x29 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd487, gbc.sp());
        EXPECT(0xa377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa376));
        // 29 0023
        gbc.setState(0x4d0d, 0x31d, 0xa620, 0x4e84, 0xac31, 0x39d7, 0x1, 0x0);
        gbc.writeMem(0x4d0d, { 0x29 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x31d, gbc.sp());
        EXPECT(0x4d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0024
        gbc.setState(0x12e7, 0xc3b3, 0xa040, 0x883c, 0xfd0b, 0x9a45, 0x0, 0x1);
        gbc.writeMem(0x12e7, { 0x29 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc3b3, gbc.sp());
        EXPECT(0x12e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0026
        gbc.setState(0x8838, 0x6c34, 0x9ca0, 0xf743, 0x8003, 0xcb5b, 0x1, 0x0);
        gbc.writeMem(0x8838, { 0x29 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6c34, gbc.sp());
        EXPECT(0x8839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8838));
        // 29 0027
        gbc.setState(0xdb73, 0xb963, 0xd230, 0xad2c, 0x3878, 0x9126, 0x1, 0x0);
        gbc.writeMem(0xdb73, { 0x29 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb963, gbc.sp());
        EXPECT(0xdb74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdb73));
        // 29 0028
        gbc.setState(0x4c11, 0xeddb, 0x62e0, 0xfa23, 0x5c6a, 0xaab4, 0x0, 0x0);
        gbc.writeMem(0x4c11, { 0x29 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xeddb, gbc.sp());
        EXPECT(0x4c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0029
        gbc.setState(0xb4be, 0x9ca7, 0x8af0, 0x549, 0xc150, 0x4b9a, 0x0, 0x1);
        gbc.writeMem(0xb4be, { 0x29 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9ca7, gbc.sp());
        EXPECT(0xb4bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb4be));
        // 29 002A
        gbc.setState(0xd78a, 0x49b5, 0xe70, 0x4b8, 0x4efb, 0x4207, 0x1, 0x1);
        gbc.writeMem(0xd78a, { 0x29 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x49b5, gbc.sp());
        EXPECT(0xd78b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd78a));
        // 29 002B
        gbc.setState(0x519e, 0x175c, 0x5130, 0x59ed, 0xadb6, 0x8fc2, 0x1, 0x0);
        gbc.writeMem(0x519e, { 0x29 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x175c, gbc.sp());
        EXPECT(0x519f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 002C
        gbc.setState(0xae95, 0xb27c, 0xcc50, 0xa3aa, 0x774b, 0xfd5e, 0x1, 0x1);
        gbc.writeMem(0xae95, { 0x29 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb27c, gbc.sp());
        EXPECT(0xae96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xae95));
        // 29 002D
        gbc.setState(0xe84b, 0x99da, 0x4270, 0x2658, 0x9776, 0xfa54, 0x1, 0x0);
        gbc.writeMem(0xe84b, { 0x29 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x99da, gbc.sp());
        EXPECT(0xe84c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe84b));
        // 29 002E
        gbc.setState(0xd469, 0xcf0a, 0xf090, 0x82cf, 0x8c0c, 0x53f0, 0x0, 0x0);
        gbc.writeMem(0xd469, { 0x29 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcf0a, gbc.sp());
        EXPECT(0xd46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd469));
        // 29 002F
        gbc.setState(0x652e, 0x3527, 0xc30, 0xea20, 0x47c8, 0xaf70, 0x1, 0x1);
        gbc.writeMem(0x652e, { 0x29 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3527, gbc.sp());
        EXPECT(0x652f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0030
        gbc.setState(0x7f26, 0x5ad4, 0xac50, 0x6f80, 0x1f89, 0xc89f, 0x0, 0x1);
        gbc.writeMem(0x7f26, { 0x29 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5ad4, gbc.sp());
        EXPECT(0x7f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0031
        gbc.setState(0x18e, 0x4488, 0x4b40, 0x960f, 0x9eba, 0xdc76, 0x0, 0x1);
        gbc.writeMem(0x18e, { 0x29 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4488, gbc.sp());
        EXPECT(0x18f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0032
        gbc.setState(0xaf9f, 0xc831, 0xf1b0, 0x8758, 0x6f92, 0x127d, 0x0, 0x1);
        gbc.writeMem(0xaf9f, { 0x29 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc831, gbc.sp());
        EXPECT(0xafa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xaf9f));
        // 29 0033
        gbc.setState(0x913b, 0x7652, 0x650, 0xaf0a, 0x256d, 0x1947, 0x0, 0x1);
        gbc.writeMem(0x913b, { 0x29 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7652, gbc.sp());
        EXPECT(0x913c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x913b));
        // 29 0034
        gbc.setState(0x8f77, 0x5209, 0x5c10, 0xd65a, 0xb85c, 0xb835, 0x1, 0x1);
        gbc.writeMem(0x8f77, { 0x29 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5209, gbc.sp());
        EXPECT(0x8f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8f77));
        // 29 0037
        gbc.setState(0xa088, 0x56e, 0x9f50, 0x1495, 0xeac7, 0x5928, 0x1, 0x1);
        gbc.writeMem(0xa088, { 0x29 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x56e, gbc.sp());
        EXPECT(0xa089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa088));
        // 29 0038
        gbc.setState(0xb06c, 0xa848, 0x17f0, 0x9cf4, 0x9119, 0xf411, 0x0, 0x1);
        gbc.writeMem(0xb06c, { 0x29 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa848, gbc.sp());
        EXPECT(0xb06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb06c));
        // 29 0039
        gbc.setState(0xc48b, 0x200f, 0x7f40, 0x512b, 0x355d, 0x15b1, 0x1, 0x1);
        gbc.writeMem(0xc48b, { 0x29 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x200f, gbc.sp());
        EXPECT(0xc48c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc48b));
        // 29 003A
        gbc.setState(0xa128, 0xc070, 0xa2d0, 0x153, 0x8a7a, 0x52a0, 0x0, 0x0);
        gbc.writeMem(0xa128, { 0x29 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc070, gbc.sp());
        EXPECT(0xa129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa128));
        // 29 003B
        gbc.setState(0xbab0, 0x994b, 0xd570, 0x48df, 0x5cc2, 0x3afc, 0x0, 0x0);
        gbc.writeMem(0xbab0, { 0x29 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x994b, gbc.sp());
        EXPECT(0xbab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbab0));
        // 29 003C
        gbc.setState(0xabbb, 0xe9b, 0x9bf0, 0x1ccc, 0x81f0, 0xb9ea, 0x0, 0x0);
        gbc.writeMem(0xabbb, { 0x29 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe9b, gbc.sp());
        EXPECT(0xabbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xabbb));
        // 29 003D
        gbc.setState(0xd676, 0xfebb, 0x2450, 0xf05e, 0x797f, 0x6b33, 0x0, 0x0);
        gbc.writeMem(0xd676, { 0x29 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfebb, gbc.sp());
        EXPECT(0xd677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd676));
        // 29 003F
        gbc.setState(0x54b9, 0x5d64, 0x6220, 0x10b2, 0x751e, 0xa93c, 0x0, 0x0);
        gbc.writeMem(0x54b9, { 0x29 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5d64, gbc.sp());
        EXPECT(0x54ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0041
        gbc.setState(0x7848, 0xe068, 0xe130, 0xc7c, 0xb16c, 0x3ea, 0x0, 0x0);
        gbc.writeMem(0x7848, { 0x29 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe068, gbc.sp());
        EXPECT(0x7849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0042
        gbc.setState(0x18e1, 0x2a2d, 0xc8c0, 0x35c5, 0xfb5e, 0x760f, 0x1, 0x0);
        gbc.writeMem(0x18e1, { 0x29 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2a2d, gbc.sp());
        EXPECT(0x18e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0043
        gbc.setState(0x5c2b, 0xf68f, 0x4bd0, 0x6b23, 0xbb11, 0x8821, 0x1, 0x0);
        gbc.writeMem(0x5c2b, { 0x29 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf68f, gbc.sp());
        EXPECT(0x5c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0044
        gbc.setState(0x7caf, 0xfcf9, 0x7ef0, 0x2980, 0x6432, 0x6eb1, 0x1, 0x0);
        gbc.writeMem(0x7caf, { 0x29 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfcf9, gbc.sp());
        EXPECT(0x7cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0045
        gbc.setState(0xa441, 0x3384, 0x8a90, 0x4cfc, 0xecab, 0xf0c2, 0x0, 0x1);
        gbc.writeMem(0xa441, { 0x29 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3384, gbc.sp());
        EXPECT(0xa442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa441));
        // 29 0046
        gbc.setState(0x54e7, 0xa8c7, 0x1ec0, 0x40e3, 0x106f, 0x39eb, 0x0, 0x1);
        gbc.writeMem(0x54e7, { 0x29 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa8c7, gbc.sp());
        EXPECT(0x54e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0047
        gbc.setState(0xe680, 0xe49b, 0xa120, 0xf92d, 0x9ce0, 0x27f1, 0x1, 0x1);
        gbc.writeMem(0xe680, { 0x29 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe49b, gbc.sp());
        EXPECT(0xe681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe680));
        // 29 0048
        gbc.setState(0x618, 0x213a, 0x1eb0, 0x2bbd, 0x3c48, 0xe5f3, 0x0, 0x0);
        gbc.writeMem(0x618, { 0x29 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x213a, gbc.sp());
        EXPECT(0x619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0049
        gbc.setState(0x586d, 0x2d78, 0xa900, 0x4def, 0xbcff, 0x82b9, 0x0, 0x1);
        gbc.writeMem(0x586d, { 0x29 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2d78, gbc.sp());
        EXPECT(0x586e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 004A
        gbc.setState(0x147d, 0x181a, 0x1870, 0xb777, 0x10d, 0x41c4, 0x0, 0x0);
        gbc.writeMem(0x147d, { 0x29 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x181a, gbc.sp());
        EXPECT(0x147e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 004B
        gbc.setState(0xda3c, 0x6d36, 0x3760, 0x6f69, 0x6060, 0x1e66, 0x0, 0x0);
        gbc.writeMem(0xda3c, { 0x29 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6d36, gbc.sp());
        EXPECT(0xda3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xda3c));
        // 29 004C
        gbc.setState(0x1c09, 0x9fc4, 0x5620, 0xfa97, 0x2d3c, 0xabf6, 0x0, 0x1);
        gbc.writeMem(0x1c09, { 0x29 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9fc4, gbc.sp());
        EXPECT(0x1c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 004D
        gbc.setState(0x7428, 0xfad7, 0x1070, 0x4fe7, 0x5334, 0xdeb7, 0x1, 0x0);
        gbc.writeMem(0x7428, { 0x29 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfad7, gbc.sp());
        EXPECT(0x7429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 004E
        gbc.setState(0x4e42, 0xd11f, 0x28a0, 0x2336, 0x4ada, 0xb72, 0x0, 0x0);
        gbc.writeMem(0x4e42, { 0x29 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd11f, gbc.sp());
        EXPECT(0x4e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 004F
        gbc.setState(0x6fc9, 0x2929, 0xc8d0, 0x7ef2, 0x1d85, 0x2fcc, 0x0, 0x0);
        gbc.writeMem(0x6fc9, { 0x29 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2929, gbc.sp());
        EXPECT(0x6fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0050
        gbc.setState(0x5332, 0x419d, 0xfbc0, 0x6a8e, 0xfd1, 0xa8f, 0x0, 0x1);
        gbc.writeMem(0x5332, { 0x29 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x419d, gbc.sp());
        EXPECT(0x5333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0051
        gbc.setState(0x7208, 0x1287, 0x2f80, 0x3066, 0x9d86, 0xdd56, 0x0, 0x0);
        gbc.writeMem(0x7208, { 0x29 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1287, gbc.sp());
        EXPECT(0x7209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0052
        gbc.setState(0x6b5b, 0xb265, 0x7ef0, 0xebac, 0x73a0, 0xabd1, 0x1, 0x0);
        gbc.writeMem(0x6b5b, { 0x29 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb265, gbc.sp());
        EXPECT(0x6b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0053
        gbc.setState(0x92d0, 0x739c, 0x84d0, 0xd1dc, 0x6bc9, 0xdb1a, 0x1, 0x0);
        gbc.writeMem(0x92d0, { 0x29 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x739c, gbc.sp());
        EXPECT(0x92d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x92d0));
        // 29 0054
        gbc.setState(0x4043, 0xf855, 0x3550, 0xe569, 0xda6e, 0x81fc, 0x1, 0x1);
        gbc.writeMem(0x4043, { 0x29 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf855, gbc.sp());
        EXPECT(0x4044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0055
        gbc.setState(0x34f3, 0xd445, 0x64b0, 0xfcfc, 0xecbe, 0x4881, 0x0, 0x0);
        gbc.writeMem(0x34f3, { 0x29 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd445, gbc.sp());
        EXPECT(0x34f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0057
        gbc.setState(0x1a3b, 0x35b7, 0x1840, 0x3582, 0xc22f, 0x944, 0x0, 0x0);
        gbc.writeMem(0x1a3b, { 0x29 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x35b7, gbc.sp());
        EXPECT(0x1a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0058
        gbc.setState(0x56fc, 0xc302, 0x3b50, 0xddb5, 0xae7b, 0xd701, 0x0, 0x0);
        gbc.writeMem(0x56fc, { 0x29 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc302, gbc.sp());
        EXPECT(0x56fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0059
        gbc.setState(0x2089, 0x27f9, 0x5c0, 0xb8a, 0x525a, 0x33d9, 0x0, 0x0);
        gbc.writeMem(0x2089, { 0x29 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x27f9, gbc.sp());
        EXPECT(0x208a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 005A
        gbc.setState(0x4470, 0x363e, 0xbe30, 0xe5d2, 0xde42, 0xfb30, 0x1, 0x0);
        gbc.writeMem(0x4470, { 0x29 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x363e, gbc.sp());
        EXPECT(0x4471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 005B
        gbc.setState(0x1968, 0x13d3, 0x3140, 0x9933, 0x6ee2, 0x185c, 0x0, 0x1);
        gbc.writeMem(0x1968, { 0x29 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x13d3, gbc.sp());
        EXPECT(0x1969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 005C
        gbc.setState(0xc962, 0x65ad, 0x2510, 0xbb73, 0x210a, 0xc3f9, 0x0, 0x0);
        gbc.writeMem(0xc962, { 0x29 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x65ad, gbc.sp());
        EXPECT(0xc963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc962));
        // 29 005D
        gbc.setState(0xc713, 0x4094, 0xa390, 0x7457, 0xb20, 0xed55, 0x1, 0x1);
        gbc.writeMem(0xc713, { 0x29 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4094, gbc.sp());
        EXPECT(0xc714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc713));
        // 29 005E
        gbc.setState(0xc80, 0xb23f, 0xdfd0, 0x324e, 0x504a, 0x5e84, 0x0, 0x0);
        gbc.writeMem(0xc80, { 0x29 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb23f, gbc.sp());
        EXPECT(0xc81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 005F
        gbc.setState(0x59f7, 0x1181, 0xc700, 0xa95e, 0x272e, 0x9e9a, 0x0, 0x1);
        gbc.writeMem(0x59f7, { 0x29 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1181, gbc.sp());
        EXPECT(0x59f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0060
        gbc.setState(0xe3e5, 0xc668, 0xf2d0, 0x2a4b, 0xd323, 0xcca0, 0x0, 0x0);
        gbc.writeMem(0xe3e5, { 0x29 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc668, gbc.sp());
        EXPECT(0xe3e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe3e5));
        // 29 0061
        gbc.setState(0xd549, 0x8aa8, 0x87a0, 0xb6b, 0xbc81, 0xb1d1, 0x0, 0x1);
        gbc.writeMem(0xd549, { 0x29 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8aa8, gbc.sp());
        EXPECT(0xd54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd549));
        // 29 0062
        gbc.setState(0x9c2f, 0x9e1, 0x97e0, 0xfc64, 0xdff5, 0x55e, 0x1, 0x1);
        gbc.writeMem(0x9c2f, { 0x29 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9e1, gbc.sp());
        EXPECT(0x9c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9c2f));
        // 29 0063
        gbc.setState(0xb8cb, 0xaa96, 0x320, 0x6a19, 0xff8b, 0x712b, 0x0, 0x0);
        gbc.writeMem(0xb8cb, { 0x29 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xaa96, gbc.sp());
        EXPECT(0xb8cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb8cb));
        // 29 0064
        gbc.setState(0xe5b4, 0x327e, 0x9180, 0xfb08, 0x30d2, 0x93ab, 0x1, 0x1);
        gbc.writeMem(0xe5b4, { 0x29 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x327e, gbc.sp());
        EXPECT(0xe5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe5b4));
        // 29 0066
        gbc.setState(0x5b55, 0x908, 0xe2e0, 0xba30, 0x3a09, 0x5672, 0x0, 0x0);
        gbc.writeMem(0x5b55, { 0x29 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x908, gbc.sp());
        EXPECT(0x5b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0067
        gbc.setState(0x5dd5, 0xc976, 0x9110, 0xfc31, 0xfa66, 0xbeaf, 0x0, 0x0);
        gbc.writeMem(0x5dd5, { 0x29 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc976, gbc.sp());
        EXPECT(0x5dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0068
        gbc.setState(0x6db8, 0x2c5e, 0xd210, 0xa85f, 0x1023, 0x8e46, 0x1, 0x0);
        gbc.writeMem(0x6db8, { 0x29 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2c5e, gbc.sp());
        EXPECT(0x6db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0069
        gbc.setState(0x1aa8, 0x4965, 0xa160, 0x9dfe, 0x80b6, 0x71e6, 0x1, 0x1);
        gbc.writeMem(0x1aa8, { 0x29 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4965, gbc.sp());
        EXPECT(0x1aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 006A
        gbc.setState(0xb11e, 0x2dcd, 0x33d0, 0xdc47, 0x7639, 0xe975, 0x1, 0x0);
        gbc.writeMem(0xb11e, { 0x29 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2dcd, gbc.sp());
        EXPECT(0xb11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb11e));
        // 29 006B
        gbc.setState(0x2b80, 0xded3, 0x9840, 0xecc, 0x4467, 0xb6e7, 0x1, 0x0);
        gbc.writeMem(0x2b80, { 0x29 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xded3, gbc.sp());
        EXPECT(0x2b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 006C
        gbc.setState(0xa8d7, 0x137c, 0x4b80, 0xe1b6, 0x242, 0x3a03, 0x0, 0x1);
        gbc.writeMem(0xa8d7, { 0x29 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x137c, gbc.sp());
        EXPECT(0xa8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa8d7));
        // 29 006D
        gbc.setState(0x1f8, 0x1780, 0x83c0, 0xfe42, 0x89f8, 0x391f, 0x0, 0x1);
        gbc.writeMem(0x1f8, { 0x29 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1780, gbc.sp());
        EXPECT(0x1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 006E
        gbc.setState(0x3895, 0xd255, 0xa990, 0xdb01, 0x2ed1, 0xfa54, 0x1, 0x1);
        gbc.writeMem(0x3895, { 0x29 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd255, gbc.sp());
        EXPECT(0x3896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 006F
        gbc.setState(0xcf4b, 0x983d, 0x8e30, 0x9d0f, 0xfd4c, 0x3803, 0x0, 0x1);
        gbc.writeMem(0xcf4b, { 0x29 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x983d, gbc.sp());
        EXPECT(0xcf4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcf4b));
        // 29 0070
        gbc.setState(0x7a93, 0xf3ec, 0xc370, 0x8225, 0x5a63, 0x3d53, 0x0, 0x1);
        gbc.writeMem(0x7a93, { 0x29 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf3ec, gbc.sp());
        EXPECT(0x7a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0071
        gbc.setState(0x6b3e, 0xcbf8, 0x3e70, 0x9271, 0x4a67, 0xd47a, 0x1, 0x1);
        gbc.writeMem(0x6b3e, { 0x29 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcbf8, gbc.sp());
        EXPECT(0x6b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0072
        gbc.setState(0x5c0c, 0x80bd, 0xded0, 0xfd77, 0x7f8b, 0x351c, 0x0, 0x0);
        gbc.writeMem(0x5c0c, { 0x29 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x80bd, gbc.sp());
        EXPECT(0x5c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0073
        gbc.setState(0xa0e4, 0x5020, 0x4020, 0xfc79, 0x960c, 0xaad4, 0x0, 0x1);
        gbc.writeMem(0xa0e4, { 0x29 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5020, gbc.sp());
        EXPECT(0xa0e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa0e4));
        // 29 0074
        gbc.setState(0xb2aa, 0x309, 0xcba0, 0xdddb, 0x18c1, 0x52e7, 0x1, 0x1);
        gbc.writeMem(0xb2aa, { 0x29 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x309, gbc.sp());
        EXPECT(0xb2ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb2aa));
        // 29 0075
        gbc.setState(0x93f4, 0x7d83, 0x6880, 0x6b7b, 0x5724, 0x4746, 0x1, 0x1);
        gbc.writeMem(0x93f4, { 0x29 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7d83, gbc.sp());
        EXPECT(0x93f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x93f4));
        // 29 0076
        gbc.setState(0xe32b, 0xe3ec, 0x9980, 0x1709, 0x1458, 0xee8e, 0x1, 0x0);
        gbc.writeMem(0xe32b, { 0x29 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe3ec, gbc.sp());
        EXPECT(0xe32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe32b));
        // 29 0077
        gbc.setState(0xcb52, 0x1c13, 0x4a30, 0x675, 0x3e99, 0xf733, 0x0, 0x1);
        gbc.writeMem(0xcb52, { 0x29 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1c13, gbc.sp());
        EXPECT(0xcb53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcb52));
        // 29 0078
        gbc.setState(0x7c44, 0xc35b, 0x11f0, 0xfbe0, 0x5a54, 0x21b2, 0x1, 0x0);
        gbc.writeMem(0x7c44, { 0x29 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc35b, gbc.sp());
        EXPECT(0x7c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0079
        gbc.setState(0x6a19, 0xe652, 0x5020, 0xcb2e, 0x5fce, 0x8faf, 0x1, 0x0);
        gbc.writeMem(0x6a19, { 0x29 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe652, gbc.sp());
        EXPECT(0x6a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 007A
        gbc.setState(0x82e5, 0xdcf4, 0x11a0, 0x1865, 0x696d, 0x6880, 0x0, 0x1);
        gbc.writeMem(0x82e5, { 0x29 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdcf4, gbc.sp());
        EXPECT(0x82e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x82e5));
        // 29 007B
        gbc.setState(0x2705, 0x6aa0, 0x4350, 0x3700, 0x5f52, 0x58d7, 0x1, 0x1);
        gbc.writeMem(0x2705, { 0x29 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6aa0, gbc.sp());
        EXPECT(0x2706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 007C
        gbc.setState(0x57e6, 0xa8fa, 0xd670, 0x8101, 0x6052, 0x78c2, 0x1, 0x1);
        gbc.writeMem(0x57e6, { 0x29 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa8fa, gbc.sp());
        EXPECT(0x57e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 007D
        gbc.setState(0x8e62, 0xf497, 0xe250, 0x874b, 0xf419, 0x7145, 0x1, 0x0);
        gbc.writeMem(0x8e62, { 0x29 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf497, gbc.sp());
        EXPECT(0x8e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8e62));
        // 29 007E
        gbc.setState(0x8f82, 0xbb37, 0xac80, 0x8dcb, 0x1a66, 0x8a43, 0x0, 0x1);
        gbc.writeMem(0x8f82, { 0x29 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbb37, gbc.sp());
        EXPECT(0x8f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8f82));
        // 29 007F
        gbc.setState(0xa3e0, 0x308c, 0xb7a0, 0xd972, 0xd50, 0x9af5, 0x0, 0x1);
        gbc.writeMem(0xa3e0, { 0x29 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x308c, gbc.sp());
        EXPECT(0xa3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa3e0));
        // 29 0080
        gbc.setState(0x6ab2, 0xa4ae, 0x7ea0, 0xf20a, 0xf8ce, 0xf080, 0x0, 0x1);
        gbc.writeMem(0x6ab2, { 0x29 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa4ae, gbc.sp());
        EXPECT(0x6ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0081
        gbc.setState(0xae0b, 0x4646, 0x1880, 0x92c0, 0x7891, 0xee55, 0x0, 0x1);
        gbc.writeMem(0xae0b, { 0x29 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4646, gbc.sp());
        EXPECT(0xae0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xae0b));
        // 29 0082
        gbc.setState(0x542a, 0x2aaf, 0xf4c0, 0xddd5, 0x81c9, 0x677a, 0x1, 0x1);
        gbc.writeMem(0x542a, { 0x29 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2aaf, gbc.sp());
        EXPECT(0x542b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0083
        gbc.setState(0xfa4, 0xaaff, 0xe6d0, 0xb96d, 0x8e75, 0xa506, 0x0, 0x1);
        gbc.writeMem(0xfa4, { 0x29 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaaff, gbc.sp());
        EXPECT(0xfa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0084
        gbc.setState(0x8a92, 0xa8ba, 0x4950, 0xdf96, 0x2b97, 0x968a, 0x0, 0x1);
        gbc.writeMem(0x8a92, { 0x29 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa8ba, gbc.sp());
        EXPECT(0x8a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8a92));
        // 29 0085
        gbc.setState(0xb7f6, 0x912, 0xc7b0, 0x1298, 0x69d1, 0x52a5, 0x1, 0x0);
        gbc.writeMem(0xb7f6, { 0x29 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x912, gbc.sp());
        EXPECT(0xb7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb7f6));
        // 29 0087
        gbc.setState(0xcb20, 0x7875, 0xfee0, 0x696a, 0xd5d8, 0xb9c6, 0x1, 0x0);
        gbc.writeMem(0xcb20, { 0x29 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7875, gbc.sp());
        EXPECT(0xcb21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcb20));
        // 29 0088
        gbc.setState(0xd7c5, 0x8465, 0x2dd0, 0x6867, 0x393e, 0x7697, 0x0, 0x1);
        gbc.writeMem(0xd7c5, { 0x29 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8465, gbc.sp());
        EXPECT(0xd7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd7c5));
        // 29 0089
        gbc.setState(0xe319, 0x1396, 0x9e90, 0xce26, 0xebfc, 0xb154, 0x1, 0x1);
        gbc.writeMem(0xe319, { 0x29 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1396, gbc.sp());
        EXPECT(0xe31a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe319));
        // 29 008A
        gbc.setState(0xafc2, 0x1c0d, 0x4050, 0xf724, 0xdce9, 0xc0bc, 0x1, 0x1);
        gbc.writeMem(0xafc2, { 0x29 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1c0d, gbc.sp());
        EXPECT(0xafc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xafc2));
        // 29 008B
        gbc.setState(0x19a5, 0xebbf, 0xf0d0, 0xcbe3, 0x6cf3, 0x9aaa, 0x1, 0x1);
        gbc.writeMem(0x19a5, { 0x29 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xebbf, gbc.sp());
        EXPECT(0x19a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 008C
        gbc.setState(0x8817, 0xc9a3, 0x5290, 0x3b1a, 0xc11e, 0x75, 0x1, 0x0);
        gbc.writeMem(0x8817, { 0x29 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc9a3, gbc.sp());
        EXPECT(0x8818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8817));
        // 29 008D
        gbc.setState(0xab55, 0x94ac, 0x1210, 0x33a7, 0x663f, 0x668e, 0x1, 0x0);
        gbc.writeMem(0xab55, { 0x29 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x94ac, gbc.sp());
        EXPECT(0xab56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xab55));
        // 29 008E
        gbc.setState(0xc7e3, 0x6f71, 0xb800, 0xfd79, 0x4b7f, 0x363a, 0x0, 0x1);
        gbc.writeMem(0xc7e3, { 0x29 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6f71, gbc.sp());
        EXPECT(0xc7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc7e3));
        // 29 008F
        gbc.setState(0x8635, 0x1f8, 0x1870, 0x860c, 0x337c, 0xe8ff, 0x0, 0x0);
        gbc.writeMem(0x8635, { 0x29 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1f8, gbc.sp());
        EXPECT(0x8636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8635));
        // 29 0091
        gbc.setState(0xb7bd, 0x99eb, 0x4220, 0xfe49, 0xd4a, 0xc688, 0x0, 0x0);
        gbc.writeMem(0xb7bd, { 0x29 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x99eb, gbc.sp());
        EXPECT(0xb7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb7bd));
        // 29 0092
        gbc.setState(0xbd45, 0xfc0a, 0xc360, 0x1bb8, 0xd697, 0x2a89, 0x0, 0x0);
        gbc.writeMem(0xbd45, { 0x29 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfc0a, gbc.sp());
        EXPECT(0xbd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbd45));
        // 29 0093
        gbc.setState(0x1903, 0xafe0, 0x9c60, 0x5f8e, 0x5005, 0x8bdd, 0x1, 0x1);
        gbc.writeMem(0x1903, { 0x29 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xafe0, gbc.sp());
        EXPECT(0x1904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0094
        gbc.setState(0xa8bc, 0x28f3, 0xd8c0, 0x2774, 0x7bb6, 0xdb18, 0x0, 0x1);
        gbc.writeMem(0xa8bc, { 0x29 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x28f3, gbc.sp());
        EXPECT(0xa8bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa8bc));
        // 29 0096
        gbc.setState(0x550c, 0xc8b5, 0x6380, 0x84e9, 0xae79, 0x86dd, 0x0, 0x1);
        gbc.writeMem(0x550c, { 0x29 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc8b5, gbc.sp());
        EXPECT(0x550d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0097
        gbc.setState(0xb0ae, 0x3303, 0x7ec0, 0xe343, 0xa4a6, 0x6078, 0x0, 0x0);
        gbc.writeMem(0xb0ae, { 0x29 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3303, gbc.sp());
        EXPECT(0xb0af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb0ae));
        // 29 0098
        gbc.setState(0x8bca, 0xa738, 0xb7e0, 0xa19e, 0xa5de, 0xc4e7, 0x1, 0x1);
        gbc.writeMem(0x8bca, { 0x29 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa738, gbc.sp());
        EXPECT(0x8bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8bca));
        // 29 0099
        gbc.setState(0x8da3, 0x7832, 0x7880, 0x16ce, 0xd86, 0x5bb6, 0x1, 0x1);
        gbc.writeMem(0x8da3, { 0x29 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7832, gbc.sp());
        EXPECT(0x8da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8da3));
        // 29 009A
        gbc.setState(0x2386, 0x8cec, 0xe0, 0x1aae, 0x6dd7, 0x602f, 0x0, 0x1);
        gbc.writeMem(0x2386, { 0x29 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8cec, gbc.sp());
        EXPECT(0x2387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 009B
        gbc.setState(0x2fdd, 0xc042, 0x7c70, 0x2faf, 0x6ad0, 0x7ba, 0x0, 0x1);
        gbc.writeMem(0x2fdd, { 0x29 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc042, gbc.sp());
        EXPECT(0x2fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 009C
        gbc.setState(0x23a6, 0x44af, 0x750, 0xace, 0x9c68, 0xd69f, 0x1, 0x0);
        gbc.writeMem(0x23a6, { 0x29 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x44af, gbc.sp());
        EXPECT(0x23a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 009D
        gbc.setState(0x737c, 0xca42, 0x34b0, 0xa8b7, 0xd6e9, 0x35d9, 0x0, 0x0);
        gbc.writeMem(0x737c, { 0x29 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xca42, gbc.sp());
        EXPECT(0x737d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 009E
        gbc.setState(0x619d, 0xf88a, 0x43b0, 0x476, 0x9bab, 0xdd03, 0x0, 0x0);
        gbc.writeMem(0x619d, { 0x29 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf88a, gbc.sp());
        EXPECT(0x619e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 009F
        gbc.setState(0x2702, 0xc605, 0x5ae0, 0xd5f3, 0x1055, 0x6c46, 0x1, 0x1);
        gbc.writeMem(0x2702, { 0x29 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc605, gbc.sp());
        EXPECT(0x2703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00A0
        gbc.setState(0xb038, 0x7dce, 0xad40, 0x145f, 0x71d, 0x5d58, 0x0, 0x1);
        gbc.writeMem(0xb038, { 0x29 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7dce, gbc.sp());
        EXPECT(0xb039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb038));
        // 29 00A1
        gbc.setState(0x5293, 0xb57c, 0xf0, 0x7858, 0x84f7, 0x11bc, 0x1, 0x0);
        gbc.writeMem(0x5293, { 0x29 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb57c, gbc.sp());
        EXPECT(0x5294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00A2
        gbc.setState(0x1913, 0x18d0, 0x2290, 0x8c8, 0x1e63, 0x58c1, 0x1, 0x1);
        gbc.writeMem(0x1913, { 0x29 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x18d0, gbc.sp());
        EXPECT(0x1914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00A4
        gbc.setState(0xe30, 0x2b3d, 0x8ab0, 0x47cf, 0x48b7, 0x8b91, 0x1, 0x1);
        gbc.writeMem(0xe30, { 0x29 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2b3d, gbc.sp());
        EXPECT(0xe31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00A5
        gbc.setState(0x4779, 0x399f, 0x4270, 0xe936, 0x88fb, 0xffca, 0x0, 0x1);
        gbc.writeMem(0x4779, { 0x29 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x399f, gbc.sp());
        EXPECT(0x477a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00A7
        gbc.setState(0xf8e, 0x76c3, 0xa4c0, 0x52c6, 0x95d5, 0x7a59, 0x0, 0x0);
        gbc.writeMem(0xf8e, { 0x29 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x76c3, gbc.sp());
        EXPECT(0xf8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00A8
        gbc.setState(0xbb53, 0xf658, 0x48f0, 0x6862, 0x5b5e, 0x13e4, 0x1, 0x0);
        gbc.writeMem(0xbb53, { 0x29 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf658, gbc.sp());
        EXPECT(0xbb54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbb53));
        // 29 00A9
        gbc.setState(0x481c, 0xd535, 0x3a10, 0x1ac4, 0xf8a, 0x7783, 0x1, 0x1);
        gbc.writeMem(0x481c, { 0x29 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd535, gbc.sp());
        EXPECT(0x481d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00AA
        gbc.setState(0x2ace, 0xe9f9, 0x6ef0, 0xcc15, 0xc916, 0x56d0, 0x1, 0x0);
        gbc.writeMem(0x2ace, { 0x29 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe9f9, gbc.sp());
        EXPECT(0x2acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00AB
        gbc.setState(0x4834, 0xad28, 0xe200, 0xb017, 0x1433, 0xdf7f, 0x0, 0x1);
        gbc.writeMem(0x4834, { 0x29 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xad28, gbc.sp());
        EXPECT(0x4835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00AC
        gbc.setState(0x4d34, 0x20a9, 0xbdf0, 0x2fba, 0xe01c, 0xda35, 0x1, 0x1);
        gbc.writeMem(0x4d34, { 0x29 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x20a9, gbc.sp());
        EXPECT(0x4d35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00AD
        gbc.setState(0xb7c5, 0xbce0, 0x3480, 0x4708, 0xc876, 0xf6f7, 0x1, 0x0);
        gbc.writeMem(0xb7c5, { 0x29 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbce0, gbc.sp());
        EXPECT(0xb7c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb7c5));
        // 29 00AE
        gbc.setState(0x8b8d, 0xe8dd, 0x9710, 0xa272, 0xce5e, 0x57b0, 0x1, 0x0);
        gbc.writeMem(0x8b8d, { 0x29 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe8dd, gbc.sp());
        EXPECT(0x8b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8b8d));
        // 29 00AF
        gbc.setState(0xbb5, 0xc34f, 0xe250, 0x5285, 0x6593, 0xf2a9, 0x0, 0x1);
        gbc.writeMem(0xbb5, { 0x29 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc34f, gbc.sp());
        EXPECT(0xbb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00B0
        gbc.setState(0x140, 0x72a9, 0x51f0, 0xe636, 0xfa88, 0x2515, 0x0, 0x1);
        gbc.writeMem(0x140, { 0x29 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x72a9, gbc.sp());
        EXPECT(0x141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00B1
        gbc.setState(0xddad, 0xf883, 0x1c40, 0x75ae, 0xd9dc, 0xe145, 0x1, 0x1);
        gbc.writeMem(0xddad, { 0x29 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf883, gbc.sp());
        EXPECT(0xddae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xddad));
        // 29 00B2
        gbc.setState(0x33f3, 0xd1fe, 0x360, 0x5462, 0xbfd5, 0xb585, 0x1, 0x0);
        gbc.writeMem(0x33f3, { 0x29 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd1fe, gbc.sp());
        EXPECT(0x33f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00B3
        gbc.setState(0xc87e, 0x60d8, 0x9a80, 0x3ed, 0x7d5e, 0xf6b1, 0x0, 0x1);
        gbc.writeMem(0xc87e, { 0x29 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x60d8, gbc.sp());
        EXPECT(0xc87f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc87e));
        // 29 00B4
        gbc.setState(0xc1e7, 0x280e, 0xb920, 0x1384, 0x1f44, 0x57c1, 0x0, 0x1);
        gbc.writeMem(0xc1e7, { 0x29 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x280e, gbc.sp());
        EXPECT(0xc1e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc1e7));
        // 29 00B5
        gbc.setState(0xdca8, 0x2a7d, 0xa830, 0x2862, 0xfef3, 0x623d, 0x0, 0x0);
        gbc.writeMem(0xdca8, { 0x29 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2a7d, gbc.sp());
        EXPECT(0xdca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdca8));
        // 29 00B6
        gbc.setState(0xd20a, 0x5b19, 0x9d90, 0x682f, 0x6358, 0x580e, 0x1, 0x0);
        gbc.writeMem(0xd20a, { 0x29 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5b19, gbc.sp());
        EXPECT(0xd20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd20a));
        // 29 00B7
        gbc.setState(0x9140, 0x72af, 0xce00, 0x4a98, 0x91e1, 0x4dae, 0x1, 0x0);
        gbc.writeMem(0x9140, { 0x29 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x72af, gbc.sp());
        EXPECT(0x9141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9140));
        // 29 00B8
        gbc.setState(0x5e09, 0x3b0c, 0x5d0, 0xa0a1, 0x9b2b, 0xb53f, 0x0, 0x0);
        gbc.writeMem(0x5e09, { 0x29 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3b0c, gbc.sp());
        EXPECT(0x5e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00B9
        gbc.setState(0xb142, 0xe044, 0x6940, 0x4fe3, 0xd9be, 0xc0b2, 0x0, 0x0);
        gbc.writeMem(0xb142, { 0x29 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe044, gbc.sp());
        EXPECT(0xb143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb142));
        // 29 00BA
        gbc.setState(0x3fdd, 0xcb6c, 0xb750, 0x37c4, 0xe0ca, 0xb0ea, 0x0, 0x0);
        gbc.writeMem(0x3fdd, { 0x29 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xcb6c, gbc.sp());
        EXPECT(0x3fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00BB
        gbc.setState(0x315f, 0xb5e3, 0x9870, 0x3742, 0xff9b, 0xc3ff, 0x0, 0x1);
        gbc.writeMem(0x315f, { 0x29 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb5e3, gbc.sp());
        EXPECT(0x3160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00BC
        gbc.setState(0xd2cb, 0x4662, 0xee60, 0xef8e, 0xbf09, 0x7c4b, 0x1, 0x1);
        gbc.writeMem(0xd2cb, { 0x29 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4662, gbc.sp());
        EXPECT(0xd2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd2cb));
        // 29 00BD
        gbc.setState(0x998b, 0x4c35, 0x9cb0, 0xbe0, 0xab16, 0x62ce, 0x1, 0x1);
        gbc.writeMem(0x998b, { 0x29 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4c35, gbc.sp());
        EXPECT(0x998c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x998b));
        // 29 00BE
        gbc.setState(0x68fa, 0x6100, 0x4c30, 0x1caa, 0xc44a, 0xdb80, 0x1, 0x0);
        gbc.writeMem(0x68fa, { 0x29 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6100, gbc.sp());
        EXPECT(0x68fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00C1
        gbc.setState(0xc1d2, 0x90f4, 0xde20, 0x9739, 0xd456, 0xcff3, 0x0, 0x0);
        gbc.writeMem(0xc1d2, { 0x29 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x90f4, gbc.sp());
        EXPECT(0xc1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc1d2));
        // 29 00C2
        gbc.setState(0x45ad, 0x90ba, 0xd2d0, 0xa435, 0x9100, 0x1694, 0x0, 0x1);
        gbc.writeMem(0x45ad, { 0x29 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x90ba, gbc.sp());
        EXPECT(0x45ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00C3
        gbc.setState(0x3bc7, 0xffc2, 0x92e0, 0x3595, 0x4b14, 0xca27, 0x0, 0x0);
        gbc.writeMem(0x3bc7, { 0x29 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xffc2, gbc.sp());
        EXPECT(0x3bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00C4
        gbc.setState(0xa8b8, 0x609a, 0xdab0, 0xc18b, 0x713b, 0x35a1, 0x1, 0x0);
        gbc.writeMem(0xa8b8, { 0x29 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x609a, gbc.sp());
        EXPECT(0xa8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa8b8));
        // 29 00C5
        gbc.setState(0x1fa9, 0xc1d8, 0x1750, 0xa08, 0x9d6f, 0x4748, 0x0, 0x0);
        gbc.writeMem(0x1fa9, { 0x29 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc1d8, gbc.sp());
        EXPECT(0x1faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00C6
        gbc.setState(0xac39, 0xd9f7, 0x8f20, 0xa681, 0x4eb2, 0xa087, 0x0, 0x1);
        gbc.writeMem(0xac39, { 0x29 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd9f7, gbc.sp());
        EXPECT(0xac3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xac39));
        // 29 00C7
        gbc.setState(0x57, 0x718f, 0x3470, 0x3d26, 0x5939, 0xd1db, 0x1, 0x0);
        gbc.writeMem(0x57, { 0x29 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x718f, gbc.sp());
        EXPECT(0x58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00C8
        gbc.setState(0xe2f4, 0xd6d0, 0xe6a0, 0xa19c, 0xf396, 0x299e, 0x0, 0x1);
        gbc.writeMem(0xe2f4, { 0x29 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd6d0, gbc.sp());
        EXPECT(0xe2f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe2f4));
        // 29 00C9
        gbc.setState(0x1664, 0x96a0, 0xd420, 0x9a76, 0x9415, 0x5f7f, 0x1, 0x0);
        gbc.writeMem(0x1664, { 0x29 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x96a0, gbc.sp());
        EXPECT(0x1665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00CA
        gbc.setState(0x8df4, 0x7e41, 0xe1a0, 0xb149, 0xbc1a, 0xb090, 0x1, 0x1);
        gbc.writeMem(0x8df4, { 0x29 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7e41, gbc.sp());
        EXPECT(0x8df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8df4));
        // 29 00CB
        gbc.setState(0x398b, 0xabd8, 0xf9b0, 0x2acb, 0x57c6, 0xf6d2, 0x1, 0x1);
        gbc.writeMem(0x398b, { 0x29 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xabd8, gbc.sp());
        EXPECT(0x398c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00CC
        gbc.setState(0x3112, 0x9f31, 0x56f0, 0xfec7, 0x2cab, 0x1d30, 0x0, 0x0);
        gbc.writeMem(0x3112, { 0x29 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9f31, gbc.sp());
        EXPECT(0x3113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00CD
        gbc.setState(0xe791, 0xa92c, 0x6130, 0xd2a4, 0xe872, 0x9fd0, 0x1, 0x0);
        gbc.writeMem(0xe791, { 0x29 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa92c, gbc.sp());
        EXPECT(0xe792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe791));
        // 29 00CE
        gbc.setState(0x3d82, 0x47b8, 0xfc80, 0xd680, 0x1c8, 0x7469, 0x0, 0x0);
        gbc.writeMem(0x3d82, { 0x29 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x47b8, gbc.sp());
        EXPECT(0x3d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00CF
        gbc.setState(0x4ce0, 0xd9f4, 0xb570, 0x4b77, 0xa9bd, 0x5dea, 0x0, 0x0);
        gbc.writeMem(0x4ce0, { 0x29 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd9f4, gbc.sp());
        EXPECT(0x4ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00D0
        gbc.setState(0x2163, 0x5b87, 0x32c0, 0xeabd, 0x8ecd, 0x5d8c, 0x1, 0x0);
        gbc.writeMem(0x2163, { 0x29 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5b87, gbc.sp());
        EXPECT(0x2164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00D1
        gbc.setState(0xc28f, 0xbcce, 0x9e60, 0xceab, 0xa478, 0x15f1, 0x1, 0x1);
        gbc.writeMem(0xc28f, { 0x29 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbcce, gbc.sp());
        EXPECT(0xc290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc28f));
        // 29 00D2
        gbc.setState(0x7b86, 0x6a5e, 0xef00, 0xe3c4, 0x9683, 0x2572, 0x1, 0x1);
        gbc.writeMem(0x7b86, { 0x29 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6a5e, gbc.sp());
        EXPECT(0x7b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00D3
        gbc.setState(0xc24, 0xbf2f, 0xb550, 0x1fb1, 0x709e, 0x551b, 0x1, 0x1);
        gbc.writeMem(0xc24, { 0x29 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbf2f, gbc.sp());
        EXPECT(0xc25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00D4
        gbc.setState(0x1658, 0xcf5f, 0xf720, 0x234e, 0xa327, 0xc1c3, 0x0, 0x0);
        gbc.writeMem(0x1658, { 0x29 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcf5f, gbc.sp());
        EXPECT(0x1659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00D5
        gbc.setState(0xdae4, 0x2a4a, 0x4910, 0x9aac, 0x248b, 0x554f, 0x0, 0x1);
        gbc.writeMem(0xdae4, { 0x29 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2a4a, gbc.sp());
        EXPECT(0xdae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdae4));
        // 29 00D6
        gbc.setState(0xbdb6, 0x1cc6, 0x2450, 0xa825, 0xe653, 0x547a, 0x0, 0x1);
        gbc.writeMem(0xbdb6, { 0x29 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1cc6, gbc.sp());
        EXPECT(0xbdb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbdb6));
        // 29 00D7
        gbc.setState(0x9461, 0x8b34, 0xfb60, 0x66f7, 0xca0e, 0x862c, 0x1, 0x0);
        gbc.writeMem(0x9461, { 0x29 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8b34, gbc.sp());
        EXPECT(0x9462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9461));
        // 29 00D8
        gbc.setState(0x450, 0x5d00, 0xd280, 0x4dfa, 0x68aa, 0x89e9, 0x1, 0x0);
        gbc.writeMem(0x450, { 0x29 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5d00, gbc.sp());
        EXPECT(0x451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00D9
        gbc.setState(0x9240, 0x640e, 0x3ca0, 0x8b5f, 0xde54, 0x66e9, 0x1, 0x0);
        gbc.writeMem(0x9240, { 0x29 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x640e, gbc.sp());
        EXPECT(0x9241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9240));
        // 29 00DA
        gbc.setState(0x4a9a, 0xe1cc, 0xf270, 0x5376, 0x462c, 0x56c0, 0x0, 0x1);
        gbc.writeMem(0x4a9a, { 0x29 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe1cc, gbc.sp());
        EXPECT(0x4a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00DB
        gbc.setState(0xdf45, 0xddee, 0x7970, 0x6720, 0x5032, 0x533b, 0x0, 0x0);
        gbc.writeMem(0xdf45, { 0x29 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xddee, gbc.sp());
        EXPECT(0xdf46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdf45));
        // 29 00DC
        gbc.setState(0x1dfd, 0x6f10, 0xb030, 0xbced, 0x97fa, 0x1ef8, 0x0, 0x1);
        gbc.writeMem(0x1dfd, { 0x29 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6f10, gbc.sp());
        EXPECT(0x1dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00DD
        gbc.setState(0x9c0c, 0xadf1, 0xa710, 0x1a5d, 0x197, 0x30ea, 0x1, 0x1);
        gbc.writeMem(0x9c0c, { 0x29 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xadf1, gbc.sp());
        EXPECT(0x9c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9c0c));
        // 29 00DE
        gbc.setState(0x9aae, 0x8ac3, 0x5ee0, 0xede7, 0x6c6c, 0x5e34, 0x1, 0x0);
        gbc.writeMem(0x9aae, { 0x29 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8ac3, gbc.sp());
        EXPECT(0x9aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9aae));
        // 29 00DF
        gbc.setState(0x49f5, 0x9685, 0x8110, 0xd4c8, 0xb5cb, 0x5aa3, 0x1, 0x1);
        gbc.writeMem(0x49f5, { 0x29 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9685, gbc.sp());
        EXPECT(0x49f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00E0
        gbc.setState(0xbf11, 0xa24b, 0xe6b0, 0xc9fb, 0xfce8, 0xf815, 0x0, 0x0);
        gbc.writeMem(0xbf11, { 0x29 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa24b, gbc.sp());
        EXPECT(0xbf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbf11));
        // 29 00E1
        gbc.setState(0x93ab, 0x3158, 0xa620, 0x26a2, 0x267e, 0xc7ff, 0x1, 0x1);
        gbc.writeMem(0x93ab, { 0x29 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3158, gbc.sp());
        EXPECT(0x93ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x93ab));
        // 29 00E2
        gbc.setState(0x21d7, 0x5c36, 0x3820, 0xa7c6, 0x8887, 0x72d9, 0x1, 0x0);
        gbc.writeMem(0x21d7, { 0x29 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5c36, gbc.sp());
        EXPECT(0x21d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00E3
        gbc.setState(0x31eb, 0xdba6, 0x8810, 0x7c7a, 0x4824, 0x85cc, 0x0, 0x1);
        gbc.writeMem(0x31eb, { 0x29 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdba6, gbc.sp());
        EXPECT(0x31ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00E4
        gbc.setState(0x848c, 0x3ce7, 0xb8a0, 0x47d3, 0x3a72, 0x46a7, 0x0, 0x1);
        gbc.writeMem(0x848c, { 0x29 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3ce7, gbc.sp());
        EXPECT(0x848d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x848c));
        // 29 00E5
        gbc.setState(0x35fe, 0x4672, 0x4540, 0x6c47, 0x96c3, 0x4d1b, 0x1, 0x1);
        gbc.writeMem(0x35fe, { 0x29 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4672, gbc.sp());
        EXPECT(0x35ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00E6
        gbc.setState(0xef51, 0x43d9, 0x6580, 0x112d, 0x86c, 0xf272, 0x1, 0x0);
        gbc.writeMem(0xef51, { 0x29 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x43d9, gbc.sp());
        EXPECT(0xef52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xef51));
        // 29 00E7
        gbc.setState(0x23e0, 0x999b, 0x9410, 0x5b6a, 0xcec7, 0x2569, 0x1, 0x0);
        gbc.writeMem(0x23e0, { 0x29 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x999b, gbc.sp());
        EXPECT(0x23e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00E8
        gbc.setState(0x9688, 0x745b, 0xe320, 0x385a, 0x2277, 0xe64f, 0x0, 0x0);
        gbc.writeMem(0x9688, { 0x29 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x745b, gbc.sp());
        EXPECT(0x9689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9688));
        // 29 00E9
        gbc.setState(0x807c, 0x2ff8, 0x83a0, 0xd992, 0xbfbb, 0xcfba, 0x1, 0x1);
        gbc.writeMem(0x807c, { 0x29 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2ff8, gbc.sp());
        EXPECT(0x807d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x807c));
        // 29 00EA
        gbc.setState(0x37fd, 0xbd7, 0x6fc0, 0x2342, 0x7716, 0x765, 0x1, 0x0);
        gbc.writeMem(0x37fd, { 0x29 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbd7, gbc.sp());
        EXPECT(0x37fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00EB
        gbc.setState(0xea76, 0x2efa, 0x6910, 0xf27, 0x18be, 0x34da, 0x1, 0x0);
        gbc.writeMem(0xea76, { 0x29 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2efa, gbc.sp());
        EXPECT(0xea77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xea76));
        // 29 00EC
        gbc.setState(0x1e9d, 0x208d, 0x35a0, 0xc84e, 0x7d6e, 0xae48, 0x1, 0x1);
        gbc.writeMem(0x1e9d, { 0x29 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x208d, gbc.sp());
        EXPECT(0x1e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00ED
        gbc.setState(0x5e89, 0x63a0, 0x6d80, 0xd9e2, 0x5945, 0xb17c, 0x1, 0x0);
        gbc.writeMem(0x5e89, { 0x29 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x63a0, gbc.sp());
        EXPECT(0x5e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00EE
        gbc.setState(0x91d7, 0x97e4, 0x2660, 0xa592, 0x3cf4, 0x5d25, 0x1, 0x0);
        gbc.writeMem(0x91d7, { 0x29 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x97e4, gbc.sp());
        EXPECT(0x91d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x91d7));
        // 29 00EF
        gbc.setState(0x1532, 0x1e9b, 0x9d50, 0xcde6, 0x9618, 0xeb0d, 0x0, 0x1);
        gbc.writeMem(0x1532, { 0x29 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1e9b, gbc.sp());
        EXPECT(0x1533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00F1
        gbc.setState(0x45d3, 0x1256, 0xf3c0, 0xc5d9, 0xcd41, 0xc92c, 0x0, 0x0);
        gbc.writeMem(0x45d3, { 0x29 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1256, gbc.sp());
        EXPECT(0x45d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00F3
        gbc.setState(0x6c63, 0xf9f2, 0x7060, 0xac71, 0xd1dc, 0x499a, 0x0, 0x0);
        gbc.writeMem(0x6c63, { 0x29 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf9f2, gbc.sp());
        EXPECT(0x6c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00F4
        gbc.setState(0x5e7d, 0x5566, 0xe350, 0x1a, 0x3b50, 0x138e, 0x0, 0x0);
        gbc.writeMem(0x5e7d, { 0x29 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5566, gbc.sp());
        EXPECT(0x5e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00F5
        gbc.setState(0x9e24, 0xd8e7, 0x8ba0, 0x9974, 0x99d8, 0xef82, 0x1, 0x0);
        gbc.writeMem(0x9e24, { 0x29 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd8e7, gbc.sp());
        EXPECT(0x9e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9e24));
        // 29 00F6
        gbc.setState(0xdc9b, 0xcac9, 0x5ae0, 0x996a, 0x3dac, 0x6518, 0x1, 0x1);
        gbc.writeMem(0xdc9b, { 0x29 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcac9, gbc.sp());
        EXPECT(0xdc9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdc9b));
        // 29 00F7
        gbc.setState(0x1598, 0xac2b, 0xf30, 0xc249, 0x4730, 0xb557, 0x0, 0x1);
        gbc.writeMem(0x1598, { 0x29 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xac2b, gbc.sp());
        EXPECT(0x1599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00F8
        gbc.setState(0xc413, 0x1321, 0x47a0, 0xffbe, 0xe4d9, 0x588d, 0x1, 0x1);
        gbc.writeMem(0xc413, { 0x29 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1321, gbc.sp());
        EXPECT(0xc414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc413));
        // 29 00F9
        gbc.setState(0xdf6, 0xd882, 0xcb30, 0x86e0, 0x292a, 0xacad, 0x1, 0x1);
        gbc.writeMem(0xdf6, { 0x29 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd882, gbc.sp());
        EXPECT(0xdf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 00FA
        gbc.setState(0xd861, 0xc957, 0x18d0, 0x24b6, 0x157d, 0x26f0, 0x1, 0x0);
        gbc.writeMem(0xd861, { 0x29 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc957, gbc.sp());
        EXPECT(0xd862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd861));
        // 29 00FB
        gbc.setState(0x7b3c, 0x7932, 0xdc0, 0x8cab, 0xbe03, 0x7378, 0x1, 0x0);
        gbc.writeMem(0x7b3c, { 0x29 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7932, gbc.sp());
        EXPECT(0x7b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00FC
        gbc.setState(0x6e7c, 0x5cc1, 0xe7e0, 0xaed9, 0xe193, 0x31d5, 0x0, 0x0);
        gbc.writeMem(0x6e7c, { 0x29 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5cc1, gbc.sp());
        EXPECT(0x6e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00FD
        gbc.setState(0xadec, 0x31eb, 0x2bd0, 0x1ad8, 0x3d82, 0x74ac, 0x0, 0x0);
        gbc.writeMem(0xadec, { 0x29 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x31eb, gbc.sp());
        EXPECT(0xaded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xadec));
        // 29 00FE
        gbc.setState(0x4d52, 0x995f, 0x3c60, 0x1062, 0xaabf, 0x56a, 0x1, 0x1);
        gbc.writeMem(0x4d52, { 0x29 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x995f, gbc.sp());
        EXPECT(0x4d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 00FF
        gbc.setState(0x3853, 0x73cc, 0xc760, 0x43dd, 0xc82b, 0xadf4, 0x0, 0x1);
        gbc.writeMem(0x3853, { 0x29 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x73cc, gbc.sp());
        EXPECT(0x3854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0100
        gbc.setState(0x787c, 0xa6de, 0x84b0, 0x96a1, 0x98e3, 0x3674, 0x0, 0x0);
        gbc.writeMem(0x787c, { 0x29 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa6de, gbc.sp());
        EXPECT(0x787d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0101
        gbc.setState(0x3d14, 0x8263, 0xb6c0, 0xa4ea, 0x7e12, 0xf101, 0x0, 0x0);
        gbc.writeMem(0x3d14, { 0x29 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8263, gbc.sp());
        EXPECT(0x3d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0102
        gbc.setState(0xcc99, 0x554, 0x70, 0xd66c, 0x7e5, 0x47b0, 0x0, 0x0);
        gbc.writeMem(0xcc99, { 0x29 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x554, gbc.sp());
        EXPECT(0xcc9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcc99));
        // 29 0103
        gbc.setState(0x7ad2, 0x6982, 0xe9c0, 0xdc5d, 0xd10b, 0x5fd4, 0x0, 0x0);
        gbc.writeMem(0x7ad2, { 0x29 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6982, gbc.sp());
        EXPECT(0x7ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0104
        gbc.setState(0xe218, 0x2740, 0xade0, 0xc210, 0x4327, 0xb45b, 0x1, 0x1);
        gbc.writeMem(0xe218, { 0x29 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2740, gbc.sp());
        EXPECT(0xe219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe218));
        // 29 0105
        gbc.setState(0x41e3, 0xb02, 0x7a0, 0x917c, 0xab56, 0xe33b, 0x1, 0x1);
        gbc.writeMem(0x41e3, { 0x29 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb02, gbc.sp());
        EXPECT(0x41e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0106
        gbc.setState(0x62a5, 0xb802, 0xf240, 0xeef2, 0xedca, 0xc452, 0x1, 0x0);
        gbc.writeMem(0x62a5, { 0x29 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb802, gbc.sp());
        EXPECT(0x62a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0107
        gbc.setState(0xbd2, 0x2425, 0xd990, 0xcef4, 0x204, 0xeb0, 0x1, 0x0);
        gbc.writeMem(0xbd2, { 0x29 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2425, gbc.sp());
        EXPECT(0xbd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0108
        gbc.setState(0xdc92, 0x1953, 0xa30, 0x4f7b, 0x48ea, 0x9cee, 0x0, 0x1);
        gbc.writeMem(0xdc92, { 0x29 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1953, gbc.sp());
        EXPECT(0xdc93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdc92));
        // 29 010A
        gbc.setState(0xe05, 0x5d30, 0x83e0, 0x4baf, 0x737d, 0xcc8d, 0x0, 0x1);
        gbc.writeMem(0xe05, { 0x29 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5d30, gbc.sp());
        EXPECT(0xe06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 010B
        gbc.setState(0xe882, 0x63ef, 0x6b60, 0xf698, 0x9bd1, 0xe4d6, 0x0, 0x1);
        gbc.writeMem(0xe882, { 0x29 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x63ef, gbc.sp());
        EXPECT(0xe883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe882));
        // 29 010C
        gbc.setState(0x2b9b, 0xd765, 0x5960, 0x249f, 0xdc3b, 0xc968, 0x0, 0x1);
        gbc.writeMem(0x2b9b, { 0x29 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd765, gbc.sp());
        EXPECT(0x2b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 010D
        gbc.setState(0xc8a6, 0xa854, 0xc640, 0x798, 0x97e7, 0xd9a3, 0x1, 0x0);
        gbc.writeMem(0xc8a6, { 0x29 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa854, gbc.sp());
        EXPECT(0xc8a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc8a6));
        // 29 010E
        gbc.setState(0x8976, 0x27d8, 0x7720, 0xa5f4, 0xe534, 0x3b80, 0x0, 0x1);
        gbc.writeMem(0x8976, { 0x29 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x27d8, gbc.sp());
        EXPECT(0x8977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8976));
        // 29 0110
        gbc.setState(0x94f9, 0x962, 0xbd20, 0xffb1, 0xb334, 0xacbb, 0x1, 0x0);
        gbc.writeMem(0x94f9, { 0x29 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x962, gbc.sp());
        EXPECT(0x94fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x94f9));
        // 29 0111
        gbc.setState(0xae2a, 0xd28d, 0x3ad0, 0xbb6c, 0xbdfe, 0x3396, 0x1, 0x1);
        gbc.writeMem(0xae2a, { 0x29 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd28d, gbc.sp());
        EXPECT(0xae2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xae2a));
        // 29 0112
        gbc.setState(0x8dd8, 0xa0e5, 0x2a40, 0x7462, 0x574f, 0x33cd, 0x1, 0x0);
        gbc.writeMem(0x8dd8, { 0x29 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa0e5, gbc.sp());
        EXPECT(0x8dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8dd8));
        // 29 0113
        gbc.setState(0xcc93, 0x679d, 0x2010, 0x5d6, 0x5b2d, 0x8503, 0x1, 0x1);
        gbc.writeMem(0xcc93, { 0x29 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x679d, gbc.sp());
        EXPECT(0xcc94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcc93));
        // 29 0114
        gbc.setState(0xbee, 0x1891, 0x24d0, 0x5557, 0x7a00, 0x60e6, 0x1, 0x0);
        gbc.writeMem(0xbee, { 0x29 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1891, gbc.sp());
        EXPECT(0xbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0115
        gbc.setState(0xe53, 0xc91, 0xeb50, 0x4daa, 0xeb15, 0x9df8, 0x0, 0x1);
        gbc.writeMem(0xe53, { 0x29 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc91, gbc.sp());
        EXPECT(0xe54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0116
        gbc.setState(0x49a6, 0x9551, 0x56a0, 0x3200, 0xb045, 0x368d, 0x1, 0x1);
        gbc.writeMem(0x49a6, { 0x29 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9551, gbc.sp());
        EXPECT(0x49a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0117
        gbc.setState(0xa55d, 0xf66, 0xd420, 0x40dc, 0x52b9, 0xa230, 0x1, 0x0);
        gbc.writeMem(0xa55d, { 0x29 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf66, gbc.sp());
        EXPECT(0xa55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa55d));
        // 29 0118
        gbc.setState(0xbdc9, 0xe1c4, 0xaaf0, 0x4d0a, 0xf020, 0x8492, 0x1, 0x1);
        gbc.writeMem(0xbdc9, { 0x29 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe1c4, gbc.sp());
        EXPECT(0xbdca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbdc9));
        // 29 0119
        gbc.setState(0xeb0c, 0xe341, 0x8470, 0xf74e, 0x90a5, 0xcd5e, 0x1, 0x0);
        gbc.writeMem(0xeb0c, { 0x29 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe341, gbc.sp());
        EXPECT(0xeb0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xeb0c));
        // 29 011A
        gbc.setState(0x4c43, 0xa885, 0x55f0, 0x3bde, 0x923a, 0xb54a, 0x1, 0x1);
        gbc.writeMem(0x4c43, { 0x29 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa885, gbc.sp());
        EXPECT(0x4c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 011B
        gbc.setState(0xdbcb, 0xb274, 0xc070, 0x45e, 0x2f80, 0x2da6, 0x1, 0x1);
        gbc.writeMem(0xdbcb, { 0x29 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb274, gbc.sp());
        EXPECT(0xdbcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdbcb));
        // 29 011C
        gbc.setState(0x6a9a, 0xf322, 0x86a0, 0xa32e, 0x8751, 0x7083, 0x1, 0x1);
        gbc.writeMem(0x6a9a, { 0x29 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf322, gbc.sp());
        EXPECT(0x6a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 011D
        gbc.setState(0x7e90, 0x8807, 0x150, 0x7d99, 0xcccd, 0x4995, 0x1, 0x1);
        gbc.writeMem(0x7e90, { 0x29 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8807, gbc.sp());
        EXPECT(0x7e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 011E
        gbc.setState(0x55c9, 0xd1df, 0xf1f0, 0x6944, 0x6c1b, 0xb295, 0x0, 0x0);
        gbc.writeMem(0x55c9, { 0x29 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd1df, gbc.sp());
        EXPECT(0x55ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 011F
        gbc.setState(0xe7fe, 0x82a3, 0x50c0, 0xe8bc, 0x84fd, 0xbda2, 0x1, 0x1);
        gbc.writeMem(0xe7fe, { 0x29 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x82a3, gbc.sp());
        EXPECT(0xe7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe7fe));
        // 29 0120
        gbc.setState(0x1dfa, 0x279c, 0x7900, 0xdab5, 0x395b, 0x7c26, 0x0, 0x0);
        gbc.writeMem(0x1dfa, { 0x29 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x279c, gbc.sp());
        EXPECT(0x1dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0123
        gbc.setState(0x7727, 0xfb83, 0xae60, 0xef4d, 0x864b, 0xbf09, 0x0, 0x0);
        gbc.writeMem(0x7727, { 0x29 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfb83, gbc.sp());
        EXPECT(0x7728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0124
        gbc.setState(0xec9e, 0x6b3, 0x51b0, 0x3eb6, 0xe4e, 0x4e56, 0x0, 0x0);
        gbc.writeMem(0xec9e, { 0x29 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6b3, gbc.sp());
        EXPECT(0xec9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xec9e));
        // 29 0125
        gbc.setState(0xdfa1, 0xbf8f, 0x2100, 0xf0cc, 0x5b09, 0x29c2, 0x0, 0x1);
        gbc.writeMem(0xdfa1, { 0x29 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbf8f, gbc.sp());
        EXPECT(0xdfa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdfa1));
        // 29 0126
        gbc.setState(0x90a2, 0x5112, 0x1000, 0x8a3d, 0x7545, 0x4f54, 0x1, 0x1);
        gbc.writeMem(0x90a2, { 0x29 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5112, gbc.sp());
        EXPECT(0x90a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x90a2));
        // 29 0127
        gbc.setState(0x9950, 0x4f1f, 0xd620, 0x2e2, 0x9e11, 0x9b1, 0x0, 0x1);
        gbc.writeMem(0x9950, { 0x29 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4f1f, gbc.sp());
        EXPECT(0x9951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9950));
        // 29 0128
        gbc.setState(0xa8d6, 0x107b, 0x7c40, 0xcc7a, 0xadf4, 0x4b7d, 0x1, 0x1);
        gbc.writeMem(0xa8d6, { 0x29 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x107b, gbc.sp());
        EXPECT(0xa8d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa8d6));
        // 29 0129
        gbc.setState(0x4be6, 0xa0af, 0xae70, 0xe1c5, 0xf2f5, 0x89ed, 0x1, 0x1);
        gbc.writeMem(0x4be6, { 0x29 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa0af, gbc.sp());
        EXPECT(0x4be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 012A
        gbc.setState(0x1dc2, 0x187a, 0x9970, 0x86df, 0x4513, 0x543a, 0x0, 0x0);
        gbc.writeMem(0x1dc2, { 0x29 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x187a, gbc.sp());
        EXPECT(0x1dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 012B
        gbc.setState(0xcae1, 0xd3a4, 0x8000, 0xd4bb, 0xe4a9, 0x7041, 0x1, 0x0);
        gbc.writeMem(0xcae1, { 0x29 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd3a4, gbc.sp());
        EXPECT(0xcae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcae1));
        // 29 012C
        gbc.setState(0xe607, 0x334c, 0xa310, 0x6a08, 0xd2ca, 0x4d45, 0x1, 0x0);
        gbc.writeMem(0xe607, { 0x29 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x334c, gbc.sp());
        EXPECT(0xe608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe607));
        // 29 012D
        gbc.setState(0x2bbb, 0x8012, 0xbd30, 0xbf86, 0x9a7c, 0x4f7f, 0x0, 0x0);
        gbc.writeMem(0x2bbb, { 0x29 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8012, gbc.sp());
        EXPECT(0x2bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 012E
        gbc.setState(0x685c, 0xf807, 0x4a40, 0x3e3f, 0xea7, 0xea, 0x1, 0x1);
        gbc.writeMem(0x685c, { 0x29 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf807, gbc.sp());
        EXPECT(0x685d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0130
        gbc.setState(0xef9, 0xe5df, 0x1d60, 0xb581, 0x7326, 0x2e19, 0x0, 0x0);
        gbc.writeMem(0xef9, { 0x29 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe5df, gbc.sp());
        EXPECT(0xefa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0131
        gbc.setState(0x6ce6, 0x4c3a, 0x91e0, 0xc2d8, 0x7bcc, 0x2253, 0x1, 0x1);
        gbc.writeMem(0x6ce6, { 0x29 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4c3a, gbc.sp());
        EXPECT(0x6ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0132
        gbc.setState(0xebeb, 0x52f0, 0x6be0, 0xfb32, 0xecdc, 0x8f59, 0x0, 0x1);
        gbc.writeMem(0xebeb, { 0x29 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x52f0, gbc.sp());
        EXPECT(0xebec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xebeb));
        // 29 0133
        gbc.setState(0x2708, 0xee82, 0xbec0, 0x765d, 0xdbf, 0x7edf, 0x1, 0x1);
        gbc.writeMem(0x2708, { 0x29 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xee82, gbc.sp());
        EXPECT(0x2709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0134
        gbc.setState(0xebb7, 0x92cd, 0xd080, 0xe132, 0xe619, 0xec84, 0x1, 0x1);
        gbc.writeMem(0xebb7, { 0x29 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x92cd, gbc.sp());
        EXPECT(0xebb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xebb7));
        // 29 0135
        gbc.setState(0x3ddd, 0xdf62, 0x8420, 0x1d9b, 0x79e4, 0xa892, 0x0, 0x0);
        gbc.writeMem(0x3ddd, { 0x29 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdf62, gbc.sp());
        EXPECT(0x3dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0136
        gbc.setState(0x51bc, 0x5416, 0x3550, 0xcc6a, 0x52e4, 0x53a1, 0x1, 0x1);
        gbc.writeMem(0x51bc, { 0x29 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5416, gbc.sp());
        EXPECT(0x51bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0137
        gbc.setState(0xc7c7, 0xaa27, 0xca10, 0x39df, 0x5875, 0x5691, 0x0, 0x1);
        gbc.writeMem(0xc7c7, { 0x29 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xaa27, gbc.sp());
        EXPECT(0xc7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc7c7));
        // 29 0138
        gbc.setState(0x6d96, 0x7499, 0x2710, 0x9d37, 0xf2d7, 0xf94f, 0x1, 0x1);
        gbc.writeMem(0x6d96, { 0x29 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7499, gbc.sp());
        EXPECT(0x6d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0139
        gbc.setState(0xa7e5, 0x116c, 0xc7e0, 0x910b, 0x784e, 0xcd2d, 0x1, 0x0);
        gbc.writeMem(0xa7e5, { 0x29 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x116c, gbc.sp());
        EXPECT(0xa7e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa7e5));
        // 29 013A
        gbc.setState(0x873f, 0x5100, 0x2e90, 0x540f, 0x7fad, 0x2611, 0x1, 0x0);
        gbc.writeMem(0x873f, { 0x29 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5100, gbc.sp());
        EXPECT(0x8740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x873f));
        // 29 013B
        gbc.setState(0x4d0a, 0xbf3c, 0x9f90, 0xb855, 0x39e7, 0x43e5, 0x1, 0x1);
        gbc.writeMem(0x4d0a, { 0x29 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbf3c, gbc.sp());
        EXPECT(0x4d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 013D
        gbc.setState(0x1533, 0xdf68, 0xb900, 0x5fe4, 0x63fe, 0x6cb0, 0x1, 0x0);
        gbc.writeMem(0x1533, { 0x29 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdf68, gbc.sp());
        EXPECT(0x1534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 013E
        gbc.setState(0x4335, 0xd43e, 0x7aa0, 0x1cea, 0x6998, 0x9792, 0x1, 0x0);
        gbc.writeMem(0x4335, { 0x29 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd43e, gbc.sp());
        EXPECT(0x4336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 013F
        gbc.setState(0xe606, 0x90b7, 0x7040, 0xd6b6, 0x4a8a, 0x3671, 0x1, 0x1);
        gbc.writeMem(0xe606, { 0x29 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x90b7, gbc.sp());
        EXPECT(0xe607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe606));
        // 29 0140
        gbc.setState(0x12db, 0x3989, 0x7b90, 0x7aa6, 0x1f5, 0xb961, 0x0, 0x0);
        gbc.writeMem(0x12db, { 0x29 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3989, gbc.sp());
        EXPECT(0x12dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0141
        gbc.setState(0xdba6, 0x4ef1, 0xc3d0, 0xec37, 0xf8f5, 0x3a01, 0x0, 0x0);
        gbc.writeMem(0xdba6, { 0x29 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4ef1, gbc.sp());
        EXPECT(0xdba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdba6));
        // 29 0142
        gbc.setState(0xbad4, 0xe272, 0xd7e0, 0x95d4, 0xe25e, 0xccc4, 0x1, 0x0);
        gbc.writeMem(0xbad4, { 0x29 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe272, gbc.sp());
        EXPECT(0xbad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbad4));
        // 29 0143
        gbc.setState(0x6867, 0x1077, 0x7590, 0x332f, 0x380c, 0xdc4b, 0x1, 0x1);
        gbc.writeMem(0x6867, { 0x29 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1077, gbc.sp());
        EXPECT(0x6868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0144
        gbc.setState(0x1968, 0xfccd, 0xce50, 0xc93c, 0xd8fb, 0xdf76, 0x0, 0x1);
        gbc.writeMem(0x1968, { 0x29 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfccd, gbc.sp());
        EXPECT(0x1969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0145
        gbc.setState(0x77f6, 0x77c6, 0x4310, 0xa00a, 0xb757, 0xa9e2, 0x1, 0x0);
        gbc.writeMem(0x77f6, { 0x29 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x77c6, gbc.sp());
        EXPECT(0x77f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0147
        gbc.setState(0x9eb3, 0xf9e3, 0x8590, 0xec9e, 0xebc5, 0x2425, 0x0, 0x0);
        gbc.writeMem(0x9eb3, { 0x29 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf9e3, gbc.sp());
        EXPECT(0x9eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9eb3));
        // 29 0148
        gbc.setState(0x807d, 0x5d62, 0x9c80, 0x2b79, 0x11c4, 0x8389, 0x0, 0x1);
        gbc.writeMem(0x807d, { 0x29 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5d62, gbc.sp());
        EXPECT(0x807e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x807d));
        // 29 0149
        gbc.setState(0x72fe, 0xf9d9, 0x8e30, 0x956, 0x7ff9, 0xf58d, 0x0, 0x1);
        gbc.writeMem(0x72fe, { 0x29 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf9d9, gbc.sp());
        EXPECT(0x72ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 014A
        gbc.setState(0x9769, 0x4438, 0x3000, 0x7535, 0xc0a2, 0x5216, 0x0, 0x1);
        gbc.writeMem(0x9769, { 0x29 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4438, gbc.sp());
        EXPECT(0x976a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9769));
        // 29 014B
        gbc.setState(0x34c2, 0x9edc, 0x43e0, 0x5d77, 0xdeb8, 0xcdc, 0x0, 0x0);
        gbc.writeMem(0x34c2, { 0x29 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9edc, gbc.sp());
        EXPECT(0x34c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 014C
        gbc.setState(0x147a, 0x6a18, 0xe7f0, 0xb2f7, 0x265f, 0x31d8, 0x0, 0x0);
        gbc.writeMem(0x147a, { 0x29 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6a18, gbc.sp());
        EXPECT(0x147b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 014D
        gbc.setState(0xb6d6, 0x968c, 0x8140, 0x664d, 0x9055, 0xa2b7, 0x0, 0x0);
        gbc.writeMem(0xb6d6, { 0x29 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x968c, gbc.sp());
        EXPECT(0xb6d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb6d6));
        // 29 014E
        gbc.setState(0x46bf, 0xd9b0, 0x9df0, 0xbf5c, 0xba3e, 0xcb0d, 0x0, 0x1);
        gbc.writeMem(0x46bf, { 0x29 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd9b0, gbc.sp());
        EXPECT(0x46c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 014F
        gbc.setState(0xab05, 0xbf79, 0x8d80, 0x386f, 0x7b42, 0xf6cd, 0x0, 0x1);
        gbc.writeMem(0xab05, { 0x29 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbf79, gbc.sp());
        EXPECT(0xab06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xab05));
        // 29 0150
        gbc.setState(0x4f4c, 0x1951, 0x6a40, 0x811d, 0x352f, 0xf39f, 0x0, 0x1);
        gbc.writeMem(0x4f4c, { 0x29 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1951, gbc.sp());
        EXPECT(0x4f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0151
        gbc.setState(0x4079, 0x494a, 0x42d0, 0x3a27, 0xf252, 0xee23, 0x1, 0x1);
        gbc.writeMem(0x4079, { 0x29 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x494a, gbc.sp());
        EXPECT(0x407a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0152
        gbc.setState(0x170f, 0x6f91, 0xe330, 0x8f44, 0x1bd1, 0x67, 0x0, 0x0);
        gbc.writeMem(0x170f, { 0x29 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6f91, gbc.sp());
        EXPECT(0x1710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0153
        gbc.setState(0xa7b7, 0xb3a5, 0x4640, 0x2c79, 0xad7e, 0xa44c, 0x0, 0x0);
        gbc.writeMem(0xa7b7, { 0x29 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb3a5, gbc.sp());
        EXPECT(0xa7b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa7b7));
        // 29 0154
        gbc.setState(0xad5f, 0xda13, 0x8f30, 0x7086, 0x1acb, 0x4cf4, 0x0, 0x0);
        gbc.writeMem(0xad5f, { 0x29 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xda13, gbc.sp());
        EXPECT(0xad60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xad5f));
        // 29 0155
        gbc.setState(0x6c12, 0x13d9, 0x2ce0, 0x4a04, 0xad5f, 0x605d, 0x0, 0x0);
        gbc.writeMem(0x6c12, { 0x29 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x13d9, gbc.sp());
        EXPECT(0x6c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0156
        gbc.setState(0x2772, 0xdcdb, 0x6340, 0x3cf, 0x27f9, 0x9807, 0x1, 0x0);
        gbc.writeMem(0x2772, { 0x29 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdcdb, gbc.sp());
        EXPECT(0x2773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0157
        gbc.setState(0x1550, 0x2285, 0xfec0, 0x450a, 0xa9af, 0xff94, 0x0, 0x0);
        gbc.writeMem(0x1550, { 0x29 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2285, gbc.sp());
        EXPECT(0x1551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0159
        gbc.setState(0xc139, 0xa476, 0xaa70, 0x272b, 0xc716, 0xca79, 0x1, 0x1);
        gbc.writeMem(0xc139, { 0x29 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa476, gbc.sp());
        EXPECT(0xc13a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc139));
        // 29 015A
        gbc.setState(0x5159, 0x1995, 0xa490, 0x85d2, 0xfc1d, 0xe2aa, 0x0, 0x1);
        gbc.writeMem(0x5159, { 0x29 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1995, gbc.sp());
        EXPECT(0x515a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 015B
        gbc.setState(0xc5d0, 0x841b, 0xda90, 0x9fbe, 0xf5ac, 0x2760, 0x1, 0x0);
        gbc.writeMem(0xc5d0, { 0x29 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x841b, gbc.sp());
        EXPECT(0xc5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc5d0));
        // 29 015C
        gbc.setState(0x3d78, 0xb86f, 0x9d40, 0x99c0, 0xca0e, 0x2db8, 0x0, 0x0);
        gbc.writeMem(0x3d78, { 0x29 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb86f, gbc.sp());
        EXPECT(0x3d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 015D
        gbc.setState(0x89d7, 0xfaaa, 0x7ff0, 0x9c3e, 0x3ca8, 0x6ec5, 0x1, 0x0);
        gbc.writeMem(0x89d7, { 0x29 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfaaa, gbc.sp());
        EXPECT(0x89d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x89d7));
        // 29 015E
        gbc.setState(0xed40, 0xc0cf, 0x9520, 0xe135, 0x78a, 0x8bf7, 0x0, 0x0);
        gbc.writeMem(0xed40, { 0x29 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc0cf, gbc.sp());
        EXPECT(0xed41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xed40));
        // 29 015F
        gbc.setState(0x9fba, 0x53c9, 0x3da0, 0xe451, 0x5b2b, 0x8065, 0x1, 0x0);
        gbc.writeMem(0x9fba, { 0x29 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x53c9, gbc.sp());
        EXPECT(0x9fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9fba));
        // 29 0160
        gbc.setState(0xcc93, 0xec8f, 0x3860, 0xd43, 0x9442, 0xd754, 0x0, 0x0);
        gbc.writeMem(0xcc93, { 0x29 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xec8f, gbc.sp());
        EXPECT(0xcc94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcc93));
        // 29 0161
        gbc.setState(0xd7cf, 0xe4df, 0xbfe0, 0x5aea, 0xe303, 0x5e96, 0x1, 0x1);
        gbc.writeMem(0xd7cf, { 0x29 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe4df, gbc.sp());
        EXPECT(0xd7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd7cf));
        // 29 0162
        gbc.setState(0x9a4d, 0x1d1e, 0xbff0, 0x919a, 0x803f, 0xe02f, 0x1, 0x0);
        gbc.writeMem(0x9a4d, { 0x29 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1d1e, gbc.sp());
        EXPECT(0x9a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9a4d));
        // 29 0163
        gbc.setState(0x5228, 0xdc6f, 0x6510, 0x5c21, 0x7864, 0xfac0, 0x0, 0x0);
        gbc.writeMem(0x5228, { 0x29 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdc6f, gbc.sp());
        EXPECT(0x5229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0164
        gbc.setState(0x693c, 0x5c29, 0xee30, 0x665f, 0xe2c7, 0x50b0, 0x0, 0x0);
        gbc.writeMem(0x693c, { 0x29 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5c29, gbc.sp());
        EXPECT(0x693d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0165
        gbc.setState(0xab1, 0x639d, 0x5d60, 0xc067, 0xff38, 0xfd42, 0x0, 0x1);
        gbc.writeMem(0xab1, { 0x29 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x639d, gbc.sp());
        EXPECT(0xab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0166
        gbc.setState(0x77a9, 0xeed6, 0x4e10, 0x5548, 0xd2dc, 0xc26a, 0x0, 0x1);
        gbc.writeMem(0x77a9, { 0x29 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xeed6, gbc.sp());
        EXPECT(0x77aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0167
        gbc.setState(0xc22b, 0xd0ad, 0x5580, 0x1171, 0xbe11, 0x1457, 0x0, 0x0);
        gbc.writeMem(0xc22b, { 0x29 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd0ad, gbc.sp());
        EXPECT(0xc22c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc22b));
        // 29 0168
        gbc.setState(0x332a, 0x71a0, 0x8840, 0x4de4, 0x9e3e, 0xc52e, 0x1, 0x0);
        gbc.writeMem(0x332a, { 0x29 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x71a0, gbc.sp());
        EXPECT(0x332b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0169
        gbc.setState(0xa6ce, 0xf240, 0xc180, 0xab37, 0xea78, 0x5a6a, 0x1, 0x1);
        gbc.writeMem(0xa6ce, { 0x29 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf240, gbc.sp());
        EXPECT(0xa6cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa6ce));
        // 29 016A
        gbc.setState(0xd7d9, 0x23d3, 0x19a0, 0x3857, 0x2440, 0xb0e5, 0x1, 0x1);
        gbc.writeMem(0xd7d9, { 0x29 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x23d3, gbc.sp());
        EXPECT(0xd7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd7d9));
        // 29 016C
        gbc.setState(0x6b74, 0xeb1f, 0xd120, 0xd0f3, 0x8c1b, 0xecbb, 0x0, 0x0);
        gbc.writeMem(0x6b74, { 0x29 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xeb1f, gbc.sp());
        EXPECT(0x6b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 016D
        gbc.setState(0xd8fd, 0xd1d1, 0xb7e0, 0x1e41, 0x731b, 0x17f5, 0x0, 0x1);
        gbc.writeMem(0xd8fd, { 0x29 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd1d1, gbc.sp());
        EXPECT(0xd8fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd8fd));
        // 29 016E
        gbc.setState(0x13d6, 0x24a0, 0xd640, 0xaa91, 0xe2ee, 0x9908, 0x0, 0x1);
        gbc.writeMem(0x13d6, { 0x29 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x24a0, gbc.sp());
        EXPECT(0x13d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 016F
        gbc.setState(0xbdc4, 0x8b60, 0xba10, 0x47ba, 0x95f9, 0x52da, 0x0, 0x0);
        gbc.writeMem(0xbdc4, { 0x29 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8b60, gbc.sp());
        EXPECT(0xbdc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbdc4));
        // 29 0170
        gbc.setState(0x79de, 0xb2a7, 0x7180, 0xa708, 0x9a44, 0x406f, 0x1, 0x0);
        gbc.writeMem(0x79de, { 0x29 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb2a7, gbc.sp());
        EXPECT(0x79df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0171
        gbc.setState(0x7619, 0xbe9f, 0xd060, 0xf881, 0x7e3a, 0xed37, 0x1, 0x1);
        gbc.writeMem(0x7619, { 0x29 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbe9f, gbc.sp());
        EXPECT(0x761a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0172
        gbc.setState(0x4788, 0x57c4, 0x1460, 0xb1a0, 0xdff5, 0x9705, 0x0, 0x0);
        gbc.writeMem(0x4788, { 0x29 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x57c4, gbc.sp());
        EXPECT(0x4789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0173
        gbc.setState(0x3451, 0xd88, 0xd40, 0x8c4e, 0xc938, 0x9300, 0x1, 0x1);
        gbc.writeMem(0x3451, { 0x29 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd88, gbc.sp());
        EXPECT(0x3452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0174
        gbc.setState(0x735e, 0xa461, 0x4a90, 0xd68, 0x3da9, 0x57c, 0x1, 0x1);
        gbc.writeMem(0x735e, { 0x29 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa461, gbc.sp());
        EXPECT(0x735f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0175
        gbc.setState(0xad7f, 0xb044, 0xed40, 0x8495, 0x85c0, 0xa3b1, 0x0, 0x0);
        gbc.writeMem(0xad7f, { 0x29 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb044, gbc.sp());
        EXPECT(0xad80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xad7f));
        // 29 0176
        gbc.setState(0x8a3a, 0x432, 0x3240, 0xc07f, 0x97b, 0xd3fe, 0x0, 0x0);
        gbc.writeMem(0x8a3a, { 0x29 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x432, gbc.sp());
        EXPECT(0x8a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8a3a));
        // 29 0177
        gbc.setState(0x8fba, 0x2084, 0x2b0, 0x9b9b, 0x4dfa, 0x306f, 0x0, 0x0);
        gbc.writeMem(0x8fba, { 0x29 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2084, gbc.sp());
        EXPECT(0x8fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8fba));
        // 29 0178
        gbc.setState(0xd0c3, 0x4fc3, 0x7c50, 0x35c7, 0x2030, 0x6ce3, 0x1, 0x1);
        gbc.writeMem(0xd0c3, { 0x29 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4fc3, gbc.sp());
        EXPECT(0xd0c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd0c3));
        // 29 0179
        gbc.setState(0xa716, 0xd8bb, 0x1280, 0x7ac6, 0xc787, 0x2e23, 0x0, 0x0);
        gbc.writeMem(0xa716, { 0x29 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd8bb, gbc.sp());
        EXPECT(0xa717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa716));
        // 29 017A
        gbc.setState(0x873f, 0x407a, 0xdd60, 0xa7, 0x6de, 0x48ba, 0x1, 0x1);
        gbc.writeMem(0x873f, { 0x29 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x407a, gbc.sp());
        EXPECT(0x8740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x873f));
        // 29 017C
        gbc.setState(0x65a3, 0x5b7c, 0xb440, 0x3e38, 0x9817, 0x757c, 0x1, 0x0);
        gbc.writeMem(0x65a3, { 0x29 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5b7c, gbc.sp());
        EXPECT(0x65a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 017D
        gbc.setState(0x7a72, 0xc9ec, 0x5a30, 0xb0c4, 0xaaaf, 0x3f2f, 0x1, 0x1);
        gbc.writeMem(0x7a72, { 0x29 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc9ec, gbc.sp());
        EXPECT(0x7a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 017E
        gbc.setState(0x1c96, 0x95a4, 0x1800, 0xfefc, 0x29b6, 0xb93f, 0x1, 0x0);
        gbc.writeMem(0x1c96, { 0x29 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x95a4, gbc.sp());
        EXPECT(0x1c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 017F
        gbc.setState(0x64b1, 0xa29c, 0xd8f0, 0x79f0, 0x115d, 0x138f, 0x1, 0x1);
        gbc.writeMem(0x64b1, { 0x29 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa29c, gbc.sp());
        EXPECT(0x64b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0180
        gbc.setState(0x85b1, 0x24c8, 0x19d0, 0x8754, 0x8849, 0x9411, 0x0, 0x1);
        gbc.writeMem(0x85b1, { 0x29 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x24c8, gbc.sp());
        EXPECT(0x85b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x85b1));
        // 29 0181
        gbc.setState(0x5db6, 0x213c, 0xf490, 0xda83, 0x91ec, 0xd148, 0x1, 0x0);
        gbc.writeMem(0x5db6, { 0x29 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x213c, gbc.sp());
        EXPECT(0x5db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0182
        gbc.setState(0x5d5a, 0xc393, 0xc870, 0x2353, 0x21de, 0x6804, 0x0, 0x1);
        gbc.writeMem(0x5d5a, { 0x29 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc393, gbc.sp());
        EXPECT(0x5d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0183
        gbc.setState(0xc039, 0xf771, 0xbaa0, 0xcc14, 0x8291, 0xdd62, 0x0, 0x0);
        gbc.writeMem(0xc039, { 0x29 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf771, gbc.sp());
        EXPECT(0xc03a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc039));
        // 29 0184
        gbc.setState(0x295a, 0x10c9, 0xaa90, 0x98a0, 0x3928, 0xb96c, 0x1, 0x1);
        gbc.writeMem(0x295a, { 0x29 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x10c9, gbc.sp());
        EXPECT(0x295b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0185
        gbc.setState(0x80ab, 0xa9c5, 0xa6b0, 0x7185, 0x8ceb, 0xb298, 0x1, 0x1);
        gbc.writeMem(0x80ab, { 0x29 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa9c5, gbc.sp());
        EXPECT(0x80ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x80ab));
        // 29 0186
        gbc.setState(0xda8d, 0xc504, 0x300, 0x3cda, 0x92c2, 0xf395, 0x1, 0x0);
        gbc.writeMem(0xda8d, { 0x29 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc504, gbc.sp());
        EXPECT(0xda8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xda8d));
        // 29 0187
        gbc.setState(0x541c, 0xae0d, 0x52f0, 0x9535, 0x9b3b, 0x3049, 0x0, 0x0);
        gbc.writeMem(0x541c, { 0x29 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xae0d, gbc.sp());
        EXPECT(0x541d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0188
        gbc.setState(0xe905, 0x36bb, 0x27a0, 0x52c7, 0xfec4, 0xb271, 0x1, 0x0);
        gbc.writeMem(0xe905, { 0x29 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x36bb, gbc.sp());
        EXPECT(0xe906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe905));
        // 29 0189
        gbc.setState(0x11b3, 0x280a, 0x58c0, 0x709a, 0xc5fe, 0xc8ee, 0x0, 0x1);
        gbc.writeMem(0x11b3, { 0x29 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x280a, gbc.sp());
        EXPECT(0x11b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 018A
        gbc.setState(0x6860, 0xd881, 0x76d0, 0x3c71, 0x8903, 0x21ac, 0x1, 0x0);
        gbc.writeMem(0x6860, { 0x29 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd881, gbc.sp());
        EXPECT(0x6861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 018B
        gbc.setState(0xc213, 0xd8a8, 0xbea0, 0xff06, 0xa316, 0x55fa, 0x1, 0x1);
        gbc.writeMem(0xc213, { 0x29 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd8a8, gbc.sp());
        EXPECT(0xc214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc213));
        // 29 018C
        gbc.setState(0xd108, 0x68e7, 0x2f40, 0xb04a, 0xbc37, 0x1979, 0x1, 0x1);
        gbc.writeMem(0xd108, { 0x29 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x68e7, gbc.sp());
        EXPECT(0xd109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd108));
        // 29 018D
        gbc.setState(0x9eb4, 0xefc8, 0x9a0, 0x3ac9, 0x2437, 0xb121, 0x1, 0x0);
        gbc.writeMem(0x9eb4, { 0x29 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xefc8, gbc.sp());
        EXPECT(0x9eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9eb4));
        // 29 018E
        gbc.setState(0x8cb, 0x5617, 0x6cb0, 0x1ea3, 0xfdda, 0x5295, 0x0, 0x1);
        gbc.writeMem(0x8cb, { 0x29 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5617, gbc.sp());
        EXPECT(0x8cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 018F
        gbc.setState(0x2a69, 0xcdf9, 0xead0, 0xae20, 0xe707, 0x7398, 0x1, 0x0);
        gbc.writeMem(0x2a69, { 0x29 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcdf9, gbc.sp());
        EXPECT(0x2a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0190
        gbc.setState(0x8857, 0x7eac, 0x78e0, 0xa178, 0x772f, 0x504d, 0x0, 0x1);
        gbc.writeMem(0x8857, { 0x29 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7eac, gbc.sp());
        EXPECT(0x8858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8857));
        // 29 0191
        gbc.setState(0xa2ff, 0x9c07, 0xcca0, 0xf088, 0x7ea8, 0x50cb, 0x1, 0x1);
        gbc.writeMem(0xa2ff, { 0x29 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9c07, gbc.sp());
        EXPECT(0xa300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa2ff));
        // 29 0192
        gbc.setState(0xdf83, 0x6dff, 0xd00, 0x918e, 0xd009, 0x4188, 0x0, 0x1);
        gbc.writeMem(0xdf83, { 0x29 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6dff, gbc.sp());
        EXPECT(0xdf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdf83));
        // 29 0193
        gbc.setState(0xaecd, 0x3b6c, 0xe10, 0x34e6, 0x197, 0x6ae3, 0x0, 0x1);
        gbc.writeMem(0xaecd, { 0x29 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3b6c, gbc.sp());
        EXPECT(0xaece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xaecd));
        // 29 0194
        gbc.setState(0x6fc0, 0xbcbb, 0x310, 0x4808, 0xf335, 0x420b, 0x1, 0x1);
        gbc.writeMem(0x6fc0, { 0x29 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbcbb, gbc.sp());
        EXPECT(0x6fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0195
        gbc.setState(0x7375, 0x8f47, 0x5290, 0x641e, 0x46a, 0xeb84, 0x0, 0x0);
        gbc.writeMem(0x7375, { 0x29 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8f47, gbc.sp());
        EXPECT(0x7376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0197
        gbc.setState(0x6c11, 0xc0b0, 0xe990, 0xf09d, 0xdb05, 0xd310, 0x1, 0x0);
        gbc.writeMem(0x6c11, { 0x29 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc0b0, gbc.sp());
        EXPECT(0x6c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0198
        gbc.setState(0xdf96, 0x848a, 0x91f0, 0x6454, 0xac33, 0xe4c7, 0x0, 0x1);
        gbc.writeMem(0xdf96, { 0x29 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x848a, gbc.sp());
        EXPECT(0xdf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdf96));
        // 29 0199
        gbc.setState(0x155d, 0xc519, 0xa9c0, 0xfc1b, 0x521c, 0xeae4, 0x0, 0x0);
        gbc.writeMem(0x155d, { 0x29 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc519, gbc.sp());
        EXPECT(0x155e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 019A
        gbc.setState(0xcf0a, 0x72b5, 0x1390, 0x43e9, 0xa4ce, 0x2b3b, 0x1, 0x0);
        gbc.writeMem(0xcf0a, { 0x29 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x72b5, gbc.sp());
        EXPECT(0xcf0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcf0a));
        // 29 019B
        gbc.setState(0x4620, 0x3182, 0x7ca0, 0xf831, 0xf921, 0xab1a, 0x0, 0x1);
        gbc.writeMem(0x4620, { 0x29 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3182, gbc.sp());
        EXPECT(0x4621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 019C
        gbc.setState(0x3dd5, 0xcd8d, 0xa9f0, 0xbddb, 0x9365, 0x1e62, 0x1, 0x0);
        gbc.writeMem(0x3dd5, { 0x29 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcd8d, gbc.sp());
        EXPECT(0x3dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 019D
        gbc.setState(0xc69b, 0xd0ed, 0x2620, 0xc2b2, 0x41ac, 0x7caa, 0x0, 0x0);
        gbc.writeMem(0xc69b, { 0x29 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd0ed, gbc.sp());
        EXPECT(0xc69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc69b));
        // 29 019E
        gbc.setState(0xb6a1, 0xdfb1, 0x21e0, 0xc79a, 0x1753, 0x8b9e, 0x1, 0x0);
        gbc.writeMem(0xb6a1, { 0x29 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdfb1, gbc.sp());
        EXPECT(0xb6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb6a1));
        // 29 019F
        gbc.setState(0x643e, 0xf87, 0xa830, 0xd6d2, 0x23e8, 0x1219, 0x0, 0x0);
        gbc.writeMem(0x643e, { 0x29 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf87, gbc.sp());
        EXPECT(0x643f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01A0
        gbc.setState(0x9b25, 0xbe0a, 0xaa60, 0x818a, 0x9f1d, 0xc1b2, 0x1, 0x1);
        gbc.writeMem(0x9b25, { 0x29 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbe0a, gbc.sp());
        EXPECT(0x9b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9b25));
        // 29 01A1
        gbc.setState(0x1ba2, 0x9fe1, 0x6b0, 0xd02c, 0x4996, 0x6708, 0x1, 0x0);
        gbc.writeMem(0x1ba2, { 0x29 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9fe1, gbc.sp());
        EXPECT(0x1ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01A2
        gbc.setState(0x7e05, 0x1d4b, 0x90, 0xbe0a, 0xca68, 0xdc97, 0x0, 0x1);
        gbc.writeMem(0x7e05, { 0x29 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1d4b, gbc.sp());
        EXPECT(0x7e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01A3
        gbc.setState(0x99e8, 0xa004, 0x1590, 0xa70e, 0x9b8e, 0xa760, 0x0, 0x1);
        gbc.writeMem(0x99e8, { 0x29 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa004, gbc.sp());
        EXPECT(0x99e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x99e8));
        // 29 01A4
        gbc.setState(0x4a6c, 0x12cc, 0xf3b0, 0x364b, 0xe26b, 0x23db, 0x0, 0x1);
        gbc.writeMem(0x4a6c, { 0x29 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x12cc, gbc.sp());
        EXPECT(0x4a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01A5
        gbc.setState(0x1aa, 0xdb9e, 0x3e20, 0x2014, 0xe803, 0x5818, 0x0, 0x1);
        gbc.writeMem(0x1aa, { 0x29 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdb9e, gbc.sp());
        EXPECT(0x1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01A6
        gbc.setState(0xc55c, 0xf9af, 0x3750, 0x36d2, 0x9c09, 0x4297, 0x0, 0x0);
        gbc.writeMem(0xc55c, { 0x29 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf9af, gbc.sp());
        EXPECT(0xc55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc55c));
        // 29 01A7
        gbc.setState(0x866d, 0x761e, 0x3580, 0x5cfa, 0x6ce2, 0xddce, 0x1, 0x0);
        gbc.writeMem(0x866d, { 0x29 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x761e, gbc.sp());
        EXPECT(0x866e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x866d));
        // 29 01A8
        gbc.setState(0x1904, 0xa22f, 0x5060, 0xf12b, 0xecf1, 0xb38, 0x0, 0x0);
        gbc.writeMem(0x1904, { 0x29 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa22f, gbc.sp());
        EXPECT(0x1905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01A9
        gbc.setState(0xad84, 0x6e76, 0xd5c0, 0xe327, 0xe1ce, 0xada1, 0x0, 0x1);
        gbc.writeMem(0xad84, { 0x29 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6e76, gbc.sp());
        EXPECT(0xad85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xad84));
        // 29 01AA
        gbc.setState(0x3e2f, 0x50d6, 0xb360, 0x807a, 0xca9, 0x3229, 0x0, 0x1);
        gbc.writeMem(0x3e2f, { 0x29 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x50d6, gbc.sp());
        EXPECT(0x3e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01AB
        gbc.setState(0xb3b2, 0x3ea3, 0xd270, 0x7a30, 0x24b2, 0x9ab6, 0x0, 0x0);
        gbc.writeMem(0xb3b2, { 0x29 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3ea3, gbc.sp());
        EXPECT(0xb3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb3b2));
        // 29 01AC
        gbc.setState(0xe668, 0xcf12, 0xd7a0, 0xf57b, 0x23e1, 0xe743, 0x0, 0x1);
        gbc.writeMem(0xe668, { 0x29 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcf12, gbc.sp());
        EXPECT(0xe669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe668));
        // 29 01AD
        gbc.setState(0x88f, 0xc8b5, 0xb8e0, 0x66d0, 0xd2a5, 0xced, 0x0, 0x0);
        gbc.writeMem(0x88f, { 0x29 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc8b5, gbc.sp());
        EXPECT(0x890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01AE
        gbc.setState(0x41b, 0xb521, 0xd1b0, 0x3785, 0x967a, 0x3a5c, 0x0, 0x0);
        gbc.writeMem(0x41b, { 0x29 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb521, gbc.sp());
        EXPECT(0x41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01AF
        gbc.setState(0xd9e4, 0xc61b, 0x16e0, 0x47bc, 0x9ffc, 0xef2b, 0x1, 0x0);
        gbc.writeMem(0xd9e4, { 0x29 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc61b, gbc.sp());
        EXPECT(0xd9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd9e4));
        // 29 01B0
        gbc.setState(0x9c28, 0x7d39, 0x7d50, 0x36dc, 0xf60e, 0xa9c9, 0x1, 0x1);
        gbc.writeMem(0x9c28, { 0x29 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7d39, gbc.sp());
        EXPECT(0x9c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9c28));
        // 29 01B1
        gbc.setState(0xb2ef, 0x8c37, 0xfe30, 0x5097, 0xb788, 0x4d6e, 0x1, 0x1);
        gbc.writeMem(0xb2ef, { 0x29 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8c37, gbc.sp());
        EXPECT(0xb2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb2ef));
        // 29 01B2
        gbc.setState(0xc0c7, 0x6d54, 0xa0b0, 0x7688, 0x5e42, 0xad5f, 0x1, 0x1);
        gbc.writeMem(0xc0c7, { 0x29 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6d54, gbc.sp());
        EXPECT(0xc0c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc0c7));
        // 29 01B3
        gbc.setState(0x511b, 0x3233, 0x57b0, 0x56f7, 0x9c2, 0xefe9, 0x0, 0x0);
        gbc.writeMem(0x511b, { 0x29 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3233, gbc.sp());
        EXPECT(0x511c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01B5
        gbc.setState(0xe77c, 0x3058, 0xbda0, 0x9bc5, 0x6be2, 0x352c, 0x0, 0x1);
        gbc.writeMem(0xe77c, { 0x29 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3058, gbc.sp());
        EXPECT(0xe77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe77c));
        // 29 01B6
        gbc.setState(0xd635, 0xa89d, 0x1e20, 0xfe9d, 0x2888, 0x8b1a, 0x1, 0x1);
        gbc.writeMem(0xd635, { 0x29 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa89d, gbc.sp());
        EXPECT(0xd636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd635));
        // 29 01B7
        gbc.setState(0xc5dc, 0x4654, 0x43c0, 0x12cf, 0xf9ca, 0x3715, 0x0, 0x1);
        gbc.writeMem(0xc5dc, { 0x29 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4654, gbc.sp());
        EXPECT(0xc5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc5dc));
        // 29 01B8
        gbc.setState(0x996a, 0xc06, 0x4ba0, 0x70b, 0x9937, 0xca92, 0x1, 0x0);
        gbc.writeMem(0x996a, { 0x29 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc06, gbc.sp());
        EXPECT(0x996b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x996a));
        // 29 01B9
        gbc.setState(0x9469, 0x801c, 0x6110, 0x8137, 0xa6b4, 0x4ea8, 0x1, 0x1);
        gbc.writeMem(0x9469, { 0x29 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x801c, gbc.sp());
        EXPECT(0x946a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9469));
        // 29 01BA
        gbc.setState(0x1754, 0xd76c, 0xba70, 0xe8ca, 0x1ce3, 0x6c7a, 0x0, 0x1);
        gbc.writeMem(0x1754, { 0x29 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd76c, gbc.sp());
        EXPECT(0x1755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01BB
        gbc.setState(0x885, 0x80b6, 0xc10, 0x121b, 0x15ea, 0x6a54, 0x1, 0x1);
        gbc.writeMem(0x885, { 0x29 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x80b6, gbc.sp());
        EXPECT(0x886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01BC
        gbc.setState(0x313, 0xdd99, 0xa120, 0x7bb5, 0x5850, 0xa36b, 0x0, 0x0);
        gbc.writeMem(0x313, { 0x29 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdd99, gbc.sp());
        EXPECT(0x314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01BD
        gbc.setState(0x510f, 0x8dbf, 0x1430, 0x289d, 0x5295, 0x177e, 0x1, 0x1);
        gbc.writeMem(0x510f, { 0x29 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8dbf, gbc.sp());
        EXPECT(0x5110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01BE
        gbc.setState(0xef0b, 0x4c9e, 0x17a0, 0x48ab, 0x4609, 0x504e, 0x0, 0x0);
        gbc.writeMem(0xef0b, { 0x29 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4c9e, gbc.sp());
        EXPECT(0xef0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xef0b));
        // 29 01BF
        gbc.setState(0x5e85, 0x23a8, 0x1040, 0xe72d, 0xe65f, 0x1f67, 0x0, 0x0);
        gbc.writeMem(0x5e85, { 0x29 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x23a8, gbc.sp());
        EXPECT(0x5e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01C0
        gbc.setState(0xe8b2, 0x251e, 0x6d40, 0xb5e3, 0xf75c, 0xa57b, 0x0, 0x1);
        gbc.writeMem(0xe8b2, { 0x29 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x251e, gbc.sp());
        EXPECT(0xe8b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe8b2));
        // 29 01C1
        gbc.setState(0x8822, 0x2fce, 0x86f0, 0x67c4, 0x165d, 0xd15, 0x1, 0x0);
        gbc.writeMem(0x8822, { 0x29 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2fce, gbc.sp());
        EXPECT(0x8823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8822));
        // 29 01C4
        gbc.setState(0xa40, 0xeeb6, 0x670, 0xd93c, 0x8b59, 0xa37d, 0x1, 0x1);
        gbc.writeMem(0xa40, { 0x29 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xeeb6, gbc.sp());
        EXPECT(0xa41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01C5
        gbc.setState(0x2353, 0xba72, 0x4f20, 0xa00d, 0x3e6e, 0x6a0c, 0x0, 0x0);
        gbc.writeMem(0x2353, { 0x29 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xba72, gbc.sp());
        EXPECT(0x2354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01C6
        gbc.setState(0x996c, 0x4d34, 0x72e0, 0xaf6, 0x86e, 0x6dd7, 0x0, 0x1);
        gbc.writeMem(0x996c, { 0x29 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4d34, gbc.sp());
        EXPECT(0x996d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x996c));
        // 29 01C7
        gbc.setState(0xbb53, 0x7d24, 0x9f20, 0xfff5, 0x7279, 0xf2fd, 0x1, 0x1);
        gbc.writeMem(0xbb53, { 0x29 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7d24, gbc.sp());
        EXPECT(0xbb54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbb53));
        // 29 01C8
        gbc.setState(0xefc8, 0xdbe5, 0x720, 0x7f16, 0xf194, 0x1fcf, 0x0, 0x1);
        gbc.writeMem(0xefc8, { 0x29 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdbe5, gbc.sp());
        EXPECT(0xefc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xefc8));
        // 29 01C9
        gbc.setState(0x4126, 0xe21f, 0x9b80, 0x78f6, 0x215, 0xaa67, 0x1, 0x0);
        gbc.writeMem(0x4126, { 0x29 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe21f, gbc.sp());
        EXPECT(0x4127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01CA
        gbc.setState(0x4ece, 0xb6d3, 0x7000, 0x54cc, 0x26ac, 0xc6ba, 0x0, 0x1);
        gbc.writeMem(0x4ece, { 0x29 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb6d3, gbc.sp());
        EXPECT(0x4ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01CB
        gbc.setState(0x20d5, 0xa3d7, 0x92c0, 0x812f, 0x2557, 0x50e4, 0x1, 0x1);
        gbc.writeMem(0x20d5, { 0x29 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa3d7, gbc.sp());
        EXPECT(0x20d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01CC
        gbc.setState(0xc1c9, 0xa671, 0xed80, 0xfe3, 0xa55e, 0xc45d, 0x1, 0x0);
        gbc.writeMem(0xc1c9, { 0x29 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa671, gbc.sp());
        EXPECT(0xc1ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc1c9));
        // 29 01CD
        gbc.setState(0xa88b, 0x20b1, 0xf340, 0x93c7, 0x21b, 0x925b, 0x1, 0x0);
        gbc.writeMem(0xa88b, { 0x29 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x20b1, gbc.sp());
        EXPECT(0xa88c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa88b));
        // 29 01CE
        gbc.setState(0xeb3a, 0xab60, 0x250, 0x67eb, 0xac09, 0x983f, 0x0, 0x1);
        gbc.writeMem(0xeb3a, { 0x29 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xab60, gbc.sp());
        EXPECT(0xeb3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xeb3a));
        // 29 01CF
        gbc.setState(0xc698, 0xa581, 0xb870, 0x15b6, 0x99b8, 0x1fa1, 0x1, 0x1);
        gbc.writeMem(0xc698, { 0x29 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa581, gbc.sp());
        EXPECT(0xc699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc698));
        // 29 01D0
        gbc.setState(0x972, 0xebae, 0x11b0, 0x6aac, 0x3cf3, 0x4056, 0x1, 0x1);
        gbc.writeMem(0x972, { 0x29 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xebae, gbc.sp());
        EXPECT(0x973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01D1
        gbc.setState(0xbe0, 0x705b, 0x6220, 0x1703, 0x949c, 0xc2c5, 0x0, 0x1);
        gbc.writeMem(0xbe0, { 0x29 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x705b, gbc.sp());
        EXPECT(0xbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01D2
        gbc.setState(0xe52a, 0x20fe, 0x10, 0x4e13, 0x8e3b, 0x8983, 0x1, 0x1);
        gbc.writeMem(0xe52a, { 0x29 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x20fe, gbc.sp());
        EXPECT(0xe52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe52a));
        // 29 01D3
        gbc.setState(0xb2a5, 0x9c8a, 0xd660, 0x93e9, 0x995b, 0x951d, 0x0, 0x0);
        gbc.writeMem(0xb2a5, { 0x29 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9c8a, gbc.sp());
        EXPECT(0xb2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb2a5));
        // 29 01D4
        gbc.setState(0x1ac4, 0x6182, 0x9630, 0x7922, 0x41f8, 0xdbeb, 0x1, 0x0);
        gbc.writeMem(0x1ac4, { 0x29 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6182, gbc.sp());
        EXPECT(0x1ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01D5
        gbc.setState(0x2f5d, 0x6672, 0x1d00, 0xfc11, 0x1bbb, 0x93a3, 0x0, 0x0);
        gbc.writeMem(0x2f5d, { 0x29 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6672, gbc.sp());
        EXPECT(0x2f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01D6
        gbc.setState(0xde32, 0xe466, 0x8070, 0x3273, 0xd799, 0x6346, 0x1, 0x1);
        gbc.writeMem(0xde32, { 0x29 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe466, gbc.sp());
        EXPECT(0xde33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xde32));
        // 29 01D7
        gbc.setState(0x83c9, 0x4aa5, 0x4940, 0xf89e, 0x5a8e, 0x5f46, 0x1, 0x0);
        gbc.writeMem(0x83c9, { 0x29 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4aa5, gbc.sp());
        EXPECT(0x83ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x83c9));
        // 29 01D8
        gbc.setState(0x79ea, 0xb7cf, 0xfbc0, 0x379, 0x15b2, 0x2092, 0x1, 0x0);
        gbc.writeMem(0x79ea, { 0x29 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb7cf, gbc.sp());
        EXPECT(0x79eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01D9
        gbc.setState(0xc253, 0x56ff, 0xa480, 0xcbf0, 0x19ff, 0x8a23, 0x0, 0x0);
        gbc.writeMem(0xc253, { 0x29 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x56ff, gbc.sp());
        EXPECT(0xc254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc253));
        // 29 01DA
        gbc.setState(0xe7b0, 0x1d7a, 0xcf0, 0xf875, 0xe391, 0x3d59, 0x0, 0x0);
        gbc.writeMem(0xe7b0, { 0x29 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1d7a, gbc.sp());
        EXPECT(0xe7b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe7b0));
        // 29 01DB
        gbc.setState(0x2b07, 0x8e17, 0x6d30, 0xc893, 0xbe58, 0x323f, 0x0, 0x0);
        gbc.writeMem(0x2b07, { 0x29 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8e17, gbc.sp());
        EXPECT(0x2b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01DC
        gbc.setState(0x7b7f, 0xfd27, 0x3560, 0x54aa, 0x65ec, 0x95c8, 0x0, 0x0);
        gbc.writeMem(0x7b7f, { 0x29 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfd27, gbc.sp());
        EXPECT(0x7b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01DD
        gbc.setState(0x93ab, 0xf4, 0xdb10, 0xd877, 0xe8bd, 0xbb2f, 0x0, 0x1);
        gbc.writeMem(0x93ab, { 0x29 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf4, gbc.sp());
        EXPECT(0x93ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x93ab));
        // 29 01DE
        gbc.setState(0xe9db, 0x5c58, 0x1e90, 0x922f, 0xc729, 0xc23c, 0x0, 0x1);
        gbc.writeMem(0xe9db, { 0x29 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5c58, gbc.sp());
        EXPECT(0xe9dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe9db));
        // 29 01DF
        gbc.setState(0x46e, 0x1858, 0xc20, 0x5719, 0x7e4a, 0xbacc, 0x0, 0x0);
        gbc.writeMem(0x46e, { 0x29 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1858, gbc.sp());
        EXPECT(0x46f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01E0
        gbc.setState(0x63fb, 0x2362, 0x70, 0x71a3, 0x217d, 0x286a, 0x0, 0x0);
        gbc.writeMem(0x63fb, { 0x29 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2362, gbc.sp());
        EXPECT(0x63fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01E1
        gbc.setState(0x84c3, 0xc8, 0xc080, 0x8df0, 0xbe19, 0x55ba, 0x0, 0x1);
        gbc.writeMem(0x84c3, { 0x29 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc8, gbc.sp());
        EXPECT(0x84c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x84c3));
        // 29 01E2
        gbc.setState(0x24dd, 0x2383, 0x3a60, 0x2387, 0x24f3, 0xbf6c, 0x1, 0x0);
        gbc.writeMem(0x24dd, { 0x29 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2383, gbc.sp());
        EXPECT(0x24de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01E3
        gbc.setState(0x69a, 0xfac0, 0xb310, 0xd007, 0x431d, 0x7c34, 0x0, 0x1);
        gbc.writeMem(0x69a, { 0x29 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfac0, gbc.sp());
        EXPECT(0x69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01E5
        gbc.setState(0x45f, 0x42d7, 0x2ac0, 0x877f, 0x2931, 0x1994, 0x0, 0x1);
        gbc.writeMem(0x45f, { 0x29 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x42d7, gbc.sp());
        EXPECT(0x460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01E6
        gbc.setState(0x8978, 0x6edf, 0x62e0, 0xa961, 0x96e4, 0x9404, 0x0, 0x1);
        gbc.writeMem(0x8978, { 0x29 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6edf, gbc.sp());
        EXPECT(0x8979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8978));
        // 29 01E7
        gbc.setState(0x311b, 0x378e, 0x6510, 0x226b, 0xefe3, 0x972e, 0x0, 0x1);
        gbc.writeMem(0x311b, { 0x29 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x378e, gbc.sp());
        EXPECT(0x311c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01E8
        gbc.setState(0x9634, 0x430d, 0x9d90, 0x145a, 0x92b4, 0xe854, 0x1, 0x0);
        gbc.writeMem(0x9634, { 0x29 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x430d, gbc.sp());
        EXPECT(0x9635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9634));
        // 29 01E9
        gbc.setState(0x43d3, 0xe5b2, 0x14d0, 0xa3d6, 0xbe46, 0xd852, 0x1, 0x1);
        gbc.writeMem(0x43d3, { 0x29 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe5b2, gbc.sp());
        EXPECT(0x43d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01EA
        gbc.setState(0x4c32, 0x61f0, 0x8b70, 0x3e6, 0x483a, 0x3b72, 0x1, 0x1);
        gbc.writeMem(0x4c32, { 0x29 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x61f0, gbc.sp());
        EXPECT(0x4c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01EB
        gbc.setState(0x7ad4, 0x1841, 0xf7a0, 0x50a7, 0xae9d, 0xc96e, 0x0, 0x0);
        gbc.writeMem(0x7ad4, { 0x29 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1841, gbc.sp());
        EXPECT(0x7ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01EC
        gbc.setState(0x2752, 0x1eee, 0x6f0, 0xd329, 0x4ec6, 0x1382, 0x1, 0x1);
        gbc.writeMem(0x2752, { 0x29 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1eee, gbc.sp());
        EXPECT(0x2753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01ED
        gbc.setState(0x9286, 0xdad9, 0xc3c0, 0xa162, 0x9d8a, 0xbe92, 0x0, 0x0);
        gbc.writeMem(0x9286, { 0x29 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdad9, gbc.sp());
        EXPECT(0x9287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9286));
        // 29 01EE
        gbc.setState(0xd591, 0xa2a6, 0xf8b0, 0xe127, 0xe2d1, 0xab22, 0x1, 0x1);
        gbc.writeMem(0xd591, { 0x29 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa2a6, gbc.sp());
        EXPECT(0xd592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd591));
        // 29 01EF
        gbc.setState(0x4e2c, 0xb8e5, 0xe080, 0xdc38, 0x3d87, 0x2593, 0x0, 0x1);
        gbc.writeMem(0x4e2c, { 0x29 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb8e5, gbc.sp());
        EXPECT(0x4e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01F0
        gbc.setState(0x1f4b, 0x3e27, 0x4860, 0xfc7b, 0xc202, 0x577c, 0x1, 0x1);
        gbc.writeMem(0x1f4b, { 0x29 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3e27, gbc.sp());
        EXPECT(0x1f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01F1
        gbc.setState(0xb0c3, 0x5a2e, 0xd6f0, 0x2ce2, 0x859a, 0x2328, 0x1, 0x0);
        gbc.writeMem(0xb0c3, { 0x29 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5a2e, gbc.sp());
        EXPECT(0xb0c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb0c3));
        // 29 01F2
        gbc.setState(0xc8c7, 0x4d0e, 0xa180, 0x8d74, 0xb063, 0xa771, 0x1, 0x0);
        gbc.writeMem(0xc8c7, { 0x29 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4d0e, gbc.sp());
        EXPECT(0xc8c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc8c7));
        // 29 01F3
        gbc.setState(0xef29, 0xde5e, 0x8890, 0x15cd, 0x7ee1, 0xe806, 0x1, 0x1);
        gbc.writeMem(0xef29, { 0x29 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xde5e, gbc.sp());
        EXPECT(0xef2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xef29));
        // 29 01F4
        gbc.setState(0xd998, 0xf16f, 0x11b0, 0xec0a, 0x5809, 0x9164, 0x0, 0x0);
        gbc.writeMem(0xd998, { 0x29 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf16f, gbc.sp());
        EXPECT(0xd999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd998));
        // 29 01F5
        gbc.setState(0x3086, 0x36e1, 0x31d0, 0x8043, 0xba26, 0xb7e1, 0x0, 0x0);
        gbc.writeMem(0x3086, { 0x29 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x36e1, gbc.sp());
        EXPECT(0x3087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 01F6
        gbc.setState(0x67bd, 0xa142, 0xd8a0, 0xb98, 0x7c75, 0x263e, 0x1, 0x0);
        gbc.writeMem(0x67bd, { 0x29 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa142, gbc.sp());
        EXPECT(0x67be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01F7
        gbc.setState(0x6da7, 0xf4c4, 0x6aa0, 0xa36d, 0x5250, 0x3c39, 0x0, 0x0);
        gbc.writeMem(0x6da7, { 0x29 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf4c4, gbc.sp());
        EXPECT(0x6da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01F8
        gbc.setState(0x6be0, 0xcf29, 0xb1d0, 0x888e, 0x7bdf, 0x101f, 0x0, 0x1);
        gbc.writeMem(0x6be0, { 0x29 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcf29, gbc.sp());
        EXPECT(0x6be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 01F9
        gbc.setState(0xd460, 0x6fcb, 0x7a20, 0x6230, 0x300e, 0xcc6, 0x0, 0x1);
        gbc.writeMem(0xd460, { 0x29 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6fcb, gbc.sp());
        EXPECT(0xd461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd460));
        // 29 01FA
        gbc.setState(0xa970, 0x7cad, 0x410, 0xb114, 0x1e35, 0x57cd, 0x1, 0x1);
        gbc.writeMem(0xa970, { 0x29 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7cad, gbc.sp());
        EXPECT(0xa971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa970));
        // 29 01FB
        gbc.setState(0x8a71, 0x3305, 0x5d50, 0xa30e, 0x79c5, 0x7081, 0x1, 0x0);
        gbc.writeMem(0x8a71, { 0x29 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3305, gbc.sp());
        EXPECT(0x8a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8a71));
        // 29 01FC
        gbc.setState(0xd6d6, 0xf18b, 0x6a10, 0x3bda, 0x7d82, 0x21ec, 0x0, 0x1);
        gbc.writeMem(0xd6d6, { 0x29 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf18b, gbc.sp());
        EXPECT(0xd6d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd6d6));
        // 29 01FE
        gbc.setState(0x9093, 0xf67b, 0x6c10, 0x52cd, 0x8e94, 0x2075, 0x1, 0x1);
        gbc.writeMem(0x9093, { 0x29 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf67b, gbc.sp());
        EXPECT(0x9094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9093));
        // 29 0200
        gbc.setState(0xd62d, 0x49ca, 0xdff0, 0x919d, 0xa08f, 0x61b, 0x0, 0x0);
        gbc.writeMem(0xd62d, { 0x29 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x49ca, gbc.sp());
        EXPECT(0xd62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd62d));
        // 29 0201
        gbc.setState(0x17b8, 0x9fb3, 0xe10, 0xa1b6, 0xb7cb, 0xa23d, 0x1, 0x1);
        gbc.writeMem(0x17b8, { 0x29 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9fb3, gbc.sp());
        EXPECT(0x17b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0202
        gbc.setState(0xd177, 0xfc75, 0x3340, 0xb8a7, 0xb2c0, 0xee09, 0x0, 0x1);
        gbc.writeMem(0xd177, { 0x29 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfc75, gbc.sp());
        EXPECT(0xd178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd177));
        // 29 0203
        gbc.setState(0xed24, 0x36a0, 0x4ef0, 0x92e2, 0xe2eb, 0xe1e5, 0x0, 0x0);
        gbc.writeMem(0xed24, { 0x29 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x36a0, gbc.sp());
        EXPECT(0xed25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xed24));
        // 29 0204
        gbc.setState(0x6e40, 0xf314, 0xc3c0, 0xfbd7, 0x1c90, 0x3336, 0x0, 0x0);
        gbc.writeMem(0x6e40, { 0x29 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf314, gbc.sp());
        EXPECT(0x6e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0205
        gbc.setState(0xa22e, 0x62e7, 0xa690, 0x657f, 0xf732, 0x99df, 0x1, 0x1);
        gbc.writeMem(0xa22e, { 0x29 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x62e7, gbc.sp());
        EXPECT(0xa22f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa22e));
        // 29 0206
        gbc.setState(0xd311, 0x545f, 0x9ce0, 0x61b5, 0xf625, 0xdb9a, 0x0, 0x1);
        gbc.writeMem(0xd311, { 0x29 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x545f, gbc.sp());
        EXPECT(0xd312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd311));
        // 29 0207
        gbc.setState(0x1696, 0xd36d, 0x6e20, 0x191e, 0x1b99, 0xae47, 0x0, 0x1);
        gbc.writeMem(0x1696, { 0x29 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd36d, gbc.sp());
        EXPECT(0x1697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0208
        gbc.setState(0x30b2, 0xf2a0, 0x1ea0, 0xd2c1, 0x8184, 0x71a2, 0x0, 0x1);
        gbc.writeMem(0x30b2, { 0x29 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf2a0, gbc.sp());
        EXPECT(0x30b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 020A
        gbc.setState(0x673, 0xda2b, 0xff80, 0x31f2, 0x86, 0x5fd1, 0x1, 0x0);
        gbc.writeMem(0x673, { 0x29 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xda2b, gbc.sp());
        EXPECT(0x674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 020B
        gbc.setState(0x28cd, 0x37d, 0xdd50, 0x4433, 0x96f3, 0xa3a, 0x0, 0x1);
        gbc.writeMem(0x28cd, { 0x29 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x37d, gbc.sp());
        EXPECT(0x28ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 020C
        gbc.setState(0x8aa2, 0x52fe, 0x3e80, 0x7780, 0xb487, 0x4b76, 0x1, 0x1);
        gbc.writeMem(0x8aa2, { 0x29 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x52fe, gbc.sp());
        EXPECT(0x8aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8aa2));
        // 29 020D
        gbc.setState(0xbe60, 0xcddc, 0x5ed0, 0xf8b9, 0xaba1, 0x35a9, 0x0, 0x1);
        gbc.writeMem(0xbe60, { 0x29 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xcddc, gbc.sp());
        EXPECT(0xbe61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbe60));
        // 29 020E
        gbc.setState(0x8248, 0xaf24, 0xa570, 0x895f, 0x2353, 0xc678, 0x1, 0x1);
        gbc.writeMem(0x8248, { 0x29 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xaf24, gbc.sp());
        EXPECT(0x8249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8248));
        // 29 020F
        gbc.setState(0x750e, 0x8946, 0x8310, 0xcbe3, 0xf11e, 0x4f0b, 0x0, 0x0);
        gbc.writeMem(0x750e, { 0x29 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8946, gbc.sp());
        EXPECT(0x750f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0210
        gbc.setState(0xc697, 0x1267, 0xb390, 0xe4a6, 0xfafe, 0x631d, 0x1, 0x0);
        gbc.writeMem(0xc697, { 0x29 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1267, gbc.sp());
        EXPECT(0xc698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc697));
        // 29 0211
        gbc.setState(0x933b, 0xed7f, 0x1490, 0xd4c8, 0x4a34, 0x578b, 0x0, 0x1);
        gbc.writeMem(0x933b, { 0x29 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xed7f, gbc.sp());
        EXPECT(0x933c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x933b));
        // 29 0212
        gbc.setState(0xc5ca, 0x3ba5, 0xa370, 0xf0fa, 0x13f7, 0x7e59, 0x0, 0x0);
        gbc.writeMem(0xc5ca, { 0x29 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3ba5, gbc.sp());
        EXPECT(0xc5cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc5ca));
        // 29 0213
        gbc.setState(0xd706, 0xad51, 0x5e60, 0xa942, 0x1bd3, 0xcd5e, 0x1, 0x1);
        gbc.writeMem(0xd706, { 0x29 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xad51, gbc.sp());
        EXPECT(0xd707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd706));
        // 29 0214
        gbc.setState(0x74cb, 0x813b, 0xa670, 0x164c, 0x1f9d, 0x1ed5, 0x0, 0x1);
        gbc.writeMem(0x74cb, { 0x29 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x813b, gbc.sp());
        EXPECT(0x74cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0215
        gbc.setState(0xd9a8, 0x3319, 0x90d0, 0x194b, 0xae15, 0xfd31, 0x1, 0x1);
        gbc.writeMem(0xd9a8, { 0x29 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3319, gbc.sp());
        EXPECT(0xd9a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd9a8));
        // 29 0216
        gbc.setState(0x7aea, 0x5cc6, 0xd7d0, 0x9e26, 0xa9c, 0x4b8e, 0x0, 0x0);
        gbc.writeMem(0x7aea, { 0x29 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5cc6, gbc.sp());
        EXPECT(0x7aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0217
        gbc.setState(0x70a3, 0xcb14, 0x490, 0xdde4, 0x8ad3, 0x11bd, 0x0, 0x0);
        gbc.writeMem(0x70a3, { 0x29 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcb14, gbc.sp());
        EXPECT(0x70a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0218
        gbc.setState(0x78f6, 0xf847, 0x8da0, 0xe7a3, 0xd319, 0x65fc, 0x1, 0x1);
        gbc.writeMem(0x78f6, { 0x29 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf847, gbc.sp());
        EXPECT(0x78f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0219
        gbc.setState(0x2c01, 0x5d5c, 0xa120, 0x8c68, 0xe5af, 0xca96, 0x0, 0x1);
        gbc.writeMem(0x2c01, { 0x29 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5d5c, gbc.sp());
        EXPECT(0x2c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 021A
        gbc.setState(0xb99d, 0x6317, 0x5390, 0x1d64, 0xf63d, 0x76e4, 0x0, 0x1);
        gbc.writeMem(0xb99d, { 0x29 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6317, gbc.sp());
        EXPECT(0xb99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb99d));
        // 29 021B
        gbc.setState(0x3743, 0xfa81, 0x7d40, 0xe2ba, 0x6240, 0x4e7f, 0x1, 0x1);
        gbc.writeMem(0x3743, { 0x29 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfa81, gbc.sp());
        EXPECT(0x3744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 021C
        gbc.setState(0xd7c7, 0xa2c0, 0xcf70, 0x8e45, 0xdfd4, 0xcc22, 0x0, 0x0);
        gbc.writeMem(0xd7c7, { 0x29 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa2c0, gbc.sp());
        EXPECT(0xd7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd7c7));
        // 29 021D
        gbc.setState(0xb212, 0xe7cd, 0x200, 0xe1de, 0xda37, 0x1705, 0x1, 0x0);
        gbc.writeMem(0xb212, { 0x29 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe7cd, gbc.sp());
        EXPECT(0xb213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb212));
        // 29 021E
        gbc.setState(0x6455, 0xee6f, 0xc040, 0xd5cc, 0x18a3, 0x4c7b, 0x1, 0x1);
        gbc.writeMem(0x6455, { 0x29 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xee6f, gbc.sp());
        EXPECT(0x6456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 021F
        gbc.setState(0x1313, 0xdb72, 0x5200, 0x665, 0xf684, 0x77b6, 0x1, 0x0);
        gbc.writeMem(0x1313, { 0x29 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdb72, gbc.sp());
        EXPECT(0x1314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0220
        gbc.setState(0xb9ff, 0x29cd, 0x2930, 0xbef5, 0xb2f0, 0x60ea, 0x0, 0x0);
        gbc.writeMem(0xb9ff, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x29cd, gbc.sp());
        EXPECT(0xba00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb9ff));
        // 29 0222
        gbc.setState(0xe1b3, 0x1281, 0x8650, 0x57dc, 0xf278, 0x86d2, 0x0, 0x0);
        gbc.writeMem(0xe1b3, { 0x29 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1281, gbc.sp());
        EXPECT(0xe1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe1b3));
        // 29 0223
        gbc.setState(0xd326, 0xbe9d, 0x9900, 0x2137, 0x9966, 0x49a2, 0x0, 0x0);
        gbc.writeMem(0xd326, { 0x29 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbe9d, gbc.sp());
        EXPECT(0xd327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd326));
        // 29 0224
        gbc.setState(0xb1a1, 0xffb7, 0x3850, 0x16a0, 0x19a5, 0xe541, 0x0, 0x1);
        gbc.writeMem(0xb1a1, { 0x29 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xffb7, gbc.sp());
        EXPECT(0xb1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb1a1));
        // 29 0225
        gbc.setState(0xa949, 0x298b, 0x1290, 0x1fdf, 0x6150, 0x1581, 0x0, 0x1);
        gbc.writeMem(0xa949, { 0x29 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x298b, gbc.sp());
        EXPECT(0xa94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa949));
        // 29 0226
        gbc.setState(0x648f, 0xe44e, 0xfe80, 0x1073, 0x6f14, 0x3da4, 0x0, 0x1);
        gbc.writeMem(0x648f, { 0x29 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe44e, gbc.sp());
        EXPECT(0x6490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0227
        gbc.setState(0xd510, 0x1928, 0xad0, 0x74ca, 0xbe12, 0x8d21, 0x0, 0x0);
        gbc.writeMem(0xd510, { 0x29 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1928, gbc.sp());
        EXPECT(0xd511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd510));
        // 29 0228
        gbc.setState(0xac63, 0xc5ac, 0x46c0, 0x79d8, 0xff2c, 0x47f1, 0x0, 0x0);
        gbc.writeMem(0xac63, { 0x29 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc5ac, gbc.sp());
        EXPECT(0xac64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xac63));
        // 29 0229
        gbc.setState(0x5434, 0x8f83, 0x2710, 0x4507, 0x7090, 0xfb92, 0x0, 0x1);
        gbc.writeMem(0x5434, { 0x29 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8f83, gbc.sp());
        EXPECT(0x5435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 022A
        gbc.setState(0x9c2e, 0x818c, 0xbc90, 0x6bf1, 0xb223, 0xab8d, 0x1, 0x0);
        gbc.writeMem(0x9c2e, { 0x29 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x818c, gbc.sp());
        EXPECT(0x9c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9c2e));
        // 29 022B
        gbc.setState(0x1baa, 0xf190, 0x1720, 0x1701, 0x142, 0xa514, 0x0, 0x1);
        gbc.writeMem(0x1baa, { 0x29 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf190, gbc.sp());
        EXPECT(0x1bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 022C
        gbc.setState(0x4edb, 0xdee6, 0xcda0, 0xdac, 0xfc79, 0x5196, 0x1, 0x0);
        gbc.writeMem(0x4edb, { 0x29 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdee6, gbc.sp());
        EXPECT(0x4edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 022D
        gbc.setState(0xa9fa, 0x14fe, 0x6980, 0xec2a, 0xc769, 0xa4b6, 0x0, 0x0);
        gbc.writeMem(0xa9fa, { 0x29 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x14fe, gbc.sp());
        EXPECT(0xa9fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa9fa));
        // 29 022E
        gbc.setState(0x46be, 0x21ef, 0x5340, 0xb38a, 0x4f69, 0x30e5, 0x1, 0x0);
        gbc.writeMem(0x46be, { 0x29 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x21ef, gbc.sp());
        EXPECT(0x46bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 022F
        gbc.setState(0xd0f, 0xd5b8, 0x76c0, 0x8fdd, 0xc7f6, 0xc157, 0x1, 0x0);
        gbc.writeMem(0xd0f, { 0x29 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd5b8, gbc.sp());
        EXPECT(0xd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0230
        gbc.setState(0xdab1, 0x7361, 0x5870, 0x2a9b, 0x21c1, 0xeb24, 0x0, 0x1);
        gbc.writeMem(0xdab1, { 0x29 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7361, gbc.sp());
        EXPECT(0xdab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdab1));
        // 29 0231
        gbc.setState(0xc905, 0xecc5, 0xe020, 0x6ce5, 0x7a98, 0x34b1, 0x0, 0x0);
        gbc.writeMem(0xc905, { 0x29 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xecc5, gbc.sp());
        EXPECT(0xc906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc905));
        // 29 0232
        gbc.setState(0x583e, 0x1024, 0x2610, 0x279a, 0xefba, 0x49a, 0x0, 0x0);
        gbc.writeMem(0x583e, { 0x29 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1024, gbc.sp());
        EXPECT(0x583f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0233
        gbc.setState(0xd868, 0xdbd1, 0xb330, 0x3d9d, 0xceff, 0xfcc7, 0x0, 0x1);
        gbc.writeMem(0xd868, { 0x29 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdbd1, gbc.sp());
        EXPECT(0xd869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd868));
        // 29 0234
        gbc.setState(0xc70a, 0xba4b, 0x7070, 0x53b2, 0x36a6, 0x2c01, 0x0, 0x0);
        gbc.writeMem(0xc70a, { 0x29 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xba4b, gbc.sp());
        EXPECT(0xc70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc70a));
        // 29 0235
        gbc.setState(0x9609, 0xc594, 0x95b0, 0xd0fe, 0x98a4, 0x2cf3, 0x0, 0x1);
        gbc.writeMem(0x9609, { 0x29 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc594, gbc.sp());
        EXPECT(0x960a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9609));
        // 29 0236
        gbc.setState(0x144c, 0x5f6b, 0x1bf0, 0x853c, 0x5136, 0xaaae, 0x1, 0x1);
        gbc.writeMem(0x144c, { 0x29 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5f6b, gbc.sp());
        EXPECT(0x144d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0237
        gbc.setState(0x566d, 0xc616, 0xeed0, 0xd97d, 0x1f3d, 0x526b, 0x0, 0x1);
        gbc.writeMem(0x566d, { 0x29 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc616, gbc.sp());
        EXPECT(0x566e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0238
        gbc.setState(0x56cc, 0xdf93, 0xfe90, 0x925c, 0xfcbe, 0xad99, 0x0, 0x0);
        gbc.writeMem(0x56cc, { 0x29 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdf93, gbc.sp());
        EXPECT(0x56cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0239
        gbc.setState(0xe1bf, 0xa270, 0xf120, 0xfddf, 0x66d7, 0x9299, 0x0, 0x1);
        gbc.writeMem(0xe1bf, { 0x29 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa270, gbc.sp());
        EXPECT(0xe1c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe1bf));
        // 29 023A
        gbc.setState(0xe955, 0x85b7, 0x1000, 0xdb10, 0x8484, 0xb4f0, 0x0, 0x0);
        gbc.writeMem(0xe955, { 0x29 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x85b7, gbc.sp());
        EXPECT(0xe956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe955));
        // 29 023B
        gbc.setState(0xd7f, 0x1279, 0xe2a0, 0xdb79, 0xd4d6, 0x880b, 0x1, 0x0);
        gbc.writeMem(0xd7f, { 0x29 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1279, gbc.sp());
        EXPECT(0xd80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 023C
        gbc.setState(0x1891, 0x1dbd, 0x8ce0, 0x899f, 0x3e01, 0x63c0, 0x1, 0x0);
        gbc.writeMem(0x1891, { 0x29 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1dbd, gbc.sp());
        EXPECT(0x1892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 023D
        gbc.setState(0x24b, 0x9b1f, 0x36b0, 0xe09a, 0x4d91, 0x801c, 0x0, 0x0);
        gbc.writeMem(0x24b, { 0x29 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9b1f, gbc.sp());
        EXPECT(0x24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 023E
        gbc.setState(0x6e, 0x66be, 0xd9f0, 0x238a, 0x11df, 0x3e0d, 0x0, 0x0);
        gbc.writeMem(0x6e, { 0x29 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x66be, gbc.sp());
        EXPECT(0x6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 023F
        gbc.setState(0x9763, 0xa5b7, 0x9e0, 0xe829, 0x8c6e, 0x25ee, 0x1, 0x1);
        gbc.writeMem(0x9763, { 0x29 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa5b7, gbc.sp());
        EXPECT(0x9764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9763));
        // 29 0240
        gbc.setState(0x958, 0xb078, 0xc600, 0xd399, 0x8ca1, 0xc21b, 0x1, 0x0);
        gbc.writeMem(0x958, { 0x29 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb078, gbc.sp());
        EXPECT(0x959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0241
        gbc.setState(0x527, 0xa136, 0x3b90, 0x12e2, 0xfeaa, 0x1695, 0x1, 0x1);
        gbc.writeMem(0x527, { 0x29 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa136, gbc.sp());
        EXPECT(0x528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0242
        gbc.setState(0x2c1a, 0x8275, 0x7330, 0x104e, 0xf8ac, 0xf352, 0x1, 0x1);
        gbc.writeMem(0x2c1a, { 0x29 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8275, gbc.sp());
        EXPECT(0x2c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0243
        gbc.setState(0x4152, 0xe26a, 0xdf00, 0x895d, 0x78b, 0xaa04, 0x0, 0x1);
        gbc.writeMem(0x4152, { 0x29 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe26a, gbc.sp());
        EXPECT(0x4153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0244
        gbc.setState(0xec96, 0x5080, 0x5990, 0xce19, 0x6a5e, 0x1733, 0x1, 0x1);
        gbc.writeMem(0xec96, { 0x29 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5080, gbc.sp());
        EXPECT(0xec97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xec96));
        // 29 0245
        gbc.setState(0x1850, 0xda3c, 0xe350, 0xdc32, 0xc4e1, 0x4eb8, 0x0, 0x1);
        gbc.writeMem(0x1850, { 0x29 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xda3c, gbc.sp());
        EXPECT(0x1851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0246
        gbc.setState(0xb7c3, 0x3ac9, 0x36e0, 0xc67f, 0xb001, 0x79da, 0x1, 0x0);
        gbc.writeMem(0xb7c3, { 0x29 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3ac9, gbc.sp());
        EXPECT(0xb7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb7c3));
        // 29 0247
        gbc.setState(0x6b56, 0x1c4a, 0x3410, 0xa9e5, 0x8901, 0x6fac, 0x0, 0x0);
        gbc.writeMem(0x6b56, { 0x29 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1c4a, gbc.sp());
        EXPECT(0x6b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0248
        gbc.setState(0x3fcb, 0xbda1, 0x13d0, 0x3f38, 0xb538, 0x9861, 0x0, 0x0);
        gbc.writeMem(0x3fcb, { 0x29 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbda1, gbc.sp());
        EXPECT(0x3fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0249
        gbc.setState(0x51ea, 0x65f8, 0xe3f0, 0x497a, 0x3866, 0xf211, 0x0, 0x0);
        gbc.writeMem(0x51ea, { 0x29 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x65f8, gbc.sp());
        EXPECT(0x51eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 024A
        gbc.setState(0x76ae, 0xa6cc, 0xdde0, 0xd2c6, 0x8bc1, 0xa756, 0x1, 0x0);
        gbc.writeMem(0x76ae, { 0x29 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa6cc, gbc.sp());
        EXPECT(0x76af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 024B
        gbc.setState(0x56cc, 0x53cb, 0xc6d0, 0x30de, 0x8ee9, 0x1e33, 0x0, 0x1);
        gbc.writeMem(0x56cc, { 0x29 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x53cb, gbc.sp());
        EXPECT(0x56cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 024C
        gbc.setState(0xd402, 0xa16e, 0xab60, 0x4fb4, 0x4414, 0x4b1a, 0x1, 0x1);
        gbc.writeMem(0xd402, { 0x29 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa16e, gbc.sp());
        EXPECT(0xd403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd402));
        // 29 024E
        gbc.setState(0x5d44, 0x540c, 0x190, 0xf619, 0x7b1a, 0x3f2f, 0x1, 0x0);
        gbc.writeMem(0x5d44, { 0x29 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x540c, gbc.sp());
        EXPECT(0x5d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 024F
        gbc.setState(0xa847, 0xa13f, 0x9650, 0xa1f0, 0xf09d, 0xcf8c, 0x0, 0x0);
        gbc.writeMem(0xa847, { 0x29 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa13f, gbc.sp());
        EXPECT(0xa848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa847));
        // 29 0250
        gbc.setState(0x4fb9, 0x1f8e, 0x5380, 0x673c, 0xfaf7, 0x2ef3, 0x1, 0x0);
        gbc.writeMem(0x4fb9, { 0x29 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1f8e, gbc.sp());
        EXPECT(0x4fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0251
        gbc.setState(0x50ab, 0x3cf2, 0xa70, 0xd872, 0xfe74, 0xe499, 0x0, 0x1);
        gbc.writeMem(0x50ab, { 0x29 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3cf2, gbc.sp());
        EXPECT(0x50ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0252
        gbc.setState(0x30ee, 0xa5bc, 0x4d0, 0x7e8e, 0x8c92, 0xea04, 0x0, 0x0);
        gbc.writeMem(0x30ee, { 0x29 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa5bc, gbc.sp());
        EXPECT(0x30ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0254
        gbc.setState(0xaa4e, 0x8cfd, 0x2f20, 0x2d08, 0xa393, 0xc810, 0x1, 0x1);
        gbc.writeMem(0xaa4e, { 0x29 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8cfd, gbc.sp());
        EXPECT(0xaa4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xaa4e));
        // 29 0255
        gbc.setState(0x7c0d, 0x8fac, 0x3f40, 0x16d3, 0xd0ae, 0xcf56, 0x1, 0x1);
        gbc.writeMem(0x7c0d, { 0x29 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8fac, gbc.sp());
        EXPECT(0x7c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0256
        gbc.setState(0x93b7, 0x41e5, 0xcab0, 0x97c4, 0xb78b, 0x318b, 0x1, 0x1);
        gbc.writeMem(0x93b7, { 0x29 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x41e5, gbc.sp());
        EXPECT(0x93b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x93b7));
        // 29 0257
        gbc.setState(0xbe02, 0xdccc, 0x6d40, 0xaa7d, 0x3306, 0xc736, 0x0, 0x1);
        gbc.writeMem(0xbe02, { 0x29 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdccc, gbc.sp());
        EXPECT(0xbe03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbe02));
        // 29 0258
        gbc.setState(0x7609, 0x9766, 0xd7c0, 0x9bc3, 0x106b, 0xdbff, 0x1, 0x1);
        gbc.writeMem(0x7609, { 0x29 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9766, gbc.sp());
        EXPECT(0x760a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 025A
        gbc.setState(0xb88d, 0xc03c, 0xc380, 0xfed, 0xd828, 0xf97a, 0x0, 0x0);
        gbc.writeMem(0xb88d, { 0x29 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc03c, gbc.sp());
        EXPECT(0xb88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb88d));
        // 29 025B
        gbc.setState(0x4a72, 0x31ae, 0x6300, 0xc70c, 0xbb1d, 0x640, 0x0, 0x0);
        gbc.writeMem(0x4a72, { 0x29 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x31ae, gbc.sp());
        EXPECT(0x4a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 025C
        gbc.setState(0xc980, 0xa6d9, 0x2160, 0x6ae6, 0xaea3, 0xff21, 0x1, 0x1);
        gbc.writeMem(0xc980, { 0x29 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa6d9, gbc.sp());
        EXPECT(0xc981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc980));
        // 29 025E
        gbc.setState(0x9bb1, 0x6375, 0xb30, 0x586f, 0x4f41, 0xef5d, 0x1, 0x1);
        gbc.writeMem(0x9bb1, { 0x29 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6375, gbc.sp());
        EXPECT(0x9bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9bb1));
        // 29 025F
        gbc.setState(0x9e93, 0x160, 0xe5d0, 0xdd0c, 0xa9a0, 0xf6da, 0x0, 0x0);
        gbc.writeMem(0x9e93, { 0x29 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x160, gbc.sp());
        EXPECT(0x9e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9e93));
        // 29 0260
        gbc.setState(0xefa2, 0xf709, 0xbaa0, 0xe656, 0xba65, 0xe46e, 0x1, 0x1);
        gbc.writeMem(0xefa2, { 0x29 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf709, gbc.sp());
        EXPECT(0xefa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xefa2));
        // 29 0262
        gbc.setState(0x4879, 0xa210, 0xd410, 0xb1a3, 0x2a1c, 0xa9f, 0x1, 0x1);
        gbc.writeMem(0x4879, { 0x29 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa210, gbc.sp());
        EXPECT(0x487a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0263
        gbc.setState(0x8b81, 0x129c, 0xff50, 0x37fa, 0x9cb5, 0xfe2e, 0x1, 0x1);
        gbc.writeMem(0x8b81, { 0x29 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x129c, gbc.sp());
        EXPECT(0x8b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8b81));
        // 29 0264
        gbc.setState(0x33eb, 0x9b9f, 0x7db0, 0xdd0d, 0xffc5, 0xf2b7, 0x0, 0x1);
        gbc.writeMem(0x33eb, { 0x29 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9b9f, gbc.sp());
        EXPECT(0x33ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0265
        gbc.setState(0x6054, 0x4cdf, 0xad10, 0xd7d2, 0xacaf, 0xef42, 0x0, 0x1);
        gbc.writeMem(0x6054, { 0x29 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4cdf, gbc.sp());
        EXPECT(0x6055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0266
        gbc.setState(0x73aa, 0xdd61, 0x5b10, 0xac1b, 0xdf07, 0xc45b, 0x0, 0x0);
        gbc.writeMem(0x73aa, { 0x29 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdd61, gbc.sp());
        EXPECT(0x73ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0268
        gbc.setState(0x2cb9, 0xc2ab, 0x35b0, 0x1444, 0xccf7, 0xf6f8, 0x1, 0x0);
        gbc.writeMem(0x2cb9, { 0x29 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc2ab, gbc.sp());
        EXPECT(0x2cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0269
        gbc.setState(0xc05f, 0x1485, 0xd930, 0x2dd, 0x3796, 0x870f, 0x0, 0x0);
        gbc.writeMem(0xc05f, { 0x29 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1485, gbc.sp());
        EXPECT(0xc060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc05f));
        // 29 026A
        gbc.setState(0x39c2, 0xe5b3, 0x1b00, 0xaa8d, 0xa9b5, 0x7d3, 0x1, 0x1);
        gbc.writeMem(0x39c2, { 0x29 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe5b3, gbc.sp());
        EXPECT(0x39c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 026B
        gbc.setState(0x3f11, 0xcfda, 0xf100, 0x456c, 0x65be, 0xf8bd, 0x0, 0x0);
        gbc.writeMem(0x3f11, { 0x29 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcfda, gbc.sp());
        EXPECT(0x3f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 026C
        gbc.setState(0x80b8, 0x5ca8, 0x92d0, 0xc2cb, 0xe353, 0xc56c, 0x0, 0x1);
        gbc.writeMem(0x80b8, { 0x29 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5ca8, gbc.sp());
        EXPECT(0x80b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x80b8));
        // 29 026D
        gbc.setState(0x78f6, 0x81b3, 0x540, 0xbc80, 0xcf12, 0xf130, 0x1, 0x0);
        gbc.writeMem(0x78f6, { 0x29 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x81b3, gbc.sp());
        EXPECT(0x78f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 026E
        gbc.setState(0x3ed8, 0x62ea, 0xab30, 0x2ac4, 0x60e5, 0x6e2c, 0x0, 0x0);
        gbc.writeMem(0x3ed8, { 0x29 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x62ea, gbc.sp());
        EXPECT(0x3ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 026F
        gbc.setState(0xc0b1, 0x5d7f, 0x4af0, 0xbf19, 0x98a2, 0xebf4, 0x1, 0x0);
        gbc.writeMem(0xc0b1, { 0x29 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5d7f, gbc.sp());
        EXPECT(0xc0b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc0b1));
        // 29 0270
        gbc.setState(0xd69e, 0xa293, 0xd5d0, 0xa86b, 0x57e8, 0x8e55, 0x0, 0x1);
        gbc.writeMem(0xd69e, { 0x29 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa293, gbc.sp());
        EXPECT(0xd69f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd69e));
        // 29 0271
        gbc.setState(0xb3b5, 0xbdd9, 0x6ed0, 0x1d2d, 0x1de8, 0x863a, 0x1, 0x0);
        gbc.writeMem(0xb3b5, { 0x29 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbdd9, gbc.sp());
        EXPECT(0xb3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb3b5));
        // 29 0272
        gbc.setState(0xbef2, 0x7bbc, 0x9410, 0x532, 0x8079, 0x7ac7, 0x1, 0x1);
        gbc.writeMem(0xbef2, { 0x29 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7bbc, gbc.sp());
        EXPECT(0xbef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbef2));
        // 29 0273
        gbc.setState(0x8ce6, 0x9105, 0xe6a0, 0x9969, 0x3949, 0x1def, 0x1, 0x0);
        gbc.writeMem(0x8ce6, { 0x29 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9105, gbc.sp());
        EXPECT(0x8ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8ce6));
        // 29 0274
        gbc.setState(0x7c1c, 0x56c9, 0x49d0, 0xcfe3, 0x639f, 0x5134, 0x1, 0x0);
        gbc.writeMem(0x7c1c, { 0x29 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x56c9, gbc.sp());
        EXPECT(0x7c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0275
        gbc.setState(0xea1a, 0xbc2c, 0xcb50, 0xbc24, 0x7d9a, 0xbd4b, 0x0, 0x0);
        gbc.writeMem(0xea1a, { 0x29 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbc2c, gbc.sp());
        EXPECT(0xea1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xea1a));
        // 29 0276
        gbc.setState(0x4e22, 0xc6f7, 0xb0c0, 0x2b6d, 0x389b, 0xff44, 0x0, 0x1);
        gbc.writeMem(0x4e22, { 0x29 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc6f7, gbc.sp());
        EXPECT(0x4e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0277
        gbc.setState(0x3a3d, 0x8db7, 0x48c0, 0x7cac, 0x8c05, 0x35c1, 0x0, 0x0);
        gbc.writeMem(0x3a3d, { 0x29 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8db7, gbc.sp());
        EXPECT(0x3a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0278
        gbc.setState(0xde7d, 0x2866, 0x3db0, 0x4, 0x95bf, 0x4332, 0x1, 0x0);
        gbc.writeMem(0xde7d, { 0x29 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2866, gbc.sp());
        EXPECT(0xde7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xde7d));
        // 29 0279
        gbc.setState(0x263, 0xf0f7, 0x540, 0x4a99, 0x72b5, 0x72e2, 0x1, 0x1);
        gbc.writeMem(0x263, { 0x29 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf0f7, gbc.sp());
        EXPECT(0x264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 027A
        gbc.setState(0xb076, 0x98cb, 0xe340, 0xbe77, 0x36d6, 0x4663, 0x0, 0x1);
        gbc.writeMem(0xb076, { 0x29 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x98cb, gbc.sp());
        EXPECT(0xb077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb076));
        // 29 027B
        gbc.setState(0xad27, 0xc7d7, 0x75c0, 0x50f1, 0x9581, 0xb3b5, 0x1, 0x0);
        gbc.writeMem(0xad27, { 0x29 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc7d7, gbc.sp());
        EXPECT(0xad28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xad27));
        // 29 027C
        gbc.setState(0x5474, 0xb7e3, 0x1160, 0xbff9, 0xa90c, 0x8e7a, 0x0, 0x0);
        gbc.writeMem(0x5474, { 0x29 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb7e3, gbc.sp());
        EXPECT(0x5475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 027D
        gbc.setState(0x95d6, 0x19b, 0xf590, 0x691d, 0x240c, 0xfc30, 0x0, 0x1);
        gbc.writeMem(0x95d6, { 0x29 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x19b, gbc.sp());
        EXPECT(0x95d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x95d6));
        // 29 027E
        gbc.setState(0x7cb4, 0xbab4, 0x5f20, 0xdf72, 0xa8a2, 0x5bf4, 0x0, 0x1);
        gbc.writeMem(0x7cb4, { 0x29 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbab4, gbc.sp());
        EXPECT(0x7cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 027F
        gbc.setState(0x8266, 0x7f36, 0xd0d0, 0x7f77, 0x8614, 0x5904, 0x1, 0x0);
        gbc.writeMem(0x8266, { 0x29 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7f36, gbc.sp());
        EXPECT(0x8267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8266));
        // 29 0280
        gbc.setState(0x9f1c, 0xb435, 0xa1f0, 0xc4b2, 0xe61d, 0xa70f, 0x1, 0x0);
        gbc.writeMem(0x9f1c, { 0x29 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb435, gbc.sp());
        EXPECT(0x9f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9f1c));
        // 29 0281
        gbc.setState(0xdf0c, 0xf27f, 0xf3e0, 0x4929, 0x4c5f, 0x30ce, 0x1, 0x1);
        gbc.writeMem(0xdf0c, { 0x29 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf27f, gbc.sp());
        EXPECT(0xdf0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdf0c));
        // 29 0282
        gbc.setState(0xd512, 0xf44e, 0x1cb0, 0x4d83, 0x182b, 0x3002, 0x0, 0x0);
        gbc.writeMem(0xd512, { 0x29 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf44e, gbc.sp());
        EXPECT(0xd513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd512));
        // 29 0283
        gbc.setState(0x9f74, 0x5906, 0x97b0, 0xd6d0, 0x641a, 0x7d79, 0x1, 0x0);
        gbc.writeMem(0x9f74, { 0x29 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5906, gbc.sp());
        EXPECT(0x9f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9f74));
        // 29 0284
        gbc.setState(0x1c1a, 0x389c, 0x7840, 0x70ef, 0x1433, 0xe46b, 0x0, 0x1);
        gbc.writeMem(0x1c1a, { 0x29 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x389c, gbc.sp());
        EXPECT(0x1c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0285
        gbc.setState(0xd46d, 0x24d9, 0xe4d0, 0xdd7e, 0x2dcb, 0x871b, 0x0, 0x1);
        gbc.writeMem(0xd46d, { 0x29 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x24d9, gbc.sp());
        EXPECT(0xd46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd46d));
        // 29 0286
        gbc.setState(0xc792, 0xc15, 0xde50, 0xdfb5, 0x5f32, 0x4d4a, 0x1, 0x0);
        gbc.writeMem(0xc792, { 0x29 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc15, gbc.sp());
        EXPECT(0xc793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc792));
        // 29 0287
        gbc.setState(0x46c8, 0x265e, 0x2da0, 0xe630, 0x440c, 0x150f, 0x1, 0x1);
        gbc.writeMem(0x46c8, { 0x29 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x265e, gbc.sp());
        EXPECT(0x46c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0289
        gbc.setState(0x8d8a, 0xedba, 0xa070, 0x12b2, 0xde56, 0x6619, 0x1, 0x0);
        gbc.writeMem(0x8d8a, { 0x29 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xedba, gbc.sp());
        EXPECT(0x8d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8d8a));
        // 29 028A
        gbc.setState(0xb8f4, 0xb048, 0xbdf0, 0xa6b4, 0x4f9a, 0x786d, 0x1, 0x1);
        gbc.writeMem(0xb8f4, { 0x29 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb048, gbc.sp());
        EXPECT(0xb8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb8f4));
        // 29 028B
        gbc.setState(0x887d, 0x7bec, 0xfc0, 0x6e6f, 0x46dd, 0xdec, 0x1, 0x1);
        gbc.writeMem(0x887d, { 0x29 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7bec, gbc.sp());
        EXPECT(0x887e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x887d));
        // 29 028C
        gbc.setState(0xc1c4, 0x8c8c, 0x3670, 0x496c, 0x3950, 0xfe73, 0x0, 0x0);
        gbc.writeMem(0xc1c4, { 0x29 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8c8c, gbc.sp());
        EXPECT(0xc1c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc1c4));
        // 29 028D
        gbc.setState(0xe8e9, 0xdd24, 0x1640, 0x29f8, 0x906c, 0x6224, 0x0, 0x0);
        gbc.writeMem(0xe8e9, { 0x29 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdd24, gbc.sp());
        EXPECT(0xe8ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe8e9));
        // 29 028E
        gbc.setState(0xd6e8, 0xbc49, 0xb0c0, 0x5fd3, 0xa946, 0x8341, 0x1, 0x0);
        gbc.writeMem(0xd6e8, { 0x29 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbc49, gbc.sp());
        EXPECT(0xd6e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd6e8));
        // 29 028F
        gbc.setState(0xec2f, 0xe3aa, 0x40e0, 0xe73a, 0xfbe0, 0xf35f, 0x1, 0x0);
        gbc.writeMem(0xec2f, { 0x29 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe3aa, gbc.sp());
        EXPECT(0xec30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xec2f));
        // 29 0290
        gbc.setState(0x62f9, 0x24d3, 0xd2d0, 0x9635, 0xece8, 0xf2f1, 0x0, 0x1);
        gbc.writeMem(0x62f9, { 0x29 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x24d3, gbc.sp());
        EXPECT(0x62fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0291
        gbc.setState(0x9fd2, 0x1fe9, 0x9980, 0x2d71, 0x2e94, 0x59d0, 0x0, 0x0);
        gbc.writeMem(0x9fd2, { 0x29 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1fe9, gbc.sp());
        EXPECT(0x9fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9fd2));
        // 29 0292
        gbc.setState(0xa1b1, 0x8f7e, 0x9fa0, 0xe486, 0x58a4, 0xcb07, 0x1, 0x1);
        gbc.writeMem(0xa1b1, { 0x29 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8f7e, gbc.sp());
        EXPECT(0xa1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa1b1));
        // 29 0293
        gbc.setState(0x204, 0xc31c, 0x6f30, 0xcdb5, 0xf4f3, 0x3abe, 0x1, 0x0);
        gbc.writeMem(0x204, { 0x29 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc31c, gbc.sp());
        EXPECT(0x205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0294
        gbc.setState(0x8e2a, 0x32ce, 0xa600, 0x9bd1, 0xa1be, 0x5ae0, 0x0, 0x1);
        gbc.writeMem(0x8e2a, { 0x29 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x32ce, gbc.sp());
        EXPECT(0x8e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8e2a));
        // 29 0295
        gbc.setState(0x74ef, 0x4ad7, 0xe630, 0xf028, 0xcded, 0x5946, 0x0, 0x0);
        gbc.writeMem(0x74ef, { 0x29 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4ad7, gbc.sp());
        EXPECT(0x74f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0296
        gbc.setState(0x674c, 0xc509, 0xdc00, 0xf2c9, 0x3e82, 0xbde2, 0x0, 0x0);
        gbc.writeMem(0x674c, { 0x29 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc509, gbc.sp());
        EXPECT(0x674d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0297
        gbc.setState(0x3a89, 0x26a4, 0xc8b0, 0x808d, 0xf77a, 0x8eb4, 0x1, 0x1);
        gbc.writeMem(0x3a89, { 0x29 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x26a4, gbc.sp());
        EXPECT(0x3a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0298
        gbc.setState(0x8d6c, 0x3a5b, 0x5cf0, 0x9a2a, 0x1358, 0x5a97, 0x0, 0x0);
        gbc.writeMem(0x8d6c, { 0x29 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3a5b, gbc.sp());
        EXPECT(0x8d6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8d6c));
        // 29 0299
        gbc.setState(0x96e8, 0x716c, 0x13f0, 0x3de0, 0xf144, 0xfdff, 0x1, 0x1);
        gbc.writeMem(0x96e8, { 0x29 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x716c, gbc.sp());
        EXPECT(0x96e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x96e8));
        // 29 029A
        gbc.setState(0x3b0b, 0x357, 0x1330, 0xf724, 0x29e0, 0x571f, 0x1, 0x0);
        gbc.writeMem(0x3b0b, { 0x29 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x357, gbc.sp());
        EXPECT(0x3b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 029B
        gbc.setState(0x78b7, 0xbb17, 0x8870, 0x3cc8, 0x6789, 0x8bdc, 0x0, 0x0);
        gbc.writeMem(0x78b7, { 0x29 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbb17, gbc.sp());
        EXPECT(0x78b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 029C
        gbc.setState(0x4714, 0x8b25, 0xf3e0, 0xe628, 0x52c5, 0x3015, 0x0, 0x0);
        gbc.writeMem(0x4714, { 0x29 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8b25, gbc.sp());
        EXPECT(0x4715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 029D
        gbc.setState(0x37cd, 0xadfb, 0x9400, 0x6858, 0xb092, 0xb098, 0x1, 0x0);
        gbc.writeMem(0x37cd, { 0x29 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xadfb, gbc.sp());
        EXPECT(0x37ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 029E
        gbc.setState(0x31f1, 0x61d, 0xae0, 0xb1ca, 0xaddc, 0xd40b, 0x1, 0x1);
        gbc.writeMem(0x31f1, { 0x29 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x61d, gbc.sp());
        EXPECT(0x31f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 029F
        gbc.setState(0xcdfb, 0x1497, 0x4e60, 0xc429, 0x6d61, 0x6ee2, 0x1, 0x1);
        gbc.writeMem(0xcdfb, { 0x29 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1497, gbc.sp());
        EXPECT(0xcdfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcdfb));
        // 29 02A0
        gbc.setState(0x3d19, 0xc800, 0x4420, 0xc817, 0xb749, 0x3f0d, 0x1, 0x1);
        gbc.writeMem(0x3d19, { 0x29 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc800, gbc.sp());
        EXPECT(0x3d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02A1
        gbc.setState(0x4774, 0x208a, 0x2430, 0xf627, 0xbe5b, 0xcf05, 0x0, 0x0);
        gbc.writeMem(0x4774, { 0x29 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x208a, gbc.sp());
        EXPECT(0x4775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02A2
        gbc.setState(0x8b02, 0xbb10, 0xce90, 0xcd89, 0x246a, 0xb95e, 0x0, 0x0);
        gbc.writeMem(0x8b02, { 0x29 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbb10, gbc.sp());
        EXPECT(0x8b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8b02));
        // 29 02A3
        gbc.setState(0x85c9, 0x29bb, 0x3b50, 0x24cc, 0xcb85, 0xa5e0, 0x1, 0x1);
        gbc.writeMem(0x85c9, { 0x29 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x29bb, gbc.sp());
        EXPECT(0x85ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x85c9));
        // 29 02A4
        gbc.setState(0xc128, 0x1caf, 0x500, 0xc8c2, 0xc9c7, 0x5315, 0x1, 0x0);
        gbc.writeMem(0xc128, { 0x29 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1caf, gbc.sp());
        EXPECT(0xc129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc128));
        // 29 02A6
        gbc.setState(0xbcea, 0x7894, 0x9e0, 0x95cf, 0x203d, 0x9aa1, 0x1, 0x1);
        gbc.writeMem(0xbcea, { 0x29 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7894, gbc.sp());
        EXPECT(0xbceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbcea));
        // 29 02A7
        gbc.setState(0xb909, 0x2c30, 0x7640, 0x6d81, 0x88dd, 0xf566, 0x0, 0x0);
        gbc.writeMem(0xb909, { 0x29 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2c30, gbc.sp());
        EXPECT(0xb90a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb909));
        // 29 02A8
        gbc.setState(0xc17e, 0x2603, 0xfe80, 0x92d, 0x98d4, 0xe2fc, 0x0, 0x0);
        gbc.writeMem(0xc17e, { 0x29 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2603, gbc.sp());
        EXPECT(0xc17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc17e));
        // 29 02A9
        gbc.setState(0x4cbd, 0xb2bd, 0xb630, 0x9c33, 0x41d0, 0xf4b7, 0x0, 0x0);
        gbc.writeMem(0x4cbd, { 0x29 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb2bd, gbc.sp());
        EXPECT(0x4cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02AA
        gbc.setState(0x5344, 0x69cf, 0x56d0, 0x959, 0xfc36, 0x30b1, 0x0, 0x1);
        gbc.writeMem(0x5344, { 0x29 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x69cf, gbc.sp());
        EXPECT(0x5345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02AB
        gbc.setState(0xde45, 0x2774, 0x2c0, 0x9060, 0xa436, 0x4498, 0x0, 0x1);
        gbc.writeMem(0xde45, { 0x29 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2774, gbc.sp());
        EXPECT(0xde46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xde45));
        // 29 02AC
        gbc.setState(0x1e42, 0x5d13, 0x4870, 0xf04a, 0x1ccf, 0xf146, 0x1, 0x0);
        gbc.writeMem(0x1e42, { 0x29 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5d13, gbc.sp());
        EXPECT(0x1e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02AD
        gbc.setState(0xb7dc, 0xc6b1, 0xfd40, 0xbf77, 0xab82, 0xdcd, 0x1, 0x0);
        gbc.writeMem(0xb7dc, { 0x29 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc6b1, gbc.sp());
        EXPECT(0xb7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb7dc));
        // 29 02AE
        gbc.setState(0x8507, 0x4234, 0xa880, 0xa0ff, 0x4b3c, 0xb28f, 0x1, 0x1);
        gbc.writeMem(0x8507, { 0x29 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4234, gbc.sp());
        EXPECT(0x8508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8507));
        // 29 02AF
        gbc.setState(0x5543, 0xf183, 0xe580, 0xb58a, 0xcc0d, 0xda95, 0x1, 0x1);
        gbc.writeMem(0x5543, { 0x29 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf183, gbc.sp());
        EXPECT(0x5544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02B0
        gbc.setState(0x2d5, 0xdecf, 0x1ff0, 0x7904, 0xa429, 0xb53a, 0x1, 0x0);
        gbc.writeMem(0x2d5, { 0x29 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdecf, gbc.sp());
        EXPECT(0x2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02B1
        gbc.setState(0x323e, 0x94c8, 0x1f40, 0x9a5c, 0x9b2c, 0xa283, 0x1, 0x1);
        gbc.writeMem(0x323e, { 0x29 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x94c8, gbc.sp());
        EXPECT(0x323f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02B2
        gbc.setState(0xc0cf, 0x411c, 0xed70, 0x1b67, 0x1788, 0xf388, 0x1, 0x1);
        gbc.writeMem(0xc0cf, { 0x29 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x411c, gbc.sp());
        EXPECT(0xc0d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc0cf));
        // 29 02B3
        gbc.setState(0x2f6f, 0x56c6, 0x6110, 0xa55b, 0xeff1, 0x8d9, 0x1, 0x0);
        gbc.writeMem(0x2f6f, { 0x29 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x56c6, gbc.sp());
        EXPECT(0x2f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02B4
        gbc.setState(0x252, 0x5308, 0xb450, 0xb12b, 0x739e, 0xd6ac, 0x1, 0x0);
        gbc.writeMem(0x252, { 0x29 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5308, gbc.sp());
        EXPECT(0x253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02B5
        gbc.setState(0x8dd4, 0x31e1, 0xa1f0, 0xb2d6, 0x18cb, 0x8f5e, 0x0, 0x1);
        gbc.writeMem(0x8dd4, { 0x29 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x31e1, gbc.sp());
        EXPECT(0x8dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8dd4));
        // 29 02B6
        gbc.setState(0xbd7f, 0x4734, 0x9d10, 0x4ede, 0x5ddd, 0x371f, 0x1, 0x0);
        gbc.writeMem(0xbd7f, { 0x29 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4734, gbc.sp());
        EXPECT(0xbd80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbd7f));
        // 29 02B7
        gbc.setState(0xb9b2, 0x3ad3, 0xdc10, 0xde03, 0xdc12, 0xf23a, 0x0, 0x1);
        gbc.writeMem(0xb9b2, { 0x29 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3ad3, gbc.sp());
        EXPECT(0xb9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb9b2));
        // 29 02B8
        gbc.setState(0x13fd, 0xba6f, 0x54a0, 0x470e, 0x9adb, 0xf9cd, 0x0, 0x1);
        gbc.writeMem(0x13fd, { 0x29 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xba6f, gbc.sp());
        EXPECT(0x13fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02B9
        gbc.setState(0x7342, 0xead2, 0xd1b0, 0xdf5, 0x8ad, 0xc62, 0x0, 0x0);
        gbc.writeMem(0x7342, { 0x29 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xead2, gbc.sp());
        EXPECT(0x7343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02BA
        gbc.setState(0xa85d, 0x20f1, 0x7310, 0xc93d, 0x8f82, 0xd144, 0x0, 0x1);
        gbc.writeMem(0xa85d, { 0x29 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x20f1, gbc.sp());
        EXPECT(0xa85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa85d));
        // 29 02BB
        gbc.setState(0xb282, 0xb668, 0x42a0, 0x5f24, 0x1ba0, 0x33e0, 0x1, 0x0);
        gbc.writeMem(0xb282, { 0x29 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb668, gbc.sp());
        EXPECT(0xb283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb282));
        // 29 02BC
        gbc.setState(0xa581, 0x326e, 0xbf90, 0xcea7, 0x8a38, 0xf8ba, 0x0, 0x0);
        gbc.writeMem(0xa581, { 0x29 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x326e, gbc.sp());
        EXPECT(0xa582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa581));
        // 29 02BD
        gbc.setState(0x666d, 0x7060, 0x5fd0, 0xbd95, 0x8162, 0x8aba, 0x1, 0x0);
        gbc.writeMem(0x666d, { 0x29 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7060, gbc.sp());
        EXPECT(0x666e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02BE
        gbc.setState(0x7b3f, 0xf77e, 0xc490, 0x14c8, 0x8789, 0x270f, 0x1, 0x1);
        gbc.writeMem(0x7b3f, { 0x29 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf77e, gbc.sp());
        EXPECT(0x7b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02BF
        gbc.setState(0xad3a, 0x180d, 0xaa90, 0x497c, 0x747b, 0xaf7, 0x1, 0x0);
        gbc.writeMem(0xad3a, { 0x29 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x180d, gbc.sp());
        EXPECT(0xad3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xad3a));
        // 29 02C1
        gbc.setState(0x9313, 0x1021, 0x93b0, 0xa5b5, 0xdead, 0x90a6, 0x0, 0x0);
        gbc.writeMem(0x9313, { 0x29 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1021, gbc.sp());
        EXPECT(0x9314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9313));
        // 29 02C2
        gbc.setState(0xc659, 0xba0e, 0x1bc0, 0xeae3, 0x674d, 0x2f8b, 0x1, 0x0);
        gbc.writeMem(0xc659, { 0x29 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xba0e, gbc.sp());
        EXPECT(0xc65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc659));
        // 29 02C4
        gbc.setState(0x77df, 0x1921, 0x1040, 0x8965, 0x2276, 0xdd4c, 0x0, 0x0);
        gbc.writeMem(0x77df, { 0x29 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1921, gbc.sp());
        EXPECT(0x77e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02C5
        gbc.setState(0x2436, 0x92c0, 0x5b70, 0x536f, 0xe463, 0x37e1, 0x1, 0x1);
        gbc.writeMem(0x2436, { 0x29 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x92c0, gbc.sp());
        EXPECT(0x2437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02C6
        gbc.setState(0xb73b, 0xf1e9, 0xb2a0, 0x5698, 0x221f, 0x9ac0, 0x1, 0x0);
        gbc.writeMem(0xb73b, { 0x29 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf1e9, gbc.sp());
        EXPECT(0xb73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb73b));
        // 29 02C7
        gbc.setState(0x3591, 0x366a, 0x6350, 0x2ce0, 0xb352, 0x88d5, 0x1, 0x0);
        gbc.writeMem(0x3591, { 0x29 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x366a, gbc.sp());
        EXPECT(0x3592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02C8
        gbc.setState(0xc14d, 0x9766, 0x63f0, 0x8734, 0xd2d4, 0x2209, 0x0, 0x1);
        gbc.writeMem(0xc14d, { 0x29 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9766, gbc.sp());
        EXPECT(0xc14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc14d));
        // 29 02C9
        gbc.setState(0x4c94, 0xfa43, 0x65c0, 0xc158, 0x7784, 0xa683, 0x0, 0x1);
        gbc.writeMem(0x4c94, { 0x29 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfa43, gbc.sp());
        EXPECT(0x4c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02CA
        gbc.setState(0x768a, 0x9c3e, 0x2770, 0xc701, 0x8a4, 0x5d66, 0x1, 0x0);
        gbc.writeMem(0x768a, { 0x29 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9c3e, gbc.sp());
        EXPECT(0x768b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02CB
        gbc.setState(0xd61b, 0x3f5, 0xac90, 0x26, 0x7562, 0x295b, 0x0, 0x0);
        gbc.writeMem(0xd61b, { 0x29 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3f5, gbc.sp());
        EXPECT(0xd61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd61b));
        // 29 02CC
        gbc.setState(0x7f0a, 0x639f, 0xe6d0, 0x1a08, 0xcae4, 0x1264, 0x0, 0x1);
        gbc.writeMem(0x7f0a, { 0x29 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x639f, gbc.sp());
        EXPECT(0x7f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02CD
        gbc.setState(0xa3ec, 0x547f, 0xfc60, 0xe046, 0xe2d9, 0xa87f, 0x0, 0x1);
        gbc.writeMem(0xa3ec, { 0x29 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x547f, gbc.sp());
        EXPECT(0xa3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa3ec));
        // 29 02CE
        gbc.setState(0xa160, 0x453, 0x690, 0x4e7a, 0xf2af, 0x98a6, 0x1, 0x1);
        gbc.writeMem(0xa160, { 0x29 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x453, gbc.sp());
        EXPECT(0xa161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa160));
        // 29 02CF
        gbc.setState(0x4ef6, 0x1886, 0x2640, 0x8291, 0xe59e, 0x4116, 0x0, 0x0);
        gbc.writeMem(0x4ef6, { 0x29 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1886, gbc.sp());
        EXPECT(0x4ef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02D0
        gbc.setState(0x75ca, 0xd35b, 0xea40, 0xcaae, 0x7a54, 0x44b2, 0x0, 0x1);
        gbc.writeMem(0x75ca, { 0x29 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd35b, gbc.sp());
        EXPECT(0x75cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02D1
        gbc.setState(0x10ce, 0xcf12, 0x7860, 0x487c, 0x91c6, 0xd201, 0x0, 0x1);
        gbc.writeMem(0x10ce, { 0x29 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcf12, gbc.sp());
        EXPECT(0x10cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02D2
        gbc.setState(0xda2d, 0xd854, 0x30a0, 0xbd06, 0x1888, 0x4cc0, 0x0, 0x1);
        gbc.writeMem(0xda2d, { 0x29 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd854, gbc.sp());
        EXPECT(0xda2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xda2d));
        // 29 02D3
        gbc.setState(0x587d, 0x1397, 0x3a50, 0xa9f9, 0xd801, 0x4277, 0x1, 0x0);
        gbc.writeMem(0x587d, { 0x29 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1397, gbc.sp());
        EXPECT(0x587e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02D4
        gbc.setState(0xed0d, 0x33cf, 0x6c00, 0x8245, 0x558e, 0x6741, 0x1, 0x1);
        gbc.writeMem(0xed0d, { 0x29 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x33cf, gbc.sp());
        EXPECT(0xed0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xed0d));
        // 29 02D5
        gbc.setState(0x66fa, 0xa8b5, 0x6360, 0xb3e8, 0xd745, 0xc568, 0x1, 0x0);
        gbc.writeMem(0x66fa, { 0x29 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa8b5, gbc.sp());
        EXPECT(0x66fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02D6
        gbc.setState(0x7474, 0x6a88, 0xc770, 0x3e8, 0x19d4, 0xc738, 0x0, 0x1);
        gbc.writeMem(0x7474, { 0x29 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6a88, gbc.sp());
        EXPECT(0x7475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02D7
        gbc.setState(0xe278, 0xcf85, 0xd190, 0x45ca, 0x60c5, 0xee12, 0x0, 0x1);
        gbc.writeMem(0xe278, { 0x29 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcf85, gbc.sp());
        EXPECT(0xe279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe278));
        // 29 02D8
        gbc.setState(0x39a, 0x3e4d, 0xb220, 0xb96a, 0x7adc, 0xe7c9, 0x0, 0x0);
        gbc.writeMem(0x39a, { 0x29 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3e4d, gbc.sp());
        EXPECT(0x39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02D9
        gbc.setState(0x4eb6, 0x6bac, 0x7bd0, 0x676a, 0x1938, 0xe89, 0x1, 0x0);
        gbc.writeMem(0x4eb6, { 0x29 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6bac, gbc.sp());
        EXPECT(0x4eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02DA
        gbc.setState(0x2b1d, 0xf7d6, 0x9f00, 0xd90d, 0x4983, 0x7bfd, 0x0, 0x0);
        gbc.writeMem(0x2b1d, { 0x29 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf7d6, gbc.sp());
        EXPECT(0x2b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02DB
        gbc.setState(0xab0c, 0x3fea, 0xd6c0, 0xf6, 0xe1ea, 0x152f, 0x0, 0x1);
        gbc.writeMem(0xab0c, { 0x29 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3fea, gbc.sp());
        EXPECT(0xab0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xab0c));
        // 29 02DD
        gbc.setState(0xd2cb, 0x694, 0xb60, 0xc398, 0x43b1, 0xa45d, 0x1, 0x1);
        gbc.writeMem(0xd2cb, { 0x29 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x694, gbc.sp());
        EXPECT(0xd2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd2cb));
        // 29 02DE
        gbc.setState(0x2bb0, 0xb8af, 0x5b00, 0x8f09, 0x77f5, 0xd350, 0x1, 0x1);
        gbc.writeMem(0x2bb0, { 0x29 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb8af, gbc.sp());
        EXPECT(0x2bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02DF
        gbc.setState(0x8b14, 0xeb46, 0xb260, 0x52e9, 0xb34d, 0xa688, 0x0, 0x1);
        gbc.writeMem(0x8b14, { 0x29 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xeb46, gbc.sp());
        EXPECT(0x8b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8b14));
        // 29 02E0
        gbc.setState(0xd049, 0xc0e1, 0x5ec0, 0xb865, 0x6a13, 0x7534, 0x1, 0x0);
        gbc.writeMem(0xd049, { 0x29 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc0e1, gbc.sp());
        EXPECT(0xd04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd049));
        // 29 02E1
        gbc.setState(0x5f79, 0x6a45, 0x2950, 0xd673, 0xde5f, 0x71ed, 0x0, 0x1);
        gbc.writeMem(0x5f79, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6a45, gbc.sp());
        EXPECT(0x5f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02E2
        gbc.setState(0x3f86, 0x2511, 0x5020, 0xaadb, 0x9d34, 0xbacd, 0x1, 0x1);
        gbc.writeMem(0x3f86, { 0x29 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2511, gbc.sp());
        EXPECT(0x3f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02E3
        gbc.setState(0x8a93, 0xb974, 0xd490, 0xfd1a, 0x428e, 0x5f15, 0x1, 0x0);
        gbc.writeMem(0x8a93, { 0x29 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb974, gbc.sp());
        EXPECT(0x8a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8a93));
        // 29 02E4
        gbc.setState(0xdd6f, 0x951, 0x2e0, 0xc35, 0x6265, 0x4003, 0x1, 0x0);
        gbc.writeMem(0xdd6f, { 0x29 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x951, gbc.sp());
        EXPECT(0xdd70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdd6f));
        // 29 02E5
        gbc.setState(0xa218, 0x72fe, 0x4220, 0xa180, 0x20af, 0x6fa0, 0x1, 0x1);
        gbc.writeMem(0xa218, { 0x29 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x72fe, gbc.sp());
        EXPECT(0xa219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa218));
        // 29 02E6
        gbc.setState(0x38dd, 0xe9b9, 0x8500, 0x28f1, 0xe901, 0x3cca, 0x0, 0x0);
        gbc.writeMem(0x38dd, { 0x29 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe9b9, gbc.sp());
        EXPECT(0x38de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02E7
        gbc.setState(0x898b, 0xc453, 0x5fa0, 0xee1a, 0x2189, 0x2a16, 0x0, 0x1);
        gbc.writeMem(0x898b, { 0x29 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc453, gbc.sp());
        EXPECT(0x898c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x898b));
        // 29 02E8
        gbc.setState(0xb6a9, 0x7187, 0xd570, 0x13e6, 0xc49f, 0x5e1, 0x0, 0x0);
        gbc.writeMem(0xb6a9, { 0x29 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7187, gbc.sp());
        EXPECT(0xb6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb6a9));
        // 29 02E9
        gbc.setState(0x8c4a, 0x32ee, 0xe020, 0xb91, 0x98c5, 0x7cd8, 0x1, 0x1);
        gbc.writeMem(0x8c4a, { 0x29 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x32ee, gbc.sp());
        EXPECT(0x8c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8c4a));
        // 29 02EA
        gbc.setState(0x27c, 0x79f4, 0x3430, 0xf946, 0xc4e0, 0xb22a, 0x1, 0x1);
        gbc.writeMem(0x27c, { 0x29 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x79f4, gbc.sp());
        EXPECT(0x27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02EB
        gbc.setState(0xdf70, 0x88d4, 0xab30, 0xbbe7, 0x22c6, 0x1c2a, 0x1, 0x1);
        gbc.writeMem(0xdf70, { 0x29 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x88d4, gbc.sp());
        EXPECT(0xdf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdf70));
        // 29 02EC
        gbc.setState(0xa02b, 0x3777, 0xa080, 0xddc8, 0xd46f, 0x3b79, 0x0, 0x0);
        gbc.writeMem(0xa02b, { 0x29 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3777, gbc.sp());
        EXPECT(0xa02c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa02b));
        // 29 02ED
        gbc.setState(0xb7f9, 0x5600, 0xa7f0, 0xfe86, 0x84d4, 0x3c9b, 0x0, 0x0);
        gbc.writeMem(0xb7f9, { 0x29 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5600, gbc.sp());
        EXPECT(0xb7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb7f9));
        // 29 02EE
        gbc.setState(0x8e16, 0xf83f, 0x1a10, 0x181b, 0xaedd, 0xa485, 0x0, 0x1);
        gbc.writeMem(0x8e16, { 0x29 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf83f, gbc.sp());
        EXPECT(0x8e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8e16));
        // 29 02EF
        gbc.setState(0xb0b1, 0xa688, 0x8650, 0x3461, 0x3df0, 0xb1f3, 0x0, 0x0);
        gbc.writeMem(0xb0b1, { 0x29 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa688, gbc.sp());
        EXPECT(0xb0b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb0b1));
        // 29 02F0
        gbc.setState(0x1bae, 0x3245, 0xda90, 0x927a, 0x9eb3, 0x993a, 0x0, 0x0);
        gbc.writeMem(0x1bae, { 0x29 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3245, gbc.sp());
        EXPECT(0x1baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02F1
        gbc.setState(0x139d, 0x9493, 0xf820, 0x5708, 0x282e, 0xe98d, 0x1, 0x1);
        gbc.writeMem(0x139d, { 0x29 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9493, gbc.sp());
        EXPECT(0x139e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02F2
        gbc.setState(0x14ef, 0x649e, 0x9820, 0xc07f, 0xb69c, 0x792c, 0x1, 0x0);
        gbc.writeMem(0x14ef, { 0x29 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x649e, gbc.sp());
        EXPECT(0x14f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02F3
        gbc.setState(0x5eda, 0x9ed0, 0x2d20, 0xcd4a, 0x5b1d, 0x7a33, 0x1, 0x1);
        gbc.writeMem(0x5eda, { 0x29 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9ed0, gbc.sp());
        EXPECT(0x5edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02F4
        gbc.setState(0x9c08, 0xeae7, 0x7df0, 0x3ef7, 0xc7cb, 0x474d, 0x1, 0x1);
        gbc.writeMem(0x9c08, { 0x29 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xeae7, gbc.sp());
        EXPECT(0x9c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9c08));
        // 29 02F5
        gbc.setState(0xbe97, 0xe8b6, 0x5950, 0x6298, 0xa3d3, 0xf8b4, 0x1, 0x1);
        gbc.writeMem(0xbe97, { 0x29 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe8b6, gbc.sp());
        EXPECT(0xbe98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbe97));
        // 29 02F6
        gbc.setState(0x5618, 0xbc1f, 0xe010, 0x84a1, 0x99f9, 0x554e, 0x1, 0x0);
        gbc.writeMem(0x5618, { 0x29 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbc1f, gbc.sp());
        EXPECT(0x5619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 02F7
        gbc.setState(0x8b0, 0x5325, 0x5ec0, 0x2f73, 0x6a49, 0xbaf6, 0x0, 0x1);
        gbc.writeMem(0x8b0, { 0x29 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5325, gbc.sp());
        EXPECT(0x8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02F8
        gbc.setState(0x8f29, 0x86db, 0x59e0, 0xde58, 0xcacd, 0xcd29, 0x0, 0x0);
        gbc.writeMem(0x8f29, { 0x29 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x86db, gbc.sp());
        EXPECT(0x8f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8f29));
        // 29 02F9
        gbc.setState(0x70b5, 0xeb73, 0x8840, 0xa59f, 0x3c0e, 0xed18, 0x1, 0x0);
        gbc.writeMem(0x70b5, { 0x29 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xeb73, gbc.sp());
        EXPECT(0x70b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02FA
        gbc.setState(0xb5f9, 0x6bc9, 0xb410, 0xff3d, 0xe565, 0xf146, 0x1, 0x0);
        gbc.writeMem(0xb5f9, { 0x29 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6bc9, gbc.sp());
        EXPECT(0xb5fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb5f9));
        // 29 02FB
        gbc.setState(0xb45b, 0xbe34, 0x4920, 0xf248, 0x911e, 0x84b8, 0x0, 0x1);
        gbc.writeMem(0xb45b, { 0x29 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbe34, gbc.sp());
        EXPECT(0xb45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb45b));
        // 29 02FC
        gbc.setState(0xa567, 0x4646, 0xd5f0, 0x1afc, 0x5d44, 0x7206, 0x0, 0x1);
        gbc.writeMem(0xa567, { 0x29 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4646, gbc.sp());
        EXPECT(0xa568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa567));
        // 29 02FD
        gbc.setState(0xc205, 0xd124, 0x8b10, 0xc944, 0xffe0, 0x7b8c, 0x0, 0x1);
        gbc.writeMem(0xc205, { 0x29 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd124, gbc.sp());
        EXPECT(0xc206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc205));
        // 29 02FE
        gbc.setState(0x31, 0xe66d, 0x93d0, 0x6eb5, 0x1cd2, 0xfc6d, 0x0, 0x0);
        gbc.writeMem(0x31, { 0x29 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe66d, gbc.sp());
        EXPECT(0x32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 02FF
        gbc.setState(0x3ee1, 0x4d90, 0xe430, 0x5c6f, 0x3eac, 0xcf7c, 0x1, 0x1);
        gbc.writeMem(0x3ee1, { 0x29 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4d90, gbc.sp());
        EXPECT(0x3ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0300
        gbc.setState(0xe60d, 0xc675, 0xace0, 0xf17e, 0xd45b, 0xf9ab, 0x1, 0x0);
        gbc.writeMem(0xe60d, { 0x29 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc675, gbc.sp());
        EXPECT(0xe60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe60d));
        // 29 0301
        gbc.setState(0x63c7, 0x2ec6, 0x13c0, 0x4fca, 0x134f, 0xefb1, 0x1, 0x1);
        gbc.writeMem(0x63c7, { 0x29 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2ec6, gbc.sp());
        EXPECT(0x63c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0302
        gbc.setState(0xc28f, 0x2f24, 0x88a0, 0xf4cf, 0xe7eb, 0x7977, 0x0, 0x1);
        gbc.writeMem(0xc28f, { 0x29 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2f24, gbc.sp());
        EXPECT(0xc290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc28f));
        // 29 0303
        gbc.setState(0xb857, 0xdeff, 0x3630, 0xfeb, 0x78fb, 0x7e89, 0x1, 0x0);
        gbc.writeMem(0xb857, { 0x29 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdeff, gbc.sp());
        EXPECT(0xb858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb857));
        // 29 0304
        gbc.setState(0xe1ba, 0xcde9, 0x5880, 0x14af, 0x4a9f, 0xd143, 0x1, 0x1);
        gbc.writeMem(0xe1ba, { 0x29 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcde9, gbc.sp());
        EXPECT(0xe1bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe1ba));
        // 29 0305
        gbc.setState(0x2524, 0xe2c0, 0xcb30, 0x550d, 0x94b3, 0xa9c0, 0x0, 0x1);
        gbc.writeMem(0x2524, { 0x29 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe2c0, gbc.sp());
        EXPECT(0x2525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0306
        gbc.setState(0x7309, 0x5316, 0x1b0, 0xa700, 0xd7d0, 0xf267, 0x1, 0x1);
        gbc.writeMem(0x7309, { 0x29 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5316, gbc.sp());
        EXPECT(0x730a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0307
        gbc.setState(0x3d54, 0xa8d1, 0x45f0, 0xbac3, 0xb547, 0x7836, 0x1, 0x1);
        gbc.writeMem(0x3d54, { 0x29 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa8d1, gbc.sp());
        EXPECT(0x3d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0308
        gbc.setState(0x311f, 0x8fd6, 0x7a30, 0x7fb1, 0xe476, 0x21dd, 0x1, 0x1);
        gbc.writeMem(0x311f, { 0x29 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8fd6, gbc.sp());
        EXPECT(0x3120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0309
        gbc.setState(0x8141, 0x3dc7, 0x9900, 0xcc0d, 0x1ad5, 0xba2, 0x1, 0x0);
        gbc.writeMem(0x8141, { 0x29 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3dc7, gbc.sp());
        EXPECT(0x8142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8141));
        // 29 030A
        gbc.setState(0xa21a, 0x272c, 0xe390, 0xe0c1, 0xec55, 0xa79e, 0x0, 0x1);
        gbc.writeMem(0xa21a, { 0x29 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x272c, gbc.sp());
        EXPECT(0xa21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa21a));
        // 29 030B
        gbc.setState(0xec01, 0xd1eb, 0xc110, 0x7e92, 0x74a4, 0x630e, 0x0, 0x0);
        gbc.writeMem(0xec01, { 0x29 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd1eb, gbc.sp());
        EXPECT(0xec02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xec01));
        // 29 030C
        gbc.setState(0xaab, 0x4b39, 0x1230, 0x6845, 0x3d5c, 0x1c1c, 0x1, 0x1);
        gbc.writeMem(0xaab, { 0x29 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4b39, gbc.sp());
        EXPECT(0xaac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 030D
        gbc.setState(0x265d, 0xea18, 0xc0f0, 0xd600, 0xc563, 0xdfba, 0x1, 0x1);
        gbc.writeMem(0x265d, { 0x29 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xea18, gbc.sp());
        EXPECT(0x265e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 030E
        gbc.setState(0x6e5, 0xd6b3, 0x8540, 0xf9e0, 0x2455, 0x5e73, 0x1, 0x1);
        gbc.writeMem(0x6e5, { 0x29 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd6b3, gbc.sp());
        EXPECT(0x6e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0310
        gbc.setState(0x2025, 0x62bd, 0x4a00, 0x5fec, 0x8b69, 0xb5a5, 0x0, 0x0);
        gbc.writeMem(0x2025, { 0x29 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x62bd, gbc.sp());
        EXPECT(0x2026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0311
        gbc.setState(0xd7c1, 0x654f, 0x2b10, 0x51c6, 0x3327, 0x1193, 0x1, 0x0);
        gbc.writeMem(0xd7c1, { 0x29 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x654f, gbc.sp());
        EXPECT(0xd7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd7c1));
        // 29 0312
        gbc.setState(0x4255, 0x9ec7, 0xff40, 0x597d, 0xd369, 0x180, 0x0, 0x1);
        gbc.writeMem(0x4255, { 0x29 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9ec7, gbc.sp());
        EXPECT(0x4256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0313
        gbc.setState(0x7de1, 0x3e3e, 0xeef0, 0xc01c, 0xe288, 0xa, 0x1, 0x1);
        gbc.writeMem(0x7de1, { 0x29 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3e3e, gbc.sp());
        EXPECT(0x7de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0314
        gbc.setState(0x2703, 0xe8cd, 0xfc60, 0xec73, 0xcee2, 0xae4c, 0x0, 0x0);
        gbc.writeMem(0x2703, { 0x29 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe8cd, gbc.sp());
        EXPECT(0x2704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0315
        gbc.setState(0x234c, 0xe653, 0x3b60, 0x46e4, 0x872f, 0xca2f, 0x0, 0x0);
        gbc.writeMem(0x234c, { 0x29 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe653, gbc.sp());
        EXPECT(0x234d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0316
        gbc.setState(0xc881, 0x3984, 0xbe00, 0xe908, 0x1cd, 0x9d09, 0x0, 0x0);
        gbc.writeMem(0xc881, { 0x29 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3984, gbc.sp());
        EXPECT(0xc882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc881));
        // 29 0317
        gbc.setState(0x13ec, 0x9b02, 0xe7b0, 0x439b, 0x3d10, 0x9b9, 0x0, 0x1);
        gbc.writeMem(0x13ec, { 0x29 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9b02, gbc.sp());
        EXPECT(0x13ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0318
        gbc.setState(0x4fc5, 0xbebc, 0x7080, 0x310a, 0x6a31, 0xaa5, 0x0, 0x1);
        gbc.writeMem(0x4fc5, { 0x29 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbebc, gbc.sp());
        EXPECT(0x4fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0319
        gbc.setState(0x1a35, 0x6674, 0xeda0, 0xe88c, 0x67c3, 0x19cd, 0x0, 0x1);
        gbc.writeMem(0x1a35, { 0x29 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6674, gbc.sp());
        EXPECT(0x1a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 031A
        gbc.setState(0x9a33, 0xe2e5, 0x2830, 0xe3c5, 0x5f7, 0x329f, 0x0, 0x0);
        gbc.writeMem(0x9a33, { 0x29 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe2e5, gbc.sp());
        EXPECT(0x9a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9a33));
        // 29 031B
        gbc.setState(0x60ac, 0x5c33, 0xf590, 0x9228, 0x339, 0x5ad6, 0x1, 0x0);
        gbc.writeMem(0x60ac, { 0x29 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5c33, gbc.sp());
        EXPECT(0x60ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 031C
        gbc.setState(0xf26, 0xe109, 0xb240, 0xa382, 0xd697, 0x1386, 0x1, 0x1);
        gbc.writeMem(0xf26, { 0x29 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe109, gbc.sp());
        EXPECT(0xf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 031D
        gbc.setState(0x1f9c, 0xfc2, 0x31a0, 0x4b78, 0x1838, 0xf077, 0x1, 0x1);
        gbc.writeMem(0x1f9c, { 0x29 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfc2, gbc.sp());
        EXPECT(0x1f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 031E
        gbc.setState(0xb460, 0x4cfd, 0x2fb0, 0xd37, 0x1a5c, 0x7517, 0x0, 0x0);
        gbc.writeMem(0xb460, { 0x29 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4cfd, gbc.sp());
        EXPECT(0xb461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb460));
        // 29 031F
        gbc.setState(0xa351, 0x1b52, 0x4970, 0xe7c6, 0x5165, 0x43c2, 0x0, 0x0);
        gbc.writeMem(0xa351, { 0x29 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1b52, gbc.sp());
        EXPECT(0xa352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa351));
        // 29 0320
        gbc.setState(0x9e09, 0xbf2c, 0xff80, 0x390f, 0x92c4, 0x7bc7, 0x1, 0x1);
        gbc.writeMem(0x9e09, { 0x29 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbf2c, gbc.sp());
        EXPECT(0x9e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9e09));
        // 29 0321
        gbc.setState(0x905c, 0xc634, 0xf7a0, 0x5657, 0x44ca, 0xf18b, 0x0, 0x1);
        gbc.writeMem(0x905c, { 0x29 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc634, gbc.sp());
        EXPECT(0x905d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x905c));
        // 29 0322
        gbc.setState(0x6279, 0x692f, 0x56d0, 0xd885, 0x17ba, 0x84e0, 0x1, 0x0);
        gbc.writeMem(0x6279, { 0x29 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x692f, gbc.sp());
        EXPECT(0x627a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0323
        gbc.setState(0x8295, 0x3585, 0x7930, 0xef91, 0xc207, 0xc490, 0x0, 0x1);
        gbc.writeMem(0x8295, { 0x29 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3585, gbc.sp());
        EXPECT(0x8296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8295));
        // 29 0324
        gbc.setState(0xe6ce, 0x651c, 0x190, 0x9fed, 0x619b, 0x8ccd, 0x1, 0x0);
        gbc.writeMem(0xe6ce, { 0x29 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x651c, gbc.sp());
        EXPECT(0xe6cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe6ce));
        // 29 0325
        gbc.setState(0xc10e, 0x3e4f, 0xa7a0, 0x323e, 0x3ab, 0x4563, 0x0, 0x1);
        gbc.writeMem(0xc10e, { 0x29 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3e4f, gbc.sp());
        EXPECT(0xc10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc10e));
        // 29 0326
        gbc.setState(0xc517, 0x49e, 0x3170, 0x45eb, 0xd15e, 0x72ea, 0x0, 0x0);
        gbc.writeMem(0xc517, { 0x29 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x49e, gbc.sp());
        EXPECT(0xc518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc517));
        // 29 0327
        gbc.setState(0x562e, 0xd941, 0xb8d0, 0x8354, 0x255d, 0x2e09, 0x0, 0x1);
        gbc.writeMem(0x562e, { 0x29 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd941, gbc.sp());
        EXPECT(0x562f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0328
        gbc.setState(0x8bfd, 0xba4c, 0xbcb0, 0x5a4c, 0xd690, 0xdbfe, 0x1, 0x1);
        gbc.writeMem(0x8bfd, { 0x29 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xba4c, gbc.sp());
        EXPECT(0x8bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8bfd));
        // 29 0329
        gbc.setState(0xa32b, 0x68e4, 0x3400, 0x1d2d, 0xe8eb, 0xa6e7, 0x0, 0x1);
        gbc.writeMem(0xa32b, { 0x29 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x68e4, gbc.sp());
        EXPECT(0xa32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa32b));
        // 29 032A
        gbc.setState(0x39da, 0x5c98, 0xd30, 0xa654, 0xad70, 0xe90c, 0x1, 0x1);
        gbc.writeMem(0x39da, { 0x29 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5c98, gbc.sp());
        EXPECT(0x39db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 032B
        gbc.setState(0xc1b2, 0x5785, 0x9300, 0x28db, 0xcc01, 0xc293, 0x1, 0x0);
        gbc.writeMem(0xc1b2, { 0x29 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5785, gbc.sp());
        EXPECT(0xc1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc1b2));
        // 29 032C
        gbc.setState(0xb204, 0xd867, 0xbd90, 0x2bce, 0xa233, 0xce7, 0x1, 0x0);
        gbc.writeMem(0xb204, { 0x29 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd867, gbc.sp());
        EXPECT(0xb205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb204));
        // 29 032D
        gbc.setState(0x2d7, 0x10ea, 0x1110, 0x5894, 0x35a, 0x5285, 0x0, 0x0);
        gbc.writeMem(0x2d7, { 0x29 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x10ea, gbc.sp());
        EXPECT(0x2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 032E
        gbc.setState(0xecba, 0x24f8, 0x2d00, 0x8dde, 0xd11, 0x75f9, 0x1, 0x0);
        gbc.writeMem(0xecba, { 0x29 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x24f8, gbc.sp());
        EXPECT(0xecbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xecba));
        // 29 032F
        gbc.setState(0xd9fa, 0x6eab, 0x49c0, 0x12eb, 0x2b31, 0x8c43, 0x1, 0x0);
        gbc.writeMem(0xd9fa, { 0x29 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6eab, gbc.sp());
        EXPECT(0xd9fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd9fa));
        // 29 0330
        gbc.setState(0x8bdd, 0x9e5, 0x52b0, 0xa16e, 0x4f34, 0x6c98, 0x0, 0x1);
        gbc.writeMem(0x8bdd, { 0x29 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9e5, gbc.sp());
        EXPECT(0x8bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8bdd));
        // 29 0331
        gbc.setState(0x2ae3, 0x8a61, 0x6a30, 0x2de9, 0xe551, 0x93f1, 0x1, 0x0);
        gbc.writeMem(0x2ae3, { 0x29 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8a61, gbc.sp());
        EXPECT(0x2ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0332
        gbc.setState(0x5a4c, 0xbd0e, 0x89d0, 0x7c15, 0x2fcc, 0x209c, 0x1, 0x0);
        gbc.writeMem(0x5a4c, { 0x29 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbd0e, gbc.sp());
        EXPECT(0x5a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0333
        gbc.setState(0xbd6, 0xceed, 0xf10, 0x947e, 0x222d, 0x1377, 0x0, 0x1);
        gbc.writeMem(0xbd6, { 0x29 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xceed, gbc.sp());
        EXPECT(0xbd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0334
        gbc.setState(0x7f60, 0xe9a1, 0x1820, 0x757d, 0xb0d3, 0xbe74, 0x0, 0x1);
        gbc.writeMem(0x7f60, { 0x29 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe9a1, gbc.sp());
        EXPECT(0x7f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0335
        gbc.setState(0x9008, 0xfbe0, 0x2000, 0x550d, 0xff52, 0xf342, 0x1, 0x0);
        gbc.writeMem(0x9008, { 0x29 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfbe0, gbc.sp());
        EXPECT(0x9009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9008));
        // 29 0336
        gbc.setState(0x1faf, 0x98aa, 0xe1e0, 0x120d, 0x24ff, 0x46ef, 0x1, 0x1);
        gbc.writeMem(0x1faf, { 0x29 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x98aa, gbc.sp());
        EXPECT(0x1fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0337
        gbc.setState(0x628a, 0x1ad5, 0x4a40, 0xe4fd, 0xb208, 0x4715, 0x1, 0x0);
        gbc.writeMem(0x628a, { 0x29 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1ad5, gbc.sp());
        EXPECT(0x628b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0338
        gbc.setState(0xc445, 0xcacc, 0xd750, 0xcc86, 0x23b2, 0x7ee, 0x0, 0x0);
        gbc.writeMem(0xc445, { 0x29 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcacc, gbc.sp());
        EXPECT(0xc446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc445));
        // 29 0339
        gbc.setState(0xee82, 0x70c5, 0x4080, 0xc3b4, 0xd369, 0x21b2, 0x0, 0x1);
        gbc.writeMem(0xee82, { 0x29 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x70c5, gbc.sp());
        EXPECT(0xee83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xee82));
        // 29 033A
        gbc.setState(0x7304, 0xdee1, 0x3990, 0x1509, 0x3d2c, 0x3299, 0x1, 0x0);
        gbc.writeMem(0x7304, { 0x29 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdee1, gbc.sp());
        EXPECT(0x7305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 033B
        gbc.setState(0x47a, 0x9b59, 0x5fd0, 0xfac, 0xe4ec, 0xf77a, 0x1, 0x1);
        gbc.writeMem(0x47a, { 0x29 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9b59, gbc.sp());
        EXPECT(0x47b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 033C
        gbc.setState(0xbe61, 0xa39b, 0x4c70, 0x6a16, 0xc7d2, 0x6a3, 0x1, 0x1);
        gbc.writeMem(0xbe61, { 0x29 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa39b, gbc.sp());
        EXPECT(0xbe62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbe61));
        // 29 033D
        gbc.setState(0x2248, 0x6400, 0xe060, 0x6340, 0x462e, 0x86d6, 0x0, 0x1);
        gbc.writeMem(0x2248, { 0x29 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6400, gbc.sp());
        EXPECT(0x2249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 033E
        gbc.setState(0x9a1b, 0x5785, 0xbb10, 0xc8d0, 0xd8aa, 0x1b8, 0x0, 0x0);
        gbc.writeMem(0x9a1b, { 0x29 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5785, gbc.sp());
        EXPECT(0x9a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9a1b));
        // 29 033F
        gbc.setState(0x2670, 0x7711, 0x8e70, 0x5b5a, 0xd886, 0x764b, 0x0, 0x0);
        gbc.writeMem(0x2670, { 0x29 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7711, gbc.sp());
        EXPECT(0x2671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0340
        gbc.setState(0x11be, 0xb026, 0x5e00, 0x8e13, 0x6fa, 0x1b, 0x1, 0x1);
        gbc.writeMem(0x11be, { 0x29 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb026, gbc.sp());
        EXPECT(0x11bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0341
        gbc.setState(0x9ec6, 0x724, 0xc1a0, 0xb4df, 0x7462, 0xe301, 0x0, 0x1);
        gbc.writeMem(0x9ec6, { 0x29 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x724, gbc.sp());
        EXPECT(0x9ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9ec6));
        // 29 0342
        gbc.setState(0x3d7, 0x1bd3, 0x32f0, 0x676e, 0x62c0, 0xc61d, 0x1, 0x0);
        gbc.writeMem(0x3d7, { 0x29 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1bd3, gbc.sp());
        EXPECT(0x3d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0343
        gbc.setState(0x5f17, 0x57f5, 0xe750, 0x582a, 0xa4db, 0x6d65, 0x0, 0x0);
        gbc.writeMem(0x5f17, { 0x29 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x57f5, gbc.sp());
        EXPECT(0x5f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0344
        gbc.setState(0xdeb0, 0x4128, 0xa870, 0x582d, 0xb61c, 0xcfd8, 0x0, 0x0);
        gbc.writeMem(0xdeb0, { 0x29 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4128, gbc.sp());
        EXPECT(0xdeb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdeb0));
        // 29 0345
        gbc.setState(0x8a12, 0xd066, 0xf040, 0xdf55, 0x9ff8, 0x1bab, 0x0, 0x1);
        gbc.writeMem(0x8a12, { 0x29 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd066, gbc.sp());
        EXPECT(0x8a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8a12));
        // 29 0346
        gbc.setState(0x109b, 0x2764, 0x4a90, 0x70d1, 0x356, 0x567c, 0x1, 0x0);
        gbc.writeMem(0x109b, { 0x29 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2764, gbc.sp());
        EXPECT(0x109c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0347
        gbc.setState(0xd495, 0xeba5, 0xad0, 0xf70f, 0x87f5, 0x8926, 0x0, 0x1);
        gbc.writeMem(0xd495, { 0x29 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xeba5, gbc.sp());
        EXPECT(0xd496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd495));
        // 29 0348
        gbc.setState(0x5179, 0x6861, 0x6b30, 0x9f68, 0x12f2, 0xa8d4, 0x0, 0x1);
        gbc.writeMem(0x5179, { 0x29 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6861, gbc.sp());
        EXPECT(0x517a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0349
        gbc.setState(0x6af8, 0xa2a3, 0x2920, 0xbcfc, 0x5218, 0x5c34, 0x1, 0x0);
        gbc.writeMem(0x6af8, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa2a3, gbc.sp());
        EXPECT(0x6af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 034A
        gbc.setState(0x1889, 0x3ff2, 0x5520, 0xdddf, 0x9c5a, 0xb041, 0x0, 0x0);
        gbc.writeMem(0x1889, { 0x29 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3ff2, gbc.sp());
        EXPECT(0x188a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 034B
        gbc.setState(0xcd20, 0x467c, 0x1190, 0x41c, 0x5a13, 0x4562, 0x1, 0x1);
        gbc.writeMem(0xcd20, { 0x29 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x467c, gbc.sp());
        EXPECT(0xcd21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcd20));
        // 29 034C
        gbc.setState(0x3b48, 0x73b3, 0xc9d0, 0x660a, 0xd98c, 0x2fb, 0x1, 0x0);
        gbc.writeMem(0x3b48, { 0x29 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x73b3, gbc.sp());
        EXPECT(0x3b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 034E
        gbc.setState(0x9f73, 0x5c79, 0x6b40, 0x1618, 0x72c3, 0x8422, 0x1, 0x1);
        gbc.writeMem(0x9f73, { 0x29 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5c79, gbc.sp());
        EXPECT(0x9f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9f73));
        // 29 034F
        gbc.setState(0xaf9d, 0x30fd, 0x8610, 0x22e4, 0x8db4, 0xdca8, 0x0, 0x1);
        gbc.writeMem(0xaf9d, { 0x29 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x30fd, gbc.sp());
        EXPECT(0xaf9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xaf9d));
        // 29 0350
        gbc.setState(0x6408, 0xab6e, 0x74b0, 0x4ea3, 0x8bc3, 0xc0f2, 0x0, 0x0);
        gbc.writeMem(0x6408, { 0x29 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xab6e, gbc.sp());
        EXPECT(0x6409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0351
        gbc.setState(0x3a49, 0x98e8, 0x2cd0, 0x8c4b, 0xd7c8, 0x4251, 0x0, 0x0);
        gbc.writeMem(0x3a49, { 0x29 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x98e8, gbc.sp());
        EXPECT(0x3a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0352
        gbc.setState(0xade5, 0xc336, 0xb220, 0xe38d, 0xdfc4, 0xdf7b, 0x0, 0x1);
        gbc.writeMem(0xade5, { 0x29 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc336, gbc.sp());
        EXPECT(0xade6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xade5));
        // 29 0353
        gbc.setState(0xb13a, 0xd848, 0x3dc0, 0xb19e, 0xc622, 0xbf87, 0x0, 0x1);
        gbc.writeMem(0xb13a, { 0x29 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd848, gbc.sp());
        EXPECT(0xb13b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb13a));
        // 29 0354
        gbc.setState(0x5c44, 0x2a25, 0xcff0, 0xa35e, 0xe15e, 0xf171, 0x1, 0x0);
        gbc.writeMem(0x5c44, { 0x29 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2a25, gbc.sp());
        EXPECT(0x5c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0355
        gbc.setState(0xbacd, 0x5b67, 0xc0b0, 0xdfe9, 0x8420, 0xa389, 0x0, 0x1);
        gbc.writeMem(0xbacd, { 0x29 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5b67, gbc.sp());
        EXPECT(0xbace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbacd));
        // 29 0356
        gbc.setState(0x7283, 0xc602, 0x3ff0, 0x3862, 0x723b, 0xe597, 0x0, 0x1);
        gbc.writeMem(0x7283, { 0x29 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc602, gbc.sp());
        EXPECT(0x7284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0357
        gbc.setState(0x8051, 0x7859, 0xdd90, 0x307b, 0x3343, 0x8583, 0x1, 0x0);
        gbc.writeMem(0x8051, { 0x29 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7859, gbc.sp());
        EXPECT(0x8052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8051));
        // 29 0358
        gbc.setState(0xe833, 0x57da, 0xe990, 0x8936, 0x62bd, 0x50b4, 0x0, 0x1);
        gbc.writeMem(0xe833, { 0x29 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x57da, gbc.sp());
        EXPECT(0xe834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe833));
        // 29 0359
        gbc.setState(0x97a8, 0xa6f1, 0x2ab0, 0x2dec, 0xd9e8, 0xb1d5, 0x1, 0x0);
        gbc.writeMem(0x97a8, { 0x29 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa6f1, gbc.sp());
        EXPECT(0x97a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x97a8));
        // 29 035B
        gbc.setState(0xd2d4, 0x6293, 0xb0c0, 0x81a4, 0x3f1c, 0xed74, 0x0, 0x0);
        gbc.writeMem(0xd2d4, { 0x29 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6293, gbc.sp());
        EXPECT(0xd2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd2d4));
        // 29 035C
        gbc.setState(0x6bf4, 0x7249, 0x78b0, 0xd16c, 0x688d, 0x99e6, 0x0, 0x0);
        gbc.writeMem(0x6bf4, { 0x29 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7249, gbc.sp());
        EXPECT(0x6bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 035D
        gbc.setState(0xe64e, 0x2b76, 0xe210, 0x8306, 0xed75, 0x49ae, 0x1, 0x0);
        gbc.writeMem(0xe64e, { 0x29 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2b76, gbc.sp());
        EXPECT(0xe64f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe64e));
        // 29 035E
        gbc.setState(0x2862, 0xe5af, 0xa230, 0x8376, 0xb5f0, 0xfd94, 0x0, 0x1);
        gbc.writeMem(0x2862, { 0x29 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe5af, gbc.sp());
        EXPECT(0x2863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 035F
        gbc.setState(0x327a, 0xa83c, 0xe7e0, 0xb3d8, 0x322d, 0x8e6f, 0x0, 0x0);
        gbc.writeMem(0x327a, { 0x29 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa83c, gbc.sp());
        EXPECT(0x327b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0360
        gbc.setState(0x5668, 0xccff, 0x7fe0, 0x3b11, 0xd7a, 0x6901, 0x1, 0x0);
        gbc.writeMem(0x5668, { 0x29 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xccff, gbc.sp());
        EXPECT(0x5669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0361
        gbc.setState(0xbac9, 0xf401, 0xde00, 0x7f7d, 0xd822, 0xb796, 0x1, 0x1);
        gbc.writeMem(0xbac9, { 0x29 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf401, gbc.sp());
        EXPECT(0xbaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbac9));
        // 29 0362
        gbc.setState(0x359e, 0x726c, 0x2ff0, 0x4d5d, 0x4346, 0xe10f, 0x1, 0x1);
        gbc.writeMem(0x359e, { 0x29 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x726c, gbc.sp());
        EXPECT(0x359f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0363
        gbc.setState(0x22fb, 0xabf0, 0xa2e0, 0xd117, 0x39e, 0x94e, 0x1, 0x1);
        gbc.writeMem(0x22fb, { 0x29 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xabf0, gbc.sp());
        EXPECT(0x22fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0364
        gbc.setState(0xbc04, 0x13ab, 0x5f80, 0x12e8, 0xa12f, 0x9a4d, 0x1, 0x1);
        gbc.writeMem(0xbc04, { 0x29 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x13ab, gbc.sp());
        EXPECT(0xbc05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbc04));
        // 29 0365
        gbc.setState(0x6b5d, 0x93ae, 0x3060, 0xea28, 0x7a8c, 0x81c4, 0x1, 0x0);
        gbc.writeMem(0x6b5d, { 0x29 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x93ae, gbc.sp());
        EXPECT(0x6b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0366
        gbc.setState(0x3f9f, 0xeb7e, 0xb3f0, 0xbbc9, 0x1906, 0x5b3e, 0x0, 0x1);
        gbc.writeMem(0x3f9f, { 0x29 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xeb7e, gbc.sp());
        EXPECT(0x3fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0367
        gbc.setState(0x60aa, 0xa55b, 0x3240, 0x8a91, 0xf607, 0x192f, 0x0, 0x0);
        gbc.writeMem(0x60aa, { 0x29 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa55b, gbc.sp());
        EXPECT(0x60ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0368
        gbc.setState(0x5aa4, 0xdc2, 0xe3a0, 0x2d9d, 0xd811, 0x2b1b, 0x1, 0x0);
        gbc.writeMem(0x5aa4, { 0x29 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdc2, gbc.sp());
        EXPECT(0x5aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0369
        gbc.setState(0x9e8f, 0x724a, 0xbb70, 0xace, 0xd7f, 0x6a9e, 0x0, 0x1);
        gbc.writeMem(0x9e8f, { 0x29 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x724a, gbc.sp());
        EXPECT(0x9e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9e8f));
        // 29 036A
        gbc.setState(0x770c, 0x19af, 0x48b0, 0xda9a, 0xf4ad, 0x1b4d, 0x0, 0x1);
        gbc.writeMem(0x770c, { 0x29 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x19af, gbc.sp());
        EXPECT(0x770d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 036B
        gbc.setState(0x62c1, 0xd54c, 0xca00, 0x2e3e, 0xd5be, 0xccbf, 0x1, 0x1);
        gbc.writeMem(0x62c1, { 0x29 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd54c, gbc.sp());
        EXPECT(0x62c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 036C
        gbc.setState(0xc5ae, 0xff82, 0xcde0, 0xa4af, 0x3e6d, 0xfce2, 0x0, 0x1);
        gbc.writeMem(0xc5ae, { 0x29 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xff82, gbc.sp());
        EXPECT(0xc5af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc5ae));
        // 29 036D
        gbc.setState(0x921b, 0x89c0, 0x64b0, 0x6a7, 0x8ac8, 0xf763, 0x0, 0x0);
        gbc.writeMem(0x921b, { 0x29 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x89c0, gbc.sp());
        EXPECT(0x921c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x921b));
        // 29 036E
        gbc.setState(0x4b29, 0x60ff, 0x8bf0, 0x5cf1, 0xaf6c, 0xf1cf, 0x0, 0x1);
        gbc.writeMem(0x4b29, { 0x29 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x60ff, gbc.sp());
        EXPECT(0x4b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 036F
        gbc.setState(0x66c3, 0x899f, 0xb00, 0x6dfd, 0x5069, 0x3c4a, 0x0, 0x1);
        gbc.writeMem(0x66c3, { 0x29 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x899f, gbc.sp());
        EXPECT(0x66c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0370
        gbc.setState(0x4c83, 0xc102, 0xa7f0, 0x25aa, 0xe022, 0xfb12, 0x1, 0x0);
        gbc.writeMem(0x4c83, { 0x29 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc102, gbc.sp());
        EXPECT(0x4c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0371
        gbc.setState(0xcc1e, 0xd40a, 0x60a0, 0x452a, 0xccdc, 0xacea, 0x1, 0x1);
        gbc.writeMem(0xcc1e, { 0x29 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd40a, gbc.sp());
        EXPECT(0xcc1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcc1e));
        // 29 0373
        gbc.setState(0xbd60, 0x4137, 0xda80, 0xe144, 0x5ef6, 0xf559, 0x0, 0x0);
        gbc.writeMem(0xbd60, { 0x29 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4137, gbc.sp());
        EXPECT(0xbd61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbd60));
        // 29 0374
        gbc.setState(0xba89, 0x82eb, 0x1dc0, 0x20a8, 0xc4e3, 0x62c7, 0x1, 0x1);
        gbc.writeMem(0xba89, { 0x29 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x82eb, gbc.sp());
        EXPECT(0xba8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xba89));
        // 29 0375
        gbc.setState(0x2a7c, 0x83e6, 0x30b0, 0x68ec, 0x4cb6, 0x381a, 0x1, 0x1);
        gbc.writeMem(0x2a7c, { 0x29 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x83e6, gbc.sp());
        EXPECT(0x2a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0376
        gbc.setState(0x1534, 0x23fe, 0x70f0, 0x5778, 0xf064, 0x1be0, 0x1, 0x1);
        gbc.writeMem(0x1534, { 0x29 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x23fe, gbc.sp());
        EXPECT(0x1535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0377
        gbc.setState(0x981c, 0xaaac, 0xe730, 0xddd5, 0xc07a, 0xef51, 0x1, 0x0);
        gbc.writeMem(0x981c, { 0x29 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaaac, gbc.sp());
        EXPECT(0x981d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x981c));
        // 29 0378
        gbc.setState(0x5ad3, 0xf3ae, 0x9d00, 0x63e3, 0xe932, 0xa1d2, 0x1, 0x0);
        gbc.writeMem(0x5ad3, { 0x29 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf3ae, gbc.sp());
        EXPECT(0x5ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0379
        gbc.setState(0x9df5, 0x62cd, 0xc0f0, 0x8624, 0x3800, 0xd1c3, 0x1, 0x0);
        gbc.writeMem(0x9df5, { 0x29 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x62cd, gbc.sp());
        EXPECT(0x9df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9df5));
        // 29 037A
        gbc.setState(0x597d, 0x7d76, 0x6ec0, 0xf482, 0xb577, 0x6776, 0x1, 0x0);
        gbc.writeMem(0x597d, { 0x29 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7d76, gbc.sp());
        EXPECT(0x597e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 037B
        gbc.setState(0xe837, 0x326c, 0xd890, 0x3991, 0x9bdf, 0x9b19, 0x0, 0x0);
        gbc.writeMem(0xe837, { 0x29 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x326c, gbc.sp());
        EXPECT(0xe838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe837));
        // 29 037C
        gbc.setState(0x6bf3, 0x1d06, 0x8740, 0x54e8, 0xea1d, 0x15e2, 0x0, 0x1);
        gbc.writeMem(0x6bf3, { 0x29 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1d06, gbc.sp());
        EXPECT(0x6bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 037E
        gbc.setState(0x2bb2, 0x10f2, 0x7480, 0xeb1d, 0x5c8, 0xefe8, 0x1, 0x0);
        gbc.writeMem(0x2bb2, { 0x29 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x10f2, gbc.sp());
        EXPECT(0x2bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 037F
        gbc.setState(0xd3bf, 0x7ba9, 0x5980, 0x99a6, 0xdd53, 0x1b43, 0x1, 0x1);
        gbc.writeMem(0xd3bf, { 0x29 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7ba9, gbc.sp());
        EXPECT(0xd3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd3bf));
        // 29 0380
        gbc.setState(0x780d, 0x542a, 0x2e00, 0xf616, 0xb36b, 0xf94e, 0x1, 0x0);
        gbc.writeMem(0x780d, { 0x29 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x542a, gbc.sp());
        EXPECT(0x780e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0381
        gbc.setState(0x95fa, 0x4af0, 0x5b20, 0xf925, 0x209c, 0x7ccc, 0x1, 0x1);
        gbc.writeMem(0x95fa, { 0x29 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4af0, gbc.sp());
        EXPECT(0x95fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x95fa));
        // 29 0382
        gbc.setState(0x6601, 0x3a7f, 0x1ea0, 0xd416, 0x9d60, 0x2779, 0x1, 0x1);
        gbc.writeMem(0x6601, { 0x29 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3a7f, gbc.sp());
        EXPECT(0x6602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0383
        gbc.setState(0xfd2, 0x324d, 0x50d0, 0x999, 0x6499, 0xf876, 0x0, 0x0);
        gbc.writeMem(0xfd2, { 0x29 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x324d, gbc.sp());
        EXPECT(0xfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0384
        gbc.setState(0x34fb, 0xeee6, 0x7d60, 0x2eee, 0x8df9, 0x8838, 0x1, 0x0);
        gbc.writeMem(0x34fb, { 0x29 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xeee6, gbc.sp());
        EXPECT(0x34fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0385
        gbc.setState(0x9807, 0xb762, 0xf700, 0x725c, 0x1245, 0xe58, 0x0, 0x0);
        gbc.writeMem(0x9807, { 0x29 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb762, gbc.sp());
        EXPECT(0x9808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9807));
        // 29 0386
        gbc.setState(0x4c9b, 0x20c3, 0xb1c0, 0xb8ec, 0xe7e6, 0xda78, 0x0, 0x1);
        gbc.writeMem(0x4c9b, { 0x29 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x20c3, gbc.sp());
        EXPECT(0x4c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0387
        gbc.setState(0xc502, 0x38c7, 0xaee0, 0x8396, 0xd1a2, 0xbd12, 0x1, 0x1);
        gbc.writeMem(0xc502, { 0x29 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x38c7, gbc.sp());
        EXPECT(0xc503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc502));
        // 29 0388
        gbc.setState(0xc217, 0xf20d, 0xdbb0, 0x88d3, 0xcdec, 0x86b2, 0x0, 0x0);
        gbc.writeMem(0xc217, { 0x29 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf20d, gbc.sp());
        EXPECT(0xc218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc217));
        // 29 0389
        gbc.setState(0xc710, 0x49ae, 0xd3c0, 0x2c5f, 0x64bc, 0xb455, 0x0, 0x0);
        gbc.writeMem(0xc710, { 0x29 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x49ae, gbc.sp());
        EXPECT(0xc711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc710));
        // 29 038A
        gbc.setState(0x69c9, 0x72b5, 0x7ad0, 0x303, 0x26f8, 0xfaeb, 0x0, 0x0);
        gbc.writeMem(0x69c9, { 0x29 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x72b5, gbc.sp());
        EXPECT(0x69ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 038B
        gbc.setState(0xd3d5, 0x8a08, 0x3d10, 0xa426, 0xf453, 0xd842, 0x1, 0x1);
        gbc.writeMem(0xd3d5, { 0x29 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8a08, gbc.sp());
        EXPECT(0xd3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd3d5));
        // 29 038C
        gbc.setState(0x622, 0xee66, 0x3160, 0xc836, 0x9faa, 0xca94, 0x1, 0x0);
        gbc.writeMem(0x622, { 0x29 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xee66, gbc.sp());
        EXPECT(0x623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 038D
        gbc.setState(0xd828, 0x6739, 0x6640, 0xa3b2, 0xab58, 0x32f0, 0x1, 0x0);
        gbc.writeMem(0xd828, { 0x29 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6739, gbc.sp());
        EXPECT(0xd829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd828));
        // 29 038E
        gbc.setState(0x9c42, 0x35a1, 0x5990, 0x7129, 0x35f8, 0xd0e6, 0x1, 0x1);
        gbc.writeMem(0x9c42, { 0x29 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x35a1, gbc.sp());
        EXPECT(0x9c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9c42));
        // 29 038F
        gbc.setState(0x3734, 0xa53e, 0xdf00, 0xa16, 0x3206, 0xb64f, 0x1, 0x0);
        gbc.writeMem(0x3734, { 0x29 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa53e, gbc.sp());
        EXPECT(0x3735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0390
        gbc.setState(0x3ff, 0xd62b, 0x3140, 0x2e23, 0x4170, 0x7e36, 0x1, 0x1);
        gbc.writeMem(0x3ff, { 0x29 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd62b, gbc.sp());
        EXPECT(0x400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0391
        gbc.setState(0x57d3, 0x70e, 0x66a0, 0xf226, 0xbf55, 0x2533, 0x0, 0x1);
        gbc.writeMem(0x57d3, { 0x29 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x70e, gbc.sp());
        EXPECT(0x57d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0392
        gbc.setState(0x7b0, 0xb71e, 0xd1c0, 0xef68, 0x4c22, 0x4245, 0x1, 0x0);
        gbc.writeMem(0x7b0, { 0x29 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb71e, gbc.sp());
        EXPECT(0x7b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0393
        gbc.setState(0x9fae, 0x58c1, 0x3db0, 0xa729, 0xf00d, 0x52e, 0x1, 0x0);
        gbc.writeMem(0x9fae, { 0x29 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x58c1, gbc.sp());
        EXPECT(0x9faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9fae));
        // 29 0394
        gbc.setState(0xd4d8, 0x78de, 0x5770, 0x44dc, 0xb5ef, 0x350a, 0x1, 0x1);
        gbc.writeMem(0xd4d8, { 0x29 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x78de, gbc.sp());
        EXPECT(0xd4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd4d8));
        // 29 0395
        gbc.setState(0xc61d, 0x86b9, 0xeb20, 0x13e2, 0xea9d, 0x51e0, 0x0, 0x1);
        gbc.writeMem(0xc61d, { 0x29 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x86b9, gbc.sp());
        EXPECT(0xc61e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc61d));
        // 29 0396
        gbc.setState(0x3e12, 0xd828, 0x6a70, 0x9275, 0x5c92, 0x4fd5, 0x1, 0x0);
        gbc.writeMem(0x3e12, { 0x29 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd828, gbc.sp());
        EXPECT(0x3e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 0397
        gbc.setState(0x5302, 0xa215, 0x3900, 0x6f8d, 0x8e1f, 0xfc26, 0x0, 0x0);
        gbc.writeMem(0x5302, { 0x29 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa215, gbc.sp());
        EXPECT(0x5303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 0399
        gbc.setState(0x3fe9, 0x72d8, 0xb010, 0xf9f3, 0x2e4e, 0x9a9b, 0x0, 0x1);
        gbc.writeMem(0x3fe9, { 0x29 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x72d8, gbc.sp());
        EXPECT(0x3fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 039A
        gbc.setState(0xe81, 0x6488, 0x7900, 0x6d25, 0xd609, 0xdd95, 0x0, 0x0);
        gbc.writeMem(0xe81, { 0x29 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6488, gbc.sp());
        EXPECT(0xe82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 039B
        gbc.setState(0xa6c4, 0x712e, 0x860, 0x215, 0xaf8, 0xb0b8, 0x1, 0x0);
        gbc.writeMem(0xa6c4, { 0x29 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x712e, gbc.sp());
        EXPECT(0xa6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa6c4));
        // 29 039C
        gbc.setState(0x5d0d, 0x3243, 0x6710, 0xc87d, 0xd961, 0xd83f, 0x1, 0x1);
        gbc.writeMem(0x5d0d, { 0x29 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3243, gbc.sp());
        EXPECT(0x5d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 039D
        gbc.setState(0x5033, 0xc1de, 0x9310, 0x5330, 0xe33a, 0x55b4, 0x0, 0x1);
        gbc.writeMem(0x5033, { 0x29 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc1de, gbc.sp());
        EXPECT(0x5034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 039F
        gbc.setState(0xa19e, 0x4bb4, 0xc3d0, 0xbb53, 0xbbde, 0x78f2, 0x1, 0x0);
        gbc.writeMem(0xa19e, { 0x29 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4bb4, gbc.sp());
        EXPECT(0xa19f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa19e));
        // 29 03A0
        gbc.setState(0x4bac, 0x1933, 0x2290, 0x488b, 0xedc, 0x2698, 0x1, 0x1);
        gbc.writeMem(0x4bac, { 0x29 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1933, gbc.sp());
        EXPECT(0x4bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03A1
        gbc.setState(0xbeec, 0x20f4, 0xa110, 0x822d, 0xc15, 0xeb86, 0x0, 0x1);
        gbc.writeMem(0xbeec, { 0x29 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x20f4, gbc.sp());
        EXPECT(0xbeed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbeec));
        // 29 03A2
        gbc.setState(0x88b3, 0x9bf9, 0x9de0, 0xda86, 0xbf7f, 0xa032, 0x0, 0x0);
        gbc.writeMem(0x88b3, { 0x29 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9bf9, gbc.sp());
        EXPECT(0x88b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x88b3));
        // 29 03A3
        gbc.setState(0x5e99, 0xa649, 0x16e0, 0x8c05, 0x41c4, 0xec04, 0x1, 0x0);
        gbc.writeMem(0x5e99, { 0x29 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa649, gbc.sp());
        EXPECT(0x5e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03A4
        gbc.setState(0xc2a9, 0x1f3, 0x7bc0, 0x2789, 0xb5dd, 0x7cc5, 0x1, 0x0);
        gbc.writeMem(0xc2a9, { 0x29 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1f3, gbc.sp());
        EXPECT(0xc2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc2a9));
        // 29 03A5
        gbc.setState(0x2b8a, 0xd206, 0xe2a0, 0x48e1, 0xb212, 0x51d5, 0x0, 0x0);
        gbc.writeMem(0x2b8a, { 0x29 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd206, gbc.sp());
        EXPECT(0x2b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03A6
        gbc.setState(0xdc49, 0xd54e, 0xb0a0, 0x2f75, 0xc2a0, 0x8e72, 0x0, 0x1);
        gbc.writeMem(0xdc49, { 0x29 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd54e, gbc.sp());
        EXPECT(0xdc4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdc49));
        // 29 03A7
        gbc.setState(0x75a2, 0x5276, 0x1c30, 0x441a, 0x93ed, 0x11b3, 0x1, 0x1);
        gbc.writeMem(0x75a2, { 0x29 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5276, gbc.sp());
        EXPECT(0x75a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03A8
        gbc.setState(0x811d, 0x9023, 0x8ef0, 0x7ac9, 0x7c64, 0x4779, 0x1, 0x0);
        gbc.writeMem(0x811d, { 0x29 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9023, gbc.sp());
        EXPECT(0x811e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x811d));
        // 29 03A9
        gbc.setState(0xca3e, 0xbe98, 0x70d0, 0x9fcd, 0x3dc9, 0x3e4d, 0x1, 0x1);
        gbc.writeMem(0xca3e, { 0x29 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbe98, gbc.sp());
        EXPECT(0xca3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xca3e));
        // 29 03AA
        gbc.setState(0x76e5, 0xf9ef, 0x5620, 0x866e, 0xe267, 0x41b0, 0x1, 0x0);
        gbc.writeMem(0x76e5, { 0x29 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf9ef, gbc.sp());
        EXPECT(0x76e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03AB
        gbc.setState(0x7750, 0xed9e, 0xa820, 0x795c, 0x23ff, 0xed59, 0x1, 0x0);
        gbc.writeMem(0x7750, { 0x29 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xed9e, gbc.sp());
        EXPECT(0x7751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03AC
        gbc.setState(0xf12, 0xe8a0, 0xf340, 0x6bdc, 0xf86f, 0x5277, 0x0, 0x0);
        gbc.writeMem(0xf12, { 0x29 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe8a0, gbc.sp());
        EXPECT(0xf13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03AD
        gbc.setState(0x1f86, 0xabe1, 0x98f0, 0x5191, 0x73c2, 0x8a4, 0x1, 0x0);
        gbc.writeMem(0x1f86, { 0x29 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xabe1, gbc.sp());
        EXPECT(0x1f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03AE
        gbc.setState(0x842f, 0x49ba, 0xe390, 0x2b2b, 0xbefa, 0x413e, 0x0, 0x0);
        gbc.writeMem(0x842f, { 0x29 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x49ba, gbc.sp());
        EXPECT(0x8430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x842f));
        // 29 03AF
        gbc.setState(0xed03, 0xa941, 0xa9c0, 0xf204, 0x2e5, 0x50ae, 0x0, 0x0);
        gbc.writeMem(0xed03, { 0x29 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa941, gbc.sp());
        EXPECT(0xed04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xed03));
        // 29 03B0
        gbc.setState(0xbb6c, 0x7720, 0x95b0, 0x7d88, 0xfdfe, 0xca07, 0x0, 0x1);
        gbc.writeMem(0xbb6c, { 0x29 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7720, gbc.sp());
        EXPECT(0xbb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbb6c));
        // 29 03B1
        gbc.setState(0xf04, 0x2109, 0xb230, 0x7164, 0x340b, 0xda2f, 0x1, 0x1);
        gbc.writeMem(0xf04, { 0x29 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2109, gbc.sp());
        EXPECT(0xf05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03B2
        gbc.setState(0x720d, 0xb9e7, 0x6fc0, 0xeaa1, 0xe036, 0x1127, 0x0, 0x0);
        gbc.writeMem(0x720d, { 0x29 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb9e7, gbc.sp());
        EXPECT(0x720e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03B3
        gbc.setState(0xd685, 0x4bd3, 0xb460, 0x9da6, 0x92be, 0xec8b, 0x0, 0x0);
        gbc.writeMem(0xd685, { 0x29 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4bd3, gbc.sp());
        EXPECT(0xd686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd685));
        // 29 03B4
        gbc.setState(0xd6df, 0xb9b0, 0x8510, 0x287c, 0x34ea, 0x1b0d, 0x1, 0x0);
        gbc.writeMem(0xd6df, { 0x29 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb9b0, gbc.sp());
        EXPECT(0xd6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd6df));
        // 29 03B5
        gbc.setState(0xc08, 0xda18, 0xbe40, 0xa2b1, 0xca0, 0x9beb, 0x0, 0x1);
        gbc.writeMem(0xc08, { 0x29 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xda18, gbc.sp());
        EXPECT(0xc09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03B6
        gbc.setState(0x18, 0x37a9, 0x9640, 0x1960, 0xf128, 0x592, 0x0, 0x1);
        gbc.writeMem(0x18, { 0x29 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x37a9, gbc.sp());
        EXPECT(0x19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03B7
        gbc.setState(0x6707, 0x2c49, 0xd790, 0x690e, 0xf40b, 0x69e5, 0x1, 0x0);
        gbc.writeMem(0x6707, { 0x29 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2c49, gbc.sp());
        EXPECT(0x6708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03B8
        gbc.setState(0x382b, 0x1fd9, 0xa840, 0xe4c8, 0xd56, 0xa9ca, 0x0, 0x0);
        gbc.writeMem(0x382b, { 0x29 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1fd9, gbc.sp());
        EXPECT(0x382c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03B9
        gbc.setState(0x59ce, 0x7125, 0x5100, 0xd8e8, 0x9933, 0xa5fe, 0x1, 0x0);
        gbc.writeMem(0x59ce, { 0x29 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7125, gbc.sp());
        EXPECT(0x59cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03BA
        gbc.setState(0x9aa9, 0xb7cd, 0x4fa0, 0xa2da, 0xe56c, 0x4325, 0x1, 0x1);
        gbc.writeMem(0x9aa9, { 0x29 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb7cd, gbc.sp());
        EXPECT(0x9aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9aa9));
        // 29 03BB
        gbc.setState(0xe1a2, 0xee37, 0x6000, 0xcd2f, 0x3d8d, 0x1b8, 0x1, 0x1);
        gbc.writeMem(0xe1a2, { 0x29 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xee37, gbc.sp());
        EXPECT(0xe1a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe1a2));
        // 29 03BC
        gbc.setState(0x26d3, 0xb034, 0x3fc0, 0x71f0, 0x3c22, 0xead1, 0x0, 0x0);
        gbc.writeMem(0x26d3, { 0x29 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb034, gbc.sp());
        EXPECT(0x26d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03BD
        gbc.setState(0x5a11, 0xbe63, 0x2670, 0x8199, 0x74a, 0x37d6, 0x1, 0x1);
        gbc.writeMem(0x5a11, { 0x29 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbe63, gbc.sp());
        EXPECT(0x5a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03BE
        gbc.setState(0xac07, 0xd9be, 0x22b0, 0xa5ec, 0x480, 0xd08d, 0x0, 0x0);
        gbc.writeMem(0xac07, { 0x29 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd9be, gbc.sp());
        EXPECT(0xac08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xac07));
        // 29 03BF
        gbc.setState(0xc696, 0xc640, 0xd030, 0xe4bf, 0xb82c, 0x78dc, 0x1, 0x0);
        gbc.writeMem(0xc696, { 0x29 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc640, gbc.sp());
        EXPECT(0xc697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc696));
        // 29 03C0
        gbc.setState(0x71cd, 0xafbb, 0x5910, 0xe23e, 0xb045, 0xa44c, 0x0, 0x1);
        gbc.writeMem(0x71cd, { 0x29 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xafbb, gbc.sp());
        EXPECT(0x71ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03C1
        gbc.setState(0xa9d6, 0xd3ba, 0xa290, 0x4dd3, 0xd49a, 0x6a8a, 0x0, 0x1);
        gbc.writeMem(0xa9d6, { 0x29 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd3ba, gbc.sp());
        EXPECT(0xa9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa9d6));
        // 29 03C3
        gbc.setState(0xae33, 0x911d, 0x100, 0x4513, 0xdd8b, 0xf103, 0x1, 0x1);
        gbc.writeMem(0xae33, { 0x29 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x911d, gbc.sp());
        EXPECT(0xae34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xae33));
        // 29 03C4
        gbc.setState(0xc3bb, 0x2ad7, 0xe3d0, 0x7cde, 0xad2d, 0xfebf, 0x0, 0x0);
        gbc.writeMem(0xc3bb, { 0x29 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2ad7, gbc.sp());
        EXPECT(0xc3bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc3bb));
        // 29 03C5
        gbc.setState(0x2060, 0x8326, 0xd590, 0x2e54, 0xec23, 0xd930, 0x0, 0x1);
        gbc.writeMem(0x2060, { 0x29 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8326, gbc.sp());
        EXPECT(0x2061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03C6
        gbc.setState(0x8293, 0x2696, 0x31e0, 0x3f95, 0x3b9d, 0x8323, 0x1, 0x0);
        gbc.writeMem(0x8293, { 0x29 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2696, gbc.sp());
        EXPECT(0x8294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8293));
        // 29 03C7
        gbc.setState(0x7854, 0xc8a1, 0x3be0, 0x610d, 0x7b9e, 0x3ee0, 0x1, 0x0);
        gbc.writeMem(0x7854, { 0x29 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc8a1, gbc.sp());
        EXPECT(0x7855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03C8
        gbc.setState(0xbfb2, 0x85b0, 0x3380, 0x3590, 0xef56, 0x2273, 0x1, 0x0);
        gbc.writeMem(0xbfb2, { 0x29 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x85b0, gbc.sp());
        EXPECT(0xbfb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbfb2));
        // 29 03C9
        gbc.setState(0x6b0f, 0xd5f8, 0x8110, 0x3f4e, 0xa9a7, 0x60a5, 0x1, 0x0);
        gbc.writeMem(0x6b0f, { 0x29 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd5f8, gbc.sp());
        EXPECT(0x6b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03CA
        gbc.setState(0xad89, 0x3edd, 0xd480, 0x5e32, 0xb620, 0xb084, 0x1, 0x1);
        gbc.writeMem(0xad89, { 0x29 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3edd, gbc.sp());
        EXPECT(0xad8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xad89));
        // 29 03CB
        gbc.setState(0xadf5, 0xf971, 0xed00, 0x82fe, 0x8a05, 0xc802, 0x1, 0x0);
        gbc.writeMem(0xadf5, { 0x29 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf971, gbc.sp());
        EXPECT(0xadf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xadf5));
        // 29 03CC
        gbc.setState(0xe3bc, 0x63ec, 0xd280, 0x7cf1, 0xb99f, 0x7fd3, 0x0, 0x1);
        gbc.writeMem(0xe3bc, { 0x29 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x63ec, gbc.sp());
        EXPECT(0xe3bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe3bc));
        // 29 03CD
        gbc.setState(0x95ca, 0x433d, 0xd190, 0x7ed4, 0x7c69, 0x1048, 0x1, 0x0);
        gbc.writeMem(0x95ca, { 0x29 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x433d, gbc.sp());
        EXPECT(0x95cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x95ca));
        // 29 03CE
        gbc.setState(0xceb6, 0x7ff4, 0x3960, 0x1e6f, 0xd721, 0xa894, 0x0, 0x1);
        gbc.writeMem(0xceb6, { 0x29 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7ff4, gbc.sp());
        EXPECT(0xceb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xceb6));
        // 29 03CF
        gbc.setState(0x14b6, 0xe239, 0x6ad0, 0x1f80, 0x4a7, 0x29a, 0x0, 0x0);
        gbc.writeMem(0x14b6, { 0x29 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe239, gbc.sp());
        EXPECT(0x14b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03D0
        gbc.setState(0x69c8, 0x3335, 0x6f10, 0xf4b7, 0xeadc, 0x88a9, 0x0, 0x1);
        gbc.writeMem(0x69c8, { 0x29 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3335, gbc.sp());
        EXPECT(0x69c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03D1
        gbc.setState(0x404d, 0xb817, 0x6ff0, 0x7546, 0xe7a2, 0xb95b, 0x0, 0x1);
        gbc.writeMem(0x404d, { 0x29 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb817, gbc.sp());
        EXPECT(0x404e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03D2
        gbc.setState(0x5edb, 0xd1b2, 0x200, 0x795b, 0x5768, 0xa453, 0x1, 0x1);
        gbc.writeMem(0x5edb, { 0x29 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd1b2, gbc.sp());
        EXPECT(0x5edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03D3
        gbc.setState(0xd82e, 0xf98c, 0xcb00, 0xab7c, 0x6f7d, 0x8f21, 0x1, 0x0);
        gbc.writeMem(0xd82e, { 0x29 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf98c, gbc.sp());
        EXPECT(0xd82f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd82e));
        // 29 03D4
        gbc.setState(0x8c00, 0xab8e, 0x7e50, 0x91d5, 0xfbf, 0xe27a, 0x0, 0x0);
        gbc.writeMem(0x8c00, { 0x29 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xab8e, gbc.sp());
        EXPECT(0x8c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8c00));
        // 29 03D5
        gbc.setState(0xc31f, 0x13b3, 0xe010, 0x2580, 0xd982, 0x1b8b, 0x1, 0x1);
        gbc.writeMem(0xc31f, { 0x29 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x13b3, gbc.sp());
        EXPECT(0xc320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc31f));
        // 29 03D6
        gbc.setState(0xb7ab, 0x7fcd, 0x3f20, 0x3206, 0x2de, 0x4231, 0x0, 0x1);
        gbc.writeMem(0xb7ab, { 0x29 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7fcd, gbc.sp());
        EXPECT(0xb7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb7ab));
        // 29 03D7
        gbc.setState(0x8627, 0x6fca, 0xce50, 0x2bd6, 0xe5c1, 0xcb64, 0x0, 0x1);
        gbc.writeMem(0x8627, { 0x29 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6fca, gbc.sp());
        EXPECT(0x8628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8627));
        // 29 03D8
        gbc.setState(0x5945, 0xd012, 0xb930, 0xd7af, 0x926c, 0x304b, 0x1, 0x1);
        gbc.writeMem(0x5945, { 0x29 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd012, gbc.sp());
        EXPECT(0x5946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03D9
        gbc.setState(0x811c, 0xf637, 0xbf50, 0x52a8, 0x82b3, 0xf90f, 0x0, 0x0);
        gbc.writeMem(0x811c, { 0x29 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf637, gbc.sp());
        EXPECT(0x811d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x811c));
        // 29 03DA
        gbc.setState(0x2c55, 0xd356, 0x2e0, 0x110b, 0x9cc1, 0x33eb, 0x0, 0x1);
        gbc.writeMem(0x2c55, { 0x29 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd356, gbc.sp());
        EXPECT(0x2c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03DB
        gbc.setState(0xb48d, 0xbd73, 0xfa70, 0xb80c, 0xa029, 0x71f4, 0x0, 0x1);
        gbc.writeMem(0xb48d, { 0x29 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbd73, gbc.sp());
        EXPECT(0xb48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb48d));
        // 29 03DC
        gbc.setState(0x1812, 0xb6ad, 0xbed0, 0xc76f, 0x4067, 0x4637, 0x1, 0x1);
        gbc.writeMem(0x1812, { 0x29 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb6ad, gbc.sp());
        EXPECT(0x1813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03DD
        gbc.setState(0x8796, 0x57de, 0x2590, 0x781f, 0xcd87, 0x3415, 0x1, 0x0);
        gbc.writeMem(0x8796, { 0x29 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x57de, gbc.sp());
        EXPECT(0x8797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8796));
        // 29 03DE
        gbc.setState(0x3612, 0x3eca, 0xf830, 0x65aa, 0x2e99, 0x4c5d, 0x1, 0x0);
        gbc.writeMem(0x3612, { 0x29 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3eca, gbc.sp());
        EXPECT(0x3613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03DF
        gbc.setState(0x1970, 0xc568, 0xe450, 0xa59e, 0x4525, 0x3abf, 0x1, 0x0);
        gbc.writeMem(0x1970, { 0x29 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc568, gbc.sp());
        EXPECT(0x1971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 29 03E0
        gbc.setState(0xcf94, 0xce44, 0xb790, 0xa985, 0xef93, 0x2d2f, 0x0, 0x0);
        gbc.writeMem(0xcf94, { 0x29 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xce44, gbc.sp());
        EXPECT(0xcf95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcf94));
        // 29 03E1
        gbc.setState(0x1f05, 0xe29, 0x19c0, 0x95c7, 0x481, 0xb8f1, 0x1, 0x0);
        gbc.writeMem(0x1f05, { 0x29 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe29, gbc.sp());
        EXPECT(0x1f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03E2
        gbc.setState(0xc98, 0x12b, 0x2fc0, 0xb685, 0xd774, 0xbc02, 0x0, 0x1);
        gbc.writeMem(0xc98, { 0x29 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x12b, gbc.sp());
        EXPECT(0xc99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03E3
        gbc.setState(0x4470, 0x7edf, 0x1760, 0x2bbf, 0x3ce1, 0xadc0, 0x1, 0x0);
        gbc.writeMem(0x4470, { 0x29 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7edf, gbc.sp());
        EXPECT(0x4471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03E4
        gbc.setState(0x3e6f, 0x7f1d, 0x7ed0, 0x93c, 0x41bb, 0xb794, 0x1, 0x0);
        gbc.writeMem(0x3e6f, { 0x29 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7f1d, gbc.sp());
        EXPECT(0x3e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03E6
        gbc.setState(0x379f, 0x4746, 0x3990, 0x5dd1, 0x7d3c, 0xf97f, 0x0, 0x1);
        gbc.writeMem(0x379f, { 0x29 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4746, gbc.sp());
        EXPECT(0x37a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 29 03E7
        gbc.setState(0xae73, 0x9df, 0xb7b0, 0xa288, 0x1492, 0x6560, 0x1, 0x1);
        gbc.writeMem(0xae73, { 0x29 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9df, gbc.sp());
        EXPECT(0xae74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xae73));
    }
