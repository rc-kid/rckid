    TEST(gbcemu, opcode_cb_1a) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 1A 0000
        gbc.setState(0xf16, 0xcf42, 0x2140, 0x4251, 0x192b, 0xb803, 0x1, 0x0);
        gbc.writeMem(0xf16, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcf42, gbc.sp());
        EXPECT(0xf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0001
        gbc.setState(0xee49, 0x2d1b, 0xbfc0, 0x1378, 0xd438, 0xb3e6, 0x1, 0x1);
        gbc.writeMem(0xee49, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2d1b, gbc.sp());
        EXPECT(0xee4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee49));
        EXPECT(0x1a, gbc.readMem(0xee4a));
        // CB 1A 0002
        gbc.setState(0xd232, 0x9713, 0xc6b0, 0x9fb7, 0x6158, 0x1be6, 0x0, 0x1);
        gbc.writeMem(0xd232, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9713, gbc.sp());
        EXPECT(0xd234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd232));
        EXPECT(0x1a, gbc.readMem(0xd233));
        // CB 1A 0003
        gbc.setState(0x2e48, 0x2e, 0x3810, 0x97e6, 0x753, 0x8030, 0x0, 0x0);
        gbc.writeMem(0x2e48, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2e, gbc.sp());
        EXPECT(0x2e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0004
        gbc.setState(0x274b, 0x292f, 0xe840, 0xa95c, 0x498d, 0xf7fb, 0x0, 0x0);
        gbc.writeMem(0x274b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x292f, gbc.sp());
        EXPECT(0x274d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0005
        gbc.setState(0x8a3c, 0x3417, 0xf970, 0x63c8, 0xac28, 0x9bdb, 0x0, 0x0);
        gbc.writeMem(0x8a3c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3417, gbc.sp());
        EXPECT(0x8a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a3c));
        EXPECT(0x1a, gbc.readMem(0x8a3d));
        // CB 1A 0006
        gbc.setState(0x6929, 0xed53, 0x3ad0, 0x5a28, 0x7303, 0x4910, 0x0, 0x1);
        gbc.writeMem(0x6929, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xed53, gbc.sp());
        EXPECT(0x692b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0007
        gbc.setState(0xd50b, 0x2148, 0x1d60, 0x4c33, 0x3727, 0x9c46, 0x1, 0x0);
        gbc.writeMem(0xd50b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2148, gbc.sp());
        EXPECT(0xd50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50b));
        EXPECT(0x1a, gbc.readMem(0xd50c));
        // CB 1A 0008
        gbc.setState(0x4103, 0x77fc, 0x3ae0, 0xff8, 0xc8ea, 0x85b1, 0x1, 0x0);
        gbc.writeMem(0x4103, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x77fc, gbc.sp());
        EXPECT(0x4105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0009
        gbc.setState(0x9a13, 0xeffd, 0xab50, 0xe7d, 0xd980, 0x2b4c, 0x0, 0x1);
        gbc.writeMem(0x9a13, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xeffd, gbc.sp());
        EXPECT(0x9a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a13));
        EXPECT(0x1a, gbc.readMem(0x9a14));
        // CB 1A 000A
        gbc.setState(0x6e3d, 0xffdd, 0xc090, 0xb887, 0x756, 0x77a2, 0x0, 0x0);
        gbc.writeMem(0x6e3d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xffdd, gbc.sp());
        EXPECT(0x6e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 000B
        gbc.setState(0x3505, 0xc75e, 0x10f0, 0x5215, 0x2344, 0xea0b, 0x1, 0x1);
        gbc.writeMem(0x3505, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc75e, gbc.sp());
        EXPECT(0x3507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 000C
        gbc.setState(0x6ef, 0x70, 0x1260, 0xd72b, 0xc22e, 0xa211, 0x1, 0x1);
        gbc.writeMem(0x6ef, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x70, gbc.sp());
        EXPECT(0x6f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 000D
        gbc.setState(0xaafd, 0x6c44, 0xb310, 0x6315, 0xd037, 0x42c9, 0x0, 0x1);
        gbc.writeMem(0xaafd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6c44, gbc.sp());
        EXPECT(0xaaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaafd));
        EXPECT(0x1a, gbc.readMem(0xaafe));
        // CB 1A 000E
        gbc.setState(0xa21d, 0xd4e5, 0xa390, 0x76, 0x2bd2, 0x6ab8, 0x1, 0x1);
        gbc.writeMem(0xa21d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd4e5, gbc.sp());
        EXPECT(0xa21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa21d));
        EXPECT(0x1a, gbc.readMem(0xa21e));
        // CB 1A 000F
        gbc.setState(0x4e74, 0x8056, 0xf2d0, 0x4c7d, 0xd2a2, 0x3cff, 0x0, 0x0);
        gbc.writeMem(0x4e74, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8056, gbc.sp());
        EXPECT(0x4e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0010
        gbc.setState(0x362e, 0x72cb, 0x5040, 0x1e5c, 0x91a6, 0x5fe7, 0x0, 0x1);
        gbc.writeMem(0x362e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x72cb, gbc.sp());
        EXPECT(0x3630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0011
        gbc.setState(0x450b, 0x7a54, 0xfc30, 0x7c53, 0xfea3, 0x260e, 0x1, 0x0);
        gbc.writeMem(0x450b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7a54, gbc.sp());
        EXPECT(0x450d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0012
        gbc.setState(0x2edc, 0xb7d0, 0x74c0, 0xbca0, 0xdb58, 0xe3d, 0x0, 0x0);
        gbc.writeMem(0x2edc, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb7d0, gbc.sp());
        EXPECT(0x2ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0014
        gbc.setState(0x9271, 0xcabe, 0x29e0, 0x8feb, 0x59cd, 0x97ba, 0x1, 0x0);
        gbc.writeMem(0x9271, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcabe, gbc.sp());
        EXPECT(0x9273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9271));
        EXPECT(0x1a, gbc.readMem(0x9272));
        // CB 1A 0015
        gbc.setState(0xb014, 0x2718, 0x33c0, 0x8976, 0x4e6c, 0xc1b4, 0x1, 0x0);
        gbc.writeMem(0xb014, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2718, gbc.sp());
        EXPECT(0xb016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb014));
        EXPECT(0x1a, gbc.readMem(0xb015));
        // CB 1A 0016
        gbc.setState(0xe5bb, 0x2344, 0x2950, 0x9715, 0x6097, 0xe666, 0x0, 0x0);
        gbc.writeMem(0xe5bb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2344, gbc.sp());
        EXPECT(0xe5bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5bb));
        EXPECT(0x1a, gbc.readMem(0xe5bc));
        // CB 1A 0017
        gbc.setState(0xc99f, 0x70ef, 0xbc0, 0x551c, 0x241, 0xd932, 0x1, 0x0);
        gbc.writeMem(0xc99f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x70ef, gbc.sp());
        EXPECT(0xc9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99f));
        EXPECT(0x1a, gbc.readMem(0xc9a0));
        // CB 1A 0018
        gbc.setState(0xea3a, 0x5818, 0xfd00, 0xa9d1, 0x7aa2, 0x7d99, 0x1, 0x0);
        gbc.writeMem(0xea3a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5818, gbc.sp());
        EXPECT(0xea3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3a));
        EXPECT(0x1a, gbc.readMem(0xea3b));
        // CB 1A 0019
        gbc.setState(0x61f5, 0x49f, 0x5310, 0x9a75, 0x37dd, 0xafd1, 0x1, 0x0);
        gbc.writeMem(0x61f5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x49f, gbc.sp());
        EXPECT(0x61f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 001A
        gbc.setState(0xeabe, 0x8f74, 0x9d80, 0x9cd7, 0x707c, 0x947a, 0x1, 0x1);
        gbc.writeMem(0xeabe, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8f74, gbc.sp());
        EXPECT(0xeac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeabe));
        EXPECT(0x1a, gbc.readMem(0xeabf));
        // CB 1A 001B
        gbc.setState(0x3961, 0x86ef, 0x9830, 0xa66a, 0xab39, 0xcbf3, 0x1, 0x0);
        gbc.writeMem(0x3961, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x86ef, gbc.sp());
        EXPECT(0x3963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 001C
        gbc.setState(0x6f, 0x8cc3, 0xa2d0, 0xfcea, 0xd95b, 0x3c61, 0x0, 0x1);
        gbc.writeMem(0x6f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8cc3, gbc.sp());
        EXPECT(0x71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 001D
        gbc.setState(0xf5b, 0xda3e, 0x5f00, 0xd53c, 0x9717, 0x8fc5, 0x1, 0x1);
        gbc.writeMem(0xf5b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xda3e, gbc.sp());
        EXPECT(0xf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 001E
        gbc.setState(0x227, 0xb0c8, 0xf060, 0x5962, 0x75a1, 0xa018, 0x0, 0x0);
        gbc.writeMem(0x227, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb0c8, gbc.sp());
        EXPECT(0x229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 001F
        gbc.setState(0x6787, 0xd26a, 0xd530, 0xafc6, 0x82b2, 0xbdad, 0x1, 0x0);
        gbc.writeMem(0x6787, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd26a, gbc.sp());
        EXPECT(0x6789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0020
        gbc.setState(0xcbe8, 0xbac0, 0xe8e0, 0x6f2c, 0xbb48, 0xb966, 0x0, 0x0);
        gbc.writeMem(0xcbe8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbac0, gbc.sp());
        EXPECT(0xcbea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe8));
        EXPECT(0x1a, gbc.readMem(0xcbe9));
        // CB 1A 0021
        gbc.setState(0xa1f, 0x430f, 0x27a0, 0x17d6, 0x3bc6, 0x6469, 0x0, 0x1);
        gbc.writeMem(0xa1f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x430f, gbc.sp());
        EXPECT(0xa21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0022
        gbc.setState(0x5d4f, 0x72b8, 0x48e0, 0x2387, 0xc2c5, 0xbd75, 0x0, 0x1);
        gbc.writeMem(0x5d4f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x72b8, gbc.sp());
        EXPECT(0x5d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0023
        gbc.setState(0x13e1, 0x8384, 0xee20, 0xf393, 0x30f1, 0x9b75, 0x1, 0x1);
        gbc.writeMem(0x13e1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8384, gbc.sp());
        EXPECT(0x13e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0024
        gbc.setState(0x35d5, 0x9745, 0xeaa0, 0xc344, 0xf02, 0xe61c, 0x0, 0x0);
        gbc.writeMem(0x35d5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9745, gbc.sp());
        EXPECT(0x35d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0025
        gbc.setState(0x392c, 0x4359, 0x6390, 0x4015, 0x2230, 0xf6ee, 0x0, 0x1);
        gbc.writeMem(0x392c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4359, gbc.sp());
        EXPECT(0x392e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0026
        gbc.setState(0x2b0f, 0x2370, 0xbd60, 0x930a, 0x7bfc, 0xb540, 0x0, 0x0);
        gbc.writeMem(0x2b0f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2370, gbc.sp());
        EXPECT(0x2b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0027
        gbc.setState(0xc0ac, 0x42ad, 0x5f20, 0x7828, 0x464d, 0x2de6, 0x1, 0x1);
        gbc.writeMem(0xc0ac, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x42ad, gbc.sp());
        EXPECT(0xc0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ac));
        EXPECT(0x1a, gbc.readMem(0xc0ad));
        // CB 1A 0028
        gbc.setState(0xc3d, 0xa5eb, 0xe490, 0x3a7c, 0x7a5b, 0x13fc, 0x0, 0x1);
        gbc.writeMem(0xc3d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa5eb, gbc.sp());
        EXPECT(0xc3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0029
        gbc.setState(0x67a, 0x64fa, 0x83a0, 0x75e4, 0xd682, 0x5f05, 0x0, 0x0);
        gbc.writeMem(0x67a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x64fa, gbc.sp());
        EXPECT(0x67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 002A
        gbc.setState(0x4612, 0xe728, 0x1ca0, 0xbaed, 0x1898, 0xeeb, 0x0, 0x1);
        gbc.writeMem(0x4612, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe728, gbc.sp());
        EXPECT(0x4614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 002B
        gbc.setState(0x143c, 0x420a, 0x5dd0, 0x9ee2, 0xcbb1, 0xca46, 0x1, 0x0);
        gbc.writeMem(0x143c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x420a, gbc.sp());
        EXPECT(0x143e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 002C
        gbc.setState(0xac9e, 0xf1f0, 0xdaf0, 0x7339, 0xa12c, 0xf7d, 0x1, 0x1);
        gbc.writeMem(0xac9e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf1f0, gbc.sp());
        EXPECT(0xaca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac9e));
        EXPECT(0x1a, gbc.readMem(0xac9f));
        // CB 1A 002D
        gbc.setState(0xa7de, 0xdbf0, 0xfe40, 0xddce, 0x3335, 0x6b, 0x0, 0x0);
        gbc.writeMem(0xa7de, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdbf0, gbc.sp());
        EXPECT(0xa7e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7de));
        EXPECT(0x1a, gbc.readMem(0xa7df));
        // CB 1A 002E
        gbc.setState(0x6305, 0xe461, 0x6770, 0xecb7, 0x2649, 0x948f, 0x0, 0x1);
        gbc.writeMem(0x6305, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe461, gbc.sp());
        EXPECT(0x6307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 002F
        gbc.setState(0xaf07, 0xcca, 0x9360, 0x2de6, 0x3fdd, 0xc624, 0x0, 0x0);
        gbc.writeMem(0xaf07, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcca, gbc.sp());
        EXPECT(0xaf09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf07));
        EXPECT(0x1a, gbc.readMem(0xaf08));
        // CB 1A 0030
        gbc.setState(0x53cd, 0xd479, 0xab50, 0xfafc, 0xcb53, 0x28c9, 0x0, 0x1);
        gbc.writeMem(0x53cd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd479, gbc.sp());
        EXPECT(0x53cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0031
        gbc.setState(0x16ee, 0x304c, 0xd680, 0xea32, 0xbc5e, 0x110a, 0x0, 0x1);
        gbc.writeMem(0x16ee, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x304c, gbc.sp());
        EXPECT(0x16f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0032
        gbc.setState(0xbbd2, 0xfb9e, 0x5990, 0x437b, 0xdd19, 0xa944, 0x1, 0x1);
        gbc.writeMem(0xbbd2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfb9e, gbc.sp());
        EXPECT(0xbbd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd2));
        EXPECT(0x1a, gbc.readMem(0xbbd3));
        // CB 1A 0033
        gbc.setState(0x9c6b, 0x9950, 0xca40, 0x90c1, 0xcb64, 0x4064, 0x0, 0x0);
        gbc.writeMem(0x9c6b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9950, gbc.sp());
        EXPECT(0x9c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6b));
        EXPECT(0x1a, gbc.readMem(0x9c6c));
        // CB 1A 0034
        gbc.setState(0xd18, 0xa712, 0xa110, 0x7234, 0xc9da, 0x84e, 0x0, 0x1);
        gbc.writeMem(0xd18, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa712, gbc.sp());
        EXPECT(0xd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0035
        gbc.setState(0x7c3d, 0x4de7, 0xdfa0, 0x9634, 0xf881, 0xde7f, 0x0, 0x1);
        gbc.writeMem(0x7c3d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4de7, gbc.sp());
        EXPECT(0x7c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0036
        gbc.setState(0xaafd, 0x1050, 0x41f0, 0x279b, 0x61a6, 0x9751, 0x0, 0x0);
        gbc.writeMem(0xaafd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1050, gbc.sp());
        EXPECT(0xaaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaafd));
        EXPECT(0x1a, gbc.readMem(0xaafe));
        // CB 1A 0037
        gbc.setState(0x174, 0x2654, 0x1e0, 0x4c1, 0x59ac, 0x68b0, 0x0, 0x0);
        gbc.writeMem(0x174, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2654, gbc.sp());
        EXPECT(0x176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0038
        gbc.setState(0x957d, 0xe5cf, 0x18e0, 0x6263, 0xfb90, 0x7283, 0x0, 0x1);
        gbc.writeMem(0x957d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe5cf, gbc.sp());
        EXPECT(0x957f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957d));
        EXPECT(0x1a, gbc.readMem(0x957e));
        // CB 1A 0039
        gbc.setState(0xed3e, 0x6fe9, 0xa700, 0x6c83, 0x1fca, 0x6056, 0x1, 0x1);
        gbc.writeMem(0xed3e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6fe9, gbc.sp());
        EXPECT(0xed40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed3e));
        EXPECT(0x1a, gbc.readMem(0xed3f));
        // CB 1A 003A
        gbc.setState(0x7a1e, 0x7132, 0x8010, 0x89b1, 0x2b6c, 0x835, 0x0, 0x1);
        gbc.writeMem(0x7a1e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7132, gbc.sp());
        EXPECT(0x7a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 003B
        gbc.setState(0xbac7, 0x5301, 0x98f0, 0xfc27, 0x3381, 0x14d9, 0x1, 0x0);
        gbc.writeMem(0xbac7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5301, gbc.sp());
        EXPECT(0xbac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac7));
        EXPECT(0x1a, gbc.readMem(0xbac8));
        // CB 1A 003C
        gbc.setState(0x507c, 0xa0c6, 0xacf0, 0xd5dd, 0x1a8c, 0x3079, 0x1, 0x0);
        gbc.writeMem(0x507c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa0c6, gbc.sp());
        EXPECT(0x507e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 003D
        gbc.setState(0x6c0c, 0x7451, 0x43d0, 0x9d9e, 0x2864, 0x544e, 0x0, 0x0);
        gbc.writeMem(0x6c0c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7451, gbc.sp());
        EXPECT(0x6c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 003E
        gbc.setState(0x21ae, 0x5947, 0x6a10, 0xe326, 0x90ce, 0xe2e1, 0x0, 0x0);
        gbc.writeMem(0x21ae, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5947, gbc.sp());
        EXPECT(0x21b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 003F
        gbc.setState(0x68e8, 0xb9fd, 0x6630, 0xbb88, 0x5d83, 0x4242, 0x1, 0x1);
        gbc.writeMem(0x68e8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb9fd, gbc.sp());
        EXPECT(0x68ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0040
        gbc.setState(0x7e7a, 0x6e7d, 0xe220, 0x71b6, 0x8345, 0xf170, 0x0, 0x0);
        gbc.writeMem(0x7e7a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6e7d, gbc.sp());
        EXPECT(0x7e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0041
        gbc.setState(0x8129, 0x4ade, 0xb910, 0xc98a, 0xfcca, 0xfdbf, 0x1, 0x0);
        gbc.writeMem(0x8129, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4ade, gbc.sp());
        EXPECT(0x812b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8129));
        EXPECT(0x1a, gbc.readMem(0x812a));
        // CB 1A 0042
        gbc.setState(0x728a, 0xec73, 0x92c0, 0xa272, 0xc981, 0x35bd, 0x1, 0x1);
        gbc.writeMem(0x728a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xec73, gbc.sp());
        EXPECT(0x728c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0043
        gbc.setState(0x399f, 0x3b44, 0x6e30, 0xd510, 0x4910, 0xec1b, 0x1, 0x1);
        gbc.writeMem(0x399f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3b44, gbc.sp());
        EXPECT(0x39a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0044
        gbc.setState(0x9773, 0xc2b3, 0x8b20, 0xe0c4, 0xa62e, 0x3794, 0x1, 0x1);
        gbc.writeMem(0x9773, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc2b3, gbc.sp());
        EXPECT(0x9775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9773));
        EXPECT(0x1a, gbc.readMem(0x9774));
        // CB 1A 0045
        gbc.setState(0x77a1, 0xc80d, 0x6fe0, 0x724a, 0xd2aa, 0xb8d7, 0x1, 0x0);
        gbc.writeMem(0x77a1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc80d, gbc.sp());
        EXPECT(0x77a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0046
        gbc.setState(0xd880, 0x3ab2, 0x6ec0, 0x3e92, 0xccd3, 0x9889, 0x0, 0x0);
        gbc.writeMem(0xd880, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3ab2, gbc.sp());
        EXPECT(0xd882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd880));
        EXPECT(0x1a, gbc.readMem(0xd881));
        // CB 1A 0047
        gbc.setState(0x3912, 0xaa3f, 0x3d60, 0x8a6c, 0xf5d3, 0x70ec, 0x0, 0x1);
        gbc.writeMem(0x3912, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xaa3f, gbc.sp());
        EXPECT(0x3914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0048
        gbc.setState(0x9355, 0x7f96, 0x85b0, 0x6b55, 0xf27e, 0xfaa6, 0x1, 0x0);
        gbc.writeMem(0x9355, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7f96, gbc.sp());
        EXPECT(0x9357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9355));
        EXPECT(0x1a, gbc.readMem(0x9356));
        // CB 1A 0049
        gbc.setState(0x44cc, 0x89d2, 0x9410, 0xdb70, 0x95b1, 0x2785, 0x0, 0x1);
        gbc.writeMem(0x44cc, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x89d2, gbc.sp());
        EXPECT(0x44ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 004A
        gbc.setState(0xeeb2, 0x7eaa, 0xaac0, 0xce46, 0x5e2b, 0x10aa, 0x1, 0x0);
        gbc.writeMem(0xeeb2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7eaa, gbc.sp());
        EXPECT(0xeeb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb2));
        EXPECT(0x1a, gbc.readMem(0xeeb3));
        // CB 1A 004C
        gbc.setState(0x1d80, 0x8c04, 0x3750, 0x1e66, 0x1347, 0xaee6, 0x1, 0x0);
        gbc.writeMem(0x1d80, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8c04, gbc.sp());
        EXPECT(0x1d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 004D
        gbc.setState(0xdf0c, 0x79b, 0xc400, 0xc63a, 0x3ea3, 0x4ad8, 0x0, 0x0);
        gbc.writeMem(0xdf0c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x79b, gbc.sp());
        EXPECT(0xdf0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf0c));
        EXPECT(0x1a, gbc.readMem(0xdf0d));
        // CB 1A 004E
        gbc.setState(0x324e, 0x1ced, 0x5fa0, 0x392f, 0xeb8e, 0x118e, 0x1, 0x0);
        gbc.writeMem(0x324e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1ced, gbc.sp());
        EXPECT(0x3250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 004F
        gbc.setState(0x50dc, 0xb1e5, 0xb1c0, 0x6640, 0xa9f4, 0x8699, 0x1, 0x1);
        gbc.writeMem(0x50dc, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb1e5, gbc.sp());
        EXPECT(0x50de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0050
        gbc.setState(0x2c58, 0x82c7, 0x5bb0, 0xf38f, 0xa5c5, 0x4c09, 0x1, 0x1);
        gbc.writeMem(0x2c58, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x82c7, gbc.sp());
        EXPECT(0x2c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0051
        gbc.setState(0xe9a0, 0x5ed, 0x9120, 0x5829, 0x52e6, 0xb176, 0x0, 0x0);
        gbc.writeMem(0xe9a0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5ed, gbc.sp());
        EXPECT(0xe9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a0));
        EXPECT(0x1a, gbc.readMem(0xe9a1));
        // CB 1A 0053
        gbc.setState(0xb67a, 0x98f5, 0xfd20, 0x9bd2, 0x3db1, 0x7164, 0x1, 0x0);
        gbc.writeMem(0xb67a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x98f5, gbc.sp());
        EXPECT(0xb67c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb67a));
        EXPECT(0x1a, gbc.readMem(0xb67b));
        // CB 1A 0054
        gbc.setState(0xae06, 0x21fa, 0xeda0, 0xeacf, 0x2d7d, 0x70e7, 0x0, 0x0);
        gbc.writeMem(0xae06, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x21fa, gbc.sp());
        EXPECT(0xae08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae06));
        EXPECT(0x1a, gbc.readMem(0xae07));
        // CB 1A 0055
        gbc.setState(0x8c8, 0x9110, 0x8f50, 0x14ec, 0x7e7a, 0x5eba, 0x1, 0x1);
        gbc.writeMem(0x8c8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9110, gbc.sp());
        EXPECT(0x8ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0056
        gbc.setState(0x5a36, 0x3a0a, 0xb1f0, 0x274c, 0x4acf, 0x9a84, 0x0, 0x0);
        gbc.writeMem(0x5a36, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3a0a, gbc.sp());
        EXPECT(0x5a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0057
        gbc.setState(0xcec2, 0xdfa4, 0xcee0, 0x2f37, 0xbd4f, 0xa938, 0x0, 0x0);
        gbc.writeMem(0xcec2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdfa4, gbc.sp());
        EXPECT(0xcec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec2));
        EXPECT(0x1a, gbc.readMem(0xcec3));
        // CB 1A 0058
        gbc.setState(0x14b6, 0xa967, 0x2d70, 0xf7fc, 0x14d6, 0xf64a, 0x1, 0x1);
        gbc.writeMem(0x14b6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa967, gbc.sp());
        EXPECT(0x14b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0059
        gbc.setState(0x8fa8, 0xf8a9, 0x4680, 0xb42e, 0xfea2, 0x6caa, 0x1, 0x0);
        gbc.writeMem(0x8fa8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf8a9, gbc.sp());
        EXPECT(0x8faa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa8));
        EXPECT(0x1a, gbc.readMem(0x8fa9));
        // CB 1A 005A
        gbc.setState(0xbff4, 0x59b9, 0x71d0, 0xb4b0, 0xd06f, 0xcaca, 0x1, 0x0);
        gbc.writeMem(0xbff4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x59b9, gbc.sp());
        EXPECT(0xbff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff4));
        EXPECT(0x1a, gbc.readMem(0xbff5));
        // CB 1A 005B
        gbc.setState(0xbfd5, 0xffd2, 0x6ef0, 0x1df7, 0xc2c1, 0xe913, 0x0, 0x0);
        gbc.writeMem(0xbfd5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xffd2, gbc.sp());
        EXPECT(0xbfd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd5));
        EXPECT(0x1a, gbc.readMem(0xbfd6));
        // CB 1A 005C
        gbc.setState(0x4f49, 0x344e, 0xdf60, 0x4e64, 0x825f, 0x5931, 0x1, 0x0);
        gbc.writeMem(0x4f49, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x344e, gbc.sp());
        EXPECT(0x4f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 005D
        gbc.setState(0x98b1, 0x9cbb, 0x6c80, 0xdadb, 0x9370, 0x7c0d, 0x0, 0x0);
        gbc.writeMem(0x98b1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9cbb, gbc.sp());
        EXPECT(0x98b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b1));
        EXPECT(0x1a, gbc.readMem(0x98b2));
        // CB 1A 005E
        gbc.setState(0x4bc7, 0x9d46, 0x28b0, 0x9a98, 0x4c8, 0xb0f6, 0x0, 0x1);
        gbc.writeMem(0x4bc7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9d46, gbc.sp());
        EXPECT(0x4bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 005F
        gbc.setState(0x33a6, 0x5120, 0xbc50, 0x635e, 0xeba2, 0xc1f2, 0x0, 0x0);
        gbc.writeMem(0x33a6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5120, gbc.sp());
        EXPECT(0x33a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0060
        gbc.setState(0x9b10, 0x5769, 0xc30, 0xd446, 0x7c62, 0x6e14, 0x0, 0x1);
        gbc.writeMem(0x9b10, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5769, gbc.sp());
        EXPECT(0x9b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b10));
        EXPECT(0x1a, gbc.readMem(0x9b11));
        // CB 1A 0061
        gbc.setState(0x74bd, 0x314b, 0xd010, 0x5e31, 0xba26, 0x9f89, 0x0, 0x1);
        gbc.writeMem(0x74bd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x314b, gbc.sp());
        EXPECT(0x74bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0062
        gbc.setState(0x2ec5, 0x22c3, 0x3ce0, 0x5ed8, 0x6376, 0x786e, 0x0, 0x1);
        gbc.writeMem(0x2ec5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x22c3, gbc.sp());
        EXPECT(0x2ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0063
        gbc.setState(0x144a, 0xee3e, 0xe30, 0xfdd, 0xb51a, 0x98ba, 0x0, 0x0);
        gbc.writeMem(0x144a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xee3e, gbc.sp());
        EXPECT(0x144c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0064
        gbc.setState(0x8949, 0x1f5d, 0x1c00, 0xfe16, 0x88c4, 0xc5aa, 0x1, 0x1);
        gbc.writeMem(0x8949, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1f5d, gbc.sp());
        EXPECT(0x894b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8949));
        EXPECT(0x1a, gbc.readMem(0x894a));
        // CB 1A 0065
        gbc.setState(0xa3f, 0xe9f4, 0x7ba0, 0xeffe, 0xdd2a, 0x89a1, 0x1, 0x0);
        gbc.writeMem(0xa3f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe9f4, gbc.sp());
        EXPECT(0xa41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0066
        gbc.setState(0x4150, 0xe426, 0x42c0, 0xb70d, 0xa1ee, 0xee28, 0x0, 0x1);
        gbc.writeMem(0x4150, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe426, gbc.sp());
        EXPECT(0x4152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0067
        gbc.setState(0x5f4f, 0xd4b1, 0x2920, 0x7005, 0x61e6, 0x828a, 0x0, 0x0);
        gbc.writeMem(0x5f4f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd4b1, gbc.sp());
        EXPECT(0x5f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0068
        gbc.setState(0x8294, 0x7f5d, 0x3ad0, 0xcb43, 0xf40f, 0x830c, 0x1, 0x1);
        gbc.writeMem(0x8294, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7f5d, gbc.sp());
        EXPECT(0x8296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8294));
        EXPECT(0x1a, gbc.readMem(0x8295));
        // CB 1A 0069
        gbc.setState(0x54a2, 0x7f59, 0x12d0, 0x5f69, 0x8514, 0x58f7, 0x0, 0x0);
        gbc.writeMem(0x54a2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7f59, gbc.sp());
        EXPECT(0x54a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 006A
        gbc.setState(0x6870, 0xe146, 0x7aa0, 0x4406, 0x26b4, 0x70b8, 0x1, 0x0);
        gbc.writeMem(0x6870, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe146, gbc.sp());
        EXPECT(0x6872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 006B
        gbc.setState(0x80e2, 0x9410, 0x66f0, 0x51f7, 0xf2e, 0x9799, 0x1, 0x0);
        gbc.writeMem(0x80e2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9410, gbc.sp());
        EXPECT(0x80e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e2));
        EXPECT(0x1a, gbc.readMem(0x80e3));
        // CB 1A 006C
        gbc.setState(0x798f, 0x442d, 0xed80, 0x7ae4, 0xb49f, 0x174c, 0x1, 0x1);
        gbc.writeMem(0x798f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x442d, gbc.sp());
        EXPECT(0x7991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 006D
        gbc.setState(0x6879, 0x1bc3, 0x7720, 0x30, 0xb395, 0x4037, 0x1, 0x0);
        gbc.writeMem(0x6879, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1bc3, gbc.sp());
        EXPECT(0x687b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 006E
        gbc.setState(0xac98, 0x99b0, 0x7560, 0xce6a, 0x32d8, 0xee29, 0x1, 0x0);
        gbc.writeMem(0xac98, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x99b0, gbc.sp());
        EXPECT(0xac9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac98));
        EXPECT(0x1a, gbc.readMem(0xac99));
        // CB 1A 006F
        gbc.setState(0x48c, 0xbe35, 0x5320, 0xc79, 0x5b8e, 0x7b35, 0x1, 0x1);
        gbc.writeMem(0x48c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbe35, gbc.sp());
        EXPECT(0x48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0071
        gbc.setState(0xae86, 0xd47c, 0x4a50, 0x353, 0xe5eb, 0x1b95, 0x1, 0x1);
        gbc.writeMem(0xae86, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd47c, gbc.sp());
        EXPECT(0xae88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae86));
        EXPECT(0x1a, gbc.readMem(0xae87));
        // CB 1A 0072
        gbc.setState(0xb67d, 0x8742, 0x190, 0xdc27, 0x4a47, 0xaa45, 0x1, 0x1);
        gbc.writeMem(0xb67d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8742, gbc.sp());
        EXPECT(0xb67f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb67d));
        EXPECT(0x1a, gbc.readMem(0xb67e));
        // CB 1A 0073
        gbc.setState(0x4102, 0xd9a0, 0xc740, 0x1f78, 0x56d, 0x5ba0, 0x1, 0x0);
        gbc.writeMem(0x4102, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd9a0, gbc.sp());
        EXPECT(0x4104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0074
        gbc.setState(0x134c, 0x1ad0, 0x6750, 0x3da2, 0x3d9d, 0xe1a, 0x0, 0x0);
        gbc.writeMem(0x134c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1ad0, gbc.sp());
        EXPECT(0x134e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0075
        gbc.setState(0x35a3, 0xea4b, 0x70a0, 0x5098, 0x5417, 0xc08b, 0x0, 0x1);
        gbc.writeMem(0x35a3, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xea4b, gbc.sp());
        EXPECT(0x35a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0076
        gbc.setState(0x1d62, 0x95db, 0xf00, 0xdeab, 0xba0c, 0x9d3c, 0x1, 0x1);
        gbc.writeMem(0x1d62, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x95db, gbc.sp());
        EXPECT(0x1d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0077
        gbc.setState(0xd04f, 0xefc6, 0xb0b0, 0x5513, 0xbb33, 0x11d1, 0x1, 0x0);
        gbc.writeMem(0xd04f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xefc6, gbc.sp());
        EXPECT(0xd051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd04f));
        EXPECT(0x1a, gbc.readMem(0xd050));
        // CB 1A 0078
        gbc.setState(0x84aa, 0x4c51, 0x5550, 0x97f, 0x4789, 0x684c, 0x0, 0x1);
        gbc.writeMem(0x84aa, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4c51, gbc.sp());
        EXPECT(0x84ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84aa));
        EXPECT(0x1a, gbc.readMem(0x84ab));
        // CB 1A 0079
        gbc.setState(0x65e7, 0xebe1, 0xc0f0, 0xf3c1, 0x4c84, 0x9cf8, 0x0, 0x1);
        gbc.writeMem(0x65e7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xebe1, gbc.sp());
        EXPECT(0x65e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 007A
        gbc.setState(0xdb48, 0x84a2, 0xb2d0, 0x4254, 0xe1d0, 0x3fb8, 0x0, 0x1);
        gbc.writeMem(0xdb48, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x84a2, gbc.sp());
        EXPECT(0xdb4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb48));
        EXPECT(0x1a, gbc.readMem(0xdb49));
        // CB 1A 007B
        gbc.setState(0x4268, 0xc29d, 0x9f0, 0xd802, 0xd25c, 0x1f5f, 0x1, 0x1);
        gbc.writeMem(0x4268, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc29d, gbc.sp());
        EXPECT(0x426a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 007C
        gbc.setState(0x8cb, 0xf138, 0x87c0, 0x58a0, 0x9850, 0x36ff, 0x0, 0x1);
        gbc.writeMem(0x8cb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf138, gbc.sp());
        EXPECT(0x8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 007D
        gbc.setState(0x5e19, 0x3bba, 0x14f0, 0x56b4, 0xf868, 0xad7, 0x0, 0x0);
        gbc.writeMem(0x5e19, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3bba, gbc.sp());
        EXPECT(0x5e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 007E
        gbc.setState(0x7ba3, 0x415, 0x4ca0, 0xd3eb, 0xc31, 0xf0ef, 0x0, 0x1);
        gbc.writeMem(0x7ba3, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x415, gbc.sp());
        EXPECT(0x7ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 007F
        gbc.setState(0xbaa8, 0x5045, 0x6430, 0x66dd, 0xe655, 0xf7a2, 0x1, 0x0);
        gbc.writeMem(0xbaa8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5045, gbc.sp());
        EXPECT(0xbaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa8));
        EXPECT(0x1a, gbc.readMem(0xbaa9));
        // CB 1A 0080
        gbc.setState(0xd1f6, 0xa31, 0x4950, 0x5a3f, 0xc583, 0x905e, 0x1, 0x1);
        gbc.writeMem(0xd1f6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa31, gbc.sp());
        EXPECT(0xd1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f6));
        EXPECT(0x1a, gbc.readMem(0xd1f7));
        // CB 1A 0081
        gbc.setState(0x2718, 0x53e9, 0x1a70, 0x205e, 0x9c49, 0x43e0, 0x0, 0x1);
        gbc.writeMem(0x2718, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x53e9, gbc.sp());
        EXPECT(0x271a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0082
        gbc.setState(0x39d7, 0x1ff9, 0x9a50, 0x7f5c, 0xae78, 0x52ac, 0x0, 0x0);
        gbc.writeMem(0x39d7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1ff9, gbc.sp());
        EXPECT(0x39d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0083
        gbc.setState(0x8d74, 0xf30, 0x3700, 0xc8ad, 0x1907, 0xf1f5, 0x0, 0x0);
        gbc.writeMem(0x8d74, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf30, gbc.sp());
        EXPECT(0x8d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d74));
        EXPECT(0x1a, gbc.readMem(0x8d75));
        // CB 1A 0084
        gbc.setState(0x8782, 0xcaaf, 0x90e0, 0xfe6c, 0x96d3, 0x2bb9, 0x1, 0x0);
        gbc.writeMem(0x8782, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcaaf, gbc.sp());
        EXPECT(0x8784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8782));
        EXPECT(0x1a, gbc.readMem(0x8783));
        // CB 1A 0085
        gbc.setState(0x138b, 0x8cc6, 0x9170, 0x394, 0x93ad, 0xb85a, 0x0, 0x0);
        gbc.writeMem(0x138b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8cc6, gbc.sp());
        EXPECT(0x138d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0086
        gbc.setState(0x7327, 0x6945, 0xaf0, 0x9ff3, 0x5f9a, 0xdef0, 0x0, 0x0);
        gbc.writeMem(0x7327, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6945, gbc.sp());
        EXPECT(0x7329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0087
        gbc.setState(0x5f1f, 0x3410, 0x2280, 0x7d4a, 0x9a2a, 0xd0c1, 0x0, 0x1);
        gbc.writeMem(0x5f1f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3410, gbc.sp());
        EXPECT(0x5f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0088
        gbc.setState(0xc38c, 0xce53, 0x6640, 0xd111, 0x1ec5, 0x797a, 0x0, 0x0);
        gbc.writeMem(0xc38c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xce53, gbc.sp());
        EXPECT(0xc38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc38c));
        EXPECT(0x1a, gbc.readMem(0xc38d));
        // CB 1A 0089
        gbc.setState(0xe600, 0x68ff, 0xec10, 0x4a23, 0x6e96, 0xda5b, 0x1, 0x0);
        gbc.writeMem(0xe600, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x68ff, gbc.sp());
        EXPECT(0xe602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe600));
        EXPECT(0x1a, gbc.readMem(0xe601));
        // CB 1A 008A
        gbc.setState(0xc379, 0xa8fa, 0x21b0, 0xd7c0, 0x310b, 0xd446, 0x1, 0x1);
        gbc.writeMem(0xc379, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa8fa, gbc.sp());
        EXPECT(0xc37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc379));
        EXPECT(0x1a, gbc.readMem(0xc37a));
        // CB 1A 008B
        gbc.setState(0xaa0a, 0x47cb, 0x6360, 0xc082, 0x4bc4, 0xab9c, 0x0, 0x1);
        gbc.writeMem(0xaa0a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x47cb, gbc.sp());
        EXPECT(0xaa0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0a));
        EXPECT(0x1a, gbc.readMem(0xaa0b));
        // CB 1A 008C
        gbc.setState(0xa865, 0x713d, 0x7fb0, 0xcff5, 0xaf64, 0x1d28, 0x0, 0x1);
        gbc.writeMem(0xa865, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x713d, gbc.sp());
        EXPECT(0xa867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa865));
        EXPECT(0x1a, gbc.readMem(0xa866));
        // CB 1A 008D
        gbc.setState(0x9a5e, 0x5eab, 0x38a0, 0xc7c3, 0x25d3, 0xfc1b, 0x1, 0x1);
        gbc.writeMem(0x9a5e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5eab, gbc.sp());
        EXPECT(0x9a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a5e));
        EXPECT(0x1a, gbc.readMem(0x9a5f));
        // CB 1A 008E
        gbc.setState(0x1da9, 0x44dd, 0xe230, 0xc2bc, 0x52ae, 0x19d1, 0x0, 0x0);
        gbc.writeMem(0x1da9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x44dd, gbc.sp());
        EXPECT(0x1dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 008F
        gbc.setState(0x1f40, 0x20ae, 0x5fc0, 0x9a95, 0x5d69, 0x68e0, 0x0, 0x1);
        gbc.writeMem(0x1f40, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x20ae, gbc.sp());
        EXPECT(0x1f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0091
        gbc.setState(0x691b, 0x5d0b, 0x6ff0, 0xcf15, 0x8165, 0x406f, 0x1, 0x0);
        gbc.writeMem(0x691b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5d0b, gbc.sp());
        EXPECT(0x691d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0092
        gbc.setState(0x796a, 0xb49c, 0xe150, 0xe977, 0x4d, 0xd0f1, 0x0, 0x1);
        gbc.writeMem(0x796a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb49c, gbc.sp());
        EXPECT(0x796c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0093
        gbc.setState(0x2c78, 0x4385, 0xcdd0, 0xde35, 0xdee1, 0x4cd5, 0x1, 0x1);
        gbc.writeMem(0x2c78, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4385, gbc.sp());
        EXPECT(0x2c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0094
        gbc.setState(0x6ad7, 0xf8c1, 0x6f50, 0xa772, 0x1e80, 0xe5ae, 0x1, 0x1);
        gbc.writeMem(0x6ad7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf8c1, gbc.sp());
        EXPECT(0x6ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0095
        gbc.setState(0xb197, 0x3c1a, 0x36d0, 0x87cf, 0x4c41, 0x1085, 0x0, 0x1);
        gbc.writeMem(0xb197, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3c1a, gbc.sp());
        EXPECT(0xb199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb197));
        EXPECT(0x1a, gbc.readMem(0xb198));
        // CB 1A 0096
        gbc.setState(0x440, 0x18d, 0x5600, 0x9322, 0xde4d, 0x1d5a, 0x1, 0x1);
        gbc.writeMem(0x440, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x18d, gbc.sp());
        EXPECT(0x442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0097
        gbc.setState(0x4f3d, 0x76fd, 0xbc80, 0x5ee3, 0x8d63, 0x5c51, 0x1, 0x1);
        gbc.writeMem(0x4f3d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x76fd, gbc.sp());
        EXPECT(0x4f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0098
        gbc.setState(0x2850, 0x27e2, 0x67d0, 0x66fe, 0x2f07, 0xc644, 0x0, 0x0);
        gbc.writeMem(0x2850, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x27e2, gbc.sp());
        EXPECT(0x2852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0099
        gbc.setState(0xb1c, 0xe27e, 0x8850, 0x10eb, 0x267f, 0xd8f0, 0x0, 0x1);
        gbc.writeMem(0xb1c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe27e, gbc.sp());
        EXPECT(0xb1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 009A
        gbc.setState(0xe768, 0x1973, 0xf830, 0x2199, 0x8ca7, 0x9f17, 0x0, 0x1);
        gbc.writeMem(0xe768, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1973, gbc.sp());
        EXPECT(0xe76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe768));
        EXPECT(0x1a, gbc.readMem(0xe769));
        // CB 1A 009B
        gbc.setState(0xce60, 0x73d5, 0xd940, 0x4c99, 0x8f4d, 0x59cc, 0x1, 0x1);
        gbc.writeMem(0xce60, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x73d5, gbc.sp());
        EXPECT(0xce62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce60));
        EXPECT(0x1a, gbc.readMem(0xce61));
        // CB 1A 009C
        gbc.setState(0xb1fd, 0x4522, 0x9df0, 0x4ca5, 0xc16c, 0xf6a, 0x1, 0x1);
        gbc.writeMem(0xb1fd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4522, gbc.sp());
        EXPECT(0xb1ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1fd));
        EXPECT(0x1a, gbc.readMem(0xb1fe));
        // CB 1A 009D
        gbc.setState(0x187, 0xaa52, 0x8240, 0x77c0, 0xacb4, 0x21a6, 0x0, 0x1);
        gbc.writeMem(0x187, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xaa52, gbc.sp());
        EXPECT(0x189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 009E
        gbc.setState(0xc98e, 0x1709, 0x1030, 0xe11c, 0x9895, 0x932d, 0x0, 0x1);
        gbc.writeMem(0xc98e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1709, gbc.sp());
        EXPECT(0xc990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98e));
        EXPECT(0x1a, gbc.readMem(0xc98f));
        // CB 1A 009F
        gbc.setState(0x2fff, 0xd38b, 0x310, 0xc64c, 0xccc6, 0xef9f, 0x0, 0x1);
        gbc.writeMem(0x2fff, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd38b, gbc.sp());
        EXPECT(0x3001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00A0
        gbc.setState(0x1327, 0xf90c, 0x1620, 0xb377, 0x6958, 0x4323, 0x0, 0x0);
        gbc.writeMem(0x1327, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf90c, gbc.sp());
        EXPECT(0x1329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00A1
        gbc.setState(0x74db, 0x246a, 0x55d0, 0x209e, 0x2c7a, 0xd14b, 0x1, 0x1);
        gbc.writeMem(0x74db, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x246a, gbc.sp());
        EXPECT(0x74dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00A2
        gbc.setState(0x42e7, 0xfcd5, 0xb580, 0x7688, 0xf96d, 0xb10b, 0x1, 0x0);
        gbc.writeMem(0x42e7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfcd5, gbc.sp());
        EXPECT(0x42e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00A3
        gbc.setState(0x2b5c, 0x54b5, 0xccd0, 0xc4f, 0x9633, 0x78c2, 0x0, 0x0);
        gbc.writeMem(0x2b5c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x54b5, gbc.sp());
        EXPECT(0x2b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00A4
        gbc.setState(0x6232, 0xe719, 0x9410, 0x3570, 0x1431, 0xb272, 0x1, 0x1);
        gbc.writeMem(0x6232, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe719, gbc.sp());
        EXPECT(0x6234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00A5
        gbc.setState(0xebe7, 0x8f65, 0x4680, 0x8afd, 0x5339, 0xa273, 0x0, 0x0);
        gbc.writeMem(0xebe7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8f65, gbc.sp());
        EXPECT(0xebe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe7));
        EXPECT(0x1a, gbc.readMem(0xebe8));
        // CB 1A 00A6
        gbc.setState(0x1e, 0xb57e, 0x250, 0xe0a2, 0x4bf6, 0xfe89, 0x1, 0x1);
        gbc.writeMem(0x1e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb57e, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00A7
        gbc.setState(0xc224, 0xa603, 0x640, 0x2da, 0x5e39, 0xf19e, 0x1, 0x0);
        gbc.writeMem(0xc224, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa603, gbc.sp());
        EXPECT(0xc226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc224));
        EXPECT(0x1a, gbc.readMem(0xc225));
        // CB 1A 00A8
        gbc.setState(0x8f30, 0x80b2, 0xd790, 0xc19b, 0x23, 0x8a14, 0x1, 0x0);
        gbc.writeMem(0x8f30, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x80b2, gbc.sp());
        EXPECT(0x8f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f30));
        EXPECT(0x1a, gbc.readMem(0x8f31));
        // CB 1A 00A9
        gbc.setState(0x1f09, 0xf513, 0xc240, 0x2934, 0x6713, 0x1c96, 0x0, 0x0);
        gbc.writeMem(0x1f09, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf513, gbc.sp());
        EXPECT(0x1f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00AA
        gbc.setState(0xe97e, 0x48be, 0x2d60, 0xb062, 0xa812, 0xf78a, 0x1, 0x0);
        gbc.writeMem(0xe97e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x48be, gbc.sp());
        EXPECT(0xe980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe97e));
        EXPECT(0x1a, gbc.readMem(0xe97f));
        // CB 1A 00AB
        gbc.setState(0xd5c9, 0x9ae5, 0xd400, 0x9241, 0x436e, 0x933c, 0x1, 0x1);
        gbc.writeMem(0xd5c9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9ae5, gbc.sp());
        EXPECT(0xd5cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c9));
        EXPECT(0x1a, gbc.readMem(0xd5ca));
        // CB 1A 00AC
        gbc.setState(0x4629, 0xb569, 0x9ba0, 0x30ba, 0x352f, 0x5e05, 0x1, 0x1);
        gbc.writeMem(0x4629, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb569, gbc.sp());
        EXPECT(0x462b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00AD
        gbc.setState(0xe4c4, 0x808e, 0xa3c0, 0x352d, 0x1f1, 0x9fb5, 0x1, 0x0);
        gbc.writeMem(0xe4c4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x808e, gbc.sp());
        EXPECT(0xe4c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c4));
        EXPECT(0x1a, gbc.readMem(0xe4c5));
        // CB 1A 00AE
        gbc.setState(0x9c18, 0xea35, 0xc4d0, 0x8c11, 0x250d, 0x2bc1, 0x1, 0x0);
        gbc.writeMem(0x9c18, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xea35, gbc.sp());
        EXPECT(0x9c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c18));
        EXPECT(0x1a, gbc.readMem(0x9c19));
        // CB 1A 00AF
        gbc.setState(0x8e2b, 0xf76, 0xb230, 0xd3f2, 0x5541, 0x7fd5, 0x1, 0x0);
        gbc.writeMem(0x8e2b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf76, gbc.sp());
        EXPECT(0x8e2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e2b));
        EXPECT(0x1a, gbc.readMem(0x8e2c));
        // CB 1A 00B0
        gbc.setState(0xd45, 0xca65, 0x7b30, 0xd403, 0xc2f2, 0x7017, 0x1, 0x0);
        gbc.writeMem(0xd45, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xca65, gbc.sp());
        EXPECT(0xd47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00B1
        gbc.setState(0xc115, 0xc9a9, 0x9f10, 0xf43d, 0xc076, 0xea24, 0x0, 0x0);
        gbc.writeMem(0xc115, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc9a9, gbc.sp());
        EXPECT(0xc117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc115));
        EXPECT(0x1a, gbc.readMem(0xc116));
        // CB 1A 00B2
        gbc.setState(0xad7a, 0xe48d, 0x6f60, 0x6928, 0x375e, 0x5614, 0x1, 0x0);
        gbc.writeMem(0xad7a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe48d, gbc.sp());
        EXPECT(0xad7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7a));
        EXPECT(0x1a, gbc.readMem(0xad7b));
        // CB 1A 00B3
        gbc.setState(0xc0f5, 0xb99d, 0x2da0, 0x8ddd, 0xca9d, 0xe7f5, 0x0, 0x0);
        gbc.writeMem(0xc0f5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb99d, gbc.sp());
        EXPECT(0xc0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f5));
        EXPECT(0x1a, gbc.readMem(0xc0f6));
        // CB 1A 00B4
        gbc.setState(0x97da, 0x7946, 0x1740, 0x1857, 0x4e36, 0x17e2, 0x1, 0x1);
        gbc.writeMem(0x97da, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7946, gbc.sp());
        EXPECT(0x97dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97da));
        EXPECT(0x1a, gbc.readMem(0x97db));
        // CB 1A 00B5
        gbc.setState(0x81ca, 0x8d6c, 0x3e60, 0xb3f4, 0x319c, 0xb6e, 0x0, 0x0);
        gbc.writeMem(0x81ca, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8d6c, gbc.sp());
        EXPECT(0x81cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ca));
        EXPECT(0x1a, gbc.readMem(0x81cb));
        // CB 1A 00B6
        gbc.setState(0xa909, 0x590c, 0xdfc0, 0xf213, 0xe6fb, 0x89cf, 0x1, 0x1);
        gbc.writeMem(0xa909, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x590c, gbc.sp());
        EXPECT(0xa90b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa909));
        EXPECT(0x1a, gbc.readMem(0xa90a));
        // CB 1A 00B7
        gbc.setState(0x8e86, 0x3be5, 0xbcc0, 0x4677, 0x620a, 0x80f4, 0x0, 0x1);
        gbc.writeMem(0x8e86, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3be5, gbc.sp());
        EXPECT(0x8e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e86));
        EXPECT(0x1a, gbc.readMem(0x8e87));
        // CB 1A 00B8
        gbc.setState(0xb78d, 0x307a, 0xc0e0, 0x304b, 0xac33, 0x6826, 0x1, 0x0);
        gbc.writeMem(0xb78d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x307a, gbc.sp());
        EXPECT(0xb78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78d));
        EXPECT(0x1a, gbc.readMem(0xb78e));
        // CB 1A 00B9
        gbc.setState(0x50bb, 0xbb5e, 0x5370, 0xebd7, 0x8feb, 0x1179, 0x0, 0x1);
        gbc.writeMem(0x50bb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbb5e, gbc.sp());
        EXPECT(0x50bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00BA
        gbc.setState(0x87b2, 0x7afb, 0x2900, 0xd472, 0x7a12, 0x3639, 0x1, 0x1);
        gbc.writeMem(0x87b2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7afb, gbc.sp());
        EXPECT(0x87b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b2));
        EXPECT(0x1a, gbc.readMem(0x87b3));
        // CB 1A 00BB
        gbc.setState(0x8231, 0xcd0c, 0x3100, 0x17fb, 0x832b, 0x92af, 0x0, 0x1);
        gbc.writeMem(0x8231, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcd0c, gbc.sp());
        EXPECT(0x8233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8231));
        EXPECT(0x1a, gbc.readMem(0x8232));
        // CB 1A 00BC
        gbc.setState(0xcca6, 0x1793, 0xa9d0, 0xab86, 0x85a5, 0x5f43, 0x1, 0x0);
        gbc.writeMem(0xcca6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1793, gbc.sp());
        EXPECT(0xcca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca6));
        EXPECT(0x1a, gbc.readMem(0xcca7));
        // CB 1A 00BD
        gbc.setState(0xe8c5, 0xe5b1, 0x6ba0, 0x221, 0xcfac, 0xd3b4, 0x1, 0x1);
        gbc.writeMem(0xe8c5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe5b1, gbc.sp());
        EXPECT(0xe8c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c5));
        EXPECT(0x1a, gbc.readMem(0xe8c6));
        // CB 1A 00BE
        gbc.setState(0xc54b, 0xaa3, 0x4120, 0xbafc, 0x2224, 0x3e9, 0x1, 0x1);
        gbc.writeMem(0xc54b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xaa3, gbc.sp());
        EXPECT(0xc54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54b));
        EXPECT(0x1a, gbc.readMem(0xc54c));
        // CB 1A 00BF
        gbc.setState(0x27b8, 0x835c, 0xb930, 0xd05, 0x5262, 0x94d0, 0x1, 0x1);
        gbc.writeMem(0x27b8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x835c, gbc.sp());
        EXPECT(0x27ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00C0
        gbc.setState(0xdae5, 0xab10, 0x7ff0, 0x2711, 0xc911, 0x9a05, 0x1, 0x1);
        gbc.writeMem(0xdae5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xab10, gbc.sp());
        EXPECT(0xdae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae5));
        EXPECT(0x1a, gbc.readMem(0xdae6));
        // CB 1A 00C1
        gbc.setState(0xbe1c, 0xbe4e, 0x5960, 0x258b, 0x69d9, 0xf4e5, 0x0, 0x0);
        gbc.writeMem(0xbe1c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbe4e, gbc.sp());
        EXPECT(0xbe1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe1c));
        EXPECT(0x1a, gbc.readMem(0xbe1d));
        // CB 1A 00C2
        gbc.setState(0xe4f4, 0x30af, 0x4890, 0xfcf0, 0x8d1a, 0x4aba, 0x1, 0x1);
        gbc.writeMem(0xe4f4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x30af, gbc.sp());
        EXPECT(0xe4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f4));
        EXPECT(0x1a, gbc.readMem(0xe4f5));
        // CB 1A 00C3
        gbc.setState(0xa5f2, 0xc2e0, 0x2800, 0xf834, 0xb45e, 0xf7ab, 0x1, 0x0);
        gbc.writeMem(0xa5f2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc2e0, gbc.sp());
        EXPECT(0xa5f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f2));
        EXPECT(0x1a, gbc.readMem(0xa5f3));
        // CB 1A 00C4
        gbc.setState(0xbd6, 0x83af, 0xc280, 0x7647, 0x3eb8, 0x2657, 0x1, 0x0);
        gbc.writeMem(0xbd6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x83af, gbc.sp());
        EXPECT(0xbd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00C5
        gbc.setState(0x2239, 0x4d41, 0xcf30, 0xf595, 0x3ae4, 0x49ca, 0x0, 0x1);
        gbc.writeMem(0x2239, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4d41, gbc.sp());
        EXPECT(0x223b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00C6
        gbc.setState(0xa1fe, 0xade, 0x77f0, 0xc27a, 0xb153, 0xd75a, 0x0, 0x0);
        gbc.writeMem(0xa1fe, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xade, gbc.sp());
        EXPECT(0xa200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1fe));
        EXPECT(0x1a, gbc.readMem(0xa1ff));
        // CB 1A 00C7
        gbc.setState(0x8dc4, 0x2310, 0x4290, 0x16b, 0x2a82, 0x8e6b, 0x1, 0x0);
        gbc.writeMem(0x8dc4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2310, gbc.sp());
        EXPECT(0x8dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc4));
        EXPECT(0x1a, gbc.readMem(0x8dc5));
        // CB 1A 00C8
        gbc.setState(0xea26, 0x29c3, 0xbfd0, 0x6cb, 0x6336, 0xd05c, 0x1, 0x0);
        gbc.writeMem(0xea26, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x29c3, gbc.sp());
        EXPECT(0xea28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea26));
        EXPECT(0x1a, gbc.readMem(0xea27));
        // CB 1A 00C9
        gbc.setState(0x55e4, 0x2e61, 0x36b0, 0x580a, 0xe7b2, 0xc7c8, 0x0, 0x0);
        gbc.writeMem(0x55e4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2e61, gbc.sp());
        EXPECT(0x55e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00CA
        gbc.setState(0xbc13, 0x80b7, 0x2230, 0x8b8f, 0xf049, 0xde9b, 0x1, 0x1);
        gbc.writeMem(0xbc13, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x80b7, gbc.sp());
        EXPECT(0xbc15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc13));
        EXPECT(0x1a, gbc.readMem(0xbc14));
        // CB 1A 00CB
        gbc.setState(0xc3ae, 0xf956, 0x260, 0x7f93, 0xfea7, 0xf2b9, 0x0, 0x0);
        gbc.writeMem(0xc3ae, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf956, gbc.sp());
        EXPECT(0xc3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ae));
        EXPECT(0x1a, gbc.readMem(0xc3af));
        // CB 1A 00CC
        gbc.setState(0x6ecf, 0x10a3, 0xad40, 0x9042, 0xbe38, 0xf290, 0x1, 0x0);
        gbc.writeMem(0x6ecf, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x10a3, gbc.sp());
        EXPECT(0x6ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00CD
        gbc.setState(0xceed, 0xc3c5, 0xba00, 0x2134, 0x7f78, 0x4fa8, 0x1, 0x0);
        gbc.writeMem(0xceed, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc3c5, gbc.sp());
        EXPECT(0xceef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceed));
        EXPECT(0x1a, gbc.readMem(0xceee));
        // CB 1A 00CE
        gbc.setState(0x46a5, 0xae6, 0x1460, 0x44b5, 0x965a, 0x6416, 0x0, 0x0);
        gbc.writeMem(0x46a5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xae6, gbc.sp());
        EXPECT(0x46a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00CF
        gbc.setState(0x2bba, 0x9796, 0xdf30, 0xe5f, 0xc682, 0x86fa, 0x0, 0x0);
        gbc.writeMem(0x2bba, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9796, gbc.sp());
        EXPECT(0x2bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00D0
        gbc.setState(0xe7b0, 0xac1, 0xd510, 0x87d2, 0xe1cd, 0xfd38, 0x1, 0x0);
        gbc.writeMem(0xe7b0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xac1, gbc.sp());
        EXPECT(0xe7b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b0));
        EXPECT(0x1a, gbc.readMem(0xe7b1));
        // CB 1A 00D1
        gbc.setState(0xe830, 0x11c8, 0x9650, 0x8830, 0xef08, 0x7e78, 0x1, 0x1);
        gbc.writeMem(0xe830, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x11c8, gbc.sp());
        EXPECT(0xe832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe830));
        EXPECT(0x1a, gbc.readMem(0xe831));
        // CB 1A 00D2
        gbc.setState(0xd2f2, 0x7509, 0x1db0, 0x338e, 0x250b, 0x5957, 0x1, 0x1);
        gbc.writeMem(0xd2f2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7509, gbc.sp());
        EXPECT(0xd2f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f2));
        EXPECT(0x1a, gbc.readMem(0xd2f3));
        // CB 1A 00D3
        gbc.setState(0x29bc, 0xd559, 0x9530, 0xea6a, 0xf8be, 0x1f14, 0x0, 0x0);
        gbc.writeMem(0x29bc, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd559, gbc.sp());
        EXPECT(0x29be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00D4
        gbc.setState(0xab1e, 0x608, 0x17f0, 0x3d80, 0xf91d, 0x4a99, 0x1, 0x0);
        gbc.writeMem(0xab1e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x608, gbc.sp());
        EXPECT(0xab20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab1e));
        EXPECT(0x1a, gbc.readMem(0xab1f));
        // CB 1A 00D5
        gbc.setState(0x18ba, 0xf27c, 0x1b40, 0xa53f, 0x68c4, 0x2f83, 0x0, 0x0);
        gbc.writeMem(0x18ba, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf27c, gbc.sp());
        EXPECT(0x18bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00D6
        gbc.setState(0xe857, 0x11d4, 0x8750, 0x743b, 0x58c7, 0x2fb9, 0x0, 0x1);
        gbc.writeMem(0xe857, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x11d4, gbc.sp());
        EXPECT(0xe859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe857));
        EXPECT(0x1a, gbc.readMem(0xe858));
        // CB 1A 00D7
        gbc.setState(0x70b4, 0x2974, 0x8570, 0xea08, 0x483b, 0xcece, 0x1, 0x1);
        gbc.writeMem(0x70b4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2974, gbc.sp());
        EXPECT(0x70b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00D8
        gbc.setState(0x1485, 0xf53e, 0x3060, 0xd12f, 0x30d2, 0xa70b, 0x1, 0x1);
        gbc.writeMem(0x1485, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf53e, gbc.sp());
        EXPECT(0x1487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00D9
        gbc.setState(0x6c6c, 0xb2, 0xb1f0, 0x2742, 0x8f28, 0x9c22, 0x1, 0x0);
        gbc.writeMem(0x6c6c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb2, gbc.sp());
        EXPECT(0x6c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00DA
        gbc.setState(0xa9f, 0xae02, 0x7e30, 0x732a, 0x4686, 0x80d6, 0x0, 0x1);
        gbc.writeMem(0xa9f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xae02, gbc.sp());
        EXPECT(0xaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00DB
        gbc.setState(0x8fa1, 0x5b36, 0x4190, 0x504b, 0x94ab, 0x158e, 0x0, 0x1);
        gbc.writeMem(0x8fa1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5b36, gbc.sp());
        EXPECT(0x8fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa1));
        EXPECT(0x1a, gbc.readMem(0x8fa2));
        // CB 1A 00DC
        gbc.setState(0x1a98, 0x6210, 0x8670, 0xdbab, 0x9698, 0x1200, 0x1, 0x1);
        gbc.writeMem(0x1a98, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6210, gbc.sp());
        EXPECT(0x1a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00DD
        gbc.setState(0x611e, 0x5709, 0x1e90, 0x6a7d, 0xa221, 0x3e39, 0x0, 0x0);
        gbc.writeMem(0x611e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5709, gbc.sp());
        EXPECT(0x6120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00DE
        gbc.setState(0x61a7, 0x1b62, 0x5fb0, 0xfc6c, 0xd1e8, 0x4219, 0x0, 0x1);
        gbc.writeMem(0x61a7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1b62, gbc.sp());
        EXPECT(0x61a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00DF
        gbc.setState(0xbe6, 0xaff3, 0xe080, 0x5538, 0x576d, 0xa2bb, 0x1, 0x1);
        gbc.writeMem(0xbe6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xaff3, gbc.sp());
        EXPECT(0xbe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00E0
        gbc.setState(0x6ed0, 0x49dd, 0x5640, 0x741a, 0xc0e8, 0x9aeb, 0x0, 0x0);
        gbc.writeMem(0x6ed0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x49dd, gbc.sp());
        EXPECT(0x6ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00E1
        gbc.setState(0x958a, 0xb641, 0x3510, 0x6120, 0xb649, 0x485, 0x0, 0x0);
        gbc.writeMem(0x958a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb641, gbc.sp());
        EXPECT(0x958c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x958a));
        EXPECT(0x1a, gbc.readMem(0x958b));
        // CB 1A 00E2
        gbc.setState(0x1727, 0xeb58, 0x99f0, 0x1724, 0xece, 0x4d3d, 0x1, 0x0);
        gbc.writeMem(0x1727, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xeb58, gbc.sp());
        EXPECT(0x1729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00E3
        gbc.setState(0x40f4, 0x62ab, 0xb060, 0x7c31, 0xa5bd, 0xefb7, 0x1, 0x1);
        gbc.writeMem(0x40f4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x62ab, gbc.sp());
        EXPECT(0x40f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00E4
        gbc.setState(0x6181, 0x54d2, 0x6640, 0x9d44, 0x7375, 0x91f8, 0x0, 0x1);
        gbc.writeMem(0x6181, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x54d2, gbc.sp());
        EXPECT(0x6183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00E5
        gbc.setState(0x87f0, 0x55ec, 0x9690, 0xfc97, 0xb9bf, 0x9ed, 0x0, 0x1);
        gbc.writeMem(0x87f0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x55ec, gbc.sp());
        EXPECT(0x87f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f0));
        EXPECT(0x1a, gbc.readMem(0x87f1));
        // CB 1A 00E6
        gbc.setState(0x3c25, 0xdeb0, 0xf0, 0xc59f, 0x3c7e, 0xd1bc, 0x0, 0x1);
        gbc.writeMem(0x3c25, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdeb0, gbc.sp());
        EXPECT(0x3c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00E7
        gbc.setState(0x5e82, 0xcf1d, 0xb6f0, 0x62f7, 0x86bb, 0xba02, 0x1, 0x0);
        gbc.writeMem(0x5e82, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcf1d, gbc.sp());
        EXPECT(0x5e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00E8
        gbc.setState(0x4e2a, 0xec52, 0x8930, 0x1e83, 0x1be4, 0xe824, 0x0, 0x0);
        gbc.writeMem(0x4e2a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xec52, gbc.sp());
        EXPECT(0x4e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00EA
        gbc.setState(0xb77f, 0x5cc7, 0xfa60, 0x1d4, 0xc59d, 0x774, 0x1, 0x0);
        gbc.writeMem(0xb77f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5cc7, gbc.sp());
        EXPECT(0xb781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77f));
        EXPECT(0x1a, gbc.readMem(0xb780));
        // CB 1A 00EB
        gbc.setState(0xdcb4, 0xd5cd, 0xc6b0, 0xe856, 0xf907, 0xf9e, 0x0, 0x0);
        gbc.writeMem(0xdcb4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd5cd, gbc.sp());
        EXPECT(0xdcb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb4));
        EXPECT(0x1a, gbc.readMem(0xdcb5));
        // CB 1A 00EC
        gbc.setState(0xdcdf, 0xeb17, 0xe100, 0x1bb2, 0x69fb, 0xfa2d, 0x1, 0x0);
        gbc.writeMem(0xdcdf, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xeb17, gbc.sp());
        EXPECT(0xdce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcdf));
        EXPECT(0x1a, gbc.readMem(0xdce0));
        // CB 1A 00ED
        gbc.setState(0x411, 0x84a2, 0xa570, 0x156d, 0xddea, 0x78aa, 0x1, 0x1);
        gbc.writeMem(0x411, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x84a2, gbc.sp());
        EXPECT(0x413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00EE
        gbc.setState(0xe66a, 0x4e1d, 0x5f70, 0x199f, 0xafd5, 0x7f6, 0x1, 0x0);
        gbc.writeMem(0xe66a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4e1d, gbc.sp());
        EXPECT(0xe66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe66a));
        EXPECT(0x1a, gbc.readMem(0xe66b));
        // CB 1A 00EF
        gbc.setState(0x2728, 0xa4d0, 0xa590, 0xaf49, 0x35cf, 0x8b5d, 0x1, 0x1);
        gbc.writeMem(0x2728, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa4d0, gbc.sp());
        EXPECT(0x272a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00F0
        gbc.setState(0x79ca, 0x8e4f, 0xdc80, 0x2dfe, 0xe76b, 0x7f28, 0x1, 0x1);
        gbc.writeMem(0x79ca, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8e4f, gbc.sp());
        EXPECT(0x79cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00F1
        gbc.setState(0xbdf7, 0x2382, 0x12c0, 0x31f0, 0x57fa, 0xd30e, 0x1, 0x0);
        gbc.writeMem(0xbdf7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2382, gbc.sp());
        EXPECT(0xbdf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf7));
        EXPECT(0x1a, gbc.readMem(0xbdf8));
        // CB 1A 00F2
        gbc.setState(0x5d03, 0x9867, 0x7f50, 0x9ee2, 0x8aa4, 0xbf3a, 0x0, 0x1);
        gbc.writeMem(0x5d03, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9867, gbc.sp());
        EXPECT(0x5d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00F3
        gbc.setState(0xbee3, 0xb5ad, 0xe440, 0x4728, 0x8a75, 0x117d, 0x1, 0x0);
        gbc.writeMem(0xbee3, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb5ad, gbc.sp());
        EXPECT(0xbee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee3));
        EXPECT(0x1a, gbc.readMem(0xbee4));
        // CB 1A 00F4
        gbc.setState(0x6a0, 0xc1af, 0x5ee0, 0x2756, 0xd909, 0x9258, 0x1, 0x1);
        gbc.writeMem(0x6a0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc1af, gbc.sp());
        EXPECT(0x6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00F5
        gbc.setState(0x496a, 0xf7f0, 0x19b0, 0x9cac, 0xd238, 0x60ca, 0x0, 0x1);
        gbc.writeMem(0x496a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf7f0, gbc.sp());
        EXPECT(0x496c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00F6
        gbc.setState(0x53f7, 0xdf11, 0xd990, 0xfb90, 0xc295, 0x62ab, 0x0, 0x0);
        gbc.writeMem(0x53f7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdf11, gbc.sp());
        EXPECT(0x53f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00F7
        gbc.setState(0x22b2, 0xf17e, 0x7d30, 0x8525, 0xd271, 0xab83, 0x0, 0x1);
        gbc.writeMem(0x22b2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf17e, gbc.sp());
        EXPECT(0x22b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00F8
        gbc.setState(0xdd46, 0x273e, 0x3620, 0xb5fa, 0x67be, 0xba53, 0x1, 0x0);
        gbc.writeMem(0xdd46, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x273e, gbc.sp());
        EXPECT(0xdd48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd46));
        EXPECT(0x1a, gbc.readMem(0xdd47));
        // CB 1A 00F9
        gbc.setState(0x7a6b, 0xb585, 0x1380, 0xebe1, 0x6a7d, 0xc2e5, 0x1, 0x1);
        gbc.writeMem(0x7a6b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb585, gbc.sp());
        EXPECT(0x7a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 00FA
        gbc.setState(0xe9a, 0x7ba0, 0x2f00, 0x13da, 0x5ba0, 0xe210, 0x0, 0x0);
        gbc.writeMem(0xe9a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7ba0, gbc.sp());
        EXPECT(0xe9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00FB
        gbc.setState(0xa5f, 0x788e, 0x4290, 0xa90e, 0xd10c, 0x8f5e, 0x1, 0x1);
        gbc.writeMem(0xa5f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x788e, gbc.sp());
        EXPECT(0xa61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 00FD
        gbc.setState(0x92d3, 0x306, 0xc090, 0xef4d, 0x200f, 0x77f8, 0x0, 0x1);
        gbc.writeMem(0x92d3, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x306, gbc.sp());
        EXPECT(0x92d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d3));
        EXPECT(0x1a, gbc.readMem(0x92d4));
        // CB 1A 00FE
        gbc.setState(0xc2aa, 0xee8, 0x4e40, 0xebad, 0x51ff, 0x157a, 0x1, 0x0);
        gbc.writeMem(0xc2aa, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xee8, gbc.sp());
        EXPECT(0xc2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2aa));
        EXPECT(0x1a, gbc.readMem(0xc2ab));
        // CB 1A 00FF
        gbc.setState(0x378c, 0xa2f5, 0x3e10, 0x9e05, 0x7103, 0x15db, 0x0, 0x0);
        gbc.writeMem(0x378c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa2f5, gbc.sp());
        EXPECT(0x378e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0100
        gbc.setState(0xa779, 0x9416, 0x3ac0, 0x5c42, 0x2343, 0x69d, 0x1, 0x1);
        gbc.writeMem(0xa779, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9416, gbc.sp());
        EXPECT(0xa77b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa779));
        EXPECT(0x1a, gbc.readMem(0xa77a));
        // CB 1A 0101
        gbc.setState(0xe915, 0x44dc, 0x5520, 0x649f, 0x9da4, 0xf383, 0x1, 0x1);
        gbc.writeMem(0xe915, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x44dc, gbc.sp());
        EXPECT(0xe917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe915));
        EXPECT(0x1a, gbc.readMem(0xe916));
        // CB 1A 0102
        gbc.setState(0xa8d5, 0xc9bc, 0x8380, 0x6514, 0xc87e, 0x6501, 0x1, 0x0);
        gbc.writeMem(0xa8d5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc9bc, gbc.sp());
        EXPECT(0xa8d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d5));
        EXPECT(0x1a, gbc.readMem(0xa8d6));
        // CB 1A 0103
        gbc.setState(0x3e65, 0xd5, 0xcbc0, 0xa9a3, 0xad97, 0x9d37, 0x0, 0x1);
        gbc.writeMem(0x3e65, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd5, gbc.sp());
        EXPECT(0x3e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0104
        gbc.setState(0x7d, 0x219b, 0x3840, 0x62b6, 0x4e50, 0xa152, 0x1, 0x1);
        gbc.writeMem(0x7d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x219b, gbc.sp());
        EXPECT(0x7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0105
        gbc.setState(0x9458, 0xfb83, 0xfee0, 0xe3c7, 0x7eb5, 0xe6dd, 0x1, 0x0);
        gbc.writeMem(0x9458, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfb83, gbc.sp());
        EXPECT(0x945a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9458));
        EXPECT(0x1a, gbc.readMem(0x9459));
        // CB 1A 0106
        gbc.setState(0x1812, 0x43c2, 0x4f10, 0x5fc3, 0x7092, 0xfa20, 0x1, 0x0);
        gbc.writeMem(0x1812, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x43c2, gbc.sp());
        EXPECT(0x1814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0107
        gbc.setState(0x8362, 0xd70a, 0x6200, 0xc49d, 0x968, 0x1c21, 0x0, 0x0);
        gbc.writeMem(0x8362, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd70a, gbc.sp());
        EXPECT(0x8364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8362));
        EXPECT(0x1a, gbc.readMem(0x8363));
        // CB 1A 0108
        gbc.setState(0x8ef7, 0xcc9a, 0x5f80, 0x553e, 0xde18, 0x6eaa, 0x0, 0x0);
        gbc.writeMem(0x8ef7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcc9a, gbc.sp());
        EXPECT(0x8ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef7));
        EXPECT(0x1a, gbc.readMem(0x8ef8));
        // CB 1A 0109
        gbc.setState(0xe4b1, 0xc96d, 0x4f70, 0xc609, 0xcfc8, 0x132a, 0x0, 0x1);
        gbc.writeMem(0xe4b1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc96d, gbc.sp());
        EXPECT(0xe4b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b1));
        EXPECT(0x1a, gbc.readMem(0xe4b2));
        // CB 1A 010A
        gbc.setState(0xb6d9, 0x8096, 0x1460, 0x5ae9, 0xcb2c, 0xc5a5, 0x1, 0x0);
        gbc.writeMem(0xb6d9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8096, gbc.sp());
        EXPECT(0xb6db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d9));
        EXPECT(0x1a, gbc.readMem(0xb6da));
        // CB 1A 010B
        gbc.setState(0x9aec, 0x1a64, 0x2c0, 0x9fba, 0xf31f, 0x2dca, 0x1, 0x0);
        gbc.writeMem(0x9aec, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1a64, gbc.sp());
        EXPECT(0x9aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aec));
        EXPECT(0x1a, gbc.readMem(0x9aed));
        // CB 1A 010C
        gbc.setState(0x83bb, 0x990f, 0x6120, 0x44bd, 0x917, 0x4234, 0x1, 0x0);
        gbc.writeMem(0x83bb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x990f, gbc.sp());
        EXPECT(0x83bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83bb));
        EXPECT(0x1a, gbc.readMem(0x83bc));
        // CB 1A 010D
        gbc.setState(0xaf87, 0xfaf0, 0x6f0, 0x2dd6, 0x69ca, 0xf6a8, 0x1, 0x1);
        gbc.writeMem(0xaf87, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfaf0, gbc.sp());
        EXPECT(0xaf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf87));
        EXPECT(0x1a, gbc.readMem(0xaf88));
        // CB 1A 010E
        gbc.setState(0xe1ed, 0x7d56, 0x8aa0, 0x288d, 0x807d, 0x97aa, 0x1, 0x0);
        gbc.writeMem(0xe1ed, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7d56, gbc.sp());
        EXPECT(0xe1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ed));
        EXPECT(0x1a, gbc.readMem(0xe1ee));
        // CB 1A 0110
        gbc.setState(0x8e91, 0xc2d9, 0xd9d0, 0xc569, 0x2cce, 0xc9e2, 0x1, 0x0);
        gbc.writeMem(0x8e91, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc2d9, gbc.sp());
        EXPECT(0x8e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e91));
        EXPECT(0x1a, gbc.readMem(0x8e92));
        // CB 1A 0111
        gbc.setState(0x4e61, 0xc064, 0x67d0, 0x78ed, 0x9ef8, 0x29c, 0x1, 0x1);
        gbc.writeMem(0x4e61, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc064, gbc.sp());
        EXPECT(0x4e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0112
        gbc.setState(0xde37, 0x96d9, 0x45a0, 0xd4a8, 0xf867, 0x4ba7, 0x1, 0x0);
        gbc.writeMem(0xde37, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x96d9, gbc.sp());
        EXPECT(0xde39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde37));
        EXPECT(0x1a, gbc.readMem(0xde38));
        // CB 1A 0113
        gbc.setState(0x4fee, 0x3807, 0xba70, 0xcb04, 0x5e16, 0xfb3d, 0x0, 0x0);
        gbc.writeMem(0x4fee, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3807, gbc.sp());
        EXPECT(0x4ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0114
        gbc.setState(0x8afd, 0x130e, 0xfb30, 0x17ae, 0xf432, 0x8d95, 0x0, 0x0);
        gbc.writeMem(0x8afd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x130e, gbc.sp());
        EXPECT(0x8aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8afd));
        EXPECT(0x1a, gbc.readMem(0x8afe));
        // CB 1A 0115
        gbc.setState(0xc8d1, 0x7f6f, 0xe370, 0xa5f6, 0xc137, 0xf4ab, 0x1, 0x0);
        gbc.writeMem(0xc8d1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7f6f, gbc.sp());
        EXPECT(0xc8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d1));
        EXPECT(0x1a, gbc.readMem(0xc8d2));
        // CB 1A 0116
        gbc.setState(0x9e39, 0x1cea, 0x63b0, 0x6fb6, 0xb3c4, 0x14dd, 0x0, 0x1);
        gbc.writeMem(0x9e39, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1cea, gbc.sp());
        EXPECT(0x9e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e39));
        EXPECT(0x1a, gbc.readMem(0x9e3a));
        // CB 1A 0117
        gbc.setState(0x9642, 0xfe11, 0x90a0, 0xc3b0, 0x61af, 0x3025, 0x1, 0x0);
        gbc.writeMem(0x9642, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfe11, gbc.sp());
        EXPECT(0x9644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9642));
        EXPECT(0x1a, gbc.readMem(0x9643));
        // CB 1A 0118
        gbc.setState(0x47b2, 0x1e2d, 0xd6c0, 0x1444, 0xd444, 0x473d, 0x1, 0x1);
        gbc.writeMem(0x47b2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1e2d, gbc.sp());
        EXPECT(0x47b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0119
        gbc.setState(0xa1c4, 0xbe88, 0x7b50, 0x4e14, 0x748f, 0x8058, 0x0, 0x0);
        gbc.writeMem(0xa1c4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbe88, gbc.sp());
        EXPECT(0xa1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c4));
        EXPECT(0x1a, gbc.readMem(0xa1c5));
        // CB 1A 011A
        gbc.setState(0x171b, 0x85ca, 0x75a0, 0xfa27, 0x72f0, 0x59f4, 0x1, 0x1);
        gbc.writeMem(0x171b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x85ca, gbc.sp());
        EXPECT(0x171d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 011B
        gbc.setState(0xe4c6, 0x9485, 0x8bd0, 0x6d2, 0x93f1, 0x5dd4, 0x1, 0x1);
        gbc.writeMem(0xe4c6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9485, gbc.sp());
        EXPECT(0xe4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c6));
        EXPECT(0x1a, gbc.readMem(0xe4c7));
        // CB 1A 011C
        gbc.setState(0x5c66, 0x85ee, 0x3010, 0xf963, 0x3f8b, 0x8582, 0x1, 0x1);
        gbc.writeMem(0x5c66, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x85ee, gbc.sp());
        EXPECT(0x5c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 011D
        gbc.setState(0x1f80, 0x2ce9, 0xbe50, 0x6a94, 0xb84d, 0xac92, 0x1, 0x0);
        gbc.writeMem(0x1f80, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2ce9, gbc.sp());
        EXPECT(0x1f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 011E
        gbc.setState(0x5323, 0x6ac2, 0xfd0, 0x8db7, 0xa563, 0xb082, 0x0, 0x1);
        gbc.writeMem(0x5323, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6ac2, gbc.sp());
        EXPECT(0x5325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 011F
        gbc.setState(0x6b89, 0x4b42, 0x5d30, 0x54ae, 0xf927, 0x1897, 0x1, 0x1);
        gbc.writeMem(0x6b89, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4b42, gbc.sp());
        EXPECT(0x6b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0120
        gbc.setState(0x7ae5, 0x5b74, 0xeda0, 0x703, 0x108f, 0x8cf6, 0x0, 0x1);
        gbc.writeMem(0x7ae5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5b74, gbc.sp());
        EXPECT(0x7ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0121
        gbc.setState(0x4ce5, 0x291, 0xc0f0, 0x7208, 0x41b1, 0x810e, 0x1, 0x1);
        gbc.writeMem(0x4ce5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x291, gbc.sp());
        EXPECT(0x4ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0122
        gbc.setState(0x1b1c, 0x5892, 0x6860, 0x124d, 0x1a25, 0x5e4c, 0x1, 0x1);
        gbc.writeMem(0x1b1c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5892, gbc.sp());
        EXPECT(0x1b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0123
        gbc.setState(0xe342, 0x84bc, 0xeb20, 0x5522, 0x194c, 0x1a05, 0x1, 0x1);
        gbc.writeMem(0xe342, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x84bc, gbc.sp());
        EXPECT(0xe344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe342));
        EXPECT(0x1a, gbc.readMem(0xe343));
        // CB 1A 0124
        gbc.setState(0xc71c, 0x2dde, 0xe730, 0x93cc, 0x4f89, 0xaf4f, 0x1, 0x1);
        gbc.writeMem(0xc71c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2dde, gbc.sp());
        EXPECT(0xc71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc71c));
        EXPECT(0x1a, gbc.readMem(0xc71d));
        // CB 1A 0125
        gbc.setState(0x4a4, 0xaed6, 0xfee0, 0x8834, 0x5cd4, 0xdcee, 0x1, 0x0);
        gbc.writeMem(0x4a4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xaed6, gbc.sp());
        EXPECT(0x4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0126
        gbc.setState(0x94b0, 0x931a, 0x26c0, 0x30b7, 0x8499, 0x88c3, 0x1, 0x1);
        gbc.writeMem(0x94b0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x931a, gbc.sp());
        EXPECT(0x94b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b0));
        EXPECT(0x1a, gbc.readMem(0x94b1));
        // CB 1A 0127
        gbc.setState(0xeece, 0x2f40, 0x4860, 0xe026, 0xbb9a, 0x6cdd, 0x1, 0x1);
        gbc.writeMem(0xeece, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2f40, gbc.sp());
        EXPECT(0xeed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeece));
        EXPECT(0x1a, gbc.readMem(0xeecf));
        // CB 1A 0128
        gbc.setState(0x593c, 0x4ce4, 0xe640, 0x6602, 0x7ac3, 0x1c59, 0x0, 0x0);
        gbc.writeMem(0x593c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4ce4, gbc.sp());
        EXPECT(0x593e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0129
        gbc.setState(0x7ba1, 0x6a6b, 0x54f0, 0xcfa4, 0xa5f, 0x53e2, 0x1, 0x0);
        gbc.writeMem(0x7ba1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6a6b, gbc.sp());
        EXPECT(0x7ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 012A
        gbc.setState(0x2588, 0xe8b, 0xfa70, 0xa4ac, 0x5af0, 0x1a6e, 0x1, 0x1);
        gbc.writeMem(0x2588, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe8b, gbc.sp());
        EXPECT(0x258a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 012B
        gbc.setState(0xaeed, 0xd7a, 0x4580, 0xe68a, 0x944d, 0xd645, 0x0, 0x0);
        gbc.writeMem(0xaeed, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd7a, gbc.sp());
        EXPECT(0xaeef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeed));
        EXPECT(0x1a, gbc.readMem(0xaeee));
        // CB 1A 012C
        gbc.setState(0xc0f8, 0xb4bb, 0x58c0, 0x571b, 0x5804, 0xd6f4, 0x0, 0x0);
        gbc.writeMem(0xc0f8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb4bb, gbc.sp());
        EXPECT(0xc0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f8));
        EXPECT(0x1a, gbc.readMem(0xc0f9));
        // CB 1A 012D
        gbc.setState(0x5a58, 0x2c2a, 0xf990, 0xb373, 0x860f, 0x4713, 0x0, 0x1);
        gbc.writeMem(0x5a58, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2c2a, gbc.sp());
        EXPECT(0x5a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 012E
        gbc.setState(0xbad1, 0x6d5b, 0xcdb0, 0xba34, 0xb766, 0xcd3c, 0x1, 0x1);
        gbc.writeMem(0xbad1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6d5b, gbc.sp());
        EXPECT(0xbad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad1));
        EXPECT(0x1a, gbc.readMem(0xbad2));
        // CB 1A 012F
        gbc.setState(0x447, 0x58f, 0x4e80, 0x266c, 0x15de, 0x424, 0x1, 0x0);
        gbc.writeMem(0x447, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x58f, gbc.sp());
        EXPECT(0x449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0130
        gbc.setState(0xdafe, 0xf53a, 0xe960, 0xd335, 0x3eae, 0x22e7, 0x0, 0x0);
        gbc.writeMem(0xdafe, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf53a, gbc.sp());
        EXPECT(0xdb00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdafe));
        EXPECT(0x1a, gbc.readMem(0xdaff));
        // CB 1A 0131
        gbc.setState(0x3f4e, 0x851c, 0xb8c0, 0x1653, 0x36d9, 0x2365, 0x1, 0x1);
        gbc.writeMem(0x3f4e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x851c, gbc.sp());
        EXPECT(0x3f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0132
        gbc.setState(0x94bc, 0x2508, 0xba0, 0x66a8, 0xb33, 0x236f, 0x1, 0x1);
        gbc.writeMem(0x94bc, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2508, gbc.sp());
        EXPECT(0x94be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94bc));
        EXPECT(0x1a, gbc.readMem(0x94bd));
        // CB 1A 0133
        gbc.setState(0xda55, 0x72f3, 0x30, 0x9120, 0x3f9, 0x3d22, 0x1, 0x1);
        gbc.writeMem(0xda55, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x72f3, gbc.sp());
        EXPECT(0xda57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda55));
        EXPECT(0x1a, gbc.readMem(0xda56));
        // CB 1A 0135
        gbc.setState(0xec, 0xbb32, 0x5e90, 0x4c9d, 0xe98a, 0x9a67, 0x0, 0x1);
        gbc.writeMem(0xec, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbb32, gbc.sp());
        EXPECT(0xee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0136
        gbc.setState(0x21bb, 0x4ec5, 0x16d0, 0x8e3f, 0xac89, 0x1e0e, 0x0, 0x1);
        gbc.writeMem(0x21bb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4ec5, gbc.sp());
        EXPECT(0x21bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0137
        gbc.setState(0x2c25, 0x8c1a, 0x20, 0xac15, 0x70f2, 0xd115, 0x1, 0x0);
        gbc.writeMem(0x2c25, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8c1a, gbc.sp());
        EXPECT(0x2c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0138
        gbc.setState(0x59be, 0x5327, 0x7760, 0x214b, 0x4821, 0xc0ca, 0x1, 0x0);
        gbc.writeMem(0x59be, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5327, gbc.sp());
        EXPECT(0x59c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 013A
        gbc.setState(0x15f7, 0x3179, 0xf9a0, 0xf158, 0x477c, 0x9b4, 0x0, 0x0);
        gbc.writeMem(0x15f7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3179, gbc.sp());
        EXPECT(0x15f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 013B
        gbc.setState(0x3bbb, 0xb098, 0xf2e0, 0xa8e6, 0xb5ca, 0x3d92, 0x1, 0x0);
        gbc.writeMem(0x3bbb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb098, gbc.sp());
        EXPECT(0x3bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 013C
        gbc.setState(0x87ad, 0x6574, 0x7230, 0x72ce, 0xd9d8, 0x394d, 0x0, 0x1);
        gbc.writeMem(0x87ad, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6574, gbc.sp());
        EXPECT(0x87af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ad));
        EXPECT(0x1a, gbc.readMem(0x87ae));
        // CB 1A 013D
        gbc.setState(0x7708, 0xdd17, 0x210, 0xd3df, 0xc684, 0x5020, 0x1, 0x0);
        gbc.writeMem(0x7708, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdd17, gbc.sp());
        EXPECT(0x770a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 013E
        gbc.setState(0x3e66, 0xd529, 0xc4d0, 0xf3df, 0x5e74, 0x9c84, 0x1, 0x1);
        gbc.writeMem(0x3e66, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd529, gbc.sp());
        EXPECT(0x3e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 013F
        gbc.setState(0x4093, 0xac51, 0xcc60, 0xdfc0, 0x7e2f, 0xebc0, 0x0, 0x0);
        gbc.writeMem(0x4093, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xac51, gbc.sp());
        EXPECT(0x4095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0140
        gbc.setState(0x7600, 0xf8b8, 0x2f80, 0x6432, 0x45b, 0x64c2, 0x0, 0x1);
        gbc.writeMem(0x7600, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf8b8, gbc.sp());
        EXPECT(0x7602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0141
        gbc.setState(0x87da, 0x996f, 0x88d0, 0x4be, 0x4567, 0x6fd9, 0x1, 0x1);
        gbc.writeMem(0x87da, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x996f, gbc.sp());
        EXPECT(0x87dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87da));
        EXPECT(0x1a, gbc.readMem(0x87db));
        // CB 1A 0142
        gbc.setState(0xa4f3, 0xa44, 0xcef0, 0x7308, 0x14fd, 0x772f, 0x1, 0x0);
        gbc.writeMem(0xa4f3, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa44, gbc.sp());
        EXPECT(0xa4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f3));
        EXPECT(0x1a, gbc.readMem(0xa4f4));
        // CB 1A 0143
        gbc.setState(0xe1a, 0x503c, 0x3aa0, 0x4604, 0xeb66, 0x2c43, 0x0, 0x0);
        gbc.writeMem(0xe1a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x503c, gbc.sp());
        EXPECT(0xe1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0144
        gbc.setState(0x7082, 0x37aa, 0xbb10, 0xbcd3, 0x2dde, 0xb82b, 0x0, 0x0);
        gbc.writeMem(0x7082, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x37aa, gbc.sp());
        EXPECT(0x7084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0145
        gbc.setState(0x13da, 0x9f7, 0xbee0, 0xe2b8, 0xadb8, 0x2ee6, 0x1, 0x0);
        gbc.writeMem(0x13da, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9f7, gbc.sp());
        EXPECT(0x13dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0146
        gbc.setState(0xae1b, 0x860b, 0xad60, 0x2c51, 0xfc60, 0x521d, 0x1, 0x1);
        gbc.writeMem(0xae1b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x860b, gbc.sp());
        EXPECT(0xae1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae1b));
        EXPECT(0x1a, gbc.readMem(0xae1c));
        // CB 1A 0147
        gbc.setState(0x42ab, 0xf307, 0x5080, 0x444, 0x3c6d, 0x11d8, 0x0, 0x1);
        gbc.writeMem(0x42ab, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf307, gbc.sp());
        EXPECT(0x42ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0148
        gbc.setState(0x72e8, 0xfef7, 0x9200, 0xee84, 0x5853, 0xe33d, 0x0, 0x0);
        gbc.writeMem(0x72e8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfef7, gbc.sp());
        EXPECT(0x72ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0149
        gbc.setState(0x39fc, 0x8ce3, 0xbd80, 0x650e, 0x23f4, 0xd458, 0x1, 0x1);
        gbc.writeMem(0x39fc, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8ce3, gbc.sp());
        EXPECT(0x39fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 014A
        gbc.setState(0xa1b, 0x2eef, 0x5e40, 0xffbd, 0xb037, 0x8eab, 0x0, 0x0);
        gbc.writeMem(0xa1b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2eef, gbc.sp());
        EXPECT(0xa1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 014B
        gbc.setState(0x2b55, 0x305b, 0xb9b0, 0x14a8, 0xbb3b, 0xc696, 0x0, 0x1);
        gbc.writeMem(0x2b55, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x305b, gbc.sp());
        EXPECT(0x2b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 014C
        gbc.setState(0xa278, 0x4a3f, 0xcec0, 0x8e1e, 0xf3d3, 0xc82c, 0x1, 0x0);
        gbc.writeMem(0xa278, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4a3f, gbc.sp());
        EXPECT(0xa27a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa278));
        EXPECT(0x1a, gbc.readMem(0xa279));
        // CB 1A 014D
        gbc.setState(0x39ca, 0x4a76, 0x4900, 0xe6a3, 0x3f5f, 0x1389, 0x0, 0x1);
        gbc.writeMem(0x39ca, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4a76, gbc.sp());
        EXPECT(0x39cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 014F
        gbc.setState(0xb072, 0xd346, 0x4a0, 0x9d65, 0x79d0, 0xaae4, 0x1, 0x1);
        gbc.writeMem(0xb072, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd346, gbc.sp());
        EXPECT(0xb074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb072));
        EXPECT(0x1a, gbc.readMem(0xb073));
        // CB 1A 0150
        gbc.setState(0x84f1, 0x1a30, 0xd880, 0x15b8, 0x61db, 0x5caf, 0x1, 0x0);
        gbc.writeMem(0x84f1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1a30, gbc.sp());
        EXPECT(0x84f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f1));
        EXPECT(0x1a, gbc.readMem(0x84f2));
        // CB 1A 0151
        gbc.setState(0x1c67, 0x5e43, 0x9940, 0xf167, 0x4754, 0xe477, 0x0, 0x1);
        gbc.writeMem(0x1c67, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5e43, gbc.sp());
        EXPECT(0x1c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0152
        gbc.setState(0x4094, 0xbede, 0x6400, 0xb708, 0x6718, 0x1377, 0x0, 0x1);
        gbc.writeMem(0x4094, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbede, gbc.sp());
        EXPECT(0x4096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0154
        gbc.setState(0x156, 0xe31, 0x1000, 0x3dd5, 0x9aa9, 0xa24e, 0x1, 0x0);
        gbc.writeMem(0x156, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe31, gbc.sp());
        EXPECT(0x158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0155
        gbc.setState(0x38bd, 0xf8e2, 0xcf90, 0x9a4a, 0xc08a, 0xab35, 0x1, 0x1);
        gbc.writeMem(0x38bd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf8e2, gbc.sp());
        EXPECT(0x38bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0156
        gbc.setState(0x218f, 0xac87, 0xd50, 0x18f5, 0x2867, 0x5b20, 0x0, 0x0);
        gbc.writeMem(0x218f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xac87, gbc.sp());
        EXPECT(0x2191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0157
        gbc.setState(0xbc77, 0x18ae, 0xd540, 0x5f6a, 0x91ce, 0x40d7, 0x1, 0x0);
        gbc.writeMem(0xbc77, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x18ae, gbc.sp());
        EXPECT(0xbc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc77));
        EXPECT(0x1a, gbc.readMem(0xbc78));
        // CB 1A 0158
        gbc.setState(0x34b2, 0xdd06, 0xbda0, 0x9c6d, 0xb5ab, 0xaf98, 0x0, 0x0);
        gbc.writeMem(0x34b2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdd06, gbc.sp());
        EXPECT(0x34b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0159
        gbc.setState(0x416c, 0x1737, 0xfac0, 0x73a9, 0x1382, 0x753b, 0x1, 0x1);
        gbc.writeMem(0x416c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1737, gbc.sp());
        EXPECT(0x416e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 015A
        gbc.setState(0x1c3d, 0xe716, 0xdb0, 0xc3c6, 0xac28, 0xed81, 0x1, 0x1);
        gbc.writeMem(0x1c3d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe716, gbc.sp());
        EXPECT(0x1c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 015B
        gbc.setState(0x2eaa, 0x3d5f, 0x3370, 0x54fc, 0xdbc7, 0x1706, 0x0, 0x0);
        gbc.writeMem(0x2eaa, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3d5f, gbc.sp());
        EXPECT(0x2eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 015C
        gbc.setState(0x8384, 0xc995, 0x4a00, 0x98ca, 0xbb4, 0x99f9, 0x0, 0x1);
        gbc.writeMem(0x8384, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc995, gbc.sp());
        EXPECT(0x8386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8384));
        EXPECT(0x1a, gbc.readMem(0x8385));
        // CB 1A 015D
        gbc.setState(0x7b57, 0x48b9, 0xdbb0, 0xb0f8, 0x7516, 0xd7a6, 0x1, 0x1);
        gbc.writeMem(0x7b57, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x48b9, gbc.sp());
        EXPECT(0x7b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 015E
        gbc.setState(0xc140, 0xce7c, 0x9400, 0x48d0, 0x1551, 0x3847, 0x0, 0x0);
        gbc.writeMem(0xc140, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xce7c, gbc.sp());
        EXPECT(0xc142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc140));
        EXPECT(0x1a, gbc.readMem(0xc141));
        // CB 1A 015F
        gbc.setState(0x9ddc, 0xc63c, 0xa40, 0x4dd1, 0xb8d2, 0xbf89, 0x1, 0x1);
        gbc.writeMem(0x9ddc, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc63c, gbc.sp());
        EXPECT(0x9dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ddc));
        EXPECT(0x1a, gbc.readMem(0x9ddd));
        // CB 1A 0160
        gbc.setState(0x41ba, 0x908f, 0x5790, 0x15a0, 0x406d, 0x68a0, 0x0, 0x0);
        gbc.writeMem(0x41ba, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x908f, gbc.sp());
        EXPECT(0x41bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0161
        gbc.setState(0xb7a9, 0x8f85, 0x51e0, 0xaf00, 0x9616, 0xdf50, 0x0, 0x1);
        gbc.writeMem(0xb7a9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8f85, gbc.sp());
        EXPECT(0xb7ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a9));
        EXPECT(0x1a, gbc.readMem(0xb7aa));
        // CB 1A 0162
        gbc.setState(0x3ee9, 0x8045, 0x38e0, 0xaf05, 0xf032, 0x85ad, 0x1, 0x1);
        gbc.writeMem(0x3ee9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8045, gbc.sp());
        EXPECT(0x3eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0163
        gbc.setState(0x8318, 0x26f6, 0xd040, 0x611a, 0x80fe, 0xd783, 0x0, 0x0);
        gbc.writeMem(0x8318, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x26f6, gbc.sp());
        EXPECT(0x831a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8318));
        EXPECT(0x1a, gbc.readMem(0x8319));
        // CB 1A 0164
        gbc.setState(0x650c, 0xc6b9, 0x2840, 0xcaf1, 0x22f1, 0x847a, 0x0, 0x0);
        gbc.writeMem(0x650c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc6b9, gbc.sp());
        EXPECT(0x650e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0165
        gbc.setState(0xc1c0, 0xd467, 0x9170, 0x7dc2, 0xdb97, 0x1045, 0x0, 0x1);
        gbc.writeMem(0xc1c0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd467, gbc.sp());
        EXPECT(0xc1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c0));
        EXPECT(0x1a, gbc.readMem(0xc1c1));
        // CB 1A 0166
        gbc.setState(0x2003, 0x233d, 0x6cd0, 0x6628, 0xb4fc, 0xcee3, 0x0, 0x1);
        gbc.writeMem(0x2003, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x233d, gbc.sp());
        EXPECT(0x2005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0168
        gbc.setState(0x67a2, 0xfb08, 0xe500, 0x5010, 0xfa7e, 0x4756, 0x0, 0x1);
        gbc.writeMem(0x67a2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfb08, gbc.sp());
        EXPECT(0x67a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0169
        gbc.setState(0x77e7, 0xee31, 0xec50, 0x53b1, 0xeaf0, 0x5419, 0x1, 0x1);
        gbc.writeMem(0x77e7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xee31, gbc.sp());
        EXPECT(0x77e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 016A
        gbc.setState(0xbcec, 0x49f9, 0xe1c0, 0x61fc, 0x321f, 0x89ea, 0x1, 0x1);
        gbc.writeMem(0xbcec, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x49f9, gbc.sp());
        EXPECT(0xbcee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcec));
        EXPECT(0x1a, gbc.readMem(0xbced));
        // CB 1A 016B
        gbc.setState(0xab1a, 0x2eca, 0xbb20, 0xf65f, 0x105f, 0xafd2, 0x0, 0x0);
        gbc.writeMem(0xab1a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2eca, gbc.sp());
        EXPECT(0xab1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab1a));
        EXPECT(0x1a, gbc.readMem(0xab1b));
        // CB 1A 016C
        gbc.setState(0xa111, 0xc2b3, 0x46c0, 0x23df, 0xfd96, 0xd717, 0x1, 0x1);
        gbc.writeMem(0xa111, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc2b3, gbc.sp());
        EXPECT(0xa113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa111));
        EXPECT(0x1a, gbc.readMem(0xa112));
        // CB 1A 016D
        gbc.setState(0x8e36, 0xf094, 0x5690, 0x1801, 0xc73d, 0xec8e, 0x1, 0x1);
        gbc.writeMem(0x8e36, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf094, gbc.sp());
        EXPECT(0x8e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e36));
        EXPECT(0x1a, gbc.readMem(0x8e37));
        // CB 1A 016E
        gbc.setState(0x6b7c, 0x6880, 0x23f0, 0x8471, 0x9c6a, 0x4c42, 0x1, 0x1);
        gbc.writeMem(0x6b7c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6880, gbc.sp());
        EXPECT(0x6b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 016F
        gbc.setState(0x8ce7, 0xacd9, 0xe430, 0x7e2d, 0xbb3f, 0xd3e7, 0x1, 0x1);
        gbc.writeMem(0x8ce7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xacd9, gbc.sp());
        EXPECT(0x8ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce7));
        EXPECT(0x1a, gbc.readMem(0x8ce8));
        // CB 1A 0170
        gbc.setState(0xa399, 0x887e, 0x1840, 0xd02e, 0xfb6c, 0xa758, 0x0, 0x0);
        gbc.writeMem(0xa399, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x887e, gbc.sp());
        EXPECT(0xa39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa399));
        EXPECT(0x1a, gbc.readMem(0xa39a));
        // CB 1A 0171
        gbc.setState(0x7c5b, 0x4a89, 0x5740, 0xb2c0, 0xd6ce, 0x6ac8, 0x1, 0x1);
        gbc.writeMem(0x7c5b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4a89, gbc.sp());
        EXPECT(0x7c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0172
        gbc.setState(0xba3e, 0x504f, 0xf80, 0x7e30, 0xa50a, 0xb9ae, 0x1, 0x1);
        gbc.writeMem(0xba3e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x504f, gbc.sp());
        EXPECT(0xba40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3e));
        EXPECT(0x1a, gbc.readMem(0xba3f));
        // CB 1A 0173
        gbc.setState(0xd724, 0x8377, 0xeac0, 0x2472, 0x1f6, 0x3449, 0x0, 0x0);
        gbc.writeMem(0xd724, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8377, gbc.sp());
        EXPECT(0xd726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd724));
        EXPECT(0x1a, gbc.readMem(0xd725));
        // CB 1A 0174
        gbc.setState(0x31f, 0x3dab, 0x6de0, 0xee18, 0x2294, 0x3303, 0x1, 0x0);
        gbc.writeMem(0x31f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3dab, gbc.sp());
        EXPECT(0x321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0175
        gbc.setState(0xbd1b, 0x6b92, 0x4b00, 0xaed, 0x3fee, 0x6c7, 0x0, 0x0);
        gbc.writeMem(0xbd1b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6b92, gbc.sp());
        EXPECT(0xbd1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd1b));
        EXPECT(0x1a, gbc.readMem(0xbd1c));
        // CB 1A 0176
        gbc.setState(0x6f7f, 0x61c5, 0x67e0, 0x6a50, 0xcf40, 0xcb2b, 0x0, 0x1);
        gbc.writeMem(0x6f7f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x61c5, gbc.sp());
        EXPECT(0x6f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0177
        gbc.setState(0x18de, 0x5d15, 0x3270, 0x8d9c, 0x4aff, 0x22dc, 0x0, 0x0);
        gbc.writeMem(0x18de, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5d15, gbc.sp());
        EXPECT(0x18e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0178
        gbc.setState(0xea01, 0x2ffd, 0xdef0, 0x8de0, 0x2cbe, 0xb503, 0x1, 0x1);
        gbc.writeMem(0xea01, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2ffd, gbc.sp());
        EXPECT(0xea03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea01));
        EXPECT(0x1a, gbc.readMem(0xea02));
        // CB 1A 0179
        gbc.setState(0x1e66, 0xe5e9, 0x21a0, 0x6955, 0x5333, 0x1a55, 0x0, 0x1);
        gbc.writeMem(0x1e66, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe5e9, gbc.sp());
        EXPECT(0x1e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 017A
        gbc.setState(0x4d0a, 0x496c, 0xce90, 0x8783, 0x8f2f, 0xbe81, 0x0, 0x0);
        gbc.writeMem(0x4d0a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x496c, gbc.sp());
        EXPECT(0x4d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 017B
        gbc.setState(0x87b7, 0x1958, 0x40, 0xab3, 0x672e, 0x4a7e, 0x0, 0x1);
        gbc.writeMem(0x87b7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1958, gbc.sp());
        EXPECT(0x87b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b7));
        EXPECT(0x1a, gbc.readMem(0x87b8));
        // CB 1A 017C
        gbc.setState(0x5743, 0x5625, 0x240, 0x8d97, 0x2abe, 0xae79, 0x1, 0x1);
        gbc.writeMem(0x5743, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5625, gbc.sp());
        EXPECT(0x5745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 017D
        gbc.setState(0x5f04, 0xeb6a, 0x40d0, 0x9860, 0x3760, 0x89e4, 0x1, 0x1);
        gbc.writeMem(0x5f04, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xeb6a, gbc.sp());
        EXPECT(0x5f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 017E
        gbc.setState(0x4fc3, 0x94d0, 0xec0, 0xd743, 0xf3d2, 0xfe0f, 0x1, 0x0);
        gbc.writeMem(0x4fc3, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x94d0, gbc.sp());
        EXPECT(0x4fc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 017F
        gbc.setState(0xe722, 0x3ebb, 0x17a0, 0x42c9, 0x2869, 0x89a, 0x0, 0x1);
        gbc.writeMem(0xe722, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3ebb, gbc.sp());
        EXPECT(0xe724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe722));
        EXPECT(0x1a, gbc.readMem(0xe723));
        // CB 1A 0180
        gbc.setState(0x3a0, 0x6d5e, 0x3310, 0x35eb, 0x98dd, 0x1216, 0x0, 0x1);
        gbc.writeMem(0x3a0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6d5e, gbc.sp());
        EXPECT(0x3a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0181
        gbc.setState(0x3804, 0xf6b8, 0xf4b0, 0xcabd, 0x7ea, 0x4f9a, 0x0, 0x0);
        gbc.writeMem(0x3804, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf6b8, gbc.sp());
        EXPECT(0x3806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0182
        gbc.setState(0xc96b, 0xffe4, 0x46d0, 0x310a, 0xc768, 0x1694, 0x1, 0x0);
        gbc.writeMem(0xc96b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xffe4, gbc.sp());
        EXPECT(0xc96d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96b));
        EXPECT(0x1a, gbc.readMem(0xc96c));
        // CB 1A 0183
        gbc.setState(0x51d2, 0xca5, 0xbaa0, 0xfac6, 0xd89b, 0x1a, 0x1, 0x0);
        gbc.writeMem(0x51d2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xca5, gbc.sp());
        EXPECT(0x51d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0184
        gbc.setState(0x13f9, 0xc33c, 0x91d0, 0x2627, 0x56b6, 0xde52, 0x1, 0x1);
        gbc.writeMem(0x13f9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc33c, gbc.sp());
        EXPECT(0x13fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0185
        gbc.setState(0xbfd9, 0xdec1, 0xe290, 0x81a, 0xcaf1, 0x269a, 0x0, 0x0);
        gbc.writeMem(0xbfd9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdec1, gbc.sp());
        EXPECT(0xbfdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd9));
        EXPECT(0x1a, gbc.readMem(0xbfda));
        // CB 1A 0186
        gbc.setState(0x7981, 0x6c1a, 0xe840, 0x7142, 0x6844, 0x5314, 0x0, 0x1);
        gbc.writeMem(0x7981, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6c1a, gbc.sp());
        EXPECT(0x7983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0187
        gbc.setState(0xa3eb, 0x70e1, 0x3930, 0xdf46, 0x69fd, 0xb4ab, 0x1, 0x0);
        gbc.writeMem(0xa3eb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x70e1, gbc.sp());
        EXPECT(0xa3ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3eb));
        EXPECT(0x1a, gbc.readMem(0xa3ec));
        // CB 1A 0188
        gbc.setState(0xdcbb, 0x5aaa, 0x7b80, 0xbaa5, 0x2a57, 0xca80, 0x0, 0x0);
        gbc.writeMem(0xdcbb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5aaa, gbc.sp());
        EXPECT(0xdcbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcbb));
        EXPECT(0x1a, gbc.readMem(0xdcbc));
        // CB 1A 0189
        gbc.setState(0xe916, 0xdc0d, 0xecf0, 0x96a2, 0x6ec7, 0xc245, 0x0, 0x1);
        gbc.writeMem(0xe916, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdc0d, gbc.sp());
        EXPECT(0xe918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe916));
        EXPECT(0x1a, gbc.readMem(0xe917));
        // CB 1A 018A
        gbc.setState(0x2a32, 0x7509, 0x7970, 0xb289, 0xa1cb, 0x9c61, 0x0, 0x1);
        gbc.writeMem(0x2a32, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7509, gbc.sp());
        EXPECT(0x2a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 018B
        gbc.setState(0x78ec, 0xb680, 0x5790, 0xdae0, 0x5f4a, 0x7798, 0x0, 0x0);
        gbc.writeMem(0x78ec, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb680, gbc.sp());
        EXPECT(0x78ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 018C
        gbc.setState(0x3ea4, 0xf2f3, 0x5c20, 0xbd44, 0xd92, 0xf6bf, 0x1, 0x1);
        gbc.writeMem(0x3ea4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf2f3, gbc.sp());
        EXPECT(0x3ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 018D
        gbc.setState(0xb581, 0xe441, 0x2d80, 0xd8c0, 0xd0c, 0xbf69, 0x1, 0x0);
        gbc.writeMem(0xb581, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe441, gbc.sp());
        EXPECT(0xb583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb581));
        EXPECT(0x1a, gbc.readMem(0xb582));
        // CB 1A 018E
        gbc.setState(0xcf64, 0x549a, 0xe9a0, 0x6309, 0x5ed4, 0xbdf4, 0x1, 0x0);
        gbc.writeMem(0xcf64, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x549a, gbc.sp());
        EXPECT(0xcf66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf64));
        EXPECT(0x1a, gbc.readMem(0xcf65));
        // CB 1A 018F
        gbc.setState(0x95f2, 0x7592, 0xa970, 0xad07, 0xdbd8, 0xcb7c, 0x0, 0x1);
        gbc.writeMem(0x95f2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7592, gbc.sp());
        EXPECT(0x95f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f2));
        EXPECT(0x1a, gbc.readMem(0x95f3));
        // CB 1A 0190
        gbc.setState(0xc6cb, 0xa846, 0x5fe0, 0x6f05, 0x566f, 0x6194, 0x0, 0x1);
        gbc.writeMem(0xc6cb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa846, gbc.sp());
        EXPECT(0xc6cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6cb));
        EXPECT(0x1a, gbc.readMem(0xc6cc));
        // CB 1A 0191
        gbc.setState(0x7c30, 0x5a84, 0x360, 0x82f9, 0x5d4, 0xbb8b, 0x0, 0x1);
        gbc.writeMem(0x7c30, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5a84, gbc.sp());
        EXPECT(0x7c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0192
        gbc.setState(0x3f54, 0xe433, 0xdba0, 0x6f58, 0x29d3, 0x7883, 0x1, 0x0);
        gbc.writeMem(0x3f54, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe433, gbc.sp());
        EXPECT(0x3f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0193
        gbc.setState(0x2212, 0x539f, 0x3130, 0x79bb, 0x898e, 0xde8c, 0x1, 0x0);
        gbc.writeMem(0x2212, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x539f, gbc.sp());
        EXPECT(0x2214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0194
        gbc.setState(0xcc9, 0x4bff, 0x86d0, 0xff1d, 0x264b, 0x203a, 0x1, 0x1);
        gbc.writeMem(0xcc9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4bff, gbc.sp());
        EXPECT(0xccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0195
        gbc.setState(0xe8b6, 0x74fb, 0x4f60, 0xbd0b, 0xe3f6, 0xbd8f, 0x0, 0x1);
        gbc.writeMem(0xe8b6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x74fb, gbc.sp());
        EXPECT(0xe8b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b6));
        EXPECT(0x1a, gbc.readMem(0xe8b7));
        // CB 1A 0197
        gbc.setState(0x9035, 0xef30, 0x4560, 0x5aed, 0xd3a4, 0x99aa, 0x0, 0x1);
        gbc.writeMem(0x9035, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xef30, gbc.sp());
        EXPECT(0x9037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9035));
        EXPECT(0x1a, gbc.readMem(0x9036));
        // CB 1A 0198
        gbc.setState(0xc574, 0x1503, 0xa520, 0x630c, 0x3ab0, 0xd5dd, 0x1, 0x0);
        gbc.writeMem(0xc574, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1503, gbc.sp());
        EXPECT(0xc576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc574));
        EXPECT(0x1a, gbc.readMem(0xc575));
        // CB 1A 0199
        gbc.setState(0x1330, 0xfc15, 0xa850, 0xc921, 0xbae1, 0x55f8, 0x1, 0x1);
        gbc.writeMem(0x1330, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfc15, gbc.sp());
        EXPECT(0x1332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 019A
        gbc.setState(0xe5bf, 0xc8ea, 0x2980, 0xd62a, 0xa8b0, 0x6556, 0x0, 0x0);
        gbc.writeMem(0xe5bf, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc8ea, gbc.sp());
        EXPECT(0xe5c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5bf));
        EXPECT(0x1a, gbc.readMem(0xe5c0));
        // CB 1A 019B
        gbc.setState(0xbdf1, 0x8a0, 0xe10, 0x2649, 0x7544, 0xd639, 0x1, 0x0);
        gbc.writeMem(0xbdf1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8a0, gbc.sp());
        EXPECT(0xbdf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf1));
        EXPECT(0x1a, gbc.readMem(0xbdf2));
        // CB 1A 019C
        gbc.setState(0xcf13, 0x9994, 0x73e0, 0x248d, 0x4a7e, 0x5bfc, 0x0, 0x1);
        gbc.writeMem(0xcf13, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9994, gbc.sp());
        EXPECT(0xcf15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf13));
        EXPECT(0x1a, gbc.readMem(0xcf14));
        // CB 1A 019E
        gbc.setState(0x51a2, 0xb8fa, 0x5550, 0x627e, 0x538e, 0x9162, 0x0, 0x1);
        gbc.writeMem(0x51a2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb8fa, gbc.sp());
        EXPECT(0x51a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 019F
        gbc.setState(0x2a52, 0x7816, 0xb320, 0xf526, 0x926b, 0xa188, 0x0, 0x1);
        gbc.writeMem(0x2a52, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7816, gbc.sp());
        EXPECT(0x2a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01A0
        gbc.setState(0x8d6f, 0x3f63, 0x9240, 0x2861, 0xa562, 0x1aa5, 0x0, 0x1);
        gbc.writeMem(0x8d6f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3f63, gbc.sp());
        EXPECT(0x8d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d6f));
        EXPECT(0x1a, gbc.readMem(0x8d70));
        // CB 1A 01A1
        gbc.setState(0x6bda, 0xa6b9, 0x8010, 0x2c56, 0x93e4, 0xc60b, 0x1, 0x0);
        gbc.writeMem(0x6bda, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa6b9, gbc.sp());
        EXPECT(0x6bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 01A2
        gbc.setState(0x37e1, 0xd37a, 0xadd0, 0xbc78, 0x72bc, 0xc7bf, 0x1, 0x1);
        gbc.writeMem(0x37e1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd37a, gbc.sp());
        EXPECT(0x37e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01A3
        gbc.setState(0xeacc, 0xe7c2, 0x95b0, 0x7b96, 0x938b, 0x1323, 0x0, 0x1);
        gbc.writeMem(0xeacc, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe7c2, gbc.sp());
        EXPECT(0xeace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeacc));
        EXPECT(0x1a, gbc.readMem(0xeacd));
        // CB 1A 01A4
        gbc.setState(0x902a, 0x9905, 0xee20, 0xaed2, 0x54ad, 0xafc7, 0x0, 0x1);
        gbc.writeMem(0x902a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9905, gbc.sp());
        EXPECT(0x902c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x902a));
        EXPECT(0x1a, gbc.readMem(0x902b));
        // CB 1A 01A5
        gbc.setState(0xafd7, 0xbb87, 0x1c10, 0x8332, 0x5d6f, 0xaf8, 0x1, 0x1);
        gbc.writeMem(0xafd7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbb87, gbc.sp());
        EXPECT(0xafd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd7));
        EXPECT(0x1a, gbc.readMem(0xafd8));
        // CB 1A 01A6
        gbc.setState(0xc1de, 0xe275, 0x4130, 0xf72f, 0xc694, 0xfb92, 0x1, 0x1);
        gbc.writeMem(0xc1de, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe275, gbc.sp());
        EXPECT(0xc1e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1de));
        EXPECT(0x1a, gbc.readMem(0xc1df));
        // CB 1A 01A7
        gbc.setState(0x9970, 0xe6f8, 0x5a00, 0x4da8, 0x491f, 0xf18a, 0x0, 0x1);
        gbc.writeMem(0x9970, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe6f8, gbc.sp());
        EXPECT(0x9972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9970));
        EXPECT(0x1a, gbc.readMem(0x9971));
        // CB 1A 01A8
        gbc.setState(0xbe2e, 0x870c, 0x7e40, 0x715e, 0x358b, 0xcffa, 0x1, 0x1);
        gbc.writeMem(0xbe2e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x870c, gbc.sp());
        EXPECT(0xbe30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe2e));
        EXPECT(0x1a, gbc.readMem(0xbe2f));
        // CB 1A 01A9
        gbc.setState(0xe506, 0x2611, 0xe4e0, 0xa531, 0x703e, 0x80df, 0x0, 0x1);
        gbc.writeMem(0xe506, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2611, gbc.sp());
        EXPECT(0xe508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe506));
        EXPECT(0x1a, gbc.readMem(0xe507));
        // CB 1A 01AA
        gbc.setState(0x6fb5, 0xbdde, 0xefa0, 0x4646, 0xe35e, 0xa3f, 0x0, 0x0);
        gbc.writeMem(0x6fb5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbdde, gbc.sp());
        EXPECT(0x6fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 01AB
        gbc.setState(0xc25, 0x4027, 0x3060, 0xe28d, 0x54f7, 0xdab7, 0x0, 0x1);
        gbc.writeMem(0xc25, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4027, gbc.sp());
        EXPECT(0xc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01AC
        gbc.setState(0x90f4, 0xeaab, 0xb370, 0x2, 0xcf37, 0x1802, 0x0, 0x1);
        gbc.writeMem(0x90f4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xeaab, gbc.sp());
        EXPECT(0x90f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f4));
        EXPECT(0x1a, gbc.readMem(0x90f5));
        // CB 1A 01AD
        gbc.setState(0x9c38, 0x2b85, 0x4a00, 0x562e, 0xaa27, 0x3b3f, 0x0, 0x1);
        gbc.writeMem(0x9c38, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2b85, gbc.sp());
        EXPECT(0x9c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c38));
        EXPECT(0x1a, gbc.readMem(0x9c39));
        // CB 1A 01AE
        gbc.setState(0xd1e2, 0x98d9, 0x9640, 0xc73, 0x54f9, 0x23f4, 0x0, 0x0);
        gbc.writeMem(0xd1e2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x98d9, gbc.sp());
        EXPECT(0xd1e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e2));
        EXPECT(0x1a, gbc.readMem(0xd1e3));
        // CB 1A 01AF
        gbc.setState(0x1751, 0xd022, 0xaf70, 0x4e6f, 0x1905, 0xf368, 0x0, 0x1);
        gbc.writeMem(0x1751, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd022, gbc.sp());
        EXPECT(0x1753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 01B0
        gbc.setState(0x9be, 0xc7e9, 0xafd0, 0xa589, 0x9ee, 0xce88, 0x1, 0x0);
        gbc.writeMem(0x9be, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc7e9, gbc.sp());
        EXPECT(0x9c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 01B1
        gbc.setState(0x583e, 0x9139, 0x23c0, 0xee98, 0x87dd, 0x68dc, 0x0, 0x0);
        gbc.writeMem(0x583e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9139, gbc.sp());
        EXPECT(0x5840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 01B2
        gbc.setState(0xaae6, 0xe2de, 0xd370, 0xd0f7, 0xc679, 0xfaa0, 0x1, 0x1);
        gbc.writeMem(0xaae6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe2de, gbc.sp());
        EXPECT(0xaae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae6));
        EXPECT(0x1a, gbc.readMem(0xaae7));
        // CB 1A 01B3
        gbc.setState(0xa320, 0x7a6a, 0x3df0, 0xc62a, 0xbb53, 0xca5b, 0x1, 0x0);
        gbc.writeMem(0xa320, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7a6a, gbc.sp());
        EXPECT(0xa322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa320));
        EXPECT(0x1a, gbc.readMem(0xa321));
        // CB 1A 01B4
        gbc.setState(0xdfde, 0x6753, 0x5820, 0x944e, 0xeff1, 0xf6cb, 0x0, 0x1);
        gbc.writeMem(0xdfde, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6753, gbc.sp());
        EXPECT(0xdfe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfde));
        EXPECT(0x1a, gbc.readMem(0xdfdf));
        // CB 1A 01B5
        gbc.setState(0x483b, 0x481d, 0x8320, 0x11b9, 0xa696, 0x94c4, 0x1, 0x1);
        gbc.writeMem(0x483b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x481d, gbc.sp());
        EXPECT(0x483d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01B6
        gbc.setState(0x5bff, 0x547f, 0x5420, 0x7527, 0xce37, 0x3f89, 0x1, 0x1);
        gbc.writeMem(0x5bff, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x547f, gbc.sp());
        EXPECT(0x5c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01B7
        gbc.setState(0x631f, 0xaa84, 0xb000, 0x7d4d, 0x9cc4, 0x293f, 0x0, 0x1);
        gbc.writeMem(0x631f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xaa84, gbc.sp());
        EXPECT(0x6321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01B8
        gbc.setState(0xd180, 0x8d3d, 0xc250, 0xd51f, 0xd7b2, 0x2898, 0x0, 0x1);
        gbc.writeMem(0xd180, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8d3d, gbc.sp());
        EXPECT(0xd182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd180));
        EXPECT(0x1a, gbc.readMem(0xd181));
        // CB 1A 01B9
        gbc.setState(0xb96a, 0xef3a, 0x57a0, 0xf027, 0x955b, 0xb2bc, 0x1, 0x1);
        gbc.writeMem(0xb96a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xef3a, gbc.sp());
        EXPECT(0xb96c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96a));
        EXPECT(0x1a, gbc.readMem(0xb96b));
        // CB 1A 01BA
        gbc.setState(0x85f6, 0xacbe, 0x1e70, 0x8241, 0x9830, 0x922e, 0x1, 0x1);
        gbc.writeMem(0x85f6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xacbe, gbc.sp());
        EXPECT(0x85f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f6));
        EXPECT(0x1a, gbc.readMem(0x85f7));
        // CB 1A 01BB
        gbc.setState(0x74c2, 0xf236, 0x3f90, 0x68e6, 0x84b0, 0xe036, 0x1, 0x1);
        gbc.writeMem(0x74c2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf236, gbc.sp());
        EXPECT(0x74c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01BC
        gbc.setState(0x1ad6, 0x23d1, 0x9c90, 0xd6a9, 0xd0bf, 0x292d, 0x1, 0x1);
        gbc.writeMem(0x1ad6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x23d1, gbc.sp());
        EXPECT(0x1ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01BD
        gbc.setState(0xe710, 0xbb12, 0x1940, 0x46b7, 0x8049, 0x3c3c, 0x1, 0x1);
        gbc.writeMem(0xe710, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbb12, gbc.sp());
        EXPECT(0xe712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe710));
        EXPECT(0x1a, gbc.readMem(0xe711));
        // CB 1A 01BE
        gbc.setState(0x9f24, 0xe7f0, 0x5ce0, 0x5670, 0x96d6, 0xff95, 0x0, 0x1);
        gbc.writeMem(0x9f24, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe7f0, gbc.sp());
        EXPECT(0x9f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f24));
        EXPECT(0x1a, gbc.readMem(0x9f25));
        // CB 1A 01BF
        gbc.setState(0x38e7, 0xae23, 0x4730, 0xd372, 0xc2e8, 0x7448, 0x1, 0x0);
        gbc.writeMem(0x38e7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xae23, gbc.sp());
        EXPECT(0x38e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01C1
        gbc.setState(0x1ab7, 0x5987, 0x1020, 0xb8b3, 0xfdc4, 0x31d5, 0x0, 0x1);
        gbc.writeMem(0x1ab7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5987, gbc.sp());
        EXPECT(0x1ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 01C2
        gbc.setState(0x5e4b, 0xd5c6, 0x3190, 0xfaaa, 0x9198, 0xf43b, 0x0, 0x1);
        gbc.writeMem(0x5e4b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd5c6, gbc.sp());
        EXPECT(0x5e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 01C3
        gbc.setState(0x1822, 0x1191, 0x18a0, 0xf6e5, 0x5ac3, 0xd012, 0x1, 0x1);
        gbc.writeMem(0x1822, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1191, gbc.sp());
        EXPECT(0x1824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01C4
        gbc.setState(0xdade, 0x96c2, 0x45e0, 0xc4a4, 0xa3e8, 0xf7c7, 0x1, 0x1);
        gbc.writeMem(0xdade, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x96c2, gbc.sp());
        EXPECT(0xdae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdade));
        EXPECT(0x1a, gbc.readMem(0xdadf));
        // CB 1A 01C5
        gbc.setState(0x16ac, 0x1283, 0xd060, 0xd6a2, 0xd41e, 0xe3b5, 0x0, 0x1);
        gbc.writeMem(0x16ac, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1283, gbc.sp());
        EXPECT(0x16ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01C6
        gbc.setState(0xa7e7, 0xafbd, 0x12b0, 0xeab7, 0x1611, 0xe72e, 0x0, 0x0);
        gbc.writeMem(0xa7e7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xafbd, gbc.sp());
        EXPECT(0xa7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e7));
        EXPECT(0x1a, gbc.readMem(0xa7e8));
        // CB 1A 01C7
        gbc.setState(0x8db9, 0xf71e, 0x8750, 0x69e1, 0x8f5, 0x4fe2, 0x0, 0x0);
        gbc.writeMem(0x8db9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf71e, gbc.sp());
        EXPECT(0x8dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db9));
        EXPECT(0x1a, gbc.readMem(0x8dba));
        // CB 1A 01C8
        gbc.setState(0x36a4, 0xdf67, 0xb2a0, 0xf51, 0xf29f, 0x877d, 0x0, 0x0);
        gbc.writeMem(0x36a4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdf67, gbc.sp());
        EXPECT(0x36a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01C9
        gbc.setState(0x98df, 0x4ec5, 0xba70, 0x9353, 0x4bd6, 0x6a7c, 0x0, 0x1);
        gbc.writeMem(0x98df, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4ec5, gbc.sp());
        EXPECT(0x98e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98df));
        EXPECT(0x1a, gbc.readMem(0x98e0));
        // CB 1A 01CA
        gbc.setState(0x8eaa, 0x18a8, 0x29c0, 0x21e1, 0x9926, 0xcea2, 0x0, 0x1);
        gbc.writeMem(0x8eaa, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x18a8, gbc.sp());
        EXPECT(0x8eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eaa));
        EXPECT(0x1a, gbc.readMem(0x8eab));
        // CB 1A 01CB
        gbc.setState(0xc8d0, 0x9e61, 0xdaf0, 0x934a, 0xb0dd, 0x19cb, 0x0, 0x1);
        gbc.writeMem(0xc8d0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9e61, gbc.sp());
        EXPECT(0xc8d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d0));
        EXPECT(0x1a, gbc.readMem(0xc8d1));
        // CB 1A 01CC
        gbc.setState(0xe6ab, 0x861, 0x1560, 0x47d2, 0x9337, 0x9d4f, 0x0, 0x0);
        gbc.writeMem(0xe6ab, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x861, gbc.sp());
        EXPECT(0xe6ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ab));
        EXPECT(0x1a, gbc.readMem(0xe6ac));
        // CB 1A 01CD
        gbc.setState(0x9aa8, 0x9719, 0xf710, 0x272b, 0x9f5e, 0xada9, 0x1, 0x1);
        gbc.writeMem(0x9aa8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9719, gbc.sp());
        EXPECT(0x9aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa8));
        EXPECT(0x1a, gbc.readMem(0x9aa9));
        // CB 1A 01CE
        gbc.setState(0xc2bb, 0xdea1, 0xe9f0, 0xb044, 0x9fa, 0x8fc2, 0x1, 0x1);
        gbc.writeMem(0xc2bb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdea1, gbc.sp());
        EXPECT(0xc2bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2bb));
        EXPECT(0x1a, gbc.readMem(0xc2bc));
        // CB 1A 01CF
        gbc.setState(0x52c7, 0x34c7, 0x18d0, 0x4518, 0x17e7, 0x866, 0x0, 0x0);
        gbc.writeMem(0x52c7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x34c7, gbc.sp());
        EXPECT(0x52c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 01D0
        gbc.setState(0xe31c, 0xbf44, 0x1a10, 0x305f, 0x148b, 0x66ec, 0x1, 0x1);
        gbc.writeMem(0xe31c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbf44, gbc.sp());
        EXPECT(0xe31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31c));
        EXPECT(0x1a, gbc.readMem(0xe31d));
        // CB 1A 01D1
        gbc.setState(0xaf08, 0xc3f8, 0x5e60, 0x4d31, 0xb73c, 0x94b2, 0x0, 0x0);
        gbc.writeMem(0xaf08, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc3f8, gbc.sp());
        EXPECT(0xaf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf08));
        EXPECT(0x1a, gbc.readMem(0xaf09));
        // CB 1A 01D2
        gbc.setState(0x2924, 0x73f4, 0x89e0, 0xe214, 0x4023, 0xcc67, 0x0, 0x1);
        gbc.writeMem(0x2924, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x73f4, gbc.sp());
        EXPECT(0x2926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01D3
        gbc.setState(0xb969, 0xe6b1, 0xa400, 0x8b03, 0x58e0, 0xbe06, 0x1, 0x0);
        gbc.writeMem(0xb969, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe6b1, gbc.sp());
        EXPECT(0xb96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb969));
        EXPECT(0x1a, gbc.readMem(0xb96a));
        // CB 1A 01D4
        gbc.setState(0x35d5, 0x322f, 0x90f0, 0x4c85, 0x94a2, 0x665b, 0x1, 0x1);
        gbc.writeMem(0x35d5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x322f, gbc.sp());
        EXPECT(0x35d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01D5
        gbc.setState(0x10fd, 0xa722, 0x8fa0, 0x7f1a, 0xe48a, 0x8ddd, 0x1, 0x0);
        gbc.writeMem(0x10fd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa722, gbc.sp());
        EXPECT(0x10ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01D6
        gbc.setState(0x54af, 0xcf4d, 0x9b40, 0x3254, 0x322f, 0x6fd5, 0x1, 0x1);
        gbc.writeMem(0x54af, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcf4d, gbc.sp());
        EXPECT(0x54b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01D7
        gbc.setState(0xc390, 0x1d4e, 0xd160, 0x559, 0x6ea4, 0xcaa1, 0x0, 0x0);
        gbc.writeMem(0xc390, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1d4e, gbc.sp());
        EXPECT(0xc392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc390));
        EXPECT(0x1a, gbc.readMem(0xc391));
        // CB 1A 01D8
        gbc.setState(0x43e1, 0xa8e6, 0x89c0, 0x51d1, 0x70b7, 0x9d06, 0x1, 0x0);
        gbc.writeMem(0x43e1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa8e6, gbc.sp());
        EXPECT(0x43e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01D9
        gbc.setState(0xcbc2, 0x449, 0xf090, 0x567e, 0x9b51, 0x4ffd, 0x0, 0x0);
        gbc.writeMem(0xcbc2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x449, gbc.sp());
        EXPECT(0xcbc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc2));
        EXPECT(0x1a, gbc.readMem(0xcbc3));
        // CB 1A 01DA
        gbc.setState(0xc098, 0x31a4, 0xaf60, 0x862c, 0xdc08, 0x7a0, 0x0, 0x1);
        gbc.writeMem(0xc098, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x31a4, gbc.sp());
        EXPECT(0xc09a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc098));
        EXPECT(0x1a, gbc.readMem(0xc099));
        // CB 1A 01DB
        gbc.setState(0x37e7, 0x57c, 0x9e10, 0x59d9, 0x4b9a, 0xc570, 0x1, 0x0);
        gbc.writeMem(0x37e7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x57c, gbc.sp());
        EXPECT(0x37e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 01DC
        gbc.setState(0xcdef, 0xdb00, 0xf640, 0xaeef, 0x35e6, 0xd183, 0x0, 0x1);
        gbc.writeMem(0xcdef, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdb00, gbc.sp());
        EXPECT(0xcdf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdef));
        EXPECT(0x1a, gbc.readMem(0xcdf0));
        // CB 1A 01DD
        gbc.setState(0xbfea, 0x35ea, 0x17f0, 0x8abd, 0x9513, 0x568e, 0x0, 0x1);
        gbc.writeMem(0xbfea, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x35ea, gbc.sp());
        EXPECT(0xbfec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfea));
        EXPECT(0x1a, gbc.readMem(0xbfeb));
        // CB 1A 01DE
        gbc.setState(0xa6b2, 0x1ae5, 0xdf40, 0x8a46, 0xdaba, 0x830b, 0x1, 0x0);
        gbc.writeMem(0xa6b2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1ae5, gbc.sp());
        EXPECT(0xa6b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b2));
        EXPECT(0x1a, gbc.readMem(0xa6b3));
        // CB 1A 01DF
        gbc.setState(0xccde, 0xcc14, 0x3f30, 0x2e95, 0xab5, 0x35c4, 0x1, 0x1);
        gbc.writeMem(0xccde, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcc14, gbc.sp());
        EXPECT(0xcce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccde));
        EXPECT(0x1a, gbc.readMem(0xccdf));
        // CB 1A 01E0
        gbc.setState(0xce89, 0x2324, 0xc910, 0xaa5, 0xf291, 0x8673, 0x1, 0x1);
        gbc.writeMem(0xce89, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2324, gbc.sp());
        EXPECT(0xce8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce89));
        EXPECT(0x1a, gbc.readMem(0xce8a));
        // CB 1A 01E1
        gbc.setState(0x61fa, 0xf5fd, 0x6c90, 0xa303, 0xec37, 0xf11, 0x0, 0x0);
        gbc.writeMem(0x61fa, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf5fd, gbc.sp());
        EXPECT(0x61fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01E2
        gbc.setState(0x811a, 0xf269, 0x1ba0, 0x12e4, 0x75c9, 0xba53, 0x0, 0x0);
        gbc.writeMem(0x811a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf269, gbc.sp());
        EXPECT(0x811c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811a));
        EXPECT(0x1a, gbc.readMem(0x811b));
        // CB 1A 01E3
        gbc.setState(0x9805, 0x79f3, 0x5ee0, 0xa81f, 0x508, 0x242b, 0x1, 0x0);
        gbc.writeMem(0x9805, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x79f3, gbc.sp());
        EXPECT(0x9807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9805));
        EXPECT(0x1a, gbc.readMem(0x9806));
        // CB 1A 01E4
        gbc.setState(0x9fc7, 0xf31f, 0x7f50, 0xe2bb, 0x9770, 0xd90, 0x1, 0x0);
        gbc.writeMem(0x9fc7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf31f, gbc.sp());
        EXPECT(0x9fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc7));
        EXPECT(0x1a, gbc.readMem(0x9fc8));
        // CB 1A 01E5
        gbc.setState(0xbe6b, 0xad1b, 0x2f50, 0xda80, 0xab57, 0x461a, 0x0, 0x1);
        gbc.writeMem(0xbe6b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xad1b, gbc.sp());
        EXPECT(0xbe6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe6b));
        EXPECT(0x1a, gbc.readMem(0xbe6c));
        // CB 1A 01E6
        gbc.setState(0xa87f, 0x90e6, 0x1550, 0x2a6, 0xb7fd, 0xb5da, 0x1, 0x1);
        gbc.writeMem(0xa87f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x90e6, gbc.sp());
        EXPECT(0xa881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa87f));
        EXPECT(0x1a, gbc.readMem(0xa880));
        // CB 1A 01E7
        gbc.setState(0xed8a, 0x5197, 0xe280, 0x49af, 0x57ff, 0x699b, 0x1, 0x0);
        gbc.writeMem(0xed8a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5197, gbc.sp());
        EXPECT(0xed8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed8a));
        EXPECT(0x1a, gbc.readMem(0xed8b));
        // CB 1A 01E8
        gbc.setState(0x9302, 0xaa85, 0x3450, 0xb5a9, 0x11c8, 0x366a, 0x0, 0x1);
        gbc.writeMem(0x9302, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xaa85, gbc.sp());
        EXPECT(0x9304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9302));
        EXPECT(0x1a, gbc.readMem(0x9303));
        // CB 1A 01E9
        gbc.setState(0x8359, 0x27b, 0x5f0, 0xb649, 0x6490, 0x6fd9, 0x1, 0x0);
        gbc.writeMem(0x8359, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x27b, gbc.sp());
        EXPECT(0x835b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8359));
        EXPECT(0x1a, gbc.readMem(0x835a));
        // CB 1A 01EA
        gbc.setState(0x6c33, 0x8144, 0xcc90, 0x9952, 0xa663, 0xb646, 0x1, 0x1);
        gbc.writeMem(0x6c33, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8144, gbc.sp());
        EXPECT(0x6c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01EB
        gbc.setState(0xa4bd, 0x6d26, 0x3e20, 0x946f, 0x724b, 0xf190, 0x1, 0x1);
        gbc.writeMem(0xa4bd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6d26, gbc.sp());
        EXPECT(0xa4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4bd));
        EXPECT(0x1a, gbc.readMem(0xa4be));
        // CB 1A 01EC
        gbc.setState(0x9c25, 0x405e, 0x4c10, 0x8e81, 0x9b76, 0xdf14, 0x1, 0x0);
        gbc.writeMem(0x9c25, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x405e, gbc.sp());
        EXPECT(0x9c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c25));
        EXPECT(0x1a, gbc.readMem(0x9c26));
        // CB 1A 01ED
        gbc.setState(0x429d, 0x3f2b, 0x3010, 0x3d36, 0xc862, 0xa3ef, 0x1, 0x0);
        gbc.writeMem(0x429d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3f2b, gbc.sp());
        EXPECT(0x429f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01EE
        gbc.setState(0x3a6f, 0x88d2, 0x660, 0xc6f4, 0xd0eb, 0x6a06, 0x1, 0x1);
        gbc.writeMem(0x3a6f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x88d2, gbc.sp());
        EXPECT(0x3a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01EF
        gbc.setState(0xc3ae, 0x74c8, 0x7cd0, 0x6d8d, 0x7d52, 0xe82, 0x0, 0x1);
        gbc.writeMem(0xc3ae, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x74c8, gbc.sp());
        EXPECT(0xc3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ae));
        EXPECT(0x1a, gbc.readMem(0xc3af));
        // CB 1A 01F0
        gbc.setState(0x41f2, 0x4e55, 0xc8c0, 0x3792, 0xfed1, 0xf3d8, 0x0, 0x0);
        gbc.writeMem(0x41f2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4e55, gbc.sp());
        EXPECT(0x41f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01F1
        gbc.setState(0xe6c, 0x29d2, 0x4b0, 0xf223, 0xc266, 0x7d0, 0x0, 0x1);
        gbc.writeMem(0xe6c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x29d2, gbc.sp());
        EXPECT(0xe6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01F2
        gbc.setState(0x5126, 0x9af, 0xb570, 0xdaf2, 0xceeb, 0x37f0, 0x1, 0x1);
        gbc.writeMem(0x5126, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9af, gbc.sp());
        EXPECT(0x5128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01F3
        gbc.setState(0xa2d5, 0x4a1a, 0x9230, 0x2870, 0xca87, 0xffc4, 0x1, 0x1);
        gbc.writeMem(0xa2d5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4a1a, gbc.sp());
        EXPECT(0xa2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d5));
        EXPECT(0x1a, gbc.readMem(0xa2d6));
        // CB 1A 01F4
        gbc.setState(0x1b77, 0xb134, 0x9cd0, 0x8933, 0x8455, 0xf817, 0x1, 0x1);
        gbc.writeMem(0x1b77, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb134, gbc.sp());
        EXPECT(0x1b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01F5
        gbc.setState(0x338d, 0x191, 0x90, 0x99b9, 0x1cb0, 0x235a, 0x1, 0x0);
        gbc.writeMem(0x338d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x191, gbc.sp());
        EXPECT(0x338f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 01F6
        gbc.setState(0xcaf1, 0x5161, 0x38c0, 0x93d1, 0xbb5d, 0x4dfa, 0x1, 0x0);
        gbc.writeMem(0xcaf1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5161, gbc.sp());
        EXPECT(0xcaf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf1));
        EXPECT(0x1a, gbc.readMem(0xcaf2));
        // CB 1A 01F7
        gbc.setState(0xc813, 0x8c3d, 0x1920, 0x4f9d, 0x36ad, 0x1162, 0x0, 0x0);
        gbc.writeMem(0xc813, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8c3d, gbc.sp());
        EXPECT(0xc815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc813));
        EXPECT(0x1a, gbc.readMem(0xc814));
        // CB 1A 01F8
        gbc.setState(0x8369, 0xd829, 0xdf0, 0x2d47, 0x233, 0x9592, 0x0, 0x1);
        gbc.writeMem(0x8369, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd829, gbc.sp());
        EXPECT(0x836b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8369));
        EXPECT(0x1a, gbc.readMem(0x836a));
        // CB 1A 01F9
        gbc.setState(0x7c4, 0xe842, 0xe4d0, 0xf4e4, 0x478e, 0x165c, 0x0, 0x0);
        gbc.writeMem(0x7c4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe842, gbc.sp());
        EXPECT(0x7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 01FC
        gbc.setState(0xeae6, 0xfc84, 0xc0e0, 0xdf02, 0xffa5, 0xd9cb, 0x1, 0x1);
        gbc.writeMem(0xeae6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfc84, gbc.sp());
        EXPECT(0xeae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae6));
        EXPECT(0x1a, gbc.readMem(0xeae7));
        // CB 1A 0202
        gbc.setState(0x1621, 0x2112, 0x3e90, 0xaf1, 0xdb68, 0x9530, 0x1, 0x1);
        gbc.writeMem(0x1621, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2112, gbc.sp());
        EXPECT(0x1623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0203
        gbc.setState(0x8dbd, 0x7e34, 0x8850, 0xd477, 0x8ca5, 0xd492, 0x1, 0x1);
        gbc.writeMem(0x8dbd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7e34, gbc.sp());
        EXPECT(0x8dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbd));
        EXPECT(0x1a, gbc.readMem(0x8dbe));
        // CB 1A 0204
        gbc.setState(0x97a, 0xeb70, 0x8710, 0x13ee, 0x52bc, 0x678a, 0x1, 0x1);
        gbc.writeMem(0x97a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xeb70, gbc.sp());
        EXPECT(0x97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0205
        gbc.setState(0xdc19, 0xa0cf, 0x6a80, 0x307f, 0x56cd, 0xd90b, 0x1, 0x1);
        gbc.writeMem(0xdc19, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa0cf, gbc.sp());
        EXPECT(0xdc1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc19));
        EXPECT(0x1a, gbc.readMem(0xdc1a));
        // CB 1A 0207
        gbc.setState(0xdf27, 0x89cf, 0xc1e0, 0xc543, 0x8fce, 0xb7ff, 0x1, 0x1);
        gbc.writeMem(0xdf27, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x89cf, gbc.sp());
        EXPECT(0xdf29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf27));
        EXPECT(0x1a, gbc.readMem(0xdf28));
        // CB 1A 0208
        gbc.setState(0x8543, 0x9eff, 0x4e50, 0xc066, 0x9629, 0x797f, 0x1, 0x0);
        gbc.writeMem(0x8543, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9eff, gbc.sp());
        EXPECT(0x8545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8543));
        EXPECT(0x1a, gbc.readMem(0x8544));
        // CB 1A 0209
        gbc.setState(0xb8cb, 0x22e6, 0xd410, 0xd0df, 0x7ad7, 0x6aa6, 0x1, 0x1);
        gbc.writeMem(0xb8cb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x22e6, gbc.sp());
        EXPECT(0xb8cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8cb));
        EXPECT(0x1a, gbc.readMem(0xb8cc));
        // CB 1A 020A
        gbc.setState(0xa96c, 0x3377, 0xd130, 0x8cba, 0xcaf0, 0xd45f, 0x0, 0x1);
        gbc.writeMem(0xa96c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3377, gbc.sp());
        EXPECT(0xa96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96c));
        EXPECT(0x1a, gbc.readMem(0xa96d));
        // CB 1A 020B
        gbc.setState(0x5ddc, 0x2832, 0x5b60, 0x8f41, 0x589c, 0x527f, 0x1, 0x0);
        gbc.writeMem(0x5ddc, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2832, gbc.sp());
        EXPECT(0x5dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 020C
        gbc.setState(0xa61f, 0x2742, 0x32c0, 0x46ca, 0x90d7, 0xee0f, 0x0, 0x1);
        gbc.writeMem(0xa61f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2742, gbc.sp());
        EXPECT(0xa621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa61f));
        EXPECT(0x1a, gbc.readMem(0xa620));
        // CB 1A 020D
        gbc.setState(0x524e, 0xa9ec, 0xce60, 0xe473, 0xadff, 0x27a2, 0x1, 0x0);
        gbc.writeMem(0x524e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa9ec, gbc.sp());
        EXPECT(0x5250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 020E
        gbc.setState(0xc7d0, 0x4c0, 0x3e00, 0xe252, 0xda4e, 0xd0a1, 0x1, 0x0);
        gbc.writeMem(0xc7d0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4c0, gbc.sp());
        EXPECT(0xc7d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d0));
        EXPECT(0x1a, gbc.readMem(0xc7d1));
        // CB 1A 020F
        gbc.setState(0x5eb0, 0xe8cb, 0x3a0, 0x46fa, 0xb191, 0xae04, 0x1, 0x0);
        gbc.writeMem(0x5eb0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe8cb, gbc.sp());
        EXPECT(0x5eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0210
        gbc.setState(0x5d37, 0x443c, 0xbb10, 0x3a38, 0x1b3c, 0xa8e0, 0x0, 0x1);
        gbc.writeMem(0x5d37, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x443c, gbc.sp());
        EXPECT(0x5d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0211
        gbc.setState(0x6f44, 0x6b6b, 0xea70, 0xf169, 0xf6, 0x8838, 0x0, 0x0);
        gbc.writeMem(0x6f44, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6b6b, gbc.sp());
        EXPECT(0x6f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0212
        gbc.setState(0x668f, 0x4df7, 0x8470, 0xcda2, 0xaf43, 0x9bcb, 0x1, 0x0);
        gbc.writeMem(0x668f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4df7, gbc.sp());
        EXPECT(0x6691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0213
        gbc.setState(0x5341, 0x49eb, 0xbef0, 0xebb1, 0xfcd5, 0xd35c, 0x1, 0x0);
        gbc.writeMem(0x5341, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x49eb, gbc.sp());
        EXPECT(0x5343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0214
        gbc.setState(0xcc9, 0xf240, 0xff90, 0xe698, 0xe428, 0xa699, 0x1, 0x0);
        gbc.writeMem(0xcc9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf240, gbc.sp());
        EXPECT(0xccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0215
        gbc.setState(0x46cf, 0x6377, 0xd2a0, 0x414, 0x8bae, 0xf9ac, 0x0, 0x0);
        gbc.writeMem(0x46cf, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6377, gbc.sp());
        EXPECT(0x46d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0216
        gbc.setState(0xcca5, 0xa5f8, 0x3780, 0x1d21, 0xe311, 0x7fc0, 0x1, 0x0);
        gbc.writeMem(0xcca5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa5f8, gbc.sp());
        EXPECT(0xcca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca5));
        EXPECT(0x1a, gbc.readMem(0xcca6));
        // CB 1A 0217
        gbc.setState(0xe875, 0xe655, 0x3630, 0xfdd0, 0xa7ac, 0x15ff, 0x1, 0x0);
        gbc.writeMem(0xe875, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe655, gbc.sp());
        EXPECT(0xe877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe875));
        EXPECT(0x1a, gbc.readMem(0xe876));
        // CB 1A 0219
        gbc.setState(0x8546, 0x68b3, 0x8e20, 0x2ade, 0x5283, 0x69cf, 0x0, 0x1);
        gbc.writeMem(0x8546, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x68b3, gbc.sp());
        EXPECT(0x8548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8546));
        EXPECT(0x1a, gbc.readMem(0x8547));
        // CB 1A 021A
        gbc.setState(0xd68, 0xb71f, 0x3b70, 0x7541, 0x4709, 0xf49a, 0x1, 0x0);
        gbc.writeMem(0xd68, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb71f, gbc.sp());
        EXPECT(0xd6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 021B
        gbc.setState(0xd079, 0xe374, 0x5e40, 0xf71, 0x4f11, 0xabe4, 0x1, 0x1);
        gbc.writeMem(0xd079, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe374, gbc.sp());
        EXPECT(0xd07b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd079));
        EXPECT(0x1a, gbc.readMem(0xd07a));
        // CB 1A 021C
        gbc.setState(0x3a60, 0xb9a, 0xf720, 0x771f, 0x9fb, 0x11e3, 0x0, 0x1);
        gbc.writeMem(0x3a60, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb9a, gbc.sp());
        EXPECT(0x3a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 021D
        gbc.setState(0xbb6c, 0xa34e, 0xd4b0, 0x66e, 0x464e, 0x9fba, 0x0, 0x0);
        gbc.writeMem(0xbb6c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa34e, gbc.sp());
        EXPECT(0xbb6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb6c));
        EXPECT(0x1a, gbc.readMem(0xbb6d));
        // CB 1A 021E
        gbc.setState(0x6db, 0x175f, 0x7e0, 0x7bb1, 0x9f7c, 0x538, 0x1, 0x1);
        gbc.writeMem(0x6db, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x175f, gbc.sp());
        EXPECT(0x6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 021F
        gbc.setState(0x1c12, 0xcacc, 0x4cd0, 0x47f7, 0xa569, 0xda6c, 0x1, 0x1);
        gbc.writeMem(0x1c12, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcacc, gbc.sp());
        EXPECT(0x1c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0220
        gbc.setState(0x201f, 0x9845, 0xb10, 0x54a2, 0xd380, 0x7205, 0x0, 0x1);
        gbc.writeMem(0x201f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9845, gbc.sp());
        EXPECT(0x2021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0221
        gbc.setState(0x1bbd, 0xa0aa, 0x4100, 0xc2c6, 0xc791, 0xbd4a, 0x0, 0x1);
        gbc.writeMem(0x1bbd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa0aa, gbc.sp());
        EXPECT(0x1bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0222
        gbc.setState(0x97d1, 0x778f, 0x14d0, 0xb5b1, 0x1acf, 0x4057, 0x0, 0x0);
        gbc.writeMem(0x97d1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x778f, gbc.sp());
        EXPECT(0x97d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d1));
        EXPECT(0x1a, gbc.readMem(0x97d2));
        // CB 1A 0223
        gbc.setState(0xda9, 0x9a5c, 0x62d0, 0x6022, 0xefd9, 0xb908, 0x1, 0x0);
        gbc.writeMem(0xda9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9a5c, gbc.sp());
        EXPECT(0xdab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0224
        gbc.setState(0x610b, 0x9169, 0x15d0, 0x48eb, 0xab5a, 0x8293, 0x0, 0x0);
        gbc.writeMem(0x610b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9169, gbc.sp());
        EXPECT(0x610d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0225
        gbc.setState(0x666b, 0xb638, 0x2b90, 0xa557, 0xc451, 0x2ea8, 0x0, 0x1);
        gbc.writeMem(0x666b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb638, gbc.sp());
        EXPECT(0x666d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0227
        gbc.setState(0x5bd4, 0x35ba, 0xb330, 0xd8f0, 0xcf99, 0xe10a, 0x1, 0x0);
        gbc.writeMem(0x5bd4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x35ba, gbc.sp());
        EXPECT(0x5bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0228
        gbc.setState(0x748d, 0xe0c6, 0xca0, 0xcbd4, 0x4d55, 0x6a40, 0x0, 0x1);
        gbc.writeMem(0x748d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe0c6, gbc.sp());
        EXPECT(0x748f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0229
        gbc.setState(0xa1ca, 0xd96b, 0xf770, 0x422c, 0xb581, 0x8b0f, 0x1, 0x0);
        gbc.writeMem(0xa1ca, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd96b, gbc.sp());
        EXPECT(0xa1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ca));
        EXPECT(0x1a, gbc.readMem(0xa1cb));
        // CB 1A 022A
        gbc.setState(0x935c, 0xce7, 0x51a0, 0x8d9c, 0x7a07, 0x1353, 0x0, 0x1);
        gbc.writeMem(0x935c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xce7, gbc.sp());
        EXPECT(0x935e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935c));
        EXPECT(0x1a, gbc.readMem(0x935d));
        // CB 1A 022B
        gbc.setState(0xc7db, 0x869, 0x6f40, 0xb5b0, 0x44f5, 0x1d9c, 0x0, 0x0);
        gbc.writeMem(0xc7db, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x869, gbc.sp());
        EXPECT(0xc7dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7db));
        EXPECT(0x1a, gbc.readMem(0xc7dc));
        // CB 1A 022C
        gbc.setState(0xd367, 0xae73, 0xb570, 0x48, 0x7744, 0x7c9e, 0x1, 0x0);
        gbc.writeMem(0xd367, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xae73, gbc.sp());
        EXPECT(0xd369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd367));
        EXPECT(0x1a, gbc.readMem(0xd368));
        // CB 1A 022D
        gbc.setState(0xd5d5, 0x89f3, 0x35a0, 0x40b1, 0x4354, 0x518c, 0x0, 0x1);
        gbc.writeMem(0xd5d5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x89f3, gbc.sp());
        EXPECT(0xd5d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d5));
        EXPECT(0x1a, gbc.readMem(0xd5d6));
        // CB 1A 022E
        gbc.setState(0x60ad, 0x20b6, 0x8ca0, 0x7518, 0xc199, 0xd026, 0x1, 0x1);
        gbc.writeMem(0x60ad, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x20b6, gbc.sp());
        EXPECT(0x60af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0230
        gbc.setState(0x13fd, 0x5b37, 0x9140, 0x6f2d, 0x37da, 0x6adf, 0x0, 0x1);
        gbc.writeMem(0x13fd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5b37, gbc.sp());
        EXPECT(0x13ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0231
        gbc.setState(0x45cd, 0xe42c, 0xf5c0, 0x130b, 0xb7ed, 0x2ae8, 0x1, 0x1);
        gbc.writeMem(0x45cd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe42c, gbc.sp());
        EXPECT(0x45cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0232
        gbc.setState(0x27, 0x6ca7, 0x1a80, 0x3d31, 0xc2de, 0xe5e6, 0x1, 0x1);
        gbc.writeMem(0x27, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6ca7, gbc.sp());
        EXPECT(0x29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0233
        gbc.setState(0xb449, 0x39c, 0xb060, 0x8f4c, 0x9cfe, 0x3665, 0x1, 0x0);
        gbc.writeMem(0xb449, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x39c, gbc.sp());
        EXPECT(0xb44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb449));
        EXPECT(0x1a, gbc.readMem(0xb44a));
        // CB 1A 0234
        gbc.setState(0x9b70, 0x9d7b, 0x9110, 0xd6ee, 0x6df1, 0x90ed, 0x1, 0x0);
        gbc.writeMem(0x9b70, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9d7b, gbc.sp());
        EXPECT(0x9b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b70));
        EXPECT(0x1a, gbc.readMem(0x9b71));
        // CB 1A 0235
        gbc.setState(0xdd47, 0xe6c8, 0x13f0, 0xc8c2, 0x134f, 0x1ce8, 0x1, 0x1);
        gbc.writeMem(0xdd47, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe6c8, gbc.sp());
        EXPECT(0xdd49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd47));
        EXPECT(0x1a, gbc.readMem(0xdd48));
        // CB 1A 0236
        gbc.setState(0xb70c, 0x60e0, 0x7940, 0xe6ae, 0xbb90, 0x5489, 0x1, 0x0);
        gbc.writeMem(0xb70c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x60e0, gbc.sp());
        EXPECT(0xb70e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70c));
        EXPECT(0x1a, gbc.readMem(0xb70d));
        // CB 1A 0237
        gbc.setState(0x378a, 0x85e, 0x25b0, 0xa8e5, 0xe183, 0xb239, 0x0, 0x1);
        gbc.writeMem(0x378a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x85e, gbc.sp());
        EXPECT(0x378c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0238
        gbc.setState(0xeb40, 0x5af0, 0xbca0, 0xe5b1, 0xa0d6, 0xbef3, 0x1, 0x0);
        gbc.writeMem(0xeb40, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5af0, gbc.sp());
        EXPECT(0xeb42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb40));
        EXPECT(0x1a, gbc.readMem(0xeb41));
        // CB 1A 0239
        gbc.setState(0x9f3b, 0xc97b, 0x5f30, 0x27c0, 0xb875, 0xe758, 0x1, 0x0);
        gbc.writeMem(0x9f3b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc97b, gbc.sp());
        EXPECT(0x9f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f3b));
        EXPECT(0x1a, gbc.readMem(0x9f3c));
        // CB 1A 023A
        gbc.setState(0x8466, 0x505b, 0xb9b0, 0x9449, 0x6c8, 0xfd7a, 0x0, 0x0);
        gbc.writeMem(0x8466, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x505b, gbc.sp());
        EXPECT(0x8468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8466));
        EXPECT(0x1a, gbc.readMem(0x8467));
        // CB 1A 023B
        gbc.setState(0xa15, 0x89d0, 0xa660, 0x35cd, 0x8d9a, 0x3087, 0x1, 0x0);
        gbc.writeMem(0xa15, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x89d0, gbc.sp());
        EXPECT(0xa17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 023D
        gbc.setState(0x375d, 0x5f36, 0x5f0, 0x6300, 0xb790, 0xf610, 0x0, 0x1);
        gbc.writeMem(0x375d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5f36, gbc.sp());
        EXPECT(0x375f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 023E
        gbc.setState(0x4c79, 0xa04, 0x4410, 0x8ae8, 0xdf67, 0x9e24, 0x1, 0x1);
        gbc.writeMem(0x4c79, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa04, gbc.sp());
        EXPECT(0x4c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 023F
        gbc.setState(0x93e, 0x17a6, 0xacf0, 0xa0ac, 0xd25a, 0xd0d8, 0x1, 0x0);
        gbc.writeMem(0x93e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x17a6, gbc.sp());
        EXPECT(0x940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0242
        gbc.setState(0x8971, 0x28a1, 0xe40, 0x6182, 0xd5e2, 0xfc66, 0x0, 0x0);
        gbc.writeMem(0x8971, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x28a1, gbc.sp());
        EXPECT(0x8973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8971));
        EXPECT(0x1a, gbc.readMem(0x8972));
        // CB 1A 0243
        gbc.setState(0xa477, 0x18a, 0xeb0, 0xfb77, 0x807b, 0xb672, 0x0, 0x0);
        gbc.writeMem(0xa477, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x18a, gbc.sp());
        EXPECT(0xa479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa477));
        EXPECT(0x1a, gbc.readMem(0xa478));
        // CB 1A 0244
        gbc.setState(0xa5ec, 0x433c, 0x2710, 0x8714, 0xc7, 0x8285, 0x0, 0x1);
        gbc.writeMem(0xa5ec, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x433c, gbc.sp());
        EXPECT(0xa5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ec));
        EXPECT(0x1a, gbc.readMem(0xa5ed));
        // CB 1A 0245
        gbc.setState(0xaafd, 0xe5d0, 0x2d00, 0xa897, 0xb670, 0x6b81, 0x1, 0x1);
        gbc.writeMem(0xaafd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe5d0, gbc.sp());
        EXPECT(0xaaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaafd));
        EXPECT(0x1a, gbc.readMem(0xaafe));
        // CB 1A 0246
        gbc.setState(0xbd90, 0xbb26, 0xe490, 0xc44b, 0xd348, 0xc3e0, 0x0, 0x1);
        gbc.writeMem(0xbd90, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbb26, gbc.sp());
        EXPECT(0xbd92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd90));
        EXPECT(0x1a, gbc.readMem(0xbd91));
        // CB 1A 0247
        gbc.setState(0xdac8, 0xfa70, 0x9b40, 0xdb6e, 0xe0fe, 0xd508, 0x1, 0x0);
        gbc.writeMem(0xdac8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfa70, gbc.sp());
        EXPECT(0xdaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac8));
        EXPECT(0x1a, gbc.readMem(0xdac9));
        // CB 1A 0248
        gbc.setState(0xd573, 0x7708, 0x5480, 0x8260, 0x612a, 0xf67, 0x1, 0x1);
        gbc.writeMem(0xd573, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7708, gbc.sp());
        EXPECT(0xd575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd573));
        EXPECT(0x1a, gbc.readMem(0xd574));
        // CB 1A 024A
        gbc.setState(0x6da9, 0xd8ab, 0x13d0, 0x4494, 0xdbfe, 0x128c, 0x1, 0x0);
        gbc.writeMem(0x6da9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd8ab, gbc.sp());
        EXPECT(0x6dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 024B
        gbc.setState(0x4d9f, 0xce7f, 0xecd0, 0xc466, 0x4c80, 0xdbb0, 0x0, 0x0);
        gbc.writeMem(0x4d9f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xce7f, gbc.sp());
        EXPECT(0x4da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 024C
        gbc.setState(0x3630, 0x6d5f, 0x38f0, 0x57bb, 0x30af, 0x7ce4, 0x0, 0x1);
        gbc.writeMem(0x3630, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6d5f, gbc.sp());
        EXPECT(0x3632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 024D
        gbc.setState(0x5d81, 0x8a02, 0x87d0, 0xd7ac, 0x5080, 0x96ee, 0x0, 0x0);
        gbc.writeMem(0x5d81, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8a02, gbc.sp());
        EXPECT(0x5d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 024E
        gbc.setState(0x6f19, 0x1bd4, 0x4320, 0x1784, 0xdd0e, 0xb19e, 0x0, 0x1);
        gbc.writeMem(0x6f19, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1bd4, gbc.sp());
        EXPECT(0x6f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 024F
        gbc.setState(0xdb04, 0x7e66, 0xe1d0, 0x4cae, 0xb04c, 0x662c, 0x1, 0x1);
        gbc.writeMem(0xdb04, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7e66, gbc.sp());
        EXPECT(0xdb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb04));
        EXPECT(0x1a, gbc.readMem(0xdb05));
        // CB 1A 0250
        gbc.setState(0x877a, 0xa32a, 0x6410, 0x2303, 0xfb9a, 0xb0fd, 0x0, 0x0);
        gbc.writeMem(0x877a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa32a, gbc.sp());
        EXPECT(0x877c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x877a));
        EXPECT(0x1a, gbc.readMem(0x877b));
        // CB 1A 0251
        gbc.setState(0x8dd9, 0x71c0, 0x3250, 0x5f04, 0x69a5, 0x5529, 0x1, 0x0);
        gbc.writeMem(0x8dd9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x71c0, gbc.sp());
        EXPECT(0x8ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd9));
        EXPECT(0x1a, gbc.readMem(0x8dda));
        // CB 1A 0252
        gbc.setState(0xd008, 0x5cae, 0x9dc0, 0x9f89, 0x320c, 0xeed9, 0x0, 0x1);
        gbc.writeMem(0xd008, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5cae, gbc.sp());
        EXPECT(0xd00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd008));
        EXPECT(0x1a, gbc.readMem(0xd009));
        // CB 1A 0253
        gbc.setState(0x289d, 0xc153, 0x3300, 0x69a4, 0xa4d1, 0x2ccb, 0x1, 0x1);
        gbc.writeMem(0x289d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc153, gbc.sp());
        EXPECT(0x289f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0254
        gbc.setState(0x7dba, 0xcc92, 0xbf30, 0xb4af, 0x53bb, 0x74d9, 0x1, 0x0);
        gbc.writeMem(0x7dba, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcc92, gbc.sp());
        EXPECT(0x7dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0255
        gbc.setState(0x5723, 0xf6b1, 0x6ca0, 0xa75a, 0xefc, 0x2668, 0x1, 0x1);
        gbc.writeMem(0x5723, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf6b1, gbc.sp());
        EXPECT(0x5725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0256
        gbc.setState(0x7564, 0xa109, 0xf610, 0x3fa9, 0xf390, 0x2620, 0x0, 0x1);
        gbc.writeMem(0x7564, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa109, gbc.sp());
        EXPECT(0x7566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0257
        gbc.setState(0xd924, 0xe366, 0x1450, 0xbbdd, 0xe261, 0x119b, 0x0, 0x0);
        gbc.writeMem(0xd924, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe366, gbc.sp());
        EXPECT(0xd926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd924));
        EXPECT(0x1a, gbc.readMem(0xd925));
        // CB 1A 0259
        gbc.setState(0x62f1, 0xacfb, 0x6ed0, 0x67e, 0xe60, 0x1e75, 0x1, 0x0);
        gbc.writeMem(0x62f1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xacfb, gbc.sp());
        EXPECT(0x62f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 025A
        gbc.setState(0x9d8e, 0xee46, 0xe400, 0x73e0, 0xf1d6, 0xd56c, 0x1, 0x1);
        gbc.writeMem(0x9d8e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xee46, gbc.sp());
        EXPECT(0x9d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8e));
        EXPECT(0x1a, gbc.readMem(0x9d8f));
        // CB 1A 025B
        gbc.setState(0x1446, 0x24ff, 0x1ae0, 0x56e0, 0x9715, 0x6cc8, 0x1, 0x1);
        gbc.writeMem(0x1446, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x24ff, gbc.sp());
        EXPECT(0x1448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 025C
        gbc.setState(0x32d4, 0xd50b, 0x3660, 0xa36, 0x4c50, 0x831a, 0x0, 0x0);
        gbc.writeMem(0x32d4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd50b, gbc.sp());
        EXPECT(0x32d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 025D
        gbc.setState(0xc8e6, 0xa67, 0x8ec0, 0x8ffb, 0x265b, 0xe23a, 0x0, 0x0);
        gbc.writeMem(0xc8e6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa67, gbc.sp());
        EXPECT(0xc8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e6));
        EXPECT(0x1a, gbc.readMem(0xc8e7));
        // CB 1A 025F
        gbc.setState(0xbf7a, 0x903, 0xd1a0, 0x64ba, 0x277d, 0xf47, 0x0, 0x0);
        gbc.writeMem(0xbf7a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x903, gbc.sp());
        EXPECT(0xbf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf7a));
        EXPECT(0x1a, gbc.readMem(0xbf7b));
        // CB 1A 0260
        gbc.setState(0x16b8, 0xc5a3, 0x2e40, 0x874f, 0x49ef, 0x9364, 0x0, 0x0);
        gbc.writeMem(0x16b8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc5a3, gbc.sp());
        EXPECT(0x16ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0261
        gbc.setState(0x77ba, 0x2ac2, 0x100, 0x643b, 0x7e02, 0xee7f, 0x0, 0x1);
        gbc.writeMem(0x77ba, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2ac2, gbc.sp());
        EXPECT(0x77bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0262
        gbc.setState(0x5a1e, 0xd209, 0x5e0, 0x733e, 0x932a, 0x538f, 0x0, 0x1);
        gbc.writeMem(0x5a1e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd209, gbc.sp());
        EXPECT(0x5a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0263
        gbc.setState(0x571b, 0x4cee, 0x8250, 0x9869, 0xf0fc, 0x1adf, 0x0, 0x1);
        gbc.writeMem(0x571b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4cee, gbc.sp());
        EXPECT(0x571d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0264
        gbc.setState(0xb649, 0x36ff, 0x60e0, 0xccae, 0x9718, 0xe8b, 0x0, 0x1);
        gbc.writeMem(0xb649, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x36ff, gbc.sp());
        EXPECT(0xb64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb649));
        EXPECT(0x1a, gbc.readMem(0xb64a));
        // CB 1A 0265
        gbc.setState(0xad23, 0x83e8, 0x86d0, 0xd221, 0x68e6, 0x2442, 0x0, 0x1);
        gbc.writeMem(0xad23, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x83e8, gbc.sp());
        EXPECT(0xad25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad23));
        EXPECT(0x1a, gbc.readMem(0xad24));
        // CB 1A 0266
        gbc.setState(0x715a, 0xfc6, 0x7b50, 0xa72, 0x6adb, 0x3ebf, 0x1, 0x0);
        gbc.writeMem(0x715a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfc6, gbc.sp());
        EXPECT(0x715c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0267
        gbc.setState(0x55da, 0x4457, 0xfba0, 0x1f17, 0xdf3, 0x5d78, 0x1, 0x0);
        gbc.writeMem(0x55da, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4457, gbc.sp());
        EXPECT(0x55dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0268
        gbc.setState(0xb10c, 0xf950, 0x6540, 0xc78, 0xb2fb, 0x4233, 0x0, 0x1);
        gbc.writeMem(0xb10c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf950, gbc.sp());
        EXPECT(0xb10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10c));
        EXPECT(0x1a, gbc.readMem(0xb10d));
        // CB 1A 0269
        gbc.setState(0x3f5e, 0x344, 0x1990, 0xc606, 0x89fe, 0x384a, 0x1, 0x1);
        gbc.writeMem(0x3f5e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x344, gbc.sp());
        EXPECT(0x3f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 026A
        gbc.setState(0x70ef, 0x7ec3, 0x3510, 0xdd5, 0x56d5, 0x8bb2, 0x1, 0x0);
        gbc.writeMem(0x70ef, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7ec3, gbc.sp());
        EXPECT(0x70f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 026B
        gbc.setState(0x3afe, 0xf4fc, 0xe820, 0xc852, 0xa997, 0x72fe, 0x1, 0x1);
        gbc.writeMem(0x3afe, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf4fc, gbc.sp());
        EXPECT(0x3b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 026C
        gbc.setState(0xd7ca, 0x81ff, 0xa4f0, 0x9988, 0xf0bb, 0x2516, 0x0, 0x0);
        gbc.writeMem(0xd7ca, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x81ff, gbc.sp());
        EXPECT(0xd7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ca));
        EXPECT(0x1a, gbc.readMem(0xd7cb));
        // CB 1A 026D
        gbc.setState(0x7aeb, 0x8a7d, 0x5170, 0x8b05, 0xeab0, 0xed8c, 0x1, 0x1);
        gbc.writeMem(0x7aeb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8a7d, gbc.sp());
        EXPECT(0x7aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 026E
        gbc.setState(0x13d6, 0xd039, 0x42e0, 0x3d1c, 0xf722, 0x7d59, 0x1, 0x1);
        gbc.writeMem(0x13d6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd039, gbc.sp());
        EXPECT(0x13d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 026F
        gbc.setState(0x632, 0x72ee, 0x5fd0, 0xaae8, 0xb035, 0xbe2, 0x0, 0x0);
        gbc.writeMem(0x632, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x72ee, gbc.sp());
        EXPECT(0x634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0270
        gbc.setState(0x4534, 0xb705, 0xdba0, 0x9f54, 0xc104, 0x3ba5, 0x0, 0x1);
        gbc.writeMem(0x4534, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb705, gbc.sp());
        EXPECT(0x4536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0271
        gbc.setState(0x4b34, 0x13bc, 0x130, 0x7277, 0x9fbc, 0xa9b2, 0x0, 0x0);
        gbc.writeMem(0x4b34, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x13bc, gbc.sp());
        EXPECT(0x4b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0272
        gbc.setState(0xa861, 0x8608, 0x720, 0xf34c, 0xfbda, 0xacd6, 0x1, 0x1);
        gbc.writeMem(0xa861, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8608, gbc.sp());
        EXPECT(0xa863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa861));
        EXPECT(0x1a, gbc.readMem(0xa862));
        // CB 1A 0273
        gbc.setState(0x366, 0xd937, 0x8100, 0xed62, 0xb682, 0xd025, 0x0, 0x0);
        gbc.writeMem(0x366, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd937, gbc.sp());
        EXPECT(0x368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0274
        gbc.setState(0x1637, 0x62ea, 0xa8e0, 0xd44a, 0x379d, 0xefdf, 0x1, 0x0);
        gbc.writeMem(0x1637, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x62ea, gbc.sp());
        EXPECT(0x1639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0275
        gbc.setState(0x52b8, 0x22cc, 0x2160, 0xd91e, 0xb542, 0x9671, 0x0, 0x1);
        gbc.writeMem(0x52b8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x22cc, gbc.sp());
        EXPECT(0x52ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0276
        gbc.setState(0x31a8, 0xea8e, 0x52e0, 0xca3a, 0x8f6e, 0x2a3e, 0x1, 0x1);
        gbc.writeMem(0x31a8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xea8e, gbc.sp());
        EXPECT(0x31aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0277
        gbc.setState(0x9ac4, 0x2d99, 0x9b60, 0x6fd9, 0x2abd, 0x72b5, 0x1, 0x0);
        gbc.writeMem(0x9ac4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2d99, gbc.sp());
        EXPECT(0x9ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac4));
        EXPECT(0x1a, gbc.readMem(0x9ac5));
        // CB 1A 0278
        gbc.setState(0xc83f, 0x1e58, 0xe740, 0x6bf8, 0xad42, 0x6450, 0x1, 0x1);
        gbc.writeMem(0xc83f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1e58, gbc.sp());
        EXPECT(0xc841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83f));
        EXPECT(0x1a, gbc.readMem(0xc840));
        // CB 1A 0279
        gbc.setState(0x30b4, 0xdfd8, 0xeb10, 0xa9a9, 0x11e4, 0xf9d4, 0x0, 0x1);
        gbc.writeMem(0x30b4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdfd8, gbc.sp());
        EXPECT(0x30b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 027A
        gbc.setState(0x888d, 0x33d1, 0x930, 0x26ee, 0xc3b2, 0xf82a, 0x1, 0x1);
        gbc.writeMem(0x888d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x33d1, gbc.sp());
        EXPECT(0x888f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888d));
        EXPECT(0x1a, gbc.readMem(0x888e));
        // CB 1A 027B
        gbc.setState(0x1b2c, 0xc73c, 0x3bc0, 0x5ad, 0x1b81, 0xc5b, 0x0, 0x0);
        gbc.writeMem(0x1b2c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc73c, gbc.sp());
        EXPECT(0x1b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 027C
        gbc.setState(0xe39a, 0xe1fa, 0x7ca0, 0x5502, 0x9169, 0x479e, 0x1, 0x1);
        gbc.writeMem(0xe39a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe1fa, gbc.sp());
        EXPECT(0xe39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe39a));
        EXPECT(0x1a, gbc.readMem(0xe39b));
        // CB 1A 027D
        gbc.setState(0x3a4d, 0xfb5d, 0x9f20, 0x83ee, 0x60d3, 0xd300, 0x0, 0x1);
        gbc.writeMem(0x3a4d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfb5d, gbc.sp());
        EXPECT(0x3a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 027E
        gbc.setState(0x84aa, 0x3c9f, 0x1ad0, 0x74e4, 0xb63c, 0xc5c8, 0x1, 0x0);
        gbc.writeMem(0x84aa, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3c9f, gbc.sp());
        EXPECT(0x84ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84aa));
        EXPECT(0x1a, gbc.readMem(0x84ab));
        // CB 1A 027F
        gbc.setState(0x23a9, 0x6c35, 0x95e0, 0x7289, 0x89d7, 0x126c, 0x1, 0x1);
        gbc.writeMem(0x23a9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6c35, gbc.sp());
        EXPECT(0x23ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0280
        gbc.setState(0x76b0, 0x4b95, 0xe710, 0xf5d6, 0xf227, 0x28e2, 0x1, 0x0);
        gbc.writeMem(0x76b0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4b95, gbc.sp());
        EXPECT(0x76b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0281
        gbc.setState(0xefc9, 0x1f54, 0xce90, 0x7948, 0x7549, 0xa3b9, 0x1, 0x0);
        gbc.writeMem(0xefc9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1f54, gbc.sp());
        EXPECT(0xefcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc9));
        EXPECT(0x1a, gbc.readMem(0xefca));
        // CB 1A 0282
        gbc.setState(0x1d4c, 0x58d4, 0x31a0, 0x63e9, 0xfb97, 0xd875, 0x1, 0x1);
        gbc.writeMem(0x1d4c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x58d4, gbc.sp());
        EXPECT(0x1d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0283
        gbc.setState(0x5acb, 0x666c, 0x9bf0, 0x8bb6, 0x95a2, 0xf443, 0x0, 0x1);
        gbc.writeMem(0x5acb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x666c, gbc.sp());
        EXPECT(0x5acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0284
        gbc.setState(0x7c8a, 0x5882, 0x3920, 0x379c, 0x9cb8, 0x995a, 0x0, 0x0);
        gbc.writeMem(0x7c8a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5882, gbc.sp());
        EXPECT(0x7c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0285
        gbc.setState(0x3d43, 0xae37, 0xfef0, 0xec12, 0x2111, 0xdb3e, 0x1, 0x1);
        gbc.writeMem(0x3d43, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xae37, gbc.sp());
        EXPECT(0x3d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0286
        gbc.setState(0x2b0d, 0x5b5b, 0xbfe0, 0x48b6, 0x2dae, 0xede1, 0x1, 0x0);
        gbc.writeMem(0x2b0d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5b5b, gbc.sp());
        EXPECT(0x2b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0287
        gbc.setState(0x124e, 0x68e9, 0xd630, 0xfaf6, 0x4f19, 0x9a8c, 0x0, 0x1);
        gbc.writeMem(0x124e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x68e9, gbc.sp());
        EXPECT(0x1250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0288
        gbc.setState(0x42da, 0xf396, 0x90e0, 0xd556, 0x5ea7, 0x1b88, 0x1, 0x1);
        gbc.writeMem(0x42da, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf396, gbc.sp());
        EXPECT(0x42dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0289
        gbc.setState(0xc79d, 0x8bf7, 0x8360, 0xc7c3, 0xe81e, 0x5a19, 0x0, 0x0);
        gbc.writeMem(0xc79d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8bf7, gbc.sp());
        EXPECT(0xc79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79d));
        EXPECT(0x1a, gbc.readMem(0xc79e));
        // CB 1A 028A
        gbc.setState(0x7617, 0x8128, 0x77b0, 0xf032, 0x61ee, 0x5cc2, 0x0, 0x1);
        gbc.writeMem(0x7617, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8128, gbc.sp());
        EXPECT(0x7619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 028B
        gbc.setState(0x4aa1, 0xc1f8, 0xfda0, 0xbcfd, 0x6ea0, 0x1661, 0x0, 0x0);
        gbc.writeMem(0x4aa1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc1f8, gbc.sp());
        EXPECT(0x4aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 028C
        gbc.setState(0xe9d3, 0x6d8f, 0x61b0, 0x8ffa, 0x902a, 0x4909, 0x1, 0x1);
        gbc.writeMem(0xe9d3, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6d8f, gbc.sp());
        EXPECT(0xe9d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d3));
        EXPECT(0x1a, gbc.readMem(0xe9d4));
        // CB 1A 028D
        gbc.setState(0x8ef6, 0xf87e, 0x5d80, 0x3ea2, 0xb80d, 0x8cdd, 0x1, 0x0);
        gbc.writeMem(0x8ef6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf87e, gbc.sp());
        EXPECT(0x8ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef6));
        EXPECT(0x1a, gbc.readMem(0x8ef7));
        // CB 1A 028E
        gbc.setState(0x619, 0x8271, 0x48b0, 0x153a, 0xce41, 0x2b05, 0x0, 0x0);
        gbc.writeMem(0x619, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8271, gbc.sp());
        EXPECT(0x61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 028F
        gbc.setState(0x2654, 0x844e, 0xdaa0, 0x58cd, 0xd714, 0xb920, 0x0, 0x1);
        gbc.writeMem(0x2654, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x844e, gbc.sp());
        EXPECT(0x2656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0290
        gbc.setState(0x4047, 0xee93, 0x4510, 0x7bea, 0x4da4, 0xdabb, 0x1, 0x0);
        gbc.writeMem(0x4047, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xee93, gbc.sp());
        EXPECT(0x4049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0291
        gbc.setState(0xe191, 0x7e8f, 0x7160, 0xc985, 0xadfc, 0xc735, 0x0, 0x0);
        gbc.writeMem(0xe191, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7e8f, gbc.sp());
        EXPECT(0xe193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe191));
        EXPECT(0x1a, gbc.readMem(0xe192));
        // CB 1A 0292
        gbc.setState(0x917b, 0x8c35, 0x3e20, 0x745a, 0xffa5, 0xc30, 0x1, 0x0);
        gbc.writeMem(0x917b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8c35, gbc.sp());
        EXPECT(0x917d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x917b));
        EXPECT(0x1a, gbc.readMem(0x917c));
        // CB 1A 0293
        gbc.setState(0x5251, 0x99dd, 0x54c0, 0xaa85, 0x4206, 0xd67a, 0x0, 0x0);
        gbc.writeMem(0x5251, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x99dd, gbc.sp());
        EXPECT(0x5253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0294
        gbc.setState(0x9337, 0x14b0, 0xf3e0, 0x7ae3, 0x7adb, 0xb8, 0x1, 0x1);
        gbc.writeMem(0x9337, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x14b0, gbc.sp());
        EXPECT(0x9339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9337));
        EXPECT(0x1a, gbc.readMem(0x9338));
        // CB 1A 0295
        gbc.setState(0x4ca3, 0x5457, 0xf740, 0x4be9, 0x6c40, 0x82c2, 0x0, 0x1);
        gbc.writeMem(0x4ca3, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5457, gbc.sp());
        EXPECT(0x4ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0296
        gbc.setState(0xabb6, 0x3bc1, 0x1750, 0xa1f9, 0xb97c, 0xe02b, 0x1, 0x0);
        gbc.writeMem(0xabb6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3bc1, gbc.sp());
        EXPECT(0xabb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb6));
        EXPECT(0x1a, gbc.readMem(0xabb7));
        // CB 1A 0297
        gbc.setState(0x882a, 0xfa38, 0xb9b0, 0x2111, 0x629a, 0x1684, 0x1, 0x1);
        gbc.writeMem(0x882a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfa38, gbc.sp());
        EXPECT(0x882c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x882a));
        EXPECT(0x1a, gbc.readMem(0x882b));
        // CB 1A 0298
        gbc.setState(0x6e6e, 0x9f5a, 0x5cf0, 0xae01, 0x1c49, 0x2d3e, 0x0, 0x1);
        gbc.writeMem(0x6e6e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9f5a, gbc.sp());
        EXPECT(0x6e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0299
        gbc.setState(0xcb28, 0xcf71, 0x33d0, 0x59c5, 0x295c, 0x7e91, 0x0, 0x1);
        gbc.writeMem(0xcb28, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xcf71, gbc.sp());
        EXPECT(0xcb2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb28));
        EXPECT(0x1a, gbc.readMem(0xcb29));
        // CB 1A 029A
        gbc.setState(0x4240, 0x5843, 0xd1f0, 0x7570, 0x933e, 0x5238, 0x1, 0x1);
        gbc.writeMem(0x4240, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5843, gbc.sp());
        EXPECT(0x4242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 029B
        gbc.setState(0x6d78, 0x52f8, 0x2d0, 0x802c, 0x9f38, 0x7087, 0x0, 0x0);
        gbc.writeMem(0x6d78, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x52f8, gbc.sp());
        EXPECT(0x6d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 029C
        gbc.setState(0x4c53, 0xb51a, 0x6050, 0x5e2a, 0x210c, 0xf2a0, 0x1, 0x0);
        gbc.writeMem(0x4c53, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb51a, gbc.sp());
        EXPECT(0x4c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 029D
        gbc.setState(0x1536, 0xe4db, 0xc160, 0x5342, 0x7627, 0xa14, 0x1, 0x1);
        gbc.writeMem(0x1536, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe4db, gbc.sp());
        EXPECT(0x1538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 029E
        gbc.setState(0x6c37, 0x82e3, 0x8710, 0x891c, 0x4535, 0xddee, 0x1, 0x0);
        gbc.writeMem(0x6c37, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x82e3, gbc.sp());
        EXPECT(0x6c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 029F
        gbc.setState(0x64b6, 0xc1a7, 0xd910, 0xaea4, 0x426d, 0xf009, 0x0, 0x0);
        gbc.writeMem(0x64b6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc1a7, gbc.sp());
        EXPECT(0x64b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02A0
        gbc.setState(0xba09, 0x4306, 0xe740, 0x9eb3, 0xb2da, 0xf926, 0x0, 0x0);
        gbc.writeMem(0xba09, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4306, gbc.sp());
        EXPECT(0xba0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba09));
        EXPECT(0x1a, gbc.readMem(0xba0a));
        // CB 1A 02A1
        gbc.setState(0x5dcf, 0x44ee, 0x6ee0, 0x4697, 0xc699, 0x4dea, 0x0, 0x1);
        gbc.writeMem(0x5dcf, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x44ee, gbc.sp());
        EXPECT(0x5dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02A2
        gbc.setState(0x9585, 0x5cd6, 0x4a20, 0x14fe, 0x1380, 0xeb07, 0x1, 0x1);
        gbc.writeMem(0x9585, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5cd6, gbc.sp());
        EXPECT(0x9587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9585));
        EXPECT(0x1a, gbc.readMem(0x9586));
        // CB 1A 02A3
        gbc.setState(0xbd00, 0x1159, 0x6de0, 0x2ed8, 0x7d70, 0xf3bb, 0x0, 0x0);
        gbc.writeMem(0xbd00, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1159, gbc.sp());
        EXPECT(0xbd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd00));
        EXPECT(0x1a, gbc.readMem(0xbd01));
        // CB 1A 02A4
        gbc.setState(0xbb6c, 0xc48a, 0x35f0, 0x8eab, 0xf2da, 0xc4d5, 0x0, 0x1);
        gbc.writeMem(0xbb6c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc48a, gbc.sp());
        EXPECT(0xbb6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb6c));
        EXPECT(0x1a, gbc.readMem(0xbb6d));
        // CB 1A 02A5
        gbc.setState(0x5cf5, 0x8d49, 0xa090, 0xad74, 0x21b8, 0x3892, 0x1, 0x1);
        gbc.writeMem(0x5cf5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8d49, gbc.sp());
        EXPECT(0x5cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02A6
        gbc.setState(0x96a0, 0x8d3b, 0xc1a0, 0x20c1, 0xeea4, 0x22a1, 0x0, 0x1);
        gbc.writeMem(0x96a0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8d3b, gbc.sp());
        EXPECT(0x96a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a0));
        EXPECT(0x1a, gbc.readMem(0x96a1));
        // CB 1A 02A7
        gbc.setState(0x8beb, 0xa3c, 0xe000, 0xdefd, 0x985d, 0x38fd, 0x1, 0x0);
        gbc.writeMem(0x8beb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa3c, gbc.sp());
        EXPECT(0x8bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8beb));
        EXPECT(0x1a, gbc.readMem(0x8bec));
        // CB 1A 02A8
        gbc.setState(0x158, 0xd17e, 0x9af0, 0xbae9, 0xa80e, 0xaf3f, 0x1, 0x0);
        gbc.writeMem(0x158, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd17e, gbc.sp());
        EXPECT(0x15a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02A9
        gbc.setState(0x2135, 0xec8b, 0x82c0, 0xcf08, 0x8cf4, 0xd5a6, 0x0, 0x1);
        gbc.writeMem(0x2135, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xec8b, gbc.sp());
        EXPECT(0x2137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02AA
        gbc.setState(0xde04, 0x2545, 0xde80, 0x951a, 0x9669, 0x9ba9, 0x1, 0x0);
        gbc.writeMem(0xde04, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2545, gbc.sp());
        EXPECT(0xde06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde04));
        EXPECT(0x1a, gbc.readMem(0xde05));
        // CB 1A 02AB
        gbc.setState(0xa556, 0xfc22, 0x7850, 0x4db6, 0x92c0, 0x3651, 0x1, 0x1);
        gbc.writeMem(0xa556, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfc22, gbc.sp());
        EXPECT(0xa558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa556));
        EXPECT(0x1a, gbc.readMem(0xa557));
        // CB 1A 02AC
        gbc.setState(0xde00, 0xe72a, 0x8e10, 0xd9ff, 0xd16f, 0xe6ad, 0x0, 0x0);
        gbc.writeMem(0xde00, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe72a, gbc.sp());
        EXPECT(0xde02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde00));
        EXPECT(0x1a, gbc.readMem(0xde01));
        // CB 1A 02AD
        gbc.setState(0xd55f, 0x2d8f, 0xea0, 0x4178, 0x9c7f, 0x65db, 0x0, 0x1);
        gbc.writeMem(0xd55f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2d8f, gbc.sp());
        EXPECT(0xd561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd55f));
        EXPECT(0x1a, gbc.readMem(0xd560));
        // CB 1A 02AE
        gbc.setState(0xef22, 0x79bf, 0x75d0, 0x5062, 0x36d7, 0xc4f6, 0x1, 0x0);
        gbc.writeMem(0xef22, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x79bf, gbc.sp());
        EXPECT(0xef24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef22));
        EXPECT(0x1a, gbc.readMem(0xef23));
        // CB 1A 02AF
        gbc.setState(0xc503, 0x952a, 0x2e10, 0x1e26, 0x50e4, 0x21b6, 0x1, 0x1);
        gbc.writeMem(0xc503, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x952a, gbc.sp());
        EXPECT(0xc505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc503));
        EXPECT(0x1a, gbc.readMem(0xc504));
        // CB 1A 02B0
        gbc.setState(0xa, 0xb304, 0xaf10, 0xd2ca, 0x5700, 0x54b4, 0x1, 0x0);
        gbc.writeMem(0xa, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb304, gbc.sp());
        EXPECT(0xc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02B1
        gbc.setState(0xc4cf, 0x8a1, 0x5ab0, 0xfa7d, 0x3c0b, 0x8188, 0x1, 0x0);
        gbc.writeMem(0xc4cf, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8a1, gbc.sp());
        EXPECT(0xc4d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cf));
        EXPECT(0x1a, gbc.readMem(0xc4d0));
        // CB 1A 02B2
        gbc.setState(0xdc71, 0xaac9, 0x59e0, 0x51fa, 0x5ff2, 0x6093, 0x1, 0x1);
        gbc.writeMem(0xdc71, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xaac9, gbc.sp());
        EXPECT(0xdc73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc71));
        EXPECT(0x1a, gbc.readMem(0xdc72));
        // CB 1A 02B3
        gbc.setState(0x5cd7, 0x17c6, 0x4ea0, 0x4a32, 0xa325, 0x882b, 0x1, 0x1);
        gbc.writeMem(0x5cd7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x17c6, gbc.sp());
        EXPECT(0x5cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02B4
        gbc.setState(0x661d, 0xdf3e, 0x4bc0, 0x51bd, 0xdab6, 0xa15c, 0x0, 0x1);
        gbc.writeMem(0x661d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdf3e, gbc.sp());
        EXPECT(0x661f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02B5
        gbc.setState(0x73c1, 0xcec, 0xe530, 0x52d7, 0x2e46, 0x8a91, 0x0, 0x0);
        gbc.writeMem(0x73c1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xcec, gbc.sp());
        EXPECT(0x73c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02B6
        gbc.setState(0xe355, 0xe10, 0x2fa0, 0x720, 0x222d, 0x1b8e, 0x1, 0x0);
        gbc.writeMem(0xe355, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe10, gbc.sp());
        EXPECT(0xe357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe355));
        EXPECT(0x1a, gbc.readMem(0xe356));
        // CB 1A 02B7
        gbc.setState(0x21bd, 0x805b, 0xec60, 0x3770, 0x4f67, 0x495a, 0x0, 0x1);
        gbc.writeMem(0x21bd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x805b, gbc.sp());
        EXPECT(0x21bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02B8
        gbc.setState(0x5b8d, 0x7c4c, 0xbfc0, 0xd5a0, 0xef8a, 0xcbe6, 0x1, 0x0);
        gbc.writeMem(0x5b8d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7c4c, gbc.sp());
        EXPECT(0x5b8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02B9
        gbc.setState(0x1574, 0xf1fd, 0x36b0, 0x82b7, 0x1d34, 0x18ba, 0x1, 0x0);
        gbc.writeMem(0x1574, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf1fd, gbc.sp());
        EXPECT(0x1576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02BA
        gbc.setState(0x5bdc, 0x55cc, 0x1b0, 0x719c, 0xe53a, 0x7edf, 0x1, 0x1);
        gbc.writeMem(0x5bdc, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x55cc, gbc.sp());
        EXPECT(0x5bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02BB
        gbc.setState(0xdb40, 0xc79d, 0x4230, 0x7861, 0xa02e, 0x1bca, 0x0, 0x0);
        gbc.writeMem(0xdb40, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc79d, gbc.sp());
        EXPECT(0xdb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb40));
        EXPECT(0x1a, gbc.readMem(0xdb41));
        // CB 1A 02BC
        gbc.setState(0xaafe, 0xa7c9, 0x74d0, 0xcccf, 0xe5ff, 0x16ff, 0x0, 0x1);
        gbc.writeMem(0xaafe, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa7c9, gbc.sp());
        EXPECT(0xab00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaafe));
        EXPECT(0x1a, gbc.readMem(0xaaff));
        // CB 1A 02BD
        gbc.setState(0x3d07, 0x248e, 0x3cb0, 0x8af9, 0xfbf7, 0x1fa2, 0x1, 0x1);
        gbc.writeMem(0x3d07, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x248e, gbc.sp());
        EXPECT(0x3d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02BE
        gbc.setState(0xc3fd, 0xb58a, 0x6870, 0xee96, 0x39fc, 0xac1b, 0x1, 0x0);
        gbc.writeMem(0xc3fd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb58a, gbc.sp());
        EXPECT(0xc3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3fd));
        EXPECT(0x1a, gbc.readMem(0xc3fe));
        // CB 1A 02BF
        gbc.setState(0xd894, 0xc2e9, 0xe90, 0x75dc, 0x457e, 0x9832, 0x0, 0x0);
        gbc.writeMem(0xd894, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc2e9, gbc.sp());
        EXPECT(0xd896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd894));
        EXPECT(0x1a, gbc.readMem(0xd895));
        // CB 1A 02C0
        gbc.setState(0x8462, 0xced6, 0xc670, 0x2228, 0x6abe, 0x6ebe, 0x1, 0x0);
        gbc.writeMem(0x8462, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xced6, gbc.sp());
        EXPECT(0x8464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8462));
        EXPECT(0x1a, gbc.readMem(0x8463));
        // CB 1A 02C1
        gbc.setState(0x3731, 0x8f6a, 0xa7c0, 0x919c, 0xed78, 0x2fd, 0x0, 0x0);
        gbc.writeMem(0x3731, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8f6a, gbc.sp());
        EXPECT(0x3733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02C2
        gbc.setState(0x4559, 0x807b, 0xa9f0, 0x976, 0xac2b, 0xdcfc, 0x1, 0x0);
        gbc.writeMem(0x4559, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x807b, gbc.sp());
        EXPECT(0x455b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02C3
        gbc.setState(0x51c6, 0xe470, 0xbe00, 0x821e, 0xe4f0, 0xbd45, 0x1, 0x0);
        gbc.writeMem(0x51c6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe470, gbc.sp());
        EXPECT(0x51c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02C4
        gbc.setState(0x6880, 0x5041, 0x9ab0, 0xf212, 0xfc0c, 0x5f18, 0x1, 0x1);
        gbc.writeMem(0x6880, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5041, gbc.sp());
        EXPECT(0x6882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02C5
        gbc.setState(0x3c5b, 0xc026, 0x48c0, 0xaafe, 0xc2b1, 0xb998, 0x0, 0x0);
        gbc.writeMem(0x3c5b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc026, gbc.sp());
        EXPECT(0x3c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02C6
        gbc.setState(0x4e97, 0x36a6, 0x9550, 0x3bb, 0xd1b4, 0x966a, 0x1, 0x0);
        gbc.writeMem(0x4e97, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x36a6, gbc.sp());
        EXPECT(0x4e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02C7
        gbc.setState(0x60dd, 0x7144, 0x49d0, 0xa6d2, 0x7ef, 0xd69f, 0x1, 0x0);
        gbc.writeMem(0x60dd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7144, gbc.sp());
        EXPECT(0x60df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02C8
        gbc.setState(0x741b, 0xb557, 0x2d90, 0x8e20, 0xb80d, 0x956a, 0x0, 0x1);
        gbc.writeMem(0x741b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb557, gbc.sp());
        EXPECT(0x741d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02C9
        gbc.setState(0x3db7, 0x1f56, 0xe020, 0x8e66, 0x290a, 0x309e, 0x0, 0x1);
        gbc.writeMem(0x3db7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1f56, gbc.sp());
        EXPECT(0x3db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02CA
        gbc.setState(0xbc47, 0x480d, 0xe610, 0x8d06, 0x1718, 0x9bf0, 0x0, 0x0);
        gbc.writeMem(0xbc47, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x480d, gbc.sp());
        EXPECT(0xbc49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc47));
        EXPECT(0x1a, gbc.readMem(0xbc48));
        // CB 1A 02CB
        gbc.setState(0x39b2, 0xc60f, 0xe510, 0x3ac2, 0x2480, 0x88d3, 0x0, 0x0);
        gbc.writeMem(0x39b2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc60f, gbc.sp());
        EXPECT(0x39b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02CC
        gbc.setState(0x8253, 0x7a88, 0xfb30, 0x6b18, 0xc2eb, 0x4470, 0x0, 0x1);
        gbc.writeMem(0x8253, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7a88, gbc.sp());
        EXPECT(0x8255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8253));
        EXPECT(0x1a, gbc.readMem(0x8254));
        // CB 1A 02CD
        gbc.setState(0x25b6, 0x7e32, 0x3df0, 0x9b44, 0x3253, 0x3b3, 0x1, 0x0);
        gbc.writeMem(0x25b6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7e32, gbc.sp());
        EXPECT(0x25b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02CF
        gbc.setState(0xbd65, 0x9fde, 0x2050, 0xcec2, 0x2470, 0xd607, 0x0, 0x0);
        gbc.writeMem(0xbd65, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9fde, gbc.sp());
        EXPECT(0xbd67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd65));
        EXPECT(0x1a, gbc.readMem(0xbd66));
        // CB 1A 02D0
        gbc.setState(0x79ac, 0xbc8f, 0x71b0, 0x8bdf, 0x11eb, 0xc1f5, 0x1, 0x0);
        gbc.writeMem(0x79ac, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbc8f, gbc.sp());
        EXPECT(0x79ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02D1
        gbc.setState(0x6842, 0x7d62, 0x95d0, 0xc559, 0x904f, 0x63b7, 0x1, 0x1);
        gbc.writeMem(0x6842, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7d62, gbc.sp());
        EXPECT(0x6844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02D2
        gbc.setState(0x3b30, 0x309e, 0x6ea0, 0xbde3, 0x230b, 0xcda0, 0x0, 0x0);
        gbc.writeMem(0x3b30, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x309e, gbc.sp());
        EXPECT(0x3b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02D3
        gbc.setState(0xbbcb, 0xbd23, 0x91a0, 0x60f2, 0xfe53, 0x97fc, 0x0, 0x0);
        gbc.writeMem(0xbbcb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbd23, gbc.sp());
        EXPECT(0xbbcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbcb));
        EXPECT(0x1a, gbc.readMem(0xbbcc));
        // CB 1A 02D4
        gbc.setState(0xd2fb, 0xe368, 0xf380, 0x1936, 0xbcb2, 0x8d0b, 0x0, 0x1);
        gbc.writeMem(0xd2fb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe368, gbc.sp());
        EXPECT(0xd2fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2fb));
        EXPECT(0x1a, gbc.readMem(0xd2fc));
        // CB 1A 02D5
        gbc.setState(0xfeb, 0x3ee9, 0xb40, 0xbaee, 0x8a58, 0x2cee, 0x1, 0x1);
        gbc.writeMem(0xfeb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3ee9, gbc.sp());
        EXPECT(0xfed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02D6
        gbc.setState(0xc05a, 0xb12f, 0xc3c0, 0xdaaf, 0xb4ca, 0x55d9, 0x1, 0x1);
        gbc.writeMem(0xc05a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb12f, gbc.sp());
        EXPECT(0xc05c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc05a));
        EXPECT(0x1a, gbc.readMem(0xc05b));
        // CB 1A 02D7
        gbc.setState(0x8863, 0x799, 0x9e90, 0x3262, 0x9fe6, 0xfb8d, 0x0, 0x1);
        gbc.writeMem(0x8863, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x799, gbc.sp());
        EXPECT(0x8865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8863));
        EXPECT(0x1a, gbc.readMem(0x8864));
        // CB 1A 02D8
        gbc.setState(0xe478, 0x5f8f, 0xdd80, 0xaef, 0xb8bc, 0xf293, 0x1, 0x0);
        gbc.writeMem(0xe478, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5f8f, gbc.sp());
        EXPECT(0xe47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe478));
        EXPECT(0x1a, gbc.readMem(0xe479));
        // CB 1A 02D9
        gbc.setState(0xb6e0, 0x2ce4, 0xdae0, 0x63ff, 0x8943, 0xddb9, 0x0, 0x0);
        gbc.writeMem(0xb6e0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2ce4, gbc.sp());
        EXPECT(0xb6e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e0));
        EXPECT(0x1a, gbc.readMem(0xb6e1));
        // CB 1A 02DA
        gbc.setState(0x60d0, 0xdc91, 0xab10, 0xc4b, 0xda8c, 0xeec1, 0x0, 0x0);
        gbc.writeMem(0x60d0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdc91, gbc.sp());
        EXPECT(0x60d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02DB
        gbc.setState(0x2049, 0xd843, 0xcb0, 0x4bf7, 0x5480, 0x5ad, 0x1, 0x1);
        gbc.writeMem(0x2049, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd843, gbc.sp());
        EXPECT(0x204b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02DC
        gbc.setState(0x18d1, 0x7985, 0x3680, 0xffa8, 0x723, 0xdd80, 0x0, 0x0);
        gbc.writeMem(0x18d1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7985, gbc.sp());
        EXPECT(0x18d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02DD
        gbc.setState(0xb5eb, 0x2781, 0x1540, 0xc81e, 0x7826, 0x56a9, 0x0, 0x1);
        gbc.writeMem(0xb5eb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2781, gbc.sp());
        EXPECT(0xb5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5eb));
        EXPECT(0x1a, gbc.readMem(0xb5ec));
        // CB 1A 02DE
        gbc.setState(0x7758, 0x110, 0xd5b0, 0x88fa, 0x880e, 0xf30c, 0x1, 0x1);
        gbc.writeMem(0x7758, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x110, gbc.sp());
        EXPECT(0x775a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02DF
        gbc.setState(0xa279, 0xf4a, 0xcc50, 0x7a0d, 0x8534, 0x32f, 0x0, 0x1);
        gbc.writeMem(0xa279, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf4a, gbc.sp());
        EXPECT(0xa27b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa279));
        EXPECT(0x1a, gbc.readMem(0xa27a));
        // CB 1A 02E0
        gbc.setState(0xe759, 0xcd38, 0xad70, 0xeb70, 0xb8c9, 0x5e74, 0x0, 0x1);
        gbc.writeMem(0xe759, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcd38, gbc.sp());
        EXPECT(0xe75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe759));
        EXPECT(0x1a, gbc.readMem(0xe75a));
        // CB 1A 02E1
        gbc.setState(0xde6e, 0x78d0, 0x71a0, 0xebe, 0x30ee, 0xadd4, 0x0, 0x0);
        gbc.writeMem(0xde6e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x78d0, gbc.sp());
        EXPECT(0xde70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6e));
        EXPECT(0x1a, gbc.readMem(0xde6f));
        // CB 1A 02E2
        gbc.setState(0xb6f9, 0xd3fd, 0xa460, 0xf5eb, 0x1aec, 0xd41b, 0x1, 0x1);
        gbc.writeMem(0xb6f9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd3fd, gbc.sp());
        EXPECT(0xb6fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f9));
        EXPECT(0x1a, gbc.readMem(0xb6fa));
        // CB 1A 02E3
        gbc.setState(0x66b5, 0x7706, 0xe510, 0xac32, 0x3a8b, 0x935c, 0x1, 0x0);
        gbc.writeMem(0x66b5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7706, gbc.sp());
        EXPECT(0x66b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02E5
        gbc.setState(0x6e1e, 0x1f3e, 0x1f10, 0xc985, 0x5ace, 0x2165, 0x0, 0x1);
        gbc.writeMem(0x6e1e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1f3e, gbc.sp());
        EXPECT(0x6e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02E6
        gbc.setState(0x1d8f, 0x3a53, 0xd850, 0x522c, 0xc9f9, 0xc51, 0x1, 0x0);
        gbc.writeMem(0x1d8f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3a53, gbc.sp());
        EXPECT(0x1d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02E7
        gbc.setState(0xb7cb, 0xb954, 0xb930, 0xed8b, 0x7ea2, 0xc2ea, 0x0, 0x0);
        gbc.writeMem(0xb7cb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb954, gbc.sp());
        EXPECT(0xb7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7cb));
        EXPECT(0x1a, gbc.readMem(0xb7cc));
        // CB 1A 02E8
        gbc.setState(0x2134, 0x4fce, 0x5750, 0x483, 0x8ca4, 0x36cf, 0x1, 0x0);
        gbc.writeMem(0x2134, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4fce, gbc.sp());
        EXPECT(0x2136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02E9
        gbc.setState(0xd4a3, 0xa658, 0xea0, 0xdee, 0x5be1, 0xa77f, 0x1, 0x0);
        gbc.writeMem(0xd4a3, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa658, gbc.sp());
        EXPECT(0xd4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a3));
        EXPECT(0x1a, gbc.readMem(0xd4a4));
        // CB 1A 02EA
        gbc.setState(0x901d, 0xbd5c, 0xc840, 0x4287, 0x59c9, 0xbf4e, 0x1, 0x1);
        gbc.writeMem(0x901d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbd5c, gbc.sp());
        EXPECT(0x901f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901d));
        EXPECT(0x1a, gbc.readMem(0x901e));
        // CB 1A 02EB
        gbc.setState(0xd74a, 0x647c, 0xbc50, 0x5f9, 0x6371, 0xd26d, 0x0, 0x0);
        gbc.writeMem(0xd74a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x647c, gbc.sp());
        EXPECT(0xd74c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd74a));
        EXPECT(0x1a, gbc.readMem(0xd74b));
        // CB 1A 02EC
        gbc.setState(0xcc1e, 0xe425, 0x98b0, 0xc7ab, 0x9a24, 0x5951, 0x0, 0x0);
        gbc.writeMem(0xcc1e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe425, gbc.sp());
        EXPECT(0xcc20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1e));
        EXPECT(0x1a, gbc.readMem(0xcc1f));
        // CB 1A 02ED
        gbc.setState(0x42d, 0x5a25, 0xdd80, 0xdb97, 0x308d, 0x491b, 0x1, 0x0);
        gbc.writeMem(0x42d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5a25, gbc.sp());
        EXPECT(0x42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02EE
        gbc.setState(0xc4c8, 0xda4b, 0x9560, 0x1582, 0xa8d3, 0x41c3, 0x0, 0x1);
        gbc.writeMem(0xc4c8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xda4b, gbc.sp());
        EXPECT(0xc4ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c8));
        EXPECT(0x1a, gbc.readMem(0xc4c9));
        // CB 1A 02EF
        gbc.setState(0x2cc9, 0x142c, 0xc7b0, 0x96fd, 0xbfe6, 0xaf7e, 0x0, 0x1);
        gbc.writeMem(0x2cc9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x142c, gbc.sp());
        EXPECT(0x2ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02F0
        gbc.setState(0x927a, 0x3b05, 0xa220, 0x25df, 0x1092, 0x1dde, 0x0, 0x0);
        gbc.writeMem(0x927a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3b05, gbc.sp());
        EXPECT(0x927c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x927a));
        EXPECT(0x1a, gbc.readMem(0x927b));
        // CB 1A 02F2
        gbc.setState(0x1f2c, 0x7e29, 0xa350, 0xc24f, 0xc2de, 0xd731, 0x0, 0x0);
        gbc.writeMem(0x1f2c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7e29, gbc.sp());
        EXPECT(0x1f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02F3
        gbc.setState(0x2146, 0x12be, 0x240, 0x94cf, 0xb7c3, 0x1015, 0x1, 0x1);
        gbc.writeMem(0x2146, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x12be, gbc.sp());
        EXPECT(0x2148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02F4
        gbc.setState(0x7ba0, 0xfc4, 0xc5b0, 0xecf5, 0x9253, 0x31fe, 0x1, 0x0);
        gbc.writeMem(0x7ba0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfc4, gbc.sp());
        EXPECT(0x7ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02F5
        gbc.setState(0x9995, 0x1653, 0xef50, 0x98f4, 0xd9a1, 0xcccd, 0x0, 0x1);
        gbc.writeMem(0x9995, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1653, gbc.sp());
        EXPECT(0x9997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9995));
        EXPECT(0x1a, gbc.readMem(0x9996));
        // CB 1A 02F6
        gbc.setState(0x3efd, 0x6267, 0x6450, 0xd96, 0x84da, 0xba38, 0x0, 0x1);
        gbc.writeMem(0x3efd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6267, gbc.sp());
        EXPECT(0x3eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02F7
        gbc.setState(0xe963, 0x7d80, 0x3d20, 0xa0ba, 0xd599, 0x5a42, 0x1, 0x0);
        gbc.writeMem(0xe963, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7d80, gbc.sp());
        EXPECT(0xe965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe963));
        EXPECT(0x1a, gbc.readMem(0xe964));
        // CB 1A 02F8
        gbc.setState(0x97a4, 0xe4d4, 0xaa0, 0x9761, 0xaf1e, 0xe579, 0x0, 0x0);
        gbc.writeMem(0x97a4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe4d4, gbc.sp());
        EXPECT(0x97a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a4));
        EXPECT(0x1a, gbc.readMem(0x97a5));
        // CB 1A 02F9
        gbc.setState(0x638, 0xcea4, 0x1a50, 0xe423, 0x4fd7, 0x23b3, 0x1, 0x0);
        gbc.writeMem(0x638, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcea4, gbc.sp());
        EXPECT(0x63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02FA
        gbc.setState(0x3d01, 0x40e5, 0x1400, 0xac9d, 0x93dc, 0xf635, 0x1, 0x0);
        gbc.writeMem(0x3d01, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x40e5, gbc.sp());
        EXPECT(0x3d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02FB
        gbc.setState(0xbdf4, 0x53f8, 0xd150, 0x47c, 0xaab, 0x73f7, 0x0, 0x1);
        gbc.writeMem(0xbdf4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x53f8, gbc.sp());
        EXPECT(0xbdf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf4));
        EXPECT(0x1a, gbc.readMem(0xbdf5));
        // CB 1A 02FC
        gbc.setState(0x47fb, 0xcc11, 0x7270, 0xf3d0, 0x70b7, 0x4d41, 0x1, 0x0);
        gbc.writeMem(0x47fb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcc11, gbc.sp());
        EXPECT(0x47fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02FD
        gbc.setState(0x4101, 0x7a65, 0xeec0, 0x64a2, 0xb01f, 0xf3fe, 0x1, 0x0);
        gbc.writeMem(0x4101, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7a65, gbc.sp());
        EXPECT(0x4103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 02FE
        gbc.setState(0x6a16, 0x9d84, 0xca60, 0x5dcd, 0xd5fe, 0xa86c, 0x0, 0x0);
        gbc.writeMem(0x6a16, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9d84, gbc.sp());
        EXPECT(0x6a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 02FF
        gbc.setState(0x3dc3, 0xb9a7, 0x7460, 0xe820, 0xd0b3, 0xef0b, 0x1, 0x0);
        gbc.writeMem(0x3dc3, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb9a7, gbc.sp());
        EXPECT(0x3dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0300
        gbc.setState(0xc5a3, 0xa728, 0xd930, 0xe5c2, 0x41f3, 0xc954, 0x1, 0x0);
        gbc.writeMem(0xc5a3, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa728, gbc.sp());
        EXPECT(0xc5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a3));
        EXPECT(0x1a, gbc.readMem(0xc5a4));
        // CB 1A 0301
        gbc.setState(0x3c04, 0xeabd, 0x11c0, 0x9d01, 0x8a2b, 0x246f, 0x0, 0x1);
        gbc.writeMem(0x3c04, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xeabd, gbc.sp());
        EXPECT(0x3c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0302
        gbc.setState(0x69b7, 0x7e55, 0x19f0, 0x9459, 0x5844, 0x3faf, 0x1, 0x0);
        gbc.writeMem(0x69b7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7e55, gbc.sp());
        EXPECT(0x69b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0304
        gbc.setState(0x3570, 0x5dec, 0xffa0, 0x8147, 0x962d, 0x3ae1, 0x0, 0x1);
        gbc.writeMem(0x3570, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5dec, gbc.sp());
        EXPECT(0x3572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0305
        gbc.setState(0x7993, 0x2541, 0x2c80, 0x57c7, 0xbe97, 0x323b, 0x0, 0x0);
        gbc.writeMem(0x7993, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2541, gbc.sp());
        EXPECT(0x7995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0306
        gbc.setState(0x922f, 0x30c8, 0xe370, 0x2615, 0x9430, 0xdd16, 0x1, 0x0);
        gbc.writeMem(0x922f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x30c8, gbc.sp());
        EXPECT(0x9231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922f));
        EXPECT(0x1a, gbc.readMem(0x9230));
        // CB 1A 0307
        gbc.setState(0xf81, 0xd25e, 0xa370, 0x68a4, 0xe166, 0x708a, 0x1, 0x1);
        gbc.writeMem(0xf81, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd25e, gbc.sp());
        EXPECT(0xf83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0308
        gbc.setState(0xd7eb, 0xf69e, 0x3ac0, 0xcb8e, 0x977e, 0x66c9, 0x1, 0x0);
        gbc.writeMem(0xd7eb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf69e, gbc.sp());
        EXPECT(0xd7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7eb));
        EXPECT(0x1a, gbc.readMem(0xd7ec));
        // CB 1A 0309
        gbc.setState(0x94d3, 0x15fe, 0x7b70, 0x9473, 0xce89, 0x7ba1, 0x0, 0x0);
        gbc.writeMem(0x94d3, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x15fe, gbc.sp());
        EXPECT(0x94d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d3));
        EXPECT(0x1a, gbc.readMem(0x94d4));
        // CB 1A 030A
        gbc.setState(0x83eb, 0x6b26, 0xe560, 0x5b63, 0x9ae5, 0x268c, 0x0, 0x0);
        gbc.writeMem(0x83eb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6b26, gbc.sp());
        EXPECT(0x83ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83eb));
        EXPECT(0x1a, gbc.readMem(0x83ec));
        // CB 1A 030B
        gbc.setState(0x652c, 0x1e7a, 0x8670, 0x4918, 0x4b54, 0xc3ca, 0x0, 0x1);
        gbc.writeMem(0x652c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1e7a, gbc.sp());
        EXPECT(0x652e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 030C
        gbc.setState(0x6c1, 0x8a7c, 0x2ba0, 0x5e, 0x53b8, 0x5923, 0x1, 0x0);
        gbc.writeMem(0x6c1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8a7c, gbc.sp());
        EXPECT(0x6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 030D
        gbc.setState(0x9456, 0x813c, 0xa90, 0x903e, 0xb33e, 0xa42, 0x1, 0x1);
        gbc.writeMem(0x9456, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x813c, gbc.sp());
        EXPECT(0x9458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9456));
        EXPECT(0x1a, gbc.readMem(0x9457));
        // CB 1A 030E
        gbc.setState(0x43f2, 0x3820, 0x6be0, 0x91a9, 0xa828, 0x1096, 0x1, 0x1);
        gbc.writeMem(0x43f2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3820, gbc.sp());
        EXPECT(0x43f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 030F
        gbc.setState(0x65f2, 0xcbe8, 0x1820, 0x7228, 0x288d, 0x291c, 0x0, 0x0);
        gbc.writeMem(0x65f2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcbe8, gbc.sp());
        EXPECT(0x65f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0310
        gbc.setState(0x414e, 0xbcc5, 0xe6a0, 0xb22, 0x253e, 0xa3bb, 0x0, 0x1);
        gbc.writeMem(0x414e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbcc5, gbc.sp());
        EXPECT(0x4150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0312
        gbc.setState(0x6f1d, 0x9bfa, 0xc800, 0xa2ae, 0xd4eb, 0x1b9b, 0x1, 0x1);
        gbc.writeMem(0x6f1d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9bfa, gbc.sp());
        EXPECT(0x6f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0313
        gbc.setState(0x5d29, 0xdb9e, 0xf130, 0xa59e, 0x1fb5, 0xf604, 0x0, 0x0);
        gbc.writeMem(0x5d29, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdb9e, gbc.sp());
        EXPECT(0x5d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0314
        gbc.setState(0xc5f, 0x16b7, 0x13f0, 0x6c57, 0xcf50, 0x9e8e, 0x0, 0x0);
        gbc.writeMem(0xc5f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x16b7, gbc.sp());
        EXPECT(0xc61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0315
        gbc.setState(0x67b5, 0x57fb, 0xf3b0, 0xbfdb, 0x8c7f, 0x3d10, 0x1, 0x0);
        gbc.writeMem(0x67b5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x57fb, gbc.sp());
        EXPECT(0x67b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0316
        gbc.setState(0xd3b6, 0x95f2, 0xc3f0, 0xe49e, 0x7222, 0xbcdb, 0x0, 0x1);
        gbc.writeMem(0xd3b6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x95f2, gbc.sp());
        EXPECT(0xd3b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b6));
        EXPECT(0x1a, gbc.readMem(0xd3b7));
        // CB 1A 0317
        gbc.setState(0xaac2, 0x85bd, 0x3630, 0xec21, 0x4a96, 0xd400, 0x0, 0x0);
        gbc.writeMem(0xaac2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x85bd, gbc.sp());
        EXPECT(0xaac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac2));
        EXPECT(0x1a, gbc.readMem(0xaac3));
        // CB 1A 0318
        gbc.setState(0x6f85, 0xaea4, 0xbc0, 0xcddf, 0x315f, 0xd16c, 0x1, 0x0);
        gbc.writeMem(0x6f85, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xaea4, gbc.sp());
        EXPECT(0x6f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0319
        gbc.setState(0xaad2, 0xfc21, 0xf600, 0x8b5c, 0xba4e, 0x1239, 0x1, 0x1);
        gbc.writeMem(0xaad2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfc21, gbc.sp());
        EXPECT(0xaad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad2));
        EXPECT(0x1a, gbc.readMem(0xaad3));
        // CB 1A 031A
        gbc.setState(0xb844, 0x1b58, 0x9b50, 0xddd1, 0x35b9, 0xa654, 0x1, 0x1);
        gbc.writeMem(0xb844, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1b58, gbc.sp());
        EXPECT(0xb846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb844));
        EXPECT(0x1a, gbc.readMem(0xb845));
        // CB 1A 031B
        gbc.setState(0xb51c, 0xd2de, 0xd9b0, 0xf461, 0x8f94, 0x2978, 0x1, 0x1);
        gbc.writeMem(0xb51c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd2de, gbc.sp());
        EXPECT(0xb51e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb51c));
        EXPECT(0x1a, gbc.readMem(0xb51d));
        // CB 1A 031C
        gbc.setState(0xbfaa, 0x327e, 0x3ca0, 0x8146, 0xab21, 0x4e1, 0x1, 0x0);
        gbc.writeMem(0xbfaa, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x327e, gbc.sp());
        EXPECT(0xbfac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfaa));
        EXPECT(0x1a, gbc.readMem(0xbfab));
        // CB 1A 031D
        gbc.setState(0x5a75, 0xcc6b, 0xde90, 0x6b91, 0x76f4, 0x2aba, 0x0, 0x0);
        gbc.writeMem(0x5a75, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcc6b, gbc.sp());
        EXPECT(0x5a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 031F
        gbc.setState(0x5e67, 0xf214, 0x4390, 0x73dd, 0x39fb, 0x503d, 0x0, 0x0);
        gbc.writeMem(0x5e67, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf214, gbc.sp());
        EXPECT(0x5e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0320
        gbc.setState(0x9b04, 0xba22, 0x21a0, 0xd18b, 0x2b6c, 0x6c51, 0x1, 0x0);
        gbc.writeMem(0x9b04, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xba22, gbc.sp());
        EXPECT(0x9b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b04));
        EXPECT(0x1a, gbc.readMem(0x9b05));
        // CB 1A 0321
        gbc.setState(0x991e, 0xc33e, 0x5490, 0x1057, 0x8d8d, 0x7566, 0x0, 0x0);
        gbc.writeMem(0x991e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc33e, gbc.sp());
        EXPECT(0x9920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991e));
        EXPECT(0x1a, gbc.readMem(0x991f));
        // CB 1A 0322
        gbc.setState(0xf00, 0xfae0, 0x10b0, 0xca99, 0xaa9b, 0xbf0c, 0x0, 0x1);
        gbc.writeMem(0xf00, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfae0, gbc.sp());
        EXPECT(0xf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0323
        gbc.setState(0x5e42, 0x28fe, 0xa4a0, 0x16d9, 0x3921, 0xbc6a, 0x0, 0x0);
        gbc.writeMem(0x5e42, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x28fe, gbc.sp());
        EXPECT(0x5e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0324
        gbc.setState(0xd415, 0xfe36, 0x9e60, 0x8ab4, 0x5315, 0x2d3c, 0x1, 0x1);
        gbc.writeMem(0xd415, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfe36, gbc.sp());
        EXPECT(0xd417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd415));
        EXPECT(0x1a, gbc.readMem(0xd416));
        // CB 1A 0325
        gbc.setState(0x40a9, 0x5fe6, 0x8a0, 0xdf7d, 0xeff2, 0xf200, 0x0, 0x1);
        gbc.writeMem(0x40a9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5fe6, gbc.sp());
        EXPECT(0x40ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0326
        gbc.setState(0xa2d6, 0x9d94, 0xc6c0, 0x5837, 0xd25c, 0x4904, 0x0, 0x1);
        gbc.writeMem(0xa2d6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9d94, gbc.sp());
        EXPECT(0xa2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d6));
        EXPECT(0x1a, gbc.readMem(0xa2d7));
        // CB 1A 0327
        gbc.setState(0x74e0, 0xd211, 0xb460, 0xd782, 0x9427, 0x9bab, 0x0, 0x0);
        gbc.writeMem(0x74e0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd211, gbc.sp());
        EXPECT(0x74e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0328
        gbc.setState(0x1e85, 0x90e3, 0x5710, 0x22b, 0x4ef2, 0x6fad, 0x1, 0x1);
        gbc.writeMem(0x1e85, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x90e3, gbc.sp());
        EXPECT(0x1e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 032A
        gbc.setState(0x62e1, 0xf166, 0x9340, 0xbbdd, 0xa944, 0x395a, 0x0, 0x0);
        gbc.writeMem(0x62e1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf166, gbc.sp());
        EXPECT(0x62e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 032B
        gbc.setState(0x5e71, 0x7deb, 0x5070, 0x1787, 0x3b9a, 0x47cb, 0x0, 0x1);
        gbc.writeMem(0x5e71, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7deb, gbc.sp());
        EXPECT(0x5e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 032D
        gbc.setState(0x4273, 0x91ca, 0x6a70, 0x3da3, 0x8dea, 0xca62, 0x1, 0x0);
        gbc.writeMem(0x4273, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x91ca, gbc.sp());
        EXPECT(0x4275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 032E
        gbc.setState(0x8b50, 0xd9cc, 0xcf60, 0xb422, 0x4aba, 0x8978, 0x1, 0x0);
        gbc.writeMem(0x8b50, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd9cc, gbc.sp());
        EXPECT(0x8b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b50));
        EXPECT(0x1a, gbc.readMem(0x8b51));
        // CB 1A 032F
        gbc.setState(0xd1d4, 0xc425, 0x34a0, 0xa4a2, 0x4c48, 0x6b96, 0x1, 0x0);
        gbc.writeMem(0xd1d4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc425, gbc.sp());
        EXPECT(0xd1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d4));
        EXPECT(0x1a, gbc.readMem(0xd1d5));
        // CB 1A 0330
        gbc.setState(0x9d12, 0x7a75, 0xba30, 0xeee5, 0xa706, 0x5d93, 0x0, 0x1);
        gbc.writeMem(0x9d12, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7a75, gbc.sp());
        EXPECT(0x9d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d12));
        EXPECT(0x1a, gbc.readMem(0x9d13));
        // CB 1A 0331
        gbc.setState(0x8ace, 0xfa3, 0xd4b0, 0xff9, 0x4591, 0xa6e6, 0x0, 0x0);
        gbc.writeMem(0x8ace, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfa3, gbc.sp());
        EXPECT(0x8ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ace));
        EXPECT(0x1a, gbc.readMem(0x8acf));
        // CB 1A 0332
        gbc.setState(0xdafd, 0x9ddc, 0x4bf0, 0x309b, 0x7734, 0xcb91, 0x1, 0x0);
        gbc.writeMem(0xdafd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9ddc, gbc.sp());
        EXPECT(0xdaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdafd));
        EXPECT(0x1a, gbc.readMem(0xdafe));
        // CB 1A 0333
        gbc.setState(0x727d, 0xe71d, 0x4870, 0xf4e, 0x6eaa, 0x3dc5, 0x0, 0x1);
        gbc.writeMem(0x727d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe71d, gbc.sp());
        EXPECT(0x727f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0334
        gbc.setState(0x7945, 0x3bdd, 0x4630, 0x18c, 0x4993, 0xbdbc, 0x1, 0x1);
        gbc.writeMem(0x7945, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3bdd, gbc.sp());
        EXPECT(0x7947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0335
        gbc.setState(0x34f9, 0x3e2d, 0x6460, 0x9acb, 0x371b, 0xcd19, 0x0, 0x1);
        gbc.writeMem(0x34f9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3e2d, gbc.sp());
        EXPECT(0x34fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0336
        gbc.setState(0x34fe, 0x2cfb, 0xa4e0, 0x6c88, 0x3412, 0x2888, 0x0, 0x1);
        gbc.writeMem(0x34fe, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2cfb, gbc.sp());
        EXPECT(0x3500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0337
        gbc.setState(0x6ab5, 0x6818, 0x8dc0, 0xf32d, 0x7724, 0xe43e, 0x0, 0x0);
        gbc.writeMem(0x6ab5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6818, gbc.sp());
        EXPECT(0x6ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0338
        gbc.setState(0x4441, 0x4e7, 0x5a50, 0xa89f, 0x876e, 0x380c, 0x1, 0x1);
        gbc.writeMem(0x4441, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4e7, gbc.sp());
        EXPECT(0x4443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0339
        gbc.setState(0xc38d, 0x5509, 0x3a60, 0xa77d, 0x7b1, 0xb0a3, 0x0, 0x0);
        gbc.writeMem(0xc38d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5509, gbc.sp());
        EXPECT(0xc38f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc38d));
        EXPECT(0x1a, gbc.readMem(0xc38e));
        // CB 1A 033A
        gbc.setState(0x6dbe, 0x8c4f, 0x2ad0, 0x4b17, 0x8834, 0xf619, 0x0, 0x1);
        gbc.writeMem(0x6dbe, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8c4f, gbc.sp());
        EXPECT(0x6dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 033B
        gbc.setState(0x7155, 0x31d3, 0xc350, 0x88f3, 0x6362, 0x6d7a, 0x0, 0x0);
        gbc.writeMem(0x7155, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x31d3, gbc.sp());
        EXPECT(0x7157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 033C
        gbc.setState(0x28df, 0xfdc2, 0x67b0, 0xf1e4, 0xc451, 0xbb0c, 0x1, 0x0);
        gbc.writeMem(0x28df, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfdc2, gbc.sp());
        EXPECT(0x28e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 033D
        gbc.setState(0x280b, 0xacd8, 0xc1f0, 0x9299, 0xc5ac, 0x1675, 0x1, 0x0);
        gbc.writeMem(0x280b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xacd8, gbc.sp());
        EXPECT(0x280d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 033E
        gbc.setState(0xe3fd, 0xd9f9, 0xb950, 0x77b5, 0x93dd, 0x2d10, 0x1, 0x0);
        gbc.writeMem(0xe3fd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd9f9, gbc.sp());
        EXPECT(0xe3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3fd));
        EXPECT(0x1a, gbc.readMem(0xe3fe));
        // CB 1A 033F
        gbc.setState(0x8cd9, 0x78d6, 0xba00, 0x7b7, 0x8431, 0x476a, 0x0, 0x1);
        gbc.writeMem(0x8cd9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x78d6, gbc.sp());
        EXPECT(0x8cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd9));
        EXPECT(0x1a, gbc.readMem(0x8cda));
        // CB 1A 0340
        gbc.setState(0x2030, 0x3942, 0xaa10, 0xd0ca, 0x8073, 0x11ff, 0x0, 0x1);
        gbc.writeMem(0x2030, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3942, gbc.sp());
        EXPECT(0x2032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0341
        gbc.setState(0x13a6, 0xdb16, 0x4ee0, 0x852c, 0xafb9, 0x7ea6, 0x1, 0x1);
        gbc.writeMem(0x13a6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xdb16, gbc.sp());
        EXPECT(0x13a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0342
        gbc.setState(0x369d, 0x8f18, 0x7b50, 0x82c8, 0x1976, 0x2eec, 0x0, 0x0);
        gbc.writeMem(0x369d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8f18, gbc.sp());
        EXPECT(0x369f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0343
        gbc.setState(0x8827, 0x2ceb, 0xe1a0, 0xc107, 0xb597, 0xf3c2, 0x1, 0x1);
        gbc.writeMem(0x8827, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2ceb, gbc.sp());
        EXPECT(0x8829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8827));
        EXPECT(0x1a, gbc.readMem(0x8828));
        // CB 1A 0344
        gbc.setState(0xe220, 0x6af2, 0x7cb0, 0x8cc6, 0xc95d, 0x9ca8, 0x0, 0x0);
        gbc.writeMem(0xe220, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6af2, gbc.sp());
        EXPECT(0xe222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe220));
        EXPECT(0x1a, gbc.readMem(0xe221));
        // CB 1A 0345
        gbc.setState(0x9719, 0xb0ca, 0x9d00, 0x21b4, 0xf3c0, 0xe7ee, 0x1, 0x0);
        gbc.writeMem(0x9719, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb0ca, gbc.sp());
        EXPECT(0x971b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9719));
        EXPECT(0x1a, gbc.readMem(0x971a));
        // CB 1A 0346
        gbc.setState(0x435a, 0x3a7c, 0x5100, 0x8290, 0x9303, 0x55bb, 0x1, 0x0);
        gbc.writeMem(0x435a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3a7c, gbc.sp());
        EXPECT(0x435c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0347
        gbc.setState(0x9ae4, 0xf52, 0xd790, 0x25de, 0xf0e0, 0x6065, 0x1, 0x0);
        gbc.writeMem(0x9ae4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf52, gbc.sp());
        EXPECT(0x9ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae4));
        EXPECT(0x1a, gbc.readMem(0x9ae5));
        // CB 1A 0348
        gbc.setState(0x82d7, 0x8952, 0x4500, 0xe68, 0x8352, 0x1a23, 0x0, 0x0);
        gbc.writeMem(0x82d7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8952, gbc.sp());
        EXPECT(0x82d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d7));
        EXPECT(0x1a, gbc.readMem(0x82d8));
        // CB 1A 0349
        gbc.setState(0xa334, 0xc42a, 0x82c0, 0x1718, 0xc6e3, 0x3353, 0x0, 0x0);
        gbc.writeMem(0xa334, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc42a, gbc.sp());
        EXPECT(0xa336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa334));
        EXPECT(0x1a, gbc.readMem(0xa335));
        // CB 1A 034A
        gbc.setState(0x9ffc, 0xb5b7, 0x8900, 0x1961, 0x65d3, 0x4276, 0x1, 0x0);
        gbc.writeMem(0x9ffc, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb5b7, gbc.sp());
        EXPECT(0x9ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ffc));
        EXPECT(0x1a, gbc.readMem(0x9ffd));
        // CB 1A 034B
        gbc.setState(0xc3cb, 0x1945, 0xb470, 0xa436, 0x90fc, 0x4440, 0x0, 0x0);
        gbc.writeMem(0xc3cb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1945, gbc.sp());
        EXPECT(0xc3cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3cb));
        EXPECT(0x1a, gbc.readMem(0xc3cc));
        // CB 1A 034C
        gbc.setState(0x6241, 0xddb2, 0xdcc0, 0x43c9, 0xf692, 0xdb04, 0x1, 0x0);
        gbc.writeMem(0x6241, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xddb2, gbc.sp());
        EXPECT(0x6243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 034D
        gbc.setState(0x8589, 0x261f, 0xf490, 0x564a, 0x7c94, 0x8410, 0x0, 0x1);
        gbc.writeMem(0x8589, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x261f, gbc.sp());
        EXPECT(0x858b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8589));
        EXPECT(0x1a, gbc.readMem(0x858a));
        // CB 1A 034E
        gbc.setState(0xc142, 0x95bc, 0xdcf0, 0x2d54, 0xb8fc, 0xb4c0, 0x0, 0x0);
        gbc.writeMem(0xc142, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x95bc, gbc.sp());
        EXPECT(0xc144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc142));
        EXPECT(0x1a, gbc.readMem(0xc143));
        // CB 1A 034F
        gbc.setState(0xe330, 0xf80b, 0x8320, 0x5467, 0xcb85, 0xbe4a, 0x1, 0x1);
        gbc.writeMem(0xe330, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf80b, gbc.sp());
        EXPECT(0xe332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe330));
        EXPECT(0x1a, gbc.readMem(0xe331));
        // CB 1A 0350
        gbc.setState(0x90f9, 0xe106, 0x68f0, 0x31c2, 0x4804, 0x81d6, 0x1, 0x0);
        gbc.writeMem(0x90f9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe106, gbc.sp());
        EXPECT(0x90fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f9));
        EXPECT(0x1a, gbc.readMem(0x90fa));
        // CB 1A 0351
        gbc.setState(0x48a8, 0x636e, 0x7c00, 0x78f1, 0x54fb, 0x8542, 0x1, 0x0);
        gbc.writeMem(0x48a8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x636e, gbc.sp());
        EXPECT(0x48aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0352
        gbc.setState(0x11ed, 0xe4d, 0xa9c0, 0x7dda, 0xe28b, 0x30fc, 0x0, 0x0);
        gbc.writeMem(0x11ed, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe4d, gbc.sp());
        EXPECT(0x11ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0353
        gbc.setState(0xd577, 0xa7de, 0x22a0, 0x4ec0, 0xd1e1, 0xb0f3, 0x1, 0x0);
        gbc.writeMem(0xd577, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa7de, gbc.sp());
        EXPECT(0xd579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd577));
        EXPECT(0x1a, gbc.readMem(0xd578));
        // CB 1A 0355
        gbc.setState(0xab7b, 0xf642, 0xf220, 0xf7c4, 0xe1a3, 0xd56a, 0x0, 0x0);
        gbc.writeMem(0xab7b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf642, gbc.sp());
        EXPECT(0xab7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab7b));
        EXPECT(0x1a, gbc.readMem(0xab7c));
        // CB 1A 0356
        gbc.setState(0x1a77, 0x7487, 0xcf20, 0x435, 0x7f10, 0xd0b6, 0x1, 0x1);
        gbc.writeMem(0x1a77, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7487, gbc.sp());
        EXPECT(0x1a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0357
        gbc.setState(0xad12, 0x645, 0xea50, 0x4e, 0x48ef, 0x5897, 0x0, 0x0);
        gbc.writeMem(0xad12, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x645, gbc.sp());
        EXPECT(0xad14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad12));
        EXPECT(0x1a, gbc.readMem(0xad13));
        // CB 1A 0358
        gbc.setState(0x8c81, 0xda53, 0xaf80, 0x25ee, 0xf9c1, 0xa34d, 0x0, 0x0);
        gbc.writeMem(0x8c81, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xda53, gbc.sp());
        EXPECT(0x8c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c81));
        EXPECT(0x1a, gbc.readMem(0x8c82));
        // CB 1A 0359
        gbc.setState(0xb412, 0x1693, 0xd0b0, 0xaba3, 0x6c50, 0xa9e3, 0x0, 0x0);
        gbc.writeMem(0xb412, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1693, gbc.sp());
        EXPECT(0xb414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb412));
        EXPECT(0x1a, gbc.readMem(0xb413));
        // CB 1A 035A
        gbc.setState(0x6228, 0xdcf1, 0x59e0, 0x5a5, 0x3c9d, 0xdd93, 0x1, 0x1);
        gbc.writeMem(0x6228, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdcf1, gbc.sp());
        EXPECT(0x622a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 035B
        gbc.setState(0x57a0, 0x8c13, 0x4d00, 0x3fba, 0xb016, 0xaa11, 0x0, 0x1);
        gbc.writeMem(0x57a0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8c13, gbc.sp());
        EXPECT(0x57a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 035C
        gbc.setState(0x306e, 0x4947, 0xd4e0, 0x9757, 0xc299, 0x4b6f, 0x1, 0x0);
        gbc.writeMem(0x306e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4947, gbc.sp());
        EXPECT(0x3070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 035D
        gbc.setState(0x4411, 0x4fc0, 0xb050, 0x406d, 0xb888, 0x2dde, 0x0, 0x1);
        gbc.writeMem(0x4411, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4fc0, gbc.sp());
        EXPECT(0x4413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 035F
        gbc.setState(0x2e95, 0x36e2, 0x47d0, 0x79af, 0x993a, 0x375d, 0x1, 0x0);
        gbc.writeMem(0x2e95, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x36e2, gbc.sp());
        EXPECT(0x2e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0361
        gbc.setState(0xdf49, 0x46ba, 0xee40, 0xf024, 0x3208, 0x12fd, 0x0, 0x1);
        gbc.writeMem(0xdf49, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x46ba, gbc.sp());
        EXPECT(0xdf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf49));
        EXPECT(0x1a, gbc.readMem(0xdf4a));
        // CB 1A 0362
        gbc.setState(0xc5f, 0x9afd, 0x7740, 0x2ba3, 0x59d, 0xe658, 0x0, 0x1);
        gbc.writeMem(0xc5f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9afd, gbc.sp());
        EXPECT(0xc61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0363
        gbc.setState(0xd1e3, 0xa53b, 0x2c80, 0x7607, 0x19fb, 0xebdf, 0x1, 0x0);
        gbc.writeMem(0xd1e3, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa53b, gbc.sp());
        EXPECT(0xd1e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e3));
        EXPECT(0x1a, gbc.readMem(0xd1e4));
        // CB 1A 0364
        gbc.setState(0x1582, 0x8441, 0x1150, 0x78f9, 0x562a, 0xbe87, 0x0, 0x0);
        gbc.writeMem(0x1582, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8441, gbc.sp());
        EXPECT(0x1584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0365
        gbc.setState(0x7afe, 0x1e14, 0xff0, 0xc0a0, 0xfadd, 0xb6d4, 0x0, 0x0);
        gbc.writeMem(0x7afe, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1e14, gbc.sp());
        EXPECT(0x7b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0366
        gbc.setState(0x817, 0x7ed1, 0x8d80, 0xaf90, 0xe367, 0x2570, 0x0, 0x1);
        gbc.writeMem(0x817, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7ed1, gbc.sp());
        EXPECT(0x819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0367
        gbc.setState(0x7af7, 0x6748, 0x95b0, 0xa957, 0x3673, 0x189d, 0x1, 0x0);
        gbc.writeMem(0x7af7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6748, gbc.sp());
        EXPECT(0x7af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0368
        gbc.setState(0xc54a, 0x24a4, 0x35a0, 0x8ab, 0x1a1a, 0x672, 0x1, 0x0);
        gbc.writeMem(0xc54a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x24a4, gbc.sp());
        EXPECT(0xc54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54a));
        EXPECT(0x1a, gbc.readMem(0xc54b));
        // CB 1A 0369
        gbc.setState(0x2bdd, 0x6933, 0x1060, 0x1731, 0xe3eb, 0x37f6, 0x0, 0x1);
        gbc.writeMem(0x2bdd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6933, gbc.sp());
        EXPECT(0x2bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 036A
        gbc.setState(0xa331, 0x67dd, 0x1ce0, 0x7d, 0xf486, 0xa263, 0x1, 0x1);
        gbc.writeMem(0xa331, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x67dd, gbc.sp());
        EXPECT(0xa333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa331));
        EXPECT(0x1a, gbc.readMem(0xa332));
        // CB 1A 036B
        gbc.setState(0xaa4, 0xc655, 0xe2e0, 0x199e, 0x9250, 0xeb90, 0x0, 0x1);
        gbc.writeMem(0xaa4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc655, gbc.sp());
        EXPECT(0xaa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 036C
        gbc.setState(0xc3eb, 0x4dc3, 0x9540, 0xfba8, 0x9f86, 0x4892, 0x1, 0x1);
        gbc.writeMem(0xc3eb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4dc3, gbc.sp());
        EXPECT(0xc3ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3eb));
        EXPECT(0x1a, gbc.readMem(0xc3ec));
        // CB 1A 036D
        gbc.setState(0x68b5, 0x30ce, 0x8630, 0x540d, 0xd791, 0x795e, 0x0, 0x1);
        gbc.writeMem(0x68b5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x30ce, gbc.sp());
        EXPECT(0x68b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 036E
        gbc.setState(0x63fb, 0x814b, 0x1720, 0x69f1, 0xaed9, 0x8e73, 0x0, 0x1);
        gbc.writeMem(0x63fb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x814b, gbc.sp());
        EXPECT(0x63fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 036F
        gbc.setState(0x1f45, 0xda3c, 0xe210, 0x4c58, 0x819e, 0x79e6, 0x1, 0x0);
        gbc.writeMem(0x1f45, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xda3c, gbc.sp());
        EXPECT(0x1f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0370
        gbc.setState(0x3a54, 0x67c1, 0x63e0, 0xf164, 0xc333, 0x7793, 0x1, 0x0);
        gbc.writeMem(0x3a54, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x67c1, gbc.sp());
        EXPECT(0x3a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0371
        gbc.setState(0xe4ae, 0x3857, 0xa850, 0x3d1d, 0xf841, 0x8880, 0x1, 0x0);
        gbc.writeMem(0xe4ae, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3857, gbc.sp());
        EXPECT(0xe4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ae));
        EXPECT(0x1a, gbc.readMem(0xe4af));
        // CB 1A 0372
        gbc.setState(0xce01, 0x8c7b, 0xad60, 0x4df6, 0x4053, 0xc26b, 0x0, 0x0);
        gbc.writeMem(0xce01, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8c7b, gbc.sp());
        EXPECT(0xce03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce01));
        EXPECT(0x1a, gbc.readMem(0xce02));
        // CB 1A 0373
        gbc.setState(0x82ea, 0x9eb1, 0xfae0, 0x7b60, 0x9bf6, 0xc5d7, 0x1, 0x0);
        gbc.writeMem(0x82ea, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9eb1, gbc.sp());
        EXPECT(0x82ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ea));
        EXPECT(0x1a, gbc.readMem(0x82eb));
        // CB 1A 0374
        gbc.setState(0x85a9, 0x4f22, 0x4c50, 0xd2b6, 0xecb, 0x7033, 0x0, 0x1);
        gbc.writeMem(0x85a9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4f22, gbc.sp());
        EXPECT(0x85ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a9));
        EXPECT(0x1a, gbc.readMem(0x85aa));
        // CB 1A 0375
        gbc.setState(0x8fbe, 0xf653, 0x8b90, 0xb302, 0x5f0d, 0xb550, 0x0, 0x1);
        gbc.writeMem(0x8fbe, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf653, gbc.sp());
        EXPECT(0x8fc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fbe));
        EXPECT(0x1a, gbc.readMem(0x8fbf));
        // CB 1A 0376
        gbc.setState(0xb5ec, 0x3c8e, 0xa8a0, 0x726, 0x68a1, 0xc3bb, 0x1, 0x0);
        gbc.writeMem(0xb5ec, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3c8e, gbc.sp());
        EXPECT(0xb5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ec));
        EXPECT(0x1a, gbc.readMem(0xb5ed));
        // CB 1A 0377
        gbc.setState(0x7e34, 0x367b, 0x2d00, 0x31ac, 0x1edb, 0xcf17, 0x1, 0x1);
        gbc.writeMem(0x7e34, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x367b, gbc.sp());
        EXPECT(0x7e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0378
        gbc.setState(0x4137, 0xdfc2, 0x20, 0x6012, 0xc061, 0x653, 0x0, 0x0);
        gbc.writeMem(0x4137, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdfc2, gbc.sp());
        EXPECT(0x4139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0379
        gbc.setState(0x5d67, 0x6525, 0x44a0, 0x47a7, 0x2bac, 0xf22b, 0x1, 0x1);
        gbc.writeMem(0x5d67, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6525, gbc.sp());
        EXPECT(0x5d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 037A
        gbc.setState(0xa91, 0xa743, 0x6bc0, 0x6696, 0x99dc, 0xa6b0, 0x1, 0x1);
        gbc.writeMem(0xa91, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa743, gbc.sp());
        EXPECT(0xa93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 037B
        gbc.setState(0x316c, 0x52bc, 0xb2d0, 0x7f, 0xd66b, 0x51e1, 0x0, 0x0);
        gbc.writeMem(0x316c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x52bc, gbc.sp());
        EXPECT(0x316e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 037C
        gbc.setState(0xdb93, 0xe0b0, 0x700, 0x1b6f, 0x105f, 0xa26b, 0x0, 0x0);
        gbc.writeMem(0xdb93, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe0b0, gbc.sp());
        EXPECT(0xdb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb93));
        EXPECT(0x1a, gbc.readMem(0xdb94));
        // CB 1A 037D
        gbc.setState(0x2d36, 0x7001, 0xdc0, 0xbef0, 0x76b5, 0xef30, 0x0, 0x1);
        gbc.writeMem(0x2d36, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7001, gbc.sp());
        EXPECT(0x2d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 037E
        gbc.setState(0x5e6c, 0xbf62, 0x1b10, 0x231c, 0x6f30, 0x2f66, 0x0, 0x1);
        gbc.writeMem(0x5e6c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbf62, gbc.sp());
        EXPECT(0x5e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 037F
        gbc.setState(0xeddb, 0xa5d, 0x8ab0, 0x1a29, 0x676f, 0xe43e, 0x1, 0x0);
        gbc.writeMem(0xeddb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa5d, gbc.sp());
        EXPECT(0xeddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeddb));
        EXPECT(0x1a, gbc.readMem(0xeddc));
        // CB 1A 0380
        gbc.setState(0x984f, 0xcb15, 0x3950, 0xe805, 0xc1f2, 0x7448, 0x0, 0x1);
        gbc.writeMem(0x984f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcb15, gbc.sp());
        EXPECT(0x9851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984f));
        EXPECT(0x1a, gbc.readMem(0x9850));
        // CB 1A 0381
        gbc.setState(0x865d, 0x3a7a, 0x8610, 0xb7f6, 0x9442, 0xd95d, 0x1, 0x1);
        gbc.writeMem(0x865d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3a7a, gbc.sp());
        EXPECT(0x865f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865d));
        EXPECT(0x1a, gbc.readMem(0x865e));
        // CB 1A 0382
        gbc.setState(0x448, 0xb45d, 0xb4f0, 0xd02, 0xaa97, 0x21e9, 0x0, 0x0);
        gbc.writeMem(0x448, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb45d, gbc.sp());
        EXPECT(0x44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0383
        gbc.setState(0x2ea0, 0xac18, 0xe590, 0x540b, 0x4882, 0xc9b6, 0x1, 0x1);
        gbc.writeMem(0x2ea0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xac18, gbc.sp());
        EXPECT(0x2ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0384
        gbc.setState(0x80c5, 0xc896, 0xf170, 0x4404, 0x85fa, 0xa0c8, 0x0, 0x1);
        gbc.writeMem(0x80c5, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc896, gbc.sp());
        EXPECT(0x80c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c5));
        EXPECT(0x1a, gbc.readMem(0x80c6));
        // CB 1A 0385
        gbc.setState(0x786, 0x75fd, 0x7220, 0xe5b1, 0x6a4f, 0x3cfd, 0x0, 0x1);
        gbc.writeMem(0x786, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x75fd, gbc.sp());
        EXPECT(0x788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0386
        gbc.setState(0x7989, 0xd44d, 0x3f60, 0x7b50, 0x9166, 0x679c, 0x0, 0x1);
        gbc.writeMem(0x7989, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd44d, gbc.sp());
        EXPECT(0x798b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0387
        gbc.setState(0x49d2, 0xe158, 0x8a10, 0x711f, 0xa1d2, 0x85ce, 0x0, 0x0);
        gbc.writeMem(0x49d2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe158, gbc.sp());
        EXPECT(0x49d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0388
        gbc.setState(0x2ea, 0x9d0a, 0xbe0, 0xccd1, 0xb5a5, 0x1478, 0x0, 0x0);
        gbc.writeMem(0x2ea, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9d0a, gbc.sp());
        EXPECT(0x2ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0389
        gbc.setState(0x69d9, 0x6eed, 0x3840, 0x21e, 0x8d73, 0x2d81, 0x0, 0x1);
        gbc.writeMem(0x69d9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6eed, gbc.sp());
        EXPECT(0x69db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 038A
        gbc.setState(0x2775, 0x760a, 0x2240, 0xe202, 0xd41, 0xe3c0, 0x0, 0x0);
        gbc.writeMem(0x2775, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x760a, gbc.sp());
        EXPECT(0x2777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 038B
        gbc.setState(0x8bef, 0x2262, 0x8e80, 0x9aee, 0x757e, 0x8a51, 0x1, 0x1);
        gbc.writeMem(0x8bef, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2262, gbc.sp());
        EXPECT(0x8bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bef));
        EXPECT(0x1a, gbc.readMem(0x8bf0));
        // CB 1A 038C
        gbc.setState(0x5e34, 0xc4f8, 0xa510, 0xaac1, 0xa132, 0xb5da, 0x1, 0x1);
        gbc.writeMem(0x5e34, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc4f8, gbc.sp());
        EXPECT(0x5e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 038D
        gbc.setState(0x8c39, 0xb638, 0xbbc0, 0x4e22, 0xe441, 0xb380, 0x1, 0x0);
        gbc.writeMem(0x8c39, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb638, gbc.sp());
        EXPECT(0x8c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c39));
        EXPECT(0x1a, gbc.readMem(0x8c3a));
        // CB 1A 038E
        gbc.setState(0x25c6, 0x7622, 0x2ae0, 0x11ef, 0xc01a, 0xed6a, 0x1, 0x0);
        gbc.writeMem(0x25c6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7622, gbc.sp());
        EXPECT(0x25c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 038F
        gbc.setState(0x44c2, 0xc2ac, 0x8d10, 0x9c0f, 0x4b05, 0xaf88, 0x0, 0x1);
        gbc.writeMem(0x44c2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc2ac, gbc.sp());
        EXPECT(0x44c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0390
        gbc.setState(0x392b, 0x5a4d, 0x19d0, 0xe311, 0x358f, 0xb17, 0x0, 0x1);
        gbc.writeMem(0x392b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5a4d, gbc.sp());
        EXPECT(0x392d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0391
        gbc.setState(0x7d8, 0xe273, 0x3ee0, 0x9952, 0x8716, 0x1469, 0x1, 0x0);
        gbc.writeMem(0x7d8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe273, gbc.sp());
        EXPECT(0x7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0392
        gbc.setState(0xecb8, 0xec7c, 0xd860, 0xdf36, 0x6cd6, 0xba6a, 0x1, 0x0);
        gbc.writeMem(0xecb8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xec7c, gbc.sp());
        EXPECT(0xecba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb8));
        EXPECT(0x1a, gbc.readMem(0xecb9));
        // CB 1A 0393
        gbc.setState(0x5f84, 0x1f1, 0xd030, 0x6ce9, 0x2631, 0xd2e0, 0x1, 0x1);
        gbc.writeMem(0x5f84, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1f1, gbc.sp());
        EXPECT(0x5f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0394
        gbc.setState(0x8ee3, 0x9a2e, 0x40e0, 0xf083, 0x8a18, 0xbbd6, 0x1, 0x1);
        gbc.writeMem(0x8ee3, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9a2e, gbc.sp());
        EXPECT(0x8ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee3));
        EXPECT(0x1a, gbc.readMem(0x8ee4));
        // CB 1A 0395
        gbc.setState(0x8e7c, 0x2cba, 0x3ca0, 0x9012, 0x55a8, 0x9e63, 0x0, 0x0);
        gbc.writeMem(0x8e7c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2cba, gbc.sp());
        EXPECT(0x8e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e7c));
        EXPECT(0x1a, gbc.readMem(0x8e7d));
        // CB 1A 0396
        gbc.setState(0x23e7, 0x53f6, 0x9040, 0xa315, 0x683f, 0x7c1, 0x1, 0x1);
        gbc.writeMem(0x23e7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x53f6, gbc.sp());
        EXPECT(0x23e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 0397
        gbc.setState(0x106d, 0xb3f7, 0xbae0, 0x83a3, 0x119c, 0x1af9, 0x0, 0x1);
        gbc.writeMem(0x106d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb3f7, gbc.sp());
        EXPECT(0x106f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0398
        gbc.setState(0x5c26, 0xd9e, 0xeab0, 0x21a0, 0x1be8, 0xa792, 0x1, 0x0);
        gbc.writeMem(0x5c26, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd9e, gbc.sp());
        EXPECT(0x5c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 0399
        gbc.setState(0xbb4e, 0xdf8f, 0xe7f0, 0xf416, 0x4afe, 0x8531, 0x0, 0x0);
        gbc.writeMem(0xbb4e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdf8f, gbc.sp());
        EXPECT(0xbb50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb4e));
        EXPECT(0x1a, gbc.readMem(0xbb4f));
        // CB 1A 039A
        gbc.setState(0xb9ff, 0xb991, 0xb660, 0xec7f, 0x9367, 0x3cbe, 0x0, 0x0);
        gbc.writeMem(0xb9ff, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb991, gbc.sp());
        EXPECT(0xba01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ff));
        EXPECT(0x1a, gbc.readMem(0xba00));
        // CB 1A 039B
        gbc.setState(0x8de1, 0x3432, 0xc9b0, 0x4a1f, 0x2aa8, 0xc2c, 0x0, 0x0);
        gbc.writeMem(0x8de1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3432, gbc.sp());
        EXPECT(0x8de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de1));
        EXPECT(0x1a, gbc.readMem(0x8de2));
        // CB 1A 039C
        gbc.setState(0x5bf6, 0xed58, 0xe650, 0x6fbf, 0x2bb1, 0x627a, 0x1, 0x0);
        gbc.writeMem(0x5bf6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xed58, gbc.sp());
        EXPECT(0x5bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 039D
        gbc.setState(0x65b1, 0xa3b8, 0xfbe0, 0x51f2, 0x3a32, 0x2c45, 0x0, 0x0);
        gbc.writeMem(0x65b1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa3b8, gbc.sp());
        EXPECT(0x65b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 039E
        gbc.setState(0xc6e9, 0x9d8d, 0x3d70, 0x74fc, 0x3363, 0x162c, 0x0, 0x0);
        gbc.writeMem(0xc6e9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9d8d, gbc.sp());
        EXPECT(0xc6eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e9));
        EXPECT(0x1a, gbc.readMem(0xc6ea));
        // CB 1A 039F
        gbc.setState(0x2720, 0x2504, 0x2350, 0xd856, 0x2400, 0x471a, 0x0, 0x0);
        gbc.writeMem(0x2720, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2504, gbc.sp());
        EXPECT(0x2722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03A0
        gbc.setState(0x37b2, 0xc56, 0x5e60, 0xa4c6, 0x48cf, 0xdbea, 0x1, 0x1);
        gbc.writeMem(0x37b2, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc56, gbc.sp());
        EXPECT(0x37b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03A1
        gbc.setState(0x173d, 0x25f2, 0xf830, 0x96cb, 0x72fe, 0x2017, 0x1, 0x0);
        gbc.writeMem(0x173d, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x25f2, gbc.sp());
        EXPECT(0x173f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03A2
        gbc.setState(0x25ed, 0x8421, 0xbb00, 0x2797, 0x38df, 0x9495, 0x0, 0x1);
        gbc.writeMem(0x25ed, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8421, gbc.sp());
        EXPECT(0x25ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03A3
        gbc.setState(0xea44, 0x36fe, 0xf560, 0x24cd, 0x7d4c, 0xb5f6, 0x0, 0x0);
        gbc.writeMem(0xea44, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x36fe, gbc.sp());
        EXPECT(0xea46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea44));
        EXPECT(0x1a, gbc.readMem(0xea45));
        // CB 1A 03A4
        gbc.setState(0x7164, 0x6d0d, 0x8670, 0x4929, 0xaef1, 0x8e14, 0x1, 0x0);
        gbc.writeMem(0x7164, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6d0d, gbc.sp());
        EXPECT(0x7166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03A5
        gbc.setState(0xe8b8, 0x17c, 0xaa20, 0x9ba, 0xbc1, 0x1d64, 0x0, 0x0);
        gbc.writeMem(0xe8b8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x17c, gbc.sp());
        EXPECT(0xe8ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b8));
        EXPECT(0x1a, gbc.readMem(0xe8b9));
        // CB 1A 03A6
        gbc.setState(0x9075, 0x1e51, 0x7760, 0xad9e, 0x2f70, 0x7e13, 0x1, 0x1);
        gbc.writeMem(0x9075, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1e51, gbc.sp());
        EXPECT(0x9077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9075));
        EXPECT(0x1a, gbc.readMem(0x9076));
        // CB 1A 03A7
        gbc.setState(0xacc8, 0x4258, 0xda40, 0x7427, 0xe07, 0xb57, 0x0, 0x0);
        gbc.writeMem(0xacc8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4258, gbc.sp());
        EXPECT(0xacca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc8));
        EXPECT(0x1a, gbc.readMem(0xacc9));
        // CB 1A 03A8
        gbc.setState(0x6a8f, 0x8718, 0x7c70, 0xf2df, 0xb921, 0x155c, 0x0, 0x0);
        gbc.writeMem(0x6a8f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8718, gbc.sp());
        EXPECT(0x6a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03A9
        gbc.setState(0x3992, 0xd4f3, 0x5cc0, 0x710a, 0x1534, 0xf44e, 0x0, 0x1);
        gbc.writeMem(0x3992, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd4f3, gbc.sp());
        EXPECT(0x3994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03AA
        gbc.setState(0x5c55, 0x7a7e, 0xaf0, 0x58f2, 0xd518, 0x4f96, 0x0, 0x1);
        gbc.writeMem(0x5c55, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7a7e, gbc.sp());
        EXPECT(0x5c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03AB
        gbc.setState(0x5e45, 0x5b4f, 0xe6d0, 0x19fd, 0x311e, 0x5c43, 0x1, 0x0);
        gbc.writeMem(0x5e45, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5b4f, gbc.sp());
        EXPECT(0x5e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03AC
        gbc.setState(0x1e61, 0xe0fd, 0x2b60, 0x888b, 0xfddb, 0xe9b, 0x0, 0x0);
        gbc.writeMem(0x1e61, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe0fd, gbc.sp());
        EXPECT(0x1e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03AD
        gbc.setState(0xefe0, 0x33ff, 0x3e50, 0x2417, 0xc0d0, 0x8bb9, 0x1, 0x1);
        gbc.writeMem(0xefe0, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x33ff, gbc.sp());
        EXPECT(0xefe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe0));
        EXPECT(0x1a, gbc.readMem(0xefe1));
        // CB 1A 03AE
        gbc.setState(0xc283, 0x5842, 0xd150, 0xc1b5, 0x843, 0x1daa, 0x0, 0x0);
        gbc.writeMem(0xc283, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5842, gbc.sp());
        EXPECT(0xc285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc283));
        EXPECT(0x1a, gbc.readMem(0xc284));
        // CB 1A 03AF
        gbc.setState(0x210f, 0x40e8, 0xddb0, 0xdda1, 0xdfea, 0x1016, 0x0, 0x0);
        gbc.writeMem(0x210f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x40e8, gbc.sp());
        EXPECT(0x2111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03B0
        gbc.setState(0xcb6a, 0x50c2, 0x3c30, 0x8886, 0x313b, 0xdc7e, 0x0, 0x1);
        gbc.writeMem(0xcb6a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x50c2, gbc.sp());
        EXPECT(0xcb6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6a));
        EXPECT(0x1a, gbc.readMem(0xcb6b));
        // CB 1A 03B1
        gbc.setState(0x1c8f, 0x26d0, 0x6e90, 0x49b9, 0x6541, 0x3275, 0x0, 0x1);
        gbc.writeMem(0x1c8f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x26d0, gbc.sp());
        EXPECT(0x1c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03B2
        gbc.setState(0xc4f1, 0x98, 0x2330, 0x62f1, 0x379e, 0x2f57, 0x0, 0x1);
        gbc.writeMem(0xc4f1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x98, gbc.sp());
        EXPECT(0xc4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f1));
        EXPECT(0x1a, gbc.readMem(0xc4f2));
        // CB 1A 03B3
        gbc.setState(0x80f1, 0xb808, 0xa710, 0xed4b, 0x1e8, 0x297e, 0x1, 0x1);
        gbc.writeMem(0x80f1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb808, gbc.sp());
        EXPECT(0x80f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f1));
        EXPECT(0x1a, gbc.readMem(0x80f2));
        // CB 1A 03B4
        gbc.setState(0x3f77, 0x6bd0, 0x9280, 0xa57c, 0x432f, 0xd575, 0x1, 0x0);
        gbc.writeMem(0x3f77, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6bd0, gbc.sp());
        EXPECT(0x3f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03B5
        gbc.setState(0x6bcd, 0xd9b, 0x5b20, 0x7ab8, 0x6468, 0x2561, 0x0, 0x1);
        gbc.writeMem(0x6bcd, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd9b, gbc.sp());
        EXPECT(0x6bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03B6
        gbc.setState(0x1dc6, 0x1d42, 0xaa20, 0xa825, 0x5f64, 0xa443, 0x0, 0x0);
        gbc.writeMem(0x1dc6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1d42, gbc.sp());
        EXPECT(0x1dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03B8
        gbc.setState(0x9df9, 0xbfae, 0xfb0, 0x5b52, 0x794e, 0xab3a, 0x1, 0x0);
        gbc.writeMem(0x9df9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbfae, gbc.sp());
        EXPECT(0x9dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df9));
        EXPECT(0x1a, gbc.readMem(0x9dfa));
        // CB 1A 03B9
        gbc.setState(0x3e26, 0x18f2, 0x7cc0, 0xf56e, 0xb453, 0xd243, 0x1, 0x1);
        gbc.writeMem(0x3e26, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x18f2, gbc.sp());
        EXPECT(0x3e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03BA
        gbc.setState(0xbe62, 0xc6ea, 0xeaf0, 0x2b13, 0xa35c, 0x2fd2, 0x0, 0x0);
        gbc.writeMem(0xbe62, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc6ea, gbc.sp());
        EXPECT(0xbe64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe62));
        EXPECT(0x1a, gbc.readMem(0xbe63));
        // CB 1A 03BC
        gbc.setState(0x450b, 0x23a6, 0x6590, 0x45d8, 0x48b4, 0x99d4, 0x0, 0x0);
        gbc.writeMem(0x450b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x23a6, gbc.sp());
        EXPECT(0x450d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03BD
        gbc.setState(0xa0e6, 0xfde6, 0x870, 0x4d70, 0x4377, 0xb5b9, 0x0, 0x1);
        gbc.writeMem(0xa0e6, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfde6, gbc.sp());
        EXPECT(0xa0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0e6));
        EXPECT(0x1a, gbc.readMem(0xa0e7));
        // CB 1A 03BE
        gbc.setState(0x532b, 0x7efa, 0x6630, 0x6b26, 0x2dbf, 0x99f5, 0x1, 0x0);
        gbc.writeMem(0x532b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7efa, gbc.sp());
        EXPECT(0x532d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03BF
        gbc.setState(0x17b9, 0xbddc, 0xd450, 0xeedb, 0xb01f, 0xec0c, 0x0, 0x0);
        gbc.writeMem(0x17b9, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbddc, gbc.sp());
        EXPECT(0x17bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03C0
        gbc.setState(0xd346, 0x9030, 0x9a00, 0xd5d0, 0x51d1, 0x3452, 0x1, 0x0);
        gbc.writeMem(0xd346, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9030, gbc.sp());
        EXPECT(0xd348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd346));
        EXPECT(0x1a, gbc.readMem(0xd347));
        // CB 1A 03C1
        gbc.setState(0xca52, 0xcfae, 0x3230, 0x5a40, 0x8a6d, 0xb00f, 0x1, 0x1);
        gbc.writeMem(0xca52, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcfae, gbc.sp());
        EXPECT(0xca54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca52));
        EXPECT(0x1a, gbc.readMem(0xca53));
        // CB 1A 03C2
        gbc.setState(0xbf46, 0xa19, 0x3bf0, 0x79ba, 0xac3c, 0x2f3f, 0x0, 0x1);
        gbc.writeMem(0xbf46, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa19, gbc.sp());
        EXPECT(0xbf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf46));
        EXPECT(0x1a, gbc.readMem(0xbf47));
        // CB 1A 03C3
        gbc.setState(0xe04a, 0xfcc, 0x9cc0, 0x3667, 0xb1a3, 0xbe96, 0x1, 0x1);
        gbc.writeMem(0xe04a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfcc, gbc.sp());
        EXPECT(0xe04c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe04a));
        EXPECT(0x1a, gbc.readMem(0xe04b));
        // CB 1A 03C4
        gbc.setState(0xe142, 0x1f5f, 0x4a60, 0x632f, 0xe629, 0x85e9, 0x1, 0x1);
        gbc.writeMem(0xe142, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1f5f, gbc.sp());
        EXPECT(0xe144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe142));
        EXPECT(0x1a, gbc.readMem(0xe143));
        // CB 1A 03C5
        gbc.setState(0x1e14, 0xec38, 0x29c0, 0x7f99, 0xb5e8, 0xb40c, 0x1, 0x0);
        gbc.writeMem(0x1e14, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xec38, gbc.sp());
        EXPECT(0x1e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03C6
        gbc.setState(0x3445, 0x38ff, 0x8750, 0xa352, 0xc6ca, 0xd3b, 0x0, 0x0);
        gbc.writeMem(0x3445, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x38ff, gbc.sp());
        EXPECT(0x3447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03C7
        gbc.setState(0x93af, 0xe113, 0xf440, 0x8b7b, 0x2858, 0xcc2c, 0x1, 0x1);
        gbc.writeMem(0x93af, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe113, gbc.sp());
        EXPECT(0x93b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93af));
        EXPECT(0x1a, gbc.readMem(0x93b0));
        // CB 1A 03C8
        gbc.setState(0x5d7f, 0xb990, 0x3400, 0x1ad8, 0x61b8, 0xbbe7, 0x0, 0x1);
        gbc.writeMem(0x5d7f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb990, gbc.sp());
        EXPECT(0x5d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03C9
        gbc.setState(0xc650, 0x99e, 0x9fd0, 0x262f, 0x794d, 0xcdd9, 0x1, 0x0);
        gbc.writeMem(0xc650, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x99e, gbc.sp());
        EXPECT(0xc652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc650));
        EXPECT(0x1a, gbc.readMem(0xc651));
        // CB 1A 03CA
        gbc.setState(0x929c, 0x8e8b, 0x33c0, 0xc421, 0xfbc7, 0xe26c, 0x1, 0x0);
        gbc.writeMem(0x929c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8e8b, gbc.sp());
        EXPECT(0x929e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x929c));
        EXPECT(0x1a, gbc.readMem(0x929d));
        // CB 1A 03CB
        gbc.setState(0x8665, 0xfca4, 0xba80, 0xfff4, 0xa1a4, 0xd587, 0x1, 0x0);
        gbc.writeMem(0x8665, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfca4, gbc.sp());
        EXPECT(0x8667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8665));
        EXPECT(0x1a, gbc.readMem(0x8666));
        // CB 1A 03CC
        gbc.setState(0x4e5f, 0xc8d2, 0xc430, 0xc5e3, 0xa6d4, 0xd339, 0x1, 0x1);
        gbc.writeMem(0x4e5f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc8d2, gbc.sp());
        EXPECT(0x4e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03CD
        gbc.setState(0xe43f, 0x45ab, 0x28b0, 0xe37d, 0x68fe, 0x7725, 0x1, 0x0);
        gbc.writeMem(0xe43f, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x45ab, gbc.sp());
        EXPECT(0xe441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe43f));
        EXPECT(0x1a, gbc.readMem(0xe440));
        // CB 1A 03CE
        gbc.setState(0x8c47, 0x739d, 0x44c0, 0xfbbd, 0x1d04, 0x69fe, 0x1, 0x0);
        gbc.writeMem(0x8c47, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x739d, gbc.sp());
        EXPECT(0x8c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c47));
        EXPECT(0x1a, gbc.readMem(0x8c48));
        // CB 1A 03CF
        gbc.setState(0x8ab1, 0xe073, 0x63c0, 0xf8be, 0xec21, 0xa2bd, 0x1, 0x1);
        gbc.writeMem(0x8ab1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe073, gbc.sp());
        EXPECT(0x8ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab1));
        EXPECT(0x1a, gbc.readMem(0x8ab2));
        // CB 1A 03D0
        gbc.setState(0xb7d7, 0x96ed, 0x4bb0, 0xd1ed, 0x1106, 0x71c3, 0x0, 0x0);
        gbc.writeMem(0xb7d7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x96ed, gbc.sp());
        EXPECT(0xb7d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d7));
        EXPECT(0x1a, gbc.readMem(0xb7d8));
        // CB 1A 03D1
        gbc.setState(0xa85, 0x6290, 0xa330, 0xa7c4, 0x9a0e, 0xf8f0, 0x1, 0x0);
        gbc.writeMem(0xa85, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6290, gbc.sp());
        EXPECT(0xa87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03D2
        gbc.setState(0x1772, 0x9ccf, 0xc360, 0x8851, 0x796, 0x22c6, 0x0, 0x1);
        gbc.writeMem(0x1772, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9ccf, gbc.sp());
        EXPECT(0x1774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03D3
        gbc.setState(0x595e, 0xcbe2, 0xc1a0, 0x8fbb, 0x7531, 0x2f, 0x1, 0x0);
        gbc.writeMem(0x595e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcbe2, gbc.sp());
        EXPECT(0x5960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03D4
        gbc.setState(0x58e4, 0xd3cd, 0x4990, 0xf59f, 0x1ce3, 0x18aa, 0x1, 0x0);
        gbc.writeMem(0x58e4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd3cd, gbc.sp());
        EXPECT(0x58e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03D5
        gbc.setState(0x4c07, 0x649, 0x3b90, 0x2a92, 0x58a, 0xc070, 0x1, 0x1);
        gbc.writeMem(0x4c07, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x649, gbc.sp());
        EXPECT(0x4c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03D6
        gbc.setState(0xada4, 0x87a7, 0x86b0, 0xa8cc, 0xb27b, 0xf198, 0x0, 0x1);
        gbc.writeMem(0xada4, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x87a7, gbc.sp());
        EXPECT(0xada6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada4));
        EXPECT(0x1a, gbc.readMem(0xada5));
        // CB 1A 03D7
        gbc.setState(0xbad1, 0x58e0, 0x7a0, 0xeec2, 0x2e97, 0xdd6, 0x0, 0x1);
        gbc.writeMem(0xbad1, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x58e0, gbc.sp());
        EXPECT(0xbad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad1));
        EXPECT(0x1a, gbc.readMem(0xbad2));
        // CB 1A 03D8
        gbc.setState(0x394a, 0xeb44, 0xf9a0, 0x810f, 0xca96, 0xb816, 0x1, 0x1);
        gbc.writeMem(0x394a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xeb44, gbc.sp());
        EXPECT(0x394c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03D9
        gbc.setState(0x8e1c, 0x9e6d, 0xf120, 0x760f, 0xbb26, 0xc9d3, 0x1, 0x0);
        gbc.writeMem(0x8e1c, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9e6d, gbc.sp());
        EXPECT(0x8e1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1c));
        EXPECT(0x1a, gbc.readMem(0x8e1d));
        // CB 1A 03DA
        gbc.setState(0xce13, 0x9131, 0x1800, 0x8545, 0x68fc, 0xe66a, 0x1, 0x1);
        gbc.writeMem(0xce13, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9131, gbc.sp());
        EXPECT(0xce15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce13));
        EXPECT(0x1a, gbc.readMem(0xce14));
        // CB 1A 03DB
        gbc.setState(0x195b, 0xe841, 0xabe0, 0x6599, 0xe7eb, 0x599a, 0x0, 0x1);
        gbc.writeMem(0x195b, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe841, gbc.sp());
        EXPECT(0x195d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03DC
        gbc.setState(0x98c8, 0xe3b7, 0xba10, 0x4349, 0x46c6, 0x8ff3, 0x0, 0x1);
        gbc.writeMem(0x98c8, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe3b7, gbc.sp());
        EXPECT(0x98ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c8));
        EXPECT(0x1a, gbc.readMem(0x98c9));
        // CB 1A 03DD
        gbc.setState(0x9091, 0x9e8d, 0x6640, 0x9edd, 0x3c00, 0x13ee, 0x0, 0x1);
        gbc.writeMem(0x9091, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9e8d, gbc.sp());
        EXPECT(0x9093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9091));
        EXPECT(0x1a, gbc.readMem(0x9092));
        // CB 1A 03DE
        gbc.setState(0xd179, 0x70c9, 0x3910, 0x6d9, 0x1f71, 0x6cc4, 0x1, 0x1);
        gbc.writeMem(0xd179, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x70c9, gbc.sp());
        EXPECT(0xd17b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd179));
        EXPECT(0x1a, gbc.readMem(0xd17a));
        // CB 1A 03DF
        gbc.setState(0x6d6e, 0x5675, 0xcd90, 0x134a, 0x1726, 0x5b89, 0x1, 0x0);
        gbc.writeMem(0x6d6e, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5675, gbc.sp());
        EXPECT(0x6d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03E0
        gbc.setState(0x9786, 0x1d7b, 0x5470, 0xb342, 0xea62, 0x2a0c, 0x1, 0x1);
        gbc.writeMem(0x9786, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1d7b, gbc.sp());
        EXPECT(0x9788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9786));
        EXPECT(0x1a, gbc.readMem(0x9787));
        // CB 1A 03E1
        gbc.setState(0x4ecb, 0xd57a, 0x3ab0, 0xc9bb, 0x284c, 0xc5d2, 0x1, 0x0);
        gbc.writeMem(0x4ecb, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd57a, gbc.sp());
        EXPECT(0x4ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03E2
        gbc.setState(0x6621, 0x5f1, 0x14f0, 0x3dcc, 0x39bc, 0xa350, 0x0, 0x1);
        gbc.writeMem(0x6621, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5f1, gbc.sp());
        EXPECT(0x6623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03E3
        gbc.setState(0x5c1a, 0xbea9, 0xfd20, 0x7bf7, 0x3726, 0x8e89, 0x1, 0x0);
        gbc.writeMem(0x5c1a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbea9, gbc.sp());
        EXPECT(0x5c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1A 03E4
        gbc.setState(0x30a7, 0x5ab5, 0xaad0, 0x6e27, 0x203a, 0x87d0, 0x0, 0x1);
        gbc.writeMem(0x30a7, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5ab5, gbc.sp());
        EXPECT(0x30a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03E5
        gbc.setState(0x5f32, 0x3f1d, 0xac30, 0x7dce, 0x2837, 0xb10, 0x0, 0x0);
        gbc.writeMem(0x5f32, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3f1d, gbc.sp());
        EXPECT(0x5f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1A 03E6
        gbc.setState(0x9981, 0x2d1f, 0xb910, 0x8d5d, 0x1d1d, 0xbf24, 0x1, 0x0);
        gbc.writeMem(0x9981, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2d1f, gbc.sp());
        EXPECT(0x9983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9981));
        EXPECT(0x1a, gbc.readMem(0x9982));
        // CB 1A 03E7
        gbc.setState(0xda8a, 0xd29b, 0xd070, 0x9034, 0xc85, 0x925, 0x0, 0x1);
        gbc.writeMem(0xda8a, { 0xcb, 0x1a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd29b, gbc.sp());
        EXPECT(0xda8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8a));
        EXPECT(0x1a, gbc.readMem(0xda8b));
    }
