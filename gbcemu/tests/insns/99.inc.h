    TEST(gbcemu, opcode_99) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 99 0000
        gbc.setState(0xa66f, 0x2e01, 0x78a0, 0xf023, 0xbf72, 0x7b68, 0x0, 0x1);
        gbc.writeMem(0xa66f, { 0x99 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2e01, gbc.sp());
        EXPECT(0xa670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa66f));
        // 99 0001
        gbc.setState(0xb006, 0x936, 0x8e20, 0x38ab, 0x9c85, 0x364b, 0x0, 0x1);
        gbc.writeMem(0xb006, { 0x99 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x936, gbc.sp());
        EXPECT(0xb007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb006));
        // 99 0002
        gbc.setState(0xe2f6, 0x7c76, 0x8250, 0x332f, 0xcd75, 0x52b4, 0x0, 0x0);
        gbc.writeMem(0xe2f6, { 0x99 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7c76, gbc.sp());
        EXPECT(0xe2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe2f6));
        // 99 0003
        gbc.setState(0x2338, 0x46a8, 0xd0, 0x20fd, 0x97e0, 0x175c, 0x0, 0x0);
        gbc.writeMem(0x2338, { 0x99 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x46a8, gbc.sp());
        EXPECT(0x2339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0004
        gbc.setState(0x656c, 0x9283, 0x81d0, 0x6c90, 0x406c, 0xa1dd, 0x1, 0x1);
        gbc.writeMem(0x656c, { 0x99 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9283, gbc.sp());
        EXPECT(0x656d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0005
        gbc.setState(0x8853, 0x6328, 0x4400, 0x97f8, 0x35ac, 0xc70b, 0x1, 0x0);
        gbc.writeMem(0x8853, { 0x99 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6328, gbc.sp());
        EXPECT(0x8854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8853));
        // 99 0006
        gbc.setState(0x47e3, 0x3b77, 0xc800, 0xb30b, 0x4db9, 0x7874, 0x0, 0x1);
        gbc.writeMem(0x47e3, { 0x99 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3b77, gbc.sp());
        EXPECT(0x47e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0007
        gbc.setState(0xc13d, 0xdca, 0x57f0, 0xa051, 0xafa, 0x284b, 0x0, 0x0);
        gbc.writeMem(0xc13d, { 0x99 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdca, gbc.sp());
        EXPECT(0xc13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc13d));
        // 99 0008
        gbc.setState(0x34ab, 0x8b94, 0x820, 0xc081, 0xc295, 0xd042, 0x1, 0x1);
        gbc.writeMem(0x34ab, { 0x99 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8b94, gbc.sp());
        EXPECT(0x34ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0009
        gbc.setState(0x9253, 0xe80f, 0x8d60, 0x88cb, 0xff09, 0x258, 0x1, 0x1);
        gbc.writeMem(0x9253, { 0x99 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe80f, gbc.sp());
        EXPECT(0x9254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9253));
        // 99 000A
        gbc.setState(0xa1ae, 0x42ef, 0x7ec0, 0x1581, 0xf154, 0x2d7f, 0x1, 0x1);
        gbc.writeMem(0xa1ae, { 0x99 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x42ef, gbc.sp());
        EXPECT(0xa1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa1ae));
        // 99 000B
        gbc.setState(0x20cc, 0x9b0b, 0xe630, 0x6e28, 0xe1ab, 0xefbc, 0x0, 0x1);
        gbc.writeMem(0x20cc, { 0x99 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9b0b, gbc.sp());
        EXPECT(0x20cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 000C
        gbc.setState(0xdb46, 0x6eec, 0xf950, 0x5dd5, 0x37a3, 0x4a21, 0x1, 0x1);
        gbc.writeMem(0xdb46, { 0x99 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6eec, gbc.sp());
        EXPECT(0xdb47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdb46));
        // 99 000D
        gbc.setState(0x8dc2, 0x2207, 0x4a80, 0x2933, 0x8263, 0xfc3, 0x0, 0x0);
        gbc.writeMem(0x8dc2, { 0x99 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2207, gbc.sp());
        EXPECT(0x8dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8dc2));
        // 99 000E
        gbc.setState(0x6c45, 0x61d0, 0xab40, 0x2b7, 0xa527, 0x4521, 0x1, 0x1);
        gbc.writeMem(0x6c45, { 0x99 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x61d0, gbc.sp());
        EXPECT(0x6c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 000F
        gbc.setState(0x6e9, 0x2667, 0x3770, 0x4306, 0x720b, 0x8571, 0x1, 0x1);
        gbc.writeMem(0x6e9, { 0x99 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2667, gbc.sp());
        EXPECT(0x6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0010
        gbc.setState(0x3f6c, 0xa493, 0x2020, 0x52c3, 0xd96a, 0x8e20, 0x1, 0x1);
        gbc.writeMem(0x3f6c, { 0x99 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa493, gbc.sp());
        EXPECT(0x3f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0011
        gbc.setState(0x5f98, 0x176d, 0x3270, 0xde05, 0x7104, 0x7592, 0x0, 0x0);
        gbc.writeMem(0x5f98, { 0x99 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x176d, gbc.sp());
        EXPECT(0x5f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0012
        gbc.setState(0x4b9f, 0xf287, 0x64d0, 0x1fd0, 0xee8e, 0x11e0, 0x1, 0x1);
        gbc.writeMem(0x4b9f, { 0x99 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf287, gbc.sp());
        EXPECT(0x4ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0013
        gbc.setState(0xc0c6, 0x46cf, 0xcd80, 0xe9f7, 0xd4aa, 0x9228, 0x0, 0x1);
        gbc.writeMem(0xc0c6, { 0x99 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x46cf, gbc.sp());
        EXPECT(0xc0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc0c6));
        // 99 0014
        gbc.setState(0xc540, 0xf459, 0x600, 0x62ca, 0x34f3, 0xa38b, 0x0, 0x0);
        gbc.writeMem(0xc540, { 0x99 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf459, gbc.sp());
        EXPECT(0xc541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc540));
        // 99 0015
        gbc.setState(0xa23e, 0x2752, 0x44f0, 0x79f6, 0xb8cd, 0x25e5, 0x1, 0x0);
        gbc.writeMem(0xa23e, { 0x99 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2752, gbc.sp());
        EXPECT(0xa23f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa23e));
        // 99 0016
        gbc.setState(0xeb, 0x6f6d, 0x4130, 0x4cbb, 0x1542, 0x8a52, 0x0, 0x0);
        gbc.writeMem(0xeb, { 0x99 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6f6d, gbc.sp());
        EXPECT(0xec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0019
        gbc.setState(0xd193, 0xd3e7, 0x9cd0, 0x2005, 0x7c0d, 0x3367, 0x1, 0x0);
        gbc.writeMem(0xd193, { 0x99 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd3e7, gbc.sp());
        EXPECT(0xd194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd193));
        // 99 001A
        gbc.setState(0x6959, 0x3020, 0xd3f0, 0xa88a, 0xacbb, 0xfc33, 0x1, 0x0);
        gbc.writeMem(0x6959, { 0x99 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3020, gbc.sp());
        EXPECT(0x695a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 001B
        gbc.setState(0xe118, 0xe490, 0xf350, 0xb1e8, 0xfc2e, 0x9152, 0x1, 0x0);
        gbc.writeMem(0xe118, { 0x99 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe490, gbc.sp());
        EXPECT(0xe119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe118));
        // 99 001C
        gbc.setState(0xadcc, 0x1ac2, 0xec80, 0x553c, 0x3288, 0xdefa, 0x1, 0x0);
        gbc.writeMem(0xadcc, { 0x99 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1ac2, gbc.sp());
        EXPECT(0xadcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xadcc));
        // 99 001D
        gbc.setState(0xbf2, 0xeccc, 0xcd60, 0xff12, 0x5bfc, 0xafac, 0x1, 0x1);
        gbc.writeMem(0xbf2, { 0x99 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xeccc, gbc.sp());
        EXPECT(0xbf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 001E
        gbc.setState(0xef64, 0xeef4, 0xc480, 0x2ab, 0x7f51, 0x4a2e, 0x1, 0x1);
        gbc.writeMem(0xef64, { 0x99 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xeef4, gbc.sp());
        EXPECT(0xef65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xef64));
        // 99 001F
        gbc.setState(0xa168, 0x4053, 0x5390, 0x9ad7, 0xa6be, 0x8cf2, 0x1, 0x1);
        gbc.writeMem(0xa168, { 0x99 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4053, gbc.sp());
        EXPECT(0xa169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa168));
        // 99 0020
        gbc.setState(0xca5c, 0x4c1a, 0x71f0, 0x5b6b, 0xfae6, 0x2410, 0x1, 0x1);
        gbc.writeMem(0xca5c, { 0x99 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4c1a, gbc.sp());
        EXPECT(0xca5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xca5c));
        // 99 0021
        gbc.setState(0x2b0f, 0x22b1, 0x1e20, 0x1c06, 0x9e5f, 0xb3b9, 0x1, 0x0);
        gbc.writeMem(0x2b0f, { 0x99 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x22b1, gbc.sp());
        EXPECT(0x2b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0022
        gbc.setState(0x8dd2, 0xad0d, 0xa9b0, 0xb31a, 0xa88a, 0x7d34, 0x1, 0x1);
        gbc.writeMem(0x8dd2, { 0x99 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xad0d, gbc.sp());
        EXPECT(0x8dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8dd2));
        // 99 0023
        gbc.setState(0xbe22, 0xb82e, 0xd360, 0xea58, 0x4ea6, 0xaf10, 0x1, 0x0);
        gbc.writeMem(0xbe22, { 0x99 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb82e, gbc.sp());
        EXPECT(0xbe23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbe22));
        // 99 0024
        gbc.setState(0x74c, 0xc90a, 0xa8c0, 0xbaed, 0xb189, 0x5e0e, 0x1, 0x1);
        gbc.writeMem(0x74c, { 0x99 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc90a, gbc.sp());
        EXPECT(0x74d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0025
        gbc.setState(0x6418, 0xedab, 0xdbd0, 0x3f66, 0x4eec, 0x3006, 0x1, 0x0);
        gbc.writeMem(0x6418, { 0x99 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xedab, gbc.sp());
        EXPECT(0x6419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0027
        gbc.setState(0xdf8f, 0xaa43, 0xb1c0, 0x3b5f, 0x5f96, 0xe587, 0x1, 0x0);
        gbc.writeMem(0xdf8f, { 0x99 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xaa43, gbc.sp());
        EXPECT(0xdf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdf8f));
        // 99 0028
        gbc.setState(0x8751, 0x5055, 0x9830, 0x3319, 0xd149, 0x8c1, 0x0, 0x1);
        gbc.writeMem(0x8751, { 0x99 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5055, gbc.sp());
        EXPECT(0x8752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8751));
        // 99 0029
        gbc.setState(0x8c27, 0x5169, 0xd100, 0x8b9, 0x43f8, 0x73d4, 0x0, 0x1);
        gbc.writeMem(0x8c27, { 0x99 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5169, gbc.sp());
        EXPECT(0x8c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8c27));
        // 99 002A
        gbc.setState(0x863b, 0x873b, 0xae00, 0xd4c2, 0xddfa, 0x948b, 0x0, 0x0);
        gbc.writeMem(0x863b, { 0x99 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x873b, gbc.sp());
        EXPECT(0x863c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x863b));
        // 99 002B
        gbc.setState(0xdb3e, 0x5951, 0x5af0, 0x53cb, 0x799f, 0xc450, 0x1, 0x0);
        gbc.writeMem(0xdb3e, { 0x99 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5951, gbc.sp());
        EXPECT(0xdb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdb3e));
        // 99 002C
        gbc.setState(0x2fbe, 0x87f8, 0xf1e0, 0x2a22, 0x1d72, 0xc575, 0x0, 0x1);
        gbc.writeMem(0x2fbe, { 0x99 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x87f8, gbc.sp());
        EXPECT(0x2fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 002D
        gbc.setState(0x75dd, 0x7f0d, 0xeaf0, 0xeb37, 0x43d4, 0x6fbd, 0x1, 0x0);
        gbc.writeMem(0x75dd, { 0x99 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7f0d, gbc.sp());
        EXPECT(0x75de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 002E
        gbc.setState(0x5622, 0xc8a6, 0x2c90, 0x7d40, 0x7514, 0xcffd, 0x0, 0x0);
        gbc.writeMem(0x5622, { 0x99 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc8a6, gbc.sp());
        EXPECT(0x5623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0030
        gbc.setState(0x12b9, 0x720f, 0x17b0, 0xdde9, 0x5654, 0xe3b7, 0x0, 0x1);
        gbc.writeMem(0x12b9, { 0x99 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x720f, gbc.sp());
        EXPECT(0x12ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0031
        gbc.setState(0x800f, 0x607, 0x7af0, 0xc7a4, 0x6b78, 0xee6b, 0x0, 0x1);
        gbc.writeMem(0x800f, { 0x99 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x607, gbc.sp());
        EXPECT(0x8010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x800f));
        // 99 0032
        gbc.setState(0x3e76, 0x8611, 0xa560, 0x9272, 0xd9fa, 0xdf84, 0x1, 0x1);
        gbc.writeMem(0x3e76, { 0x99 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8611, gbc.sp());
        EXPECT(0x3e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0033
        gbc.setState(0xa748, 0x591a, 0xef80, 0x3db8, 0xaaf2, 0xd9cb, 0x1, 0x1);
        gbc.writeMem(0xa748, { 0x99 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x591a, gbc.sp());
        EXPECT(0xa749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa748));
        // 99 0034
        gbc.setState(0xd8f3, 0xbd97, 0x5ae0, 0x134c, 0x54ad, 0x4ae7, 0x0, 0x0);
        gbc.writeMem(0xd8f3, { 0x99 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbd97, gbc.sp());
        EXPECT(0xd8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd8f3));
        // 99 0035
        gbc.setState(0x76a2, 0xe0b7, 0x9900, 0xe5a5, 0x8fb6, 0xf94b, 0x1, 0x0);
        gbc.writeMem(0x76a2, { 0x99 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe0b7, gbc.sp());
        EXPECT(0x76a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0036
        gbc.setState(0xcad2, 0x5c15, 0x6c90, 0xded4, 0x6ae7, 0xd545, 0x1, 0x1);
        gbc.writeMem(0xcad2, { 0x99 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5c15, gbc.sp());
        EXPECT(0xcad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcad2));
        // 99 0037
        gbc.setState(0x18ba, 0x3223, 0x4e10, 0x4f37, 0x9c7b, 0x721a, 0x0, 0x0);
        gbc.writeMem(0x18ba, { 0x99 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3223, gbc.sp());
        EXPECT(0x18bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0038
        gbc.setState(0xa4a6, 0x27ce, 0xff60, 0xb012, 0xc936, 0x3f79, 0x1, 0x1);
        gbc.writeMem(0xa4a6, { 0x99 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x27ce, gbc.sp());
        EXPECT(0xa4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa4a6));
        // 99 0039
        gbc.setState(0x8873, 0x31a0, 0x4030, 0x670d, 0x6418, 0xe232, 0x0, 0x0);
        gbc.writeMem(0x8873, { 0x99 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x31a0, gbc.sp());
        EXPECT(0x8874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8873));
        // 99 003A
        gbc.setState(0xbe73, 0x15ec, 0xbcf0, 0x3a2, 0xa11d, 0xfac1, 0x1, 0x0);
        gbc.writeMem(0xbe73, { 0x99 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x15ec, gbc.sp());
        EXPECT(0xbe74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbe73));
        // 99 003B
        gbc.setState(0x1bb, 0x9dbc, 0x87f0, 0x542, 0x5914, 0x5a12, 0x1, 0x1);
        gbc.writeMem(0x1bb, { 0x99 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9dbc, gbc.sp());
        EXPECT(0x1bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 003C
        gbc.setState(0x8175, 0x977c, 0x4940, 0x9004, 0xf4c4, 0x6259, 0x1, 0x1);
        gbc.writeMem(0x8175, { 0x99 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x977c, gbc.sp());
        EXPECT(0x8176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8175));
        // 99 003D
        gbc.setState(0x8cfa, 0xffac, 0x2120, 0x5f85, 0xac95, 0xea0c, 0x1, 0x0);
        gbc.writeMem(0x8cfa, { 0x99 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xffac, gbc.sp());
        EXPECT(0x8cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8cfa));
        // 99 003E
        gbc.setState(0xb2da, 0x1bdb, 0x9090, 0xc689, 0xaa2b, 0xc46, 0x0, 0x0);
        gbc.writeMem(0xb2da, { 0x99 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1bdb, gbc.sp());
        EXPECT(0xb2db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb2da));
        // 99 003F
        gbc.setState(0x3815, 0x4660, 0xff0, 0x86e, 0x3b23, 0xc90c, 0x0, 0x0);
        gbc.writeMem(0x3815, { 0x99 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4660, gbc.sp());
        EXPECT(0x3816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0040
        gbc.setState(0xba67, 0x603d, 0xda20, 0x170b, 0x9f10, 0xee19, 0x1, 0x1);
        gbc.writeMem(0xba67, { 0x99 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x603d, gbc.sp());
        EXPECT(0xba68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xba67));
        // 99 0041
        gbc.setState(0x7f77, 0x792c, 0x1de0, 0x3330, 0x9a86, 0x3355, 0x0, 0x1);
        gbc.writeMem(0x7f77, { 0x99 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x792c, gbc.sp());
        EXPECT(0x7f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0042
        gbc.setState(0xb226, 0x4d3a, 0x8590, 0x548, 0xe92b, 0x3c53, 0x1, 0x0);
        gbc.writeMem(0xb226, { 0x99 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4d3a, gbc.sp());
        EXPECT(0xb227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb226));
        // 99 0043
        gbc.setState(0x32f7, 0x7886, 0x3c0, 0x364c, 0x1c06, 0xb046, 0x1, 0x0);
        gbc.writeMem(0x32f7, { 0x99 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7886, gbc.sp());
        EXPECT(0x32f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0044
        gbc.setState(0x388b, 0xecfb, 0x4620, 0x9e09, 0xb10e, 0x5940, 0x0, 0x1);
        gbc.writeMem(0x388b, { 0x99 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xecfb, gbc.sp());
        EXPECT(0x388c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0046
        gbc.setState(0xbaa3, 0x76c, 0x2260, 0x2abc, 0x1eeb, 0xe32f, 0x0, 0x1);
        gbc.writeMem(0xbaa3, { 0x99 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x76c, gbc.sp());
        EXPECT(0xbaa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbaa3));
        // 99 0047
        gbc.setState(0x834e, 0xb778, 0x84c0, 0x8715, 0xf677, 0xdd5d, 0x1, 0x0);
        gbc.writeMem(0x834e, { 0x99 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb778, gbc.sp());
        EXPECT(0x834f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x834e));
        // 99 0048
        gbc.setState(0x240e, 0x50ac, 0x8720, 0xe3ac, 0x347e, 0xe79c, 0x0, 0x0);
        gbc.writeMem(0x240e, { 0x99 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x50ac, gbc.sp());
        EXPECT(0x240f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0049
        gbc.setState(0x6ce7, 0xc246, 0xa7a0, 0x3c33, 0x977b, 0xd176, 0x0, 0x1);
        gbc.writeMem(0x6ce7, { 0x99 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc246, gbc.sp());
        EXPECT(0x6ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 004A
        gbc.setState(0x1485, 0x6d6e, 0x19f0, 0x42f9, 0xfc31, 0xfa12, 0x1, 0x0);
        gbc.writeMem(0x1485, { 0x99 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6d6e, gbc.sp());
        EXPECT(0x1486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 004B
        gbc.setState(0xe36c, 0xa9a, 0xba50, 0x5319, 0x3599, 0x8dae, 0x1, 0x0);
        gbc.writeMem(0xe36c, { 0x99 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa9a, gbc.sp());
        EXPECT(0xe36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe36c));
        // 99 004C
        gbc.setState(0x2008, 0xbc69, 0x4ec0, 0x75ba, 0x40ad, 0x5a52, 0x1, 0x0);
        gbc.writeMem(0x2008, { 0x99 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbc69, gbc.sp());
        EXPECT(0x2009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 004D
        gbc.setState(0x80d, 0xe7c1, 0xf5f0, 0xe369, 0xb297, 0x5929, 0x1, 0x1);
        gbc.writeMem(0x80d, { 0x99 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe7c1, gbc.sp());
        EXPECT(0x80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 004E
        gbc.setState(0x168, 0xc24c, 0xb670, 0xd21c, 0xd336, 0xf831, 0x1, 0x0);
        gbc.writeMem(0x168, { 0x99 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc24c, gbc.sp());
        EXPECT(0x169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 004F
        gbc.setState(0xb97f, 0x50df, 0xf7e0, 0xf8a2, 0x4036, 0x4b91, 0x0, 0x0);
        gbc.writeMem(0xb97f, { 0x99 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x50df, gbc.sp());
        EXPECT(0xb980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb97f));
        // 99 0050
        gbc.setState(0xea7b, 0x50a9, 0x260, 0x95a8, 0x63b2, 0x6513, 0x1, 0x0);
        gbc.writeMem(0xea7b, { 0x99 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x50a9, gbc.sp());
        EXPECT(0xea7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xea7b));
        // 99 0051
        gbc.setState(0x4a09, 0x7138, 0xb3d0, 0xaaa1, 0xfa4, 0xb5d, 0x0, 0x0);
        gbc.writeMem(0x4a09, { 0x99 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7138, gbc.sp());
        EXPECT(0x4a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0052
        gbc.setState(0xa561, 0x8f00, 0x1ce0, 0x3347, 0x4103, 0xb59a, 0x1, 0x0);
        gbc.writeMem(0xa561, { 0x99 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8f00, gbc.sp());
        EXPECT(0xa562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa561));
        // 99 0053
        gbc.setState(0x6d28, 0x7756, 0xd820, 0x3972, 0x7171, 0xae2c, 0x1, 0x0);
        gbc.writeMem(0x6d28, { 0x99 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7756, gbc.sp());
        EXPECT(0x6d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0054
        gbc.setState(0x550d, 0xd567, 0xbfa0, 0xdfa1, 0xa3c8, 0xd4fa, 0x1, 0x0);
        gbc.writeMem(0x550d, { 0x99 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd567, gbc.sp());
        EXPECT(0x550e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0055
        gbc.setState(0x8e24, 0xa32d, 0xc20, 0x433c, 0x866, 0xb297, 0x1, 0x1);
        gbc.writeMem(0x8e24, { 0x99 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa32d, gbc.sp());
        EXPECT(0x8e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8e24));
        // 99 0056
        gbc.setState(0x41c9, 0xc5f4, 0x7470, 0xf823, 0x2c72, 0xc41e, 0x1, 0x0);
        gbc.writeMem(0x41c9, { 0x99 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc5f4, gbc.sp());
        EXPECT(0x41ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0057
        gbc.setState(0xb02e, 0x80fb, 0x20e0, 0x2b6e, 0xf6db, 0xdbf1, 0x0, 0x0);
        gbc.writeMem(0xb02e, { 0x99 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x80fb, gbc.sp());
        EXPECT(0xb02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb02e));
        // 99 0058
        gbc.setState(0x48ea, 0xda24, 0x3350, 0x82e5, 0x9aa5, 0xc263, 0x1, 0x0);
        gbc.writeMem(0x48ea, { 0x99 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xda24, gbc.sp());
        EXPECT(0x48eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 005A
        gbc.setState(0xe6ae, 0x49e8, 0xf0b0, 0x3791, 0x837d, 0xcc75, 0x0, 0x1);
        gbc.writeMem(0xe6ae, { 0x99 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x49e8, gbc.sp());
        EXPECT(0xe6af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe6ae));
        // 99 005B
        gbc.setState(0x9f7e, 0x43b0, 0xc660, 0x721c, 0x4f12, 0xf005, 0x0, 0x1);
        gbc.writeMem(0x9f7e, { 0x99 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x43b0, gbc.sp());
        EXPECT(0x9f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9f7e));
        // 99 005C
        gbc.setState(0x124f, 0x643d, 0xf520, 0x5394, 0x4295, 0x5126, 0x0, 0x0);
        gbc.writeMem(0x124f, { 0x99 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x643d, gbc.sp());
        EXPECT(0x1250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 005D
        gbc.setState(0x465f, 0x69a1, 0x8db0, 0xc8ef, 0xe169, 0x4ae, 0x1, 0x1);
        gbc.writeMem(0x465f, { 0x99 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x69a1, gbc.sp());
        EXPECT(0x4660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 005E
        gbc.setState(0x7b41, 0x81f7, 0xc030, 0xf8f7, 0x4d70, 0x62dd, 0x1, 0x1);
        gbc.writeMem(0x7b41, { 0x99 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x81f7, gbc.sp());
        EXPECT(0x7b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 005F
        gbc.setState(0xa4dc, 0x43ac, 0xd430, 0xd347, 0x44de, 0xfe51, 0x0, 0x1);
        gbc.writeMem(0xa4dc, { 0x99 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x43ac, gbc.sp());
        EXPECT(0xa4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa4dc));
        // 99 0060
        gbc.setState(0x487c, 0xab48, 0x1e90, 0x5631, 0x2c54, 0x588, 0x1, 0x0);
        gbc.writeMem(0x487c, { 0x99 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xab48, gbc.sp());
        EXPECT(0x487d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0061
        gbc.setState(0x9a23, 0x24b3, 0x6ba0, 0xfa37, 0xccff, 0xd960, 0x1, 0x0);
        gbc.writeMem(0x9a23, { 0x99 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x24b3, gbc.sp());
        EXPECT(0x9a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9a23));
        // 99 0062
        gbc.setState(0xa934, 0x64a, 0x8430, 0x1304, 0x41e, 0x1634, 0x0, 0x0);
        gbc.writeMem(0xa934, { 0x99 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x64a, gbc.sp());
        EXPECT(0xa935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa934));
        // 99 0063
        gbc.setState(0x4393, 0x85cf, 0x5ba0, 0xcf11, 0x495a, 0x6985, 0x1, 0x0);
        gbc.writeMem(0x4393, { 0x99 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x85cf, gbc.sp());
        EXPECT(0x4394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0064
        gbc.setState(0x9ca0, 0x2502, 0xa5e0, 0xe68d, 0x4b8, 0x7fdd, 0x1, 0x1);
        gbc.writeMem(0x9ca0, { 0x99 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2502, gbc.sp());
        EXPECT(0x9ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9ca0));
        // 99 0065
        gbc.setState(0xd3d9, 0x80e2, 0x2730, 0xdc5e, 0x22a7, 0xb367, 0x0, 0x0);
        gbc.writeMem(0xd3d9, { 0x99 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x80e2, gbc.sp());
        EXPECT(0xd3da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd3d9));
        // 99 0066
        gbc.setState(0xeda9, 0xc16d, 0x9020, 0x6ef9, 0x3841, 0xab72, 0x0, 0x1);
        gbc.writeMem(0xeda9, { 0x99 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc16d, gbc.sp());
        EXPECT(0xedaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xeda9));
        // 99 0067
        gbc.setState(0x2eb1, 0x41e, 0x1bc0, 0x5ad9, 0x26a4, 0x47a9, 0x1, 0x0);
        gbc.writeMem(0x2eb1, { 0x99 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x41e, gbc.sp());
        EXPECT(0x2eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0068
        gbc.setState(0x4dfb, 0x44f7, 0xa480, 0x7856, 0x5f19, 0x2e7e, 0x0, 0x1);
        gbc.writeMem(0x4dfb, { 0x99 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x44f7, gbc.sp());
        EXPECT(0x4dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0069
        gbc.setState(0x25f1, 0x8b93, 0xc420, 0x8557, 0x868e, 0x6dc3, 0x0, 0x1);
        gbc.writeMem(0x25f1, { 0x99 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8b93, gbc.sp());
        EXPECT(0x25f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 006B
        gbc.setState(0x3e92, 0x2790, 0x2e90, 0xb1e7, 0x8d32, 0x4ae0, 0x0, 0x1);
        gbc.writeMem(0x3e92, { 0x99 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2790, gbc.sp());
        EXPECT(0x3e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 006C
        gbc.setState(0x86c1, 0x1eb1, 0x9d70, 0x8ee1, 0x8759, 0xda3d, 0x0, 0x1);
        gbc.writeMem(0x86c1, { 0x99 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1eb1, gbc.sp());
        EXPECT(0x86c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x86c1));
        // 99 006D
        gbc.setState(0x505f, 0x21a8, 0x6fd0, 0xe481, 0x7fbe, 0xe4c4, 0x0, 0x1);
        gbc.writeMem(0x505f, { 0x99 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x21a8, gbc.sp());
        EXPECT(0x5060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 006E
        gbc.setState(0x45fc, 0x20a7, 0x8880, 0x63bd, 0x97df, 0xe769, 0x1, 0x1);
        gbc.writeMem(0x45fc, { 0x99 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x20a7, gbc.sp());
        EXPECT(0x45fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 006F
        gbc.setState(0x6b8b, 0xb6c2, 0x3a40, 0xd6ef, 0x7b5c, 0x7d4b, 0x1, 0x1);
        gbc.writeMem(0x6b8b, { 0x99 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb6c2, gbc.sp());
        EXPECT(0x6b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0071
        gbc.setState(0x85d1, 0x1cf, 0x8e0, 0x9111, 0xd244, 0x4abb, 0x0, 0x1);
        gbc.writeMem(0x85d1, { 0x99 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1cf, gbc.sp());
        EXPECT(0x85d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x85d1));
        // 99 0072
        gbc.setState(0xac72, 0x54b0, 0x7ae0, 0x675b, 0xeccb, 0x4a4d, 0x0, 0x0);
        gbc.writeMem(0xac72, { 0x99 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x54b0, gbc.sp());
        EXPECT(0xac73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xac72));
        // 99 0073
        gbc.setState(0xed70, 0x366f, 0xc720, 0x40ba, 0xe0a5, 0x3fa2, 0x0, 0x1);
        gbc.writeMem(0xed70, { 0x99 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x366f, gbc.sp());
        EXPECT(0xed71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xed70));
        // 99 0074
        gbc.setState(0x6ae6, 0xfb9c, 0x6310, 0x8299, 0x38c9, 0xddf8, 0x1, 0x1);
        gbc.writeMem(0x6ae6, { 0x99 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfb9c, gbc.sp());
        EXPECT(0x6ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0075
        gbc.setState(0xdeb1, 0x6647, 0x98c0, 0x9bc2, 0x483f, 0x9456, 0x1, 0x0);
        gbc.writeMem(0xdeb1, { 0x99 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6647, gbc.sp());
        EXPECT(0xdeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdeb1));
        // 99 0076
        gbc.setState(0x7c72, 0x49a6, 0xc610, 0x7b88, 0x9c3c, 0xaf2c, 0x1, 0x0);
        gbc.writeMem(0x7c72, { 0x99 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x49a6, gbc.sp());
        EXPECT(0x7c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0077
        gbc.setState(0xca05, 0xe1fa, 0xda50, 0x7555, 0xf22e, 0x49a3, 0x0, 0x0);
        gbc.writeMem(0xca05, { 0x99 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe1fa, gbc.sp());
        EXPECT(0xca06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xca05));
        // 99 0078
        gbc.setState(0x21f6, 0x6f76, 0xd8e0, 0x5e3f, 0xb2f2, 0x24fe, 0x0, 0x1);
        gbc.writeMem(0x21f6, { 0x99 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6f76, gbc.sp());
        EXPECT(0x21f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0079
        gbc.setState(0x5e20, 0xf502, 0xda30, 0x8ed1, 0xd404, 0xbab0, 0x1, 0x0);
        gbc.writeMem(0x5e20, { 0x99 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf502, gbc.sp());
        EXPECT(0x5e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 007A
        gbc.setState(0xecd5, 0x3db5, 0x58c0, 0xf675, 0xbf3a, 0x33c3, 0x1, 0x1);
        gbc.writeMem(0xecd5, { 0x99 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3db5, gbc.sp());
        EXPECT(0xecd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xecd5));
        // 99 007B
        gbc.setState(0xa0a2, 0x6ffa, 0x8de0, 0x7b0e, 0xb85d, 0x7555, 0x1, 0x0);
        gbc.writeMem(0xa0a2, { 0x99 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6ffa, gbc.sp());
        EXPECT(0xa0a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa0a2));
        // 99 007D
        gbc.setState(0x8972, 0x24d4, 0x7730, 0xd6c2, 0x28f9, 0x88f8, 0x0, 0x1);
        gbc.writeMem(0x8972, { 0x99 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x24d4, gbc.sp());
        EXPECT(0x8973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8972));
        // 99 007E
        gbc.setState(0x502b, 0x4e78, 0xa3e0, 0x6f8f, 0x5217, 0x448d, 0x0, 0x0);
        gbc.writeMem(0x502b, { 0x99 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4e78, gbc.sp());
        EXPECT(0x502c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 007F
        gbc.setState(0x8c66, 0xf39a, 0x1830, 0x5b58, 0x3544, 0xaf2f, 0x0, 0x1);
        gbc.writeMem(0x8c66, { 0x99 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf39a, gbc.sp());
        EXPECT(0x8c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8c66));
        // 99 0080
        gbc.setState(0x689d, 0xb00, 0x8ff0, 0x679, 0x5352, 0x2990, 0x1, 0x1);
        gbc.writeMem(0x689d, { 0x99 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb00, gbc.sp());
        EXPECT(0x689e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0081
        gbc.setState(0x3391, 0xbcee, 0xb240, 0x2f98, 0xcafa, 0x826e, 0x1, 0x0);
        gbc.writeMem(0x3391, { 0x99 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbcee, gbc.sp());
        EXPECT(0x3392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0082
        gbc.setState(0x6a01, 0x2dd7, 0xc470, 0x1a2d, 0x6e0, 0x2c7, 0x1, 0x0);
        gbc.writeMem(0x6a01, { 0x99 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2dd7, gbc.sp());
        EXPECT(0x6a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0083
        gbc.setState(0x3514, 0x9aa3, 0x7760, 0x25d3, 0x4f5c, 0x5145, 0x1, 0x1);
        gbc.writeMem(0x3514, { 0x99 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9aa3, gbc.sp());
        EXPECT(0x3515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0084
        gbc.setState(0x87cd, 0x2056, 0xf860, 0x8ac0, 0xc4e6, 0xdeec, 0x0, 0x1);
        gbc.writeMem(0x87cd, { 0x99 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2056, gbc.sp());
        EXPECT(0x87ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x87cd));
        // 99 0085
        gbc.setState(0x72b4, 0xd7e3, 0x4960, 0xc6d5, 0xe9e6, 0xe77b, 0x1, 0x1);
        gbc.writeMem(0x72b4, { 0x99 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd7e3, gbc.sp());
        EXPECT(0x72b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0086
        gbc.setState(0x9556, 0xe1f0, 0x4aa0, 0x13c5, 0xcd36, 0xc38b, 0x0, 0x0);
        gbc.writeMem(0x9556, { 0x99 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe1f0, gbc.sp());
        EXPECT(0x9557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9556));
        // 99 0087
        gbc.setState(0x40e1, 0xabd1, 0xf470, 0x69d3, 0xcb23, 0x707b, 0x0, 0x1);
        gbc.writeMem(0x40e1, { 0x99 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xabd1, gbc.sp());
        EXPECT(0x40e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0088
        gbc.setState(0xddda, 0x39c1, 0xae10, 0x86f7, 0x9d8f, 0x8150, 0x1, 0x0);
        gbc.writeMem(0xddda, { 0x99 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x39c1, gbc.sp());
        EXPECT(0xdddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xddda));
        // 99 0089
        gbc.setState(0xa9a0, 0x5c6e, 0xec70, 0x5557, 0xb1cb, 0xa789, 0x0, 0x1);
        gbc.writeMem(0xa9a0, { 0x99 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5c6e, gbc.sp());
        EXPECT(0xa9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa9a0));
        // 99 008A
        gbc.setState(0x7b07, 0x942b, 0x58e0, 0x32ef, 0x2520, 0xe9ee, 0x0, 0x0);
        gbc.writeMem(0x7b07, { 0x99 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x942b, gbc.sp());
        EXPECT(0x7b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 008B
        gbc.setState(0x4d57, 0x307b, 0x6b30, 0xfe3, 0xbba2, 0x7928, 0x1, 0x0);
        gbc.writeMem(0x4d57, { 0x99 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x307b, gbc.sp());
        EXPECT(0x4d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 008C
        gbc.setState(0x855f, 0x4070, 0xc770, 0x6490, 0x2072, 0xae3d, 0x1, 0x1);
        gbc.writeMem(0x855f, { 0x99 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4070, gbc.sp());
        EXPECT(0x8560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x855f));
        // 99 008D
        gbc.setState(0xb626, 0x4a8c, 0x2530, 0x8844, 0x17ef, 0x9b51, 0x1, 0x0);
        gbc.writeMem(0xb626, { 0x99 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4a8c, gbc.sp());
        EXPECT(0xb627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb626));
        // 99 008E
        gbc.setState(0x357e, 0x3185, 0xbfa0, 0xa6b0, 0xa668, 0x595a, 0x1, 0x0);
        gbc.writeMem(0x357e, { 0x99 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3185, gbc.sp());
        EXPECT(0x357f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 008F
        gbc.setState(0x29af, 0x288c, 0xe8c0, 0xc769, 0xd14b, 0x855a, 0x1, 0x0);
        gbc.writeMem(0x29af, { 0x99 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x288c, gbc.sp());
        EXPECT(0x29b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0090
        gbc.setState(0x7275, 0xba9d, 0x2990, 0xbdf6, 0x107d, 0xd51a, 0x1, 0x0);
        gbc.writeMem(0x7275, { 0x99 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xba9d, gbc.sp());
        EXPECT(0x7276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0091
        gbc.setState(0xb01f, 0xe033, 0xbb0, 0x286f, 0x45e5, 0xc164, 0x0, 0x1);
        gbc.writeMem(0xb01f, { 0x99 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe033, gbc.sp());
        EXPECT(0xb020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb01f));
        // 99 0092
        gbc.setState(0x8dfd, 0x74bc, 0x75c0, 0x90ef, 0x3eb0, 0xed25, 0x1, 0x1);
        gbc.writeMem(0x8dfd, { 0x99 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x74bc, gbc.sp());
        EXPECT(0x8dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8dfd));
        // 99 0093
        gbc.setState(0x624c, 0x503c, 0x6d50, 0x2a13, 0xbaf0, 0x97d0, 0x1, 0x0);
        gbc.writeMem(0x624c, { 0x99 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x503c, gbc.sp());
        EXPECT(0x624d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0094
        gbc.setState(0x6597, 0x9dc6, 0xea50, 0xfb41, 0xa5ec, 0xe21f, 0x0, 0x1);
        gbc.writeMem(0x6597, { 0x99 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9dc6, gbc.sp());
        EXPECT(0x6598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0095
        gbc.setState(0x9af3, 0x341d, 0x1ab0, 0x8a40, 0x7cc9, 0x1070, 0x1, 0x1);
        gbc.writeMem(0x9af3, { 0x99 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x341d, gbc.sp());
        EXPECT(0x9af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9af3));
        // 99 0096
        gbc.setState(0x1438, 0x1007, 0x1770, 0x7652, 0xe611, 0x41be, 0x0, 0x0);
        gbc.writeMem(0x1438, { 0x99 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1007, gbc.sp());
        EXPECT(0x1439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0097
        gbc.setState(0x2d81, 0x9a6d, 0x9170, 0xccfd, 0x22f8, 0xeac, 0x0, 0x1);
        gbc.writeMem(0x2d81, { 0x99 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9a6d, gbc.sp());
        EXPECT(0x2d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0098
        gbc.setState(0x9584, 0x8b1, 0xc130, 0xf4b1, 0x8137, 0x6cf2, 0x0, 0x1);
        gbc.writeMem(0x9584, { 0x99 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8b1, gbc.sp());
        EXPECT(0x9585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9584));
        // 99 0099
        gbc.setState(0xb651, 0x3ce8, 0x2910, 0x3a30, 0x9b7e, 0x4157, 0x0, 0x0);
        gbc.writeMem(0xb651, { 0x99 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3ce8, gbc.sp());
        EXPECT(0xb652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb651));
        // 99 009A
        gbc.setState(0x2d86, 0x4cea, 0xf130, 0x5a98, 0x7424, 0x843b, 0x1, 0x0);
        gbc.writeMem(0x2d86, { 0x99 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4cea, gbc.sp());
        EXPECT(0x2d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 009B
        gbc.setState(0x50c5, 0x2f7e, 0x6970, 0xb659, 0x617c, 0x1347, 0x0, 0x1);
        gbc.writeMem(0x50c5, { 0x99 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2f7e, gbc.sp());
        EXPECT(0x50c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 009C
        gbc.setState(0xbf35, 0x5b1e, 0x160, 0xc52, 0x21d5, 0x48da, 0x0, 0x0);
        gbc.writeMem(0xbf35, { 0x99 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5b1e, gbc.sp());
        EXPECT(0xbf36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbf35));
        // 99 009D
        gbc.setState(0xee96, 0xa26e, 0x6d0, 0x33e5, 0xc334, 0xa2b9, 0x0, 0x0);
        gbc.writeMem(0xee96, { 0x99 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa26e, gbc.sp());
        EXPECT(0xee97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xee96));
        // 99 009E
        gbc.setState(0x8c1a, 0xddf6, 0x410, 0x97fd, 0xfda8, 0x5679, 0x0, 0x0);
        gbc.writeMem(0x8c1a, { 0x99 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xddf6, gbc.sp());
        EXPECT(0x8c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8c1a));
        // 99 009F
        gbc.setState(0x4dee, 0x183e, 0x8f0, 0x55e, 0xc311, 0x60a0, 0x1, 0x0);
        gbc.writeMem(0x4dee, { 0x99 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x183e, gbc.sp());
        EXPECT(0x4def, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00A0
        gbc.setState(0xeb9c, 0x8836, 0x2cc0, 0xd97b, 0xb3d, 0xe825, 0x0, 0x0);
        gbc.writeMem(0xeb9c, { 0x99 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8836, gbc.sp());
        EXPECT(0xeb9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xeb9c));
        // 99 00A1
        gbc.setState(0x6f54, 0x731b, 0x8f00, 0xa7a4, 0x62e8, 0x5ac4, 0x1, 0x1);
        gbc.writeMem(0x6f54, { 0x99 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x731b, gbc.sp());
        EXPECT(0x6f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00A2
        gbc.setState(0x3544, 0xb6b7, 0x9420, 0xe9f3, 0x3ce7, 0x4156, 0x1, 0x0);
        gbc.writeMem(0x3544, { 0x99 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb6b7, gbc.sp());
        EXPECT(0x3545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00A3
        gbc.setState(0x670b, 0x6b9d, 0x9bb0, 0xb741, 0x52f6, 0xd6c5, 0x1, 0x0);
        gbc.writeMem(0x670b, { 0x99 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6b9d, gbc.sp());
        EXPECT(0x670c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00A4
        gbc.setState(0x2f98, 0x98cb, 0x7e90, 0x371a, 0x9398, 0x705b, 0x0, 0x0);
        gbc.writeMem(0x2f98, { 0x99 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x98cb, gbc.sp());
        EXPECT(0x2f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00A5
        gbc.setState(0xa25f, 0x2ee4, 0x8a0, 0xfe4, 0x92de, 0x6bdb, 0x0, 0x0);
        gbc.writeMem(0xa25f, { 0x99 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2ee4, gbc.sp());
        EXPECT(0xa260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa25f));
        // 99 00A6
        gbc.setState(0xb102, 0xca2e, 0xaa0, 0x866e, 0x43d4, 0x58fc, 0x1, 0x1);
        gbc.writeMem(0xb102, { 0x99 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xca2e, gbc.sp());
        EXPECT(0xb103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb102));
        // 99 00A7
        gbc.setState(0x1d0e, 0xa4ff, 0xa3d0, 0x8be6, 0x309, 0x724f, 0x0, 0x1);
        gbc.writeMem(0x1d0e, { 0x99 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa4ff, gbc.sp());
        EXPECT(0x1d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00A8
        gbc.setState(0x7b3c, 0x9f00, 0xe590, 0x38d6, 0xe38c, 0x65c9, 0x0, 0x1);
        gbc.writeMem(0x7b3c, { 0x99 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9f00, gbc.sp());
        EXPECT(0x7b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00A9
        gbc.setState(0xd59d, 0x220a, 0x9e60, 0x8e5a, 0xfafb, 0x7656, 0x0, 0x1);
        gbc.writeMem(0xd59d, { 0x99 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x220a, gbc.sp());
        EXPECT(0xd59e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd59d));
        // 99 00AA
        gbc.setState(0x68e5, 0x78f2, 0x9780, 0x5764, 0x9089, 0xe11c, 0x0, 0x0);
        gbc.writeMem(0x68e5, { 0x99 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x78f2, gbc.sp());
        EXPECT(0x68e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00AB
        gbc.setState(0xc3a3, 0xb03b, 0x5560, 0xb59, 0x9825, 0x8bbb, 0x1, 0x0);
        gbc.writeMem(0xc3a3, { 0x99 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb03b, gbc.sp());
        EXPECT(0xc3a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc3a3));
        // 99 00AE
        gbc.setState(0x4413, 0xa720, 0xb30, 0x6c26, 0xf44b, 0x4fe6, 0x1, 0x0);
        gbc.writeMem(0x4413, { 0x99 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa720, gbc.sp());
        EXPECT(0x4414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00AF
        gbc.setState(0x8963, 0xd3e0, 0x3670, 0xca4f, 0xbb8e, 0x981c, 0x1, 0x1);
        gbc.writeMem(0x8963, { 0x99 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd3e0, gbc.sp());
        EXPECT(0x8964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8963));
        // 99 00B0
        gbc.setState(0x4834, 0x801d, 0x70b0, 0xe68c, 0x45fb, 0x4356, 0x1, 0x1);
        gbc.writeMem(0x4834, { 0x99 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x801d, gbc.sp());
        EXPECT(0x4835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00B1
        gbc.setState(0x877c, 0xcda8, 0xbe40, 0x3d8f, 0xf47b, 0x729f, 0x1, 0x1);
        gbc.writeMem(0x877c, { 0x99 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcda8, gbc.sp());
        EXPECT(0x877d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x877c));
        // 99 00B2
        gbc.setState(0xb726, 0xeb83, 0x9b50, 0xf55c, 0xe4b7, 0xc2b7, 0x0, 0x0);
        gbc.writeMem(0xb726, { 0x99 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xeb83, gbc.sp());
        EXPECT(0xb727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb726));
        // 99 00B3
        gbc.setState(0xe76a, 0x82eb, 0xd8f0, 0x462b, 0x52dd, 0x3f64, 0x0, 0x0);
        gbc.writeMem(0xe76a, { 0x99 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x82eb, gbc.sp());
        EXPECT(0xe76b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe76a));
        // 99 00B4
        gbc.setState(0x9b6b, 0xcbd3, 0xa7e0, 0x13bf, 0xb933, 0x5ae, 0x0, 0x0);
        gbc.writeMem(0x9b6b, { 0x99 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcbd3, gbc.sp());
        EXPECT(0x9b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9b6b));
        // 99 00B5
        gbc.setState(0x2844, 0xfaa2, 0x9b30, 0x67ad, 0x5725, 0xa382, 0x1, 0x0);
        gbc.writeMem(0x2844, { 0x99 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfaa2, gbc.sp());
        EXPECT(0x2845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00B6
        gbc.setState(0x973f, 0x7d69, 0xa970, 0x392, 0x9444, 0x9661, 0x1, 0x0);
        gbc.writeMem(0x973f, { 0x99 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7d69, gbc.sp());
        EXPECT(0x9740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x973f));
        // 99 00B7
        gbc.setState(0x3934, 0x9e0a, 0xd770, 0x7e6b, 0x8d78, 0x1528, 0x1, 0x0);
        gbc.writeMem(0x3934, { 0x99 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9e0a, gbc.sp());
        EXPECT(0x3935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00B8
        gbc.setState(0x5617, 0xc8af, 0x58d0, 0xecdb, 0x9f8a, 0xa594, 0x1, 0x1);
        gbc.writeMem(0x5617, { 0x99 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc8af, gbc.sp());
        EXPECT(0x5618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00B9
        gbc.setState(0xfc8, 0x8aea, 0xb020, 0x7ae2, 0x75c7, 0x223d, 0x0, 0x0);
        gbc.writeMem(0xfc8, { 0x99 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8aea, gbc.sp());
        EXPECT(0xfc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00BA
        gbc.setState(0x3f6f, 0x86d1, 0x4330, 0x47e, 0xab25, 0x8d5f, 0x1, 0x1);
        gbc.writeMem(0x3f6f, { 0x99 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x86d1, gbc.sp());
        EXPECT(0x3f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00BB
        gbc.setState(0x9d20, 0x4080, 0xebc0, 0xdb6c, 0x44da, 0xa9ca, 0x0, 0x1);
        gbc.writeMem(0x9d20, { 0x99 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4080, gbc.sp());
        EXPECT(0x9d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9d20));
        // 99 00BC
        gbc.setState(0x734e, 0x77ed, 0x5ed0, 0x8a2, 0x8800, 0xc30, 0x0, 0x0);
        gbc.writeMem(0x734e, { 0x99 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x77ed, gbc.sp());
        EXPECT(0x734f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00BD
        gbc.setState(0x9c6, 0x71c5, 0xd3f0, 0x7515, 0xf0d3, 0x5bb1, 0x0, 0x0);
        gbc.writeMem(0x9c6, { 0x99 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x71c5, gbc.sp());
        EXPECT(0x9c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00BE
        gbc.setState(0xd4eb, 0x3d22, 0xf950, 0xcc62, 0x24ec, 0x8a01, 0x1, 0x0);
        gbc.writeMem(0xd4eb, { 0x99 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3d22, gbc.sp());
        EXPECT(0xd4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd4eb));
        // 99 00BF
        gbc.setState(0xdfa6, 0x2109, 0xf7d0, 0x8450, 0xe291, 0xa1f9, 0x0, 0x0);
        gbc.writeMem(0xdfa6, { 0x99 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2109, gbc.sp());
        EXPECT(0xdfa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdfa6));
        // 99 00C0
        gbc.setState(0x478e, 0xf6c8, 0xb5c0, 0x7bf3, 0x8fce, 0xcc9c, 0x1, 0x0);
        gbc.writeMem(0x478e, { 0x99 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf6c8, gbc.sp());
        EXPECT(0x478f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00C1
        gbc.setState(0xaec7, 0xc1a8, 0xf530, 0x15cb, 0x4a09, 0x67c8, 0x0, 0x0);
        gbc.writeMem(0xaec7, { 0x99 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc1a8, gbc.sp());
        EXPECT(0xaec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xaec7));
        // 99 00C2
        gbc.setState(0x9a3a, 0x8493, 0xecb0, 0xe0f, 0xeadd, 0x3b9e, 0x0, 0x0);
        gbc.writeMem(0x9a3a, { 0x99 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8493, gbc.sp());
        EXPECT(0x9a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9a3a));
        // 99 00C5
        gbc.setState(0xd933, 0x87d4, 0x8510, 0xf2f6, 0x997e, 0x21ec, 0x0, 0x0);
        gbc.writeMem(0xd933, { 0x99 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x87d4, gbc.sp());
        EXPECT(0xd934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd933));
        // 99 00C7
        gbc.setState(0x5dfd, 0x9b0c, 0xc4c0, 0x5683, 0xc7d0, 0x610b, 0x0, 0x1);
        gbc.writeMem(0x5dfd, { 0x99 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9b0c, gbc.sp());
        EXPECT(0x5dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00C8
        gbc.setState(0xdbeb, 0xf705, 0xc440, 0x4ef7, 0x117, 0xeac4, 0x1, 0x1);
        gbc.writeMem(0xdbeb, { 0x99 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf705, gbc.sp());
        EXPECT(0xdbec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdbeb));
        // 99 00C9
        gbc.setState(0xb170, 0x83c2, 0xeaf0, 0x4f12, 0x9b46, 0xfddf, 0x0, 0x1);
        gbc.writeMem(0xb170, { 0x99 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x83c2, gbc.sp());
        EXPECT(0xb171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb170));
        // 99 00CA
        gbc.setState(0x638a, 0x2665, 0xe430, 0x40c3, 0x3911, 0xab8c, 0x0, 0x0);
        gbc.writeMem(0x638a, { 0x99 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2665, gbc.sp());
        EXPECT(0x638b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00CB
        gbc.setState(0x9586, 0x28f8, 0x3e0, 0x3100, 0x1585, 0x45af, 0x0, 0x1);
        gbc.writeMem(0x9586, { 0x99 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x28f8, gbc.sp());
        EXPECT(0x9587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9586));
        // 99 00CC
        gbc.setState(0x5800, 0xcae7, 0x1cc0, 0x3d8b, 0xa2aa, 0xf931, 0x0, 0x0);
        gbc.writeMem(0x5800, { 0x99 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcae7, gbc.sp());
        EXPECT(0x5801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00CD
        gbc.setState(0xc22d, 0x4e56, 0xaa70, 0xd12a, 0x6f6a, 0x980a, 0x0, 0x1);
        gbc.writeMem(0xc22d, { 0x99 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4e56, gbc.sp());
        EXPECT(0xc22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc22d));
        // 99 00CE
        gbc.setState(0x65b5, 0x7a0b, 0x60f0, 0x5b9c, 0x719d, 0xb009, 0x1, 0x1);
        gbc.writeMem(0x65b5, { 0x99 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7a0b, gbc.sp());
        EXPECT(0x65b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00CF
        gbc.setState(0x77f1, 0x400e, 0x60b0, 0x1baa, 0xa65a, 0x5e90, 0x0, 0x0);
        gbc.writeMem(0x77f1, { 0x99 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x400e, gbc.sp());
        EXPECT(0x77f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00D0
        gbc.setState(0x5d09, 0xecf1, 0xe3f0, 0x2995, 0xde73, 0x7be2, 0x0, 0x1);
        gbc.writeMem(0x5d09, { 0x99 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xecf1, gbc.sp());
        EXPECT(0x5d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00D1
        gbc.setState(0x8066, 0xc271, 0x4e70, 0xbe91, 0x941f, 0x59a6, 0x1, 0x1);
        gbc.writeMem(0x8066, { 0x99 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc271, gbc.sp());
        EXPECT(0x8067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8066));
        // 99 00D2
        gbc.setState(0xcd2e, 0x7ef3, 0x5a40, 0xa52a, 0x1d45, 0xd509, 0x1, 0x0);
        gbc.writeMem(0xcd2e, { 0x99 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7ef3, gbc.sp());
        EXPECT(0xcd2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcd2e));
        // 99 00D3
        gbc.setState(0x1c13, 0xc7f2, 0xbb80, 0x4a9a, 0xeb8c, 0x670c, 0x0, 0x0);
        gbc.writeMem(0x1c13, { 0x99 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc7f2, gbc.sp());
        EXPECT(0x1c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00D4
        gbc.setState(0xd10f, 0x7371, 0x5d40, 0xead1, 0x1a4e, 0xf27, 0x1, 0x0);
        gbc.writeMem(0xd10f, { 0x99 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7371, gbc.sp());
        EXPECT(0xd110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd10f));
        // 99 00D6
        gbc.setState(0x6ef5, 0x54bb, 0xc7c0, 0x603c, 0x5f51, 0x13b6, 0x1, 0x1);
        gbc.writeMem(0x6ef5, { 0x99 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x54bb, gbc.sp());
        EXPECT(0x6ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00D7
        gbc.setState(0x48d8, 0xcef7, 0xfe60, 0x3959, 0xfcf3, 0x86a2, 0x1, 0x1);
        gbc.writeMem(0x48d8, { 0x99 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcef7, gbc.sp());
        EXPECT(0x48d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00D8
        gbc.setState(0x5ec5, 0x44c3, 0x47f0, 0xd62b, 0xd779, 0x7142, 0x1, 0x0);
        gbc.writeMem(0x5ec5, { 0x99 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x44c3, gbc.sp());
        EXPECT(0x5ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00D9
        gbc.setState(0x614a, 0x47dd, 0x8b30, 0x3b36, 0xc28d, 0x65f7, 0x1, 0x1);
        gbc.writeMem(0x614a, { 0x99 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x47dd, gbc.sp());
        EXPECT(0x614b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00DA
        gbc.setState(0x1df1, 0x71dd, 0xf9b0, 0xdbd1, 0x97a2, 0x414b, 0x1, 0x1);
        gbc.writeMem(0x1df1, { 0x99 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x71dd, gbc.sp());
        EXPECT(0x1df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00DB
        gbc.setState(0xd337, 0x27c6, 0x6bc0, 0xfd88, 0xfa2f, 0x34dd, 0x1, 0x0);
        gbc.writeMem(0xd337, { 0x99 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x27c6, gbc.sp());
        EXPECT(0xd338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd337));
        // 99 00DC
        gbc.setState(0x1ec4, 0x1c56, 0x97e0, 0x9e0a, 0x9879, 0xf7dc, 0x0, 0x1);
        gbc.writeMem(0x1ec4, { 0x99 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1c56, gbc.sp());
        EXPECT(0x1ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00DD
        gbc.setState(0x8513, 0x4a2a, 0xab70, 0x3918, 0xdc21, 0x4333, 0x0, 0x1);
        gbc.writeMem(0x8513, { 0x99 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4a2a, gbc.sp());
        EXPECT(0x8514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8513));
        // 99 00DF
        gbc.setState(0xa817, 0xe9d9, 0xec40, 0x3ee4, 0x21a8, 0x874e, 0x0, 0x0);
        gbc.writeMem(0xa817, { 0x99 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe9d9, gbc.sp());
        EXPECT(0xa818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa817));
        // 99 00E0
        gbc.setState(0xd579, 0xea4d, 0x6fb0, 0xcae8, 0x40c1, 0x9c92, 0x1, 0x1);
        gbc.writeMem(0xd579, { 0x99 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xea4d, gbc.sp());
        EXPECT(0xd57a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd579));
        // 99 00E1
        gbc.setState(0xef3, 0xd385, 0xe790, 0x2685, 0xc405, 0x688b, 0x1, 0x1);
        gbc.writeMem(0xef3, { 0x99 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd385, gbc.sp());
        EXPECT(0xef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00E2
        gbc.setState(0x943e, 0x9165, 0x22e0, 0xaee9, 0x8f4e, 0x7993, 0x1, 0x1);
        gbc.writeMem(0x943e, { 0x99 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9165, gbc.sp());
        EXPECT(0x943f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x943e));
        // 99 00E3
        gbc.setState(0x7388, 0x2cd8, 0xb6c0, 0x9f9e, 0x23c6, 0xf9c4, 0x1, 0x0);
        gbc.writeMem(0x7388, { 0x99 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2cd8, gbc.sp());
        EXPECT(0x7389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00E4
        gbc.setState(0x2b30, 0x547d, 0xe7a0, 0xe7c6, 0xf4fd, 0xbacf, 0x0, 0x1);
        gbc.writeMem(0x2b30, { 0x99 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x547d, gbc.sp());
        EXPECT(0x2b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00E5
        gbc.setState(0xa441, 0x7e6f, 0x4090, 0x7754, 0x858d, 0xd07, 0x1, 0x0);
        gbc.writeMem(0xa441, { 0x99 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7e6f, gbc.sp());
        EXPECT(0xa442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa441));
        // 99 00E6
        gbc.setState(0xdf7e, 0xa107, 0xf1c0, 0x4913, 0x1aee, 0x6f4c, 0x1, 0x0);
        gbc.writeMem(0xdf7e, { 0x99 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa107, gbc.sp());
        EXPECT(0xdf7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdf7e));
        // 99 00E7
        gbc.setState(0xd6ff, 0x53e6, 0x8d50, 0x872b, 0xe0d1, 0x5565, 0x0, 0x0);
        gbc.writeMem(0xd6ff, { 0x99 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x53e6, gbc.sp());
        EXPECT(0xd700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd6ff));
        // 99 00E8
        gbc.setState(0x44c7, 0x98d2, 0x8c90, 0xa4b2, 0xc735, 0xf518, 0x0, 0x0);
        gbc.writeMem(0x44c7, { 0x99 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x98d2, gbc.sp());
        EXPECT(0x44c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00E9
        gbc.setState(0xdc3c, 0x7fdf, 0xba80, 0xa4a2, 0x9aca, 0xfcc9, 0x0, 0x1);
        gbc.writeMem(0xdc3c, { 0x99 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7fdf, gbc.sp());
        EXPECT(0xdc3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdc3c));
        // 99 00EA
        gbc.setState(0x8265, 0x4564, 0x7580, 0x1011, 0x2ddd, 0x8069, 0x0, 0x1);
        gbc.writeMem(0x8265, { 0x99 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4564, gbc.sp());
        EXPECT(0x8266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8265));
        // 99 00EB
        gbc.setState(0xb9ea, 0x7fcf, 0x43a0, 0x112a, 0x83e9, 0x9608, 0x1, 0x1);
        gbc.writeMem(0xb9ea, { 0x99 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7fcf, gbc.sp());
        EXPECT(0xb9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb9ea));
        // 99 00EC
        gbc.setState(0xdc30, 0xde8c, 0x86d0, 0x618d, 0x474a, 0x2d33, 0x0, 0x1);
        gbc.writeMem(0xdc30, { 0x99 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xde8c, gbc.sp());
        EXPECT(0xdc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdc30));
        // 99 00ED
        gbc.setState(0x564e, 0x58b0, 0x3b40, 0xfc28, 0x7c7b, 0x6534, 0x0, 0x0);
        gbc.writeMem(0x564e, { 0x99 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x58b0, gbc.sp());
        EXPECT(0x564f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00EE
        gbc.setState(0xd300, 0x4463, 0x2990, 0x73fd, 0xf4c8, 0x164, 0x1, 0x1);
        gbc.writeMem(0xd300, { 0x99 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4463, gbc.sp());
        EXPECT(0xd301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd300));
        // 99 00F0
        gbc.setState(0x8360, 0xb584, 0x2e80, 0x6db9, 0xced3, 0x3148, 0x1, 0x0);
        gbc.writeMem(0x8360, { 0x99 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb584, gbc.sp());
        EXPECT(0x8361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8360));
        // 99 00F1
        gbc.setState(0xcdc4, 0x86a0, 0x62e0, 0x7459, 0x45de, 0x372b, 0x1, 0x1);
        gbc.writeMem(0xcdc4, { 0x99 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x86a0, gbc.sp());
        EXPECT(0xcdc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcdc4));
        // 99 00F2
        gbc.setState(0x3e14, 0xe740, 0x1fe0, 0x35ad, 0x8253, 0x58ea, 0x1, 0x0);
        gbc.writeMem(0x3e14, { 0x99 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe740, gbc.sp());
        EXPECT(0x3e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00F3
        gbc.setState(0xbe8b, 0xe98b, 0x2780, 0x661d, 0x7b82, 0x21b4, 0x1, 0x0);
        gbc.writeMem(0xbe8b, { 0x99 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe98b, gbc.sp());
        EXPECT(0xbe8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbe8b));
        // 99 00F4
        gbc.setState(0x2079, 0x9535, 0xd5a0, 0xc845, 0x20f4, 0x3955, 0x0, 0x0);
        gbc.writeMem(0x2079, { 0x99 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9535, gbc.sp());
        EXPECT(0x207a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00F5
        gbc.setState(0x71e8, 0xcf53, 0x3340, 0xe03f, 0xd8dd, 0xb3e5, 0x1, 0x0);
        gbc.writeMem(0x71e8, { 0x99 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcf53, gbc.sp());
        EXPECT(0x71e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00F6
        gbc.setState(0x7e08, 0xfb6, 0xa810, 0x45ab, 0x5970, 0x79a9, 0x1, 0x0);
        gbc.writeMem(0x7e08, { 0x99 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfb6, gbc.sp());
        EXPECT(0x7e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00F7
        gbc.setState(0x99bf, 0xcae2, 0xb510, 0x65c9, 0x1e33, 0x6adf, 0x0, 0x1);
        gbc.writeMem(0x99bf, { 0x99 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcae2, gbc.sp());
        EXPECT(0x99c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x99bf));
        // 99 00F8
        gbc.setState(0xa0a3, 0x3230, 0xd870, 0x83c, 0x759, 0xfe9e, 0x0, 0x1);
        gbc.writeMem(0xa0a3, { 0x99 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3230, gbc.sp());
        EXPECT(0xa0a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa0a3));
        // 99 00F9
        gbc.setState(0x8b6e, 0xd976, 0x3c50, 0x663a, 0x90a9, 0x8271, 0x0, 0x0);
        gbc.writeMem(0x8b6e, { 0x99 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd976, gbc.sp());
        EXPECT(0x8b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8b6e));
        // 99 00FA
        gbc.setState(0xe8a7, 0x9077, 0x4eb0, 0xce, 0x9fdb, 0x77cb, 0x0, 0x0);
        gbc.writeMem(0xe8a7, { 0x99 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9077, gbc.sp());
        EXPECT(0xe8a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe8a7));
        // 99 00FB
        gbc.setState(0xabee, 0x97b6, 0x88d0, 0xe5aa, 0xdc5a, 0xe9b9, 0x0, 0x1);
        gbc.writeMem(0xabee, { 0x99 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x97b6, gbc.sp());
        EXPECT(0xabef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xabee));
        // 99 00FC
        gbc.setState(0xb16a, 0x9e9, 0x8ec0, 0x771c, 0xfb5e, 0xfd17, 0x1, 0x0);
        gbc.writeMem(0xb16a, { 0x99 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9e9, gbc.sp());
        EXPECT(0xb16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb16a));
        // 99 00FD
        gbc.setState(0x654c, 0xe6c5, 0xf800, 0x617e, 0xb969, 0xb506, 0x0, 0x0);
        gbc.writeMem(0x654c, { 0x99 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe6c5, gbc.sp());
        EXPECT(0x654d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 00FE
        gbc.setState(0x2c8b, 0xf422, 0x86d0, 0x2993, 0x529e, 0xc28b, 0x0, 0x0);
        gbc.writeMem(0x2c8b, { 0x99 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf422, gbc.sp());
        EXPECT(0x2c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 00FF
        gbc.setState(0x6354, 0x4193, 0x6f70, 0x7e72, 0xf351, 0xc529, 0x1, 0x1);
        gbc.writeMem(0x6354, { 0x99 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4193, gbc.sp());
        EXPECT(0x6355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0100
        gbc.setState(0xaa8f, 0x145, 0xba10, 0xddb3, 0x959a, 0xfd8c, 0x1, 0x1);
        gbc.writeMem(0xaa8f, { 0x99 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x145, gbc.sp());
        EXPECT(0xaa90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xaa8f));
        // 99 0101
        gbc.setState(0x92ab, 0x5076, 0xdb30, 0xaf98, 0xaae5, 0x9b35, 0x0, 0x1);
        gbc.writeMem(0x92ab, { 0x99 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5076, gbc.sp());
        EXPECT(0x92ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x92ab));
        // 99 0102
        gbc.setState(0x9d66, 0x34, 0x6680, 0x7425, 0x48e3, 0x558e, 0x1, 0x0);
        gbc.writeMem(0x9d66, { 0x99 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x34, gbc.sp());
        EXPECT(0x9d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9d66));
        // 99 0104
        gbc.setState(0xbf0e, 0x7a0d, 0x69f0, 0x57f5, 0x5417, 0xa8e1, 0x0, 0x0);
        gbc.writeMem(0xbf0e, { 0x99 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7a0d, gbc.sp());
        EXPECT(0xbf0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbf0e));
        // 99 0105
        gbc.setState(0xd18d, 0xeca3, 0xe490, 0x1482, 0x34bb, 0xff0f, 0x1, 0x1);
        gbc.writeMem(0xd18d, { 0x99 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xeca3, gbc.sp());
        EXPECT(0xd18e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd18d));
        // 99 0106
        gbc.setState(0x8a58, 0x1ef2, 0x7230, 0x6fda, 0xa482, 0xcd7e, 0x0, 0x0);
        gbc.writeMem(0x8a58, { 0x99 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1ef2, gbc.sp());
        EXPECT(0x8a59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8a58));
        // 99 0107
        gbc.setState(0x5306, 0x10f3, 0xabe0, 0xb304, 0x5a3c, 0xab1d, 0x0, 0x0);
        gbc.writeMem(0x5306, { 0x99 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x10f3, gbc.sp());
        EXPECT(0x5307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0109
        gbc.setState(0x534e, 0x78cd, 0x8120, 0xfb1d, 0xb55b, 0x7973, 0x1, 0x0);
        gbc.writeMem(0x534e, { 0x99 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x78cd, gbc.sp());
        EXPECT(0x534f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 010B
        gbc.setState(0x135e, 0x145e, 0x8730, 0x178f, 0x1de3, 0x7297, 0x1, 0x1);
        gbc.writeMem(0x135e, { 0x99 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x145e, gbc.sp());
        EXPECT(0x135f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 010C
        gbc.setState(0xeca, 0x3b9c, 0x17c0, 0x1856, 0xda2, 0xabf9, 0x0, 0x0);
        gbc.writeMem(0xeca, { 0x99 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3b9c, gbc.sp());
        EXPECT(0xecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 010D
        gbc.setState(0xaa8a, 0xc8f4, 0xac70, 0x6d04, 0x2e52, 0x2154, 0x1, 0x0);
        gbc.writeMem(0xaa8a, { 0x99 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc8f4, gbc.sp());
        EXPECT(0xaa8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xaa8a));
        // 99 010E
        gbc.setState(0x8c2b, 0x4686, 0x85a0, 0xa5b8, 0x35a2, 0x41ac, 0x0, 0x1);
        gbc.writeMem(0x8c2b, { 0x99 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4686, gbc.sp());
        EXPECT(0x8c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8c2b));
        // 99 010F
        gbc.setState(0x4cf3, 0xc00c, 0x3960, 0x2e8f, 0xc08d, 0xabe7, 0x1, 0x1);
        gbc.writeMem(0x4cf3, { 0x99 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc00c, gbc.sp());
        EXPECT(0x4cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0110
        gbc.setState(0x8e2e, 0x3c0c, 0x64f0, 0xf0ec, 0xbce0, 0x5b32, 0x1, 0x0);
        gbc.writeMem(0x8e2e, { 0x99 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3c0c, gbc.sp());
        EXPECT(0x8e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8e2e));
        // 99 0111
        gbc.setState(0x7394, 0x1fd0, 0x94f0, 0xcb86, 0x560f, 0x21df, 0x0, 0x0);
        gbc.writeMem(0x7394, { 0x99 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1fd0, gbc.sp());
        EXPECT(0x7395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0113
        gbc.setState(0x3ee5, 0xdcb9, 0x7f30, 0x6f39, 0x26f7, 0x3baa, 0x0, 0x1);
        gbc.writeMem(0x3ee5, { 0x99 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdcb9, gbc.sp());
        EXPECT(0x3ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0114
        gbc.setState(0x8c12, 0x764e, 0x920, 0xb2c1, 0x155e, 0xb87d, 0x0, 0x0);
        gbc.writeMem(0x8c12, { 0x99 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x764e, gbc.sp());
        EXPECT(0x8c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8c12));
        // 99 0115
        gbc.setState(0x3d36, 0x60e1, 0x49b0, 0x67c7, 0x6e77, 0x1e17, 0x0, 0x0);
        gbc.writeMem(0x3d36, { 0x99 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x60e1, gbc.sp());
        EXPECT(0x3d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0116
        gbc.setState(0x7187, 0x6db3, 0xc5a0, 0xbb7a, 0x6790, 0xc670, 0x1, 0x1);
        gbc.writeMem(0x7187, { 0x99 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6db3, gbc.sp());
        EXPECT(0x7188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0117
        gbc.setState(0xc98f, 0xc9ad, 0x2b00, 0x599a, 0x2a64, 0x9677, 0x0, 0x1);
        gbc.writeMem(0xc98f, { 0x99 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc9ad, gbc.sp());
        EXPECT(0xc990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc98f));
        // 99 0118
        gbc.setState(0x9c46, 0xc1c4, 0x1760, 0x37ac, 0x889a, 0xec5, 0x1, 0x0);
        gbc.writeMem(0x9c46, { 0x99 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc1c4, gbc.sp());
        EXPECT(0x9c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9c46));
        // 99 0119
        gbc.setState(0x2122, 0xbdfc, 0x470, 0xfd75, 0xd073, 0xd9a3, 0x1, 0x1);
        gbc.writeMem(0x2122, { 0x99 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbdfc, gbc.sp());
        EXPECT(0x2123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 011A
        gbc.setState(0xb28a, 0x890c, 0x5080, 0x42f7, 0x548e, 0x5e04, 0x0, 0x1);
        gbc.writeMem(0xb28a, { 0x99 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x890c, gbc.sp());
        EXPECT(0xb28b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb28a));
        // 99 011B
        gbc.setState(0xc6db, 0xf5e4, 0xf460, 0x5ee8, 0xe61e, 0x9c8f, 0x0, 0x1);
        gbc.writeMem(0xc6db, { 0x99 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf5e4, gbc.sp());
        EXPECT(0xc6dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc6db));
        // 99 011C
        gbc.setState(0xb4d1, 0x56c7, 0xd80, 0x5a1f, 0x3dbf, 0x4306, 0x1, 0x1);
        gbc.writeMem(0xb4d1, { 0x99 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x56c7, gbc.sp());
        EXPECT(0xb4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb4d1));
        // 99 011D
        gbc.setState(0x7645, 0xeef9, 0x1d20, 0x5314, 0xf5c6, 0x2229, 0x1, 0x0);
        gbc.writeMem(0x7645, { 0x99 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xeef9, gbc.sp());
        EXPECT(0x7646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 011E
        gbc.setState(0x966e, 0x481f, 0x8fb0, 0x8729, 0x3c59, 0xca13, 0x0, 0x0);
        gbc.writeMem(0x966e, { 0x99 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x481f, gbc.sp());
        EXPECT(0x966f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x966e));
        // 99 0120
        gbc.setState(0xe66b, 0x677e, 0xe300, 0xa143, 0x4240, 0x967e, 0x1, 0x1);
        gbc.writeMem(0xe66b, { 0x99 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x677e, gbc.sp());
        EXPECT(0xe66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe66b));
        // 99 0121
        gbc.setState(0xa317, 0x2d84, 0xd150, 0xa823, 0xe025, 0x68c7, 0x0, 0x1);
        gbc.writeMem(0xa317, { 0x99 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2d84, gbc.sp());
        EXPECT(0xa318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa317));
        // 99 0122
        gbc.setState(0xaa64, 0x130b, 0xff90, 0xa3c6, 0xd11d, 0xe3a9, 0x1, 0x0);
        gbc.writeMem(0xaa64, { 0x99 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x130b, gbc.sp());
        EXPECT(0xaa65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xaa64));
        // 99 0123
        gbc.setState(0xb34a, 0x8182, 0x3b0, 0x207, 0x4d11, 0x8645, 0x0, 0x0);
        gbc.writeMem(0xb34a, { 0x99 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8182, gbc.sp());
        EXPECT(0xb34b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb34a));
        // 99 0124
        gbc.setState(0xc524, 0x8c3a, 0xf1d0, 0xfa64, 0x7418, 0xdb49, 0x0, 0x0);
        gbc.writeMem(0xc524, { 0x99 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8c3a, gbc.sp());
        EXPECT(0xc525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc524));
        // 99 0125
        gbc.setState(0xb7e0, 0x9364, 0x910, 0x419a, 0x8fb4, 0x12c6, 0x1, 0x0);
        gbc.writeMem(0xb7e0, { 0x99 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9364, gbc.sp());
        EXPECT(0xb7e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb7e0));
        // 99 0126
        gbc.setState(0x7a81, 0x36c5, 0x6750, 0xa05b, 0xc86d, 0xcafa, 0x1, 0x1);
        gbc.writeMem(0x7a81, { 0x99 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x36c5, gbc.sp());
        EXPECT(0x7a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0127
        gbc.setState(0x62d9, 0xc6ce, 0x89f0, 0x28a1, 0xdcdf, 0xa358, 0x1, 0x0);
        gbc.writeMem(0x62d9, { 0x99 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc6ce, gbc.sp());
        EXPECT(0x62da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0128
        gbc.setState(0xb7e6, 0x45c3, 0x92d0, 0x8143, 0xedd9, 0x4cdf, 0x0, 0x1);
        gbc.writeMem(0xb7e6, { 0x99 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x45c3, gbc.sp());
        EXPECT(0xb7e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb7e6));
        // 99 0129
        gbc.setState(0x95f1, 0x483f, 0xe950, 0x6ca1, 0xe085, 0x11a8, 0x0, 0x0);
        gbc.writeMem(0x95f1, { 0x99 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x483f, gbc.sp());
        EXPECT(0x95f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x95f1));
        // 99 012A
        gbc.setState(0xa6c5, 0xe8a4, 0x21e0, 0x967b, 0x2629, 0x3c19, 0x0, 0x1);
        gbc.writeMem(0xa6c5, { 0x99 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe8a4, gbc.sp());
        EXPECT(0xa6c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa6c5));
        // 99 012B
        gbc.setState(0xc29f, 0xb3c5, 0x90d0, 0xe4f8, 0x33e3, 0x738, 0x1, 0x1);
        gbc.writeMem(0xc29f, { 0x99 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb3c5, gbc.sp());
        EXPECT(0xc2a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc29f));
        // 99 012C
        gbc.setState(0x8c3b, 0xedca, 0x920, 0x96a7, 0xa302, 0xefa2, 0x0, 0x1);
        gbc.writeMem(0x8c3b, { 0x99 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xedca, gbc.sp());
        EXPECT(0x8c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8c3b));
        // 99 012D
        gbc.setState(0xa31e, 0x6ca6, 0xdfd0, 0x5181, 0xebd5, 0x627, 0x0, 0x1);
        gbc.writeMem(0xa31e, { 0x99 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6ca6, gbc.sp());
        EXPECT(0xa31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa31e));
        // 99 012E
        gbc.setState(0xdf2, 0x34a7, 0xcc40, 0xa14c, 0x1777, 0xf579, 0x0, 0x0);
        gbc.writeMem(0xdf2, { 0x99 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x34a7, gbc.sp());
        EXPECT(0xdf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 012F
        gbc.setState(0xc2af, 0x7ad2, 0x1290, 0xf9e3, 0xc669, 0x78ab, 0x1, 0x0);
        gbc.writeMem(0xc2af, { 0x99 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7ad2, gbc.sp());
        EXPECT(0xc2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc2af));
        // 99 0130
        gbc.setState(0x1212, 0xeaa0, 0xc390, 0xa9ae, 0xa4f1, 0x1fd6, 0x0, 0x1);
        gbc.writeMem(0x1212, { 0x99 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xeaa0, gbc.sp());
        EXPECT(0x1213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0131
        gbc.setState(0x5094, 0x6a81, 0x2710, 0x27c5, 0xfd1, 0x7aa, 0x1, 0x1);
        gbc.writeMem(0x5094, { 0x99 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6a81, gbc.sp());
        EXPECT(0x5095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0132
        gbc.setState(0x98e3, 0x5254, 0x8560, 0x8ee7, 0x29c0, 0x4a07, 0x1, 0x1);
        gbc.writeMem(0x98e3, { 0x99 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5254, gbc.sp());
        EXPECT(0x98e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x98e3));
        // 99 0133
        gbc.setState(0x27a8, 0xf438, 0xba10, 0xc95e, 0x7a51, 0x588c, 0x1, 0x0);
        gbc.writeMem(0x27a8, { 0x99 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf438, gbc.sp());
        EXPECT(0x27a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0134
        gbc.setState(0x49d, 0xf03c, 0x1c40, 0x8812, 0xc136, 0xe546, 0x0, 0x1);
        gbc.writeMem(0x49d, { 0x99 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf03c, gbc.sp());
        EXPECT(0x49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0135
        gbc.setState(0xc1ec, 0x8d0d, 0x7cf0, 0x4760, 0x904c, 0x5c97, 0x0, 0x1);
        gbc.writeMem(0xc1ec, { 0x99 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8d0d, gbc.sp());
        EXPECT(0xc1ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc1ec));
        // 99 0136
        gbc.setState(0x419b, 0xaef2, 0x7df0, 0x2f27, 0x9a0f, 0xcc7c, 0x0, 0x1);
        gbc.writeMem(0x419b, { 0x99 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xaef2, gbc.sp());
        EXPECT(0x419c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0137
        gbc.setState(0x303f, 0xd88a, 0xe1f0, 0x9343, 0xd47a, 0x7dcc, 0x1, 0x0);
        gbc.writeMem(0x303f, { 0x99 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd88a, gbc.sp());
        EXPECT(0x3040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0138
        gbc.setState(0xd4d6, 0xbb1f, 0x8120, 0xa7db, 0xd72c, 0xb5d0, 0x1, 0x0);
        gbc.writeMem(0xd4d6, { 0x99 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbb1f, gbc.sp());
        EXPECT(0xd4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd4d6));
        // 99 0139
        gbc.setState(0xca75, 0x55a1, 0x2ab0, 0xead2, 0xf867, 0x7837, 0x0, 0x0);
        gbc.writeMem(0xca75, { 0x99 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x55a1, gbc.sp());
        EXPECT(0xca76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xca75));
        // 99 013A
        gbc.setState(0xdf0c, 0xc2af, 0x5160, 0x8690, 0xd6ba, 0x1d6f, 0x0, 0x1);
        gbc.writeMem(0xdf0c, { 0x99 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc2af, gbc.sp());
        EXPECT(0xdf0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdf0c));
        // 99 013B
        gbc.setState(0xd4a8, 0x7faf, 0x31e0, 0x6f52, 0x474, 0x51b7, 0x0, 0x0);
        gbc.writeMem(0xd4a8, { 0x99 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7faf, gbc.sp());
        EXPECT(0xd4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd4a8));
        // 99 013C
        gbc.setState(0xa1bc, 0x276e, 0xa820, 0xa189, 0x2e1e, 0x6ee1, 0x0, 0x0);
        gbc.writeMem(0xa1bc, { 0x99 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x276e, gbc.sp());
        EXPECT(0xa1bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa1bc));
        // 99 013D
        gbc.setState(0x9c72, 0x7df4, 0x7800, 0x29ea, 0xb09c, 0x1b35, 0x1, 0x0);
        gbc.writeMem(0x9c72, { 0x99 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7df4, gbc.sp());
        EXPECT(0x9c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9c72));
        // 99 013E
        gbc.setState(0x8adb, 0xc283, 0x2470, 0x1eb7, 0x34dd, 0xcbc8, 0x0, 0x1);
        gbc.writeMem(0x8adb, { 0x99 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc283, gbc.sp());
        EXPECT(0x8adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8adb));
        // 99 013F
        gbc.setState(0x7a39, 0x6328, 0x2de0, 0x5055, 0xf4f, 0x8cf2, 0x0, 0x0);
        gbc.writeMem(0x7a39, { 0x99 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6328, gbc.sp());
        EXPECT(0x7a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0140
        gbc.setState(0x3368, 0x904a, 0x40b0, 0xc3f0, 0xa2a2, 0xb704, 0x0, 0x1);
        gbc.writeMem(0x3368, { 0x99 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x904a, gbc.sp());
        EXPECT(0x3369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0141
        gbc.setState(0xcb48, 0x1a18, 0x9e30, 0xcc6e, 0x1fd9, 0x8790, 0x0, 0x1);
        gbc.writeMem(0xcb48, { 0x99 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1a18, gbc.sp());
        EXPECT(0xcb49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcb48));
        // 99 0142
        gbc.setState(0x16e9, 0x4011, 0x26b0, 0xa53e, 0x462, 0xfa65, 0x1, 0x0);
        gbc.writeMem(0x16e9, { 0x99 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4011, gbc.sp());
        EXPECT(0x16ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0143
        gbc.setState(0xdbde, 0xf5d3, 0xa170, 0xa340, 0xc0f3, 0x2dd2, 0x1, 0x1);
        gbc.writeMem(0xdbde, { 0x99 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf5d3, gbc.sp());
        EXPECT(0xdbdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdbde));
        // 99 0144
        gbc.setState(0x4356, 0x4c21, 0x47e0, 0xdd4a, 0x954a, 0x95b2, 0x1, 0x1);
        gbc.writeMem(0x4356, { 0x99 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4c21, gbc.sp());
        EXPECT(0x4357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0145
        gbc.setState(0x20c1, 0xb382, 0x1530, 0x8619, 0x4e0, 0x91da, 0x1, 0x0);
        gbc.writeMem(0x20c1, { 0x99 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb382, gbc.sp());
        EXPECT(0x20c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0146
        gbc.setState(0x2d67, 0x85ec, 0xc3f0, 0x5f16, 0x6a3f, 0x4b5c, 0x1, 0x1);
        gbc.writeMem(0x2d67, { 0x99 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x85ec, gbc.sp());
        EXPECT(0x2d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0148
        gbc.setState(0x854a, 0xc103, 0xdca0, 0x65e6, 0xd18b, 0x561b, 0x1, 0x0);
        gbc.writeMem(0x854a, { 0x99 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc103, gbc.sp());
        EXPECT(0x854b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x854a));
        // 99 0149
        gbc.setState(0x168a, 0x419d, 0x7a80, 0x727f, 0x1497, 0xa2e6, 0x1, 0x1);
        gbc.writeMem(0x168a, { 0x99 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x419d, gbc.sp());
        EXPECT(0x168b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 014A
        gbc.setState(0x4ec2, 0xa89e, 0x7120, 0xd4e0, 0x291b, 0x8771, 0x0, 0x1);
        gbc.writeMem(0x4ec2, { 0x99 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa89e, gbc.sp());
        EXPECT(0x4ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 014B
        gbc.setState(0xc07f, 0xd3c6, 0xa610, 0x980b, 0xa605, 0x836c, 0x1, 0x0);
        gbc.writeMem(0xc07f, { 0x99 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd3c6, gbc.sp());
        EXPECT(0xc080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc07f));
        // 99 014C
        gbc.setState(0xcdc4, 0x1c7d, 0x1880, 0x86b, 0x83f6, 0x6aa8, 0x0, 0x0);
        gbc.writeMem(0xcdc4, { 0x99 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1c7d, gbc.sp());
        EXPECT(0xcdc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcdc4));
        // 99 014D
        gbc.setState(0xd90b, 0x4bc0, 0x2c00, 0x9bb9, 0xfe41, 0x1a93, 0x1, 0x1);
        gbc.writeMem(0xd90b, { 0x99 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4bc0, gbc.sp());
        EXPECT(0xd90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd90b));
        // 99 014E
        gbc.setState(0x4c75, 0xed97, 0x5450, 0xbf0, 0x52c9, 0x7a76, 0x0, 0x1);
        gbc.writeMem(0x4c75, { 0x99 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xed97, gbc.sp());
        EXPECT(0x4c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 014F
        gbc.setState(0x5a51, 0x8277, 0x9500, 0x4559, 0xc86, 0xc8ac, 0x1, 0x1);
        gbc.writeMem(0x5a51, { 0x99 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8277, gbc.sp());
        EXPECT(0x5a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0150
        gbc.setState(0xc087, 0x6c47, 0x33f0, 0x5348, 0x8651, 0xf5a7, 0x0, 0x1);
        gbc.writeMem(0xc087, { 0x99 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6c47, gbc.sp());
        EXPECT(0xc088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc087));
        // 99 0151
        gbc.setState(0x495d, 0x4c3e, 0xbd70, 0x6aa, 0x4992, 0x9fd7, 0x1, 0x1);
        gbc.writeMem(0x495d, { 0x99 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4c3e, gbc.sp());
        EXPECT(0x495e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0152
        gbc.setState(0x6c87, 0x7716, 0x5330, 0xce17, 0x21b5, 0xe74, 0x1, 0x1);
        gbc.writeMem(0x6c87, { 0x99 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7716, gbc.sp());
        EXPECT(0x6c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0153
        gbc.setState(0x5da8, 0x2374, 0x1fc0, 0x5939, 0x6026, 0xe006, 0x1, 0x0);
        gbc.writeMem(0x5da8, { 0x99 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2374, gbc.sp());
        EXPECT(0x5da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0154
        gbc.setState(0x64, 0xd77c, 0xcf60, 0x7b4b, 0x8d12, 0x5a62, 0x1, 0x1);
        gbc.writeMem(0x64, { 0x99 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd77c, gbc.sp());
        EXPECT(0x65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0155
        gbc.setState(0x70c0, 0xfa9d, 0x8900, 0x7d27, 0x43a8, 0xa84, 0x1, 0x0);
        gbc.writeMem(0x70c0, { 0x99 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfa9d, gbc.sp());
        EXPECT(0x70c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0156
        gbc.setState(0xc1d5, 0x325f, 0x2270, 0x572d, 0xcd9f, 0xeaf0, 0x1, 0x1);
        gbc.writeMem(0xc1d5, { 0x99 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x325f, gbc.sp());
        EXPECT(0xc1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc1d5));
        // 99 0157
        gbc.setState(0x2bef, 0xead5, 0x9140, 0xcf, 0x85ab, 0x698d, 0x0, 0x1);
        gbc.writeMem(0x2bef, { 0x99 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xead5, gbc.sp());
        EXPECT(0x2bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0158
        gbc.setState(0x2478, 0xad0f, 0xb490, 0x7abf, 0x6dda, 0x33a7, 0x1, 0x0);
        gbc.writeMem(0x2478, { 0x99 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xad0f, gbc.sp());
        EXPECT(0x2479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0159
        gbc.setState(0x857c, 0xbf78, 0xd5e0, 0xaaba, 0x61c, 0xd9ff, 0x1, 0x0);
        gbc.writeMem(0x857c, { 0x99 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbf78, gbc.sp());
        EXPECT(0x857d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x857c));
        // 99 015A
        gbc.setState(0x2a93, 0xabf0, 0x60, 0xf651, 0x3c10, 0x1bc, 0x0, 0x0);
        gbc.writeMem(0x2a93, { 0x99 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xabf0, gbc.sp());
        EXPECT(0x2a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 015C
        gbc.setState(0x2e87, 0x2e9d, 0x11c0, 0xe644, 0x25af, 0x9f69, 0x1, 0x0);
        gbc.writeMem(0x2e87, { 0x99 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2e9d, gbc.sp());
        EXPECT(0x2e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 015E
        gbc.setState(0xe852, 0x9283, 0xa500, 0x3685, 0x27a6, 0x64c4, 0x1, 0x1);
        gbc.writeMem(0xe852, { 0x99 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9283, gbc.sp());
        EXPECT(0xe853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe852));
        // 99 015F
        gbc.setState(0xd979, 0x9e61, 0x4e90, 0x1cef, 0x3377, 0x21db, 0x0, 0x1);
        gbc.writeMem(0xd979, { 0x99 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9e61, gbc.sp());
        EXPECT(0xd97a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd979));
        // 99 0160
        gbc.setState(0xd311, 0x4a93, 0xb0a0, 0xdd4e, 0x5bc9, 0x7826, 0x1, 0x0);
        gbc.writeMem(0xd311, { 0x99 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4a93, gbc.sp());
        EXPECT(0xd312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd311));
        // 99 0161
        gbc.setState(0xb6c7, 0x6d85, 0x4580, 0x734e, 0x8a43, 0x79b8, 0x0, 0x0);
        gbc.writeMem(0xb6c7, { 0x99 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6d85, gbc.sp());
        EXPECT(0xb6c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb6c7));
        // 99 0162
        gbc.setState(0xb042, 0xb775, 0x5860, 0xb859, 0xb560, 0xe3fc, 0x1, 0x1);
        gbc.writeMem(0xb042, { 0x99 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb775, gbc.sp());
        EXPECT(0xb043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb042));
        // 99 0163
        gbc.setState(0xbfbc, 0x5f58, 0x68c0, 0x3350, 0xe3ab, 0x5490, 0x1, 0x1);
        gbc.writeMem(0xbfbc, { 0x99 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5f58, gbc.sp());
        EXPECT(0xbfbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbfbc));
        // 99 0164
        gbc.setState(0x531, 0xd25c, 0x73e0, 0x1f22, 0x7fbe, 0x9dcb, 0x0, 0x0);
        gbc.writeMem(0x531, { 0x99 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd25c, gbc.sp());
        EXPECT(0x532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0165
        gbc.setState(0xb55, 0xbca8, 0x79d0, 0x5dbf, 0x33e0, 0xbe9a, 0x1, 0x1);
        gbc.writeMem(0xb55, { 0x99 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbca8, gbc.sp());
        EXPECT(0xb56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0166
        gbc.setState(0x8f85, 0x3ead, 0x1150, 0x1be9, 0x3e89, 0x508a, 0x0, 0x0);
        gbc.writeMem(0x8f85, { 0x99 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3ead, gbc.sp());
        EXPECT(0x8f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8f85));
        // 99 0167
        gbc.setState(0x74d2, 0xd63d, 0x39a0, 0x7bff, 0xa0b4, 0x4d92, 0x0, 0x1);
        gbc.writeMem(0x74d2, { 0x99 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd63d, gbc.sp());
        EXPECT(0x74d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0168
        gbc.setState(0x38b8, 0xc7e2, 0xdc60, 0xaeac, 0xde79, 0xfcd, 0x0, 0x0);
        gbc.writeMem(0x38b8, { 0x99 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc7e2, gbc.sp());
        EXPECT(0x38b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0169
        gbc.setState(0xc679, 0xef4a, 0x77f0, 0x3535, 0x82d, 0x8243, 0x1, 0x0);
        gbc.writeMem(0xc679, { 0x99 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xef4a, gbc.sp());
        EXPECT(0xc67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc679));
        // 99 016A
        gbc.setState(0xdf99, 0xba26, 0x32c0, 0xc2b2, 0x4191, 0xe10, 0x1, 0x0);
        gbc.writeMem(0xdf99, { 0x99 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xba26, gbc.sp());
        EXPECT(0xdf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdf99));
        // 99 016B
        gbc.setState(0xb27d, 0x5618, 0x7690, 0x4ab0, 0xc362, 0x4b03, 0x0, 0x0);
        gbc.writeMem(0xb27d, { 0x99 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5618, gbc.sp());
        EXPECT(0xb27e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb27d));
        // 99 016C
        gbc.setState(0x8279, 0x479, 0x8170, 0x1dc7, 0xd2eb, 0xb49, 0x1, 0x1);
        gbc.writeMem(0x8279, { 0x99 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x479, gbc.sp());
        EXPECT(0x827a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8279));
        // 99 016E
        gbc.setState(0xaf76, 0x346b, 0x4870, 0xf6be, 0x2769, 0x16ed, 0x1, 0x1);
        gbc.writeMem(0xaf76, { 0x99 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x346b, gbc.sp());
        EXPECT(0xaf77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xaf76));
        // 99 016F
        gbc.setState(0x678c, 0x6d08, 0x3a40, 0xea, 0x2a56, 0x1cce, 0x1, 0x1);
        gbc.writeMem(0x678c, { 0x99 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6d08, gbc.sp());
        EXPECT(0x678d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0170
        gbc.setState(0xe390, 0xa7b5, 0x33f0, 0x604f, 0xfa75, 0xbb7d, 0x0, 0x0);
        gbc.writeMem(0xe390, { 0x99 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa7b5, gbc.sp());
        EXPECT(0xe391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe390));
        // 99 0171
        gbc.setState(0xe2c1, 0xc251, 0x6cf0, 0xe56f, 0xc6e4, 0x3126, 0x1, 0x1);
        gbc.writeMem(0xe2c1, { 0x99 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc251, gbc.sp());
        EXPECT(0xe2c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe2c1));
        // 99 0172
        gbc.setState(0xad91, 0x2d80, 0x87b0, 0xe66d, 0xee1a, 0xb335, 0x1, 0x1);
        gbc.writeMem(0xad91, { 0x99 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2d80, gbc.sp());
        EXPECT(0xad92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xad91));
        // 99 0173
        gbc.setState(0x8c38, 0x6bf, 0xd530, 0x3c91, 0x7017, 0x5e6b, 0x0, 0x0);
        gbc.writeMem(0x8c38, { 0x99 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6bf, gbc.sp());
        EXPECT(0x8c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8c38));
        // 99 0174
        gbc.setState(0xe44d, 0xefce, 0x1bd0, 0x3ec0, 0x896b, 0x2210, 0x0, 0x0);
        gbc.writeMem(0xe44d, { 0x99 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xefce, gbc.sp());
        EXPECT(0xe44e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe44d));
        // 99 0176
        gbc.setState(0x342c, 0xbdb7, 0x9de0, 0x2302, 0x13a8, 0x9745, 0x1, 0x0);
        gbc.writeMem(0x342c, { 0x99 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbdb7, gbc.sp());
        EXPECT(0x342d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0177
        gbc.setState(0x554b, 0x840a, 0x4ea0, 0x184e, 0xf779, 0xfee6, 0x0, 0x0);
        gbc.writeMem(0x554b, { 0x99 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x840a, gbc.sp());
        EXPECT(0x554c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0178
        gbc.setState(0x59e7, 0xa395, 0x71c0, 0x21cf, 0x4566, 0xf098, 0x0, 0x1);
        gbc.writeMem(0x59e7, { 0x99 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa395, gbc.sp());
        EXPECT(0x59e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0179
        gbc.setState(0xa462, 0xda80, 0x73d0, 0x240f, 0x570d, 0x21f2, 0x1, 0x1);
        gbc.writeMem(0xa462, { 0x99 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xda80, gbc.sp());
        EXPECT(0xa463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa462));
        // 99 017A
        gbc.setState(0xa719, 0xdf6f, 0xb800, 0x47e5, 0xc66c, 0xc7be, 0x0, 0x1);
        gbc.writeMem(0xa719, { 0x99 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdf6f, gbc.sp());
        EXPECT(0xa71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa719));
        // 99 017B
        gbc.setState(0x853, 0xd5, 0x6cf0, 0x1754, 0x853c, 0x38d2, 0x0, 0x1);
        gbc.writeMem(0x853, { 0x99 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd5, gbc.sp());
        EXPECT(0x854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 017C
        gbc.setState(0x793a, 0xd296, 0xb5f0, 0xf854, 0xb017, 0xf170, 0x0, 0x0);
        gbc.writeMem(0x793a, { 0x99 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd296, gbc.sp());
        EXPECT(0x793b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 017D
        gbc.setState(0x9c8b, 0xde7a, 0xaf20, 0x97d8, 0x55a7, 0xa941, 0x1, 0x1);
        gbc.writeMem(0x9c8b, { 0x99 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xde7a, gbc.sp());
        EXPECT(0x9c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9c8b));
        // 99 017E
        gbc.setState(0x8eb2, 0xb167, 0x7eb0, 0xbd53, 0x2f39, 0x7293, 0x0, 0x0);
        gbc.writeMem(0x8eb2, { 0x99 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb167, gbc.sp());
        EXPECT(0x8eb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8eb2));
        // 99 017F
        gbc.setState(0x635, 0xcfb3, 0x82f0, 0xe2d2, 0x18a0, 0x6d15, 0x1, 0x0);
        gbc.writeMem(0x635, { 0x99 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcfb3, gbc.sp());
        EXPECT(0x636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0180
        gbc.setState(0xc514, 0x7907, 0xc4e0, 0xe4e, 0x8d6d, 0xf52e, 0x1, 0x1);
        gbc.writeMem(0xc514, { 0x99 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7907, gbc.sp());
        EXPECT(0xc515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc514));
        // 99 0181
        gbc.setState(0xcfe5, 0x3036, 0x7470, 0x8927, 0x587f, 0x48b0, 0x1, 0x0);
        gbc.writeMem(0xcfe5, { 0x99 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3036, gbc.sp());
        EXPECT(0xcfe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcfe5));
        // 99 0182
        gbc.setState(0x8b1, 0x83fb, 0xeae0, 0x339b, 0x7dec, 0x8711, 0x1, 0x1);
        gbc.writeMem(0x8b1, { 0x99 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x83fb, gbc.sp());
        EXPECT(0x8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0183
        gbc.setState(0xba35, 0x7b8a, 0x2420, 0xfd02, 0x430b, 0xd26f, 0x1, 0x1);
        gbc.writeMem(0xba35, { 0x99 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7b8a, gbc.sp());
        EXPECT(0xba36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xba35));
        // 99 0184
        gbc.setState(0xdbb, 0x42a, 0xf280, 0xd330, 0x88cb, 0x213e, 0x1, 0x1);
        gbc.writeMem(0xdbb, { 0x99 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x42a, gbc.sp());
        EXPECT(0xdbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0185
        gbc.setState(0x39e5, 0x39de, 0xa970, 0xf6c7, 0x8a1f, 0x491c, 0x1, 0x0);
        gbc.writeMem(0x39e5, { 0x99 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x39de, gbc.sp());
        EXPECT(0x39e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0186
        gbc.setState(0x57cc, 0xe6ef, 0x1d0, 0x5783, 0x380f, 0x98f9, 0x1, 0x0);
        gbc.writeMem(0x57cc, { 0x99 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe6ef, gbc.sp());
        EXPECT(0x57cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0187
        gbc.setState(0xcdc2, 0x6bf9, 0x8fc0, 0x9215, 0x9d55, 0x44d7, 0x0, 0x1);
        gbc.writeMem(0xcdc2, { 0x99 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6bf9, gbc.sp());
        EXPECT(0xcdc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcdc2));
        // 99 0188
        gbc.setState(0x8007, 0x4516, 0xd580, 0xf50c, 0x10db, 0x284a, 0x1, 0x0);
        gbc.writeMem(0x8007, { 0x99 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4516, gbc.sp());
        EXPECT(0x8008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8007));
        // 99 0189
        gbc.setState(0x601c, 0x1e48, 0xedb0, 0xe426, 0xed05, 0xaa0f, 0x0, 0x0);
        gbc.writeMem(0x601c, { 0x99 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1e48, gbc.sp());
        EXPECT(0x601d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 018A
        gbc.setState(0x16c, 0xaf3e, 0xfd90, 0xb94b, 0xa5b7, 0x5993, 0x0, 0x0);
        gbc.writeMem(0x16c, { 0x99 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xaf3e, gbc.sp());
        EXPECT(0x16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 018C
        gbc.setState(0x3b5e, 0xebe8, 0x3aa0, 0x52df, 0x3d4f, 0xd50b, 0x0, 0x0);
        gbc.writeMem(0x3b5e, { 0x99 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xebe8, gbc.sp());
        EXPECT(0x3b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 018D
        gbc.setState(0xb3db, 0xe295, 0x1280, 0xe877, 0x5021, 0x3ef7, 0x0, 0x1);
        gbc.writeMem(0xb3db, { 0x99 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe295, gbc.sp());
        EXPECT(0xb3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb3db));
        // 99 018E
        gbc.setState(0x23f0, 0xf5d4, 0x1f40, 0xae3d, 0xc08c, 0x344, 0x1, 0x0);
        gbc.writeMem(0x23f0, { 0x99 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf5d4, gbc.sp());
        EXPECT(0x23f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 018F
        gbc.setState(0xc7af, 0xeb08, 0x1220, 0x5744, 0xd8e9, 0x40c1, 0x0, 0x0);
        gbc.writeMem(0xc7af, { 0x99 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xeb08, gbc.sp());
        EXPECT(0xc7b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc7af));
        // 99 0190
        gbc.setState(0xd8b3, 0xed25, 0xa4e0, 0x788a, 0x62c, 0x1242, 0x0, 0x0);
        gbc.writeMem(0xd8b3, { 0x99 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xed25, gbc.sp());
        EXPECT(0xd8b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd8b3));
        // 99 0191
        gbc.setState(0x5de1, 0xb2e2, 0xbde0, 0x89a1, 0x6988, 0x3db4, 0x0, 0x1);
        gbc.writeMem(0x5de1, { 0x99 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb2e2, gbc.sp());
        EXPECT(0x5de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0192
        gbc.setState(0xacbe, 0xabd1, 0xe330, 0xe3e6, 0x6edc, 0xb902, 0x1, 0x0);
        gbc.writeMem(0xacbe, { 0x99 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xabd1, gbc.sp());
        EXPECT(0xacbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xacbe));
        // 99 0193
        gbc.setState(0xb472, 0xba99, 0x89d0, 0x7957, 0x229d, 0x96a1, 0x1, 0x1);
        gbc.writeMem(0xb472, { 0x99 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xba99, gbc.sp());
        EXPECT(0xb473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb472));
        // 99 0194
        gbc.setState(0x4759, 0x5a2d, 0xc080, 0xec1c, 0xe76e, 0x5a92, 0x1, 0x0);
        gbc.writeMem(0x4759, { 0x99 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5a2d, gbc.sp());
        EXPECT(0x475a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0195
        gbc.setState(0x1c01, 0xa8e5, 0xa440, 0xfd4b, 0x500d, 0xc7f1, 0x0, 0x0);
        gbc.writeMem(0x1c01, { 0x99 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa8e5, gbc.sp());
        EXPECT(0x1c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0196
        gbc.setState(0x2b29, 0xd356, 0x710, 0x4ab1, 0x2c6a, 0xd86e, 0x1, 0x0);
        gbc.writeMem(0x2b29, { 0x99 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd356, gbc.sp());
        EXPECT(0x2b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0197
        gbc.setState(0xa1f8, 0x1e1c, 0x41f0, 0x3396, 0xe42a, 0x3ece, 0x1, 0x0);
        gbc.writeMem(0xa1f8, { 0x99 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1e1c, gbc.sp());
        EXPECT(0xa1f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa1f8));
        // 99 0198
        gbc.setState(0x41cb, 0x4553, 0x42b0, 0x4df2, 0xb966, 0x6fb6, 0x1, 0x0);
        gbc.writeMem(0x41cb, { 0x99 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4553, gbc.sp());
        EXPECT(0x41cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0199
        gbc.setState(0x3b2f, 0xc276, 0xcdb0, 0x63a2, 0xa349, 0xddc5, 0x0, 0x1);
        gbc.writeMem(0x3b2f, { 0x99 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc276, gbc.sp());
        EXPECT(0x3b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 019A
        gbc.setState(0x778f, 0xb3aa, 0x34d0, 0x1570, 0x4c4e, 0xb9, 0x0, 0x0);
        gbc.writeMem(0x778f, { 0x99 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb3aa, gbc.sp());
        EXPECT(0x7790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 019B
        gbc.setState(0xe371, 0xe34c, 0x7080, 0x96b7, 0x8074, 0x37, 0x1, 0x1);
        gbc.writeMem(0xe371, { 0x99 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe34c, gbc.sp());
        EXPECT(0xe372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe371));
        // 99 019C
        gbc.setState(0x35d4, 0x138c, 0x84a0, 0xa76b, 0xdfba, 0xb22b, 0x0, 0x1);
        gbc.writeMem(0x35d4, { 0x99 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x138c, gbc.sp());
        EXPECT(0x35d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 019D
        gbc.setState(0xce43, 0xbdc, 0xa1b0, 0xf4cc, 0x8588, 0xc71, 0x1, 0x0);
        gbc.writeMem(0xce43, { 0x99 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbdc, gbc.sp());
        EXPECT(0xce44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xce43));
        // 99 019E
        gbc.setState(0x4a17, 0xcf53, 0x80a0, 0x80fa, 0x3195, 0x7753, 0x0, 0x0);
        gbc.writeMem(0x4a17, { 0x99 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcf53, gbc.sp());
        EXPECT(0x4a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 019F
        gbc.setState(0xd71, 0xc8a0, 0xea0, 0x1a43, 0x1338, 0xcd70, 0x0, 0x1);
        gbc.writeMem(0xd71, { 0x99 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc8a0, gbc.sp());
        EXPECT(0xd72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01A0
        gbc.setState(0xa242, 0x196f, 0xd5d0, 0xd414, 0x162e, 0x5770, 0x0, 0x0);
        gbc.writeMem(0xa242, { 0x99 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x196f, gbc.sp());
        EXPECT(0xa243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa242));
        // 99 01A1
        gbc.setState(0x4870, 0xee4f, 0x3140, 0x4081, 0x3bb9, 0x9abc, 0x1, 0x1);
        gbc.writeMem(0x4870, { 0x99 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xee4f, gbc.sp());
        EXPECT(0x4871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01A2
        gbc.setState(0x6488, 0xfbd, 0x17b0, 0x734d, 0xefd0, 0x5fcf, 0x1, 0x1);
        gbc.writeMem(0x6488, { 0x99 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfbd, gbc.sp());
        EXPECT(0x6489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01A3
        gbc.setState(0xdaee, 0x54b6, 0x1cb0, 0xcead, 0xa77e, 0x1081, 0x1, 0x1);
        gbc.writeMem(0xdaee, { 0x99 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x54b6, gbc.sp());
        EXPECT(0xdaef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdaee));
        // 99 01A4
        gbc.setState(0x8354, 0x852e, 0x1850, 0x1580, 0xe6db, 0x523c, 0x0, 0x1);
        gbc.writeMem(0x8354, { 0x99 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x852e, gbc.sp());
        EXPECT(0x8355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8354));
        // 99 01A5
        gbc.setState(0x56c5, 0x3ff3, 0x9da0, 0x5a42, 0x6a30, 0x7f8e, 0x0, 0x1);
        gbc.writeMem(0x56c5, { 0x99 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3ff3, gbc.sp());
        EXPECT(0x56c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01A6
        gbc.setState(0x1f8a, 0xb15f, 0x44f0, 0x3c65, 0x7fc, 0xc033, 0x0, 0x1);
        gbc.writeMem(0x1f8a, { 0x99 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb15f, gbc.sp());
        EXPECT(0x1f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01A7
        gbc.setState(0xa047, 0x9a50, 0x4340, 0xca7e, 0xfd21, 0x8dad, 0x0, 0x0);
        gbc.writeMem(0xa047, { 0x99 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9a50, gbc.sp());
        EXPECT(0xa048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa047));
        // 99 01A8
        gbc.setState(0xdbd8, 0xea81, 0x3580, 0xc3d5, 0x1d8, 0xc768, 0x0, 0x0);
        gbc.writeMem(0xdbd8, { 0x99 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xea81, gbc.sp());
        EXPECT(0xdbd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdbd8));
        // 99 01A9
        gbc.setState(0x3a8a, 0x5e3e, 0xc350, 0xe45e, 0x7e3d, 0x1b8d, 0x1, 0x0);
        gbc.writeMem(0x3a8a, { 0x99 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5e3e, gbc.sp());
        EXPECT(0x3a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01AA
        gbc.setState(0x8a87, 0x36e4, 0x9470, 0x58fa, 0x7feb, 0x93a1, 0x0, 0x0);
        gbc.writeMem(0x8a87, { 0x99 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x36e4, gbc.sp());
        EXPECT(0x8a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8a87));
        // 99 01AB
        gbc.setState(0x1569, 0xfcb7, 0x7bf0, 0x9ab3, 0xc350, 0x4e7c, 0x0, 0x1);
        gbc.writeMem(0x1569, { 0x99 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfcb7, gbc.sp());
        EXPECT(0x156a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01AC
        gbc.setState(0x18d, 0xd074, 0xd940, 0x36c9, 0x89c, 0x33fc, 0x0, 0x1);
        gbc.writeMem(0x18d, { 0x99 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd074, gbc.sp());
        EXPECT(0x18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01AD
        gbc.setState(0x9355, 0x2a72, 0x8010, 0x5bd6, 0x1687, 0x6513, 0x0, 0x0);
        gbc.writeMem(0x9355, { 0x99 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2a72, gbc.sp());
        EXPECT(0x9356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9355));
        // 99 01AE
        gbc.setState(0x334a, 0xb575, 0xdd60, 0xc46a, 0x1b3c, 0xc3fb, 0x1, 0x0);
        gbc.writeMem(0x334a, { 0x99 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb575, gbc.sp());
        EXPECT(0x334b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01AF
        gbc.setState(0x41d4, 0x4f54, 0x3b40, 0xeb0f, 0x28ea, 0x8b88, 0x1, 0x0);
        gbc.writeMem(0x41d4, { 0x99 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4f54, gbc.sp());
        EXPECT(0x41d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01B0
        gbc.setState(0x562f, 0xc8e2, 0x4b90, 0x99cb, 0x8511, 0x6b12, 0x1, 0x0);
        gbc.writeMem(0x562f, { 0x99 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc8e2, gbc.sp());
        EXPECT(0x5630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01B1
        gbc.setState(0xdafb, 0xcd03, 0xd870, 0x8867, 0xdaa5, 0x715a, 0x0, 0x1);
        gbc.writeMem(0xdafb, { 0x99 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcd03, gbc.sp());
        EXPECT(0xdafc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdafb));
        // 99 01B2
        gbc.setState(0x6528, 0x8112, 0x88d0, 0xb954, 0xaf92, 0xb1e9, 0x0, 0x0);
        gbc.writeMem(0x6528, { 0x99 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8112, gbc.sp());
        EXPECT(0x6529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01B3
        gbc.setState(0x5c7b, 0xfba3, 0xfaa0, 0xa2b6, 0xb9e9, 0xb4af, 0x1, 0x0);
        gbc.writeMem(0x5c7b, { 0x99 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfba3, gbc.sp());
        EXPECT(0x5c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01B4
        gbc.setState(0x92, 0xb360, 0x93f0, 0xb1be, 0x83be, 0x5246, 0x1, 0x0);
        gbc.writeMem(0x92, { 0x99 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb360, gbc.sp());
        EXPECT(0x93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01B5
        gbc.setState(0x8d78, 0x7b36, 0x2560, 0xb0da, 0x30f4, 0x8187, 0x1, 0x0);
        gbc.writeMem(0x8d78, { 0x99 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7b36, gbc.sp());
        EXPECT(0x8d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8d78));
        // 99 01B6
        gbc.setState(0xad24, 0x9157, 0xe1b0, 0x1202, 0x3a5, 0xd8a2, 0x0, 0x0);
        gbc.writeMem(0xad24, { 0x99 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9157, gbc.sp());
        EXPECT(0xad25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xad24));
        // 99 01B7
        gbc.setState(0x1672, 0x3ad7, 0x3d60, 0x2a6d, 0xe7d2, 0x4c19, 0x1, 0x1);
        gbc.writeMem(0x1672, { 0x99 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3ad7, gbc.sp());
        EXPECT(0x1673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01B8
        gbc.setState(0x215a, 0x2c43, 0x1380, 0xb8c3, 0x3b71, 0x8de0, 0x1, 0x1);
        gbc.writeMem(0x215a, { 0x99 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2c43, gbc.sp());
        EXPECT(0x215b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01B9
        gbc.setState(0x527a, 0xd90, 0xf0f0, 0x4eb, 0x100e, 0xaa3c, 0x0, 0x1);
        gbc.writeMem(0x527a, { 0x99 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd90, gbc.sp());
        EXPECT(0x527b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01BA
        gbc.setState(0xd108, 0x9dc5, 0x7bc0, 0x13ea, 0xd356, 0x23b1, 0x1, 0x0);
        gbc.writeMem(0xd108, { 0x99 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9dc5, gbc.sp());
        EXPECT(0xd109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd108));
        // 99 01BB
        gbc.setState(0xec27, 0x13e5, 0x7cb0, 0x9ae6, 0xd638, 0x33de, 0x0, 0x0);
        gbc.writeMem(0xec27, { 0x99 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x13e5, gbc.sp());
        EXPECT(0xec28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xec27));
        // 99 01BC
        gbc.setState(0x7445, 0xe2f7, 0xe820, 0x22, 0x23e1, 0x2a3c, 0x1, 0x0);
        gbc.writeMem(0x7445, { 0x99 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe2f7, gbc.sp());
        EXPECT(0x7446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01BD
        gbc.setState(0xb388, 0x5534, 0x4be0, 0x1189, 0xfae5, 0x3d27, 0x0, 0x0);
        gbc.writeMem(0xb388, { 0x99 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5534, gbc.sp());
        EXPECT(0xb389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb388));
        // 99 01BE
        gbc.setState(0xe250, 0x1331, 0x4630, 0x9685, 0x42fd, 0x409c, 0x1, 0x0);
        gbc.writeMem(0xe250, { 0x99 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1331, gbc.sp());
        EXPECT(0xe251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe250));
        // 99 01BF
        gbc.setState(0xdf26, 0xa259, 0x2f10, 0x93ce, 0x5014, 0xcf16, 0x1, 0x0);
        gbc.writeMem(0xdf26, { 0x99 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa259, gbc.sp());
        EXPECT(0xdf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdf26));
        // 99 01C0
        gbc.setState(0xee07, 0x19ff, 0xf650, 0xc84, 0x774d, 0x6623, 0x0, 0x1);
        gbc.writeMem(0xee07, { 0x99 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x19ff, gbc.sp());
        EXPECT(0xee08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xee07));
        // 99 01C1
        gbc.setState(0x5b69, 0x6fd8, 0x4980, 0x4027, 0x8bc7, 0xaa47, 0x1, 0x0);
        gbc.writeMem(0x5b69, { 0x99 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6fd8, gbc.sp());
        EXPECT(0x5b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01C2
        gbc.setState(0x7f00, 0xfab5, 0x25d0, 0x14e0, 0xf07b, 0x52a0, 0x1, 0x0);
        gbc.writeMem(0x7f00, { 0x99 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfab5, gbc.sp());
        EXPECT(0x7f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01C3
        gbc.setState(0x6e98, 0x6738, 0xce90, 0xa4c0, 0x9e66, 0xdf9a, 0x0, 0x0);
        gbc.writeMem(0x6e98, { 0x99 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6738, gbc.sp());
        EXPECT(0x6e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01C5
        gbc.setState(0x34b5, 0x5391, 0x81c0, 0x91a1, 0x2f88, 0x4a11, 0x1, 0x1);
        gbc.writeMem(0x34b5, { 0x99 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5391, gbc.sp());
        EXPECT(0x34b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01C6
        gbc.setState(0xecd3, 0x91c5, 0x35a0, 0xf0f5, 0x6f3a, 0xbac6, 0x1, 0x1);
        gbc.writeMem(0xecd3, { 0x99 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x91c5, gbc.sp());
        EXPECT(0xecd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xecd3));
        // 99 01C7
        gbc.setState(0xe360, 0x2e2f, 0x1ba0, 0xada6, 0x81a, 0x9850, 0x0, 0x0);
        gbc.writeMem(0xe360, { 0x99 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2e2f, gbc.sp());
        EXPECT(0xe361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe360));
        // 99 01C8
        gbc.setState(0x7404, 0xdf41, 0xf4c0, 0xe95a, 0x721d, 0x1c23, 0x1, 0x1);
        gbc.writeMem(0x7404, { 0x99 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdf41, gbc.sp());
        EXPECT(0x7405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01C9
        gbc.setState(0xc7c4, 0x6ce2, 0xf280, 0x546d, 0x74ad, 0x230f, 0x0, 0x1);
        gbc.writeMem(0xc7c4, { 0x99 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6ce2, gbc.sp());
        EXPECT(0xc7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc7c4));
        // 99 01CA
        gbc.setState(0xa9c2, 0xf9d8, 0x9fc0, 0x3729, 0xc2ee, 0x7aec, 0x1, 0x1);
        gbc.writeMem(0xa9c2, { 0x99 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf9d8, gbc.sp());
        EXPECT(0xa9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa9c2));
        // 99 01CB
        gbc.setState(0x292c, 0x1c9c, 0x9780, 0xd9e5, 0xfec4, 0xb59, 0x1, 0x1);
        gbc.writeMem(0x292c, { 0x99 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1c9c, gbc.sp());
        EXPECT(0x292d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01CC
        gbc.setState(0x54f3, 0xd129, 0xd220, 0xe072, 0x4c2b, 0xfcef, 0x0, 0x0);
        gbc.writeMem(0x54f3, { 0x99 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd129, gbc.sp());
        EXPECT(0x54f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01CD
        gbc.setState(0x52c, 0x45f3, 0x290, 0x490e, 0x3cec, 0xe76b, 0x1, 0x1);
        gbc.writeMem(0x52c, { 0x99 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x45f3, gbc.sp());
        EXPECT(0x52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01CE
        gbc.setState(0x8ff9, 0x7465, 0x2da0, 0x7d6d, 0x51ba, 0x248e, 0x0, 0x1);
        gbc.writeMem(0x8ff9, { 0x99 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7465, gbc.sp());
        EXPECT(0x8ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8ff9));
        // 99 01CF
        gbc.setState(0xd744, 0x2643, 0x4ec0, 0x599d, 0xcce6, 0x445d, 0x1, 0x1);
        gbc.writeMem(0xd744, { 0x99 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2643, gbc.sp());
        EXPECT(0xd745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd744));
        // 99 01D0
        gbc.setState(0xbe56, 0xcc2d, 0xcfa0, 0x209f, 0xec96, 0x890b, 0x1, 0x0);
        gbc.writeMem(0xbe56, { 0x99 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcc2d, gbc.sp());
        EXPECT(0xbe57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbe56));
        // 99 01D1
        gbc.setState(0x809a, 0x7629, 0xf190, 0x120d, 0xc3f7, 0x22a1, 0x0, 0x0);
        gbc.writeMem(0x809a, { 0x99 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7629, gbc.sp());
        EXPECT(0x809b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x809a));
        // 99 01D2
        gbc.setState(0x5695, 0xfdaa, 0x3450, 0x9198, 0xbb0b, 0x19fe, 0x0, 0x1);
        gbc.writeMem(0x5695, { 0x99 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfdaa, gbc.sp());
        EXPECT(0x5696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01D3
        gbc.setState(0x82cc, 0x40a1, 0x6ba0, 0x57ae, 0x363f, 0x5d31, 0x0, 0x1);
        gbc.writeMem(0x82cc, { 0x99 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x40a1, gbc.sp());
        EXPECT(0x82cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x82cc));
        // 99 01D4
        gbc.setState(0x39d5, 0x3dce, 0x4e50, 0xb49c, 0xaf84, 0xa751, 0x1, 0x1);
        gbc.writeMem(0x39d5, { 0x99 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3dce, gbc.sp());
        EXPECT(0x39d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01D5
        gbc.setState(0x4356, 0xcc5d, 0x73c0, 0xa6cb, 0xde02, 0xa6fd, 0x1, 0x0);
        gbc.writeMem(0x4356, { 0x99 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcc5d, gbc.sp());
        EXPECT(0x4357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01D6
        gbc.setState(0x2bfc, 0x6c06, 0xfc60, 0x978, 0x75b0, 0x622d, 0x0, 0x0);
        gbc.writeMem(0x2bfc, { 0x99 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6c06, gbc.sp());
        EXPECT(0x2bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01D7
        gbc.setState(0xab62, 0x976d, 0xf2d0, 0x8f6f, 0x7932, 0xb894, 0x1, 0x1);
        gbc.writeMem(0xab62, { 0x99 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x976d, gbc.sp());
        EXPECT(0xab63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xab62));
        // 99 01D9
        gbc.setState(0xd5c9, 0x5090, 0xa760, 0xede8, 0x71a1, 0x45d1, 0x1, 0x0);
        gbc.writeMem(0xd5c9, { 0x99 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5090, gbc.sp());
        EXPECT(0xd5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd5c9));
        // 99 01DA
        gbc.setState(0x4057, 0xdf45, 0xbe0, 0x884a, 0x6d8f, 0xa0a3, 0x1, 0x1);
        gbc.writeMem(0x4057, { 0x99 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdf45, gbc.sp());
        EXPECT(0x4058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01DB
        gbc.setState(0x2b5a, 0x5fdc, 0xa180, 0x9985, 0x54b9, 0xefd7, 0x1, 0x1);
        gbc.writeMem(0x2b5a, { 0x99 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5fdc, gbc.sp());
        EXPECT(0x2b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01DC
        gbc.setState(0x7ebb, 0x69fd, 0xe440, 0xfa7, 0x5242, 0x48d, 0x0, 0x0);
        gbc.writeMem(0x7ebb, { 0x99 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x69fd, gbc.sp());
        EXPECT(0x7ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01DD
        gbc.setState(0x5a4e, 0xc0dd, 0x5f0, 0x9065, 0xd0ab, 0xf5e9, 0x1, 0x0);
        gbc.writeMem(0x5a4e, { 0x99 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc0dd, gbc.sp());
        EXPECT(0x5a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01DE
        gbc.setState(0xec23, 0x8f5e, 0x5640, 0x161, 0x75e6, 0x26e, 0x1, 0x1);
        gbc.writeMem(0xec23, { 0x99 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8f5e, gbc.sp());
        EXPECT(0xec24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xec23));
        // 99 01DF
        gbc.setState(0x7b12, 0xaced, 0x5dc0, 0x32ac, 0x28a, 0x9710, 0x1, 0x1);
        gbc.writeMem(0x7b12, { 0x99 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xaced, gbc.sp());
        EXPECT(0x7b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01E0
        gbc.setState(0xb8a, 0x7d85, 0xc270, 0x40a3, 0x68c4, 0x1521, 0x1, 0x0);
        gbc.writeMem(0xb8a, { 0x99 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7d85, gbc.sp());
        EXPECT(0xb8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01E1
        gbc.setState(0x7d26, 0x4b, 0x5270, 0x85d2, 0x58ba, 0x8f31, 0x1, 0x0);
        gbc.writeMem(0x7d26, { 0x99 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4b, gbc.sp());
        EXPECT(0x7d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01E2
        gbc.setState(0x3d0a, 0x78fc, 0x3e50, 0xe3ea, 0x3ad0, 0xcb35, 0x0, 0x0);
        gbc.writeMem(0x3d0a, { 0x99 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x78fc, gbc.sp());
        EXPECT(0x3d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01E3
        gbc.setState(0x6695, 0xf48f, 0x1430, 0xb1cf, 0x9c30, 0xefb7, 0x1, 0x1);
        gbc.writeMem(0x6695, { 0x99 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf48f, gbc.sp());
        EXPECT(0x6696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01E4
        gbc.setState(0x1674, 0x5563, 0xfd20, 0xfb43, 0x8217, 0x58ba, 0x1, 0x1);
        gbc.writeMem(0x1674, { 0x99 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5563, gbc.sp());
        EXPECT(0x1675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01E5
        gbc.setState(0xe514, 0x56c1, 0xbea0, 0xa88e, 0xb2de, 0xaae4, 0x0, 0x1);
        gbc.writeMem(0xe514, { 0x99 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x56c1, gbc.sp());
        EXPECT(0xe515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe514));
        // 99 01E6
        gbc.setState(0x8f3c, 0x7553, 0x4750, 0xa609, 0x4a07, 0xf970, 0x0, 0x0);
        gbc.writeMem(0x8f3c, { 0x99 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7553, gbc.sp());
        EXPECT(0x8f3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8f3c));
        // 99 01E7
        gbc.setState(0x35d9, 0xfa8e, 0xc2a0, 0xbed5, 0x44a6, 0xfaa2, 0x0, 0x0);
        gbc.writeMem(0x35d9, { 0x99 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfa8e, gbc.sp());
        EXPECT(0x35da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01E8
        gbc.setState(0x478d, 0x6aec, 0xacc0, 0xc661, 0xfee6, 0xa8cd, 0x1, 0x1);
        gbc.writeMem(0x478d, { 0x99 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6aec, gbc.sp());
        EXPECT(0x478e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01E9
        gbc.setState(0x55b1, 0x7029, 0xfc10, 0x9b3, 0xf256, 0x4b20, 0x1, 0x1);
        gbc.writeMem(0x55b1, { 0x99 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7029, gbc.sp());
        EXPECT(0x55b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01EA
        gbc.setState(0x76a5, 0xae5b, 0xffd0, 0x92f5, 0x6f5e, 0x6ad, 0x0, 0x0);
        gbc.writeMem(0x76a5, { 0x99 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xae5b, gbc.sp());
        EXPECT(0x76a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01EB
        gbc.setState(0x8f6c, 0xf95f, 0x25e0, 0x74dd, 0x36e3, 0x4660, 0x0, 0x1);
        gbc.writeMem(0x8f6c, { 0x99 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf95f, gbc.sp());
        EXPECT(0x8f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8f6c));
        // 99 01EC
        gbc.setState(0xab28, 0xecbc, 0x8940, 0x4e30, 0xaca3, 0xbcbf, 0x0, 0x1);
        gbc.writeMem(0xab28, { 0x99 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xecbc, gbc.sp());
        EXPECT(0xab29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xab28));
        // 99 01ED
        gbc.setState(0x5974, 0x3e55, 0x9b0, 0x5ec2, 0x5c69, 0x4b60, 0x1, 0x1);
        gbc.writeMem(0x5974, { 0x99 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3e55, gbc.sp());
        EXPECT(0x5975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01EE
        gbc.setState(0x2dad, 0x12db, 0x3b70, 0xadbe, 0x2dfc, 0x40ad, 0x1, 0x0);
        gbc.writeMem(0x2dad, { 0x99 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x12db, gbc.sp());
        EXPECT(0x2dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01EF
        gbc.setState(0xd79c, 0x3229, 0x1d00, 0x9204, 0xc853, 0xae1a, 0x1, 0x0);
        gbc.writeMem(0xd79c, { 0x99 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3229, gbc.sp());
        EXPECT(0xd79d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd79c));
        // 99 01F0
        gbc.setState(0x114c, 0x135, 0xe50, 0x9895, 0xb3a4, 0xb30, 0x0, 0x0);
        gbc.writeMem(0x114c, { 0x99 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x135, gbc.sp());
        EXPECT(0x114d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01F1
        gbc.setState(0x45d9, 0x9e9f, 0x58e0, 0x684b, 0x1457, 0x547b, 0x0, 0x0);
        gbc.writeMem(0x45d9, { 0x99 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9e9f, gbc.sp());
        EXPECT(0x45da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01F2
        gbc.setState(0x15a2, 0x43d1, 0xfc10, 0xa254, 0x295c, 0x2377, 0x0, 0x0);
        gbc.writeMem(0x15a2, { 0x99 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x43d1, gbc.sp());
        EXPECT(0x15a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01F3
        gbc.setState(0xa8df, 0x3edc, 0x9c20, 0x5f1, 0xe375, 0x20e7, 0x0, 0x0);
        gbc.writeMem(0xa8df, { 0x99 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3edc, gbc.sp());
        EXPECT(0xa8e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa8df));
        // 99 01F4
        gbc.setState(0x4bbb, 0xd153, 0x8d50, 0xf378, 0xcefe, 0x8293, 0x1, 0x0);
        gbc.writeMem(0x4bbb, { 0x99 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd153, gbc.sp());
        EXPECT(0x4bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01F5
        gbc.setState(0x7ada, 0x6f83, 0x59a0, 0x7af9, 0x701e, 0xc704, 0x1, 0x1);
        gbc.writeMem(0x7ada, { 0x99 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6f83, gbc.sp());
        EXPECT(0x7adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01F6
        gbc.setState(0xc9ed, 0x290b, 0xef80, 0x12d4, 0xa717, 0xee49, 0x0, 0x1);
        gbc.writeMem(0xc9ed, { 0x99 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x290b, gbc.sp());
        EXPECT(0xc9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc9ed));
        // 99 01F7
        gbc.setState(0x89b, 0xf17b, 0xf1a0, 0xffef, 0x60a5, 0x2cfc, 0x1, 0x1);
        gbc.writeMem(0x89b, { 0x99 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf17b, gbc.sp());
        EXPECT(0x89c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01F8
        gbc.setState(0x435a, 0x8f17, 0xba50, 0x3fff, 0xe77b, 0x3ebb, 0x1, 0x1);
        gbc.writeMem(0x435a, { 0x99 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8f17, gbc.sp());
        EXPECT(0x435b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01F9
        gbc.setState(0xbe5f, 0xd624, 0x8df0, 0x33c7, 0x9d4a, 0x5183, 0x1, 0x1);
        gbc.writeMem(0xbe5f, { 0x99 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd624, gbc.sp());
        EXPECT(0xbe60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbe5f));
        // 99 01FA
        gbc.setState(0x836e, 0x56e, 0xf9a0, 0xcdd8, 0xc427, 0xaa43, 0x0, 0x1);
        gbc.writeMem(0x836e, { 0x99 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x56e, gbc.sp());
        EXPECT(0x836f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x836e));
        // 99 01FB
        gbc.setState(0x11, 0x2441, 0x49e0, 0x1642, 0xdf45, 0xc720, 0x0, 0x1);
        gbc.writeMem(0x11, { 0x99 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2441, gbc.sp());
        EXPECT(0x12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 01FC
        gbc.setState(0x692e, 0x8cd2, 0x81f0, 0x68bb, 0xe68d, 0x575a, 0x1, 0x1);
        gbc.writeMem(0x692e, { 0x99 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8cd2, gbc.sp());
        EXPECT(0x692f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01FD
        gbc.setState(0x3fa2, 0x2b58, 0x3d0, 0x54e6, 0x53b9, 0x9b99, 0x1, 0x1);
        gbc.writeMem(0x3fa2, { 0x99 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2b58, gbc.sp());
        EXPECT(0x3fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01FE
        gbc.setState(0x551e, 0x2a8d, 0x7e60, 0x2f92, 0xcfb9, 0x1112, 0x1, 0x0);
        gbc.writeMem(0x551e, { 0x99 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2a8d, gbc.sp());
        EXPECT(0x551f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 01FF
        gbc.setState(0x255, 0x7ff1, 0xf7f0, 0x3df0, 0xd3fc, 0x984b, 0x1, 0x1);
        gbc.writeMem(0x255, { 0x99 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7ff1, gbc.sp());
        EXPECT(0x256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0200
        gbc.setState(0x416f, 0xc799, 0xa2c0, 0xf7a3, 0xaaf5, 0x91c4, 0x0, 0x1);
        gbc.writeMem(0x416f, { 0x99 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc799, gbc.sp());
        EXPECT(0x4170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0201
        gbc.setState(0x49b4, 0xae72, 0x7790, 0x1ddc, 0x8723, 0x2344, 0x0, 0x1);
        gbc.writeMem(0x49b4, { 0x99 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xae72, gbc.sp());
        EXPECT(0x49b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0202
        gbc.setState(0xe100, 0xb71c, 0xe700, 0xf4f6, 0x1047, 0x6453, 0x0, 0x1);
        gbc.writeMem(0xe100, { 0x99 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb71c, gbc.sp());
        EXPECT(0xe101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe100));
        // 99 0203
        gbc.setState(0x31c0, 0x3f62, 0xca60, 0xda4, 0x5ca9, 0xc0e6, 0x0, 0x0);
        gbc.writeMem(0x31c0, { 0x99 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3f62, gbc.sp());
        EXPECT(0x31c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0204
        gbc.setState(0xbf61, 0x38b3, 0x8210, 0x1df3, 0x854b, 0x7191, 0x0, 0x1);
        gbc.writeMem(0xbf61, { 0x99 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x38b3, gbc.sp());
        EXPECT(0xbf62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbf61));
        // 99 0205
        gbc.setState(0x4ef5, 0x25d5, 0x34e0, 0xa940, 0xd6d7, 0xafe2, 0x1, 0x1);
        gbc.writeMem(0x4ef5, { 0x99 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x25d5, gbc.sp());
        EXPECT(0x4ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0206
        gbc.setState(0x63e1, 0x331b, 0xd570, 0x4576, 0x6b68, 0x7f89, 0x0, 0x1);
        gbc.writeMem(0x63e1, { 0x99 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x331b, gbc.sp());
        EXPECT(0x63e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0207
        gbc.setState(0x7611, 0xdaf3, 0x5390, 0xffe4, 0x40df, 0xf09f, 0x0, 0x1);
        gbc.writeMem(0x7611, { 0x99 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdaf3, gbc.sp());
        EXPECT(0x7612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0208
        gbc.setState(0x7dc7, 0xc91a, 0x67c0, 0xd369, 0xfa2, 0x580d, 0x1, 0x0);
        gbc.writeMem(0x7dc7, { 0x99 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc91a, gbc.sp());
        EXPECT(0x7dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0209
        gbc.setState(0xb78c, 0x3bbd, 0x3db0, 0xecbc, 0x29c9, 0x7b6a, 0x0, 0x1);
        gbc.writeMem(0xb78c, { 0x99 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3bbd, gbc.sp());
        EXPECT(0xb78d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb78c));
        // 99 020A
        gbc.setState(0x6ed0, 0x7f51, 0x5c60, 0xea3, 0x1d59, 0xafd1, 0x0, 0x0);
        gbc.writeMem(0x6ed0, { 0x99 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7f51, gbc.sp());
        EXPECT(0x6ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 020B
        gbc.setState(0x1eb1, 0x50aa, 0xc310, 0x6fc2, 0xdcd9, 0xe59b, 0x1, 0x0);
        gbc.writeMem(0x1eb1, { 0x99 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x50aa, gbc.sp());
        EXPECT(0x1eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 020C
        gbc.setState(0x769f, 0x32b8, 0x24d0, 0x8bf6, 0xcade, 0x6062, 0x1, 0x0);
        gbc.writeMem(0x769f, { 0x99 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x32b8, gbc.sp());
        EXPECT(0x76a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 020D
        gbc.setState(0xa54d, 0xf2d0, 0x26b0, 0xe6ec, 0xb9ad, 0x5128, 0x0, 0x0);
        gbc.writeMem(0xa54d, { 0x99 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf2d0, gbc.sp());
        EXPECT(0xa54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa54d));
        // 99 020E
        gbc.setState(0x399a, 0xf0dd, 0x2880, 0xf620, 0xd69d, 0xbfb0, 0x0, 0x0);
        gbc.writeMem(0x399a, { 0x99 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf0dd, gbc.sp());
        EXPECT(0x399b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0210
        gbc.setState(0xd654, 0x29d8, 0x38b0, 0x5ba0, 0x8b1, 0x5606, 0x0, 0x0);
        gbc.writeMem(0xd654, { 0x99 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x29d8, gbc.sp());
        EXPECT(0xd655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd654));
        // 99 0211
        gbc.setState(0x796a, 0x5c7b, 0x9400, 0x5667, 0x8f94, 0xc8b7, 0x1, 0x0);
        gbc.writeMem(0x796a, { 0x99 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5c7b, gbc.sp());
        EXPECT(0x796b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0212
        gbc.setState(0x1860, 0xa96b, 0x5f0, 0x6a81, 0xa440, 0xf7d9, 0x0, 0x0);
        gbc.writeMem(0x1860, { 0x99 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa96b, gbc.sp());
        EXPECT(0x1861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0213
        gbc.setState(0xa7b5, 0x90fe, 0x6c20, 0x2758, 0x2354, 0x3db3, 0x0, 0x1);
        gbc.writeMem(0xa7b5, { 0x99 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x90fe, gbc.sp());
        EXPECT(0xa7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa7b5));
        // 99 0214
        gbc.setState(0x8ce5, 0xe729, 0x7950, 0x1bf3, 0x638f, 0xc61f, 0x1, 0x1);
        gbc.writeMem(0x8ce5, { 0x99 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe729, gbc.sp());
        EXPECT(0x8ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8ce5));
        // 99 0215
        gbc.setState(0x7ae8, 0x32a8, 0x2280, 0xe04a, 0x7689, 0xb125, 0x1, 0x0);
        gbc.writeMem(0x7ae8, { 0x99 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x32a8, gbc.sp());
        EXPECT(0x7ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0216
        gbc.setState(0x97c2, 0xeb9d, 0xb5c0, 0x9cec, 0xd5f1, 0x6595, 0x1, 0x0);
        gbc.writeMem(0x97c2, { 0x99 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xeb9d, gbc.sp());
        EXPECT(0x97c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x97c2));
        // 99 0217
        gbc.setState(0xda94, 0x9015, 0xf0e0, 0xe326, 0x962, 0xa72d, 0x0, 0x0);
        gbc.writeMem(0xda94, { 0x99 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9015, gbc.sp());
        EXPECT(0xda95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xda94));
        // 99 0218
        gbc.setState(0x13df, 0x1611, 0x3910, 0xde28, 0xa916, 0x2601, 0x0, 0x1);
        gbc.writeMem(0x13df, { 0x99 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1611, gbc.sp());
        EXPECT(0x13e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0219
        gbc.setState(0x583a, 0x2194, 0x2240, 0x12aa, 0x274a, 0x5e25, 0x1, 0x0);
        gbc.writeMem(0x583a, { 0x99 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2194, gbc.sp());
        EXPECT(0x583b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 021A
        gbc.setState(0x24a7, 0x2a42, 0xdb10, 0x1b52, 0x260b, 0xdbfd, 0x0, 0x1);
        gbc.writeMem(0x24a7, { 0x99 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2a42, gbc.sp());
        EXPECT(0x24a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 021B
        gbc.setState(0x604f, 0xa5b6, 0xf0c0, 0xfbae, 0x331e, 0xe286, 0x0, 0x1);
        gbc.writeMem(0x604f, { 0x99 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa5b6, gbc.sp());
        EXPECT(0x6050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 021C
        gbc.setState(0xcdd9, 0x43a, 0x8380, 0xaed7, 0xad10, 0x55b9, 0x0, 0x1);
        gbc.writeMem(0xcdd9, { 0x99 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x43a, gbc.sp());
        EXPECT(0xcdda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcdd9));
        // 99 021D
        gbc.setState(0xd7e, 0xb9e7, 0x4fc0, 0xa28e, 0x49d6, 0xeb06, 0x1, 0x1);
        gbc.writeMem(0xd7e, { 0x99 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb9e7, gbc.sp());
        EXPECT(0xd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 021E
        gbc.setState(0x45d2, 0xcb30, 0xa760, 0x6341, 0x6330, 0x8005, 0x0, 0x1);
        gbc.writeMem(0x45d2, { 0x99 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcb30, gbc.sp());
        EXPECT(0x45d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 021F
        gbc.setState(0x2641, 0x868e, 0x3c90, 0x7e6c, 0x4160, 0xb370, 0x1, 0x0);
        gbc.writeMem(0x2641, { 0x99 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x868e, gbc.sp());
        EXPECT(0x2642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0220
        gbc.setState(0xa4dc, 0x3938, 0x1d90, 0xc219, 0xb3ef, 0xa5f2, 0x1, 0x0);
        gbc.writeMem(0xa4dc, { 0x99 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3938, gbc.sp());
        EXPECT(0xa4dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa4dc));
        // 99 0221
        gbc.setState(0x1954, 0x30c7, 0xeed0, 0x8f04, 0xba0d, 0xbaf5, 0x1, 0x1);
        gbc.writeMem(0x1954, { 0x99 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x30c7, gbc.sp());
        EXPECT(0x1955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0222
        gbc.setState(0x1bc5, 0x9b51, 0xf420, 0x8554, 0xb5d1, 0xe9b, 0x0, 0x0);
        gbc.writeMem(0x1bc5, { 0x99 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9b51, gbc.sp());
        EXPECT(0x1bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0223
        gbc.setState(0x9c66, 0xc22b, 0x8ad0, 0xc344, 0x6e8a, 0xa1ba, 0x1, 0x0);
        gbc.writeMem(0x9c66, { 0x99 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc22b, gbc.sp());
        EXPECT(0x9c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9c66));
        // 99 0224
        gbc.setState(0x27b8, 0x784d, 0x70d0, 0x2676, 0x1174, 0x560, 0x1, 0x1);
        gbc.writeMem(0x27b8, { 0x99 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x784d, gbc.sp());
        EXPECT(0x27b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0225
        gbc.setState(0x5b16, 0x8184, 0x4a00, 0xc7eb, 0xe9db, 0x34f9, 0x1, 0x0);
        gbc.writeMem(0x5b16, { 0x99 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8184, gbc.sp());
        EXPECT(0x5b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0226
        gbc.setState(0x7e01, 0x728b, 0x3ae0, 0xb5e4, 0x4fd4, 0x2de, 0x1, 0x1);
        gbc.writeMem(0x7e01, { 0x99 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x728b, gbc.sp());
        EXPECT(0x7e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0227
        gbc.setState(0x4810, 0x3372, 0x3c00, 0xce1d, 0x6c45, 0xba14, 0x1, 0x1);
        gbc.writeMem(0x4810, { 0x99 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3372, gbc.sp());
        EXPECT(0x4811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0228
        gbc.setState(0x3e0a, 0x20cb, 0x300, 0xe07b, 0xfe2d, 0xf772, 0x0, 0x1);
        gbc.writeMem(0x3e0a, { 0x99 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x20cb, gbc.sp());
        EXPECT(0x3e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0229
        gbc.setState(0xdb8a, 0x45bc, 0xfeb0, 0x93a2, 0x5498, 0x60c6, 0x1, 0x1);
        gbc.writeMem(0xdb8a, { 0x99 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x45bc, gbc.sp());
        EXPECT(0xdb8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdb8a));
        // 99 022A
        gbc.setState(0x8644, 0x136f, 0x9650, 0xb6e, 0x5244, 0x731d, 0x0, 0x1);
        gbc.writeMem(0x8644, { 0x99 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x136f, gbc.sp());
        EXPECT(0x8645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8644));
        // 99 022B
        gbc.setState(0x562e, 0x2346, 0xefd0, 0x4e4, 0x2bd0, 0x27a, 0x1, 0x1);
        gbc.writeMem(0x562e, { 0x99 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2346, gbc.sp());
        EXPECT(0x562f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 022C
        gbc.setState(0x3214, 0x85f3, 0x31d0, 0x10a4, 0xcc42, 0x4670, 0x1, 0x1);
        gbc.writeMem(0x3214, { 0x99 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x85f3, gbc.sp());
        EXPECT(0x3215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 022D
        gbc.setState(0x2310, 0xa25, 0xea40, 0x22a6, 0xa277, 0x7c5c, 0x0, 0x1);
        gbc.writeMem(0x2310, { 0x99 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa25, gbc.sp());
        EXPECT(0x2311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 022E
        gbc.setState(0x82ba, 0xfe77, 0x9960, 0xb7f0, 0x5149, 0xeac, 0x1, 0x1);
        gbc.writeMem(0x82ba, { 0x99 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfe77, gbc.sp());
        EXPECT(0x82bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x82ba));
        // 99 022F
        gbc.setState(0xd066, 0xc5b1, 0x6150, 0x2ad3, 0xbc92, 0x93e2, 0x1, 0x0);
        gbc.writeMem(0xd066, { 0x99 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc5b1, gbc.sp());
        EXPECT(0xd067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd066));
        // 99 0230
        gbc.setState(0xad25, 0x7f0b, 0x1ce0, 0xd6b8, 0x747, 0xd2a7, 0x0, 0x1);
        gbc.writeMem(0xad25, { 0x99 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7f0b, gbc.sp());
        EXPECT(0xad26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xad25));
        // 99 0231
        gbc.setState(0x7d8e, 0xaa9, 0x9930, 0x18ef, 0xd847, 0x45ca, 0x0, 0x1);
        gbc.writeMem(0x7d8e, { 0x99 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xaa9, gbc.sp());
        EXPECT(0x7d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0232
        gbc.setState(0x721b, 0x830c, 0xe3f0, 0x7bab, 0x8ac2, 0xf18f, 0x1, 0x1);
        gbc.writeMem(0x721b, { 0x99 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x830c, gbc.sp());
        EXPECT(0x721c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0233
        gbc.setState(0x7179, 0xebe7, 0x4fe0, 0xd526, 0x350e, 0x1a01, 0x1, 0x1);
        gbc.writeMem(0x7179, { 0x99 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xebe7, gbc.sp());
        EXPECT(0x717a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0234
        gbc.setState(0x262a, 0x7883, 0x7c70, 0x1109, 0x4e16, 0x616a, 0x0, 0x0);
        gbc.writeMem(0x262a, { 0x99 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7883, gbc.sp());
        EXPECT(0x262b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0235
        gbc.setState(0x9e17, 0xd7a9, 0x6e40, 0xdcdf, 0xb72, 0xd551, 0x0, 0x0);
        gbc.writeMem(0x9e17, { 0x99 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd7a9, gbc.sp());
        EXPECT(0x9e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9e17));
        // 99 0236
        gbc.setState(0xe3a, 0x15a3, 0xc0b0, 0x97b3, 0x83f9, 0x3641, 0x1, 0x0);
        gbc.writeMem(0xe3a, { 0x99 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x15a3, gbc.sp());
        EXPECT(0xe3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0237
        gbc.setState(0xc1f, 0xf1fe, 0x6a70, 0x47d0, 0xf625, 0xdaf4, 0x0, 0x0);
        gbc.writeMem(0xc1f, { 0x99 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf1fe, gbc.sp());
        EXPECT(0xc20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0238
        gbc.setState(0xac7e, 0x1df4, 0x1f10, 0xaabf, 0x2d04, 0xa49e, 0x0, 0x1);
        gbc.writeMem(0xac7e, { 0x99 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1df4, gbc.sp());
        EXPECT(0xac7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xac7e));
        // 99 0239
        gbc.setState(0x3986, 0xdf29, 0xc4a0, 0x6c12, 0xefe6, 0xd1f, 0x0, 0x0);
        gbc.writeMem(0x3986, { 0x99 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdf29, gbc.sp());
        EXPECT(0x3987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 023B
        gbc.setState(0x75ab, 0x187, 0x48e0, 0x1221, 0xb349, 0xf92b, 0x0, 0x0);
        gbc.writeMem(0x75ab, { 0x99 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x187, gbc.sp());
        EXPECT(0x75ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 023C
        gbc.setState(0x7b3a, 0x1c10, 0x1880, 0x163a, 0xa3f, 0x6101, 0x0, 0x1);
        gbc.writeMem(0x7b3a, { 0x99 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1c10, gbc.sp());
        EXPECT(0x7b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 023E
        gbc.setState(0x550d, 0x2832, 0x2e30, 0x5d25, 0x6ba3, 0x36e7, 0x0, 0x0);
        gbc.writeMem(0x550d, { 0x99 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2832, gbc.sp());
        EXPECT(0x550e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 023F
        gbc.setState(0x6d87, 0xbaab, 0xa3d0, 0x2721, 0x5e7c, 0xc4c3, 0x0, 0x1);
        gbc.writeMem(0x6d87, { 0x99 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbaab, gbc.sp());
        EXPECT(0x6d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0241
        gbc.setState(0xcac3, 0xb651, 0xc640, 0xc27e, 0x2da4, 0xd558, 0x1, 0x1);
        gbc.writeMem(0xcac3, { 0x99 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb651, gbc.sp());
        EXPECT(0xcac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcac3));
        // 99 0242
        gbc.setState(0x95ac, 0x197, 0xda60, 0x1ffe, 0xff5d, 0xca9e, 0x0, 0x1);
        gbc.writeMem(0x95ac, { 0x99 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x197, gbc.sp());
        EXPECT(0x95ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x95ac));
        // 99 0244
        gbc.setState(0x7f4d, 0x4ab, 0xb1f0, 0xdf01, 0x82ed, 0xa490, 0x0, 0x0);
        gbc.writeMem(0x7f4d, { 0x99 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4ab, gbc.sp());
        EXPECT(0x7f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0245
        gbc.setState(0xb56, 0x1809, 0x27f0, 0xe12c, 0xf26c, 0x638f, 0x1, 0x1);
        gbc.writeMem(0xb56, { 0x99 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1809, gbc.sp());
        EXPECT(0xb57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0246
        gbc.setState(0xa32, 0x353d, 0x4bd0, 0x81d2, 0xa02e, 0xf3c0, 0x1, 0x1);
        gbc.writeMem(0xa32, { 0x99 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x353d, gbc.sp());
        EXPECT(0xa33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0247
        gbc.setState(0x9d35, 0xa60c, 0xe6e0, 0xce72, 0x5dd7, 0xb69c, 0x0, 0x0);
        gbc.writeMem(0x9d35, { 0x99 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa60c, gbc.sp());
        EXPECT(0x9d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9d35));
        // 99 0249
        gbc.setState(0x5b44, 0x1d4f, 0xc840, 0xb6ea, 0x6c22, 0xee79, 0x0, 0x0);
        gbc.writeMem(0x5b44, { 0x99 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1d4f, gbc.sp());
        EXPECT(0x5b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 024A
        gbc.setState(0x5e39, 0xbd11, 0x88a0, 0xb91b, 0x1411, 0xa9d8, 0x1, 0x1);
        gbc.writeMem(0x5e39, { 0x99 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbd11, gbc.sp());
        EXPECT(0x5e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 024B
        gbc.setState(0x5a3a, 0x13d1, 0xf350, 0x8e5b, 0x1d7d, 0x924e, 0x0, 0x1);
        gbc.writeMem(0x5a3a, { 0x99 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x13d1, gbc.sp());
        EXPECT(0x5a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 024C
        gbc.setState(0xca80, 0xa285, 0x49b0, 0x292a, 0xbc7, 0xd02d, 0x1, 0x0);
        gbc.writeMem(0xca80, { 0x99 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa285, gbc.sp());
        EXPECT(0xca81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xca80));
        // 99 024D
        gbc.setState(0x4dbb, 0x567c, 0x70b0, 0x79f9, 0x2cf5, 0xd1b2, 0x0, 0x0);
        gbc.writeMem(0x4dbb, { 0x99 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x567c, gbc.sp());
        EXPECT(0x4dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 024E
        gbc.setState(0x9c6f, 0x9f4e, 0x2020, 0x518c, 0x4f0b, 0x3b67, 0x1, 0x1);
        gbc.writeMem(0x9c6f, { 0x99 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9f4e, gbc.sp());
        EXPECT(0x9c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9c6f));
        // 99 024F
        gbc.setState(0x5a0f, 0xd077, 0xb1e0, 0xa624, 0xb082, 0x11d1, 0x1, 0x1);
        gbc.writeMem(0x5a0f, { 0x99 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd077, gbc.sp());
        EXPECT(0x5a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0250
        gbc.setState(0x9ad3, 0x3ad9, 0x5ce0, 0x1f3b, 0x2dc4, 0x68a5, 0x1, 0x0);
        gbc.writeMem(0x9ad3, { 0x99 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3ad9, gbc.sp());
        EXPECT(0x9ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9ad3));
        // 99 0251
        gbc.setState(0x86c7, 0xc7a1, 0x84f0, 0xbb62, 0x413d, 0xdf9d, 0x0, 0x1);
        gbc.writeMem(0x86c7, { 0x99 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc7a1, gbc.sp());
        EXPECT(0x86c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x86c7));
        // 99 0252
        gbc.setState(0xa40a, 0x4874, 0x6d70, 0x4c77, 0x27f9, 0x5054, 0x0, 0x1);
        gbc.writeMem(0xa40a, { 0x99 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4874, gbc.sp());
        EXPECT(0xa40b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa40a));
        // 99 0253
        gbc.setState(0x90d9, 0xa10d, 0x9ee0, 0x8067, 0xda30, 0x1f50, 0x0, 0x1);
        gbc.writeMem(0x90d9, { 0x99 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa10d, gbc.sp());
        EXPECT(0x90da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x90d9));
        // 99 0254
        gbc.setState(0x7c24, 0xfb3e, 0x40c0, 0xfd18, 0xc0de, 0x2cba, 0x1, 0x1);
        gbc.writeMem(0x7c24, { 0x99 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfb3e, gbc.sp());
        EXPECT(0x7c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0255
        gbc.setState(0xccc5, 0x1ca2, 0xcb40, 0x790, 0xe204, 0x4942, 0x1, 0x1);
        gbc.writeMem(0xccc5, { 0x99 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1ca2, gbc.sp());
        EXPECT(0xccc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xccc5));
        // 99 0256
        gbc.setState(0x9efd, 0xc030, 0xde0, 0xa92e, 0x6d5e, 0x9d46, 0x0, 0x1);
        gbc.writeMem(0x9efd, { 0x99 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc030, gbc.sp());
        EXPECT(0x9efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9efd));
        // 99 0257
        gbc.setState(0x5255, 0x6df, 0x1080, 0x6193, 0xe837, 0x8b36, 0x1, 0x0);
        gbc.writeMem(0x5255, { 0x99 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6df, gbc.sp());
        EXPECT(0x5256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0258
        gbc.setState(0xa100, 0x6cd, 0x6bd0, 0x5a91, 0xce82, 0xdd57, 0x1, 0x1);
        gbc.writeMem(0xa100, { 0x99 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6cd, gbc.sp());
        EXPECT(0xa101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa100));
        // 99 0259
        gbc.setState(0x9b14, 0x329f, 0x1830, 0x1dd9, 0x1505, 0xa608, 0x1, 0x1);
        gbc.writeMem(0x9b14, { 0x99 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x329f, gbc.sp());
        EXPECT(0x9b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9b14));
        // 99 025A
        gbc.setState(0x3e64, 0x9471, 0x9730, 0x3e1f, 0xf497, 0xf65f, 0x1, 0x0);
        gbc.writeMem(0x3e64, { 0x99 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9471, gbc.sp());
        EXPECT(0x3e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 025B
        gbc.setState(0xaf5a, 0x72b6, 0x8340, 0x8279, 0x6e4e, 0x1c5f, 0x1, 0x0);
        gbc.writeMem(0xaf5a, { 0x99 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x72b6, gbc.sp());
        EXPECT(0xaf5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xaf5a));
        // 99 025C
        gbc.setState(0xd47d, 0xf58, 0x3620, 0x6185, 0xa615, 0xcebc, 0x1, 0x1);
        gbc.writeMem(0xd47d, { 0x99 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf58, gbc.sp());
        EXPECT(0xd47e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd47d));
        // 99 025D
        gbc.setState(0x9561, 0xf217, 0x39c0, 0x1254, 0xe4ea, 0xf71d, 0x1, 0x0);
        gbc.writeMem(0x9561, { 0x99 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf217, gbc.sp());
        EXPECT(0x9562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9561));
        // 99 025E
        gbc.setState(0x9dac, 0x8dd, 0x2120, 0x6fe8, 0x1848, 0x93c7, 0x1, 0x0);
        gbc.writeMem(0x9dac, { 0x99 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8dd, gbc.sp());
        EXPECT(0x9dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9dac));
        // 99 0260
        gbc.setState(0xd854, 0x5be6, 0x6e20, 0x5d53, 0xcef2, 0x8477, 0x0, 0x1);
        gbc.writeMem(0xd854, { 0x99 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5be6, gbc.sp());
        EXPECT(0xd855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd854));
        // 99 0261
        gbc.setState(0xdedb, 0x292b, 0xb4f0, 0x2f12, 0xd66f, 0x8ff3, 0x0, 0x0);
        gbc.writeMem(0xdedb, { 0x99 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x292b, gbc.sp());
        EXPECT(0xdedc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdedb));
        // 99 0262
        gbc.setState(0x315a, 0x1cff, 0x7200, 0xb5c, 0x42e5, 0x87, 0x0, 0x1);
        gbc.writeMem(0x315a, { 0x99 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1cff, gbc.sp());
        EXPECT(0x315b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0264
        gbc.setState(0x6d96, 0x8d5, 0xaa40, 0x36fc, 0x7af6, 0x7049, 0x0, 0x1);
        gbc.writeMem(0x6d96, { 0x99 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8d5, gbc.sp());
        EXPECT(0x6d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0265
        gbc.setState(0x2b90, 0xe33a, 0xde60, 0x4a42, 0x1858, 0x5a3a, 0x0, 0x0);
        gbc.writeMem(0x2b90, { 0x99 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe33a, gbc.sp());
        EXPECT(0x2b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0266
        gbc.setState(0xc470, 0x3509, 0xfe10, 0xe40b, 0x303, 0x7f64, 0x1, 0x0);
        gbc.writeMem(0xc470, { 0x99 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3509, gbc.sp());
        EXPECT(0xc471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc470));
        // 99 0267
        gbc.setState(0xc88b, 0x1a0a, 0x1c0, 0x4e4, 0x7093, 0x61cc, 0x1, 0x1);
        gbc.writeMem(0xc88b, { 0x99 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1a0a, gbc.sp());
        EXPECT(0xc88c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc88b));
        // 99 0268
        gbc.setState(0x27bc, 0xb381, 0x5330, 0x7335, 0xfb96, 0x365e, 0x0, 0x0);
        gbc.writeMem(0x27bc, { 0x99 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb381, gbc.sp());
        EXPECT(0x27bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0269
        gbc.setState(0xe938, 0x5c4d, 0x20, 0x742c, 0xbc1e, 0x19bc, 0x0, 0x1);
        gbc.writeMem(0xe938, { 0x99 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5c4d, gbc.sp());
        EXPECT(0xe939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe938));
        // 99 026A
        gbc.setState(0x8724, 0x1e5a, 0x8670, 0x2e2d, 0x8548, 0x5a58, 0x1, 0x0);
        gbc.writeMem(0x8724, { 0x99 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1e5a, gbc.sp());
        EXPECT(0x8725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8724));
        // 99 026B
        gbc.setState(0x321d, 0x420a, 0x62f0, 0xb910, 0x145b, 0x77a3, 0x0, 0x1);
        gbc.writeMem(0x321d, { 0x99 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x420a, gbc.sp());
        EXPECT(0x321e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 026C
        gbc.setState(0xd3b1, 0xf279, 0x6820, 0x216e, 0xec1c, 0x1f7f, 0x1, 0x0);
        gbc.writeMem(0xd3b1, { 0x99 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf279, gbc.sp());
        EXPECT(0xd3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd3b1));
        // 99 026D
        gbc.setState(0x65c9, 0x8cf1, 0x7ee0, 0x7917, 0xede4, 0x3d7b, 0x0, 0x1);
        gbc.writeMem(0x65c9, { 0x99 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8cf1, gbc.sp());
        EXPECT(0x65ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 026E
        gbc.setState(0xaccd, 0xbab4, 0x4130, 0x7e37, 0x847, 0xd8c4, 0x0, 0x1);
        gbc.writeMem(0xaccd, { 0x99 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbab4, gbc.sp());
        EXPECT(0xacce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xaccd));
        // 99 026F
        gbc.setState(0x77f4, 0x13f9, 0x7a40, 0xcd38, 0xf9af, 0xba67, 0x0, 0x0);
        gbc.writeMem(0x77f4, { 0x99 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x13f9, gbc.sp());
        EXPECT(0x77f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0270
        gbc.setState(0x80b9, 0x1331, 0x2b0, 0x18c1, 0xb223, 0xcb80, 0x1, 0x1);
        gbc.writeMem(0x80b9, { 0x99 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1331, gbc.sp());
        EXPECT(0x80ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x80b9));
        // 99 0271
        gbc.setState(0x160c, 0x1e38, 0xf7d0, 0x126d, 0x9a86, 0xb2d7, 0x0, 0x0);
        gbc.writeMem(0x160c, { 0x99 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1e38, gbc.sp());
        EXPECT(0x160d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0273
        gbc.setState(0xa985, 0xbb4e, 0xd250, 0x6c9, 0x9002, 0x2223, 0x1, 0x0);
        gbc.writeMem(0xa985, { 0x99 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbb4e, gbc.sp());
        EXPECT(0xa986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa985));
        // 99 0275
        gbc.setState(0x815d, 0x2317, 0xb2d0, 0x7f38, 0xdf58, 0xf33f, 0x0, 0x0);
        gbc.writeMem(0x815d, { 0x99 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2317, gbc.sp());
        EXPECT(0x815e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x815d));
        // 99 0276
        gbc.setState(0xdfe8, 0xf6c9, 0x84a0, 0x279d, 0x5775, 0xb917, 0x1, 0x0);
        gbc.writeMem(0xdfe8, { 0x99 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf6c9, gbc.sp());
        EXPECT(0xdfe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdfe8));
        // 99 0277
        gbc.setState(0x1188, 0xe67b, 0x9940, 0x4d73, 0xacd, 0x73c2, 0x1, 0x0);
        gbc.writeMem(0x1188, { 0x99 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe67b, gbc.sp());
        EXPECT(0x1189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0278
        gbc.setState(0x67fc, 0x8646, 0xaa60, 0x389e, 0xfe53, 0xd3f3, 0x0, 0x0);
        gbc.writeMem(0x67fc, { 0x99 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8646, gbc.sp());
        EXPECT(0x67fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0279
        gbc.setState(0x7e8b, 0x72b4, 0x8db0, 0xe2b1, 0xf371, 0x2bb2, 0x1, 0x1);
        gbc.writeMem(0x7e8b, { 0x99 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x72b4, gbc.sp());
        EXPECT(0x7e8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 027A
        gbc.setState(0x3365, 0x557a, 0xd590, 0xcea1, 0xd75b, 0x7242, 0x1, 0x1);
        gbc.writeMem(0x3365, { 0x99 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x557a, gbc.sp());
        EXPECT(0x3366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 027B
        gbc.setState(0x3b3, 0xe331, 0x56d0, 0x70a0, 0xff93, 0xe51e, 0x0, 0x0);
        gbc.writeMem(0x3b3, { 0x99 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe331, gbc.sp());
        EXPECT(0x3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 027D
        gbc.setState(0x565, 0xc323, 0x2980, 0x14bc, 0xcd44, 0xa71d, 0x0, 0x1);
        gbc.writeMem(0x565, { 0x99 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc323, gbc.sp());
        EXPECT(0x566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 027E
        gbc.setState(0xd9e2, 0x4f4c, 0x83b0, 0xfb27, 0x1ba1, 0x2eb6, 0x1, 0x1);
        gbc.writeMem(0xd9e2, { 0x99 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4f4c, gbc.sp());
        EXPECT(0xd9e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd9e2));
        // 99 027F
        gbc.setState(0x499c, 0x60ff, 0x5e10, 0x7f44, 0x6d3d, 0x9d13, 0x1, 0x1);
        gbc.writeMem(0x499c, { 0x99 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x60ff, gbc.sp());
        EXPECT(0x499d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0281
        gbc.setState(0x1ca0, 0xa78e, 0x73f0, 0x64e5, 0x423c, 0x3caf, 0x1, 0x0);
        gbc.writeMem(0x1ca0, { 0x99 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa78e, gbc.sp());
        EXPECT(0x1ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0282
        gbc.setState(0x9403, 0x543b, 0x290, 0xcd0d, 0xba4b, 0xebaa, 0x0, 0x1);
        gbc.writeMem(0x9403, { 0x99 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x543b, gbc.sp());
        EXPECT(0x9404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9403));
        // 99 0283
        gbc.setState(0x4b0c, 0xd06b, 0xa0f0, 0x15c8, 0xfe23, 0xe6cf, 0x1, 0x1);
        gbc.writeMem(0x4b0c, { 0x99 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd06b, gbc.sp());
        EXPECT(0x4b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0285
        gbc.setState(0xcba6, 0x4172, 0x6550, 0x167e, 0xa55d, 0x71ce, 0x1, 0x1);
        gbc.writeMem(0xcba6, { 0x99 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4172, gbc.sp());
        EXPECT(0xcba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcba6));
        // 99 0286
        gbc.setState(0x26db, 0xf161, 0x4ca0, 0x3016, 0xeb52, 0x67f5, 0x1, 0x1);
        gbc.writeMem(0x26db, { 0x99 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf161, gbc.sp());
        EXPECT(0x26dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0287
        gbc.setState(0x2905, 0x3403, 0x9900, 0xd302, 0xc26d, 0x95bd, 0x0, 0x1);
        gbc.writeMem(0x2905, { 0x99 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3403, gbc.sp());
        EXPECT(0x2906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0288
        gbc.setState(0xac97, 0xf7bf, 0xbb30, 0x5a84, 0x3ec4, 0x1b1b, 0x1, 0x0);
        gbc.writeMem(0xac97, { 0x99 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf7bf, gbc.sp());
        EXPECT(0xac98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xac97));
        // 99 0289
        gbc.setState(0x9015, 0xa46f, 0x5b50, 0x8166, 0x6ca6, 0xd226, 0x0, 0x0);
        gbc.writeMem(0x9015, { 0x99 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa46f, gbc.sp());
        EXPECT(0x9016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9015));
        // 99 028A
        gbc.setState(0x85b3, 0xf975, 0x5090, 0x24fa, 0x71f0, 0x62ba, 0x0, 0x0);
        gbc.writeMem(0x85b3, { 0x99 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf975, gbc.sp());
        EXPECT(0x85b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x85b3));
        // 99 028B
        gbc.setState(0x24cc, 0x882b, 0x4d50, 0xfabf, 0x47ab, 0x2a2, 0x1, 0x0);
        gbc.writeMem(0x24cc, { 0x99 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x882b, gbc.sp());
        EXPECT(0x24cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 028C
        gbc.setState(0xd01c, 0x5655, 0x5f00, 0x1313, 0x6981, 0xde08, 0x1, 0x0);
        gbc.writeMem(0xd01c, { 0x99 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5655, gbc.sp());
        EXPECT(0xd01d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd01c));
        // 99 028D
        gbc.setState(0xc31d, 0x81a7, 0xd940, 0xa162, 0x8021, 0xf5d8, 0x1, 0x1);
        gbc.writeMem(0xc31d, { 0x99 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x81a7, gbc.sp());
        EXPECT(0xc31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc31d));
        // 99 028E
        gbc.setState(0x8e7e, 0xb10, 0x2240, 0x3032, 0x9c64, 0x9a1e, 0x1, 0x1);
        gbc.writeMem(0x8e7e, { 0x99 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb10, gbc.sp());
        EXPECT(0x8e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8e7e));
        // 99 028F
        gbc.setState(0x62f, 0x6e74, 0xb8f0, 0xc7b0, 0x54a9, 0x4d86, 0x0, 0x0);
        gbc.writeMem(0x62f, { 0x99 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6e74, gbc.sp());
        EXPECT(0x630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0290
        gbc.setState(0xbe41, 0x15b7, 0x1200, 0x97c5, 0xac75, 0xd97d, 0x0, 0x1);
        gbc.writeMem(0xbe41, { 0x99 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x15b7, gbc.sp());
        EXPECT(0xbe42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbe41));
        // 99 0291
        gbc.setState(0xde5a, 0x715a, 0x82e0, 0x10bb, 0xeed0, 0x89f6, 0x1, 0x1);
        gbc.writeMem(0xde5a, { 0x99 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x715a, gbc.sp());
        EXPECT(0xde5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xde5a));
        // 99 0292
        gbc.setState(0x86e1, 0xa51e, 0x4fc0, 0x69ed, 0x917b, 0xd424, 0x0, 0x0);
        gbc.writeMem(0x86e1, { 0x99 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa51e, gbc.sp());
        EXPECT(0x86e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x86e1));
        // 99 0293
        gbc.setState(0x7b78, 0xcc2a, 0xd860, 0xe183, 0x3d46, 0xab93, 0x0, 0x0);
        gbc.writeMem(0x7b78, { 0x99 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcc2a, gbc.sp());
        EXPECT(0x7b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0294
        gbc.setState(0xb12f, 0xc5a8, 0x39f0, 0xd68e, 0xa2f5, 0xff2, 0x0, 0x0);
        gbc.writeMem(0xb12f, { 0x99 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc5a8, gbc.sp());
        EXPECT(0xb130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb12f));
        // 99 0295
        gbc.setState(0xc257, 0xaa37, 0xacd0, 0x492e, 0x5ca9, 0xc3de, 0x0, 0x0);
        gbc.writeMem(0xc257, { 0x99 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaa37, gbc.sp());
        EXPECT(0xc258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc257));
        // 99 0296
        gbc.setState(0x25f2, 0x2771, 0x72a0, 0xd952, 0x9a19, 0x83a4, 0x0, 0x1);
        gbc.writeMem(0x25f2, { 0x99 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2771, gbc.sp());
        EXPECT(0x25f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0297
        gbc.setState(0x1f32, 0xc44, 0x5860, 0xe6e3, 0x965e, 0xf765, 0x1, 0x1);
        gbc.writeMem(0x1f32, { 0x99 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc44, gbc.sp());
        EXPECT(0x1f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0298
        gbc.setState(0x7162, 0xc308, 0xbde0, 0x3047, 0x3d30, 0xb272, 0x0, 0x0);
        gbc.writeMem(0x7162, { 0x99 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc308, gbc.sp());
        EXPECT(0x7163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0299
        gbc.setState(0xe3b2, 0x7a5f, 0xa900, 0x26cf, 0x6f91, 0x839e, 0x1, 0x1);
        gbc.writeMem(0xe3b2, { 0x99 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7a5f, gbc.sp());
        EXPECT(0xe3b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe3b2));
        // 99 029A
        gbc.setState(0x24b7, 0x5700, 0x4f80, 0xe68c, 0x2c7f, 0x2c93, 0x0, 0x1);
        gbc.writeMem(0x24b7, { 0x99 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5700, gbc.sp());
        EXPECT(0x24b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 029B
        gbc.setState(0xd521, 0x4d4b, 0x4f0, 0xcbf4, 0x14f3, 0xcffd, 0x0, 0x0);
        gbc.writeMem(0xd521, { 0x99 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4d4b, gbc.sp());
        EXPECT(0xd522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd521));
        // 99 029D
        gbc.setState(0xc881, 0x9111, 0xc580, 0xad53, 0xdc96, 0x7331, 0x1, 0x0);
        gbc.writeMem(0xc881, { 0x99 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9111, gbc.sp());
        EXPECT(0xc882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc881));
        // 99 029E
        gbc.setState(0x1a35, 0x6ac3, 0xb250, 0xaffa, 0xf675, 0x4392, 0x1, 0x0);
        gbc.writeMem(0x1a35, { 0x99 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6ac3, gbc.sp());
        EXPECT(0x1a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 029F
        gbc.setState(0x1fed, 0x4be1, 0xe680, 0xf3f3, 0xfbdd, 0xbc6, 0x1, 0x1);
        gbc.writeMem(0x1fed, { 0x99 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4be1, gbc.sp());
        EXPECT(0x1fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02A1
        gbc.setState(0xb9de, 0xaa28, 0x7930, 0x51e0, 0x33ef, 0x31a1, 0x1, 0x1);
        gbc.writeMem(0xb9de, { 0x99 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xaa28, gbc.sp());
        EXPECT(0xb9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb9de));
        // 99 02A2
        gbc.setState(0xaf67, 0xb1ff, 0x8120, 0x2bf6, 0x960c, 0xa349, 0x0, 0x0);
        gbc.writeMem(0xaf67, { 0x99 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb1ff, gbc.sp());
        EXPECT(0xaf68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xaf67));
        // 99 02A3
        gbc.setState(0x9ca6, 0x56e3, 0x61a0, 0x58dc, 0x788e, 0x66de, 0x1, 0x0);
        gbc.writeMem(0x9ca6, { 0x99 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x56e3, gbc.sp());
        EXPECT(0x9ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9ca6));
        // 99 02A4
        gbc.setState(0x11d4, 0x4a0, 0xdae0, 0x6867, 0xb431, 0x43cf, 0x0, 0x0);
        gbc.writeMem(0x11d4, { 0x99 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4a0, gbc.sp());
        EXPECT(0x11d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02A5
        gbc.setState(0xe786, 0xbc71, 0xa080, 0x811f, 0xea30, 0x1108, 0x0, 0x0);
        gbc.writeMem(0xe786, { 0x99 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbc71, gbc.sp());
        EXPECT(0xe787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe786));
        // 99 02A6
        gbc.setState(0x3e20, 0x530c, 0x1480, 0x64b0, 0xbe01, 0x6a74, 0x0, 0x1);
        gbc.writeMem(0x3e20, { 0x99 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x530c, gbc.sp());
        EXPECT(0x3e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02A7
        gbc.setState(0x6d44, 0xb856, 0x6fd0, 0x1910, 0x6b56, 0x7080, 0x1, 0x0);
        gbc.writeMem(0x6d44, { 0x99 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb856, gbc.sp());
        EXPECT(0x6d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02A8
        gbc.setState(0x1f21, 0xed52, 0x8840, 0x1c7c, 0x1be4, 0x8d04, 0x1, 0x0);
        gbc.writeMem(0x1f21, { 0x99 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xed52, gbc.sp());
        EXPECT(0x1f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02A9
        gbc.setState(0xa827, 0x549, 0xf540, 0xc34c, 0x6338, 0x3741, 0x0, 0x1);
        gbc.writeMem(0xa827, { 0x99 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x549, gbc.sp());
        EXPECT(0xa828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa827));
        // 99 02AA
        gbc.setState(0x1bbe, 0x4b7, 0xf160, 0x29c2, 0xdb12, 0x9619, 0x1, 0x1);
        gbc.writeMem(0x1bbe, { 0x99 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4b7, gbc.sp());
        EXPECT(0x1bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02AB
        gbc.setState(0x2684, 0x694e, 0x3cf0, 0x9920, 0x1918, 0xe152, 0x0, 0x0);
        gbc.writeMem(0x2684, { 0x99 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x694e, gbc.sp());
        EXPECT(0x2685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02AC
        gbc.setState(0xea6c, 0x74e1, 0x9ec0, 0xe9cf, 0x74da, 0xccee, 0x0, 0x1);
        gbc.writeMem(0xea6c, { 0x99 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x74e1, gbc.sp());
        EXPECT(0xea6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xea6c));
        // 99 02AD
        gbc.setState(0x99e0, 0x4054, 0x87e0, 0x4529, 0xe16c, 0xadc9, 0x0, 0x1);
        gbc.writeMem(0x99e0, { 0x99 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4054, gbc.sp());
        EXPECT(0x99e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x99e0));
        // 99 02AF
        gbc.setState(0x5376, 0xa808, 0xa380, 0xccb, 0x9166, 0xee3c, 0x1, 0x1);
        gbc.writeMem(0x5376, { 0x99 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa808, gbc.sp());
        EXPECT(0x5377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02B0
        gbc.setState(0x752e, 0xde13, 0x77f0, 0xf1b4, 0xb63a, 0x735, 0x1, 0x1);
        gbc.writeMem(0x752e, { 0x99 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xde13, gbc.sp());
        EXPECT(0x752f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02B1
        gbc.setState(0x5321, 0xa703, 0x6480, 0x860c, 0xc177, 0xff38, 0x0, 0x0);
        gbc.writeMem(0x5321, { 0x99 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa703, gbc.sp());
        EXPECT(0x5322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02B2
        gbc.setState(0x6074, 0xea0d, 0xcf90, 0x2d48, 0x1eb9, 0x6a23, 0x0, 0x1);
        gbc.writeMem(0x6074, { 0x99 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xea0d, gbc.sp());
        EXPECT(0x6075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02B3
        gbc.setState(0x40eb, 0x1d1d, 0x4d20, 0x14a6, 0xcf04, 0x9289, 0x1, 0x0);
        gbc.writeMem(0x40eb, { 0x99 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1d1d, gbc.sp());
        EXPECT(0x40ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02B4
        gbc.setState(0xc5db, 0x2d18, 0xc9f0, 0x73c5, 0x64ce, 0x5db7, 0x1, 0x0);
        gbc.writeMem(0xc5db, { 0x99 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2d18, gbc.sp());
        EXPECT(0xc5dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc5db));
        // 99 02B5
        gbc.setState(0x2589, 0x3b04, 0xe630, 0xc231, 0xfd0a, 0x11dd, 0x1, 0x1);
        gbc.writeMem(0x2589, { 0x99 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3b04, gbc.sp());
        EXPECT(0x258a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02B6
        gbc.setState(0x6a78, 0xb0c2, 0xdb80, 0x4ec3, 0x9d01, 0x3a2d, 0x1, 0x1);
        gbc.writeMem(0x6a78, { 0x99 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb0c2, gbc.sp());
        EXPECT(0x6a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02B7
        gbc.setState(0x68de, 0x9cac, 0x7f60, 0x1619, 0x4925, 0xb86f, 0x0, 0x0);
        gbc.writeMem(0x68de, { 0x99 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9cac, gbc.sp());
        EXPECT(0x68df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02B8
        gbc.setState(0x26c5, 0x64b7, 0x72d0, 0x261b, 0xc8f6, 0x828a, 0x0, 0x0);
        gbc.writeMem(0x26c5, { 0x99 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x64b7, gbc.sp());
        EXPECT(0x26c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02B9
        gbc.setState(0x8a9d, 0x911b, 0xfb10, 0xa6fd, 0x8aec, 0xae3a, 0x0, 0x0);
        gbc.writeMem(0x8a9d, { 0x99 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x911b, gbc.sp());
        EXPECT(0x8a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8a9d));
        // 99 02BA
        gbc.setState(0x2160, 0x8e62, 0xf7d0, 0x7191, 0x9fc7, 0xcf4a, 0x0, 0x1);
        gbc.writeMem(0x2160, { 0x99 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8e62, gbc.sp());
        EXPECT(0x2161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02BB
        gbc.setState(0x440e, 0x5a0f, 0x2200, 0x52e0, 0xfe28, 0xd7f, 0x1, 0x0);
        gbc.writeMem(0x440e, { 0x99 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5a0f, gbc.sp());
        EXPECT(0x440f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02BC
        gbc.setState(0x5c0c, 0x5c76, 0xdfb0, 0x4ea, 0x7de4, 0x904f, 0x0, 0x1);
        gbc.writeMem(0x5c0c, { 0x99 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5c76, gbc.sp());
        EXPECT(0x5c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02BD
        gbc.setState(0x9ee1, 0xb237, 0x1260, 0xaa56, 0x56d, 0x87a, 0x1, 0x1);
        gbc.writeMem(0x9ee1, { 0x99 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb237, gbc.sp());
        EXPECT(0x9ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9ee1));
        // 99 02BE
        gbc.setState(0x87f7, 0x82f0, 0xa760, 0x51e7, 0xb732, 0x9006, 0x1, 0x0);
        gbc.writeMem(0x87f7, { 0x99 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x82f0, gbc.sp());
        EXPECT(0x87f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x87f7));
        // 99 02BF
        gbc.setState(0x5189, 0xc11e, 0xd1e0, 0xaeda, 0xa05f, 0xb55e, 0x1, 0x0);
        gbc.writeMem(0x5189, { 0x99 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc11e, gbc.sp());
        EXPECT(0x518a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02C0
        gbc.setState(0xe7c3, 0xad00, 0xae70, 0xa4a6, 0xdaf1, 0x11d9, 0x1, 0x1);
        gbc.writeMem(0xe7c3, { 0x99 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xad00, gbc.sp());
        EXPECT(0xe7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe7c3));
        // 99 02C2
        gbc.setState(0x2441, 0xf213, 0x9d00, 0x43d5, 0x49d0, 0xc4f6, 0x1, 0x1);
        gbc.writeMem(0x2441, { 0x99 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf213, gbc.sp());
        EXPECT(0x2442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02C3
        gbc.setState(0x12c8, 0x89f8, 0xa2c0, 0x6301, 0x2f15, 0x50ca, 0x0, 0x0);
        gbc.writeMem(0x12c8, { 0x99 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x89f8, gbc.sp());
        EXPECT(0x12c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02C4
        gbc.setState(0x1cb9, 0x6034, 0xd2e0, 0x2929, 0x8477, 0xb0fb, 0x0, 0x1);
        gbc.writeMem(0x1cb9, { 0x99 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6034, gbc.sp());
        EXPECT(0x1cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02C5
        gbc.setState(0xb90d, 0x47a2, 0x1c50, 0x2e7, 0x19eb, 0x3074, 0x1, 0x1);
        gbc.writeMem(0xb90d, { 0x99 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x47a2, gbc.sp());
        EXPECT(0xb90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb90d));
        // 99 02C6
        gbc.setState(0xc00b, 0xce59, 0x97f0, 0xfed, 0xb462, 0x9d8a, 0x1, 0x0);
        gbc.writeMem(0xc00b, { 0x99 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xce59, gbc.sp());
        EXPECT(0xc00c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc00b));
        // 99 02C7
        gbc.setState(0x89e3, 0xd1c8, 0x7b60, 0x88c8, 0xa0c1, 0xec5c, 0x0, 0x0);
        gbc.writeMem(0x89e3, { 0x99 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd1c8, gbc.sp());
        EXPECT(0x89e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x89e3));
        // 99 02C8
        gbc.setState(0x8cab, 0x23db, 0x98b0, 0xa2e0, 0x89d4, 0xb8c6, 0x1, 0x1);
        gbc.writeMem(0x8cab, { 0x99 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x23db, gbc.sp());
        EXPECT(0x8cac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8cab));
        // 99 02C9
        gbc.setState(0x301, 0xde92, 0x2190, 0xd47d, 0x64c3, 0xabc5, 0x1, 0x0);
        gbc.writeMem(0x301, { 0x99 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xde92, gbc.sp());
        EXPECT(0x302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02CA
        gbc.setState(0x4bc0, 0x8f53, 0xa840, 0x4ef1, 0xcf74, 0x88cd, 0x1, 0x0);
        gbc.writeMem(0x4bc0, { 0x99 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8f53, gbc.sp());
        EXPECT(0x4bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02CB
        gbc.setState(0x6609, 0x3a09, 0xd700, 0xf848, 0x9c0, 0x8094, 0x1, 0x0);
        gbc.writeMem(0x6609, { 0x99 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3a09, gbc.sp());
        EXPECT(0x660a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02CC
        gbc.setState(0xd14d, 0xe79f, 0x2db0, 0x1866, 0x1d7d, 0x619a, 0x0, 0x1);
        gbc.writeMem(0xd14d, { 0x99 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe79f, gbc.sp());
        EXPECT(0xd14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd14d));
        // 99 02CD
        gbc.setState(0xd0af, 0xeb5d, 0x2170, 0x3aaf, 0xdfee, 0xe74f, 0x0, 0x1);
        gbc.writeMem(0xd0af, { 0x99 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xeb5d, gbc.sp());
        EXPECT(0xd0b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd0af));
        // 99 02CE
        gbc.setState(0x7d92, 0x6c03, 0xc390, 0x7139, 0x8e9b, 0xb33b, 0x0, 0x0);
        gbc.writeMem(0x7d92, { 0x99 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6c03, gbc.sp());
        EXPECT(0x7d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02CF
        gbc.setState(0xa827, 0x877f, 0x110, 0xd542, 0x818f, 0xdfe1, 0x0, 0x0);
        gbc.writeMem(0xa827, { 0x99 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x877f, gbc.sp());
        EXPECT(0xa828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa827));
        // 99 02D0
        gbc.setState(0xaafc, 0x3a6a, 0x12a0, 0x9885, 0x5044, 0xf123, 0x0, 0x1);
        gbc.writeMem(0xaafc, { 0x99 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3a6a, gbc.sp());
        EXPECT(0xaafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xaafc));
        // 99 02D1
        gbc.setState(0x78b7, 0x791e, 0x4f00, 0xa764, 0x7511, 0x1f7e, 0x1, 0x1);
        gbc.writeMem(0x78b7, { 0x99 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x791e, gbc.sp());
        EXPECT(0x78b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02D2
        gbc.setState(0xad3e, 0x88f0, 0x2530, 0xd9bc, 0x53c3, 0x1dd, 0x1, 0x1);
        gbc.writeMem(0xad3e, { 0x99 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x88f0, gbc.sp());
        EXPECT(0xad3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xad3e));
        // 99 02D4
        gbc.setState(0xab6b, 0x4e5c, 0x9f0, 0x936c, 0x34e9, 0xd543, 0x1, 0x0);
        gbc.writeMem(0xab6b, { 0x99 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4e5c, gbc.sp());
        EXPECT(0xab6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xab6b));
        // 99 02D5
        gbc.setState(0x2e70, 0xfee1, 0x2f20, 0x13b6, 0x38b3, 0x23bd, 0x0, 0x1);
        gbc.writeMem(0x2e70, { 0x99 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfee1, gbc.sp());
        EXPECT(0x2e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02D7
        gbc.setState(0x22d6, 0x5953, 0x1640, 0x9067, 0xaa21, 0xaa44, 0x1, 0x0);
        gbc.writeMem(0x22d6, { 0x99 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5953, gbc.sp());
        EXPECT(0x22d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02D9
        gbc.setState(0x9df8, 0xe47a, 0x42c0, 0xbc89, 0x3b5f, 0x2013, 0x1, 0x1);
        gbc.writeMem(0x9df8, { 0x99 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe47a, gbc.sp());
        EXPECT(0x9df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9df8));
        // 99 02DA
        gbc.setState(0x35bf, 0x204, 0xc830, 0x6d1b, 0x52e0, 0xad39, 0x0, 0x0);
        gbc.writeMem(0x35bf, { 0x99 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x204, gbc.sp());
        EXPECT(0x35c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02DB
        gbc.setState(0x6883, 0xdcc8, 0x66c0, 0xf507, 0x7708, 0x3c7d, 0x1, 0x0);
        gbc.writeMem(0x6883, { 0x99 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdcc8, gbc.sp());
        EXPECT(0x6884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02DC
        gbc.setState(0xe3ed, 0x30a1, 0x1d20, 0xc96b, 0x76f3, 0xd339, 0x1, 0x1);
        gbc.writeMem(0xe3ed, { 0x99 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x30a1, gbc.sp());
        EXPECT(0xe3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe3ed));
        // 99 02DD
        gbc.setState(0x4cf, 0x8322, 0x6a50, 0x4bb3, 0x1e50, 0x766e, 0x1, 0x1);
        gbc.writeMem(0x4cf, { 0x99 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8322, gbc.sp());
        EXPECT(0x4d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02DE
        gbc.setState(0xa703, 0xce8d, 0xbf50, 0xd9a6, 0xbd0e, 0x6746, 0x0, 0x1);
        gbc.writeMem(0xa703, { 0x99 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xce8d, gbc.sp());
        EXPECT(0xa704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa703));
        // 99 02DF
        gbc.setState(0xe7df, 0x77e9, 0x6040, 0x47c0, 0x88af, 0x5007, 0x0, 0x0);
        gbc.writeMem(0xe7df, { 0x99 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x77e9, gbc.sp());
        EXPECT(0xe7e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe7df));
        // 99 02E0
        gbc.setState(0x7c82, 0x2782, 0xd070, 0x1658, 0xb6c2, 0x8ffd, 0x0, 0x1);
        gbc.writeMem(0x7c82, { 0x99 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2782, gbc.sp());
        EXPECT(0x7c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02E1
        gbc.setState(0x8982, 0x238f, 0x7920, 0xf898, 0xc5f4, 0x7cac, 0x1, 0x1);
        gbc.writeMem(0x8982, { 0x99 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x238f, gbc.sp());
        EXPECT(0x8983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8982));
        // 99 02E2
        gbc.setState(0x92, 0xda42, 0x3ee0, 0x962c, 0xea4e, 0x5a30, 0x1, 0x0);
        gbc.writeMem(0x92, { 0x99 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xda42, gbc.sp());
        EXPECT(0x93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02E3
        gbc.setState(0xbff0, 0xf22c, 0x970, 0xe55c, 0xe93e, 0x94a1, 0x0, 0x0);
        gbc.writeMem(0xbff0, { 0x99 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf22c, gbc.sp());
        EXPECT(0xbff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbff0));
        // 99 02E4
        gbc.setState(0x3533, 0xe0d0, 0x46a0, 0x413, 0x4a9a, 0x2064, 0x1, 0x0);
        gbc.writeMem(0x3533, { 0x99 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe0d0, gbc.sp());
        EXPECT(0x3534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02E5
        gbc.setState(0x269e, 0xcd28, 0xca80, 0x71a0, 0x66a, 0x16cd, 0x0, 0x0);
        gbc.writeMem(0x269e, { 0x99 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcd28, gbc.sp());
        EXPECT(0x269f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02E6
        gbc.setState(0x3458, 0x8b5b, 0xa180, 0x2433, 0xcf3a, 0x6bba, 0x1, 0x1);
        gbc.writeMem(0x3458, { 0x99 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8b5b, gbc.sp());
        EXPECT(0x3459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02E7
        gbc.setState(0x3b7, 0x835f, 0x1ac0, 0x9204, 0x1be8, 0x81ba, 0x1, 0x1);
        gbc.writeMem(0x3b7, { 0x99 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x835f, gbc.sp());
        EXPECT(0x3b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02E8
        gbc.setState(0x6b5a, 0xdd53, 0xa3f0, 0xd093, 0x9ab6, 0xd8d3, 0x0, 0x0);
        gbc.writeMem(0x6b5a, { 0x99 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdd53, gbc.sp());
        EXPECT(0x6b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02E9
        gbc.setState(0xd5b5, 0xa31f, 0x8a00, 0x3025, 0x7fc1, 0xcbfd, 0x1, 0x1);
        gbc.writeMem(0xd5b5, { 0x99 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa31f, gbc.sp());
        EXPECT(0xd5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd5b5));
        // 99 02EA
        gbc.setState(0x2ade, 0x58fa, 0x5fb0, 0xcc56, 0x125c, 0x85b2, 0x1, 0x1);
        gbc.writeMem(0x2ade, { 0x99 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x58fa, gbc.sp());
        EXPECT(0x2adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02EB
        gbc.setState(0xe3f1, 0x17ad, 0xd820, 0x5ab9, 0xd458, 0x582, 0x0, 0x1);
        gbc.writeMem(0xe3f1, { 0x99 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x17ad, gbc.sp());
        EXPECT(0xe3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe3f1));
        // 99 02EC
        gbc.setState(0xefd8, 0x5a0f, 0xb780, 0xf37f, 0xc9b7, 0xa370, 0x0, 0x0);
        gbc.writeMem(0xefd8, { 0x99 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5a0f, gbc.sp());
        EXPECT(0xefd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xefd8));
        // 99 02ED
        gbc.setState(0x19c1, 0x10b6, 0x2bf0, 0xb50d, 0xad97, 0xa4a7, 0x0, 0x1);
        gbc.writeMem(0x19c1, { 0x99 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x10b6, gbc.sp());
        EXPECT(0x19c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02EE
        gbc.setState(0xd049, 0x595f, 0xdbf0, 0xe64f, 0x44ad, 0xc0ed, 0x0, 0x0);
        gbc.writeMem(0xd049, { 0x99 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x595f, gbc.sp());
        EXPECT(0xd04a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd049));
        // 99 02EF
        gbc.setState(0x3345, 0x160c, 0xde30, 0x2dd3, 0x81e, 0x7590, 0x0, 0x1);
        gbc.writeMem(0x3345, { 0x99 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x160c, gbc.sp());
        EXPECT(0x3346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02F0
        gbc.setState(0x261b, 0xe45e, 0xe560, 0x8736, 0x8fa, 0xea3b, 0x1, 0x1);
        gbc.writeMem(0x261b, { 0x99 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe45e, gbc.sp());
        EXPECT(0x261c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02F1
        gbc.setState(0x5c6d, 0x58e7, 0x6b60, 0x4dd, 0x66ac, 0x1a87, 0x1, 0x1);
        gbc.writeMem(0x5c6d, { 0x99 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x58e7, gbc.sp());
        EXPECT(0x5c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 02F2
        gbc.setState(0xcb3c, 0x7a88, 0xccf0, 0x3da0, 0x92c7, 0x303, 0x1, 0x0);
        gbc.writeMem(0xcb3c, { 0x99 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7a88, gbc.sp());
        EXPECT(0xcb3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcb3c));
        // 99 02F3
        gbc.setState(0x341d, 0x6736, 0x8810, 0x6b58, 0xea7d, 0x259, 0x0, 0x0);
        gbc.writeMem(0x341d, { 0x99 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6736, gbc.sp());
        EXPECT(0x341e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02F4
        gbc.setState(0xc2d9, 0x44d5, 0x3f40, 0x8574, 0xa155, 0x7e95, 0x1, 0x0);
        gbc.writeMem(0xc2d9, { 0x99 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x44d5, gbc.sp());
        EXPECT(0xc2da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc2d9));
        // 99 02F5
        gbc.setState(0xba40, 0xe129, 0xbd40, 0xf5e4, 0xa316, 0x76a2, 0x0, 0x0);
        gbc.writeMem(0xba40, { 0x99 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe129, gbc.sp());
        EXPECT(0xba41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xba40));
        // 99 02F6
        gbc.setState(0x9b9d, 0x6f3, 0x9ae0, 0x2dae, 0x5ccf, 0xe59c, 0x0, 0x0);
        gbc.writeMem(0x9b9d, { 0x99 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6f3, gbc.sp());
        EXPECT(0x9b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9b9d));
        // 99 02F7
        gbc.setState(0xde2b, 0xad6b, 0x6250, 0x39be, 0x764f, 0xf533, 0x0, 0x1);
        gbc.writeMem(0xde2b, { 0x99 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xad6b, gbc.sp());
        EXPECT(0xde2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xde2b));
        // 99 02F8
        gbc.setState(0xa9d0, 0xd6f0, 0x9820, 0x74e9, 0x113a, 0xf0a7, 0x0, 0x1);
        gbc.writeMem(0xa9d0, { 0x99 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd6f0, gbc.sp());
        EXPECT(0xa9d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa9d0));
        // 99 02F9
        gbc.setState(0x5592, 0x66e2, 0x58d0, 0x990a, 0xcd54, 0xad42, 0x0, 0x0);
        gbc.writeMem(0x5592, { 0x99 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x66e2, gbc.sp());
        EXPECT(0x5593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02FA
        gbc.setState(0xd23, 0x14d6, 0xfd30, 0x563f, 0x42b7, 0x16b7, 0x0, 0x0);
        gbc.writeMem(0xd23, { 0x99 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x14d6, gbc.sp());
        EXPECT(0xd24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02FB
        gbc.setState(0xa316, 0x7e4e, 0x9b80, 0x2d96, 0x92fe, 0xd45a, 0x1, 0x0);
        gbc.writeMem(0xa316, { 0x99 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7e4e, gbc.sp());
        EXPECT(0xa317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa316));
        // 99 02FC
        gbc.setState(0x999e, 0xe944, 0xe770, 0xba11, 0x2f8d, 0xfaed, 0x0, 0x1);
        gbc.writeMem(0x999e, { 0x99 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe944, gbc.sp());
        EXPECT(0x999f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x999e));
        // 99 02FD
        gbc.setState(0x3739, 0x3600, 0xca90, 0xb684, 0x2115, 0xb67, 0x1, 0x1);
        gbc.writeMem(0x3739, { 0x99 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3600, gbc.sp());
        EXPECT(0x373a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 02FE
        gbc.setState(0x91f0, 0xfe23, 0x1f30, 0xce71, 0x9509, 0xddda, 0x0, 0x0);
        gbc.writeMem(0x91f0, { 0x99 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfe23, gbc.sp());
        EXPECT(0x91f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x91f0));
        // 99 02FF
        gbc.setState(0xc965, 0x6690, 0x9a20, 0x5482, 0x65b4, 0x8fd3, 0x1, 0x1);
        gbc.writeMem(0xc965, { 0x99 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6690, gbc.sp());
        EXPECT(0xc966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc965));
        // 99 0300
        gbc.setState(0xeefa, 0x61f4, 0x2690, 0xb26b, 0xedee, 0xbd80, 0x0, 0x0);
        gbc.writeMem(0xeefa, { 0x99 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x61f4, gbc.sp());
        EXPECT(0xeefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xeefa));
        // 99 0301
        gbc.setState(0x4c7f, 0x9aab, 0xb480, 0xbd9e, 0xa9d9, 0x71c3, 0x1, 0x0);
        gbc.writeMem(0x4c7f, { 0x99 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9aab, gbc.sp());
        EXPECT(0x4c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0302
        gbc.setState(0x88ed, 0x3145, 0x1840, 0xab49, 0xfa80, 0x9cfc, 0x0, 0x0);
        gbc.writeMem(0x88ed, { 0x99 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3145, gbc.sp());
        EXPECT(0x88ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x88ed));
        // 99 0303
        gbc.setState(0x846a, 0x8518, 0x1c30, 0xd2aa, 0xda9c, 0x977b, 0x0, 0x0);
        gbc.writeMem(0x846a, { 0x99 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8518, gbc.sp());
        EXPECT(0x846b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x846a));
        // 99 0304
        gbc.setState(0x5b77, 0x4605, 0x3070, 0x6fc4, 0x4ac7, 0x9f0c, 0x1, 0x0);
        gbc.writeMem(0x5b77, { 0x99 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4605, gbc.sp());
        EXPECT(0x5b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0305
        gbc.setState(0xa761, 0xe7e8, 0x1d70, 0x44fd, 0xffce, 0x2475, 0x1, 0x1);
        gbc.writeMem(0xa761, { 0x99 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe7e8, gbc.sp());
        EXPECT(0xa762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa761));
        // 99 0306
        gbc.setState(0x7616, 0x2a89, 0x1290, 0xb83a, 0xd609, 0x7292, 0x1, 0x1);
        gbc.writeMem(0x7616, { 0x99 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2a89, gbc.sp());
        EXPECT(0x7617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0307
        gbc.setState(0x476b, 0x7968, 0xed0, 0xf279, 0xdbd9, 0x8b24, 0x0, 0x1);
        gbc.writeMem(0x476b, { 0x99 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7968, gbc.sp());
        EXPECT(0x476c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0308
        gbc.setState(0xe02f, 0xb7cf, 0xb940, 0xe989, 0x68af, 0xcd9, 0x1, 0x0);
        gbc.writeMem(0xe02f, { 0x99 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb7cf, gbc.sp());
        EXPECT(0xe030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe02f));
        // 99 0309
        gbc.setState(0x26ed, 0x78b0, 0xc4f0, 0x6d6b, 0x58ad, 0xac8b, 0x0, 0x1);
        gbc.writeMem(0x26ed, { 0x99 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x78b0, gbc.sp());
        EXPECT(0x26ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 030B
        gbc.setState(0x75f0, 0xf1eb, 0xaf30, 0x7223, 0x8a9e, 0xb5bf, 0x1, 0x0);
        gbc.writeMem(0x75f0, { 0x99 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf1eb, gbc.sp());
        EXPECT(0x75f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 030C
        gbc.setState(0x9583, 0x4eb8, 0x1000, 0x31ac, 0x6697, 0xc3f2, 0x0, 0x0);
        gbc.writeMem(0x9583, { 0x99 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4eb8, gbc.sp());
        EXPECT(0x9584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9583));
        // 99 030D
        gbc.setState(0x7527, 0x80aa, 0x2400, 0x1c2, 0xef2a, 0x6337, 0x1, 0x1);
        gbc.writeMem(0x7527, { 0x99 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x80aa, gbc.sp());
        EXPECT(0x7528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 030E
        gbc.setState(0x44b6, 0x2d65, 0x2840, 0x9c16, 0xa6ef, 0x689a, 0x0, 0x0);
        gbc.writeMem(0x44b6, { 0x99 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2d65, gbc.sp());
        EXPECT(0x44b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0310
        gbc.setState(0x87e7, 0xe672, 0x46b0, 0xb130, 0x3cac, 0x9f7c, 0x1, 0x1);
        gbc.writeMem(0x87e7, { 0x99 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe672, gbc.sp());
        EXPECT(0x87e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x87e7));
        // 99 0311
        gbc.setState(0xa81f, 0x46f4, 0x63b0, 0x5790, 0xace0, 0xa088, 0x0, 0x0);
        gbc.writeMem(0xa81f, { 0x99 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x46f4, gbc.sp());
        EXPECT(0xa820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa81f));
        // 99 0312
        gbc.setState(0xba32, 0xbfb3, 0x86d0, 0x27ea, 0xcd6a, 0x51d9, 0x1, 0x1);
        gbc.writeMem(0xba32, { 0x99 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbfb3, gbc.sp());
        EXPECT(0xba33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xba32));
        // 99 0313
        gbc.setState(0xd7f6, 0x3e32, 0x2540, 0xc2de, 0x294f, 0xbf7b, 0x1, 0x1);
        gbc.writeMem(0xd7f6, { 0x99 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3e32, gbc.sp());
        EXPECT(0xd7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd7f6));
        // 99 0315
        gbc.setState(0xbadd, 0xdf5, 0x2c0, 0x304, 0xde70, 0x2151, 0x1, 0x0);
        gbc.writeMem(0xbadd, { 0x99 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdf5, gbc.sp());
        EXPECT(0xbade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbadd));
        // 99 0316
        gbc.setState(0x755c, 0x88ac, 0x70b0, 0x8ad6, 0x36d7, 0x5e35, 0x1, 0x0);
        gbc.writeMem(0x755c, { 0x99 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x88ac, gbc.sp());
        EXPECT(0x755d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0317
        gbc.setState(0x332f, 0xb8d7, 0x9d90, 0x6746, 0x6496, 0x46c8, 0x1, 0x1);
        gbc.writeMem(0x332f, { 0x99 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb8d7, gbc.sp());
        EXPECT(0x3330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0318
        gbc.setState(0x971c, 0x3a5, 0xccf0, 0xdd8d, 0xb519, 0x9206, 0x0, 0x0);
        gbc.writeMem(0x971c, { 0x99 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3a5, gbc.sp());
        EXPECT(0x971d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x971c));
        // 99 0319
        gbc.setState(0xe3e4, 0x4fa7, 0x5c20, 0x23a5, 0x1c17, 0xa469, 0x0, 0x0);
        gbc.writeMem(0xe3e4, { 0x99 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4fa7, gbc.sp());
        EXPECT(0xe3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe3e4));
        // 99 031A
        gbc.setState(0x6314, 0x1fc9, 0x9ec0, 0xbf80, 0xfb59, 0xf699, 0x0, 0x1);
        gbc.writeMem(0x6314, { 0x99 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1fc9, gbc.sp());
        EXPECT(0x6315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 031B
        gbc.setState(0x3fa9, 0x1f81, 0x5060, 0x65fe, 0x6a3c, 0x492c, 0x0, 0x0);
        gbc.writeMem(0x3fa9, { 0x99 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1f81, gbc.sp());
        EXPECT(0x3faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 031C
        gbc.setState(0x2714, 0xf290, 0x47c0, 0xd3e3, 0xef0f, 0x8be6, 0x0, 0x1);
        gbc.writeMem(0x2714, { 0x99 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf290, gbc.sp());
        EXPECT(0x2715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 031D
        gbc.setState(0x458d, 0x6bd1, 0x3200, 0x35b0, 0x8849, 0x5c0c, 0x0, 0x1);
        gbc.writeMem(0x458d, { 0x99 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6bd1, gbc.sp());
        EXPECT(0x458e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 031E
        gbc.setState(0x58d1, 0x406a, 0x3cf0, 0xb678, 0x7718, 0x57b3, 0x1, 0x1);
        gbc.writeMem(0x58d1, { 0x99 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x406a, gbc.sp());
        EXPECT(0x58d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 031F
        gbc.setState(0xcee5, 0x447e, 0xa320, 0x2cdf, 0xfd, 0x9f1a, 0x0, 0x0);
        gbc.writeMem(0xcee5, { 0x99 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x447e, gbc.sp());
        EXPECT(0xcee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcee5));
        // 99 0320
        gbc.setState(0x82db, 0xba40, 0xc780, 0x371c, 0x3215, 0x77ec, 0x0, 0x1);
        gbc.writeMem(0x82db, { 0x99 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xba40, gbc.sp());
        EXPECT(0x82dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x82db));
        // 99 0321
        gbc.setState(0x72c8, 0x7801, 0x5760, 0xbe4a, 0xee8, 0xf0c2, 0x1, 0x1);
        gbc.writeMem(0x72c8, { 0x99 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7801, gbc.sp());
        EXPECT(0x72c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0322
        gbc.setState(0x8c72, 0x3e76, 0x89d0, 0x49c4, 0xb83b, 0xe38, 0x1, 0x1);
        gbc.writeMem(0x8c72, { 0x99 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3e76, gbc.sp());
        EXPECT(0x8c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8c72));
        // 99 0323
        gbc.setState(0x9e58, 0x5a17, 0x6860, 0x70ad, 0xee58, 0xef57, 0x1, 0x1);
        gbc.writeMem(0x9e58, { 0x99 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5a17, gbc.sp());
        EXPECT(0x9e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9e58));
        // 99 0324
        gbc.setState(0x3e68, 0x8f7, 0xabe0, 0xa4e, 0x1856, 0x767, 0x1, 0x1);
        gbc.writeMem(0x3e68, { 0x99 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8f7, gbc.sp());
        EXPECT(0x3e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0325
        gbc.setState(0xa425, 0x107c, 0x6080, 0x7198, 0x36d6, 0x1d5b, 0x1, 0x1);
        gbc.writeMem(0xa425, { 0x99 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x107c, gbc.sp());
        EXPECT(0xa426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa425));
        // 99 0326
        gbc.setState(0xa5fa, 0xa7f0, 0x64f0, 0x7cb8, 0x2b70, 0x43f4, 0x0, 0x1);
        gbc.writeMem(0xa5fa, { 0x99 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa7f0, gbc.sp());
        EXPECT(0xa5fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa5fa));
        // 99 0327
        gbc.setState(0xcbd6, 0x5b00, 0x3690, 0x87fd, 0x472c, 0x1c78, 0x0, 0x0);
        gbc.writeMem(0xcbd6, { 0x99 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5b00, gbc.sp());
        EXPECT(0xcbd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcbd6));
        // 99 0328
        gbc.setState(0x4c7d, 0x6bcf, 0xfba0, 0x9d7f, 0x9e7a, 0xc90e, 0x0, 0x0);
        gbc.writeMem(0x4c7d, { 0x99 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6bcf, gbc.sp());
        EXPECT(0x4c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0329
        gbc.setState(0x143b, 0xb721, 0xc170, 0x296, 0x9405, 0x276c, 0x0, 0x0);
        gbc.writeMem(0x143b, { 0x99 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb721, gbc.sp());
        EXPECT(0x143c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 032A
        gbc.setState(0xe4ae, 0x6114, 0xd170, 0x606f, 0xf6b7, 0xd83c, 0x0, 0x0);
        gbc.writeMem(0xe4ae, { 0x99 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6114, gbc.sp());
        EXPECT(0xe4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe4ae));
        // 99 032B
        gbc.setState(0x4f11, 0xcf24, 0xaf30, 0x2320, 0x15c9, 0x25d8, 0x0, 0x0);
        gbc.writeMem(0x4f11, { 0x99 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcf24, gbc.sp());
        EXPECT(0x4f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 032D
        gbc.setState(0x7af8, 0x7f2a, 0x9460, 0x15d8, 0xb7d7, 0xd346, 0x0, 0x1);
        gbc.writeMem(0x7af8, { 0x99 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7f2a, gbc.sp());
        EXPECT(0x7af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 032E
        gbc.setState(0xe583, 0xe924, 0x5260, 0x2198, 0x386d, 0xd97a, 0x1, 0x1);
        gbc.writeMem(0xe583, { 0x99 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe924, gbc.sp());
        EXPECT(0xe584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe583));
        // 99 032F
        gbc.setState(0x6185, 0x9ae8, 0x7a50, 0xb5a2, 0x1c81, 0x8f96, 0x0, 0x0);
        gbc.writeMem(0x6185, { 0x99 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9ae8, gbc.sp());
        EXPECT(0x6186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0330
        gbc.setState(0x22e1, 0x61ff, 0x1820, 0x8902, 0xc387, 0x2cef, 0x1, 0x0);
        gbc.writeMem(0x22e1, { 0x99 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x61ff, gbc.sp());
        EXPECT(0x22e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0331
        gbc.setState(0x8d56, 0x5bb9, 0x4f60, 0xae4, 0x31e, 0xab62, 0x0, 0x0);
        gbc.writeMem(0x8d56, { 0x99 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5bb9, gbc.sp());
        EXPECT(0x8d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8d56));
        // 99 0332
        gbc.setState(0x9acd, 0x5429, 0x1830, 0xedf6, 0x3bea, 0x1d11, 0x0, 0x1);
        gbc.writeMem(0x9acd, { 0x99 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5429, gbc.sp());
        EXPECT(0x9ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9acd));
        // 99 0333
        gbc.setState(0x23d, 0xbed9, 0xd4b0, 0x4bb9, 0x8bcc, 0x2a7, 0x1, 0x1);
        gbc.writeMem(0x23d, { 0x99 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbed9, gbc.sp());
        EXPECT(0x23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0334
        gbc.setState(0x25be, 0x40b4, 0x3c30, 0xa6fb, 0x4b3d, 0xe4b4, 0x1, 0x1);
        gbc.writeMem(0x25be, { 0x99 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x40b4, gbc.sp());
        EXPECT(0x25bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0335
        gbc.setState(0x374, 0x6ef5, 0xcc0, 0x410b, 0x96e6, 0xd459, 0x1, 0x1);
        gbc.writeMem(0x374, { 0x99 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6ef5, gbc.sp());
        EXPECT(0x375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0336
        gbc.setState(0xa40d, 0x907f, 0x4510, 0xfa1b, 0x485f, 0xc873, 0x1, 0x1);
        gbc.writeMem(0xa40d, { 0x99 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x907f, gbc.sp());
        EXPECT(0xa40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa40d));
        // 99 0337
        gbc.setState(0xb8b5, 0x8c98, 0x4700, 0x2d7b, 0xa22c, 0xcd17, 0x1, 0x1);
        gbc.writeMem(0xb8b5, { 0x99 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8c98, gbc.sp());
        EXPECT(0xb8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb8b5));
        // 99 0338
        gbc.setState(0x437c, 0xf7d8, 0x8140, 0x2944, 0x45fd, 0x4cb4, 0x0, 0x1);
        gbc.writeMem(0x437c, { 0x99 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf7d8, gbc.sp());
        EXPECT(0x437d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0339
        gbc.setState(0x62dd, 0xb1aa, 0x1e00, 0xd1e7, 0x7a8b, 0x1fba, 0x1, 0x0);
        gbc.writeMem(0x62dd, { 0x99 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb1aa, gbc.sp());
        EXPECT(0x62de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 033A
        gbc.setState(0xc6da, 0x6855, 0x8bb0, 0xe260, 0x7fa0, 0xe0b1, 0x1, 0x0);
        gbc.writeMem(0xc6da, { 0x99 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6855, gbc.sp());
        EXPECT(0xc6db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc6da));
        // 99 033B
        gbc.setState(0xaa11, 0x32c8, 0x7330, 0xb0b5, 0xceab, 0xeea1, 0x0, 0x1);
        gbc.writeMem(0xaa11, { 0x99 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x32c8, gbc.sp());
        EXPECT(0xaa12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xaa11));
        // 99 033C
        gbc.setState(0x25e8, 0xc2ae, 0x2ab0, 0xe278, 0xde84, 0xe833, 0x1, 0x1);
        gbc.writeMem(0x25e8, { 0x99 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc2ae, gbc.sp());
        EXPECT(0x25e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 033D
        gbc.setState(0x1f6a, 0xd08d, 0xf5a0, 0x4447, 0x84c8, 0xd3a, 0x1, 0x0);
        gbc.writeMem(0x1f6a, { 0x99 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd08d, gbc.sp());
        EXPECT(0x1f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 033E
        gbc.setState(0x234f, 0x74a2, 0xb550, 0x6c74, 0x9d14, 0x68b9, 0x0, 0x1);
        gbc.writeMem(0x234f, { 0x99 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x74a2, gbc.sp());
        EXPECT(0x2350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 033F
        gbc.setState(0xe0d4, 0x7bf, 0xae80, 0x28f4, 0x109b, 0xaecb, 0x1, 0x0);
        gbc.writeMem(0xe0d4, { 0x99 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7bf, gbc.sp());
        EXPECT(0xe0d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe0d4));
        // 99 0340
        gbc.setState(0xabd4, 0x5750, 0x8da0, 0xb787, 0x17ae, 0x9988, 0x1, 0x0);
        gbc.writeMem(0xabd4, { 0x99 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5750, gbc.sp());
        EXPECT(0xabd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xabd4));
        // 99 0341
        gbc.setState(0x5553, 0x7496, 0x70b0, 0xec5f, 0xf691, 0x382, 0x0, 0x0);
        gbc.writeMem(0x5553, { 0x99 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7496, gbc.sp());
        EXPECT(0x5554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0342
        gbc.setState(0x8d6a, 0x2b57, 0x8ec0, 0x20ed, 0xc51c, 0xa3bf, 0x0, 0x1);
        gbc.writeMem(0x8d6a, { 0x99 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2b57, gbc.sp());
        EXPECT(0x8d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8d6a));
        // 99 0343
        gbc.setState(0x49e6, 0x8719, 0x3cd0, 0x4c9b, 0xeca6, 0x9979, 0x0, 0x0);
        gbc.writeMem(0x49e6, { 0x99 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8719, gbc.sp());
        EXPECT(0x49e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0345
        gbc.setState(0xd960, 0x43f0, 0x4920, 0x84c2, 0xa631, 0x8f, 0x1, 0x0);
        gbc.writeMem(0xd960, { 0x99 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x43f0, gbc.sp());
        EXPECT(0xd961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd960));
        // 99 0346
        gbc.setState(0xd665, 0xe28a, 0x4f00, 0x775f, 0xd2b8, 0x959a, 0x0, 0x0);
        gbc.writeMem(0xd665, { 0x99 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe28a, gbc.sp());
        EXPECT(0xd666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd665));
        // 99 0347
        gbc.setState(0xc326, 0x87ff, 0x1d60, 0x197d, 0xb2ed, 0x5a85, 0x0, 0x0);
        gbc.writeMem(0xc326, { 0x99 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x87ff, gbc.sp());
        EXPECT(0xc327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc326));
        // 99 0348
        gbc.setState(0x6fed, 0x6cc1, 0xae50, 0x2400, 0x744b, 0xa2ff, 0x1, 0x0);
        gbc.writeMem(0x6fed, { 0x99 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6cc1, gbc.sp());
        EXPECT(0x6fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0349
        gbc.setState(0xc86, 0x97d3, 0xe990, 0x4522, 0x4a4c, 0x3df1, 0x0, 0x1);
        gbc.writeMem(0xc86, { 0x99 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x97d3, gbc.sp());
        EXPECT(0xc87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 034A
        gbc.setState(0xcb08, 0x4375, 0x3ff0, 0xdabd, 0xffc1, 0x17c7, 0x0, 0x1);
        gbc.writeMem(0xcb08, { 0x99 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4375, gbc.sp());
        EXPECT(0xcb09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcb08));
        // 99 034C
        gbc.setState(0x6895, 0xb846, 0xe750, 0x7d9b, 0xcf7c, 0xc4d, 0x1, 0x1);
        gbc.writeMem(0x6895, { 0x99 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb846, gbc.sp());
        EXPECT(0x6896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 034D
        gbc.setState(0xabee, 0xacde, 0x7c30, 0xa263, 0x49bd, 0x433c, 0x0, 0x0);
        gbc.writeMem(0xabee, { 0x99 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xacde, gbc.sp());
        EXPECT(0xabef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xabee));
        // 99 034E
        gbc.setState(0xd6e5, 0x8cbb, 0xf8c0, 0xfe8d, 0xbf7e, 0xeff2, 0x0, 0x1);
        gbc.writeMem(0xd6e5, { 0x99 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8cbb, gbc.sp());
        EXPECT(0xd6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd6e5));
        // 99 034F
        gbc.setState(0x4594, 0x8773, 0x9a10, 0xff9, 0x64c2, 0xa1d3, 0x1, 0x1);
        gbc.writeMem(0x4594, { 0x99 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8773, gbc.sp());
        EXPECT(0x4595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0350
        gbc.setState(0x3e9f, 0x5e1b, 0x7900, 0x7125, 0x655a, 0x6c1a, 0x1, 0x1);
        gbc.writeMem(0x3e9f, { 0x99 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5e1b, gbc.sp());
        EXPECT(0x3ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0351
        gbc.setState(0xe86f, 0xe045, 0x2710, 0x44d5, 0xc5b3, 0x1a63, 0x1, 0x1);
        gbc.writeMem(0xe86f, { 0x99 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe045, gbc.sp());
        EXPECT(0xe870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe86f));
        // 99 0352
        gbc.setState(0x7dd4, 0xed7d, 0x9420, 0xb82e, 0x9f, 0xd3d2, 0x1, 0x1);
        gbc.writeMem(0x7dd4, { 0x99 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xed7d, gbc.sp());
        EXPECT(0x7dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0353
        gbc.setState(0x2d2a, 0x22d1, 0x3580, 0xd454, 0xe7cb, 0x7cec, 0x1, 0x0);
        gbc.writeMem(0x2d2a, { 0x99 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x22d1, gbc.sp());
        EXPECT(0x2d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0354
        gbc.setState(0xc10, 0x57bb, 0xaee0, 0x4674, 0x9ea9, 0xf8a1, 0x1, 0x0);
        gbc.writeMem(0xc10, { 0x99 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x57bb, gbc.sp());
        EXPECT(0xc11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0355
        gbc.setState(0x272, 0x950a, 0x4b20, 0x3888, 0xd7b6, 0xf405, 0x0, 0x0);
        gbc.writeMem(0x272, { 0x99 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x950a, gbc.sp());
        EXPECT(0x273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0356
        gbc.setState(0xe0d, 0xd2d0, 0xb8f0, 0x37d1, 0xdcd4, 0x97e6, 0x0, 0x0);
        gbc.writeMem(0xe0d, { 0x99 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd2d0, gbc.sp());
        EXPECT(0xe0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0357
        gbc.setState(0xed6a, 0x9f06, 0xd000, 0x94b8, 0x5597, 0x74d1, 0x1, 0x0);
        gbc.writeMem(0xed6a, { 0x99 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9f06, gbc.sp());
        EXPECT(0xed6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xed6a));
        // 99 0358
        gbc.setState(0xa939, 0x50ef, 0x90b0, 0xf86a, 0xea1b, 0x912e, 0x0, 0x0);
        gbc.writeMem(0xa939, { 0x99 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x50ef, gbc.sp());
        EXPECT(0xa93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa939));
        // 99 035A
        gbc.setState(0x8868, 0xf6da, 0xb0c0, 0x655, 0x459a, 0xe0d, 0x1, 0x1);
        gbc.writeMem(0x8868, { 0x99 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf6da, gbc.sp());
        EXPECT(0x8869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8868));
        // 99 035B
        gbc.setState(0x4408, 0x1eca, 0x4dd0, 0xd5de, 0x9c33, 0xfc61, 0x1, 0x1);
        gbc.writeMem(0x4408, { 0x99 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1eca, gbc.sp());
        EXPECT(0x4409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 035C
        gbc.setState(0x4423, 0x5caa, 0xe790, 0xc9b8, 0xbdcf, 0x16ae, 0x1, 0x0);
        gbc.writeMem(0x4423, { 0x99 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5caa, gbc.sp());
        EXPECT(0x4424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 035D
        gbc.setState(0xc1e2, 0x7920, 0x70b0, 0x36c5, 0xe2a7, 0x3ac7, 0x0, 0x0);
        gbc.writeMem(0xc1e2, { 0x99 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7920, gbc.sp());
        EXPECT(0xc1e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc1e2));
        // 99 035E
        gbc.setState(0x2973, 0x994, 0x98f0, 0x5e35, 0x70a4, 0x935b, 0x0, 0x0);
        gbc.writeMem(0x2973, { 0x99 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x994, gbc.sp());
        EXPECT(0x2974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 035F
        gbc.setState(0x6a70, 0xe078, 0xdf10, 0xb9f3, 0x9a81, 0x46fc, 0x1, 0x1);
        gbc.writeMem(0x6a70, { 0x99 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe078, gbc.sp());
        EXPECT(0x6a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0360
        gbc.setState(0x5257, 0xd473, 0x2a40, 0x9371, 0x176d, 0x2e7b, 0x0, 0x0);
        gbc.writeMem(0x5257, { 0x99 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd473, gbc.sp());
        EXPECT(0x5258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0361
        gbc.setState(0xe824, 0xd158, 0x7100, 0x1c93, 0xf8ab, 0xc37f, 0x0, 0x1);
        gbc.writeMem(0xe824, { 0x99 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd158, gbc.sp());
        EXPECT(0xe825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe824));
        // 99 0362
        gbc.setState(0x11e9, 0xa974, 0x96f0, 0x2b20, 0x50b2, 0xa628, 0x0, 0x1);
        gbc.writeMem(0x11e9, { 0x99 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa974, gbc.sp());
        EXPECT(0x11ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0363
        gbc.setState(0x50, 0xb37b, 0x5530, 0x2e35, 0x5b56, 0xec6a, 0x0, 0x1);
        gbc.writeMem(0x50, { 0x99 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb37b, gbc.sp());
        EXPECT(0x51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0364
        gbc.setState(0x6008, 0x905d, 0xa110, 0x6e77, 0x7dfa, 0x9e89, 0x0, 0x0);
        gbc.writeMem(0x6008, { 0x99 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x905d, gbc.sp());
        EXPECT(0x6009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0365
        gbc.setState(0x374a, 0xabc2, 0x6150, 0x8d91, 0xa2f3, 0x67d4, 0x1, 0x1);
        gbc.writeMem(0x374a, { 0x99 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xabc2, gbc.sp());
        EXPECT(0x374b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0366
        gbc.setState(0xb63e, 0x80b, 0xf480, 0x547f, 0xc069, 0xd05a, 0x0, 0x1);
        gbc.writeMem(0xb63e, { 0x99 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x80b, gbc.sp());
        EXPECT(0xb63f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb63e));
        // 99 0367
        gbc.setState(0x9b46, 0xb055, 0xfe40, 0x961f, 0x1846, 0xc350, 0x1, 0x1);
        gbc.writeMem(0x9b46, { 0x99 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb055, gbc.sp());
        EXPECT(0x9b47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9b46));
        // 99 0368
        gbc.setState(0x5c08, 0x9aa8, 0x1c20, 0x66c8, 0x328c, 0xda3e, 0x0, 0x1);
        gbc.writeMem(0x5c08, { 0x99 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9aa8, gbc.sp());
        EXPECT(0x5c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0369
        gbc.setState(0x96b3, 0xf87b, 0x9db0, 0x3603, 0x153f, 0xcaff, 0x0, 0x1);
        gbc.writeMem(0x96b3, { 0x99 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf87b, gbc.sp());
        EXPECT(0x96b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x96b3));
        // 99 036A
        gbc.setState(0x7502, 0x4ae6, 0x8160, 0x2e1c, 0x79d6, 0xd246, 0x0, 0x0);
        gbc.writeMem(0x7502, { 0x99 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4ae6, gbc.sp());
        EXPECT(0x7503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 036B
        gbc.setState(0xced5, 0x576a, 0x9980, 0x1984, 0x75b2, 0x9d78, 0x1, 0x1);
        gbc.writeMem(0xced5, { 0x99 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x576a, gbc.sp());
        EXPECT(0xced6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xced5));
        // 99 036C
        gbc.setState(0xc355, 0x2021, 0xedb0, 0xd68f, 0x1231, 0xfd2e, 0x0, 0x1);
        gbc.writeMem(0xc355, { 0x99 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2021, gbc.sp());
        EXPECT(0xc356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc355));
        // 99 036D
        gbc.setState(0x55ba, 0x83d5, 0xf100, 0x2687, 0xb29f, 0x707b, 0x0, 0x1);
        gbc.writeMem(0x55ba, { 0x99 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x83d5, gbc.sp());
        EXPECT(0x55bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 036E
        gbc.setState(0x171, 0x7119, 0x9360, 0x3ad7, 0xd081, 0xee89, 0x0, 0x1);
        gbc.writeMem(0x171, { 0x99 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7119, gbc.sp());
        EXPECT(0x172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 036F
        gbc.setState(0xc30b, 0x984c, 0xd710, 0x5688, 0x335a, 0x88c5, 0x0, 0x0);
        gbc.writeMem(0xc30b, { 0x99 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x984c, gbc.sp());
        EXPECT(0xc30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc30b));
        // 99 0370
        gbc.setState(0xa296, 0x668, 0xe5a0, 0xf799, 0xe631, 0x275a, 0x1, 0x1);
        gbc.writeMem(0xa296, { 0x99 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x668, gbc.sp());
        EXPECT(0xa297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa296));
        // 99 0371
        gbc.setState(0xbb83, 0x98b9, 0x5290, 0xf8c5, 0xcf83, 0x20d8, 0x0, 0x0);
        gbc.writeMem(0xbb83, { 0x99 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x98b9, gbc.sp());
        EXPECT(0xbb84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbb83));
        // 99 0372
        gbc.setState(0xc723, 0xb869, 0xd730, 0x6985, 0xd7be, 0xfcf8, 0x1, 0x0);
        gbc.writeMem(0xc723, { 0x99 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb869, gbc.sp());
        EXPECT(0xc724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc723));
        // 99 0373
        gbc.setState(0x60f4, 0xc530, 0x4150, 0x221f, 0x2996, 0xbe57, 0x0, 0x1);
        gbc.writeMem(0x60f4, { 0x99 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc530, gbc.sp());
        EXPECT(0x60f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0374
        gbc.setState(0x259f, 0xa68d, 0x140, 0x4cf2, 0x711d, 0x5165, 0x1, 0x0);
        gbc.writeMem(0x259f, { 0x99 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa68d, gbc.sp());
        EXPECT(0x25a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0375
        gbc.setState(0x8500, 0x4541, 0xbd70, 0x8a48, 0x387e, 0x345e, 0x0, 0x1);
        gbc.writeMem(0x8500, { 0x99 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4541, gbc.sp());
        EXPECT(0x8501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8500));
        // 99 0376
        gbc.setState(0xcfbd, 0x9433, 0x4d90, 0x69b, 0x9aaa, 0x7852, 0x1, 0x0);
        gbc.writeMem(0xcfbd, { 0x99 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9433, gbc.sp());
        EXPECT(0xcfbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcfbd));
        // 99 0377
        gbc.setState(0x9394, 0x6d59, 0x2890, 0x9e0c, 0x1ab3, 0x92f2, 0x0, 0x0);
        gbc.writeMem(0x9394, { 0x99 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6d59, gbc.sp());
        EXPECT(0x9395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9394));
        // 99 0378
        gbc.setState(0x5988, 0x36ca, 0x3010, 0x3427, 0x401b, 0x1850, 0x1, 0x1);
        gbc.writeMem(0x5988, { 0x99 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x36ca, gbc.sp());
        EXPECT(0x5989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0379
        gbc.setState(0x9138, 0x11f4, 0x6780, 0x6f11, 0x5329, 0xe826, 0x1, 0x1);
        gbc.writeMem(0x9138, { 0x99 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x11f4, gbc.sp());
        EXPECT(0x9139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9138));
        // 99 037A
        gbc.setState(0x1675, 0xa6ab, 0xf90, 0xdba5, 0x8276, 0xe160, 0x1, 0x1);
        gbc.writeMem(0x1675, { 0x99 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa6ab, gbc.sp());
        EXPECT(0x1676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 037B
        gbc.setState(0x51c, 0x3049, 0xb470, 0xb720, 0x38e4, 0x8458, 0x1, 0x0);
        gbc.writeMem(0x51c, { 0x99 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3049, gbc.sp());
        EXPECT(0x51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 037C
        gbc.setState(0x6374, 0x58c6, 0xda60, 0x1d66, 0xa63, 0xd678, 0x1, 0x1);
        gbc.writeMem(0x6374, { 0x99 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x58c6, gbc.sp());
        EXPECT(0x6375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 037D
        gbc.setState(0x7c85, 0x99d9, 0xd510, 0x7309, 0x1e06, 0x7cbe, 0x1, 0x1);
        gbc.writeMem(0x7c85, { 0x99 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x99d9, gbc.sp());
        EXPECT(0x7c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 037E
        gbc.setState(0xc56b, 0xacc1, 0x9220, 0x934c, 0x2733, 0x5cc4, 0x0, 0x1);
        gbc.writeMem(0xc56b, { 0x99 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xacc1, gbc.sp());
        EXPECT(0xc56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc56b));
        // 99 037F
        gbc.setState(0x796c, 0x7d73, 0xa5c0, 0xf15a, 0x13d1, 0x78cc, 0x1, 0x1);
        gbc.writeMem(0x796c, { 0x99 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7d73, gbc.sp());
        EXPECT(0x796d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0380
        gbc.setState(0x3a3d, 0xee1b, 0xb490, 0x125e, 0x981c, 0x5610, 0x0, 0x0);
        gbc.writeMem(0x3a3d, { 0x99 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xee1b, gbc.sp());
        EXPECT(0x3a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0381
        gbc.setState(0xa925, 0x604b, 0xb4d0, 0x5276, 0xd3bb, 0x5391, 0x0, 0x1);
        gbc.writeMem(0xa925, { 0x99 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x604b, gbc.sp());
        EXPECT(0xa926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa925));
        // 99 0382
        gbc.setState(0x8c2f, 0xb11b, 0x4b40, 0x2b57, 0x4292, 0xecf3, 0x0, 0x0);
        gbc.writeMem(0x8c2f, { 0x99 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb11b, gbc.sp());
        EXPECT(0x8c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8c2f));
        // 99 0383
        gbc.setState(0xa880, 0xfc17, 0x48b0, 0x6585, 0x7e25, 0xfc1c, 0x1, 0x1);
        gbc.writeMem(0xa880, { 0x99 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfc17, gbc.sp());
        EXPECT(0xa881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa880));
        // 99 0384
        gbc.setState(0x3512, 0x7017, 0xbda0, 0x596e, 0xe36d, 0xbecb, 0x0, 0x1);
        gbc.writeMem(0x3512, { 0x99 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7017, gbc.sp());
        EXPECT(0x3513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0385
        gbc.setState(0xdf5b, 0x2932, 0xe530, 0xfc7b, 0x1221, 0x24d9, 0x1, 0x1);
        gbc.writeMem(0xdf5b, { 0x99 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2932, gbc.sp());
        EXPECT(0xdf5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdf5b));
        // 99 0386
        gbc.setState(0x2aa8, 0x397, 0xf220, 0x1420, 0x59e4, 0x9992, 0x1, 0x0);
        gbc.writeMem(0x2aa8, { 0x99 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x397, gbc.sp());
        EXPECT(0x2aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0387
        gbc.setState(0x274d, 0x9ea, 0x36e0, 0xe5ed, 0x464e, 0x70a1, 0x0, 0x1);
        gbc.writeMem(0x274d, { 0x99 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9ea, gbc.sp());
        EXPECT(0x274e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0389
        gbc.setState(0x4205, 0xad20, 0xf870, 0xdf9f, 0xf9c1, 0x1a17, 0x0, 0x1);
        gbc.writeMem(0x4205, { 0x99 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xad20, gbc.sp());
        EXPECT(0x4206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 038A
        gbc.setState(0x72aa, 0x107e, 0x6d80, 0xa8d1, 0xd401, 0x1a6b, 0x0, 0x1);
        gbc.writeMem(0x72aa, { 0x99 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x107e, gbc.sp());
        EXPECT(0x72ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 038B
        gbc.setState(0x16de, 0x23a3, 0x5580, 0xda3f, 0x9086, 0x5d96, 0x1, 0x1);
        gbc.writeMem(0x16de, { 0x99 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x23a3, gbc.sp());
        EXPECT(0x16df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 038C
        gbc.setState(0x398f, 0x1e95, 0xa240, 0xf308, 0x605b, 0x1fc8, 0x0, 0x0);
        gbc.writeMem(0x398f, { 0x99 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1e95, gbc.sp());
        EXPECT(0x3990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 038D
        gbc.setState(0x6554, 0xa1be, 0x9fb0, 0x5d65, 0x38f6, 0xd85c, 0x0, 0x0);
        gbc.writeMem(0x6554, { 0x99 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa1be, gbc.sp());
        EXPECT(0x6555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 038E
        gbc.setState(0xa017, 0x3ee2, 0x3fa0, 0x698f, 0xfec9, 0xc1ed, 0x0, 0x1);
        gbc.writeMem(0xa017, { 0x99 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3ee2, gbc.sp());
        EXPECT(0xa018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa017));
        // 99 038F
        gbc.setState(0x2def, 0x110d, 0xba00, 0x6909, 0xe48c, 0x50db, 0x1, 0x1);
        gbc.writeMem(0x2def, { 0x99 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x110d, gbc.sp());
        EXPECT(0x2df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 0390
        gbc.setState(0xda00, 0x13a9, 0x19c0, 0xba7e, 0x8dc6, 0x38b1, 0x0, 0x0);
        gbc.writeMem(0xda00, { 0x99 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x13a9, gbc.sp());
        EXPECT(0xda01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xda00));
        // 99 0392
        gbc.setState(0xd7c9, 0xec1f, 0xe3e0, 0x3a35, 0xaf52, 0xfded, 0x0, 0x1);
        gbc.writeMem(0xd7c9, { 0x99 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xec1f, gbc.sp());
        EXPECT(0xd7ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd7c9));
        // 99 0393
        gbc.setState(0xe244, 0xa486, 0x3f70, 0xa750, 0xe9a0, 0x4831, 0x0, 0x0);
        gbc.writeMem(0xe244, { 0x99 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa486, gbc.sp());
        EXPECT(0xe245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe244));
        // 99 0394
        gbc.setState(0xc87b, 0x6a82, 0x290, 0xa1de, 0x508b, 0x4b22, 0x0, 0x1);
        gbc.writeMem(0xc87b, { 0x99 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6a82, gbc.sp());
        EXPECT(0xc87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc87b));
        // 99 0395
        gbc.setState(0x3ca9, 0x6b95, 0x810, 0x6a7b, 0xf80f, 0xc441, 0x1, 0x0);
        gbc.writeMem(0x3ca9, { 0x99 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6b95, gbc.sp());
        EXPECT(0x3caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 0396
        gbc.setState(0xa18c, 0xca69, 0xeed0, 0xa0f2, 0xff01, 0x961d, 0x0, 0x0);
        gbc.writeMem(0xa18c, { 0x99 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xca69, gbc.sp());
        EXPECT(0xa18d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa18c));
        // 99 0397
        gbc.setState(0x9c51, 0x18df, 0x890, 0x52cc, 0x26ea, 0x88a0, 0x1, 0x0);
        gbc.writeMem(0x9c51, { 0x99 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x18df, gbc.sp());
        EXPECT(0x9c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9c51));
        // 99 0398
        gbc.setState(0xb513, 0x8b81, 0x5820, 0x8f31, 0xd1cc, 0x3260, 0x0, 0x0);
        gbc.writeMem(0xb513, { 0x99 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8b81, gbc.sp());
        EXPECT(0xb514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb513));
        // 99 0399
        gbc.setState(0xb7d4, 0x691f, 0x5e90, 0x2f7f, 0xd9b8, 0xd1a2, 0x0, 0x0);
        gbc.writeMem(0xb7d4, { 0x99 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x691f, gbc.sp());
        EXPECT(0xb7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb7d4));
        // 99 039A
        gbc.setState(0x4477, 0x5674, 0xb750, 0x59f8, 0xd869, 0xc890, 0x1, 0x0);
        gbc.writeMem(0x4477, { 0x99 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5674, gbc.sp());
        EXPECT(0x4478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 039B
        gbc.setState(0x5917, 0x7e86, 0xf7d0, 0x5e03, 0x4f12, 0x9d47, 0x1, 0x0);
        gbc.writeMem(0x5917, { 0x99 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7e86, gbc.sp());
        EXPECT(0x5918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 039D
        gbc.setState(0x6e6, 0x41b0, 0xd210, 0x58b4, 0xe9f1, 0x1bd4, 0x1, 0x1);
        gbc.writeMem(0x6e6, { 0x99 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x41b0, gbc.sp());
        EXPECT(0x6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 039E
        gbc.setState(0xbd7d, 0xb9d6, 0x6930, 0xb6b2, 0x8f00, 0xe47a, 0x1, 0x0);
        gbc.writeMem(0xbd7d, { 0x99 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb9d6, gbc.sp());
        EXPECT(0xbd7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbd7d));
        // 99 039F
        gbc.setState(0x99f, 0x35ab, 0x21e0, 0x500d, 0xd94, 0x8599, 0x0, 0x1);
        gbc.writeMem(0x99f, { 0x99 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x35ab, gbc.sp());
        EXPECT(0x9a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03A0
        gbc.setState(0xa16, 0xdb45, 0x3b80, 0xfd4f, 0x575c, 0x4b99, 0x1, 0x0);
        gbc.writeMem(0xa16, { 0x99 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdb45, gbc.sp());
        EXPECT(0xa17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03A1
        gbc.setState(0xb0c5, 0xea0d, 0xeb80, 0x9772, 0x352f, 0x5a4, 0x0, 0x1);
        gbc.writeMem(0xb0c5, { 0x99 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xea0d, gbc.sp());
        EXPECT(0xb0c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb0c5));
        // 99 03A2
        gbc.setState(0x5f40, 0xcb2d, 0x6b30, 0x2248, 0xee37, 0x5719, 0x1, 0x0);
        gbc.writeMem(0x5f40, { 0x99 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xcb2d, gbc.sp());
        EXPECT(0x5f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03A3
        gbc.setState(0x3b79, 0xfbc4, 0x6b00, 0xe68f, 0x5e57, 0x3c3d, 0x1, 0x0);
        gbc.writeMem(0x3b79, { 0x99 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfbc4, gbc.sp());
        EXPECT(0x3b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03A4
        gbc.setState(0x5b6b, 0x8704, 0x6a50, 0xf740, 0x850f, 0x7baa, 0x1, 0x0);
        gbc.writeMem(0x5b6b, { 0x99 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8704, gbc.sp());
        EXPECT(0x5b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03A5
        gbc.setState(0x6d1e, 0xf194, 0xa520, 0x487e, 0x4c5, 0x9314, 0x1, 0x0);
        gbc.writeMem(0x6d1e, { 0x99 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf194, gbc.sp());
        EXPECT(0x6d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03A6
        gbc.setState(0xa4e0, 0xa53f, 0xb530, 0xeb7d, 0x5c5c, 0xe2c8, 0x0, 0x0);
        gbc.writeMem(0xa4e0, { 0x99 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa53f, gbc.sp());
        EXPECT(0xa4e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa4e0));
        // 99 03A7
        gbc.setState(0x74f5, 0x722, 0x64f0, 0x1e9e, 0x66c0, 0x9fe0, 0x1, 0x0);
        gbc.writeMem(0x74f5, { 0x99 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x722, gbc.sp());
        EXPECT(0x74f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03A8
        gbc.setState(0x6c19, 0x2015, 0x7e50, 0x8014, 0x3ea7, 0x7a7f, 0x1, 0x0);
        gbc.writeMem(0x6c19, { 0x99 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2015, gbc.sp());
        EXPECT(0x6c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03A9
        gbc.setState(0x86c7, 0xf89d, 0x520, 0x8481, 0x4017, 0x3a2b, 0x0, 0x0);
        gbc.writeMem(0x86c7, { 0x99 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf89d, gbc.sp());
        EXPECT(0x86c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x86c7));
        // 99 03AA
        gbc.setState(0x950d, 0xa64f, 0xa610, 0x2272, 0xa909, 0x7b99, 0x0, 0x1);
        gbc.writeMem(0x950d, { 0x99 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa64f, gbc.sp());
        EXPECT(0x950e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x950d));
        // 99 03AB
        gbc.setState(0x686e, 0x98b7, 0x6e90, 0x2aa1, 0xe518, 0x33ba, 0x0, 0x0);
        gbc.writeMem(0x686e, { 0x99 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x98b7, gbc.sp());
        EXPECT(0x686f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03AC
        gbc.setState(0xb8c6, 0x6f95, 0x2ba0, 0x4891, 0xe6c9, 0xab72, 0x0, 0x1);
        gbc.writeMem(0xb8c6, { 0x99 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6f95, gbc.sp());
        EXPECT(0xb8c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb8c6));
        // 99 03AD
        gbc.setState(0xcac3, 0xcff7, 0x420, 0xf856, 0x8cda, 0x8483, 0x1, 0x0);
        gbc.writeMem(0xcac3, { 0x99 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcff7, gbc.sp());
        EXPECT(0xcac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcac3));
        // 99 03AE
        gbc.setState(0xb44f, 0xefb1, 0x4640, 0xfd9c, 0x4164, 0xd90d, 0x1, 0x1);
        gbc.writeMem(0xb44f, { 0x99 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xefb1, gbc.sp());
        EXPECT(0xb450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb44f));
        // 99 03AF
        gbc.setState(0x6026, 0x83fd, 0x70e0, 0x1fe5, 0x1cb4, 0x50b3, 0x0, 0x0);
        gbc.writeMem(0x6026, { 0x99 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x83fd, gbc.sp());
        EXPECT(0x6027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03B0
        gbc.setState(0x5d28, 0xb577, 0x2680, 0x785e, 0x7d1a, 0x67d2, 0x1, 0x0);
        gbc.writeMem(0x5d28, { 0x99 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb577, gbc.sp());
        EXPECT(0x5d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03B1
        gbc.setState(0xb9ad, 0x8338, 0x34b0, 0xbd16, 0x8a8d, 0x8920, 0x0, 0x0);
        gbc.writeMem(0xb9ad, { 0x99 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8338, gbc.sp());
        EXPECT(0xb9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb9ad));
        // 99 03B2
        gbc.setState(0xa960, 0xec4e, 0xf240, 0xd8, 0x9185, 0xcce4, 0x1, 0x0);
        gbc.writeMem(0xa960, { 0x99 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xec4e, gbc.sp());
        EXPECT(0xa961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa960));
        // 99 03B3
        gbc.setState(0xcfb9, 0x146d, 0xd530, 0x8627, 0x2cce, 0xa683, 0x0, 0x0);
        gbc.writeMem(0xcfb9, { 0x99 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x146d, gbc.sp());
        EXPECT(0xcfba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcfb9));
        // 99 03B4
        gbc.setState(0xcfb9, 0xd095, 0xf0e0, 0xe376, 0x7416, 0x10b8, 0x1, 0x0);
        gbc.writeMem(0xcfb9, { 0x99 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd095, gbc.sp());
        EXPECT(0xcfba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcfb9));
        // 99 03B5
        gbc.setState(0xd15c, 0x659f, 0x1b60, 0xc01e, 0x4b05, 0x1cd5, 0x0, 0x0);
        gbc.writeMem(0xd15c, { 0x99 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x659f, gbc.sp());
        EXPECT(0xd15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd15c));
        // 99 03B7
        gbc.setState(0x91c9, 0xe2ba, 0x80b0, 0xb792, 0xaa8f, 0xd5e2, 0x0, 0x1);
        gbc.writeMem(0x91c9, { 0x99 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe2ba, gbc.sp());
        EXPECT(0x91ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x91c9));
        // 99 03B8
        gbc.setState(0xbba9, 0x9fdc, 0x74a0, 0x7d20, 0x35ab, 0xb871, 0x0, 0x1);
        gbc.writeMem(0xbba9, { 0x99 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9fdc, gbc.sp());
        EXPECT(0xbbaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbba9));
        // 99 03B9
        gbc.setState(0x1bc5, 0xc9cf, 0x5060, 0xd5aa, 0xb94b, 0x8f01, 0x0, 0x0);
        gbc.writeMem(0x1bc5, { 0x99 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc9cf, gbc.sp());
        EXPECT(0x1bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03BA
        gbc.setState(0xdd76, 0x20cf, 0x1fe0, 0x9837, 0x44c1, 0x6708, 0x0, 0x1);
        gbc.writeMem(0xdd76, { 0x99 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x20cf, gbc.sp());
        EXPECT(0xdd77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdd76));
        // 99 03BB
        gbc.setState(0x3987, 0x11c4, 0x24e0, 0x5000, 0xc6bc, 0xba52, 0x0, 0x0);
        gbc.writeMem(0x3987, { 0x99 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x11c4, gbc.sp());
        EXPECT(0x3988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03BC
        gbc.setState(0x58a6, 0xa6a8, 0xb140, 0x6545, 0x9e6f, 0x7fa8, 0x0, 0x0);
        gbc.writeMem(0x58a6, { 0x99 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa6a8, gbc.sp());
        EXPECT(0x58a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03BD
        gbc.setState(0x1f46, 0x3bfe, 0xdd80, 0x8932, 0x1308, 0xba57, 0x0, 0x0);
        gbc.writeMem(0x1f46, { 0x99 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3bfe, gbc.sp());
        EXPECT(0x1f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03BE
        gbc.setState(0xd7f5, 0xa60a, 0x2540, 0xfda9, 0xaf7d, 0x9a4b, 0x1, 0x1);
        gbc.writeMem(0xd7f5, { 0x99 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa60a, gbc.sp());
        EXPECT(0xd7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd7f5));
        // 99 03BF
        gbc.setState(0x8edf, 0xcf81, 0xb7b0, 0x3f7e, 0x7bda, 0x47ca, 0x0, 0x1);
        gbc.writeMem(0x8edf, { 0x99 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcf81, gbc.sp());
        EXPECT(0x8ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8edf));
        // 99 03C0
        gbc.setState(0x1b2c, 0xae67, 0xe620, 0xe16e, 0x9677, 0x71ed, 0x0, 0x1);
        gbc.writeMem(0x1b2c, { 0x99 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xae67, gbc.sp());
        EXPECT(0x1b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03C1
        gbc.setState(0x7148, 0xa211, 0xa140, 0xd43, 0xd230, 0x3d2f, 0x1, 0x1);
        gbc.writeMem(0x7148, { 0x99 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa211, gbc.sp());
        EXPECT(0x7149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03C2
        gbc.setState(0x4f88, 0xdc92, 0x8f70, 0x186a, 0x4fe2, 0xe78e, 0x0, 0x0);
        gbc.writeMem(0x4f88, { 0x99 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdc92, gbc.sp());
        EXPECT(0x4f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03C3
        gbc.setState(0x9354, 0xc07d, 0x8690, 0x2f8d, 0x1803, 0xf771, 0x1, 0x1);
        gbc.writeMem(0x9354, { 0x99 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc07d, gbc.sp());
        EXPECT(0x9355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9354));
        // 99 03C4
        gbc.setState(0x5d44, 0x4929, 0xb6f0, 0x7ed7, 0x431c, 0x946c, 0x1, 0x1);
        gbc.writeMem(0x5d44, { 0x99 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4929, gbc.sp());
        EXPECT(0x5d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03C5
        gbc.setState(0xaf08, 0x6123, 0x2260, 0x5ae3, 0xfcd8, 0x1e4, 0x1, 0x0);
        gbc.writeMem(0xaf08, { 0x99 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6123, gbc.sp());
        EXPECT(0xaf09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xaf08));
        // 99 03C6
        gbc.setState(0x3c70, 0xe91f, 0x72f0, 0xd66c, 0x280d, 0xee62, 0x1, 0x1);
        gbc.writeMem(0x3c70, { 0x99 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe91f, gbc.sp());
        EXPECT(0x3c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03C7
        gbc.setState(0xafeb, 0x7cc6, 0x9cd0, 0x1b2a, 0x85bb, 0x3eee, 0x1, 0x0);
        gbc.writeMem(0xafeb, { 0x99 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7cc6, gbc.sp());
        EXPECT(0xafec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xafeb));
        // 99 03C8
        gbc.setState(0x6e36, 0x26d7, 0xb280, 0x7684, 0xcc5e, 0xebce, 0x1, 0x1);
        gbc.writeMem(0x6e36, { 0x99 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x26d7, gbc.sp());
        EXPECT(0x6e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03C9
        gbc.setState(0x7665, 0xe70c, 0x6db0, 0x7f24, 0x92dd, 0x9c5e, 0x0, 0x0);
        gbc.writeMem(0x7665, { 0x99 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe70c, gbc.sp());
        EXPECT(0x7666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03CA
        gbc.setState(0xa3b6, 0xc56b, 0x9e80, 0xe37, 0x8069, 0xadd1, 0x1, 0x0);
        gbc.writeMem(0xa3b6, { 0x99 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc56b, gbc.sp());
        EXPECT(0xa3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa3b6));
        // 99 03CB
        gbc.setState(0x3eef, 0x2719, 0x13d0, 0x377c, 0xc15a, 0x1675, 0x0, 0x1);
        gbc.writeMem(0x3eef, { 0x99 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2719, gbc.sp());
        EXPECT(0x3ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03CC
        gbc.setState(0x437f, 0x3186, 0x8420, 0x2dac, 0x46d3, 0x374f, 0x1, 0x0);
        gbc.writeMem(0x437f, { 0x99 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3186, gbc.sp());
        EXPECT(0x4380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03CD
        gbc.setState(0x65eb, 0x857f, 0x8310, 0x4399, 0x80d2, 0xdde5, 0x0, 0x1);
        gbc.writeMem(0x65eb, { 0x99 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x857f, gbc.sp());
        EXPECT(0x65ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03CE
        gbc.setState(0xd9cf, 0x2ba8, 0xc480, 0x613b, 0xee05, 0x336c, 0x0, 0x0);
        gbc.writeMem(0xd9cf, { 0x99 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2ba8, gbc.sp());
        EXPECT(0xd9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd9cf));
        // 99 03CF
        gbc.setState(0x3d7e, 0x77d3, 0x2810, 0x8a07, 0xd388, 0x40b7, 0x1, 0x0);
        gbc.writeMem(0x3d7e, { 0x99 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x77d3, gbc.sp());
        EXPECT(0x3d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03D0
        gbc.setState(0xcc3b, 0x1339, 0xd3b0, 0xabdf, 0x8117, 0x4e82, 0x1, 0x1);
        gbc.writeMem(0xcc3b, { 0x99 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1339, gbc.sp());
        EXPECT(0xcc3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcc3b));
        // 99 03D1
        gbc.setState(0x643a, 0x23e1, 0xde50, 0xb126, 0xefb0, 0x51c1, 0x1, 0x1);
        gbc.writeMem(0x643a, { 0x99 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x23e1, gbc.sp());
        EXPECT(0x643b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03D2
        gbc.setState(0xb6af, 0xbe1, 0xcb70, 0xf7d4, 0x7f7e, 0xd234, 0x0, 0x0);
        gbc.writeMem(0xb6af, { 0x99 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbe1, gbc.sp());
        EXPECT(0xb6b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb6af));
        // 99 03D3
        gbc.setState(0x772, 0x506d, 0x2f70, 0xf156, 0xea8c, 0x28da, 0x0, 0x0);
        gbc.writeMem(0x772, { 0x99 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x506d, gbc.sp());
        EXPECT(0x773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03D4
        gbc.setState(0x1aa2, 0x9b0f, 0x78d0, 0xaa94, 0xfed9, 0xd520, 0x0, 0x1);
        gbc.writeMem(0x1aa2, { 0x99 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9b0f, gbc.sp());
        EXPECT(0x1aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03D5
        gbc.setState(0x32d1, 0x8425, 0x24f0, 0xed43, 0x4544, 0x867c, 0x1, 0x0);
        gbc.writeMem(0x32d1, { 0x99 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8425, gbc.sp());
        EXPECT(0x32d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03D6
        gbc.setState(0x2f8, 0x494e, 0x2870, 0xcbb3, 0xc0fa, 0x880c, 0x0, 0x0);
        gbc.writeMem(0x2f8, { 0x99 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x494e, gbc.sp());
        EXPECT(0x2f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03D7
        gbc.setState(0x19e8, 0x47b7, 0xc580, 0x8835, 0xb873, 0x91ad, 0x0, 0x0);
        gbc.writeMem(0x19e8, { 0x99 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x47b7, gbc.sp());
        EXPECT(0x19e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03D8
        gbc.setState(0x738, 0xa63, 0xea80, 0xf02f, 0xa37e, 0x9dd9, 0x1, 0x1);
        gbc.writeMem(0x738, { 0x99 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa63, gbc.sp());
        EXPECT(0x739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03D9
        gbc.setState(0x5a0d, 0xd188, 0x9800, 0x8a5b, 0xd4f, 0xd623, 0x0, 0x0);
        gbc.writeMem(0x5a0d, { 0x99 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd188, gbc.sp());
        EXPECT(0x5a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03DA
        gbc.setState(0x6ad5, 0x9511, 0x6be0, 0xb774, 0xcfb5, 0x1943, 0x1, 0x1);
        gbc.writeMem(0x6ad5, { 0x99 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9511, gbc.sp());
        EXPECT(0x6ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03DB
        gbc.setState(0x9fa3, 0x6010, 0xa680, 0x952, 0x348b, 0x91a9, 0x0, 0x1);
        gbc.writeMem(0x9fa3, { 0x99 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6010, gbc.sp());
        EXPECT(0x9fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9fa3));
        // 99 03DC
        gbc.setState(0x2ab0, 0x1070, 0xe030, 0x2ad1, 0x61f7, 0x877c, 0x1, 0x0);
        gbc.writeMem(0x2ab0, { 0x99 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1070, gbc.sp());
        EXPECT(0x2ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03DD
        gbc.setState(0x4beb, 0xae87, 0xfda0, 0xda9c, 0xad58, 0xcacf, 0x0, 0x1);
        gbc.writeMem(0x4beb, { 0x99 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xae87, gbc.sp());
        EXPECT(0x4bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03DE
        gbc.setState(0x9605, 0x4bc1, 0x3560, 0x8539, 0xb24e, 0x375c, 0x1, 0x1);
        gbc.writeMem(0x9605, { 0x99 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4bc1, gbc.sp());
        EXPECT(0x9606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9605));
        // 99 03DF
        gbc.setState(0x909c, 0x5ad8, 0xd5c0, 0x7359, 0x89fa, 0x9636, 0x0, 0x0);
        gbc.writeMem(0x909c, { 0x99 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5ad8, gbc.sp());
        EXPECT(0x909d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x909c));
        // 99 03E0
        gbc.setState(0x96ee, 0x5dd7, 0x3ad0, 0xbc7d, 0xa7ac, 0xd8c9, 0x1, 0x0);
        gbc.writeMem(0x96ee, { 0x99 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5dd7, gbc.sp());
        EXPECT(0x96ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x96ee));
        // 99 03E1
        gbc.setState(0xa9f, 0x2f86, 0x600, 0xaaaa, 0x16b9, 0xe639, 0x0, 0x1);
        gbc.writeMem(0xa9f, { 0x99 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2f86, gbc.sp());
        EXPECT(0xaa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03E3
        gbc.setState(0x47d3, 0x1c70, 0xd2e0, 0x9d0c, 0x79f5, 0xbfc9, 0x1, 0x1);
        gbc.writeMem(0x47d3, { 0x99 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1c70, gbc.sp());
        EXPECT(0x47d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 99 03E4
        gbc.setState(0x3f21, 0x7748, 0xbbb0, 0x3edf, 0x2f9d, 0x83e4, 0x1, 0x1);
        gbc.writeMem(0x3f21, { 0x99 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7748, gbc.sp());
        EXPECT(0x3f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03E5
        gbc.setState(0x83da, 0xb505, 0x12f0, 0xb3c, 0x6059, 0xd8f2, 0x0, 0x0);
        gbc.writeMem(0x83da, { 0x99 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb505, gbc.sp());
        EXPECT(0x83db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x83da));
        // 99 03E6
        gbc.setState(0x3f79, 0x4a13, 0x8830, 0x1b94, 0xa719, 0x9321, 0x0, 0x0);
        gbc.writeMem(0x3f79, { 0x99 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4a13, gbc.sp());
        EXPECT(0x3f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 99 03E7
        gbc.setState(0xeb99, 0x6e12, 0x8040, 0xfd56, 0xbafc, 0x5613, 0x0, 0x0);
        gbc.writeMem(0xeb99, { 0x99 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6e12, gbc.sp());
        EXPECT(0xeb9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xeb99));
    }
