    TEST(gbcemu, opcode_3b) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 3B 0000
        gbc.setState(0xe7cf, 0xa0c6, 0x4e60, 0x8dd1, 0x2b4b, 0x4368, 0x0, 0x1);
        gbc.writeMem(0xe7cf, { 0x3b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa0c5, gbc.sp());
        EXPECT(0xe7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe7cf));
        // 3B 0001
        gbc.setState(0x4c0c, 0xc52f, 0xcd50, 0xd4e1, 0xcc16, 0xe6d9, 0x0, 0x1);
        gbc.writeMem(0x4c0c, { 0x3b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc52e, gbc.sp());
        EXPECT(0x4c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0002
        gbc.setState(0x6081, 0x87, 0xb790, 0x5de6, 0xc1c3, 0x6e80, 0x0, 0x1);
        gbc.writeMem(0x6081, { 0x3b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x86, gbc.sp());
        EXPECT(0x6082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0004
        gbc.setState(0xc0dd, 0x3d1c, 0xbde0, 0xdaf8, 0x67e1, 0x4e31, 0x1, 0x0);
        gbc.writeMem(0xc0dd, { 0x3b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3d1b, gbc.sp());
        EXPECT(0xc0de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc0dd));
        // 3B 0005
        gbc.setState(0xa883, 0x66fc, 0x35b0, 0x362c, 0x5787, 0x12b5, 0x0, 0x1);
        gbc.writeMem(0xa883, { 0x3b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x66fb, gbc.sp());
        EXPECT(0xa884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa883));
        // 3B 0006
        gbc.setState(0x7d77, 0x938a, 0x8760, 0x7e29, 0xdf44, 0x1c75, 0x0, 0x1);
        gbc.writeMem(0x7d77, { 0x3b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9389, gbc.sp());
        EXPECT(0x7d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0007
        gbc.setState(0xa9a, 0xc764, 0x9f80, 0xf6f7, 0x73c, 0x40b3, 0x0, 0x1);
        gbc.writeMem(0xa9a, { 0x3b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc763, gbc.sp());
        EXPECT(0xa9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0008
        gbc.setState(0xe4ad, 0x55e, 0xbba0, 0xb4af, 0xe8de, 0x7ca5, 0x0, 0x1);
        gbc.writeMem(0xe4ad, { 0x3b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x55d, gbc.sp());
        EXPECT(0xe4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe4ad));
        // 3B 0009
        gbc.setState(0xfaa, 0x75b4, 0xf530, 0xff4e, 0x631e, 0x79b6, 0x1, 0x0);
        gbc.writeMem(0xfaa, { 0x3b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x75b3, gbc.sp());
        EXPECT(0xfab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 000A
        gbc.setState(0x4579, 0x28bd, 0x2e30, 0x639e, 0xdeba, 0xc035, 0x0, 0x1);
        gbc.writeMem(0x4579, { 0x3b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x28bc, gbc.sp());
        EXPECT(0x457a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 000B
        gbc.setState(0xe66c, 0x51fc, 0xea20, 0x1c7b, 0xba33, 0x6160, 0x0, 0x0);
        gbc.writeMem(0xe66c, { 0x3b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x51fb, gbc.sp());
        EXPECT(0xe66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe66c));
        // 3B 000D
        gbc.setState(0x491, 0x7fac, 0x8b20, 0x4143, 0x420f, 0xd369, 0x1, 0x1);
        gbc.writeMem(0x491, { 0x3b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7fab, gbc.sp());
        EXPECT(0x492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 000E
        gbc.setState(0x421, 0xb4f2, 0x6110, 0x1bc7, 0xadc6, 0xe14f, 0x1, 0x0);
        gbc.writeMem(0x421, { 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb4f1, gbc.sp());
        EXPECT(0x422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 000F
        gbc.setState(0xa304, 0x8174, 0xb630, 0x7fbe, 0x1307, 0xba70, 0x0, 0x0);
        gbc.writeMem(0xa304, { 0x3b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8173, gbc.sp());
        EXPECT(0xa305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa304));
        // 3B 0010
        gbc.setState(0xa9c9, 0xe87c, 0x3d80, 0xbbf4, 0x81a, 0x699d, 0x1, 0x0);
        gbc.writeMem(0xa9c9, { 0x3b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe87b, gbc.sp());
        EXPECT(0xa9ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa9c9));
        // 3B 0011
        gbc.setState(0x2caf, 0xa9cd, 0xd90, 0x1881, 0x373, 0x67d5, 0x0, 0x1);
        gbc.writeMem(0x2caf, { 0x3b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa9cc, gbc.sp());
        EXPECT(0x2cb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0012
        gbc.setState(0xcf38, 0xaa40, 0xf980, 0xb384, 0xcc01, 0xf8a, 0x0, 0x1);
        gbc.writeMem(0xcf38, { 0x3b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xaa3f, gbc.sp());
        EXPECT(0xcf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcf38));
        // 3B 0013
        gbc.setState(0xef2, 0xe483, 0x2960, 0xe6ec, 0x750d, 0xf869, 0x1, 0x1);
        gbc.writeMem(0xef2, { 0x3b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe482, gbc.sp());
        EXPECT(0xef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0015
        gbc.setState(0x3565, 0x4c89, 0x9240, 0x6160, 0x93ca, 0x670, 0x1, 0x0);
        gbc.writeMem(0x3565, { 0x3b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4c88, gbc.sp());
        EXPECT(0x3566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0016
        gbc.setState(0x977c, 0xe93f, 0xbdb0, 0x6106, 0xdbb5, 0xc062, 0x1, 0x0);
        gbc.writeMem(0x977c, { 0x3b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe93e, gbc.sp());
        EXPECT(0x977d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x977c));
        // 3B 0017
        gbc.setState(0xd08c, 0x3cf9, 0xdfa0, 0xb086, 0x7c0f, 0x3575, 0x1, 0x1);
        gbc.writeMem(0xd08c, { 0x3b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3cf8, gbc.sp());
        EXPECT(0xd08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd08c));
        // 3B 0018
        gbc.setState(0x52e8, 0x6e0b, 0x62d0, 0xc01c, 0xa97b, 0x8ca0, 0x1, 0x0);
        gbc.writeMem(0x52e8, { 0x3b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6e0a, gbc.sp());
        EXPECT(0x52e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0019
        gbc.setState(0x65e4, 0xc0ca, 0x13c0, 0x4cbc, 0xf6c2, 0xbaa4, 0x0, 0x1);
        gbc.writeMem(0x65e4, { 0x3b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc0c9, gbc.sp());
        EXPECT(0x65e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 001A
        gbc.setState(0xb9e6, 0x4eb0, 0x6f50, 0xa4e0, 0xb471, 0xbd6, 0x1, 0x1);
        gbc.writeMem(0xb9e6, { 0x3b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4eaf, gbc.sp());
        EXPECT(0xb9e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb9e6));
        // 3B 001B
        gbc.setState(0x3848, 0xa20e, 0x6370, 0x6f34, 0xdc18, 0xef93, 0x1, 0x0);
        gbc.writeMem(0x3848, { 0x3b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa20d, gbc.sp());
        EXPECT(0x3849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 001C
        gbc.setState(0x7cb9, 0xa0aa, 0x3220, 0x456e, 0x483d, 0xb8a7, 0x0, 0x0);
        gbc.writeMem(0x7cb9, { 0x3b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa0a9, gbc.sp());
        EXPECT(0x7cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 001D
        gbc.setState(0xef52, 0xd92b, 0xede0, 0xff65, 0x3116, 0x9dfd, 0x1, 0x0);
        gbc.writeMem(0xef52, { 0x3b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd92a, gbc.sp());
        EXPECT(0xef53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xef52));
        // 3B 001E
        gbc.setState(0x39ea, 0x94a9, 0x4730, 0xc19a, 0x4fde, 0xbe18, 0x1, 0x1);
        gbc.writeMem(0x39ea, { 0x3b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x94a8, gbc.sp());
        EXPECT(0x39eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 001F
        gbc.setState(0x1484, 0x8218, 0xd90, 0x7090, 0xde05, 0xf876, 0x0, 0x0);
        gbc.writeMem(0x1484, { 0x3b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8217, gbc.sp());
        EXPECT(0x1485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0020
        gbc.setState(0x445d, 0xb4cf, 0x4cd0, 0x594e, 0x451a, 0x401f, 0x1, 0x0);
        gbc.writeMem(0x445d, { 0x3b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb4ce, gbc.sp());
        EXPECT(0x445e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0021
        gbc.setState(0x5388, 0x7ce7, 0xb650, 0x72fc, 0x29b7, 0x5ddc, 0x1, 0x1);
        gbc.writeMem(0x5388, { 0x3b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7ce6, gbc.sp());
        EXPECT(0x5389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0022
        gbc.setState(0x23fa, 0xdb95, 0x3bb0, 0xad, 0x38c4, 0x4813, 0x1, 0x1);
        gbc.writeMem(0x23fa, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdb94, gbc.sp());
        EXPECT(0x23fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0023
        gbc.setState(0x6bf1, 0xb306, 0xf5c0, 0xce5d, 0xaeb1, 0xc758, 0x1, 0x0);
        gbc.writeMem(0x6bf1, { 0x3b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb305, gbc.sp());
        EXPECT(0x6bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0024
        gbc.setState(0x8a2f, 0x49e5, 0xa200, 0xb3fb, 0x3ea, 0x7614, 0x0, 0x1);
        gbc.writeMem(0x8a2f, { 0x3b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x49e4, gbc.sp());
        EXPECT(0x8a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8a2f));
        // 3B 0026
        gbc.setState(0xe2f9, 0x6eb6, 0x2b40, 0xd625, 0x167a, 0xcd84, 0x0, 0x0);
        gbc.writeMem(0xe2f9, { 0x3b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6eb5, gbc.sp());
        EXPECT(0xe2fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe2f9));
        // 3B 0028
        gbc.setState(0xe7b8, 0x85a1, 0xdc00, 0x424f, 0x2b48, 0xab6a, 0x1, 0x0);
        gbc.writeMem(0xe7b8, { 0x3b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x85a0, gbc.sp());
        EXPECT(0xe7b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe7b8));
        // 3B 0029
        gbc.setState(0x74d1, 0x5d95, 0x8fe0, 0x2500, 0xed29, 0x515f, 0x0, 0x1);
        gbc.writeMem(0x74d1, { 0x3b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5d94, gbc.sp());
        EXPECT(0x74d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 002A
        gbc.setState(0x2329, 0x564, 0xdb90, 0x3a6d, 0x237c, 0xf304, 0x1, 0x1);
        gbc.writeMem(0x2329, { 0x3b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x563, gbc.sp());
        EXPECT(0x232a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 002B
        gbc.setState(0x59e2, 0x79d4, 0x46d0, 0x2c86, 0x3624, 0x7ad, 0x0, 0x0);
        gbc.writeMem(0x59e2, { 0x3b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x79d3, gbc.sp());
        EXPECT(0x59e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 002C
        gbc.setState(0xbc49, 0xefde, 0x8d60, 0xed62, 0xe8c, 0x5f7a, 0x1, 0x0);
        gbc.writeMem(0xbc49, { 0x3b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xefdd, gbc.sp());
        EXPECT(0xbc4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbc49));
        // 3B 002D
        gbc.setState(0x7346, 0xc44c, 0xc6e0, 0x5f8c, 0x4641, 0xd4f8, 0x0, 0x1);
        gbc.writeMem(0x7346, { 0x3b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc44b, gbc.sp());
        EXPECT(0x7347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 002E
        gbc.setState(0xb905, 0xdb32, 0x8910, 0xf4a, 0x68fe, 0x1914, 0x0, 0x1);
        gbc.writeMem(0xb905, { 0x3b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdb31, gbc.sp());
        EXPECT(0xb906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb905));
        // 3B 002F
        gbc.setState(0xcb6f, 0x127b, 0x2a80, 0x7305, 0x55c9, 0x32a7, 0x1, 0x1);
        gbc.writeMem(0xcb6f, { 0x3b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x127a, gbc.sp());
        EXPECT(0xcb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcb6f));
        // 3B 0030
        gbc.setState(0xd4af, 0xc251, 0x4b80, 0xeb2b, 0x38f1, 0x656d, 0x0, 0x0);
        gbc.writeMem(0xd4af, { 0x3b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc250, gbc.sp());
        EXPECT(0xd4b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd4af));
        // 3B 0031
        gbc.setState(0x1e2a, 0x65ab, 0xed60, 0xcdc5, 0xe544, 0x8cb0, 0x0, 0x0);
        gbc.writeMem(0x1e2a, { 0x3b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x65aa, gbc.sp());
        EXPECT(0x1e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0032
        gbc.setState(0xea32, 0x9dab, 0x7b10, 0x959f, 0x3d93, 0x4e34, 0x1, 0x0);
        gbc.writeMem(0xea32, { 0x3b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9daa, gbc.sp());
        EXPECT(0xea33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xea32));
        // 3B 0033
        gbc.setState(0x947d, 0x526, 0xce80, 0x9dc6, 0xb131, 0xcc3b, 0x1, 0x1);
        gbc.writeMem(0x947d, { 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x525, gbc.sp());
        EXPECT(0x947e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x947d));
        // 3B 0034
        gbc.setState(0xd949, 0x7100, 0xf9e0, 0xae74, 0xfc62, 0x6ed, 0x1, 0x0);
        gbc.writeMem(0xd949, { 0x3b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x70ff, gbc.sp());
        EXPECT(0xd94a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd949));
        // 3B 0035
        gbc.setState(0xc2b8, 0x37e3, 0x2090, 0x1eda, 0x7fda, 0x37ac, 0x1, 0x0);
        gbc.writeMem(0xc2b8, { 0x3b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x37e2, gbc.sp());
        EXPECT(0xc2b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc2b8));
        // 3B 0036
        gbc.setState(0x77eb, 0x54df, 0xa500, 0xcf62, 0x5ba5, 0x4b30, 0x1, 0x1);
        gbc.writeMem(0x77eb, { 0x3b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x54de, gbc.sp());
        EXPECT(0x77ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0037
        gbc.setState(0x3d58, 0x2a4c, 0x2770, 0xfe96, 0x75b6, 0x5bad, 0x1, 0x1);
        gbc.writeMem(0x3d58, { 0x3b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2a4b, gbc.sp());
        EXPECT(0x3d59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0038
        gbc.setState(0x9a87, 0x279e, 0x91b0, 0xc66c, 0x9823, 0x44a5, 0x0, 0x0);
        gbc.writeMem(0x9a87, { 0x3b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x279d, gbc.sp());
        EXPECT(0x9a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9a87));
        // 3B 0039
        gbc.setState(0xea41, 0x55bd, 0xd5b0, 0xc54e, 0x655a, 0x677f, 0x0, 0x0);
        gbc.writeMem(0xea41, { 0x3b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x55bc, gbc.sp());
        EXPECT(0xea42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xea41));
        // 3B 003A
        gbc.setState(0xd60e, 0x801c, 0x7800, 0x3780, 0xf0dd, 0xc993, 0x1, 0x1);
        gbc.writeMem(0xd60e, { 0x3b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x801b, gbc.sp());
        EXPECT(0xd60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd60e));
        // 3B 003B
        gbc.setState(0xaa81, 0x29b8, 0x74f0, 0x7640, 0x2c82, 0xd471, 0x0, 0x1);
        gbc.writeMem(0xaa81, { 0x3b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x29b7, gbc.sp());
        EXPECT(0xaa82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xaa81));
        // 3B 003C
        gbc.setState(0x54bf, 0x5a7b, 0xece0, 0x9a36, 0xd8dd, 0x5fc2, 0x1, 0x1);
        gbc.writeMem(0x54bf, { 0x3b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5a7a, gbc.sp());
        EXPECT(0x54c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 003D
        gbc.setState(0x5fdf, 0xab95, 0xab00, 0x8039, 0xc529, 0x10f7, 0x0, 0x0);
        gbc.writeMem(0x5fdf, { 0x3b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xab94, gbc.sp());
        EXPECT(0x5fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 003F
        gbc.setState(0x12f6, 0x7ed0, 0x2960, 0x2f66, 0xd8e4, 0x9b0f, 0x0, 0x1);
        gbc.writeMem(0x12f6, { 0x3b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7ecf, gbc.sp());
        EXPECT(0x12f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0040
        gbc.setState(0x2e86, 0x2b0, 0x2d40, 0x9a64, 0x48e2, 0x6aa4, 0x1, 0x0);
        gbc.writeMem(0x2e86, { 0x3b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2af, gbc.sp());
        EXPECT(0x2e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0041
        gbc.setState(0xa593, 0x87, 0x2420, 0x3c74, 0x1e1d, 0xce0d, 0x0, 0x0);
        gbc.writeMem(0xa593, { 0x3b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x86, gbc.sp());
        EXPECT(0xa594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa593));
        // 3B 0042
        gbc.setState(0x50ef, 0x4542, 0xbe00, 0x57f3, 0xaab1, 0x9bf8, 0x0, 0x0);
        gbc.writeMem(0x50ef, { 0x3b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4541, gbc.sp());
        EXPECT(0x50f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0043
        gbc.setState(0x5bb0, 0xd6b0, 0xaf50, 0xfc2f, 0x3037, 0x71aa, 0x0, 0x0);
        gbc.writeMem(0x5bb0, { 0x3b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd6af, gbc.sp());
        EXPECT(0x5bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0044
        gbc.setState(0xc6f2, 0x8ac6, 0xce20, 0x61cb, 0xb686, 0xfd5, 0x0, 0x0);
        gbc.writeMem(0xc6f2, { 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8ac5, gbc.sp());
        EXPECT(0xc6f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc6f2));
        // 3B 0046
        gbc.setState(0xbe67, 0xa571, 0x8020, 0xb3fe, 0x3fd7, 0x76d8, 0x0, 0x0);
        gbc.writeMem(0xbe67, { 0x3b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa570, gbc.sp());
        EXPECT(0xbe68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbe67));
        // 3B 0047
        gbc.setState(0x1fc4, 0x7453, 0x8f30, 0x168, 0xfa4a, 0x6a1f, 0x1, 0x1);
        gbc.writeMem(0x1fc4, { 0x3b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7452, gbc.sp());
        EXPECT(0x1fc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0048
        gbc.setState(0xb22e, 0x948e, 0x4990, 0x59cf, 0xd424, 0xceef, 0x0, 0x0);
        gbc.writeMem(0xb22e, { 0x3b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x948d, gbc.sp());
        EXPECT(0xb22f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb22e));
        // 3B 0049
        gbc.setState(0x80f3, 0x1a0f, 0x5160, 0x9ed7, 0x5335, 0x8aec, 0x0, 0x1);
        gbc.writeMem(0x80f3, { 0x3b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1a0e, gbc.sp());
        EXPECT(0x80f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x80f3));
        // 3B 004A
        gbc.setState(0x357, 0x29cd, 0x5430, 0x6900, 0xe561, 0xd6c3, 0x1, 0x1);
        gbc.writeMem(0x357, { 0x3b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x29cc, gbc.sp());
        EXPECT(0x358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 004B
        gbc.setState(0x8e05, 0xa112, 0x44e0, 0xeaa6, 0xedff, 0x4a94, 0x0, 0x1);
        gbc.writeMem(0x8e05, { 0x3b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa111, gbc.sp());
        EXPECT(0x8e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8e05));
        // 3B 004C
        gbc.setState(0x4db8, 0xfc12, 0x430, 0x51d8, 0xd664, 0x8b27, 0x1, 0x1);
        gbc.writeMem(0x4db8, { 0x3b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfc11, gbc.sp());
        EXPECT(0x4db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 004D
        gbc.setState(0x1851, 0xcbe5, 0x6c00, 0xaa57, 0x4187, 0x8300, 0x1, 0x0);
        gbc.writeMem(0x1851, { 0x3b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcbe4, gbc.sp());
        EXPECT(0x1852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 004E
        gbc.setState(0x71c1, 0x787d, 0x55e0, 0xc4df, 0x3e44, 0x30e7, 0x0, 0x0);
        gbc.writeMem(0x71c1, { 0x3b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x787c, gbc.sp());
        EXPECT(0x71c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 004F
        gbc.setState(0x8f7c, 0xaeb4, 0x36e0, 0x4030, 0x3ccc, 0x9351, 0x1, 0x1);
        gbc.writeMem(0x8f7c, { 0x3b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xaeb3, gbc.sp());
        EXPECT(0x8f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8f7c));
        // 3B 0050
        gbc.setState(0x9e46, 0x4949, 0xc2b0, 0x4057, 0xb3b7, 0x1d14, 0x1, 0x1);
        gbc.writeMem(0x9e46, { 0x3b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4948, gbc.sp());
        EXPECT(0x9e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9e46));
        // 3B 0051
        gbc.setState(0x569a, 0xe2f7, 0x6950, 0x86a5, 0xd26f, 0x3d6, 0x1, 0x1);
        gbc.writeMem(0x569a, { 0x3b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe2f6, gbc.sp());
        EXPECT(0x569b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0052
        gbc.setState(0xe666, 0x551d, 0x5a90, 0x43de, 0x96ec, 0xf44d, 0x1, 0x1);
        gbc.writeMem(0xe666, { 0x3b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x551c, gbc.sp());
        EXPECT(0xe667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe666));
        // 3B 0053
        gbc.setState(0x1d81, 0x9013, 0xd10, 0x1c90, 0x1896, 0xf6d6, 0x0, 0x1);
        gbc.writeMem(0x1d81, { 0x3b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9012, gbc.sp());
        EXPECT(0x1d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0054
        gbc.setState(0x93b2, 0x9e95, 0x34c0, 0x7717, 0x62c7, 0x8744, 0x1, 0x0);
        gbc.writeMem(0x93b2, { 0x3b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9e94, gbc.sp());
        EXPECT(0x93b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x93b2));
        // 3B 0055
        gbc.setState(0x7853, 0x16e9, 0x6fb0, 0xf102, 0x3379, 0xcb20, 0x0, 0x0);
        gbc.writeMem(0x7853, { 0x3b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x16e8, gbc.sp());
        EXPECT(0x7854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0056
        gbc.setState(0x2479, 0x68c, 0xab50, 0x190e, 0x9129, 0x1228, 0x1, 0x1);
        gbc.writeMem(0x2479, { 0x3b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x68b, gbc.sp());
        EXPECT(0x247a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0057
        gbc.setState(0x794b, 0xd329, 0x70b0, 0xbc86, 0x5b83, 0x1744, 0x0, 0x0);
        gbc.writeMem(0x794b, { 0x3b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd328, gbc.sp());
        EXPECT(0x794c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0058
        gbc.setState(0x5455, 0x8615, 0xba20, 0xa529, 0xad76, 0xcfc, 0x0, 0x1);
        gbc.writeMem(0x5455, { 0x3b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8614, gbc.sp());
        EXPECT(0x5456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0059
        gbc.setState(0xaa89, 0x17c2, 0x320, 0xbf2e, 0x7c06, 0xb5d8, 0x0, 0x0);
        gbc.writeMem(0xaa89, { 0x3b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x17c1, gbc.sp());
        EXPECT(0xaa8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xaa89));
        // 3B 005A
        gbc.setState(0xdbc4, 0x1ad6, 0x8fa0, 0xf1b1, 0x5835, 0x2c74, 0x1, 0x1);
        gbc.writeMem(0xdbc4, { 0x3b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1ad5, gbc.sp());
        EXPECT(0xdbc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdbc4));
        // 3B 005B
        gbc.setState(0x3adc, 0x97ca, 0x9770, 0x1b8a, 0x6d6e, 0xfe29, 0x0, 0x1);
        gbc.writeMem(0x3adc, { 0x3b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x97c9, gbc.sp());
        EXPECT(0x3add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 005C
        gbc.setState(0xc4ed, 0xf9bd, 0x83b0, 0x1f76, 0xb68d, 0xd3dd, 0x0, 0x1);
        gbc.writeMem(0xc4ed, { 0x3b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf9bc, gbc.sp());
        EXPECT(0xc4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc4ed));
        // 3B 005D
        gbc.setState(0xf77, 0xe962, 0x2610, 0x43cf, 0xdb81, 0x3829, 0x0, 0x1);
        gbc.writeMem(0xf77, { 0x3b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe961, gbc.sp());
        EXPECT(0xf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 005E
        gbc.setState(0x601f, 0xca6e, 0x42c0, 0x37ee, 0x5dbb, 0x46d, 0x1, 0x1);
        gbc.writeMem(0x601f, { 0x3b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xca6d, gbc.sp());
        EXPECT(0x6020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 005F
        gbc.setState(0x5d49, 0xd34c, 0x28a0, 0xe6b7, 0x2308, 0x407, 0x1, 0x1);
        gbc.writeMem(0x5d49, { 0x3b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd34b, gbc.sp());
        EXPECT(0x5d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0060
        gbc.setState(0x4170, 0x72f1, 0x260, 0x35cd, 0x4d80, 0x47cf, 0x1, 0x0);
        gbc.writeMem(0x4170, { 0x3b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x72f0, gbc.sp());
        EXPECT(0x4171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0061
        gbc.setState(0xbf4f, 0xe5af, 0xc320, 0x3bed, 0xf3a, 0x1355, 0x1, 0x1);
        gbc.writeMem(0xbf4f, { 0x3b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe5ae, gbc.sp());
        EXPECT(0xbf50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbf4f));
        // 3B 0062
        gbc.setState(0x3b91, 0xc4ed, 0x4b70, 0x188f, 0x3040, 0x1df1, 0x0, 0x1);
        gbc.writeMem(0x3b91, { 0x3b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc4ec, gbc.sp());
        EXPECT(0x3b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0063
        gbc.setState(0xef44, 0xfb98, 0x2f40, 0xd642, 0xb00d, 0x7639, 0x1, 0x0);
        gbc.writeMem(0xef44, { 0x3b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfb97, gbc.sp());
        EXPECT(0xef45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xef44));
        // 3B 0064
        gbc.setState(0xa4c3, 0xd760, 0xcab0, 0x57a4, 0xd394, 0xa653, 0x0, 0x1);
        gbc.writeMem(0xa4c3, { 0x3b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd75f, gbc.sp());
        EXPECT(0xa4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa4c3));
        // 3B 0065
        gbc.setState(0x2352, 0xb6d, 0x7cd0, 0x9d55, 0x3604, 0x102f, 0x0, 0x0);
        gbc.writeMem(0x2352, { 0x3b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb6c, gbc.sp());
        EXPECT(0x2353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0066
        gbc.setState(0x3368, 0xa2fa, 0x8380, 0xf4e0, 0xd9ec, 0x8d5d, 0x1, 0x0);
        gbc.writeMem(0x3368, { 0x3b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa2f9, gbc.sp());
        EXPECT(0x3369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0067
        gbc.setState(0x390d, 0x2dcc, 0x2dc0, 0x7ef2, 0xaffc, 0x9bc0, 0x0, 0x1);
        gbc.writeMem(0x390d, { 0x3b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2dcb, gbc.sp());
        EXPECT(0x390e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0068
        gbc.setState(0x537, 0x834b, 0x50c0, 0x2f44, 0x1498, 0x4df6, 0x1, 0x1);
        gbc.writeMem(0x537, { 0x3b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x834a, gbc.sp());
        EXPECT(0x538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0069
        gbc.setState(0x9e69, 0x29b1, 0x29e0, 0xd863, 0x4f11, 0xebc2, 0x0, 0x1);
        gbc.writeMem(0x9e69, { 0x3b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x29b0, gbc.sp());
        EXPECT(0x9e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9e69));
        // 3B 006A
        gbc.setState(0xdc00, 0x4685, 0x78d0, 0x9967, 0xc417, 0x66f0, 0x1, 0x1);
        gbc.writeMem(0xdc00, { 0x3b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4684, gbc.sp());
        EXPECT(0xdc01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdc00));
        // 3B 006B
        gbc.setState(0x2ffb, 0x8dd2, 0xa2c0, 0xcfd5, 0x3f43, 0x9c3, 0x1, 0x0);
        gbc.writeMem(0x2ffb, { 0x3b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8dd1, gbc.sp());
        EXPECT(0x2ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 006C
        gbc.setState(0x9963, 0xe9ba, 0x9590, 0xde69, 0xfcd, 0x31f6, 0x0, 0x0);
        gbc.writeMem(0x9963, { 0x3b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe9b9, gbc.sp());
        EXPECT(0x9964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9963));
        // 3B 006D
        gbc.setState(0xbe22, 0xd35, 0xd160, 0x33ee, 0xb9d7, 0xbd5b, 0x0, 0x0);
        gbc.writeMem(0xbe22, { 0x3b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd34, gbc.sp());
        EXPECT(0xbe23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbe22));
        // 3B 006E
        gbc.setState(0x1e74, 0x776d, 0x4d50, 0xa93e, 0x2438, 0x2002, 0x0, 0x1);
        gbc.writeMem(0x1e74, { 0x3b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x776c, gbc.sp());
        EXPECT(0x1e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 006F
        gbc.setState(0x926a, 0xfc4c, 0xb260, 0x7ca7, 0x5663, 0x1b75, 0x0, 0x1);
        gbc.writeMem(0x926a, { 0x3b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfc4b, gbc.sp());
        EXPECT(0x926b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x926a));
        // 3B 0071
        gbc.setState(0x678b, 0x6075, 0x3340, 0x58ba, 0x6b10, 0x61ad, 0x1, 0x0);
        gbc.writeMem(0x678b, { 0x3b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6074, gbc.sp());
        EXPECT(0x678c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0072
        gbc.setState(0xd896, 0x1233, 0x9af0, 0x81cc, 0xe439, 0x94ae, 0x1, 0x0);
        gbc.writeMem(0xd896, { 0x3b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1232, gbc.sp());
        EXPECT(0xd897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd896));
        // 3B 0073
        gbc.setState(0xdda, 0x64e, 0xd050, 0x1546, 0x48a7, 0xcef0, 0x1, 0x1);
        gbc.writeMem(0xdda, { 0x3b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x64d, gbc.sp());
        EXPECT(0xddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0074
        gbc.setState(0x4d29, 0xe016, 0xbb20, 0x550, 0x6734, 0x1c6d, 0x0, 0x0);
        gbc.writeMem(0x4d29, { 0x3b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe015, gbc.sp());
        EXPECT(0x4d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0075
        gbc.setState(0x8643, 0xb215, 0xfe90, 0xd0c1, 0xf075, 0x8334, 0x0, 0x0);
        gbc.writeMem(0x8643, { 0x3b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb214, gbc.sp());
        EXPECT(0x8644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8643));
        // 3B 0076
        gbc.setState(0xe78b, 0xe725, 0x20, 0xfba0, 0x75a9, 0xb85e, 0x0, 0x1);
        gbc.writeMem(0xe78b, { 0x3b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe724, gbc.sp());
        EXPECT(0xe78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe78b));
        // 3B 0077
        gbc.setState(0x36d4, 0xc33a, 0xfa00, 0x86b6, 0xc8bd, 0xad04, 0x0, 0x1);
        gbc.writeMem(0x36d4, { 0x3b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc339, gbc.sp());
        EXPECT(0x36d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0078
        gbc.setState(0xcf8a, 0x5271, 0x16a0, 0xe7f7, 0x1cb4, 0x65a7, 0x0, 0x1);
        gbc.writeMem(0xcf8a, { 0x3b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5270, gbc.sp());
        EXPECT(0xcf8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcf8a));
        // 3B 0079
        gbc.setState(0xed96, 0xb3ee, 0xf9d0, 0x885c, 0x6cbc, 0x3c84, 0x0, 0x1);
        gbc.writeMem(0xed96, { 0x3b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb3ed, gbc.sp());
        EXPECT(0xed97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xed96));
        // 3B 007A
        gbc.setState(0x1cc3, 0x4d1d, 0x9c10, 0xe5c7, 0x1878, 0xa9d4, 0x0, 0x1);
        gbc.writeMem(0x1cc3, { 0x3b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4d1c, gbc.sp());
        EXPECT(0x1cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 007B
        gbc.setState(0x3d73, 0x94e8, 0x69e0, 0x111b, 0x9369, 0x950c, 0x0, 0x0);
        gbc.writeMem(0x3d73, { 0x3b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x94e7, gbc.sp());
        EXPECT(0x3d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 007C
        gbc.setState(0x4870, 0x2943, 0xc1f0, 0x6680, 0xc35c, 0xfced, 0x0, 0x1);
        gbc.writeMem(0x4870, { 0x3b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2942, gbc.sp());
        EXPECT(0x4871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 007D
        gbc.setState(0x8c10, 0x405e, 0x91e0, 0x525c, 0x195f, 0x4661, 0x1, 0x1);
        gbc.writeMem(0x8c10, { 0x3b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x405d, gbc.sp());
        EXPECT(0x8c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8c10));
        // 3B 007E
        gbc.setState(0x4605, 0x55e0, 0xf4e0, 0xe294, 0xd036, 0xf500, 0x0, 0x1);
        gbc.writeMem(0x4605, { 0x3b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x55df, gbc.sp());
        EXPECT(0x4606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 007F
        gbc.setState(0x38c1, 0xed0e, 0x350, 0x5a7f, 0xf649, 0xf6cc, 0x1, 0x0);
        gbc.writeMem(0x38c1, { 0x3b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xed0d, gbc.sp());
        EXPECT(0x38c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0080
        gbc.setState(0xb34f, 0x49bd, 0x8360, 0x9fd1, 0x7d24, 0x50fe, 0x0, 0x0);
        gbc.writeMem(0xb34f, { 0x3b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x49bc, gbc.sp());
        EXPECT(0xb350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb34f));
        // 3B 0081
        gbc.setState(0xc138, 0x1e77, 0x6230, 0x5d13, 0x4391, 0x75f, 0x0, 0x1);
        gbc.writeMem(0xc138, { 0x3b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1e76, gbc.sp());
        EXPECT(0xc139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc138));
        // 3B 0082
        gbc.setState(0x9641, 0x1102, 0xb020, 0x903e, 0x3f1b, 0x3f68, 0x1, 0x0);
        gbc.writeMem(0x9641, { 0x3b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1101, gbc.sp());
        EXPECT(0x9642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9641));
        // 3B 0083
        gbc.setState(0xda74, 0x9c1, 0x2a50, 0xa782, 0x2724, 0xe750, 0x1, 0x0);
        gbc.writeMem(0xda74, { 0x3b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9c0, gbc.sp());
        EXPECT(0xda75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xda74));
        // 3B 0084
        gbc.setState(0xe961, 0x505d, 0x90e0, 0x64bc, 0xeee3, 0x4f00, 0x0, 0x1);
        gbc.writeMem(0xe961, { 0x3b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x505c, gbc.sp());
        EXPECT(0xe962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe961));
        // 3B 0085
        gbc.setState(0x5ea7, 0x1bdb, 0x1c50, 0x9b99, 0x90c3, 0x1e10, 0x0, 0x0);
        gbc.writeMem(0x5ea7, { 0x3b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1bda, gbc.sp());
        EXPECT(0x5ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0086
        gbc.setState(0xc5f, 0xab9a, 0xf710, 0xb475, 0x59f7, 0x247a, 0x1, 0x0);
        gbc.writeMem(0xc5f, { 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xab99, gbc.sp());
        EXPECT(0xc60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0087
        gbc.setState(0x9f1f, 0x332e, 0x28c0, 0xa301, 0xccf4, 0xbaa7, 0x0, 0x1);
        gbc.writeMem(0x9f1f, { 0x3b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x332d, gbc.sp());
        EXPECT(0x9f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9f1f));
        // 3B 0088
        gbc.setState(0x9689, 0xfe2e, 0xf390, 0x619b, 0xc153, 0x944e, 0x0, 0x0);
        gbc.writeMem(0x9689, { 0x3b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfe2d, gbc.sp());
        EXPECT(0x968a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9689));
        // 3B 0089
        gbc.setState(0x89d5, 0xdb39, 0x4d60, 0xbcb4, 0x40d6, 0x74fb, 0x1, 0x0);
        gbc.writeMem(0x89d5, { 0x3b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdb38, gbc.sp());
        EXPECT(0x89d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x89d5));
        // 3B 008A
        gbc.setState(0x7b43, 0xe330, 0xc8e0, 0xbbe4, 0x3975, 0xe527, 0x1, 0x1);
        gbc.writeMem(0x7b43, { 0x3b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe32f, gbc.sp());
        EXPECT(0x7b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 008B
        gbc.setState(0xaa93, 0xe675, 0x5d0, 0x1792, 0x1965, 0x53ff, 0x1, 0x0);
        gbc.writeMem(0xaa93, { 0x3b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe674, gbc.sp());
        EXPECT(0xaa94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xaa93));
        // 3B 008C
        gbc.setState(0xc54d, 0xb5a9, 0x3550, 0xbbfa, 0xb99d, 0xa453, 0x0, 0x0);
        gbc.writeMem(0xc54d, { 0x3b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb5a8, gbc.sp());
        EXPECT(0xc54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc54d));
        // 3B 008D
        gbc.setState(0x84b7, 0x9ac5, 0x3420, 0xce45, 0x9c1a, 0x9568, 0x1, 0x0);
        gbc.writeMem(0x84b7, { 0x3b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9ac4, gbc.sp());
        EXPECT(0x84b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x84b7));
        // 3B 008E
        gbc.setState(0x916f, 0xb242, 0x25e0, 0x20aa, 0x6544, 0x2b4a, 0x1, 0x1);
        gbc.writeMem(0x916f, { 0x3b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb241, gbc.sp());
        EXPECT(0x9170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x916f));
        // 3B 008F
        gbc.setState(0x4b81, 0x2c70, 0xe720, 0x6bb0, 0x94b1, 0xd85d, 0x0, 0x1);
        gbc.writeMem(0x4b81, { 0x3b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2c6f, gbc.sp());
        EXPECT(0x4b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0090
        gbc.setState(0x1aa3, 0x8e76, 0xa4d0, 0xe47c, 0x2d1c, 0xd0f2, 0x1, 0x1);
        gbc.writeMem(0x1aa3, { 0x3b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8e75, gbc.sp());
        EXPECT(0x1aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0091
        gbc.setState(0x740b, 0xcbe2, 0xdae0, 0x8aad, 0x8f15, 0x87ee, 0x1, 0x1);
        gbc.writeMem(0x740b, { 0x3b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcbe1, gbc.sp());
        EXPECT(0x740c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0092
        gbc.setState(0x363d, 0x762c, 0xe3a0, 0x49f5, 0x21ce, 0xfc08, 0x0, 0x0);
        gbc.writeMem(0x363d, { 0x3b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x762b, gbc.sp());
        EXPECT(0x363e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0093
        gbc.setState(0x2b18, 0xb9d5, 0x58c0, 0xeaff, 0x2d21, 0x9fe5, 0x0, 0x1);
        gbc.writeMem(0x2b18, { 0x3b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb9d4, gbc.sp());
        EXPECT(0x2b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0094
        gbc.setState(0x5e4d, 0x9a24, 0x1a20, 0x6878, 0xa788, 0x5d9d, 0x1, 0x0);
        gbc.writeMem(0x5e4d, { 0x3b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9a23, gbc.sp());
        EXPECT(0x5e4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0095
        gbc.setState(0x8306, 0x23c4, 0x6560, 0x3829, 0xaa84, 0x8605, 0x0, 0x1);
        gbc.writeMem(0x8306, { 0x3b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x23c3, gbc.sp());
        EXPECT(0x8307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8306));
        // 3B 0096
        gbc.setState(0xde38, 0x462f, 0x30d0, 0x4b47, 0x23b, 0x8fb5, 0x1, 0x0);
        gbc.writeMem(0xde38, { 0x3b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x462e, gbc.sp());
        EXPECT(0xde39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xde38));
        // 3B 0097
        gbc.setState(0xbbd7, 0x6164, 0x950, 0xbf2d, 0x8c71, 0xf2e9, 0x1, 0x1);
        gbc.writeMem(0xbbd7, { 0x3b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6163, gbc.sp());
        EXPECT(0xbbd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbbd7));
        // 3B 0098
        gbc.setState(0x76ce, 0x312b, 0x330, 0x27b1, 0xa7ba, 0x4968, 0x0, 0x0);
        gbc.writeMem(0x76ce, { 0x3b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x312a, gbc.sp());
        EXPECT(0x76cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0099
        gbc.setState(0x5df3, 0xddd4, 0x8830, 0x7b4a, 0xa168, 0x1b13, 0x1, 0x0);
        gbc.writeMem(0x5df3, { 0x3b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xddd3, gbc.sp());
        EXPECT(0x5df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 009A
        gbc.setState(0xe692, 0x5ad6, 0xbe70, 0xb064, 0x989f, 0x7de9, 0x0, 0x1);
        gbc.writeMem(0xe692, { 0x3b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5ad5, gbc.sp());
        EXPECT(0xe693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe692));
        // 3B 009B
        gbc.setState(0xa4de, 0x9be4, 0x5db0, 0xeccf, 0x2afd, 0xf59a, 0x0, 0x0);
        gbc.writeMem(0xa4de, { 0x3b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9be3, gbc.sp());
        EXPECT(0xa4df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa4de));
        // 3B 009C
        gbc.setState(0x3316, 0x92b6, 0x67f0, 0x31c0, 0xdde8, 0x6eef, 0x0, 0x0);
        gbc.writeMem(0x3316, { 0x3b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x92b5, gbc.sp());
        EXPECT(0x3317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 009D
        gbc.setState(0x81e0, 0xf12e, 0x6330, 0x38dc, 0x8956, 0x7b09, 0x0, 0x0);
        gbc.writeMem(0x81e0, { 0x3b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf12d, gbc.sp());
        EXPECT(0x81e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x81e0));
        // 3B 009F
        gbc.setState(0x802, 0x6bee, 0x5210, 0xf551, 0xd66b, 0x414f, 0x1, 0x1);
        gbc.writeMem(0x802, { 0x3b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6bed, gbc.sp());
        EXPECT(0x803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00A0
        gbc.setState(0x1296, 0x9da2, 0x5b0, 0x3a63, 0x3805, 0xe07d, 0x0, 0x0);
        gbc.writeMem(0x1296, { 0x3b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9da1, gbc.sp());
        EXPECT(0x1297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00A1
        gbc.setState(0xa39d, 0xd2e5, 0x300, 0xd63f, 0x6264, 0xfe87, 0x1, 0x1);
        gbc.writeMem(0xa39d, { 0x3b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd2e4, gbc.sp());
        EXPECT(0xa39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa39d));
        // 3B 00A2
        gbc.setState(0xa45f, 0x3f58, 0xeee0, 0xaf9d, 0x7e9, 0x551f, 0x1, 0x1);
        gbc.writeMem(0xa45f, { 0x3b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3f57, gbc.sp());
        EXPECT(0xa460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa45f));
        // 3B 00A3
        gbc.setState(0xbb44, 0xe682, 0xea10, 0xf6f8, 0xcef2, 0x543b, 0x0, 0x1);
        gbc.writeMem(0xbb44, { 0x3b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe681, gbc.sp());
        EXPECT(0xbb45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbb44));
        // 3B 00A4
        gbc.setState(0x29ec, 0x8232, 0x8dd0, 0x76be, 0xfcdf, 0x970c, 0x1, 0x1);
        gbc.writeMem(0x29ec, { 0x3b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8231, gbc.sp());
        EXPECT(0x29ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00A5
        gbc.setState(0x9e1b, 0x5322, 0xee0, 0xedf0, 0x23ae, 0x55b4, 0x1, 0x1);
        gbc.writeMem(0x9e1b, { 0x3b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5321, gbc.sp());
        EXPECT(0x9e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9e1b));
        // 3B 00A6
        gbc.setState(0xaa69, 0xfea9, 0xaa90, 0xb2ff, 0xa5ea, 0xbed, 0x1, 0x1);
        gbc.writeMem(0xaa69, { 0x3b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfea8, gbc.sp());
        EXPECT(0xaa6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xaa69));
        // 3B 00A7
        gbc.setState(0x3380, 0x6785, 0x1340, 0x8725, 0x9151, 0x3d8b, 0x1, 0x1);
        gbc.writeMem(0x3380, { 0x3b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6784, gbc.sp());
        EXPECT(0x3381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00A9
        gbc.setState(0x70ee, 0xae33, 0x18b0, 0x41cf, 0x88e9, 0x63ee, 0x1, 0x0);
        gbc.writeMem(0x70ee, { 0x3b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xae32, gbc.sp());
        EXPECT(0x70ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00AA
        gbc.setState(0x8279, 0x3746, 0x3d00, 0x9255, 0xca83, 0x1d18, 0x1, 0x0);
        gbc.writeMem(0x8279, { 0x3b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3745, gbc.sp());
        EXPECT(0x827a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8279));
        // 3B 00AB
        gbc.setState(0x138a, 0x5d09, 0x1530, 0x423f, 0x425b, 0xf59c, 0x1, 0x0);
        gbc.writeMem(0x138a, { 0x3b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5d08, gbc.sp());
        EXPECT(0x138b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00AC
        gbc.setState(0x262d, 0xf01, 0x3570, 0x5549, 0x29a7, 0x2776, 0x1, 0x0);
        gbc.writeMem(0x262d, { 0x3b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf00, gbc.sp());
        EXPECT(0x262e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00AD
        gbc.setState(0x6786, 0x2854, 0x5450, 0x520c, 0x4655, 0x5735, 0x1, 0x1);
        gbc.writeMem(0x6786, { 0x3b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2853, gbc.sp());
        EXPECT(0x6787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00AE
        gbc.setState(0x7f8e, 0xc2da, 0x2cd0, 0x25c8, 0xb4f8, 0x93d8, 0x0, 0x0);
        gbc.writeMem(0x7f8e, { 0x3b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc2d9, gbc.sp());
        EXPECT(0x7f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00AF
        gbc.setState(0x50c6, 0x471f, 0xb150, 0x9c5, 0x351d, 0x5b10, 0x0, 0x0);
        gbc.writeMem(0x50c6, { 0x3b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x471e, gbc.sp());
        EXPECT(0x50c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00B0
        gbc.setState(0x5cbf, 0xcd3, 0xe450, 0x5984, 0xfbb0, 0xc33d, 0x1, 0x0);
        gbc.writeMem(0x5cbf, { 0x3b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcd2, gbc.sp());
        EXPECT(0x5cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00B1
        gbc.setState(0x466, 0x6161, 0x2870, 0xb97f, 0xe5bc, 0xf384, 0x0, 0x0);
        gbc.writeMem(0x466, { 0x3b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6160, gbc.sp());
        EXPECT(0x467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00B3
        gbc.setState(0xbcd6, 0x7e5b, 0x3be0, 0xea8, 0x4bfd, 0xb6fe, 0x0, 0x0);
        gbc.writeMem(0xbcd6, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7e5a, gbc.sp());
        EXPECT(0xbcd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbcd6));
        // 3B 00B4
        gbc.setState(0x201b, 0x8c89, 0xdc70, 0xff4c, 0x265e, 0x6e53, 0x0, 0x0);
        gbc.writeMem(0x201b, { 0x3b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8c88, gbc.sp());
        EXPECT(0x201c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00B5
        gbc.setState(0x313, 0xbe4, 0xd680, 0xa9dc, 0xee84, 0x5223, 0x1, 0x1);
        gbc.writeMem(0x313, { 0x3b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbe3, gbc.sp());
        EXPECT(0x314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00B6
        gbc.setState(0xdd8b, 0xfcfe, 0x9a60, 0x73ea, 0x5981, 0xbf60, 0x0, 0x1);
        gbc.writeMem(0xdd8b, { 0x3b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfcfd, gbc.sp());
        EXPECT(0xdd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdd8b));
        // 3B 00B7
        gbc.setState(0x5827, 0xda25, 0x5a80, 0x7702, 0x786a, 0xa5de, 0x1, 0x1);
        gbc.writeMem(0x5827, { 0x3b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xda24, gbc.sp());
        EXPECT(0x5828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00B8
        gbc.setState(0xee23, 0xb0bd, 0x650, 0x2d2e, 0xe0d6, 0x2e3e, 0x0, 0x1);
        gbc.writeMem(0xee23, { 0x3b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb0bc, gbc.sp());
        EXPECT(0xee24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xee23));
        // 3B 00B9
        gbc.setState(0x96ca, 0x1752, 0x36c0, 0x740c, 0xb8a, 0x9f1d, 0x0, 0x0);
        gbc.writeMem(0x96ca, { 0x3b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1751, gbc.sp());
        EXPECT(0x96cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x96ca));
        // 3B 00BB
        gbc.setState(0xe2d9, 0xc4fe, 0x3c60, 0x2a1d, 0x44c8, 0x8da3, 0x0, 0x1);
        gbc.writeMem(0xe2d9, { 0x3b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc4fd, gbc.sp());
        EXPECT(0xe2da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe2d9));
        // 3B 00BC
        gbc.setState(0x547, 0x2a1b, 0x8600, 0x73dc, 0xd21d, 0x155f, 0x1, 0x1);
        gbc.writeMem(0x547, { 0x3b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2a1a, gbc.sp());
        EXPECT(0x548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00BD
        gbc.setState(0xec4d, 0xe882, 0x40a0, 0xa956, 0xca75, 0x8168, 0x0, 0x1);
        gbc.writeMem(0xec4d, { 0x3b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe881, gbc.sp());
        EXPECT(0xec4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xec4d));
        // 3B 00BE
        gbc.setState(0x2dd7, 0xc492, 0xff80, 0xdff2, 0x6729, 0x87ab, 0x0, 0x1);
        gbc.writeMem(0x2dd7, { 0x3b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc491, gbc.sp());
        EXPECT(0x2dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00BF
        gbc.setState(0x4cbe, 0xc656, 0xae0, 0x1bc5, 0x3d0, 0x5fe7, 0x1, 0x1);
        gbc.writeMem(0x4cbe, { 0x3b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc655, gbc.sp());
        EXPECT(0x4cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00C0
        gbc.setState(0x8032, 0x4550, 0xcd00, 0x17c4, 0x9d4c, 0xa2de, 0x1, 0x0);
        gbc.writeMem(0x8032, { 0x3b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x454f, gbc.sp());
        EXPECT(0x8033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8032));
        // 3B 00C1
        gbc.setState(0x46f7, 0x38f5, 0xe240, 0xaef2, 0x88d4, 0x6e13, 0x1, 0x0);
        gbc.writeMem(0x46f7, { 0x3b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x38f4, gbc.sp());
        EXPECT(0x46f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00C2
        gbc.setState(0xa14e, 0xc6d, 0x4b70, 0x5d82, 0x7217, 0x3976, 0x0, 0x0);
        gbc.writeMem(0xa14e, { 0x3b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc6c, gbc.sp());
        EXPECT(0xa14f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa14e));
        // 3B 00C3
        gbc.setState(0x883a, 0xf7bb, 0x900, 0x59b7, 0xa3c, 0x30e6, 0x0, 0x1);
        gbc.writeMem(0x883a, { 0x3b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf7ba, gbc.sp());
        EXPECT(0x883b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x883a));
        // 3B 00C4
        gbc.setState(0x9ac4, 0xef38, 0x3ca0, 0x30c3, 0x5f48, 0x24a8, 0x0, 0x0);
        gbc.writeMem(0x9ac4, { 0x3b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xef37, gbc.sp());
        EXPECT(0x9ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9ac4));
        // 3B 00C5
        gbc.setState(0x2780, 0x8fb, 0x97e0, 0x6c8a, 0x65ba, 0x5871, 0x0, 0x1);
        gbc.writeMem(0x2780, { 0x3b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8fa, gbc.sp());
        EXPECT(0x2781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00C6
        gbc.setState(0x28c6, 0x33d6, 0x3a70, 0x82d8, 0x8066, 0x1c78, 0x1, 0x1);
        gbc.writeMem(0x28c6, { 0x3b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x33d5, gbc.sp());
        EXPECT(0x28c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00C7
        gbc.setState(0x5513, 0xea9d, 0xaa40, 0x92d6, 0xc6be, 0x7216, 0x1, 0x1);
        gbc.writeMem(0x5513, { 0x3b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xea9c, gbc.sp());
        EXPECT(0x5514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00C8
        gbc.setState(0x20a4, 0x839c, 0xec0, 0x9f90, 0x9cb0, 0x5262, 0x1, 0x0);
        gbc.writeMem(0x20a4, { 0x3b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x839b, gbc.sp());
        EXPECT(0x20a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00C9
        gbc.setState(0xd281, 0xb37f, 0xdfe0, 0x20ce, 0x3f9c, 0x6f5d, 0x0, 0x0);
        gbc.writeMem(0xd281, { 0x3b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb37e, gbc.sp());
        EXPECT(0xd282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd281));
        // 3B 00CA
        gbc.setState(0x40d3, 0x1861, 0x71b0, 0x36ae, 0x779b, 0x35e, 0x1, 0x1);
        gbc.writeMem(0x40d3, { 0x3b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1860, gbc.sp());
        EXPECT(0x40d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00CB
        gbc.setState(0x3bf8, 0x653, 0x37d0, 0xec18, 0x4d5f, 0x79ac, 0x0, 0x0);
        gbc.writeMem(0x3bf8, { 0x3b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x652, gbc.sp());
        EXPECT(0x3bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00CC
        gbc.setState(0x5061, 0x4994, 0x5080, 0xf179, 0x59e2, 0xcff3, 0x1, 0x1);
        gbc.writeMem(0x5061, { 0x3b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4993, gbc.sp());
        EXPECT(0x5062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00CD
        gbc.setState(0x2187, 0xf51, 0x9e20, 0x7e3, 0x68f4, 0xd61c, 0x0, 0x0);
        gbc.writeMem(0x2187, { 0x3b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf50, gbc.sp());
        EXPECT(0x2188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00CE
        gbc.setState(0xa4da, 0x7e77, 0x1bf0, 0x7661, 0x6db9, 0x4860, 0x1, 0x0);
        gbc.writeMem(0xa4da, { 0x3b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7e76, gbc.sp());
        EXPECT(0xa4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa4da));
        // 3B 00CF
        gbc.setState(0x5829, 0x432a, 0xcde0, 0x6d9, 0xc6f9, 0x3a7b, 0x1, 0x0);
        gbc.writeMem(0x5829, { 0x3b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4329, gbc.sp());
        EXPECT(0x582a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00D0
        gbc.setState(0x4b9a, 0x2d36, 0x71b0, 0x3e89, 0x7de5, 0xc51a, 0x1, 0x1);
        gbc.writeMem(0x4b9a, { 0x3b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2d35, gbc.sp());
        EXPECT(0x4b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00D1
        gbc.setState(0x3654, 0xbac5, 0x8b40, 0x8276, 0x2846, 0xa158, 0x1, 0x0);
        gbc.writeMem(0x3654, { 0x3b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbac4, gbc.sp());
        EXPECT(0x3655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00D2
        gbc.setState(0x74b5, 0x1c68, 0xcea0, 0xa538, 0x5216, 0xf2ca, 0x1, 0x0);
        gbc.writeMem(0x74b5, { 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1c67, gbc.sp());
        EXPECT(0x74b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00D3
        gbc.setState(0x316d, 0xaf58, 0xe830, 0x5514, 0xfe8a, 0xfaff, 0x1, 0x0);
        gbc.writeMem(0x316d, { 0x3b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xaf57, gbc.sp());
        EXPECT(0x316e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00D4
        gbc.setState(0x382e, 0x81a8, 0xdba0, 0x1ce1, 0x9410, 0xc804, 0x1, 0x1);
        gbc.writeMem(0x382e, { 0x3b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x81a7, gbc.sp());
        EXPECT(0x382f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00D5
        gbc.setState(0x4fee, 0x53e1, 0x4380, 0x257, 0xfd52, 0x887d, 0x0, 0x0);
        gbc.writeMem(0x4fee, { 0x3b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x53e0, gbc.sp());
        EXPECT(0x4fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00D6
        gbc.setState(0xbd6e, 0x39c9, 0x2280, 0xb208, 0x67d8, 0xb784, 0x1, 0x1);
        gbc.writeMem(0xbd6e, { 0x3b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x39c8, gbc.sp());
        EXPECT(0xbd6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbd6e));
        // 3B 00D7
        gbc.setState(0xa6a1, 0xed0d, 0x6b0, 0x5a6d, 0x3535, 0x4eb1, 0x1, 0x0);
        gbc.writeMem(0xa6a1, { 0x3b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xed0c, gbc.sp());
        EXPECT(0xa6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa6a1));
        // 3B 00D8
        gbc.setState(0x5bc1, 0xe3d6, 0x8eb0, 0x16b3, 0x3e9e, 0x5b92, 0x0, 0x1);
        gbc.writeMem(0x5bc1, { 0x3b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe3d5, gbc.sp());
        EXPECT(0x5bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00D9
        gbc.setState(0x7d82, 0x5929, 0x2300, 0x1744, 0xc8ab, 0x882f, 0x0, 0x0);
        gbc.writeMem(0x7d82, { 0x3b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5928, gbc.sp());
        EXPECT(0x7d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00DA
        gbc.setState(0x1e48, 0x7586, 0xe390, 0xcd11, 0x25cc, 0x174, 0x0, 0x0);
        gbc.writeMem(0x1e48, { 0x3b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7585, gbc.sp());
        EXPECT(0x1e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00DB
        gbc.setState(0xcacd, 0x67ba, 0xcf60, 0x1042, 0x5be, 0x4729, 0x1, 0x0);
        gbc.writeMem(0xcacd, { 0x3b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x67b9, gbc.sp());
        EXPECT(0xcace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcacd));
        // 3B 00DC
        gbc.setState(0x1ce4, 0x8da8, 0xaea0, 0x25c, 0x1f13, 0xc212, 0x1, 0x1);
        gbc.writeMem(0x1ce4, { 0x3b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8da7, gbc.sp());
        EXPECT(0x1ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00DD
        gbc.setState(0xaac0, 0x55b9, 0x4230, 0x91ab, 0x34fb, 0x4acd, 0x1, 0x1);
        gbc.writeMem(0xaac0, { 0x3b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x55b8, gbc.sp());
        EXPECT(0xaac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xaac0));
        // 3B 00DE
        gbc.setState(0xc834, 0xcdbc, 0x6460, 0xe06, 0x9acc, 0xc10f, 0x1, 0x1);
        gbc.writeMem(0xc834, { 0x3b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcdbb, gbc.sp());
        EXPECT(0xc835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc834));
        // 3B 00DF
        gbc.setState(0x27c6, 0x1944, 0xf080, 0x5e76, 0x57b4, 0xf6a, 0x1, 0x0);
        gbc.writeMem(0x27c6, { 0x3b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1943, gbc.sp());
        EXPECT(0x27c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00E0
        gbc.setState(0xbde2, 0xf0cc, 0xec90, 0x1386, 0x9585, 0x6bce, 0x1, 0x0);
        gbc.writeMem(0xbde2, { 0x3b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf0cb, gbc.sp());
        EXPECT(0xbde3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbde2));
        // 3B 00E1
        gbc.setState(0x7c8e, 0xb1e9, 0x8ba0, 0x20c6, 0x1e46, 0xa703, 0x0, 0x1);
        gbc.writeMem(0x7c8e, { 0x3b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb1e8, gbc.sp());
        EXPECT(0x7c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00E2
        gbc.setState(0x8150, 0x2286, 0x67d0, 0xb2e3, 0xffd, 0x786d, 0x1, 0x1);
        gbc.writeMem(0x8150, { 0x3b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2285, gbc.sp());
        EXPECT(0x8151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8150));
        // 3B 00E3
        gbc.setState(0x793f, 0x15ed, 0xfec0, 0xd902, 0x183e, 0xdfdb, 0x1, 0x0);
        gbc.writeMem(0x793f, { 0x3b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x15ec, gbc.sp());
        EXPECT(0x7940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00E4
        gbc.setState(0xb0fb, 0x79db, 0x54c0, 0x8891, 0x1d2a, 0x450f, 0x1, 0x1);
        gbc.writeMem(0xb0fb, { 0x3b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x79da, gbc.sp());
        EXPECT(0xb0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb0fb));
        // 3B 00E5
        gbc.setState(0x6b3c, 0x9d73, 0x4480, 0x4e20, 0x3e08, 0x1364, 0x1, 0x1);
        gbc.writeMem(0x6b3c, { 0x3b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9d72, gbc.sp());
        EXPECT(0x6b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00E6
        gbc.setState(0x57a5, 0x387e, 0x5ef0, 0x2d63, 0x126b, 0x8890, 0x1, 0x0);
        gbc.writeMem(0x57a5, { 0x3b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x387d, gbc.sp());
        EXPECT(0x57a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00E7
        gbc.setState(0x8861, 0x8db1, 0x9ba0, 0x12b4, 0x3c64, 0xbd61, 0x1, 0x1);
        gbc.writeMem(0x8861, { 0x3b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8db0, gbc.sp());
        EXPECT(0x8862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8861));
        // 3B 00E8
        gbc.setState(0x9cfc, 0x9fbd, 0xbc20, 0x36e9, 0x9b21, 0x9098, 0x1, 0x1);
        gbc.writeMem(0x9cfc, { 0x3b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9fbc, gbc.sp());
        EXPECT(0x9cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9cfc));
        // 3B 00E9
        gbc.setState(0x69db, 0x4929, 0x98f0, 0x2e99, 0x4f0a, 0x293a, 0x1, 0x0);
        gbc.writeMem(0x69db, { 0x3b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4928, gbc.sp());
        EXPECT(0x69dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00EA
        gbc.setState(0xd264, 0x2f84, 0xee90, 0xbcce, 0x2362, 0x7ecd, 0x0, 0x0);
        gbc.writeMem(0xd264, { 0x3b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2f83, gbc.sp());
        EXPECT(0xd265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd264));
        // 3B 00EB
        gbc.setState(0xde21, 0x360f, 0xb930, 0x67a4, 0xf34e, 0x990a, 0x0, 0x1);
        gbc.writeMem(0xde21, { 0x3b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x360e, gbc.sp());
        EXPECT(0xde22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xde21));
        // 3B 00EC
        gbc.setState(0x15b2, 0x9f3f, 0x82e0, 0x3cee, 0xaa41, 0x3f4b, 0x1, 0x1);
        gbc.writeMem(0x15b2, { 0x3b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9f3e, gbc.sp());
        EXPECT(0x15b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00ED
        gbc.setState(0xa325, 0x1fb6, 0x7140, 0x8b94, 0xe095, 0xd3c9, 0x1, 0x1);
        gbc.writeMem(0xa325, { 0x3b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1fb5, gbc.sp());
        EXPECT(0xa326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa325));
        // 3B 00EE
        gbc.setState(0xde67, 0xe653, 0x44e0, 0xb72b, 0x3c34, 0x7adf, 0x1, 0x0);
        gbc.writeMem(0xde67, { 0x3b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe652, gbc.sp());
        EXPECT(0xde68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xde67));
        // 3B 00EF
        gbc.setState(0xaa53, 0xefd1, 0x7180, 0xa44a, 0xa311, 0xa7c9, 0x1, 0x1);
        gbc.writeMem(0xaa53, { 0x3b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xefd0, gbc.sp());
        EXPECT(0xaa54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xaa53));
        // 3B 00F0
        gbc.setState(0x5240, 0x5c87, 0x5cf0, 0xace0, 0x9935, 0x7b20, 0x0, 0x1);
        gbc.writeMem(0x5240, { 0x3b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5c86, gbc.sp());
        EXPECT(0x5241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00F1
        gbc.setState(0x9e10, 0x1fe7, 0x7b60, 0xf4b4, 0x3abf, 0x4392, 0x0, 0x1);
        gbc.writeMem(0x9e10, { 0x3b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1fe6, gbc.sp());
        EXPECT(0x9e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9e10));
        // 3B 00F2
        gbc.setState(0x9d97, 0x65a, 0x5940, 0xbe95, 0x716b, 0x173a, 0x1, 0x0);
        gbc.writeMem(0x9d97, { 0x3b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x659, gbc.sp());
        EXPECT(0x9d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9d97));
        // 3B 00F3
        gbc.setState(0xe481, 0x1c0f, 0x5f70, 0xa482, 0xf865, 0x5b56, 0x0, 0x0);
        gbc.writeMem(0xe481, { 0x3b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1c0e, gbc.sp());
        EXPECT(0xe482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe481));
        // 3B 00F4
        gbc.setState(0x95ee, 0x19a0, 0xc5e0, 0x2913, 0xc65, 0x21cb, 0x0, 0x0);
        gbc.writeMem(0x95ee, { 0x3b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x199f, gbc.sp());
        EXPECT(0x95ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x95ee));
        // 3B 00F5
        gbc.setState(0xb671, 0x57f8, 0xfee0, 0x598c, 0x8fc6, 0xc6f5, 0x0, 0x1);
        gbc.writeMem(0xb671, { 0x3b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x57f7, gbc.sp());
        EXPECT(0xb672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb671));
        // 3B 00F6
        gbc.setState(0x9263, 0xedb4, 0xdc10, 0xc647, 0x933, 0xeb14, 0x1, 0x0);
        gbc.writeMem(0x9263, { 0x3b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xedb3, gbc.sp());
        EXPECT(0x9264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9263));
        // 3B 00F7
        gbc.setState(0xa6ca, 0x8295, 0x8640, 0xf05b, 0xa6de, 0x765a, 0x0, 0x1);
        gbc.writeMem(0xa6ca, { 0x3b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8294, gbc.sp());
        EXPECT(0xa6cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa6ca));
        // 3B 00F8
        gbc.setState(0x30bb, 0x8e4a, 0x1660, 0x28ed, 0x621c, 0xb244, 0x0, 0x1);
        gbc.writeMem(0x30bb, { 0x3b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8e49, gbc.sp());
        EXPECT(0x30bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00F9
        gbc.setState(0x4b6b, 0x6ce, 0x5390, 0x6556, 0xe3a8, 0xae8d, 0x0, 0x0);
        gbc.writeMem(0x4b6b, { 0x3b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6cd, gbc.sp());
        EXPECT(0x4b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00FA
        gbc.setState(0x4cfd, 0x682d, 0xec80, 0x2902, 0xe15e, 0xcd19, 0x0, 0x1);
        gbc.writeMem(0x4cfd, { 0x3b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x682c, gbc.sp());
        EXPECT(0x4cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00FB
        gbc.setState(0xe9a0, 0xe0b4, 0x2c10, 0xfa8e, 0x641b, 0xf53a, 0x0, 0x0);
        gbc.writeMem(0xe9a0, { 0x3b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe0b3, gbc.sp());
        EXPECT(0xe9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe9a0));
        // 3B 00FC
        gbc.setState(0x6c5, 0xaa16, 0xe300, 0x69fa, 0xd66c, 0x4b08, 0x0, 0x0);
        gbc.writeMem(0x6c5, { 0x3b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xaa15, gbc.sp());
        EXPECT(0x6c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 00FD
        gbc.setState(0x8040, 0xa231, 0x4d40, 0x9981, 0xd041, 0xbd8f, 0x0, 0x0);
        gbc.writeMem(0x8040, { 0x3b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa230, gbc.sp());
        EXPECT(0x8041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8040));
        // 3B 00FE
        gbc.setState(0x2bda, 0xb110, 0x9010, 0xf5a8, 0x1674, 0x2ffa, 0x1, 0x1);
        gbc.writeMem(0x2bda, { 0x3b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb10f, gbc.sp());
        EXPECT(0x2bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 00FF
        gbc.setState(0xc9fd, 0xeedc, 0x78c0, 0xc684, 0x1feb, 0x2de1, 0x1, 0x0);
        gbc.writeMem(0xc9fd, { 0x3b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xeedb, gbc.sp());
        EXPECT(0xc9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc9fd));
        // 3B 0100
        gbc.setState(0xdb80, 0xdd9b, 0xb820, 0xd2cb, 0xb333, 0x71be, 0x1, 0x1);
        gbc.writeMem(0xdb80, { 0x3b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdd9a, gbc.sp());
        EXPECT(0xdb81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdb80));
        // 3B 0101
        gbc.setState(0xd9fe, 0x1513, 0x57d0, 0x86d2, 0x73f7, 0x5343, 0x0, 0x0);
        gbc.writeMem(0xd9fe, { 0x3b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1512, gbc.sp());
        EXPECT(0xd9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd9fe));
        // 3B 0102
        gbc.setState(0x98c6, 0x6889, 0xf460, 0x5d7f, 0x9750, 0x2323, 0x1, 0x1);
        gbc.writeMem(0x98c6, { 0x3b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6888, gbc.sp());
        EXPECT(0x98c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x98c6));
        // 3B 0103
        gbc.setState(0x7f63, 0x996e, 0xb720, 0x3ff8, 0x78e8, 0xe218, 0x0, 0x1);
        gbc.writeMem(0x7f63, { 0x3b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x996d, gbc.sp());
        EXPECT(0x7f64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0104
        gbc.setState(0x83bd, 0xa8c3, 0x6140, 0x4a3, 0xe6a9, 0xfc84, 0x0, 0x1);
        gbc.writeMem(0x83bd, { 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa8c2, gbc.sp());
        EXPECT(0x83be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x83bd));
        // 3B 0105
        gbc.setState(0xb665, 0xcc5e, 0x93d0, 0x4eb9, 0xfac4, 0x7463, 0x0, 0x1);
        gbc.writeMem(0xb665, { 0x3b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcc5d, gbc.sp());
        EXPECT(0xb666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb665));
        // 3B 0106
        gbc.setState(0xb869, 0x73d, 0xe060, 0x7cc5, 0x335a, 0x7a61, 0x1, 0x0);
        gbc.writeMem(0xb869, { 0x3b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x73c, gbc.sp());
        EXPECT(0xb86a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb869));
        // 3B 0108
        gbc.setState(0x4283, 0xe168, 0x3da0, 0x3a5f, 0x836, 0x315c, 0x0, 0x1);
        gbc.writeMem(0x4283, { 0x3b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe167, gbc.sp());
        EXPECT(0x4284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0109
        gbc.setState(0xab85, 0x3a33, 0xb4a0, 0x5d45, 0x4301, 0x576f, 0x0, 0x0);
        gbc.writeMem(0xab85, { 0x3b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3a32, gbc.sp());
        EXPECT(0xab86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xab85));
        // 3B 010A
        gbc.setState(0x53ba, 0xa0ca, 0x9b60, 0x2078, 0xca6d, 0x7beb, 0x0, 0x1);
        gbc.writeMem(0x53ba, { 0x3b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa0c9, gbc.sp());
        EXPECT(0x53bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 010B
        gbc.setState(0xd833, 0x4fac, 0xb00, 0xc210, 0x77f3, 0xaa25, 0x0, 0x0);
        gbc.writeMem(0xd833, { 0x3b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4fab, gbc.sp());
        EXPECT(0xd834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd833));
        // 3B 010C
        gbc.setState(0xb690, 0x9de6, 0xaa70, 0x4609, 0x2825, 0x9cc2, 0x0, 0x0);
        gbc.writeMem(0xb690, { 0x3b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9de5, gbc.sp());
        EXPECT(0xb691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb690));
        // 3B 010D
        gbc.setState(0x2607, 0xadb0, 0x4640, 0x2a86, 0x957, 0xcc5c, 0x1, 0x1);
        gbc.writeMem(0x2607, { 0x3b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xadaf, gbc.sp());
        EXPECT(0x2608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 010E
        gbc.setState(0x6692, 0x84d1, 0x9850, 0x13b0, 0xa7f4, 0xdf8, 0x0, 0x1);
        gbc.writeMem(0x6692, { 0x3b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x84d0, gbc.sp());
        EXPECT(0x6693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 010F
        gbc.setState(0xc4d3, 0x4a3f, 0x1380, 0x123a, 0x775c, 0x11c0, 0x0, 0x1);
        gbc.writeMem(0xc4d3, { 0x3b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4a3e, gbc.sp());
        EXPECT(0xc4d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc4d3));
        // 3B 0110
        gbc.setState(0x35bd, 0x1792, 0xc640, 0xa1a5, 0xf12e, 0xab7a, 0x1, 0x1);
        gbc.writeMem(0x35bd, { 0x3b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1791, gbc.sp());
        EXPECT(0x35be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0111
        gbc.setState(0x2b2a, 0x42a3, 0xb440, 0xd804, 0x3605, 0x3378, 0x0, 0x0);
        gbc.writeMem(0x2b2a, { 0x3b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x42a2, gbc.sp());
        EXPECT(0x2b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0112
        gbc.setState(0xeab7, 0xccc8, 0xd3b0, 0xcaa8, 0x6a22, 0x53a6, 0x0, 0x0);
        gbc.writeMem(0xeab7, { 0x3b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xccc7, gbc.sp());
        EXPECT(0xeab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xeab7));
        // 3B 0113
        gbc.setState(0x7b28, 0xdeca, 0x50a0, 0x1bd9, 0xd85, 0x8312, 0x0, 0x0);
        gbc.writeMem(0x7b28, { 0x3b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdec9, gbc.sp());
        EXPECT(0x7b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0114
        gbc.setState(0x8f6b, 0x4bae, 0x6500, 0x8cb1, 0x26ed, 0x109b, 0x0, 0x1);
        gbc.writeMem(0x8f6b, { 0x3b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4bad, gbc.sp());
        EXPECT(0x8f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8f6b));
        // 3B 0115
        gbc.setState(0x452e, 0x2014, 0x5c70, 0x32d9, 0xc164, 0x7c5b, 0x0, 0x0);
        gbc.writeMem(0x452e, { 0x3b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2013, gbc.sp());
        EXPECT(0x452f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0116
        gbc.setState(0x14fc, 0xe3bf, 0xa780, 0x68d5, 0x16e3, 0x4903, 0x0, 0x1);
        gbc.writeMem(0x14fc, { 0x3b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe3be, gbc.sp());
        EXPECT(0x14fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0117
        gbc.setState(0x7705, 0xc9c4, 0x6890, 0xbd49, 0x8a14, 0x7f99, 0x0, 0x0);
        gbc.writeMem(0x7705, { 0x3b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc9c3, gbc.sp());
        EXPECT(0x7706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0118
        gbc.setState(0x7e64, 0x9e62, 0xf260, 0xa301, 0xeda8, 0x5305, 0x0, 0x1);
        gbc.writeMem(0x7e64, { 0x3b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9e61, gbc.sp());
        EXPECT(0x7e65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0119
        gbc.setState(0x7679, 0xb1ec, 0x7a0, 0xcc52, 0xdc70, 0x5520, 0x0, 0x1);
        gbc.writeMem(0x7679, { 0x3b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb1eb, gbc.sp());
        EXPECT(0x767a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 011A
        gbc.setState(0x3661, 0x629d, 0x3260, 0x5dff, 0xa8fb, 0xa81e, 0x0, 0x0);
        gbc.writeMem(0x3661, { 0x3b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x629c, gbc.sp());
        EXPECT(0x3662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 011B
        gbc.setState(0x8538, 0x57c6, 0x7ef0, 0x462e, 0x4d23, 0xa40c, 0x0, 0x1);
        gbc.writeMem(0x8538, { 0x3b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x57c5, gbc.sp());
        EXPECT(0x8539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8538));
        // 3B 011C
        gbc.setState(0x667, 0xf18e, 0xfe0, 0xa1, 0xa24b, 0xac26, 0x0, 0x1);
        gbc.writeMem(0x667, { 0x3b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf18d, gbc.sp());
        EXPECT(0x668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 011D
        gbc.setState(0x17e8, 0x8025, 0xb500, 0x664b, 0x2854, 0x5baa, 0x0, 0x1);
        gbc.writeMem(0x17e8, { 0x3b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8024, gbc.sp());
        EXPECT(0x17e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 011E
        gbc.setState(0xed29, 0x68dc, 0xcd80, 0x53a, 0x541, 0xd5e4, 0x1, 0x0);
        gbc.writeMem(0xed29, { 0x3b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x68db, gbc.sp());
        EXPECT(0xed2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xed29));
        // 3B 011F
        gbc.setState(0x4eef, 0x75bf, 0x8c30, 0x26d5, 0x4659, 0xce6f, 0x1, 0x0);
        gbc.writeMem(0x4eef, { 0x3b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x75be, gbc.sp());
        EXPECT(0x4ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0120
        gbc.setState(0x24c3, 0x12fc, 0xc040, 0xe70d, 0x63ab, 0x5db2, 0x1, 0x1);
        gbc.writeMem(0x24c3, { 0x3b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x12fb, gbc.sp());
        EXPECT(0x24c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0121
        gbc.setState(0xb5b7, 0xb336, 0x4260, 0x23b2, 0xb46a, 0x8e5a, 0x0, 0x1);
        gbc.writeMem(0xb5b7, { 0x3b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb335, gbc.sp());
        EXPECT(0xb5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb5b7));
        // 3B 0122
        gbc.setState(0xd69f, 0x5877, 0x5870, 0x3462, 0x16a6, 0xa930, 0x1, 0x1);
        gbc.writeMem(0xd69f, { 0x3b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5876, gbc.sp());
        EXPECT(0xd6a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd69f));
        // 3B 0124
        gbc.setState(0x438a, 0xd371, 0x5570, 0x11b2, 0xaa0f, 0x4beb, 0x1, 0x0);
        gbc.writeMem(0x438a, { 0x3b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd370, gbc.sp());
        EXPECT(0x438b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0125
        gbc.setState(0x4725, 0xe097, 0x18d0, 0x7665, 0x62c3, 0xcb12, 0x1, 0x0);
        gbc.writeMem(0x4725, { 0x3b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe096, gbc.sp());
        EXPECT(0x4726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0126
        gbc.setState(0xb1d7, 0xf218, 0x30d0, 0x4ace, 0xb938, 0x79c1, 0x1, 0x0);
        gbc.writeMem(0xb1d7, { 0x3b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf217, gbc.sp());
        EXPECT(0xb1d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb1d7));
        // 3B 0127
        gbc.setState(0x1689, 0x28b2, 0x5b20, 0x5b86, 0xcb95, 0x8289, 0x0, 0x0);
        gbc.writeMem(0x1689, { 0x3b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x28b1, gbc.sp());
        EXPECT(0x168a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0128
        gbc.setState(0x8858, 0xd0cf, 0x6ab0, 0xc8d0, 0x2998, 0x7197, 0x1, 0x0);
        gbc.writeMem(0x8858, { 0x3b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd0ce, gbc.sp());
        EXPECT(0x8859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8858));
        // 3B 0129
        gbc.setState(0xc999, 0x3a3e, 0x80f0, 0x1e5c, 0x8704, 0x578d, 0x0, 0x1);
        gbc.writeMem(0xc999, { 0x3b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3a3d, gbc.sp());
        EXPECT(0xc99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc999));
        // 3B 012A
        gbc.setState(0xb0da, 0x8145, 0xbd70, 0x3c9b, 0x664e, 0xb4ff, 0x0, 0x1);
        gbc.writeMem(0xb0da, { 0x3b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8144, gbc.sp());
        EXPECT(0xb0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb0da));
        // 3B 012B
        gbc.setState(0x48ee, 0xaf04, 0x6480, 0x6ba6, 0x5562, 0x3425, 0x0, 0x0);
        gbc.writeMem(0x48ee, { 0x3b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xaf03, gbc.sp());
        EXPECT(0x48ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 012C
        gbc.setState(0x6d0a, 0xbd04, 0x94a0, 0x1578, 0x4139, 0x4c0d, 0x0, 0x1);
        gbc.writeMem(0x6d0a, { 0x3b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbd03, gbc.sp());
        EXPECT(0x6d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 012D
        gbc.setState(0xd1eb, 0x990b, 0x6d0, 0xe235, 0x2b34, 0x2e5d, 0x1, 0x1);
        gbc.writeMem(0xd1eb, { 0x3b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x990a, gbc.sp());
        EXPECT(0xd1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd1eb));
        // 3B 012E
        gbc.setState(0x8dd5, 0xc3ad, 0x7640, 0xe02d, 0xeb43, 0x8142, 0x1, 0x1);
        gbc.writeMem(0x8dd5, { 0x3b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc3ac, gbc.sp());
        EXPECT(0x8dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8dd5));
        // 3B 012F
        gbc.setState(0xbf09, 0xd8da, 0xd8c0, 0xc7f0, 0xc24, 0xf5b3, 0x0, 0x1);
        gbc.writeMem(0xbf09, { 0x3b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd8d9, gbc.sp());
        EXPECT(0xbf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbf09));
        // 3B 0130
        gbc.setState(0x5513, 0x9e1a, 0xf710, 0x157f, 0xd926, 0x6d42, 0x1, 0x1);
        gbc.writeMem(0x5513, { 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9e19, gbc.sp());
        EXPECT(0x5514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0131
        gbc.setState(0x19b, 0xc0f6, 0xd8e0, 0x754a, 0x4846, 0x4baf, 0x0, 0x1);
        gbc.writeMem(0x19b, { 0x3b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc0f5, gbc.sp());
        EXPECT(0x19c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0132
        gbc.setState(0xd2ae, 0x6996, 0x210, 0x6228, 0x5ec6, 0x983, 0x1, 0x1);
        gbc.writeMem(0xd2ae, { 0x3b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6995, gbc.sp());
        EXPECT(0xd2af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd2ae));
        // 3B 0133
        gbc.setState(0xcbcb, 0x437f, 0xc520, 0xfd91, 0xb151, 0x9e14, 0x1, 0x1);
        gbc.writeMem(0xcbcb, { 0x3b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x437e, gbc.sp());
        EXPECT(0xcbcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcbcb));
        // 3B 0134
        gbc.setState(0xef83, 0xdec1, 0xbf30, 0x3c5, 0x67d4, 0x178f, 0x1, 0x0);
        gbc.writeMem(0xef83, { 0x3b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdec0, gbc.sp());
        EXPECT(0xef84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xef83));
        // 3B 0135
        gbc.setState(0x8e50, 0x9ffb, 0xf080, 0x47c0, 0xdcf3, 0x4e36, 0x0, 0x0);
        gbc.writeMem(0x8e50, { 0x3b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9ffa, gbc.sp());
        EXPECT(0x8e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8e50));
        // 3B 0136
        gbc.setState(0x3ae9, 0xe89c, 0xc7e0, 0x3d33, 0xe4fe, 0xe302, 0x1, 0x0);
        gbc.writeMem(0x3ae9, { 0x3b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe89b, gbc.sp());
        EXPECT(0x3aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0137
        gbc.setState(0x915d, 0x9322, 0xe60, 0x1ff2, 0xda35, 0x22ce, 0x0, 0x0);
        gbc.writeMem(0x915d, { 0x3b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9321, gbc.sp());
        EXPECT(0x915e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x915d));
        // 3B 0138
        gbc.setState(0x8fa3, 0xceff, 0x1f20, 0x26a7, 0xd4ef, 0x795e, 0x1, 0x1);
        gbc.writeMem(0x8fa3, { 0x3b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcefe, gbc.sp());
        EXPECT(0x8fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8fa3));
        // 3B 0139
        gbc.setState(0x360b, 0x862f, 0x9b30, 0x9891, 0x3d97, 0xacf8, 0x1, 0x0);
        gbc.writeMem(0x360b, { 0x3b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x862e, gbc.sp());
        EXPECT(0x360c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 013A
        gbc.setState(0xb91b, 0x4b7d, 0xacb0, 0x2f43, 0xcf7a, 0x971a, 0x1, 0x1);
        gbc.writeMem(0xb91b, { 0x3b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4b7c, gbc.sp());
        EXPECT(0xb91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb91b));
        // 3B 013B
        gbc.setState(0xe25a, 0xfd32, 0xd430, 0xcbe8, 0x5f8d, 0xbacb, 0x1, 0x0);
        gbc.writeMem(0xe25a, { 0x3b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfd31, gbc.sp());
        EXPECT(0xe25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe25a));
        // 3B 013C
        gbc.setState(0x1f67, 0x2262, 0xa100, 0xedab, 0x6446, 0x887b, 0x0, 0x0);
        gbc.writeMem(0x1f67, { 0x3b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2261, gbc.sp());
        EXPECT(0x1f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 013D
        gbc.setState(0x8c77, 0xd19e, 0xf260, 0x540b, 0x79f2, 0xa361, 0x1, 0x1);
        gbc.writeMem(0x8c77, { 0x3b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd19d, gbc.sp());
        EXPECT(0x8c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8c77));
        // 3B 013E
        gbc.setState(0x95a2, 0xaa8b, 0x53c0, 0x7e23, 0xccd4, 0x9572, 0x0, 0x1);
        gbc.writeMem(0x95a2, { 0x3b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xaa8a, gbc.sp());
        EXPECT(0x95a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x95a2));
        // 3B 013F
        gbc.setState(0x7faa, 0xea8, 0xef80, 0x725b, 0x1c49, 0x25c8, 0x1, 0x1);
        gbc.writeMem(0x7faa, { 0x3b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xea7, gbc.sp());
        EXPECT(0x7fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0140
        gbc.setState(0xb41f, 0xe89f, 0xcee0, 0x3412, 0x4ef9, 0x373b, 0x1, 0x0);
        gbc.writeMem(0xb41f, { 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe89e, gbc.sp());
        EXPECT(0xb420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb41f));
        // 3B 0141
        gbc.setState(0x6c64, 0x9321, 0xd210, 0xe67c, 0xecb4, 0xfcd, 0x1, 0x0);
        gbc.writeMem(0x6c64, { 0x3b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9320, gbc.sp());
        EXPECT(0x6c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0142
        gbc.setState(0xc220, 0x4de6, 0x4250, 0x7cc5, 0xee18, 0xeda2, 0x0, 0x1);
        gbc.writeMem(0xc220, { 0x3b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4de5, gbc.sp());
        EXPECT(0xc221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc220));
        // 3B 0143
        gbc.setState(0xe760, 0x2d98, 0xf710, 0x2fc2, 0x857e, 0xcaee, 0x1, 0x0);
        gbc.writeMem(0xe760, { 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2d97, gbc.sp());
        EXPECT(0xe761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe760));
        // 3B 0144
        gbc.setState(0xdf2c, 0xb45c, 0x77f0, 0xb4f2, 0xe87b, 0x757e, 0x0, 0x0);
        gbc.writeMem(0xdf2c, { 0x3b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb45b, gbc.sp());
        EXPECT(0xdf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdf2c));
        // 3B 0145
        gbc.setState(0x2d4c, 0xef85, 0xc380, 0xd0c6, 0x51e3, 0xba3, 0x1, 0x1);
        gbc.writeMem(0x2d4c, { 0x3b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xef84, gbc.sp());
        EXPECT(0x2d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0146
        gbc.setState(0xb996, 0x4b04, 0xe530, 0xebd8, 0xa232, 0x92f5, 0x0, 0x0);
        gbc.writeMem(0xb996, { 0x3b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4b03, gbc.sp());
        EXPECT(0xb997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb996));
        // 3B 0147
        gbc.setState(0x67b, 0x8878, 0xde90, 0x8f46, 0x311c, 0x8677, 0x1, 0x1);
        gbc.writeMem(0x67b, { 0x3b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8877, gbc.sp());
        EXPECT(0x67c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0148
        gbc.setState(0x4808, 0x5ff8, 0x3db0, 0x8e1a, 0x22f3, 0x2243, 0x1, 0x1);
        gbc.writeMem(0x4808, { 0x3b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5ff7, gbc.sp());
        EXPECT(0x4809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0149
        gbc.setState(0x9fc8, 0xcc23, 0x7dd0, 0xced8, 0xf0e1, 0xf2a1, 0x1, 0x0);
        gbc.writeMem(0x9fc8, { 0x3b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcc22, gbc.sp());
        EXPECT(0x9fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9fc8));
        // 3B 014A
        gbc.setState(0xc9b9, 0xe351, 0x1d20, 0xcbf9, 0x911e, 0x1336, 0x1, 0x1);
        gbc.writeMem(0xc9b9, { 0x3b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe350, gbc.sp());
        EXPECT(0xc9ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc9b9));
        // 3B 014B
        gbc.setState(0x5d1e, 0xfcce, 0x8d00, 0x2490, 0x8f3d, 0x8c22, 0x0, 0x0);
        gbc.writeMem(0x5d1e, { 0x3b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfccd, gbc.sp());
        EXPECT(0x5d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 014C
        gbc.setState(0x1323, 0xe270, 0xef10, 0x36f2, 0x1501, 0xb607, 0x0, 0x0);
        gbc.writeMem(0x1323, { 0x3b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe26f, gbc.sp());
        EXPECT(0x1324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 014D
        gbc.setState(0xae2, 0xb34f, 0x3bc0, 0x4a12, 0x4522, 0x3357, 0x0, 0x1);
        gbc.writeMem(0xae2, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb34e, gbc.sp());
        EXPECT(0xae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 014F
        gbc.setState(0x5443, 0x72db, 0xfc10, 0xaf61, 0xf428, 0xfc54, 0x1, 0x0);
        gbc.writeMem(0x5443, { 0x3b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x72da, gbc.sp());
        EXPECT(0x5444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0150
        gbc.setState(0xb67f, 0xe6c0, 0x6d10, 0x74b5, 0x662c, 0xb2de, 0x1, 0x0);
        gbc.writeMem(0xb67f, { 0x3b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe6bf, gbc.sp());
        EXPECT(0xb680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb67f));
        // 3B 0151
        gbc.setState(0x2b32, 0x8e96, 0x7950, 0xcca0, 0x726b, 0x8a06, 0x1, 0x0);
        gbc.writeMem(0x2b32, { 0x3b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8e95, gbc.sp());
        EXPECT(0x2b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0152
        gbc.setState(0x57ca, 0x77a8, 0x5b00, 0xe467, 0xadb7, 0xb71e, 0x0, 0x0);
        gbc.writeMem(0x57ca, { 0x3b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x77a7, gbc.sp());
        EXPECT(0x57cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0153
        gbc.setState(0xc849, 0x93b4, 0xafe0, 0x77e, 0x620b, 0x1e31, 0x1, 0x1);
        gbc.writeMem(0xc849, { 0x3b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x93b3, gbc.sp());
        EXPECT(0xc84a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc849));
        // 3B 0154
        gbc.setState(0xa619, 0xeb35, 0x4ab0, 0x619a, 0xff82, 0x7237, 0x1, 0x1);
        gbc.writeMem(0xa619, { 0x3b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xeb34, gbc.sp());
        EXPECT(0xa61a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa619));
        // 3B 0155
        gbc.setState(0x1a49, 0xf7c4, 0xc3c0, 0x3bef, 0x5b39, 0x2cc1, 0x0, 0x1);
        gbc.writeMem(0x1a49, { 0x3b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf7c3, gbc.sp());
        EXPECT(0x1a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0157
        gbc.setState(0xd8eb, 0xe03b, 0xba60, 0xe8dc, 0x364, 0x271c, 0x0, 0x0);
        gbc.writeMem(0xd8eb, { 0x3b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe03a, gbc.sp());
        EXPECT(0xd8ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd8eb));
        // 3B 0158
        gbc.setState(0xbf8d, 0x5705, 0x27c0, 0xedad, 0x347e, 0xf75c, 0x0, 0x0);
        gbc.writeMem(0xbf8d, { 0x3b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5704, gbc.sp());
        EXPECT(0xbf8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbf8d));
        // 3B 0159
        gbc.setState(0xba0b, 0x358b, 0xb70, 0xf3eb, 0xf589, 0x4197, 0x0, 0x1);
        gbc.writeMem(0xba0b, { 0x3b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x358a, gbc.sp());
        EXPECT(0xba0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xba0b));
        // 3B 015A
        gbc.setState(0xeda4, 0xb65a, 0x28f0, 0xd90b, 0x9c50, 0x50aa, 0x1, 0x1);
        gbc.writeMem(0xeda4, { 0x3b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb659, gbc.sp());
        EXPECT(0xeda5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xeda4));
        // 3B 015B
        gbc.setState(0x9, 0xec6c, 0x5150, 0x8e5d, 0xa53c, 0x6026, 0x0, 0x0);
        gbc.writeMem(0x9, { 0x3b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xec6b, gbc.sp());
        EXPECT(0xa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 015C
        gbc.setState(0x8fa7, 0xd1ad, 0x3f0, 0x50d5, 0x399c, 0xe33b, 0x1, 0x0);
        gbc.writeMem(0x8fa7, { 0x3b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd1ac, gbc.sp());
        EXPECT(0x8fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8fa7));
        // 3B 015E
        gbc.setState(0x3231, 0x5371, 0x1130, 0x926b, 0x9d5b, 0xcd7a, 0x0, 0x1);
        gbc.writeMem(0x3231, { 0x3b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5370, gbc.sp());
        EXPECT(0x3232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 015F
        gbc.setState(0x25a, 0xdcd, 0x7e70, 0x3782, 0x48c4, 0x2bb, 0x0, 0x1);
        gbc.writeMem(0x25a, { 0x3b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdcc, gbc.sp());
        EXPECT(0x25b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0160
        gbc.setState(0x29d7, 0x22f6, 0xa2b0, 0x3c9a, 0xd5f7, 0xa6cb, 0x0, 0x0);
        gbc.writeMem(0x29d7, { 0x3b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x22f5, gbc.sp());
        EXPECT(0x29d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0161
        gbc.setState(0x2e1, 0xbc59, 0x5c60, 0x52bd, 0xc81e, 0xbeb7, 0x1, 0x0);
        gbc.writeMem(0x2e1, { 0x3b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbc58, gbc.sp());
        EXPECT(0x2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0162
        gbc.setState(0xa9b2, 0x1315, 0x5a70, 0xa12d, 0x4203, 0x8afa, 0x0, 0x0);
        gbc.writeMem(0xa9b2, { 0x3b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1314, gbc.sp());
        EXPECT(0xa9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa9b2));
        // 3B 0163
        gbc.setState(0xa312, 0x6e23, 0x4f70, 0x509a, 0xd872, 0xba1d, 0x1, 0x1);
        gbc.writeMem(0xa312, { 0x3b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6e22, gbc.sp());
        EXPECT(0xa313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa312));
        // 3B 0164
        gbc.setState(0x35ef, 0xb3b6, 0x8a00, 0xe9dd, 0x6c60, 0xd200, 0x1, 0x0);
        gbc.writeMem(0x35ef, { 0x3b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb3b5, gbc.sp());
        EXPECT(0x35f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0165
        gbc.setState(0x1f04, 0x2c63, 0x38c0, 0x8c74, 0x929f, 0x1353, 0x1, 0x0);
        gbc.writeMem(0x1f04, { 0x3b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2c62, gbc.sp());
        EXPECT(0x1f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0166
        gbc.setState(0x7825, 0xdc9, 0xe750, 0x6a2a, 0x202d, 0x715e, 0x1, 0x0);
        gbc.writeMem(0x7825, { 0x3b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xdc8, gbc.sp());
        EXPECT(0x7826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0167
        gbc.setState(0x47c5, 0xbcb4, 0x2e80, 0xdea0, 0xf806, 0x843f, 0x1, 0x1);
        gbc.writeMem(0x47c5, { 0x3b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbcb3, gbc.sp());
        EXPECT(0x47c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0168
        gbc.setState(0x2438, 0xb569, 0x9a60, 0xea4c, 0x4943, 0xaa04, 0x0, 0x1);
        gbc.writeMem(0x2438, { 0x3b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb568, gbc.sp());
        EXPECT(0x2439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0169
        gbc.setState(0x2443, 0x6e5a, 0x6c90, 0x6697, 0x1591, 0x209d, 0x1, 0x1);
        gbc.writeMem(0x2443, { 0x3b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6e59, gbc.sp());
        EXPECT(0x2444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 016A
        gbc.setState(0xb6e7, 0x184c, 0xbc30, 0x1033, 0x952a, 0x99d6, 0x1, 0x0);
        gbc.writeMem(0xb6e7, { 0x3b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x184b, gbc.sp());
        EXPECT(0xb6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb6e7));
        // 3B 016B
        gbc.setState(0x216b, 0xb9d5, 0x9a70, 0x263c, 0x7843, 0x152c, 0x1, 0x0);
        gbc.writeMem(0x216b, { 0x3b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb9d4, gbc.sp());
        EXPECT(0x216c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 016C
        gbc.setState(0x5e, 0xdd5c, 0x4590, 0xf0f1, 0xd0ae, 0xb349, 0x1, 0x0);
        gbc.writeMem(0x5e, { 0x3b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdd5b, gbc.sp());
        EXPECT(0x5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 016D
        gbc.setState(0x79e0, 0xb7a0, 0xb90, 0xa5e7, 0x9bac, 0xd579, 0x1, 0x0);
        gbc.writeMem(0x79e0, { 0x3b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb79f, gbc.sp());
        EXPECT(0x79e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 016E
        gbc.setState(0x3616, 0x6782, 0x1650, 0xafe, 0xd1d9, 0x60db, 0x0, 0x0);
        gbc.writeMem(0x3616, { 0x3b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6781, gbc.sp());
        EXPECT(0x3617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 016F
        gbc.setState(0x8a4f, 0xf77c, 0x7890, 0x81d0, 0x91a, 0xcde1, 0x0, 0x1);
        gbc.writeMem(0x8a4f, { 0x3b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf77b, gbc.sp());
        EXPECT(0x8a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8a4f));
        // 3B 0170
        gbc.setState(0x5f0e, 0xafb6, 0xc1a0, 0x137a, 0xe7b3, 0xd0cb, 0x1, 0x1);
        gbc.writeMem(0x5f0e, { 0x3b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xafb5, gbc.sp());
        EXPECT(0x5f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0171
        gbc.setState(0x26c3, 0x4908, 0xf2e0, 0x53b6, 0xc7e1, 0x75a2, 0x1, 0x1);
        gbc.writeMem(0x26c3, { 0x3b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4907, gbc.sp());
        EXPECT(0x26c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0172
        gbc.setState(0x4c63, 0xb151, 0x3820, 0x8162, 0x49ba, 0xebbd, 0x1, 0x0);
        gbc.writeMem(0x4c63, { 0x3b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb150, gbc.sp());
        EXPECT(0x4c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0173
        gbc.setState(0x8112, 0xb70e, 0x8ee0, 0xcd03, 0x51, 0xc5b, 0x1, 0x0);
        gbc.writeMem(0x8112, { 0x3b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb70d, gbc.sp());
        EXPECT(0x8113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8112));
        // 3B 0174
        gbc.setState(0xee8, 0xa48, 0x72e0, 0x6a68, 0x9a25, 0x6852, 0x0, 0x0);
        gbc.writeMem(0xee8, { 0x3b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa47, gbc.sp());
        EXPECT(0xee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0175
        gbc.setState(0x37a8, 0xde40, 0x6b50, 0x18c7, 0xafc5, 0x50ad, 0x1, 0x1);
        gbc.writeMem(0x37a8, { 0x3b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xde3f, gbc.sp());
        EXPECT(0x37a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0176
        gbc.setState(0x1fae, 0x927f, 0x4a50, 0xb5e1, 0xc64b, 0xc653, 0x1, 0x1);
        gbc.writeMem(0x1fae, { 0x3b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x927e, gbc.sp());
        EXPECT(0x1faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0177
        gbc.setState(0xc8e3, 0xe92b, 0x3440, 0x28f1, 0x87a0, 0xc41c, 0x1, 0x1);
        gbc.writeMem(0xc8e3, { 0x3b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe92a, gbc.sp());
        EXPECT(0xc8e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc8e3));
        // 3B 0178
        gbc.setState(0x448e, 0x72db, 0x5a90, 0xadf0, 0x8f0, 0xa4e9, 0x1, 0x0);
        gbc.writeMem(0x448e, { 0x3b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x72da, gbc.sp());
        EXPECT(0x448f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0179
        gbc.setState(0xa22d, 0xe380, 0x6f00, 0xa9a8, 0x30e4, 0xea42, 0x0, 0x1);
        gbc.writeMem(0xa22d, { 0x3b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe37f, gbc.sp());
        EXPECT(0xa22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa22d));
        // 3B 017A
        gbc.setState(0x2dff, 0xa33e, 0x3e20, 0x8b04, 0xe8ef, 0xdb3e, 0x1, 0x1);
        gbc.writeMem(0x2dff, { 0x3b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa33d, gbc.sp());
        EXPECT(0x2e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 017B
        gbc.setState(0xb0df, 0xbd39, 0x4120, 0xbe97, 0xab0, 0xd1da, 0x1, 0x0);
        gbc.writeMem(0xb0df, { 0x3b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbd38, gbc.sp());
        EXPECT(0xb0e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb0df));
        // 3B 017C
        gbc.setState(0xefb8, 0x2c7e, 0x4e60, 0xd24a, 0xf375, 0xce3e, 0x0, 0x1);
        gbc.writeMem(0xefb8, { 0x3b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2c7d, gbc.sp());
        EXPECT(0xefb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xefb8));
        // 3B 017F
        gbc.setState(0x20b8, 0x8ce7, 0xe470, 0x9b7, 0x9448, 0x4adc, 0x1, 0x0);
        gbc.writeMem(0x20b8, { 0x3b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8ce6, gbc.sp());
        EXPECT(0x20b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0181
        gbc.setState(0xa8b5, 0x1d6a, 0x6f30, 0x191c, 0x829b, 0x430d, 0x0, 0x1);
        gbc.writeMem(0xa8b5, { 0x3b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1d69, gbc.sp());
        EXPECT(0xa8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa8b5));
        // 3B 0182
        gbc.setState(0xeb69, 0x82e, 0xb900, 0x90ee, 0x9d42, 0xc5eb, 0x0, 0x1);
        gbc.writeMem(0xeb69, { 0x3b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x82d, gbc.sp());
        EXPECT(0xeb6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xeb69));
        // 3B 0183
        gbc.setState(0x1a0d, 0x663a, 0x51b0, 0x43ac, 0xeed7, 0x46e6, 0x1, 0x0);
        gbc.writeMem(0x1a0d, { 0x3b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6639, gbc.sp());
        EXPECT(0x1a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0184
        gbc.setState(0x71dc, 0x9e4f, 0x80, 0x537f, 0xf8c9, 0x5571, 0x1, 0x0);
        gbc.writeMem(0x71dc, { 0x3b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9e4e, gbc.sp());
        EXPECT(0x71dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0185
        gbc.setState(0xa788, 0xe260, 0xa5c0, 0x9f46, 0xe18b, 0x6474, 0x1, 0x1);
        gbc.writeMem(0xa788, { 0x3b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe25f, gbc.sp());
        EXPECT(0xa789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa788));
        // 3B 0186
        gbc.setState(0xa52f, 0xc6b0, 0x2100, 0x215a, 0x8c63, 0xfb22, 0x0, 0x0);
        gbc.writeMem(0xa52f, { 0x3b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc6af, gbc.sp());
        EXPECT(0xa530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa52f));
        // 3B 0187
        gbc.setState(0x86c1, 0x12, 0xfd0, 0xc665, 0x8a4f, 0x12b5, 0x1, 0x1);
        gbc.writeMem(0x86c1, { 0x3b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x11, gbc.sp());
        EXPECT(0x86c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x86c1));
        // 3B 0188
        gbc.setState(0x5481, 0x3eea, 0x2380, 0x2f8c, 0x185e, 0xc240, 0x1, 0x0);
        gbc.writeMem(0x5481, { 0x3b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3ee9, gbc.sp());
        EXPECT(0x5482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0189
        gbc.setState(0xd0e5, 0x5e9d, 0xb150, 0x6827, 0x4acd, 0xeb3f, 0x0, 0x1);
        gbc.writeMem(0xd0e5, { 0x3b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5e9c, gbc.sp());
        EXPECT(0xd0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd0e5));
        // 3B 018A
        gbc.setState(0x595f, 0xc685, 0x8150, 0x4016, 0x271a, 0x7312, 0x1, 0x1);
        gbc.writeMem(0x595f, { 0x3b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc684, gbc.sp());
        EXPECT(0x5960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 018B
        gbc.setState(0x63f9, 0xe0d7, 0xd250, 0xd75a, 0x9b72, 0xbf89, 0x1, 0x0);
        gbc.writeMem(0x63f9, { 0x3b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe0d6, gbc.sp());
        EXPECT(0x63fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 018C
        gbc.setState(0xb171, 0xbdbd, 0x43c0, 0xc81c, 0xa72f, 0x12e0, 0x1, 0x0);
        gbc.writeMem(0xb171, { 0x3b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbdbc, gbc.sp());
        EXPECT(0xb172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb171));
        // 3B 018D
        gbc.setState(0x9816, 0xe0ec, 0x9ce0, 0xe704, 0xdd26, 0x775, 0x1, 0x1);
        gbc.writeMem(0x9816, { 0x3b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe0eb, gbc.sp());
        EXPECT(0x9817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9816));
        // 3B 018E
        gbc.setState(0xb90d, 0x9561, 0xf0c0, 0xde54, 0x3cb6, 0x17c4, 0x0, 0x0);
        gbc.writeMem(0xb90d, { 0x3b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9560, gbc.sp());
        EXPECT(0xb90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb90d));
        // 3B 018F
        gbc.setState(0x8ded, 0x7cd7, 0xa200, 0xb4f5, 0x8f9b, 0xbd28, 0x0, 0x0);
        gbc.writeMem(0x8ded, { 0x3b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7cd6, gbc.sp());
        EXPECT(0x8dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8ded));
        // 3B 0190
        gbc.setState(0x32af, 0xca8d, 0xb00, 0x9ae5, 0x6f10, 0x3d64, 0x0, 0x0);
        gbc.writeMem(0x32af, { 0x3b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xca8c, gbc.sp());
        EXPECT(0x32b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0191
        gbc.setState(0x32ed, 0xef01, 0xb510, 0x4fa3, 0x97fc, 0x8f21, 0x0, 0x0);
        gbc.writeMem(0x32ed, { 0x3b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xef00, gbc.sp());
        EXPECT(0x32ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0192
        gbc.setState(0x6f66, 0xb76e, 0x2160, 0x60ca, 0x3812, 0x1732, 0x1, 0x0);
        gbc.writeMem(0x6f66, { 0x3b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb76d, gbc.sp());
        EXPECT(0x6f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0194
        gbc.setState(0xc0f2, 0x94e0, 0x8910, 0x309f, 0x72d4, 0x6f4f, 0x0, 0x1);
        gbc.writeMem(0xc0f2, { 0x3b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x94df, gbc.sp());
        EXPECT(0xc0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc0f2));
        // 3B 0195
        gbc.setState(0xe3a6, 0x8e5d, 0x9c60, 0x7d5a, 0x41e8, 0x3c5, 0x0, 0x0);
        gbc.writeMem(0xe3a6, { 0x3b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8e5c, gbc.sp());
        EXPECT(0xe3a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe3a6));
        // 3B 0196
        gbc.setState(0x5ca2, 0xc239, 0x24a0, 0xfdcf, 0xf910, 0x282d, 0x1, 0x1);
        gbc.writeMem(0x5ca2, { 0x3b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc238, gbc.sp());
        EXPECT(0x5ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0197
        gbc.setState(0xe9b5, 0xdb25, 0x3aa0, 0x3385, 0xa9ff, 0x989c, 0x0, 0x0);
        gbc.writeMem(0xe9b5, { 0x3b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdb24, gbc.sp());
        EXPECT(0xe9b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe9b5));
        // 3B 0198
        gbc.setState(0xd08d, 0x4269, 0xe930, 0x52bc, 0xf4cc, 0xe3b4, 0x1, 0x1);
        gbc.writeMem(0xd08d, { 0x3b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4268, gbc.sp());
        EXPECT(0xd08e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd08d));
        // 3B 0199
        gbc.setState(0xe4ca, 0x9fe2, 0x4aa0, 0xa277, 0xa1fc, 0x2840, 0x0, 0x0);
        gbc.writeMem(0xe4ca, { 0x3b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9fe1, gbc.sp());
        EXPECT(0xe4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe4ca));
        // 3B 019A
        gbc.setState(0x31c0, 0x4e83, 0xb030, 0xf976, 0x2843, 0x2431, 0x0, 0x1);
        gbc.writeMem(0x31c0, { 0x3b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4e82, gbc.sp());
        EXPECT(0x31c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 019B
        gbc.setState(0x8621, 0x1461, 0xf700, 0x7ceb, 0xe2db, 0xd1ee, 0x0, 0x1);
        gbc.writeMem(0x8621, { 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1460, gbc.sp());
        EXPECT(0x8622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8621));
        // 3B 019C
        gbc.setState(0xe18d, 0xc2bc, 0x87f0, 0xe169, 0x11bb, 0x9eb9, 0x0, 0x1);
        gbc.writeMem(0xe18d, { 0x3b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc2bb, gbc.sp());
        EXPECT(0xe18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe18d));
        // 3B 019D
        gbc.setState(0xa014, 0x6f2d, 0xb650, 0xb338, 0xc158, 0x4215, 0x1, 0x0);
        gbc.writeMem(0xa014, { 0x3b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6f2c, gbc.sp());
        EXPECT(0xa015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa014));
        // 3B 019E
        gbc.setState(0x6fcc, 0xe296, 0x79a0, 0xc173, 0xc092, 0xea3f, 0x0, 0x0);
        gbc.writeMem(0x6fcc, { 0x3b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe295, gbc.sp());
        EXPECT(0x6fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 019F
        gbc.setState(0x4964, 0xf40a, 0xfd00, 0x9aa5, 0x43df, 0xe51b, 0x0, 0x1);
        gbc.writeMem(0x4964, { 0x3b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf409, gbc.sp());
        EXPECT(0x4965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01A0
        gbc.setState(0xad5d, 0xf70e, 0x5f00, 0xd71b, 0xc2b4, 0x3de4, 0x0, 0x1);
        gbc.writeMem(0xad5d, { 0x3b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf70d, gbc.sp());
        EXPECT(0xad5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xad5d));
        // 3B 01A1
        gbc.setState(0xbf4f, 0xcca2, 0xae00, 0xfa29, 0xa818, 0x3fa4, 0x0, 0x1);
        gbc.writeMem(0xbf4f, { 0x3b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcca1, gbc.sp());
        EXPECT(0xbf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbf4f));
        // 3B 01A2
        gbc.setState(0xeedb, 0x7798, 0x5b40, 0xd42b, 0x6e45, 0x15e3, 0x1, 0x0);
        gbc.writeMem(0xeedb, { 0x3b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7797, gbc.sp());
        EXPECT(0xeedc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xeedb));
        // 3B 01A3
        gbc.setState(0x620a, 0xd8ac, 0x1790, 0xa6bd, 0x6284, 0x4c30, 0x0, 0x0);
        gbc.writeMem(0x620a, { 0x3b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd8ab, gbc.sp());
        EXPECT(0x620b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01A4
        gbc.setState(0xae01, 0x43ea, 0xbb0, 0xd406, 0x285f, 0x94c4, 0x1, 0x1);
        gbc.writeMem(0xae01, { 0x3b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x43e9, gbc.sp());
        EXPECT(0xae02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xae01));
        // 3B 01A6
        gbc.setState(0x907a, 0x821d, 0x9e00, 0xf686, 0xdfe1, 0xba3c, 0x0, 0x1);
        gbc.writeMem(0x907a, { 0x3b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x821c, gbc.sp());
        EXPECT(0x907b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x907a));
        // 3B 01A7
        gbc.setState(0x4062, 0x9794, 0x6680, 0xdde1, 0xc133, 0x6960, 0x0, 0x1);
        gbc.writeMem(0x4062, { 0x3b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9793, gbc.sp());
        EXPECT(0x4063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01A8
        gbc.setState(0x5bdd, 0x33b2, 0xdb40, 0x5318, 0xfbcd, 0x988, 0x0, 0x1);
        gbc.writeMem(0x5bdd, { 0x3b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x33b1, gbc.sp());
        EXPECT(0x5bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01A9
        gbc.setState(0x745c, 0xfbc4, 0x9c90, 0xb2d8, 0x85cb, 0x8871, 0x1, 0x0);
        gbc.writeMem(0x745c, { 0x3b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfbc3, gbc.sp());
        EXPECT(0x745d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01AA
        gbc.setState(0xd7f, 0x3856, 0x7980, 0x22d9, 0xee0b, 0xf4f, 0x0, 0x0);
        gbc.writeMem(0xd7f, { 0x3b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3855, gbc.sp());
        EXPECT(0xd80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01AC
        gbc.setState(0x5386, 0xb6fe, 0xfe00, 0x7c86, 0xd771, 0x7f68, 0x1, 0x0);
        gbc.writeMem(0x5386, { 0x3b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb6fd, gbc.sp());
        EXPECT(0x5387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01AD
        gbc.setState(0xef91, 0xd3a1, 0x9b60, 0xa733, 0x4aa7, 0x74e1, 0x1, 0x0);
        gbc.writeMem(0xef91, { 0x3b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd3a0, gbc.sp());
        EXPECT(0xef92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xef91));
        // 3B 01AE
        gbc.setState(0x7be7, 0x857d, 0x32b0, 0x6c27, 0xbb51, 0x802b, 0x1, 0x0);
        gbc.writeMem(0x7be7, { 0x3b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x857c, gbc.sp());
        EXPECT(0x7be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01AF
        gbc.setState(0xea1e, 0xcd6a, 0x9ba0, 0x9c77, 0xdf10, 0xd566, 0x1, 0x1);
        gbc.writeMem(0xea1e, { 0x3b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcd69, gbc.sp());
        EXPECT(0xea1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xea1e));
        // 3B 01B0
        gbc.setState(0x1d7a, 0x4856, 0x27b0, 0x92b2, 0xc188, 0x817d, 0x1, 0x0);
        gbc.writeMem(0x1d7a, { 0x3b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4855, gbc.sp());
        EXPECT(0x1d7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01B1
        gbc.setState(0xe8a2, 0x7751, 0xb370, 0xc56a, 0x4891, 0xb690, 0x1, 0x0);
        gbc.writeMem(0xe8a2, { 0x3b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7750, gbc.sp());
        EXPECT(0xe8a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe8a2));
        // 3B 01B2
        gbc.setState(0xc536, 0xe18a, 0x5b40, 0x23c7, 0x538d, 0xeb1b, 0x1, 0x1);
        gbc.writeMem(0xc536, { 0x3b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe189, gbc.sp());
        EXPECT(0xc537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc536));
        // 3B 01B3
        gbc.setState(0x87bf, 0x302b, 0x4550, 0x7eb0, 0x96ad, 0x6c9b, 0x1, 0x0);
        gbc.writeMem(0x87bf, { 0x3b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x302a, gbc.sp());
        EXPECT(0x87c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x87bf));
        // 3B 01B4
        gbc.setState(0xe56e, 0xfb6c, 0xebd0, 0x3c09, 0xcdf, 0x34d3, 0x0, 0x1);
        gbc.writeMem(0xe56e, { 0x3b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfb6b, gbc.sp());
        EXPECT(0xe56f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe56e));
        // 3B 01B5
        gbc.setState(0xbd6d, 0x29d3, 0xce70, 0x94d1, 0xc3b3, 0x1d9, 0x1, 0x1);
        gbc.writeMem(0xbd6d, { 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x29d2, gbc.sp());
        EXPECT(0xbd6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbd6d));
        // 3B 01B6
        gbc.setState(0x3df2, 0x2b1e, 0xadb0, 0x6e20, 0x703d, 0x69fb, 0x1, 0x1);
        gbc.writeMem(0x3df2, { 0x3b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2b1d, gbc.sp());
        EXPECT(0x3df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01B7
        gbc.setState(0x76fd, 0xd918, 0xd550, 0xd331, 0x9a2d, 0xe12f, 0x0, 0x0);
        gbc.writeMem(0x76fd, { 0x3b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd917, gbc.sp());
        EXPECT(0x76fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01B8
        gbc.setState(0x287f, 0xe588, 0xcb0, 0x3011, 0x60d7, 0x87d3, 0x0, 0x0);
        gbc.writeMem(0x287f, { 0x3b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe587, gbc.sp());
        EXPECT(0x2880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01B9
        gbc.setState(0xd25e, 0x979d, 0x7960, 0x416e, 0x9c44, 0xfdc1, 0x0, 0x0);
        gbc.writeMem(0xd25e, { 0x3b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x979c, gbc.sp());
        EXPECT(0xd25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd25e));
        // 3B 01BA
        gbc.setState(0xbc5e, 0x6779, 0x3090, 0xb9a8, 0xcd69, 0x2ac2, 0x0, 0x0);
        gbc.writeMem(0xbc5e, { 0x3b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6778, gbc.sp());
        EXPECT(0xbc5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbc5e));
        // 3B 01BB
        gbc.setState(0x5488, 0xf133, 0x74e0, 0xed1a, 0xe7b9, 0xdc3e, 0x1, 0x0);
        gbc.writeMem(0x5488, { 0x3b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf132, gbc.sp());
        EXPECT(0x5489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01BC
        gbc.setState(0x6639, 0x1a4e, 0x83b0, 0xa1e9, 0x24ba, 0x4177, 0x1, 0x1);
        gbc.writeMem(0x6639, { 0x3b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1a4d, gbc.sp());
        EXPECT(0x663a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01BD
        gbc.setState(0x988e, 0x652b, 0xa6e0, 0xc39d, 0xb0a7, 0xbaba, 0x0, 0x0);
        gbc.writeMem(0x988e, { 0x3b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x652a, gbc.sp());
        EXPECT(0x988f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x988e));
        // 3B 01BE
        gbc.setState(0xcb4e, 0x6e4c, 0x6110, 0x1767, 0xeec1, 0xb19b, 0x0, 0x0);
        gbc.writeMem(0xcb4e, { 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6e4b, gbc.sp());
        EXPECT(0xcb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcb4e));
        // 3B 01BF
        gbc.setState(0x91bc, 0x85dc, 0x7e60, 0xcd31, 0x9692, 0xceff, 0x1, 0x0);
        gbc.writeMem(0x91bc, { 0x3b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x85db, gbc.sp());
        EXPECT(0x91bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x91bc));
        // 3B 01C0
        gbc.setState(0x3417, 0x8c74, 0x6b90, 0xd6da, 0x5b53, 0x9773, 0x0, 0x0);
        gbc.writeMem(0x3417, { 0x3b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8c73, gbc.sp());
        EXPECT(0x3418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01C1
        gbc.setState(0xe698, 0xbf4c, 0x8ee0, 0xbdf4, 0xff41, 0xe507, 0x0, 0x1);
        gbc.writeMem(0xe698, { 0x3b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbf4b, gbc.sp());
        EXPECT(0xe699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe698));
        // 3B 01C2
        gbc.setState(0x8e16, 0xd7d3, 0x8900, 0x5459, 0xa9a9, 0x7c95, 0x1, 0x0);
        gbc.writeMem(0x8e16, { 0x3b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd7d2, gbc.sp());
        EXPECT(0x8e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8e16));
        // 3B 01C4
        gbc.setState(0x430b, 0x9d41, 0x6bc0, 0x2e32, 0x25ae, 0x153, 0x1, 0x0);
        gbc.writeMem(0x430b, { 0x3b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9d40, gbc.sp());
        EXPECT(0x430c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01C5
        gbc.setState(0x8a65, 0x8106, 0x72b0, 0xcca7, 0x93b9, 0xf150, 0x1, 0x0);
        gbc.writeMem(0x8a65, { 0x3b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8105, gbc.sp());
        EXPECT(0x8a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8a65));
        // 3B 01C6
        gbc.setState(0xbcb0, 0x4315, 0x3440, 0xd8d4, 0x4f30, 0x3c75, 0x0, 0x1);
        gbc.writeMem(0xbcb0, { 0x3b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4314, gbc.sp());
        EXPECT(0xbcb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbcb0));
        // 3B 01C7
        gbc.setState(0xbb9d, 0xee11, 0x1050, 0xf207, 0xf80c, 0x1080, 0x0, 0x0);
        gbc.writeMem(0xbb9d, { 0x3b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xee10, gbc.sp());
        EXPECT(0xbb9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbb9d));
        // 3B 01C8
        gbc.setState(0x77ac, 0x5869, 0x9520, 0x2f90, 0xe5e6, 0x7e33, 0x1, 0x0);
        gbc.writeMem(0x77ac, { 0x3b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5868, gbc.sp());
        EXPECT(0x77ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01C9
        gbc.setState(0xe3ed, 0x60ef, 0xec90, 0x203, 0x4ff7, 0xd8d4, 0x1, 0x0);
        gbc.writeMem(0xe3ed, { 0x3b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x60ee, gbc.sp());
        EXPECT(0xe3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe3ed));
        // 3B 01CA
        gbc.setState(0xe288, 0xbb07, 0x1250, 0xc58b, 0xfb82, 0x7873, 0x1, 0x0);
        gbc.writeMem(0xe288, { 0x3b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbb06, gbc.sp());
        EXPECT(0xe289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe288));
        // 3B 01CB
        gbc.setState(0x64cc, 0xe5b6, 0x31c0, 0x7fa4, 0xb610, 0x1d79, 0x1, 0x0);
        gbc.writeMem(0x64cc, { 0x3b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe5b5, gbc.sp());
        EXPECT(0x64cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01CC
        gbc.setState(0x8711, 0x84b8, 0xce80, 0xfc7a, 0x822f, 0x82f8, 0x0, 0x1);
        gbc.writeMem(0x8711, { 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x84b7, gbc.sp());
        EXPECT(0x8712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8711));
        // 3B 01CD
        gbc.setState(0x2968, 0xc49c, 0x4830, 0x78ef, 0x85bd, 0xd056, 0x0, 0x0);
        gbc.writeMem(0x2968, { 0x3b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc49b, gbc.sp());
        EXPECT(0x2969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01CF
        gbc.setState(0x20a6, 0x3361, 0x2040, 0xc028, 0xc587, 0x754f, 0x1, 0x0);
        gbc.writeMem(0x20a6, { 0x3b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3360, gbc.sp());
        EXPECT(0x20a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01D0
        gbc.setState(0xc4, 0x542c, 0x6150, 0x72d1, 0xf674, 0x53a9, 0x1, 0x0);
        gbc.writeMem(0xc4, { 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x542b, gbc.sp());
        EXPECT(0xc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01D1
        gbc.setState(0x85b5, 0x2139, 0xd390, 0x65c8, 0xf66, 0x8b22, 0x0, 0x1);
        gbc.writeMem(0x85b5, { 0x3b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2138, gbc.sp());
        EXPECT(0x85b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x85b5));
        // 3B 01D2
        gbc.setState(0x400b, 0xedc9, 0xc5c0, 0x1a59, 0x3351, 0xdf4b, 0x0, 0x0);
        gbc.writeMem(0x400b, { 0x3b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xedc8, gbc.sp());
        EXPECT(0x400c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01D3
        gbc.setState(0x74fa, 0xa2bf, 0xb070, 0x40fc, 0x41b9, 0x9f6f, 0x1, 0x1);
        gbc.writeMem(0x74fa, { 0x3b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa2be, gbc.sp());
        EXPECT(0x74fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01D4
        gbc.setState(0x9de, 0x5e10, 0x1540, 0xcefc, 0xb4e6, 0x446c, 0x1, 0x1);
        gbc.writeMem(0x9de, { 0x3b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5e0f, gbc.sp());
        EXPECT(0x9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01D5
        gbc.setState(0x9003, 0x8657, 0x9480, 0xc52f, 0x3877, 0x1bb7, 0x0, 0x1);
        gbc.writeMem(0x9003, { 0x3b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8656, gbc.sp());
        EXPECT(0x9004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9003));
        // 3B 01D6
        gbc.setState(0x7a7e, 0x462f, 0xb710, 0xf34e, 0x5db4, 0x6560, 0x1, 0x1);
        gbc.writeMem(0x7a7e, { 0x3b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x462e, gbc.sp());
        EXPECT(0x7a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01D7
        gbc.setState(0x21da, 0x5f4, 0x3bc0, 0x7a13, 0xb026, 0x6e0a, 0x0, 0x0);
        gbc.writeMem(0x21da, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5f3, gbc.sp());
        EXPECT(0x21db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01D8
        gbc.setState(0xa3fe, 0x97ed, 0x5e20, 0xb854, 0x46ad, 0xffce, 0x1, 0x1);
        gbc.writeMem(0xa3fe, { 0x3b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x97ec, gbc.sp());
        EXPECT(0xa3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa3fe));
        // 3B 01D9
        gbc.setState(0x9ad6, 0x58e2, 0x80e0, 0xf203, 0x25bd, 0xb937, 0x1, 0x0);
        gbc.writeMem(0x9ad6, { 0x3b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x58e1, gbc.sp());
        EXPECT(0x9ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9ad6));
        // 3B 01DA
        gbc.setState(0x8815, 0x558f, 0x23a0, 0x7b1c, 0xe0, 0x1757, 0x0, 0x0);
        gbc.writeMem(0x8815, { 0x3b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x558e, gbc.sp());
        EXPECT(0x8816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8815));
        // 3B 01DB
        gbc.setState(0x44b, 0xd034, 0x2410, 0x96eb, 0x47b1, 0x95fa, 0x0, 0x1);
        gbc.writeMem(0x44b, { 0x3b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd033, gbc.sp());
        EXPECT(0x44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01DC
        gbc.setState(0xd35d, 0xaafc, 0xa730, 0xbf51, 0x4adb, 0x6fd5, 0x1, 0x0);
        gbc.writeMem(0xd35d, { 0x3b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xaafb, gbc.sp());
        EXPECT(0xd35e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd35d));
        // 3B 01DD
        gbc.setState(0x633c, 0xfd2d, 0x1070, 0xae1f, 0x365b, 0x1809, 0x0, 0x0);
        gbc.writeMem(0x633c, { 0x3b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfd2c, gbc.sp());
        EXPECT(0x633d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01DE
        gbc.setState(0x54a1, 0x6f6a, 0xc900, 0xf1a5, 0x206, 0x4e85, 0x0, 0x1);
        gbc.writeMem(0x54a1, { 0x3b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6f69, gbc.sp());
        EXPECT(0x54a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01DF
        gbc.setState(0xe54d, 0x6359, 0xbb10, 0xef61, 0x1567, 0xf79f, 0x0, 0x1);
        gbc.writeMem(0xe54d, { 0x3b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6358, gbc.sp());
        EXPECT(0xe54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe54d));
        // 3B 01E0
        gbc.setState(0x17f8, 0xdef7, 0x9fe0, 0xdd5a, 0xf72, 0xadf5, 0x1, 0x1);
        gbc.writeMem(0x17f8, { 0x3b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdef6, gbc.sp());
        EXPECT(0x17f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01E1
        gbc.setState(0x9f2, 0x5c35, 0x1340, 0x5c96, 0x9402, 0x2ab3, 0x0, 0x0);
        gbc.writeMem(0x9f2, { 0x3b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5c34, gbc.sp());
        EXPECT(0x9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01E2
        gbc.setState(0xb43a, 0x90bb, 0x5e30, 0x3bf3, 0xa4b1, 0x916e, 0x1, 0x1);
        gbc.writeMem(0xb43a, { 0x3b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x90ba, gbc.sp());
        EXPECT(0xb43b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb43a));
        // 3B 01E3
        gbc.setState(0x4452, 0x99c5, 0x7d30, 0x1115, 0x5b9, 0x5e36, 0x0, 0x1);
        gbc.writeMem(0x4452, { 0x3b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x99c4, gbc.sp());
        EXPECT(0x4453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01E6
        gbc.setState(0x8a58, 0x7089, 0xa3a0, 0x96ad, 0xc892, 0xcd7b, 0x1, 0x0);
        gbc.writeMem(0x8a58, { 0x3b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7088, gbc.sp());
        EXPECT(0x8a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8a58));
        // 3B 01E8
        gbc.setState(0x4ab9, 0x9410, 0xa820, 0x1d4f, 0xa366, 0xabe8, 0x0, 0x1);
        gbc.writeMem(0x4ab9, { 0x3b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x940f, gbc.sp());
        EXPECT(0x4aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01E9
        gbc.setState(0xd248, 0xae63, 0x44a0, 0xd786, 0x6216, 0xf32c, 0x0, 0x0);
        gbc.writeMem(0xd248, { 0x3b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xae62, gbc.sp());
        EXPECT(0xd249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd248));
        // 3B 01EA
        gbc.setState(0x8e37, 0x5ddf, 0x5b70, 0x7261, 0x55c, 0xfe2, 0x1, 0x1);
        gbc.writeMem(0x8e37, { 0x3b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5dde, gbc.sp());
        EXPECT(0x8e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8e37));
        // 3B 01EB
        gbc.setState(0x37de, 0x1f4e, 0xe970, 0xeeb0, 0xdebe, 0x67c, 0x0, 0x1);
        gbc.writeMem(0x37de, { 0x3b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1f4d, gbc.sp());
        EXPECT(0x37df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01EC
        gbc.setState(0xa448, 0x7738, 0x5a20, 0xf27a, 0x28ac, 0x97ac, 0x0, 0x0);
        gbc.writeMem(0xa448, { 0x3b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7737, gbc.sp());
        EXPECT(0xa449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa448));
        // 3B 01ED
        gbc.setState(0x63f4, 0x9d05, 0xc480, 0x1323, 0x2fd9, 0x2937, 0x1, 0x1);
        gbc.writeMem(0x63f4, { 0x3b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9d04, gbc.sp());
        EXPECT(0x63f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01EE
        gbc.setState(0xb5a6, 0xaab7, 0xcab0, 0x5edd, 0x5f5a, 0xf075, 0x1, 0x1);
        gbc.writeMem(0xb5a6, { 0x3b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xaab6, gbc.sp());
        EXPECT(0xb5a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb5a6));
        // 3B 01EF
        gbc.setState(0x4d25, 0x5e29, 0x930, 0x816a, 0x7727, 0x458b, 0x1, 0x0);
        gbc.writeMem(0x4d25, { 0x3b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5e28, gbc.sp());
        EXPECT(0x4d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01F0
        gbc.setState(0xe363, 0x1139, 0x8b90, 0xbae4, 0x519e, 0x378f, 0x0, 0x0);
        gbc.writeMem(0xe363, { 0x3b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1138, gbc.sp());
        EXPECT(0xe364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe363));
        // 3B 01F1
        gbc.setState(0x322b, 0xf30e, 0xbb70, 0x31f9, 0x407e, 0x6bc5, 0x1, 0x0);
        gbc.writeMem(0x322b, { 0x3b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf30d, gbc.sp());
        EXPECT(0x322c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01F2
        gbc.setState(0xd52f, 0xe79d, 0x740, 0x332c, 0xec2f, 0xcec1, 0x0, 0x0);
        gbc.writeMem(0xd52f, { 0x3b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe79c, gbc.sp());
        EXPECT(0xd530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd52f));
        // 3B 01F3
        gbc.setState(0xcbb5, 0x2aa8, 0x81f0, 0xc794, 0xc9dd, 0x502d, 0x0, 0x0);
        gbc.writeMem(0xcbb5, { 0x3b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2aa7, gbc.sp());
        EXPECT(0xcbb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcbb5));
        // 3B 01F4
        gbc.setState(0x5076, 0xe397, 0x900, 0x3422, 0xc7de, 0xa5bb, 0x0, 0x1);
        gbc.writeMem(0x5076, { 0x3b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe396, gbc.sp());
        EXPECT(0x5077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01F6
        gbc.setState(0xb2f, 0xaf1, 0x4aa0, 0xefd9, 0x859c, 0x996d, 0x0, 0x1);
        gbc.writeMem(0xb2f, { 0x3b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xaf0, gbc.sp());
        EXPECT(0xb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01F7
        gbc.setState(0x4691, 0x80a, 0x8f90, 0xace7, 0xc0c1, 0xb0d0, 0x0, 0x1);
        gbc.writeMem(0x4691, { 0x3b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x809, gbc.sp());
        EXPECT(0x4692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01F9
        gbc.setState(0xceb1, 0x4657, 0x6d00, 0x38fd, 0xce42, 0x43f2, 0x1, 0x1);
        gbc.writeMem(0xceb1, { 0x3b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4656, gbc.sp());
        EXPECT(0xceb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xceb1));
        // 3B 01FA
        gbc.setState(0x41bb, 0xc83a, 0xe050, 0xa18c, 0x802f, 0xf2f6, 0x1, 0x0);
        gbc.writeMem(0x41bb, { 0x3b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc839, gbc.sp());
        EXPECT(0x41bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 01FB
        gbc.setState(0x5420, 0x1e13, 0x4ce0, 0xe3bd, 0x77a9, 0xaa87, 0x0, 0x0);
        gbc.writeMem(0x5420, { 0x3b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1e12, gbc.sp());
        EXPECT(0x5421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 01FC
        gbc.setState(0xd4d4, 0x4780, 0x3610, 0xde46, 0x7b45, 0xb04f, 0x0, 0x0);
        gbc.writeMem(0xd4d4, { 0x3b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x477f, gbc.sp());
        EXPECT(0xd4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd4d4));
        // 3B 01FD
        gbc.setState(0x9b17, 0x2089, 0xb690, 0x5128, 0x6df, 0x3e8d, 0x0, 0x0);
        gbc.writeMem(0x9b17, { 0x3b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2088, gbc.sp());
        EXPECT(0x9b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9b17));
        // 3B 01FE
        gbc.setState(0x4dc1, 0xa46d, 0xa950, 0x1748, 0x555b, 0xf0d1, 0x0, 0x1);
        gbc.writeMem(0x4dc1, { 0x3b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa46c, gbc.sp());
        EXPECT(0x4dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0200
        gbc.setState(0xc021, 0xe61e, 0x43a0, 0xbf0f, 0x1df0, 0x1540, 0x0, 0x1);
        gbc.writeMem(0xc021, { 0x3b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe61d, gbc.sp());
        EXPECT(0xc022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc021));
        // 3B 0202
        gbc.setState(0x5c4, 0x8d76, 0x7f60, 0xa522, 0x1f5f, 0xed42, 0x1, 0x0);
        gbc.writeMem(0x5c4, { 0x3b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8d75, gbc.sp());
        EXPECT(0x5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0203
        gbc.setState(0x73e7, 0x1c5, 0xb160, 0xcac9, 0xf8e8, 0xb14c, 0x1, 0x1);
        gbc.writeMem(0x73e7, { 0x3b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1c4, gbc.sp());
        EXPECT(0x73e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0204
        gbc.setState(0x9d67, 0x76a1, 0xcf20, 0xa771, 0xb84b, 0xce2e, 0x0, 0x0);
        gbc.writeMem(0x9d67, { 0x3b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x76a0, gbc.sp());
        EXPECT(0x9d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9d67));
        // 3B 0205
        gbc.setState(0xcc8c, 0x9acd, 0xee0, 0x37b0, 0x95ce, 0xbe5d, 0x1, 0x1);
        gbc.writeMem(0xcc8c, { 0x3b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9acc, gbc.sp());
        EXPECT(0xcc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcc8c));
        // 3B 0206
        gbc.setState(0x8ed1, 0xe704, 0xad0, 0xd0f3, 0xe38, 0x440d, 0x0, 0x1);
        gbc.writeMem(0x8ed1, { 0x3b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe703, gbc.sp());
        EXPECT(0x8ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8ed1));
        // 3B 0208
        gbc.setState(0xd669, 0x3458, 0x8660, 0x25c4, 0x5321, 0xe9fd, 0x1, 0x0);
        gbc.writeMem(0xd669, { 0x3b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3457, gbc.sp());
        EXPECT(0xd66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd669));
        // 3B 0209
        gbc.setState(0x310e, 0x231b, 0xefb0, 0x256f, 0xf08b, 0x5b3a, 0x1, 0x1);
        gbc.writeMem(0x310e, { 0x3b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x231a, gbc.sp());
        EXPECT(0x310f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 020A
        gbc.setState(0x4941, 0x5d37, 0x8100, 0xc6f5, 0xed09, 0x7180, 0x0, 0x1);
        gbc.writeMem(0x4941, { 0x3b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5d36, gbc.sp());
        EXPECT(0x4942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 020B
        gbc.setState(0x5098, 0x5a0d, 0xfa70, 0xb0fc, 0xd1ed, 0x70de, 0x1, 0x0);
        gbc.writeMem(0x5098, { 0x3b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5a0c, gbc.sp());
        EXPECT(0x5099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 020C
        gbc.setState(0x2262, 0xe09d, 0x2b80, 0xc196, 0x880b, 0x2c77, 0x0, 0x1);
        gbc.writeMem(0x2262, { 0x3b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe09c, gbc.sp());
        EXPECT(0x2263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 020D
        gbc.setState(0x2c38, 0xa38, 0x4060, 0x3a0c, 0xb51c, 0x6280, 0x1, 0x0);
        gbc.writeMem(0x2c38, { 0x3b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa37, gbc.sp());
        EXPECT(0x2c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 020E
        gbc.setState(0xc8db, 0x5e72, 0x96a0, 0x27a7, 0x5400, 0x8a1b, 0x0, 0x1);
        gbc.writeMem(0xc8db, { 0x3b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5e71, gbc.sp());
        EXPECT(0xc8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc8db));
        // 3B 020F
        gbc.setState(0x2dcd, 0xfe4e, 0x8380, 0x6cc4, 0x2ecf, 0x36e8, 0x0, 0x1);
        gbc.writeMem(0x2dcd, { 0x3b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfe4d, gbc.sp());
        EXPECT(0x2dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0210
        gbc.setState(0x6704, 0x6c8e, 0x4320, 0xe569, 0x4c09, 0xd5d3, 0x0, 0x0);
        gbc.writeMem(0x6704, { 0x3b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6c8d, gbc.sp());
        EXPECT(0x6705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0212
        gbc.setState(0xdc69, 0x71b4, 0xf100, 0xceb7, 0x9862, 0x9a93, 0x1, 0x1);
        gbc.writeMem(0xdc69, { 0x3b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x71b3, gbc.sp());
        EXPECT(0xdc6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdc69));
        // 3B 0213
        gbc.setState(0x736a, 0xb13a, 0x1f70, 0x5179, 0x8ea2, 0xa9b0, 0x1, 0x0);
        gbc.writeMem(0x736a, { 0x3b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb139, gbc.sp());
        EXPECT(0x736b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0214
        gbc.setState(0x966, 0x964, 0x2bd0, 0x861a, 0xe2cb, 0x2318, 0x0, 0x1);
        gbc.writeMem(0x966, { 0x3b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x963, gbc.sp());
        EXPECT(0x967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0215
        gbc.setState(0x6dd8, 0x8ec8, 0x1a70, 0x6ea2, 0x720b, 0x1f8f, 0x0, 0x0);
        gbc.writeMem(0x6dd8, { 0x3b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8ec7, gbc.sp());
        EXPECT(0x6dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0216
        gbc.setState(0xa156, 0xc0b0, 0xdcc0, 0x32fe, 0xc0ca, 0xea3f, 0x1, 0x1);
        gbc.writeMem(0xa156, { 0x3b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc0af, gbc.sp());
        EXPECT(0xa157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa156));
        // 3B 0217
        gbc.setState(0x5bd9, 0x1008, 0x9630, 0x20f8, 0x7129, 0xe5b7, 0x1, 0x0);
        gbc.writeMem(0x5bd9, { 0x3b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1007, gbc.sp());
        EXPECT(0x5bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0218
        gbc.setState(0xd4a2, 0xd4ec, 0xe200, 0x5c98, 0x8bfa, 0x3c88, 0x1, 0x1);
        gbc.writeMem(0xd4a2, { 0x3b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd4eb, gbc.sp());
        EXPECT(0xd4a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd4a2));
        // 3B 0219
        gbc.setState(0xe889, 0xdf3f, 0xc610, 0xe7be, 0x87ac, 0x4965, 0x0, 0x1);
        gbc.writeMem(0xe889, { 0x3b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdf3e, gbc.sp());
        EXPECT(0xe88a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe889));
        // 3B 021A
        gbc.setState(0xa6f8, 0x8b15, 0xfcc0, 0x3b39, 0xce16, 0x4a66, 0x0, 0x0);
        gbc.writeMem(0xa6f8, { 0x3b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8b14, gbc.sp());
        EXPECT(0xa6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa6f8));
        // 3B 021B
        gbc.setState(0x4074, 0x7202, 0xf00, 0xaac9, 0xf259, 0xefe5, 0x0, 0x0);
        gbc.writeMem(0x4074, { 0x3b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7201, gbc.sp());
        EXPECT(0x4075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 021C
        gbc.setState(0x9fae, 0xca2a, 0xc750, 0xd08f, 0x1823, 0xbefb, 0x0, 0x1);
        gbc.writeMem(0x9fae, { 0x3b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xca29, gbc.sp());
        EXPECT(0x9faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9fae));
        // 3B 021D
        gbc.setState(0x4e37, 0x6e82, 0xe4f0, 0x3b0a, 0x399d, 0x8e7c, 0x0, 0x1);
        gbc.writeMem(0x4e37, { 0x3b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6e81, gbc.sp());
        EXPECT(0x4e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 021E
        gbc.setState(0x57a7, 0xf06a, 0xee80, 0xe2eb, 0xf71e, 0x692, 0x1, 0x1);
        gbc.writeMem(0x57a7, { 0x3b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf069, gbc.sp());
        EXPECT(0x57a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 021F
        gbc.setState(0xa9ec, 0xf637, 0xf330, 0x7774, 0xb903, 0x1f75, 0x0, 0x0);
        gbc.writeMem(0xa9ec, { 0x3b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf636, gbc.sp());
        EXPECT(0xa9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa9ec));
        // 3B 0220
        gbc.setState(0x5723, 0x52ba, 0xfbc0, 0xc324, 0x38ba, 0xe370, 0x0, 0x1);
        gbc.writeMem(0x5723, { 0x3b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x52b9, gbc.sp());
        EXPECT(0x5724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0221
        gbc.setState(0x681f, 0xce84, 0xd3b0, 0xc20e, 0xf0fb, 0xf8e2, 0x0, 0x0);
        gbc.writeMem(0x681f, { 0x3b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xce83, gbc.sp());
        EXPECT(0x6820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0222
        gbc.setState(0x36f0, 0xc516, 0x65d0, 0xcf86, 0x6dd, 0x5c91, 0x0, 0x1);
        gbc.writeMem(0x36f0, { 0x3b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc515, gbc.sp());
        EXPECT(0x36f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0223
        gbc.setState(0xc8c6, 0x5864, 0xc1b0, 0xa7e, 0xc1b9, 0xb19c, 0x1, 0x1);
        gbc.writeMem(0xc8c6, { 0x3b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5863, gbc.sp());
        EXPECT(0xc8c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc8c6));
        // 3B 0224
        gbc.setState(0xba97, 0x8f3b, 0xd5f0, 0x3db5, 0x264e, 0x5245, 0x0, 0x0);
        gbc.writeMem(0xba97, { 0x3b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8f3a, gbc.sp());
        EXPECT(0xba98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xba97));
        // 3B 0225
        gbc.setState(0x488f, 0x2b1b, 0x7b00, 0x2b7a, 0x8c82, 0x149a, 0x1, 0x1);
        gbc.writeMem(0x488f, { 0x3b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2b1a, gbc.sp());
        EXPECT(0x4890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0227
        gbc.setState(0x270d, 0xcfde, 0x2c10, 0xa15f, 0xb33b, 0x7c1e, 0x0, 0x0);
        gbc.writeMem(0x270d, { 0x3b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcfdd, gbc.sp());
        EXPECT(0x270e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0228
        gbc.setState(0x2c2a, 0x9e0b, 0xc8f0, 0xa4f4, 0x2100, 0xdc86, 0x0, 0x1);
        gbc.writeMem(0x2c2a, { 0x3b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9e0a, gbc.sp());
        EXPECT(0x2c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0229
        gbc.setState(0xc52d, 0x59db, 0x2ff0, 0x534b, 0x27ec, 0xad2c, 0x0, 0x0);
        gbc.writeMem(0xc52d, { 0x3b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x59da, gbc.sp());
        EXPECT(0xc52e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc52d));
        // 3B 022A
        gbc.setState(0x7981, 0x5f43, 0x66f0, 0x6ed2, 0x89cb, 0x7e17, 0x1, 0x0);
        gbc.writeMem(0x7981, { 0x3b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5f42, gbc.sp());
        EXPECT(0x7982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 022B
        gbc.setState(0x1c10, 0x2657, 0x92f0, 0x7ecf, 0x1159, 0x2346, 0x0, 0x0);
        gbc.writeMem(0x1c10, { 0x3b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2656, gbc.sp());
        EXPECT(0x1c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 022C
        gbc.setState(0x7aea, 0x68ef, 0x8040, 0xe7d3, 0x8827, 0x30be, 0x0, 0x1);
        gbc.writeMem(0x7aea, { 0x3b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x68ee, gbc.sp());
        EXPECT(0x7aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 022D
        gbc.setState(0x2c43, 0xbb4e, 0xf160, 0x8c7d, 0x76d3, 0x92af, 0x0, 0x1);
        gbc.writeMem(0x2c43, { 0x3b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbb4d, gbc.sp());
        EXPECT(0x2c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 022E
        gbc.setState(0xb9e, 0xc887, 0x1b90, 0xb85e, 0x2d59, 0x8c2c, 0x1, 0x0);
        gbc.writeMem(0xb9e, { 0x3b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc886, gbc.sp());
        EXPECT(0xb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0230
        gbc.setState(0x860c, 0xda6, 0x5fe0, 0x9c26, 0x423f, 0x2531, 0x0, 0x0);
        gbc.writeMem(0x860c, { 0x3b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xda5, gbc.sp());
        EXPECT(0x860d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x860c));
        // 3B 0231
        gbc.setState(0x50e4, 0x23c0, 0x3070, 0x15af, 0x2455, 0x354, 0x0, 0x0);
        gbc.writeMem(0x50e4, { 0x3b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x23bf, gbc.sp());
        EXPECT(0x50e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0232
        gbc.setState(0xdea1, 0xf49c, 0xf660, 0x23e8, 0xc84c, 0x6618, 0x1, 0x1);
        gbc.writeMem(0xdea1, { 0x3b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf49b, gbc.sp());
        EXPECT(0xdea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdea1));
        // 3B 0233
        gbc.setState(0x977f, 0x1a23, 0x2350, 0x7209, 0xd845, 0xc4ae, 0x1, 0x0);
        gbc.writeMem(0x977f, { 0x3b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1a22, gbc.sp());
        EXPECT(0x9780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x977f));
        // 3B 0234
        gbc.setState(0x6474, 0x8f46, 0xf410, 0x8221, 0x53f3, 0x38d6, 0x0, 0x1);
        gbc.writeMem(0x6474, { 0x3b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8f45, gbc.sp());
        EXPECT(0x6475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0236
        gbc.setState(0xe8fc, 0xb42c, 0xc520, 0xce58, 0xfc67, 0x99c7, 0x0, 0x1);
        gbc.writeMem(0xe8fc, { 0x3b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb42b, gbc.sp());
        EXPECT(0xe8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe8fc));
        // 3B 0237
        gbc.setState(0xdea9, 0xe7bd, 0xbeb0, 0x9c0f, 0xbb94, 0x846f, 0x1, 0x0);
        gbc.writeMem(0xdea9, { 0x3b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe7bc, gbc.sp());
        EXPECT(0xdeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdea9));
        // 3B 0238
        gbc.setState(0x82b, 0xdc2c, 0x9700, 0x522c, 0xd01a, 0xae41, 0x1, 0x1);
        gbc.writeMem(0x82b, { 0x3b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdc2b, gbc.sp());
        EXPECT(0x82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0239
        gbc.setState(0x8cfd, 0x8e4c, 0x8a90, 0x58a9, 0x9263, 0xb65a, 0x0, 0x1);
        gbc.writeMem(0x8cfd, { 0x3b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8e4b, gbc.sp());
        EXPECT(0x8cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8cfd));
        // 3B 023A
        gbc.setState(0x766e, 0x20aa, 0x1ba0, 0x2218, 0x1515, 0x3314, 0x0, 0x0);
        gbc.writeMem(0x766e, { 0x3b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x20a9, gbc.sp());
        EXPECT(0x766f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 023B
        gbc.setState(0x539b, 0x3bac, 0xda50, 0x906f, 0x1385, 0x3d12, 0x0, 0x0);
        gbc.writeMem(0x539b, { 0x3b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3bab, gbc.sp());
        EXPECT(0x539c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 023C
        gbc.setState(0xa179, 0x1bda, 0xaf90, 0xd970, 0xf547, 0xe2cf, 0x1, 0x1);
        gbc.writeMem(0xa179, { 0x3b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1bd9, gbc.sp());
        EXPECT(0xa17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa179));
        // 3B 023D
        gbc.setState(0x3852, 0x5796, 0x9140, 0xcf4a, 0x3a4b, 0x8326, 0x1, 0x1);
        gbc.writeMem(0x3852, { 0x3b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5795, gbc.sp());
        EXPECT(0x3853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 023E
        gbc.setState(0x6db, 0x5347, 0xd0c0, 0xd7de, 0x472d, 0xa2b0, 0x0, 0x1);
        gbc.writeMem(0x6db, { 0x3b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5346, gbc.sp());
        EXPECT(0x6dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 023F
        gbc.setState(0xa7dc, 0x3269, 0xf530, 0xe0c4, 0x3df7, 0x5dbc, 0x1, 0x0);
        gbc.writeMem(0xa7dc, { 0x3b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3268, gbc.sp());
        EXPECT(0xa7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa7dc));
        // 3B 0240
        gbc.setState(0xb309, 0x3ebb, 0x6d40, 0xb78c, 0xbeec, 0x99c, 0x1, 0x0);
        gbc.writeMem(0xb309, { 0x3b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3eba, gbc.sp());
        EXPECT(0xb30a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb309));
        // 3B 0241
        gbc.setState(0x502, 0xbb5d, 0x48d0, 0x4753, 0xb813, 0xc05, 0x1, 0x0);
        gbc.writeMem(0x502, { 0x3b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbb5c, gbc.sp());
        EXPECT(0x503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0242
        gbc.setState(0xb042, 0x2aa1, 0xc9f0, 0x9ddf, 0x399b, 0x44d3, 0x1, 0x1);
        gbc.writeMem(0xb042, { 0x3b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2aa0, gbc.sp());
        EXPECT(0xb043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb042));
        // 3B 0243
        gbc.setState(0x8d96, 0x4d73, 0xcb10, 0xc475, 0xb28e, 0x88f3, 0x0, 0x1);
        gbc.writeMem(0x8d96, { 0x3b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4d72, gbc.sp());
        EXPECT(0x8d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8d96));
        // 3B 0245
        gbc.setState(0xb9ca, 0x8e7c, 0x9140, 0x6e37, 0x61bf, 0x5cdb, 0x1, 0x0);
        gbc.writeMem(0xb9ca, { 0x3b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8e7b, gbc.sp());
        EXPECT(0xb9cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb9ca));
        // 3B 0246
        gbc.setState(0x30ed, 0xf402, 0x1ad0, 0x7faf, 0xcd0d, 0x6652, 0x1, 0x0);
        gbc.writeMem(0x30ed, { 0x3b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf401, gbc.sp());
        EXPECT(0x30ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0247
        gbc.setState(0x7c1c, 0x8329, 0xed40, 0x5c58, 0x4a0d, 0xa2e9, 0x0, 0x0);
        gbc.writeMem(0x7c1c, { 0x3b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8328, gbc.sp());
        EXPECT(0x7c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0248
        gbc.setState(0x5085, 0xdc47, 0xae00, 0xc1b5, 0xc2a5, 0x7615, 0x1, 0x1);
        gbc.writeMem(0x5085, { 0x3b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdc46, gbc.sp());
        EXPECT(0x5086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0249
        gbc.setState(0x5c3d, 0x9322, 0x40, 0xd08f, 0xe7c2, 0x140f, 0x1, 0x0);
        gbc.writeMem(0x5c3d, { 0x3b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9321, gbc.sp());
        EXPECT(0x5c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 024A
        gbc.setState(0x394f, 0x8c8d, 0x4410, 0xb21d, 0xa388, 0x10a2, 0x0, 0x1);
        gbc.writeMem(0x394f, { 0x3b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8c8c, gbc.sp());
        EXPECT(0x3950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 024B
        gbc.setState(0x123e, 0x1bd0, 0xff40, 0xa997, 0x2191, 0xb318, 0x0, 0x0);
        gbc.writeMem(0x123e, { 0x3b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1bcf, gbc.sp());
        EXPECT(0x123f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 024C
        gbc.setState(0x4209, 0x6371, 0x1bb0, 0x1d39, 0x96c4, 0xd14c, 0x0, 0x1);
        gbc.writeMem(0x4209, { 0x3b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6370, gbc.sp());
        EXPECT(0x420a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 024E
        gbc.setState(0x7f97, 0xc3b3, 0xb3c0, 0xc67c, 0x6f3a, 0x775f, 0x1, 0x1);
        gbc.writeMem(0x7f97, { 0x3b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc3b2, gbc.sp());
        EXPECT(0x7f98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 024F
        gbc.setState(0x1db6, 0x20be, 0xfb90, 0xdf66, 0xf602, 0xff0a, 0x1, 0x0);
        gbc.writeMem(0x1db6, { 0x3b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x20bd, gbc.sp());
        EXPECT(0x1db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0250
        gbc.setState(0x2e52, 0xb191, 0x93a0, 0x99bd, 0x6b5f, 0x5c95, 0x0, 0x0);
        gbc.writeMem(0x2e52, { 0x3b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb190, gbc.sp());
        EXPECT(0x2e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0251
        gbc.setState(0xa3a6, 0x3219, 0x6540, 0x5a37, 0x7aa6, 0x4917, 0x1, 0x0);
        gbc.writeMem(0xa3a6, { 0x3b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3218, gbc.sp());
        EXPECT(0xa3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa3a6));
        // 3B 0252
        gbc.setState(0xddfa, 0x3ccb, 0xf70, 0x4095, 0xfee, 0xec0d, 0x1, 0x0);
        gbc.writeMem(0xddfa, { 0x3b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3cca, gbc.sp());
        EXPECT(0xddfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xddfa));
        // 3B 0253
        gbc.setState(0x339c, 0xee1c, 0x4210, 0xae7a, 0x10ae, 0x2af2, 0x1, 0x1);
        gbc.writeMem(0x339c, { 0x3b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xee1b, gbc.sp());
        EXPECT(0x339d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0254
        gbc.setState(0x6152, 0xf037, 0xe50, 0x1bc8, 0xf3b8, 0xe56e, 0x0, 0x1);
        gbc.writeMem(0x6152, { 0x3b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf036, gbc.sp());
        EXPECT(0x6153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0255
        gbc.setState(0xb4d5, 0xac58, 0x3e80, 0x9fe4, 0xb929, 0xadc, 0x0, 0x1);
        gbc.writeMem(0xb4d5, { 0x3b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xac57, gbc.sp());
        EXPECT(0xb4d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb4d5));
        // 3B 0256
        gbc.setState(0xc292, 0xcad0, 0x4fd0, 0x9b5c, 0xc958, 0x2ee4, 0x1, 0x0);
        gbc.writeMem(0xc292, { 0x3b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcacf, gbc.sp());
        EXPECT(0xc293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc292));
        // 3B 0257
        gbc.setState(0x5c24, 0x96a, 0x6180, 0xd8ed, 0x73eb, 0x6cad, 0x0, 0x0);
        gbc.writeMem(0x5c24, { 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x969, gbc.sp());
        EXPECT(0x5c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0258
        gbc.setState(0xc404, 0x890a, 0xef10, 0xa6d0, 0xa4dd, 0x9159, 0x1, 0x0);
        gbc.writeMem(0xc404, { 0x3b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8909, gbc.sp());
        EXPECT(0xc405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc404));
        // 3B 0259
        gbc.setState(0xe8e1, 0xce44, 0xa8b0, 0x8025, 0xf511, 0xaf60, 0x0, 0x1);
        gbc.writeMem(0xe8e1, { 0x3b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xce43, gbc.sp());
        EXPECT(0xe8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe8e1));
        // 3B 025A
        gbc.setState(0xd48d, 0x77a1, 0x94c0, 0x882d, 0x1a95, 0xed2c, 0x1, 0x1);
        gbc.writeMem(0xd48d, { 0x3b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x77a0, gbc.sp());
        EXPECT(0xd48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd48d));
        // 3B 025B
        gbc.setState(0x35f6, 0x33ba, 0x8f80, 0x34d1, 0x3dc7, 0x4827, 0x1, 0x0);
        gbc.writeMem(0x35f6, { 0x3b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x33b9, gbc.sp());
        EXPECT(0x35f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 025C
        gbc.setState(0x9cb, 0x336, 0x69f0, 0x9acc, 0x14ac, 0x21fc, 0x0, 0x1);
        gbc.writeMem(0x9cb, { 0x3b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x335, gbc.sp());
        EXPECT(0x9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 025D
        gbc.setState(0x7984, 0x456d, 0x4840, 0xb255, 0xf8ff, 0x85f7, 0x0, 0x1);
        gbc.writeMem(0x7984, { 0x3b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x456c, gbc.sp());
        EXPECT(0x7985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 025E
        gbc.setState(0xcb2f, 0xcc94, 0xb610, 0xda54, 0x6c40, 0x6f8e, 0x0, 0x1);
        gbc.writeMem(0xcb2f, { 0x3b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcc93, gbc.sp());
        EXPECT(0xcb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcb2f));
        // 3B 025F
        gbc.setState(0x7de6, 0x9ec6, 0x7d0, 0xa75a, 0xb586, 0x38c7, 0x0, 0x1);
        gbc.writeMem(0x7de6, { 0x3b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9ec5, gbc.sp());
        EXPECT(0x7de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0260
        gbc.setState(0x988f, 0xb74a, 0xa6c0, 0x78e9, 0x1a8c, 0x2c76, 0x0, 0x1);
        gbc.writeMem(0x988f, { 0x3b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb749, gbc.sp());
        EXPECT(0x9890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x988f));
        // 3B 0262
        gbc.setState(0xdbcd, 0xce84, 0x9b50, 0x4731, 0xfa86, 0x9eed, 0x1, 0x0);
        gbc.writeMem(0xdbcd, { 0x3b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xce83, gbc.sp());
        EXPECT(0xdbce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdbcd));
        // 3B 0263
        gbc.setState(0xc995, 0x542e, 0x930, 0xb557, 0x9683, 0x8be8, 0x0, 0x1);
        gbc.writeMem(0xc995, { 0x3b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x542d, gbc.sp());
        EXPECT(0xc996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc995));
        // 3B 0264
        gbc.setState(0x45f, 0x812a, 0x7710, 0xd46f, 0x6282, 0x317, 0x1, 0x1);
        gbc.writeMem(0x45f, { 0x3b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8129, gbc.sp());
        EXPECT(0x460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0265
        gbc.setState(0xd5b, 0x2a06, 0x7800, 0x9fa6, 0x2d08, 0x39eb, 0x1, 0x0);
        gbc.writeMem(0xd5b, { 0x3b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2a05, gbc.sp());
        EXPECT(0xd5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0266
        gbc.setState(0x9a36, 0xdd60, 0x8850, 0xded6, 0x9ac7, 0xbeab, 0x1, 0x0);
        gbc.writeMem(0x9a36, { 0x3b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdd5f, gbc.sp());
        EXPECT(0x9a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9a36));
        // 3B 0267
        gbc.setState(0xc0e7, 0xd211, 0x8380, 0x211d, 0x5746, 0xf1cc, 0x0, 0x0);
        gbc.writeMem(0xc0e7, { 0x3b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd210, gbc.sp());
        EXPECT(0xc0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc0e7));
        // 3B 0268
        gbc.setState(0x6f90, 0x7fb8, 0x2900, 0x52af, 0x969c, 0x961b, 0x1, 0x0);
        gbc.writeMem(0x6f90, { 0x3b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7fb7, gbc.sp());
        EXPECT(0x6f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0269
        gbc.setState(0xe04c, 0xb929, 0xa5a0, 0xbfb4, 0x8e59, 0x7d64, 0x0, 0x1);
        gbc.writeMem(0xe04c, { 0x3b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb928, gbc.sp());
        EXPECT(0xe04d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe04c));
        // 3B 026A
        gbc.setState(0x13bc, 0x8875, 0x1eb0, 0x848c, 0x400c, 0xda83, 0x0, 0x1);
        gbc.writeMem(0x13bc, { 0x3b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8874, gbc.sp());
        EXPECT(0x13bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 026B
        gbc.setState(0x6c04, 0x3923, 0xd20, 0xa431, 0xa2d7, 0xe033, 0x1, 0x0);
        gbc.writeMem(0x6c04, { 0x3b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3922, gbc.sp());
        EXPECT(0x6c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 026C
        gbc.setState(0x394d, 0x4ecb, 0x1e50, 0x60af, 0xec9f, 0x3661, 0x1, 0x0);
        gbc.writeMem(0x394d, { 0x3b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4eca, gbc.sp());
        EXPECT(0x394e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 026D
        gbc.setState(0xe3b5, 0xde8a, 0xcbd0, 0x3f8f, 0xc00, 0xab56, 0x0, 0x0);
        gbc.writeMem(0xe3b5, { 0x3b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xde89, gbc.sp());
        EXPECT(0xe3b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe3b5));
        // 3B 026E
        gbc.setState(0x93a8, 0xc570, 0x5d90, 0x35ad, 0x2c77, 0xf0b5, 0x0, 0x1);
        gbc.writeMem(0x93a8, { 0x3b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc56f, gbc.sp());
        EXPECT(0x93a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x93a8));
        // 3B 026F
        gbc.setState(0x6191, 0xb6df, 0xc9e0, 0x677a, 0x824b, 0xd0bd, 0x0, 0x1);
        gbc.writeMem(0x6191, { 0x3b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb6de, gbc.sp());
        EXPECT(0x6192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0270
        gbc.setState(0xbbfb, 0x4b2a, 0xfd20, 0xdb00, 0xe2bd, 0xde0, 0x1, 0x1);
        gbc.writeMem(0xbbfb, { 0x3b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4b29, gbc.sp());
        EXPECT(0xbbfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbbfb));
        // 3B 0272
        gbc.setState(0x1136, 0x8d22, 0xfd10, 0x311d, 0x8587, 0x3b1, 0x0, 0x0);
        gbc.writeMem(0x1136, { 0x3b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8d21, gbc.sp());
        EXPECT(0x1137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0273
        gbc.setState(0xe199, 0xad8a, 0x2e40, 0xce7a, 0xb584, 0x85cd, 0x0, 0x0);
        gbc.writeMem(0xe199, { 0x3b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xad89, gbc.sp());
        EXPECT(0xe19a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe199));
        // 3B 0274
        gbc.setState(0xc6d5, 0x14a9, 0xb3c0, 0xbac0, 0x626f, 0x8b39, 0x1, 0x0);
        gbc.writeMem(0xc6d5, { 0x3b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x14a8, gbc.sp());
        EXPECT(0xc6d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc6d5));
        // 3B 0275
        gbc.setState(0x37fe, 0x34e0, 0x9a80, 0x1b62, 0x7f9e, 0xf7a4, 0x0, 0x0);
        gbc.writeMem(0x37fe, { 0x3b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x34df, gbc.sp());
        EXPECT(0x37ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0276
        gbc.setState(0x4bbb, 0xccec, 0x4ed0, 0x309b, 0xdf, 0x9c15, 0x1, 0x1);
        gbc.writeMem(0x4bbb, { 0x3b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcceb, gbc.sp());
        EXPECT(0x4bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0277
        gbc.setState(0xdb4a, 0xa265, 0xb3b0, 0x9612, 0xff4b, 0xf47d, 0x1, 0x1);
        gbc.writeMem(0xdb4a, { 0x3b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa264, gbc.sp());
        EXPECT(0xdb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdb4a));
        // 3B 0278
        gbc.setState(0xe557, 0xcf30, 0xc490, 0x6f33, 0x95dd, 0x9d5c, 0x0, 0x1);
        gbc.writeMem(0xe557, { 0x3b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcf2f, gbc.sp());
        EXPECT(0xe558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe557));
        // 3B 0279
        gbc.setState(0x579e, 0x34c4, 0x4c30, 0xb1e8, 0xe73f, 0x78c2, 0x1, 0x1);
        gbc.writeMem(0x579e, { 0x3b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x34c3, gbc.sp());
        EXPECT(0x579f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 027A
        gbc.setState(0xcb2d, 0xa0e5, 0x4520, 0xaffa, 0x5d65, 0x7c18, 0x1, 0x1);
        gbc.writeMem(0xcb2d, { 0x3b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa0e4, gbc.sp());
        EXPECT(0xcb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcb2d));
        // 3B 027B
        gbc.setState(0x10c9, 0x9982, 0xe570, 0xdad4, 0x2fd5, 0x9dd0, 0x1, 0x1);
        gbc.writeMem(0x10c9, { 0x3b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9981, gbc.sp());
        EXPECT(0x10ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 027C
        gbc.setState(0xc2f0, 0x7020, 0xf5a0, 0x9a4b, 0x8b15, 0xbe97, 0x0, 0x0);
        gbc.writeMem(0xc2f0, { 0x3b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x701f, gbc.sp());
        EXPECT(0xc2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc2f0));
        // 3B 027D
        gbc.setState(0x87c3, 0xa0cc, 0xe5f0, 0x8f58, 0x45d0, 0xb4ea, 0x1, 0x1);
        gbc.writeMem(0x87c3, { 0x3b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa0cb, gbc.sp());
        EXPECT(0x87c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x87c3));
        // 3B 027E
        gbc.setState(0x8ba5, 0x7397, 0x8190, 0x48fc, 0x9b8b, 0xae85, 0x1, 0x1);
        gbc.writeMem(0x8ba5, { 0x3b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7396, gbc.sp());
        EXPECT(0x8ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8ba5));
        // 3B 027F
        gbc.setState(0x63b9, 0x84e, 0xa6e0, 0x688d, 0x492a, 0x8960, 0x0, 0x1);
        gbc.writeMem(0x63b9, { 0x3b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x84d, gbc.sp());
        EXPECT(0x63ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0280
        gbc.setState(0xd41e, 0x74bb, 0xc4d0, 0x385, 0x5647, 0xbf34, 0x1, 0x0);
        gbc.writeMem(0xd41e, { 0x3b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x74ba, gbc.sp());
        EXPECT(0xd41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd41e));
        // 3B 0281
        gbc.setState(0xe186, 0x3858, 0x6240, 0x10fe, 0x23e3, 0xe6b, 0x0, 0x1);
        gbc.writeMem(0xe186, { 0x3b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3857, gbc.sp());
        EXPECT(0xe187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe186));
        // 3B 0282
        gbc.setState(0x42c, 0x16ed, 0x5020, 0xcb36, 0xbc78, 0xa32b, 0x0, 0x0);
        gbc.writeMem(0x42c, { 0x3b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x16ec, gbc.sp());
        EXPECT(0x42d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0283
        gbc.setState(0xef72, 0x7545, 0xbf50, 0x8ccf, 0x6c2a, 0x8980, 0x0, 0x1);
        gbc.writeMem(0xef72, { 0x3b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7544, gbc.sp());
        EXPECT(0xef73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xef72));
        // 3B 0284
        gbc.setState(0x348f, 0x1a43, 0xfe90, 0x8ec6, 0x20a0, 0xf77b, 0x1, 0x0);
        gbc.writeMem(0x348f, { 0x3b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1a42, gbc.sp());
        EXPECT(0x3490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0285
        gbc.setState(0x6e27, 0xe4e7, 0x68c0, 0x2ec7, 0x3664, 0xdab5, 0x0, 0x0);
        gbc.writeMem(0x6e27, { 0x3b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe4e6, gbc.sp());
        EXPECT(0x6e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0286
        gbc.setState(0xdf20, 0xac6c, 0xf5c0, 0xf5a6, 0x989b, 0xe26e, 0x0, 0x0);
        gbc.writeMem(0xdf20, { 0x3b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xac6b, gbc.sp());
        EXPECT(0xdf21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdf20));
        // 3B 0287
        gbc.setState(0x4c56, 0xe258, 0xded0, 0xbb7e, 0x8673, 0x8bed, 0x0, 0x0);
        gbc.writeMem(0x4c56, { 0x3b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe257, gbc.sp());
        EXPECT(0x4c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0288
        gbc.setState(0x97f2, 0xb367, 0x32d0, 0x8f58, 0x4f9e, 0xda08, 0x1, 0x1);
        gbc.writeMem(0x97f2, { 0x3b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb366, gbc.sp());
        EXPECT(0x97f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x97f2));
        // 3B 0289
        gbc.setState(0x32fc, 0xbff2, 0xe7f0, 0x28ce, 0x4010, 0x349e, 0x1, 0x0);
        gbc.writeMem(0x32fc, { 0x3b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbff1, gbc.sp());
        EXPECT(0x32fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 028A
        gbc.setState(0x7032, 0x9e34, 0x7a90, 0x50b4, 0xf997, 0x4325, 0x1, 0x0);
        gbc.writeMem(0x7032, { 0x3b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9e33, gbc.sp());
        EXPECT(0x7033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 028B
        gbc.setState(0x7310, 0xb5e5, 0x4cb0, 0x878b, 0xd772, 0x6242, 0x1, 0x0);
        gbc.writeMem(0x7310, { 0x3b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb5e4, gbc.sp());
        EXPECT(0x7311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0290
        gbc.setState(0xc02f, 0xdd3d, 0x21a0, 0x4f1e, 0x323e, 0x6e7, 0x1, 0x1);
        gbc.writeMem(0xc02f, { 0x3b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdd3c, gbc.sp());
        EXPECT(0xc030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc02f));
        // 3B 0291
        gbc.setState(0xace0, 0xb0b7, 0x26a0, 0xa9fd, 0xfe02, 0x74e8, 0x1, 0x0);
        gbc.writeMem(0xace0, { 0x3b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb0b6, gbc.sp());
        EXPECT(0xace1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xace0));
        // 3B 0293
        gbc.setState(0xa5e1, 0xda74, 0x75b0, 0x866, 0x7286, 0xd814, 0x0, 0x1);
        gbc.writeMem(0xa5e1, { 0x3b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xda73, gbc.sp());
        EXPECT(0xa5e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa5e1));
        // 3B 0294
        gbc.setState(0x982a, 0xc971, 0x8170, 0x22d1, 0xe3e7, 0x76e0, 0x1, 0x0);
        gbc.writeMem(0x982a, { 0x3b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc970, gbc.sp());
        EXPECT(0x982b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x982a));
        // 3B 0295
        gbc.setState(0x976f, 0x4aa5, 0xf310, 0x4de8, 0xa342, 0xdbc9, 0x1, 0x1);
        gbc.writeMem(0x976f, { 0x3b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4aa4, gbc.sp());
        EXPECT(0x9770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x976f));
        // 3B 0296
        gbc.setState(0x6ec, 0xdbf3, 0xc340, 0x6ca0, 0x78c9, 0x4ceb, 0x0, 0x1);
        gbc.writeMem(0x6ec, { 0x3b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdbf2, gbc.sp());
        EXPECT(0x6ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0297
        gbc.setState(0xb1a7, 0x330d, 0x1220, 0xeb1d, 0x76cb, 0xf00b, 0x1, 0x0);
        gbc.writeMem(0xb1a7, { 0x3b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x330c, gbc.sp());
        EXPECT(0xb1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb1a7));
        // 3B 0299
        gbc.setState(0x7eef, 0x24bb, 0xcc00, 0x54f6, 0x8f08, 0xd11e, 0x0, 0x0);
        gbc.writeMem(0x7eef, { 0x3b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x24ba, gbc.sp());
        EXPECT(0x7ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 029A
        gbc.setState(0x1f7a, 0x6c09, 0xe260, 0x95f7, 0xdd45, 0xa71b, 0x0, 0x1);
        gbc.writeMem(0x1f7a, { 0x3b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6c08, gbc.sp());
        EXPECT(0x1f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 029B
        gbc.setState(0xaa82, 0xe5ec, 0xea60, 0x6eb6, 0x5e5d, 0x1ca8, 0x1, 0x0);
        gbc.writeMem(0xaa82, { 0x3b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe5eb, gbc.sp());
        EXPECT(0xaa83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xaa82));
        // 3B 029C
        gbc.setState(0x2049, 0x38b9, 0x2a20, 0xa96b, 0x806a, 0x7802, 0x0, 0x0);
        gbc.writeMem(0x2049, { 0x3b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x38b8, gbc.sp());
        EXPECT(0x204a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 029E
        gbc.setState(0xefa7, 0x368a, 0xd8c0, 0xef74, 0x43c7, 0x5635, 0x1, 0x1);
        gbc.writeMem(0xefa7, { 0x3b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3689, gbc.sp());
        EXPECT(0xefa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xefa7));
        // 3B 029F
        gbc.setState(0x81b1, 0x4b05, 0xa5f0, 0x14ef, 0xfeed, 0x8f47, 0x0, 0x0);
        gbc.writeMem(0x81b1, { 0x3b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4b04, gbc.sp());
        EXPECT(0x81b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x81b1));
        // 3B 02A0
        gbc.setState(0x72c7, 0x9c9e, 0xa230, 0xb519, 0xdb53, 0x105a, 0x1, 0x0);
        gbc.writeMem(0x72c7, { 0x3b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9c9d, gbc.sp());
        EXPECT(0x72c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02A1
        gbc.setState(0x5842, 0x7ee9, 0xd620, 0xd2bf, 0xf54c, 0x264f, 0x0, 0x1);
        gbc.writeMem(0x5842, { 0x3b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7ee8, gbc.sp());
        EXPECT(0x5843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02A2
        gbc.setState(0xa8cc, 0xd370, 0xc2f0, 0xbf9d, 0x7aeb, 0x140, 0x0, 0x0);
        gbc.writeMem(0xa8cc, { 0x3b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd36f, gbc.sp());
        EXPECT(0xa8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa8cc));
        // 3B 02A3
        gbc.setState(0xb783, 0xa4b0, 0xaa20, 0x520, 0xae46, 0x8fbf, 0x1, 0x0);
        gbc.writeMem(0xb783, { 0x3b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa4af, gbc.sp());
        EXPECT(0xb784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb783));
        // 3B 02A4
        gbc.setState(0xd887, 0x17ac, 0x7d00, 0x6ac, 0x673c, 0xaedc, 0x1, 0x0);
        gbc.writeMem(0xd887, { 0x3b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x17ab, gbc.sp());
        EXPECT(0xd888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd887));
        // 3B 02A5
        gbc.setState(0x578e, 0xdf0a, 0x9960, 0xe808, 0xfcf5, 0xbaae, 0x0, 0x1);
        gbc.writeMem(0x578e, { 0x3b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdf09, gbc.sp());
        EXPECT(0x578f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02A6
        gbc.setState(0x63, 0x5664, 0x6ed0, 0xbd45, 0xfa56, 0xf853, 0x1, 0x1);
        gbc.writeMem(0x63, { 0x3b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5663, gbc.sp());
        EXPECT(0x64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02A7
        gbc.setState(0x8a3b, 0x845b, 0xc150, 0xb250, 0xf4d3, 0x40b8, 0x1, 0x0);
        gbc.writeMem(0x8a3b, { 0x3b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x845a, gbc.sp());
        EXPECT(0x8a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8a3b));
        // 3B 02A8
        gbc.setState(0xc072, 0xe6cd, 0x5110, 0x7ad7, 0xc24b, 0x9f4c, 0x1, 0x1);
        gbc.writeMem(0xc072, { 0x3b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe6cc, gbc.sp());
        EXPECT(0xc073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc072));
        // 3B 02A9
        gbc.setState(0x1018, 0xdbe1, 0xce70, 0x3b4e, 0xcdb1, 0x2ac8, 0x0, 0x1);
        gbc.writeMem(0x1018, { 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdbe0, gbc.sp());
        EXPECT(0x1019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02AA
        gbc.setState(0x5843, 0x5961, 0x1d40, 0xafab, 0x10f8, 0xfa14, 0x1, 0x1);
        gbc.writeMem(0x5843, { 0x3b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5960, gbc.sp());
        EXPECT(0x5844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02AB
        gbc.setState(0xe449, 0x5a64, 0x2610, 0x4238, 0x91d8, 0x88f8, 0x1, 0x0);
        gbc.writeMem(0xe449, { 0x3b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5a63, gbc.sp());
        EXPECT(0xe44a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe449));
        // 3B 02AC
        gbc.setState(0x7cda, 0x51bc, 0x2b40, 0xa4b, 0xb601, 0x3bde, 0x1, 0x1);
        gbc.writeMem(0x7cda, { 0x3b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x51bb, gbc.sp());
        EXPECT(0x7cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02AD
        gbc.setState(0xe06d, 0x3aaa, 0xe8b0, 0x4e12, 0xfc39, 0xc4be, 0x0, 0x1);
        gbc.writeMem(0xe06d, { 0x3b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3aa9, gbc.sp());
        EXPECT(0xe06e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe06d));
        // 3B 02AE
        gbc.setState(0x239b, 0x25, 0xd020, 0x9b10, 0x1099, 0xbad4, 0x1, 0x0);
        gbc.writeMem(0x239b, { 0x3b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x24, gbc.sp());
        EXPECT(0x239c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02AF
        gbc.setState(0xae97, 0x8107, 0x3c10, 0x5b60, 0x2523, 0xe73c, 0x0, 0x0);
        gbc.writeMem(0xae97, { 0x3b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8106, gbc.sp());
        EXPECT(0xae98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xae97));
        // 3B 02B0
        gbc.setState(0x6d74, 0x47a, 0x14e0, 0xe85, 0x228c, 0xac20, 0x1, 0x1);
        gbc.writeMem(0x6d74, { 0x3b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x479, gbc.sp());
        EXPECT(0x6d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02B1
        gbc.setState(0x646c, 0xfe3f, 0x270, 0x8252, 0x141a, 0xbc8d, 0x0, 0x1);
        gbc.writeMem(0x646c, { 0x3b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfe3e, gbc.sp());
        EXPECT(0x646d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02B2
        gbc.setState(0x7789, 0x9ec6, 0x9310, 0x15f6, 0x36c, 0x7b1d, 0x1, 0x1);
        gbc.writeMem(0x7789, { 0x3b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9ec5, gbc.sp());
        EXPECT(0x778a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02B3
        gbc.setState(0xada0, 0xab04, 0x6850, 0xf7ed, 0x1642, 0xd2a3, 0x0, 0x1);
        gbc.writeMem(0xada0, { 0x3b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xab03, gbc.sp());
        EXPECT(0xada1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xada0));
        // 3B 02B4
        gbc.setState(0x6f1d, 0x5735, 0xfc0, 0xace9, 0x251c, 0x63db, 0x0, 0x0);
        gbc.writeMem(0x6f1d, { 0x3b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5734, gbc.sp());
        EXPECT(0x6f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02B5
        gbc.setState(0xb000, 0x7fab, 0x70d0, 0x41ad, 0x798d, 0xbab4, 0x1, 0x1);
        gbc.writeMem(0xb000, { 0x3b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7faa, gbc.sp());
        EXPECT(0xb001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb000));
        // 3B 02B6
        gbc.setState(0xa502, 0x69c8, 0x8110, 0x7ef, 0x9fb7, 0xf8ab, 0x1, 0x1);
        gbc.writeMem(0xa502, { 0x3b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x69c7, gbc.sp());
        EXPECT(0xa503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa502));
        // 3B 02B7
        gbc.setState(0x27d3, 0x2e21, 0x8610, 0xe3a3, 0xd3a0, 0x4f7a, 0x0, 0x0);
        gbc.writeMem(0x27d3, { 0x3b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2e20, gbc.sp());
        EXPECT(0x27d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02B8
        gbc.setState(0x2887, 0x597f, 0xe670, 0x4143, 0x7525, 0x8a58, 0x1, 0x1);
        gbc.writeMem(0x2887, { 0x3b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x597e, gbc.sp());
        EXPECT(0x2888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02B9
        gbc.setState(0xac10, 0x1c95, 0x56e0, 0xb172, 0x257, 0xaf50, 0x1, 0x1);
        gbc.writeMem(0xac10, { 0x3b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1c94, gbc.sp());
        EXPECT(0xac11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xac10));
        // 3B 02BA
        gbc.setState(0xe26b, 0x5da5, 0x6b0, 0xabd5, 0xc9ae, 0x7dd8, 0x0, 0x0);
        gbc.writeMem(0xe26b, { 0x3b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5da4, gbc.sp());
        EXPECT(0xe26c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe26b));
        // 3B 02BB
        gbc.setState(0xbff4, 0x3c5a, 0x7ea0, 0x4888, 0xd00a, 0xbf96, 0x0, 0x0);
        gbc.writeMem(0xbff4, { 0x3b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3c59, gbc.sp());
        EXPECT(0xbff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbff4));
        // 3B 02BC
        gbc.setState(0x7179, 0x6098, 0xe730, 0x9a69, 0x8f5c, 0x9445, 0x1, 0x0);
        gbc.writeMem(0x7179, { 0x3b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6097, gbc.sp());
        EXPECT(0x717a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02BD
        gbc.setState(0x31ff, 0xe349, 0xf6e0, 0xb941, 0xee38, 0x2a56, 0x1, 0x0);
        gbc.writeMem(0x31ff, { 0x3b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe348, gbc.sp());
        EXPECT(0x3200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02BE
        gbc.setState(0xaacf, 0xe8d9, 0xead0, 0xce45, 0x72f1, 0xed8c, 0x0, 0x1);
        gbc.writeMem(0xaacf, { 0x3b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe8d8, gbc.sp());
        EXPECT(0xaad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xaacf));
        // 3B 02BF
        gbc.setState(0x7d72, 0x5083, 0xad80, 0x11c3, 0x270a, 0x4885, 0x0, 0x0);
        gbc.writeMem(0x7d72, { 0x3b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5082, gbc.sp());
        EXPECT(0x7d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02C0
        gbc.setState(0xd9aa, 0xd4ba, 0x1b10, 0xf67b, 0xa9ed, 0xab97, 0x0, 0x1);
        gbc.writeMem(0xd9aa, { 0x3b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd4b9, gbc.sp());
        EXPECT(0xd9ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd9aa));
        // 3B 02C1
        gbc.setState(0x213a, 0x1a4b, 0xe280, 0x5fbe, 0xb91e, 0x60be, 0x0, 0x0);
        gbc.writeMem(0x213a, { 0x3b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1a4a, gbc.sp());
        EXPECT(0x213b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02C2
        gbc.setState(0xe569, 0xc93, 0x4c90, 0x68a2, 0x2090, 0x4325, 0x0, 0x0);
        gbc.writeMem(0xe569, { 0x3b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc92, gbc.sp());
        EXPECT(0xe56a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe569));
        // 3B 02C3
        gbc.setState(0x87cf, 0xc602, 0x3b20, 0xb748, 0xa423, 0x5897, 0x0, 0x0);
        gbc.writeMem(0x87cf, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc601, gbc.sp());
        EXPECT(0x87d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x87cf));
        // 3B 02C4
        gbc.setState(0x4d4d, 0x6d15, 0x700, 0x915c, 0x94b8, 0x380c, 0x0, 0x0);
        gbc.writeMem(0x4d4d, { 0x3b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6d14, gbc.sp());
        EXPECT(0x4d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02C5
        gbc.setState(0x90e8, 0xb070, 0x4120, 0xf206, 0xe690, 0x680b, 0x1, 0x0);
        gbc.writeMem(0x90e8, { 0x3b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb06f, gbc.sp());
        EXPECT(0x90e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x90e8));
        // 3B 02C6
        gbc.setState(0x403e, 0x9c19, 0x81b0, 0xb447, 0x414b, 0x999, 0x1, 0x1);
        gbc.writeMem(0x403e, { 0x3b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9c18, gbc.sp());
        EXPECT(0x403f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02C7
        gbc.setState(0xdc78, 0x6689, 0x2a70, 0x6d6b, 0xbc38, 0x9a1e, 0x0, 0x1);
        gbc.writeMem(0xdc78, { 0x3b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6688, gbc.sp());
        EXPECT(0xdc79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdc78));
        // 3B 02C8
        gbc.setState(0x1613, 0xf1bd, 0xf7c0, 0x10ab, 0xbd2b, 0xec8e, 0x1, 0x1);
        gbc.writeMem(0x1613, { 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf1bc, gbc.sp());
        EXPECT(0x1614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02C9
        gbc.setState(0x6e93, 0xfcc2, 0xd240, 0xe92a, 0xdc20, 0x2c33, 0x1, 0x1);
        gbc.writeMem(0x6e93, { 0x3b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfcc1, gbc.sp());
        EXPECT(0x6e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02CA
        gbc.setState(0x9245, 0xfea2, 0x9de0, 0x7ba3, 0x96d3, 0x49e3, 0x1, 0x1);
        gbc.writeMem(0x9245, { 0x3b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfea1, gbc.sp());
        EXPECT(0x9246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9245));
        // 3B 02CB
        gbc.setState(0x6cf9, 0x799c, 0x5990, 0xbdcb, 0xef7c, 0x2f0d, 0x0, 0x1);
        gbc.writeMem(0x6cf9, { 0x3b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x799b, gbc.sp());
        EXPECT(0x6cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02CC
        gbc.setState(0xbbf2, 0x274d, 0x34f0, 0xf823, 0x5f33, 0x4b6f, 0x1, 0x1);
        gbc.writeMem(0xbbf2, { 0x3b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x274c, gbc.sp());
        EXPECT(0xbbf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbbf2));
        // 3B 02CD
        gbc.setState(0x2996, 0x8521, 0xd100, 0x6f8b, 0x7f3, 0x6d2, 0x0, 0x0);
        gbc.writeMem(0x2996, { 0x3b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8520, gbc.sp());
        EXPECT(0x2997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02CE
        gbc.setState(0xb207, 0x70bf, 0xebd0, 0x6a8b, 0xffe5, 0xf195, 0x1, 0x0);
        gbc.writeMem(0xb207, { 0x3b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x70be, gbc.sp());
        EXPECT(0xb208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb207));
        // 3B 02CF
        gbc.setState(0xdb80, 0x9a2a, 0xbed0, 0x7dc6, 0x4e59, 0x9bb3, 0x1, 0x1);
        gbc.writeMem(0xdb80, { 0x3b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9a29, gbc.sp());
        EXPECT(0xdb81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdb80));
        // 3B 02D0
        gbc.setState(0x83e2, 0xbc41, 0x2a0, 0x1aa2, 0xdf4c, 0xde2a, 0x0, 0x0);
        gbc.writeMem(0x83e2, { 0x3b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbc40, gbc.sp());
        EXPECT(0x83e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x83e2));
        // 3B 02D1
        gbc.setState(0x2c9c, 0xed89, 0xf570, 0x3a26, 0x5915, 0x5126, 0x1, 0x1);
        gbc.writeMem(0x2c9c, { 0x3b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xed88, gbc.sp());
        EXPECT(0x2c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02D2
        gbc.setState(0x61d1, 0x59a9, 0x3080, 0x11b6, 0x3362, 0xc0aa, 0x1, 0x1);
        gbc.writeMem(0x61d1, { 0x3b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x59a8, gbc.sp());
        EXPECT(0x61d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02D3
        gbc.setState(0x45ae, 0xae40, 0x6d70, 0x21a3, 0xb582, 0x4ba8, 0x0, 0x1);
        gbc.writeMem(0x45ae, { 0x3b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xae3f, gbc.sp());
        EXPECT(0x45af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02D4
        gbc.setState(0x1c1d, 0x10cb, 0xd9a0, 0xce4, 0x3309, 0xd179, 0x1, 0x0);
        gbc.writeMem(0x1c1d, { 0x3b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x10ca, gbc.sp());
        EXPECT(0x1c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02D5
        gbc.setState(0x4210, 0xfb4e, 0xbe80, 0x9af4, 0x9918, 0x4cf8, 0x1, 0x1);
        gbc.writeMem(0x4210, { 0x3b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfb4d, gbc.sp());
        EXPECT(0x4211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02D6
        gbc.setState(0xa768, 0x8bc5, 0xd620, 0x6bd7, 0xfe27, 0xc6ac, 0x0, 0x1);
        gbc.writeMem(0xa768, { 0x3b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8bc4, gbc.sp());
        EXPECT(0xa769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa768));
        // 3B 02D7
        gbc.setState(0x866d, 0x2153, 0xf220, 0x5e3c, 0x5c2c, 0xc67, 0x0, 0x1);
        gbc.writeMem(0x866d, { 0x3b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2152, gbc.sp());
        EXPECT(0x866e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x866d));
        // 3B 02D8
        gbc.setState(0xe847, 0x49b7, 0x5110, 0x8096, 0xd8ad, 0x3d3c, 0x0, 0x0);
        gbc.writeMem(0xe847, { 0x3b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x49b6, gbc.sp());
        EXPECT(0xe848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe847));
        // 3B 02D9
        gbc.setState(0xab87, 0x396b, 0x1d50, 0xb244, 0x1e31, 0xe176, 0x1, 0x1);
        gbc.writeMem(0xab87, { 0x3b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x396a, gbc.sp());
        EXPECT(0xab88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xab87));
        // 3B 02DA
        gbc.setState(0x2b43, 0xd08, 0xd740, 0xe044, 0x5f2c, 0x6f7, 0x1, 0x1);
        gbc.writeMem(0x2b43, { 0x3b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd07, gbc.sp());
        EXPECT(0x2b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02DB
        gbc.setState(0x2e3e, 0x1d6e, 0x50c0, 0x7d61, 0x86cf, 0xa185, 0x0, 0x0);
        gbc.writeMem(0x2e3e, { 0x3b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1d6d, gbc.sp());
        EXPECT(0x2e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02DC
        gbc.setState(0xab25, 0x437f, 0x860, 0x9d7b, 0xf041, 0xe230, 0x1, 0x1);
        gbc.writeMem(0xab25, { 0x3b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x437e, gbc.sp());
        EXPECT(0xab26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xab25));
        // 3B 02DD
        gbc.setState(0x74dc, 0x266e, 0x9140, 0xfde5, 0x2354, 0x482a, 0x0, 0x0);
        gbc.writeMem(0x74dc, { 0x3b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x266d, gbc.sp());
        EXPECT(0x74dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02DE
        gbc.setState(0x3810, 0x53a3, 0xf40, 0xe36, 0x8161, 0x4e1f, 0x1, 0x0);
        gbc.writeMem(0x3810, { 0x3b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x53a2, gbc.sp());
        EXPECT(0x3811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02DF
        gbc.setState(0xb2eb, 0x8f3d, 0xb160, 0x8594, 0x1279, 0x7872, 0x1, 0x0);
        gbc.writeMem(0xb2eb, { 0x3b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8f3c, gbc.sp());
        EXPECT(0xb2ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb2eb));
        // 3B 02E0
        gbc.setState(0x2f38, 0xe179, 0x6340, 0x6522, 0x1073, 0x2cb8, 0x1, 0x1);
        gbc.writeMem(0x2f38, { 0x3b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe178, gbc.sp());
        EXPECT(0x2f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02E1
        gbc.setState(0x5644, 0xc90d, 0x6a90, 0x519a, 0x53d3, 0xe7e4, 0x0, 0x1);
        gbc.writeMem(0x5644, { 0x3b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc90c, gbc.sp());
        EXPECT(0x5645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02E3
        gbc.setState(0xefc, 0xecfc, 0x24b0, 0xb67a, 0x93fb, 0xc158, 0x1, 0x1);
        gbc.writeMem(0xefc, { 0x3b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xecfb, gbc.sp());
        EXPECT(0xefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02E4
        gbc.setState(0x8188, 0x44e9, 0x12d0, 0x3f3f, 0x93d8, 0x524, 0x1, 0x0);
        gbc.writeMem(0x8188, { 0x3b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x44e8, gbc.sp());
        EXPECT(0x8189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8188));
        // 3B 02E5
        gbc.setState(0x71d5, 0xe47d, 0xc100, 0x59b5, 0xff3d, 0xb19c, 0x0, 0x0);
        gbc.writeMem(0x71d5, { 0x3b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe47c, gbc.sp());
        EXPECT(0x71d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02E6
        gbc.setState(0x13b1, 0xad34, 0x5550, 0x8645, 0xeac0, 0x8240, 0x0, 0x0);
        gbc.writeMem(0x13b1, { 0x3b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xad33, gbc.sp());
        EXPECT(0x13b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02E7
        gbc.setState(0x869f, 0xc95d, 0x4e30, 0x34cc, 0xf963, 0x6d25, 0x0, 0x0);
        gbc.writeMem(0x869f, { 0x3b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc95c, gbc.sp());
        EXPECT(0x86a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x869f));
        // 3B 02E8
        gbc.setState(0xec0a, 0xbcdf, 0x4960, 0x9606, 0x3e4b, 0x84db, 0x0, 0x1);
        gbc.writeMem(0xec0a, { 0x3b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbcde, gbc.sp());
        EXPECT(0xec0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xec0a));
        // 3B 02E9
        gbc.setState(0x18bf, 0x42f6, 0x3130, 0x2dc9, 0x5564, 0x3ffd, 0x0, 0x0);
        gbc.writeMem(0x18bf, { 0x3b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x42f5, gbc.sp());
        EXPECT(0x18c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02EA
        gbc.setState(0x44cf, 0x7193, 0x630, 0x61bc, 0x7428, 0x7bcc, 0x0, 0x1);
        gbc.writeMem(0x44cf, { 0x3b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7192, gbc.sp());
        EXPECT(0x44d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02EB
        gbc.setState(0xb75a, 0xbbed, 0x5bc0, 0xda45, 0x2fcc, 0x1ce6, 0x0, 0x1);
        gbc.writeMem(0xb75a, { 0x3b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbbec, gbc.sp());
        EXPECT(0xb75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb75a));
        // 3B 02EC
        gbc.setState(0xd890, 0xbfc2, 0xeb30, 0x7c62, 0xe78a, 0x2bac, 0x0, 0x1);
        gbc.writeMem(0xd890, { 0x3b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbfc1, gbc.sp());
        EXPECT(0xd891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd890));
        // 3B 02ED
        gbc.setState(0xd223, 0xddaf, 0xae70, 0x7cb0, 0x6927, 0xcbd7, 0x0, 0x1);
        gbc.writeMem(0xd223, { 0x3b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xddae, gbc.sp());
        EXPECT(0xd224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd223));
        // 3B 02EF
        gbc.setState(0x410a, 0x944a, 0x4740, 0xece, 0x3097, 0x2759, 0x0, 0x1);
        gbc.writeMem(0x410a, { 0x3b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9449, gbc.sp());
        EXPECT(0x410b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02F0
        gbc.setState(0xbc33, 0x34a8, 0x9f70, 0x22ba, 0x2fcd, 0x30b4, 0x0, 0x1);
        gbc.writeMem(0xbc33, { 0x3b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x34a7, gbc.sp());
        EXPECT(0xbc34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbc33));
        // 3B 02F1
        gbc.setState(0x3872, 0x2595, 0x8fe0, 0x183f, 0xdd4, 0x98c, 0x0, 0x0);
        gbc.writeMem(0x3872, { 0x3b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2594, gbc.sp());
        EXPECT(0x3873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02F2
        gbc.setState(0x577f, 0x5198, 0x4830, 0xf1c6, 0xcac2, 0x44b1, 0x1, 0x1);
        gbc.writeMem(0x577f, { 0x3b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5197, gbc.sp());
        EXPECT(0x5780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02F3
        gbc.setState(0x5c2c, 0x1fff, 0x2a70, 0x10aa, 0x94d6, 0x9e0, 0x1, 0x0);
        gbc.writeMem(0x5c2c, { 0x3b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1ffe, gbc.sp());
        EXPECT(0x5c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02F4
        gbc.setState(0x4c9f, 0x6c39, 0x1680, 0xa87, 0xba87, 0x52fa, 0x0, 0x0);
        gbc.writeMem(0x4c9f, { 0x3b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6c38, gbc.sp());
        EXPECT(0x4ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02F5
        gbc.setState(0x19d4, 0x217, 0x8bd0, 0x5a25, 0x4c80, 0x4c4d, 0x0, 0x1);
        gbc.writeMem(0x19d4, { 0x3b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x216, gbc.sp());
        EXPECT(0x19d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02F6
        gbc.setState(0x3f39, 0x8cff, 0x1760, 0xa57d, 0x45ff, 0x3bfc, 0x0, 0x1);
        gbc.writeMem(0x3f39, { 0x3b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8cfe, gbc.sp());
        EXPECT(0x3f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02F7
        gbc.setState(0xe23, 0x959d, 0x4b80, 0x9044, 0x6ead, 0x9567, 0x0, 0x1);
        gbc.writeMem(0xe23, { 0x3b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x959c, gbc.sp());
        EXPECT(0xe24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02F9
        gbc.setState(0xd16, 0xccb2, 0x1e70, 0xd70c, 0x99f4, 0x6b0c, 0x1, 0x0);
        gbc.writeMem(0xd16, { 0x3b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xccb1, gbc.sp());
        EXPECT(0xd17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02FA
        gbc.setState(0xb727, 0x793f, 0xdae0, 0x571d, 0x6b2f, 0x5194, 0x0, 0x0);
        gbc.writeMem(0xb727, { 0x3b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x793e, gbc.sp());
        EXPECT(0xb728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb727));
        // 3B 02FB
        gbc.setState(0x40d2, 0x34bc, 0xd390, 0x444f, 0x552f, 0x4e8a, 0x1, 0x1);
        gbc.writeMem(0x40d2, { 0x3b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x34bb, gbc.sp());
        EXPECT(0x40d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 02FC
        gbc.setState(0xd704, 0x7bdf, 0x4cd0, 0x12a6, 0xfa14, 0x5d07, 0x1, 0x0);
        gbc.writeMem(0xd704, { 0x3b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7bde, gbc.sp());
        EXPECT(0xd705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd704));
        // 3B 02FD
        gbc.setState(0x3bf8, 0xdd3, 0xa580, 0x9864, 0x554, 0x19bd, 0x0, 0x1);
        gbc.writeMem(0x3bf8, { 0x3b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdd2, gbc.sp());
        EXPECT(0x3bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 02FE
        gbc.setState(0x86f9, 0x5ec4, 0x5aa0, 0x5911, 0xdeec, 0xeb02, 0x0, 0x1);
        gbc.writeMem(0x86f9, { 0x3b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5ec3, gbc.sp());
        EXPECT(0x86fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x86f9));
        // 3B 02FF
        gbc.setState(0x84, 0xa14c, 0x9440, 0x9c69, 0xe353, 0xa92b, 0x0, 0x1);
        gbc.writeMem(0x84, { 0x3b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa14b, gbc.sp());
        EXPECT(0x85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0300
        gbc.setState(0xe7c8, 0x3a5b, 0x61d0, 0xd9c9, 0x4d4e, 0x33d8, 0x1, 0x1);
        gbc.writeMem(0xe7c8, { 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3a5a, gbc.sp());
        EXPECT(0xe7c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe7c8));
        // 3B 0301
        gbc.setState(0xcb7b, 0xe38e, 0x6900, 0xeba9, 0x9cb2, 0x49db, 0x1, 0x1);
        gbc.writeMem(0xcb7b, { 0x3b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe38d, gbc.sp());
        EXPECT(0xcb7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcb7b));
        // 3B 0302
        gbc.setState(0x7f8c, 0x3a14, 0x2220, 0x20fb, 0x9374, 0x9313, 0x0, 0x1);
        gbc.writeMem(0x7f8c, { 0x3b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3a13, gbc.sp());
        EXPECT(0x7f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0303
        gbc.setState(0x75f1, 0x15c0, 0x230, 0x82fd, 0xb447, 0xce2b, 0x1, 0x1);
        gbc.writeMem(0x75f1, { 0x3b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x15bf, gbc.sp());
        EXPECT(0x75f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0304
        gbc.setState(0x81d, 0xd45a, 0xbd90, 0x3f65, 0xe76c, 0xd890, 0x1, 0x1);
        gbc.writeMem(0x81d, { 0x3b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd459, gbc.sp());
        EXPECT(0x81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0305
        gbc.setState(0x53e6, 0xde5e, 0xa4a0, 0x1f92, 0x93cd, 0xde73, 0x1, 0x0);
        gbc.writeMem(0x53e6, { 0x3b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xde5d, gbc.sp());
        EXPECT(0x53e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0306
        gbc.setState(0x583b, 0x6c7c, 0x3920, 0x5cf0, 0xe4c4, 0xfcab, 0x0, 0x1);
        gbc.writeMem(0x583b, { 0x3b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6c7b, gbc.sp());
        EXPECT(0x583c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0307
        gbc.setState(0xd15, 0xac13, 0x7ee0, 0x9cf3, 0x9a7, 0x17ec, 0x0, 0x1);
        gbc.writeMem(0xd15, { 0x3b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xac12, gbc.sp());
        EXPECT(0xd16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0308
        gbc.setState(0x8bf2, 0x2df2, 0x73a0, 0x4a37, 0xbbdb, 0x4767, 0x0, 0x0);
        gbc.writeMem(0x8bf2, { 0x3b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2df1, gbc.sp());
        EXPECT(0x8bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8bf2));
        // 3B 0309
        gbc.setState(0xfd6, 0x2897, 0xc820, 0x19b0, 0x18fc, 0x9ed5, 0x1, 0x1);
        gbc.writeMem(0xfd6, { 0x3b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2896, gbc.sp());
        EXPECT(0xfd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 030A
        gbc.setState(0x54cc, 0xe47d, 0xdef0, 0xa0fe, 0xe5f8, 0x9de3, 0x1, 0x1);
        gbc.writeMem(0x54cc, { 0x3b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe47c, gbc.sp());
        EXPECT(0x54cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 030B
        gbc.setState(0xd44b, 0xb17e, 0x5e90, 0xe641, 0x801d, 0x13ef, 0x1, 0x0);
        gbc.writeMem(0xd44b, { 0x3b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb17d, gbc.sp());
        EXPECT(0xd44c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd44b));
        // 3B 030C
        gbc.setState(0xb497, 0xdf63, 0x42e0, 0x8a1, 0x8a1a, 0x5efb, 0x1, 0x1);
        gbc.writeMem(0xb497, { 0x3b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdf62, gbc.sp());
        EXPECT(0xb498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb497));
        // 3B 030D
        gbc.setState(0x68e5, 0xa970, 0xcd40, 0xa9c0, 0xde7a, 0xaa8c, 0x0, 0x1);
        gbc.writeMem(0x68e5, { 0x3b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa96f, gbc.sp());
        EXPECT(0x68e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 030E
        gbc.setState(0xe673, 0xe573, 0xed20, 0x3177, 0x5ce1, 0x389b, 0x0, 0x0);
        gbc.writeMem(0xe673, { 0x3b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe572, gbc.sp());
        EXPECT(0xe674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe673));
        // 3B 030F
        gbc.setState(0xc95a, 0xc3b1, 0x9540, 0xfc8, 0x7d48, 0xb9f8, 0x0, 0x1);
        gbc.writeMem(0xc95a, { 0x3b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc3b0, gbc.sp());
        EXPECT(0xc95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc95a));
        // 3B 0310
        gbc.setState(0x264e, 0x3b55, 0x2780, 0x76e1, 0xa481, 0xdc8d, 0x1, 0x1);
        gbc.writeMem(0x264e, { 0x3b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3b54, gbc.sp());
        EXPECT(0x264f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0311
        gbc.setState(0x56f2, 0xb956, 0xea60, 0x35a6, 0x311b, 0xb39e, 0x0, 0x1);
        gbc.writeMem(0x56f2, { 0x3b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb955, gbc.sp());
        EXPECT(0x56f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0312
        gbc.setState(0x57c5, 0xc04d, 0xe5e0, 0x5cb, 0x8fcd, 0x820d, 0x1, 0x0);
        gbc.writeMem(0x57c5, { 0x3b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc04c, gbc.sp());
        EXPECT(0x57c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0313
        gbc.setState(0x51b0, 0x355c, 0xea0, 0x79da, 0xc06, 0xc52f, 0x0, 0x0);
        gbc.writeMem(0x51b0, { 0x3b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x355b, gbc.sp());
        EXPECT(0x51b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0314
        gbc.setState(0x92dd, 0xfc5, 0xbc30, 0x220b, 0xc84b, 0x258a, 0x1, 0x1);
        gbc.writeMem(0x92dd, { 0x3b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfc4, gbc.sp());
        EXPECT(0x92de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x92dd));
        // 3B 0316
        gbc.setState(0x7f47, 0xfc9c, 0xc5d0, 0x67a8, 0xc5c9, 0xba34, 0x1, 0x0);
        gbc.writeMem(0x7f47, { 0x3b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfc9b, gbc.sp());
        EXPECT(0x7f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0317
        gbc.setState(0xbf42, 0x3ca4, 0xf6e0, 0xf3c4, 0x1f2, 0x7326, 0x1, 0x0);
        gbc.writeMem(0xbf42, { 0x3b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3ca3, gbc.sp());
        EXPECT(0xbf43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbf42));
        // 3B 0318
        gbc.setState(0x2229, 0x7d7e, 0xf2a0, 0x5b0b, 0x6287, 0xb756, 0x1, 0x0);
        gbc.writeMem(0x2229, { 0x3b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7d7d, gbc.sp());
        EXPECT(0x222a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0319
        gbc.setState(0xd64c, 0xb7cf, 0x46f0, 0x37d0, 0x1917, 0xb891, 0x0, 0x0);
        gbc.writeMem(0xd64c, { 0x3b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb7ce, gbc.sp());
        EXPECT(0xd64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd64c));
        // 3B 031A
        gbc.setState(0x7463, 0x3e17, 0xd010, 0x62ec, 0x20ce, 0x3aae, 0x1, 0x0);
        gbc.writeMem(0x7463, { 0x3b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3e16, gbc.sp());
        EXPECT(0x7464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 031B
        gbc.setState(0x3f7e, 0xd207, 0xdb0, 0x595b, 0x3feb, 0xe9cd, 0x0, 0x1);
        gbc.writeMem(0x3f7e, { 0x3b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd206, gbc.sp());
        EXPECT(0x3f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 031C
        gbc.setState(0x5cc2, 0xe321, 0x7710, 0xd5ac, 0x4d9d, 0x61e2, 0x0, 0x0);
        gbc.writeMem(0x5cc2, { 0x3b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe320, gbc.sp());
        EXPECT(0x5cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 031D
        gbc.setState(0x9faa, 0xbd5b, 0x6f30, 0x920a, 0x15f8, 0x216b, 0x1, 0x0);
        gbc.writeMem(0x9faa, { 0x3b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbd5a, gbc.sp());
        EXPECT(0x9fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9faa));
        // 3B 031E
        gbc.setState(0xc3a1, 0x89bb, 0xeba0, 0x67df, 0x8f16, 0x7128, 0x0, 0x0);
        gbc.writeMem(0xc3a1, { 0x3b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x89ba, gbc.sp());
        EXPECT(0xc3a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc3a1));
        // 3B 031F
        gbc.setState(0x6fb8, 0xc58c, 0xd20, 0xb122, 0x47e3, 0x6d57, 0x1, 0x1);
        gbc.writeMem(0x6fb8, { 0x3b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc58b, gbc.sp());
        EXPECT(0x6fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0320
        gbc.setState(0x5aa7, 0x3108, 0x3170, 0xa419, 0xb482, 0xc679, 0x0, 0x1);
        gbc.writeMem(0x5aa7, { 0x3b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3107, gbc.sp());
        EXPECT(0x5aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0321
        gbc.setState(0xeb2, 0x6eb1, 0x4200, 0x4eae, 0xac8, 0x633c, 0x1, 0x1);
        gbc.writeMem(0xeb2, { 0x3b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6eb0, gbc.sp());
        EXPECT(0xeb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0322
        gbc.setState(0x19ee, 0x96d0, 0x88f0, 0xb6df, 0xa531, 0xd453, 0x0, 0x0);
        gbc.writeMem(0x19ee, { 0x3b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x96cf, gbc.sp());
        EXPECT(0x19ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0323
        gbc.setState(0x36b9, 0xfa47, 0x6190, 0x26d5, 0xec65, 0x5975, 0x1, 0x1);
        gbc.writeMem(0x36b9, { 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfa46, gbc.sp());
        EXPECT(0x36ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0324
        gbc.setState(0x2e, 0x266b, 0x2720, 0x5838, 0xc6de, 0x72ab, 0x0, 0x0);
        gbc.writeMem(0x2e, { 0x3b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x266a, gbc.sp());
        EXPECT(0x2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0325
        gbc.setState(0x5db0, 0xb248, 0xdd20, 0xec6f, 0xe120, 0xbaca, 0x0, 0x1);
        gbc.writeMem(0x5db0, { 0x3b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb247, gbc.sp());
        EXPECT(0x5db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0326
        gbc.setState(0x1cf7, 0xa7b, 0x1b80, 0x3998, 0xb493, 0xf065, 0x1, 0x0);
        gbc.writeMem(0x1cf7, { 0x3b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa7a, gbc.sp());
        EXPECT(0x1cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0327
        gbc.setState(0xbd59, 0x5d43, 0xee20, 0xa441, 0xb456, 0xee7, 0x0, 0x1);
        gbc.writeMem(0xbd59, { 0x3b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5d42, gbc.sp());
        EXPECT(0xbd5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbd59));
        // 3B 0328
        gbc.setState(0xec14, 0xf6a0, 0x2610, 0xdaef, 0x30bf, 0x3193, 0x0, 0x1);
        gbc.writeMem(0xec14, { 0x3b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf69f, gbc.sp());
        EXPECT(0xec15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xec14));
        // 3B 0329
        gbc.setState(0x354d, 0x9568, 0xcea0, 0x9bd6, 0x70a9, 0xb084, 0x1, 0x1);
        gbc.writeMem(0x354d, { 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9567, gbc.sp());
        EXPECT(0x354e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 032A
        gbc.setState(0x209b, 0x5517, 0xc5b0, 0x7735, 0xf7be, 0xfb01, 0x1, 0x1);
        gbc.writeMem(0x209b, { 0x3b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5516, gbc.sp());
        EXPECT(0x209c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 032B
        gbc.setState(0x715c, 0xfbcf, 0xf590, 0xae9b, 0x9077, 0x16c6, 0x1, 0x0);
        gbc.writeMem(0x715c, { 0x3b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfbce, gbc.sp());
        EXPECT(0x715d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 032C
        gbc.setState(0xac91, 0xa2ee, 0x9720, 0xaf84, 0x1c34, 0xe88, 0x1, 0x0);
        gbc.writeMem(0xac91, { 0x3b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa2ed, gbc.sp());
        EXPECT(0xac92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xac91));
        // 3B 032D
        gbc.setState(0xd8e2, 0x3e9a, 0x5be0, 0x6ff8, 0x9328, 0xc9a1, 0x1, 0x0);
        gbc.writeMem(0xd8e2, { 0x3b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3e99, gbc.sp());
        EXPECT(0xd8e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd8e2));
        // 3B 032E
        gbc.setState(0x19fe, 0x9810, 0xe940, 0x1cdc, 0x62dd, 0x47d0, 0x1, 0x0);
        gbc.writeMem(0x19fe, { 0x3b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x980f, gbc.sp());
        EXPECT(0x19ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 032F
        gbc.setState(0x4652, 0x6244, 0xe7a0, 0xc828, 0x1c0a, 0x4162, 0x0, 0x0);
        gbc.writeMem(0x4652, { 0x3b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6243, gbc.sp());
        EXPECT(0x4653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0330
        gbc.setState(0xa04c, 0x245d, 0xb260, 0x7085, 0xfcaf, 0x9db1, 0x0, 0x0);
        gbc.writeMem(0xa04c, { 0x3b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x245c, gbc.sp());
        EXPECT(0xa04d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa04c));
        // 3B 0331
        gbc.setState(0x50c2, 0xa77a, 0xecc0, 0x1c0, 0x7b96, 0xe7f0, 0x0, 0x0);
        gbc.writeMem(0x50c2, { 0x3b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa779, gbc.sp());
        EXPECT(0x50c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0332
        gbc.setState(0xbaca, 0x208a, 0x10d0, 0x984b, 0xc3f1, 0x5411, 0x1, 0x1);
        gbc.writeMem(0xbaca, { 0x3b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2089, gbc.sp());
        EXPECT(0xbacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbaca));
        // 3B 0333
        gbc.setState(0xf7, 0x264, 0xf5a0, 0x83a, 0x9315, 0x6c08, 0x0, 0x0);
        gbc.writeMem(0xf7, { 0x3b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x263, gbc.sp());
        EXPECT(0xf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0334
        gbc.setState(0xb539, 0x680e, 0xed30, 0x9723, 0xbeb7, 0xdbcf, 0x1, 0x1);
        gbc.writeMem(0xb539, { 0x3b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x680d, gbc.sp());
        EXPECT(0xb53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb539));
        // 3B 0335
        gbc.setState(0x8fc, 0x4d65, 0x7b50, 0x5954, 0x592d, 0xa22b, 0x0, 0x0);
        gbc.writeMem(0x8fc, { 0x3b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4d64, gbc.sp());
        EXPECT(0x8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0336
        gbc.setState(0x4fad, 0xfd65, 0x73d0, 0x97cc, 0x5e76, 0x555f, 0x0, 0x0);
        gbc.writeMem(0x4fad, { 0x3b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfd64, gbc.sp());
        EXPECT(0x4fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0337
        gbc.setState(0x837, 0x1f2, 0xf900, 0x8486, 0xa08f, 0xdb42, 0x1, 0x1);
        gbc.writeMem(0x837, { 0x3b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1f1, gbc.sp());
        EXPECT(0x838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0338
        gbc.setState(0xd911, 0xac09, 0xbc00, 0x7825, 0x3a13, 0xe1cd, 0x1, 0x0);
        gbc.writeMem(0xd911, { 0x3b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xac08, gbc.sp());
        EXPECT(0xd912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd911));
        // 3B 0339
        gbc.setState(0x81c1, 0xce7, 0xceb0, 0xf7bc, 0x7485, 0xc2be, 0x0, 0x0);
        gbc.writeMem(0x81c1, { 0x3b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xce6, gbc.sp());
        EXPECT(0x81c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x81c1));
        // 3B 033A
        gbc.setState(0x6804, 0x766, 0xf730, 0x6016, 0x8515, 0xbf35, 0x0, 0x0);
        gbc.writeMem(0x6804, { 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x765, gbc.sp());
        EXPECT(0x6805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 033B
        gbc.setState(0xd2ce, 0x4605, 0xe3d0, 0xcc08, 0x57af, 0xdbb8, 0x0, 0x0);
        gbc.writeMem(0xd2ce, { 0x3b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4604, gbc.sp());
        EXPECT(0xd2cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd2ce));
        // 3B 033C
        gbc.setState(0x793d, 0x3aaf, 0x6610, 0x6eac, 0x29e3, 0xda7d, 0x1, 0x1);
        gbc.writeMem(0x793d, { 0x3b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3aae, gbc.sp());
        EXPECT(0x793e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 033D
        gbc.setState(0x432e, 0xc784, 0x7f80, 0xe57c, 0xd265, 0x3be3, 0x0, 0x1);
        gbc.writeMem(0x432e, { 0x3b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc783, gbc.sp());
        EXPECT(0x432f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 033E
        gbc.setState(0xb1d1, 0x2834, 0xa760, 0x8820, 0x4f87, 0xe3ec, 0x1, 0x1);
        gbc.writeMem(0xb1d1, { 0x3b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2833, gbc.sp());
        EXPECT(0xb1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb1d1));
        // 3B 0340
        gbc.setState(0x4a40, 0x701c, 0x2f90, 0xee4f, 0xed1, 0x6e43, 0x1, 0x0);
        gbc.writeMem(0x4a40, { 0x3b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x701b, gbc.sp());
        EXPECT(0x4a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0341
        gbc.setState(0xb264, 0xa475, 0xaa00, 0x5a3a, 0xc437, 0x1eeb, 0x0, 0x0);
        gbc.writeMem(0xb264, { 0x3b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa474, gbc.sp());
        EXPECT(0xb265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb264));
        // 3B 0342
        gbc.setState(0x1e74, 0x557d, 0x4770, 0xb33d, 0x2fc6, 0x7e6a, 0x0, 0x0);
        gbc.writeMem(0x1e74, { 0x3b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x557c, gbc.sp());
        EXPECT(0x1e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0343
        gbc.setState(0x6c56, 0x1bdb, 0x3d30, 0x2c27, 0x6913, 0x4150, 0x0, 0x0);
        gbc.writeMem(0x6c56, { 0x3b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1bda, gbc.sp());
        EXPECT(0x6c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0344
        gbc.setState(0x8d6a, 0x1262, 0xe1b0, 0xc79f, 0xa727, 0x8e5e, 0x1, 0x0);
        gbc.writeMem(0x8d6a, { 0x3b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1261, gbc.sp());
        EXPECT(0x8d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8d6a));
        // 3B 0345
        gbc.setState(0x5771, 0xc8ee, 0xc0c0, 0xc5cd, 0x95a, 0x5304, 0x1, 0x1);
        gbc.writeMem(0x5771, { 0x3b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc8ed, gbc.sp());
        EXPECT(0x5772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0346
        gbc.setState(0x51e0, 0xdc1b, 0xfff0, 0xacda, 0xe814, 0xd58a, 0x1, 0x1);
        gbc.writeMem(0x51e0, { 0x3b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdc1a, gbc.sp());
        EXPECT(0x51e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0347
        gbc.setState(0xe3f, 0x835f, 0x49b0, 0x2a38, 0x72f5, 0xcd19, 0x1, 0x0);
        gbc.writeMem(0xe3f, { 0x3b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x835e, gbc.sp());
        EXPECT(0xe40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0348
        gbc.setState(0xa561, 0x6f70, 0xd2c0, 0x803, 0x509e, 0xa0d7, 0x1, 0x0);
        gbc.writeMem(0xa561, { 0x3b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6f6f, gbc.sp());
        EXPECT(0xa562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa561));
        // 3B 0349
        gbc.setState(0x483d, 0x5a1f, 0x4840, 0x5e3f, 0xd494, 0xe9f, 0x0, 0x1);
        gbc.writeMem(0x483d, { 0x3b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5a1e, gbc.sp());
        EXPECT(0x483e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 034A
        gbc.setState(0x30fb, 0x2d16, 0x6030, 0x39dd, 0x7749, 0xfc53, 0x0, 0x0);
        gbc.writeMem(0x30fb, { 0x3b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2d15, gbc.sp());
        EXPECT(0x30fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 034B
        gbc.setState(0x6385, 0x1c3a, 0x2af0, 0x2918, 0x4225, 0x1a47, 0x1, 0x0);
        gbc.writeMem(0x6385, { 0x3b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1c39, gbc.sp());
        EXPECT(0x6386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 034C
        gbc.setState(0x4447, 0x25c7, 0x5db0, 0xb0d6, 0xfdd8, 0xff89, 0x0, 0x0);
        gbc.writeMem(0x4447, { 0x3b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x25c6, gbc.sp());
        EXPECT(0x4448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 034D
        gbc.setState(0x756c, 0xb998, 0x76e0, 0x62b7, 0xc42c, 0x7ab6, 0x0, 0x0);
        gbc.writeMem(0x756c, { 0x3b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb997, gbc.sp());
        EXPECT(0x756d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 034E
        gbc.setState(0x6bf5, 0x3b35, 0xe10, 0xa0c5, 0x6e4f, 0x6f26, 0x0, 0x0);
        gbc.writeMem(0x6bf5, { 0x3b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3b34, gbc.sp());
        EXPECT(0x6bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0350
        gbc.setState(0x7a1c, 0xd024, 0xb990, 0x231e, 0x4273, 0xc460, 0x0, 0x1);
        gbc.writeMem(0x7a1c, { 0x3b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd023, gbc.sp());
        EXPECT(0x7a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0351
        gbc.setState(0x43bf, 0xc0fb, 0xf620, 0x9754, 0x4c82, 0xa985, 0x0, 0x1);
        gbc.writeMem(0x43bf, { 0x3b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc0fa, gbc.sp());
        EXPECT(0x43c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0352
        gbc.setState(0x36a1, 0x37be, 0xfd40, 0x1317, 0x73a0, 0x4098, 0x0, 0x1);
        gbc.writeMem(0x36a1, { 0x3b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x37bd, gbc.sp());
        EXPECT(0x36a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0353
        gbc.setState(0x156a, 0x53c9, 0xe560, 0xfb23, 0xd926, 0x7001, 0x1, 0x0);
        gbc.writeMem(0x156a, { 0x3b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x53c8, gbc.sp());
        EXPECT(0x156b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0354
        gbc.setState(0xd226, 0x15d5, 0xec20, 0xba2b, 0x8fd9, 0x40f0, 0x0, 0x0);
        gbc.writeMem(0xd226, { 0x3b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x15d4, gbc.sp());
        EXPECT(0xd227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd226));
        // 3B 0355
        gbc.setState(0xaf3, 0xbc7f, 0x5f80, 0xe29b, 0xa7e8, 0xcf06, 0x1, 0x0);
        gbc.writeMem(0xaf3, { 0x3b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbc7e, gbc.sp());
        EXPECT(0xaf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0356
        gbc.setState(0x5eca, 0x8321, 0x84a0, 0x70ee, 0x92c8, 0x4a93, 0x1, 0x0);
        gbc.writeMem(0x5eca, { 0x3b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8320, gbc.sp());
        EXPECT(0x5ecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0357
        gbc.setState(0x5fd6, 0x7d02, 0xccc0, 0x8bc0, 0x467f, 0xa29d, 0x1, 0x0);
        gbc.writeMem(0x5fd6, { 0x3b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7d01, gbc.sp());
        EXPECT(0x5fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0358
        gbc.setState(0x9dd6, 0xd547, 0xcfc0, 0x9ee8, 0xe8af, 0x4b4, 0x1, 0x1);
        gbc.writeMem(0x9dd6, { 0x3b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd546, gbc.sp());
        EXPECT(0x9dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9dd6));
        // 3B 0359
        gbc.setState(0xe5f0, 0xafc3, 0x9480, 0x3980, 0xd2cc, 0x3a90, 0x0, 0x0);
        gbc.writeMem(0xe5f0, { 0x3b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xafc2, gbc.sp());
        EXPECT(0xe5f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe5f0));
        // 3B 035A
        gbc.setState(0x9354, 0xf10a, 0xa490, 0xa1b0, 0x8940, 0x5c74, 0x0, 0x0);
        gbc.writeMem(0x9354, { 0x3b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf109, gbc.sp());
        EXPECT(0x9355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9354));
        // 3B 035B
        gbc.setState(0xe11d, 0xf99a, 0xaf80, 0x1636, 0x8d9d, 0xa87d, 0x1, 0x1);
        gbc.writeMem(0xe11d, { 0x3b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf999, gbc.sp());
        EXPECT(0xe11e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe11d));
        // 3B 035C
        gbc.setState(0x98c0, 0x1299, 0x6db0, 0x8301, 0x1e28, 0x4be0, 0x1, 0x0);
        gbc.writeMem(0x98c0, { 0x3b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1298, gbc.sp());
        EXPECT(0x98c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x98c0));
        // 3B 035D
        gbc.setState(0x1d85, 0xc01b, 0xf170, 0x8c24, 0xe9fd, 0x9b60, 0x1, 0x1);
        gbc.writeMem(0x1d85, { 0x3b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc01a, gbc.sp());
        EXPECT(0x1d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 035E
        gbc.setState(0x7693, 0x9274, 0x4ef0, 0x7c4, 0x66cc, 0x4698, 0x1, 0x0);
        gbc.writeMem(0x7693, { 0x3b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9273, gbc.sp());
        EXPECT(0x7694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 035F
        gbc.setState(0x22d1, 0xfc23, 0x78b0, 0xaa0d, 0xd19a, 0x901b, 0x0, 0x0);
        gbc.writeMem(0x22d1, { 0x3b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfc22, gbc.sp());
        EXPECT(0x22d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0360
        gbc.setState(0x2d11, 0x6662, 0x310, 0xb0d7, 0x5c8e, 0xb5c8, 0x1, 0x0);
        gbc.writeMem(0x2d11, { 0x3b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6661, gbc.sp());
        EXPECT(0x2d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0361
        gbc.setState(0x6e73, 0x56d2, 0x7720, 0x77a, 0x22b2, 0xd4e0, 0x1, 0x0);
        gbc.writeMem(0x6e73, { 0x3b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x56d1, gbc.sp());
        EXPECT(0x6e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0362
        gbc.setState(0x2159, 0xa6df, 0x1970, 0x34d5, 0x723, 0x420c, 0x0, 0x1);
        gbc.writeMem(0x2159, { 0x3b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa6de, gbc.sp());
        EXPECT(0x215a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0363
        gbc.setState(0x9bcc, 0xcbfc, 0x53e0, 0x305b, 0x672f, 0xfc64, 0x0, 0x1);
        gbc.writeMem(0x9bcc, { 0x3b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcbfb, gbc.sp());
        EXPECT(0x9bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9bcc));
        // 3B 0364
        gbc.setState(0x92ba, 0x47c4, 0xc780, 0xe46d, 0x1a41, 0x67ec, 0x1, 0x1);
        gbc.writeMem(0x92ba, { 0x3b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x47c3, gbc.sp());
        EXPECT(0x92bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x92ba));
        // 3B 0366
        gbc.setState(0x8a8b, 0x80ed, 0xa700, 0x1dc8, 0x2dcb, 0x4ee3, 0x1, 0x1);
        gbc.writeMem(0x8a8b, { 0x3b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x80ec, gbc.sp());
        EXPECT(0x8a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8a8b));
        // 3B 0367
        gbc.setState(0x484b, 0xe82, 0x29c0, 0x1adc, 0xf20e, 0xc3a2, 0x1, 0x1);
        gbc.writeMem(0x484b, { 0x3b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe81, gbc.sp());
        EXPECT(0x484c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0368
        gbc.setState(0x7fab, 0x6003, 0x6fc0, 0x33ee, 0x5bc, 0xe0e6, 0x0, 0x0);
        gbc.writeMem(0x7fab, { 0x3b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6002, gbc.sp());
        EXPECT(0x7fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0369
        gbc.setState(0x933e, 0x7a73, 0x91d0, 0xfe68, 0xa4a4, 0x99be, 0x0, 0x0);
        gbc.writeMem(0x933e, { 0x3b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7a72, gbc.sp());
        EXPECT(0x933f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x933e));
        // 3B 036A
        gbc.setState(0x2571, 0x85cc, 0x9a40, 0x8465, 0x3e56, 0x520b, 0x1, 0x0);
        gbc.writeMem(0x2571, { 0x3b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x85cb, gbc.sp());
        EXPECT(0x2572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 036B
        gbc.setState(0x6b11, 0x9933, 0x7ac0, 0x1c4, 0x81ff, 0xbbd, 0x0, 0x0);
        gbc.writeMem(0x6b11, { 0x3b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9932, gbc.sp());
        EXPECT(0x6b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 036C
        gbc.setState(0x463c, 0x8b8c, 0x2f30, 0x2378, 0xa94a, 0x5ee9, 0x1, 0x1);
        gbc.writeMem(0x463c, { 0x3b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8b8b, gbc.sp());
        EXPECT(0x463d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 036D
        gbc.setState(0xbc69, 0xa83c, 0x1d90, 0x73ad, 0x8a4a, 0x2427, 0x0, 0x0);
        gbc.writeMem(0xbc69, { 0x3b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa83b, gbc.sp());
        EXPECT(0xbc6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbc69));
        // 3B 036E
        gbc.setState(0x2677, 0x3227, 0x68b0, 0x2edd, 0xa45, 0x4e55, 0x1, 0x0);
        gbc.writeMem(0x2677, { 0x3b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3226, gbc.sp());
        EXPECT(0x2678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 036F
        gbc.setState(0x248f, 0xfac9, 0xacf0, 0x91d9, 0xbd8, 0x18d4, 0x1, 0x1);
        gbc.writeMem(0x248f, { 0x3b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfac8, gbc.sp());
        EXPECT(0x2490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0370
        gbc.setState(0x5f0e, 0xac87, 0x1420, 0x5122, 0xa73d, 0x9acc, 0x0, 0x0);
        gbc.writeMem(0x5f0e, { 0x3b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xac86, gbc.sp());
        EXPECT(0x5f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0371
        gbc.setState(0x1910, 0x361f, 0x81e0, 0x919, 0xdcbf, 0xd6f2, 0x1, 0x1);
        gbc.writeMem(0x1910, { 0x3b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x361e, gbc.sp());
        EXPECT(0x1911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0372
        gbc.setState(0xd58a, 0x3aec, 0x9a40, 0x8cc8, 0x7664, 0x9a2d, 0x0, 0x0);
        gbc.writeMem(0xd58a, { 0x3b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3aeb, gbc.sp());
        EXPECT(0xd58b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd58a));
        // 3B 0373
        gbc.setState(0x80ea, 0x6de9, 0xa150, 0x9521, 0x29ae, 0xc237, 0x0, 0x1);
        gbc.writeMem(0x80ea, { 0x3b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6de8, gbc.sp());
        EXPECT(0x80eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x80ea));
        // 3B 0374
        gbc.setState(0x1719, 0xd649, 0x44e0, 0x5aa8, 0xb88d, 0x15b5, 0x1, 0x0);
        gbc.writeMem(0x1719, { 0x3b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd648, gbc.sp());
        EXPECT(0x171a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0375
        gbc.setState(0xd13b, 0x5e5, 0x6670, 0x27b8, 0xe474, 0xed52, 0x0, 0x1);
        gbc.writeMem(0xd13b, { 0x3b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5e4, gbc.sp());
        EXPECT(0xd13c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd13b));
        // 3B 0376
        gbc.setState(0x2d3e, 0x3952, 0x3510, 0x8a0e, 0x30fe, 0x7750, 0x0, 0x1);
        gbc.writeMem(0x2d3e, { 0x3b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3951, gbc.sp());
        EXPECT(0x2d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0377
        gbc.setState(0x17b0, 0xe082, 0x8ae0, 0x2358, 0xcaec, 0xc0a9, 0x0, 0x1);
        gbc.writeMem(0x17b0, { 0x3b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe081, gbc.sp());
        EXPECT(0x17b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0378
        gbc.setState(0x8c6, 0x2119, 0x7010, 0x7549, 0x3db0, 0xd5f2, 0x1, 0x0);
        gbc.writeMem(0x8c6, { 0x3b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2118, gbc.sp());
        EXPECT(0x8c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0379
        gbc.setState(0x4b67, 0x53dd, 0x7cd0, 0x7d05, 0x925e, 0x80d2, 0x0, 0x1);
        gbc.writeMem(0x4b67, { 0x3b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x53dc, gbc.sp());
        EXPECT(0x4b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 037A
        gbc.setState(0x7e30, 0x97a8, 0x9660, 0xc9c, 0xe07, 0xda4, 0x1, 0x0);
        gbc.writeMem(0x7e30, { 0x3b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x97a7, gbc.sp());
        EXPECT(0x7e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 037B
        gbc.setState(0x3880, 0x60be, 0x70f0, 0x687a, 0x7c8c, 0x7cbc, 0x1, 0x1);
        gbc.writeMem(0x3880, { 0x3b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x60bd, gbc.sp());
        EXPECT(0x3881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 037C
        gbc.setState(0x4108, 0x40bb, 0x7a0, 0x6157, 0x85de, 0xf195, 0x1, 0x0);
        gbc.writeMem(0x4108, { 0x3b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x40ba, gbc.sp());
        EXPECT(0x4109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 037D
        gbc.setState(0x8cab, 0x65da, 0x8130, 0xd7c8, 0x8456, 0x7d88, 0x1, 0x1);
        gbc.writeMem(0x8cab, { 0x3b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x65d9, gbc.sp());
        EXPECT(0x8cac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8cab));
        // 3B 037E
        gbc.setState(0x60d4, 0x73ef, 0xed70, 0x3ad7, 0x755f, 0xce7a, 0x1, 0x1);
        gbc.writeMem(0x60d4, { 0x3b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x73ee, gbc.sp());
        EXPECT(0x60d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 037F
        gbc.setState(0xd5b0, 0xe6c5, 0x6f90, 0x25ac, 0x3e6, 0xed96, 0x0, 0x0);
        gbc.writeMem(0xd5b0, { 0x3b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe6c4, gbc.sp());
        EXPECT(0xd5b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd5b0));
        // 3B 0380
        gbc.setState(0x5cc4, 0xf837, 0x2750, 0x514d, 0xe70, 0x9b27, 0x1, 0x0);
        gbc.writeMem(0x5cc4, { 0x3b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf836, gbc.sp());
        EXPECT(0x5cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0381
        gbc.setState(0x2c92, 0xbeef, 0x4e60, 0x1ff7, 0x8843, 0x2d5, 0x1, 0x0);
        gbc.writeMem(0x2c92, { 0x3b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbeee, gbc.sp());
        EXPECT(0x2c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0382
        gbc.setState(0x9a3a, 0x6144, 0xe570, 0xea86, 0x613a, 0x2cfd, 0x1, 0x1);
        gbc.writeMem(0x9a3a, { 0x3b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6143, gbc.sp());
        EXPECT(0x9a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9a3a));
        // 3B 0383
        gbc.setState(0xb568, 0xe417, 0x5890, 0x68ca, 0x788e, 0xc7db, 0x0, 0x1);
        gbc.writeMem(0xb568, { 0x3b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe416, gbc.sp());
        EXPECT(0xb569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb568));
        // 3B 0384
        gbc.setState(0xb0b5, 0xcacb, 0x54b0, 0x351d, 0x30c1, 0x262e, 0x0, 0x0);
        gbc.writeMem(0xb0b5, { 0x3b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcaca, gbc.sp());
        EXPECT(0xb0b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb0b5));
        // 3B 0386
        gbc.setState(0x90a3, 0xc0f4, 0x5c90, 0x73e9, 0xbe10, 0x4468, 0x0, 0x0);
        gbc.writeMem(0x90a3, { 0x3b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc0f3, gbc.sp());
        EXPECT(0x90a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x90a3));
        // 3B 0387
        gbc.setState(0x923, 0x7bd6, 0xf050, 0x3f24, 0x19c8, 0x329, 0x0, 0x1);
        gbc.writeMem(0x923, { 0x3b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7bd5, gbc.sp());
        EXPECT(0x924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0388
        gbc.setState(0xd555, 0x1e88, 0x9190, 0xfb05, 0xfe6c, 0x117b, 0x1, 0x0);
        gbc.writeMem(0xd555, { 0x3b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1e87, gbc.sp());
        EXPECT(0xd556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd555));
        // 3B 0389
        gbc.setState(0xc223, 0x3db8, 0xfb50, 0xf453, 0xa64c, 0x1d35, 0x0, 0x1);
        gbc.writeMem(0xc223, { 0x3b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3db7, gbc.sp());
        EXPECT(0xc224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc223));
        // 3B 038A
        gbc.setState(0xb127, 0x1d80, 0x7690, 0xb6ce, 0xa4ea, 0x5976, 0x1, 0x0);
        gbc.writeMem(0xb127, { 0x3b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1d7f, gbc.sp());
        EXPECT(0xb128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb127));
        // 3B 038B
        gbc.setState(0x4551, 0xed72, 0x2380, 0xc744, 0x1167, 0x6f71, 0x0, 0x1);
        gbc.writeMem(0x4551, { 0x3b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xed71, gbc.sp());
        EXPECT(0x4552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 038D
        gbc.setState(0xa587, 0x5dd9, 0x78e0, 0xfb7e, 0xa029, 0x226f, 0x0, 0x1);
        gbc.writeMem(0xa587, { 0x3b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5dd8, gbc.sp());
        EXPECT(0xa588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa587));
        // 3B 038E
        gbc.setState(0x41dd, 0x6b23, 0xbac0, 0x6554, 0x39dc, 0x46bf, 0x1, 0x0);
        gbc.writeMem(0x41dd, { 0x3b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6b22, gbc.sp());
        EXPECT(0x41de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 038F
        gbc.setState(0x7947, 0x7db8, 0xa400, 0x459e, 0x7f69, 0xede, 0x0, 0x0);
        gbc.writeMem(0x7947, { 0x3b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7db7, gbc.sp());
        EXPECT(0x7948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0390
        gbc.setState(0x8144, 0xb64a, 0x1630, 0x154b, 0x492c, 0x8bee, 0x0, 0x1);
        gbc.writeMem(0x8144, { 0x3b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb649, gbc.sp());
        EXPECT(0x8145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8144));
        // 3B 0391
        gbc.setState(0xe9b0, 0x1a, 0xa010, 0x9e8, 0x1866, 0xee82, 0x1, 0x0);
        gbc.writeMem(0xe9b0, { 0x3b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x19, gbc.sp());
        EXPECT(0xe9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe9b0));
        // 3B 0392
        gbc.setState(0x7e9a, 0x91c7, 0xfc0, 0xdcb5, 0x2bbc, 0xbfc1, 0x0, 0x0);
        gbc.writeMem(0x7e9a, { 0x3b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x91c6, gbc.sp());
        EXPECT(0x7e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0393
        gbc.setState(0x88be, 0x4267, 0xf3e0, 0x9b36, 0xb447, 0xce00, 0x1, 0x1);
        gbc.writeMem(0x88be, { 0x3b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4266, gbc.sp());
        EXPECT(0x88bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x88be));
        // 3B 0394
        gbc.setState(0xab8b, 0xe95f, 0xcae0, 0x919a, 0x3280, 0x7c82, 0x0, 0x0);
        gbc.writeMem(0xab8b, { 0x3b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe95e, gbc.sp());
        EXPECT(0xab8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xab8b));
        // 3B 0395
        gbc.setState(0x4f04, 0x6e33, 0xcbf0, 0x9fd3, 0x4496, 0x556c, 0x0, 0x1);
        gbc.writeMem(0x4f04, { 0x3b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6e32, gbc.sp());
        EXPECT(0x4f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 0396
        gbc.setState(0x5878, 0x6afb, 0x2e00, 0x47ae, 0xd294, 0x833f, 0x0, 0x1);
        gbc.writeMem(0x5878, { 0x3b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6afa, gbc.sp());
        EXPECT(0x5879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0397
        gbc.setState(0x3f1f, 0x11d2, 0x300, 0x2cbb, 0xef07, 0x380b, 0x1, 0x1);
        gbc.writeMem(0x3f1f, { 0x3b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x11d1, gbc.sp());
        EXPECT(0x3f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 0398
        gbc.setState(0xbce5, 0xf2a5, 0x4f70, 0xd667, 0xf6c9, 0x8f4e, 0x0, 0x0);
        gbc.writeMem(0xbce5, { 0x3b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf2a4, gbc.sp());
        EXPECT(0xbce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbce5));
        // 3B 0399
        gbc.setState(0x8e99, 0xc504, 0x5930, 0x44aa, 0x6977, 0x2280, 0x0, 0x1);
        gbc.writeMem(0x8e99, { 0x3b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc503, gbc.sp());
        EXPECT(0x8e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8e99));
        // 3B 039A
        gbc.setState(0xef2e, 0x2bcf, 0xae60, 0xa128, 0x6807, 0xdc1, 0x0, 0x1);
        gbc.writeMem(0xef2e, { 0x3b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2bce, gbc.sp());
        EXPECT(0xef2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xef2e));
        // 3B 039B
        gbc.setState(0x4dc8, 0xb39d, 0x47f0, 0x2a94, 0xd730, 0x9c7e, 0x1, 0x0);
        gbc.writeMem(0x4dc8, { 0x3b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb39c, gbc.sp());
        EXPECT(0x4dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 039C
        gbc.setState(0x6097, 0xb49b, 0xf730, 0x60aa, 0x33e5, 0xd911, 0x0, 0x1);
        gbc.writeMem(0x6097, { 0x3b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb49a, gbc.sp());
        EXPECT(0x6098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 039D
        gbc.setState(0x9185, 0x8579, 0x7680, 0xfa79, 0xa97e, 0xa781, 0x0, 0x0);
        gbc.writeMem(0x9185, { 0x3b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8578, gbc.sp());
        EXPECT(0x9186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9185));
        // 3B 039E
        gbc.setState(0x621a, 0x2524, 0x6ae0, 0x1525, 0xf9f2, 0x51c1, 0x0, 0x1);
        gbc.writeMem(0x621a, { 0x3b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2523, gbc.sp());
        EXPECT(0x621b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 039F
        gbc.setState(0xb36d, 0xb7c3, 0x8a10, 0xc535, 0x3d0, 0xf58b, 0x1, 0x0);
        gbc.writeMem(0xb36d, { 0x3b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb7c2, gbc.sp());
        EXPECT(0xb36e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb36d));
        // 3B 03A0
        gbc.setState(0xba02, 0xf95d, 0xadd0, 0x5171, 0xec96, 0x2234, 0x1, 0x0);
        gbc.writeMem(0xba02, { 0x3b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf95c, gbc.sp());
        EXPECT(0xba03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xba02));
        // 3B 03A1
        gbc.setState(0xd43b, 0xd114, 0x1950, 0x73e9, 0xbda, 0x1947, 0x0, 0x0);
        gbc.writeMem(0xd43b, { 0x3b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd113, gbc.sp());
        EXPECT(0xd43c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd43b));
        // 3B 03A2
        gbc.setState(0x8e1e, 0xc059, 0x1b90, 0x292, 0xd460, 0xf6d7, 0x0, 0x1);
        gbc.writeMem(0x8e1e, { 0x3b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc058, gbc.sp());
        EXPECT(0x8e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8e1e));
        // 3B 03A3
        gbc.setState(0x3873, 0xc30b, 0x530, 0x7893, 0x9844, 0xbc3d, 0x0, 0x0);
        gbc.writeMem(0x3873, { 0x3b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc30a, gbc.sp());
        EXPECT(0x3874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03A4
        gbc.setState(0x8095, 0x5bca, 0x960, 0x32ca, 0x52f1, 0xbff3, 0x1, 0x0);
        gbc.writeMem(0x8095, { 0x3b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5bc9, gbc.sp());
        EXPECT(0x8096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8095));
        // 3B 03A5
        gbc.setState(0xca4f, 0x21ad, 0x4480, 0x31d2, 0xfca4, 0xd3ee, 0x1, 0x0);
        gbc.writeMem(0xca4f, { 0x3b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x21ac, gbc.sp());
        EXPECT(0xca50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xca4f));
        // 3B 03A6
        gbc.setState(0x1385, 0xcd83, 0x59a0, 0x6c8c, 0x394c, 0xdf7f, 0x1, 0x0);
        gbc.writeMem(0x1385, { 0x3b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcd82, gbc.sp());
        EXPECT(0x1386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03A7
        gbc.setState(0xd71c, 0xb722, 0xb0e0, 0x64b3, 0x52c6, 0xcfba, 0x1, 0x0);
        gbc.writeMem(0xd71c, { 0x3b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb721, gbc.sp());
        EXPECT(0xd71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd71c));
        // 3B 03A8
        gbc.setState(0x375d, 0x41b4, 0xa730, 0x3677, 0x4ed4, 0x4e50, 0x0, 0x1);
        gbc.writeMem(0x375d, { 0x3b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x41b3, gbc.sp());
        EXPECT(0x375e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03A9
        gbc.setState(0x887f, 0xa106, 0xc9c0, 0x40e5, 0x66b0, 0xd8b9, 0x0, 0x1);
        gbc.writeMem(0x887f, { 0x3b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa105, gbc.sp());
        EXPECT(0x8880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x887f));
        // 3B 03AA
        gbc.setState(0x706d, 0xfb07, 0x4c90, 0x4446, 0xf28d, 0x6a8b, 0x0, 0x0);
        gbc.writeMem(0x706d, { 0x3b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfb06, gbc.sp());
        EXPECT(0x706e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03AB
        gbc.setState(0xd24a, 0xce18, 0x27d0, 0x8da, 0xfc47, 0xfb09, 0x1, 0x0);
        gbc.writeMem(0xd24a, { 0x3b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xce17, gbc.sp());
        EXPECT(0xd24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd24a));
        // 3B 03AC
        gbc.setState(0x7565, 0x7adb, 0xe910, 0x5eaf, 0xab80, 0xdcf2, 0x1, 0x0);
        gbc.writeMem(0x7565, { 0x3b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7ada, gbc.sp());
        EXPECT(0x7566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03AD
        gbc.setState(0x396f, 0x98a1, 0x680, 0x6e2d, 0x75da, 0xcf3f, 0x1, 0x0);
        gbc.writeMem(0x396f, { 0x3b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x98a0, gbc.sp());
        EXPECT(0x3970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03AE
        gbc.setState(0x15fe, 0x2548, 0xd060, 0xc576, 0x864a, 0x238f, 0x0, 0x0);
        gbc.writeMem(0x15fe, { 0x3b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2547, gbc.sp());
        EXPECT(0x15ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03AF
        gbc.setState(0xa7f4, 0xe261, 0xfb30, 0x64f7, 0x1b21, 0xf2f6, 0x1, 0x1);
        gbc.writeMem(0xa7f4, { 0x3b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe260, gbc.sp());
        EXPECT(0xa7f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa7f4));
        // 3B 03B0
        gbc.setState(0x41b1, 0x54b3, 0xe850, 0x9049, 0x7261, 0xd345, 0x0, 0x1);
        gbc.writeMem(0x41b1, { 0x3b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x54b2, gbc.sp());
        EXPECT(0x41b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03B1
        gbc.setState(0xb356, 0xb44c, 0x62b0, 0xd616, 0x429, 0xd172, 0x0, 0x0);
        gbc.writeMem(0xb356, { 0x3b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb44b, gbc.sp());
        EXPECT(0xb357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb356));
        // 3B 03B2
        gbc.setState(0x11e, 0x3f98, 0xfaf0, 0xbc6f, 0xbb9b, 0x2bfb, 0x1, 0x0);
        gbc.writeMem(0x11e, { 0x3b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3f97, gbc.sp());
        EXPECT(0x11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03B3
        gbc.setState(0x2665, 0xc760, 0xe1a0, 0x5f79, 0x29a9, 0xa0db, 0x0, 0x1);
        gbc.writeMem(0x2665, { 0x3b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc75f, gbc.sp());
        EXPECT(0x2666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03B4
        gbc.setState(0x1d3f, 0x2e5d, 0x8ec0, 0x23e6, 0xa990, 0xa9a5, 0x0, 0x0);
        gbc.writeMem(0x1d3f, { 0x3b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2e5c, gbc.sp());
        EXPECT(0x1d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03B5
        gbc.setState(0x3c5a, 0x1eeb, 0xa5f0, 0xdad4, 0x1bc0, 0x8fab, 0x0, 0x0);
        gbc.writeMem(0x3c5a, { 0x3b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1eea, gbc.sp());
        EXPECT(0x3c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03B6
        gbc.setState(0xe2f3, 0xca47, 0x23c0, 0x231c, 0x3f54, 0x482c, 0x1, 0x0);
        gbc.writeMem(0xe2f3, { 0x3b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xca46, gbc.sp());
        EXPECT(0xe2f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe2f3));
        // 3B 03B7
        gbc.setState(0x1ad3, 0x8f7a, 0xe40, 0x2e9, 0xb7df, 0x631c, 0x1, 0x0);
        gbc.writeMem(0x1ad3, { 0x3b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8f79, gbc.sp());
        EXPECT(0x1ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03B8
        gbc.setState(0x85d0, 0x1c5c, 0x3910, 0x22c6, 0x1731, 0xa569, 0x1, 0x0);
        gbc.writeMem(0x85d0, { 0x3b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1c5b, gbc.sp());
        EXPECT(0x85d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x85d0));
        // 3B 03B9
        gbc.setState(0xe08e, 0x61f8, 0xdd70, 0x208a, 0x1171, 0xb244, 0x1, 0x1);
        gbc.writeMem(0xe08e, { 0x3b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x61f7, gbc.sp());
        EXPECT(0xe08f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe08e));
        // 3B 03BA
        gbc.setState(0x91d3, 0x2e32, 0x7740, 0xd135, 0x421f, 0xc249, 0x0, 0x1);
        gbc.writeMem(0x91d3, { 0x3b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2e31, gbc.sp());
        EXPECT(0x91d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x91d3));
        // 3B 03BB
        gbc.setState(0xa1d8, 0xb589, 0xdaa0, 0xb6b, 0xacfa, 0x118b, 0x0, 0x0);
        gbc.writeMem(0xa1d8, { 0x3b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb588, gbc.sp());
        EXPECT(0xa1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa1d8));
        // 3B 03BC
        gbc.setState(0xb6a9, 0x2111, 0x51b0, 0x75e5, 0xf9f8, 0x47cd, 0x1, 0x1);
        gbc.writeMem(0xb6a9, { 0x3b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2110, gbc.sp());
        EXPECT(0xb6aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb6a9));
        // 3B 03BD
        gbc.setState(0xe195, 0x8486, 0xe5b0, 0xc883, 0x8acd, 0x95bb, 0x1, 0x0);
        gbc.writeMem(0xe195, { 0x3b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8485, gbc.sp());
        EXPECT(0xe196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe195));
        // 3B 03BE
        gbc.setState(0x2307, 0xc20b, 0x5bf0, 0x3c65, 0x7ea0, 0xc726, 0x1, 0x0);
        gbc.writeMem(0x2307, { 0x3b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc20a, gbc.sp());
        EXPECT(0x2308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03BF
        gbc.setState(0x5723, 0xa33, 0xac50, 0xaefe, 0xcf11, 0xfdec, 0x0, 0x1);
        gbc.writeMem(0x5723, { 0x3b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa32, gbc.sp());
        EXPECT(0x5724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03C0
        gbc.setState(0xac93, 0x5122, 0xd940, 0xfe7a, 0x5b6b, 0xae39, 0x0, 0x1);
        gbc.writeMem(0xac93, { 0x3b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5121, gbc.sp());
        EXPECT(0xac94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xac93));
        // 3B 03C1
        gbc.setState(0x49a1, 0xe8e6, 0xb170, 0xa2bc, 0xead6, 0x19cd, 0x1, 0x1);
        gbc.writeMem(0x49a1, { 0x3b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe8e5, gbc.sp());
        EXPECT(0x49a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03C2
        gbc.setState(0x3a57, 0x6d6, 0xc90, 0x3d3b, 0x5f5f, 0x5a3b, 0x0, 0x0);
        gbc.writeMem(0x3a57, { 0x3b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6d5, gbc.sp());
        EXPECT(0x3a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03C3
        gbc.setState(0x8cc0, 0x46db, 0xeaa0, 0x44a2, 0x591f, 0xadda, 0x0, 0x0);
        gbc.writeMem(0x8cc0, { 0x3b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x46da, gbc.sp());
        EXPECT(0x8cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8cc0));
        // 3B 03C4
        gbc.setState(0x483b, 0x1314, 0x4560, 0x48c0, 0xe5c9, 0x2c32, 0x0, 0x1);
        gbc.writeMem(0x483b, { 0x3b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1313, gbc.sp());
        EXPECT(0x483c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03C5
        gbc.setState(0x1f9, 0x6a8b, 0x7410, 0x9a24, 0x888d, 0xb007, 0x1, 0x1);
        gbc.writeMem(0x1f9, { 0x3b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6a8a, gbc.sp());
        EXPECT(0x1fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03C6
        gbc.setState(0x4831, 0x7cc2, 0x86d0, 0xb9ed, 0x6429, 0x2ca, 0x1, 0x1);
        gbc.writeMem(0x4831, { 0x3b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7cc1, gbc.sp());
        EXPECT(0x4832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03C7
        gbc.setState(0x97bd, 0x9fa6, 0x55c0, 0xc7af, 0x83b9, 0x216b, 0x1, 0x1);
        gbc.writeMem(0x97bd, { 0x3b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9fa5, gbc.sp());
        EXPECT(0x97be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x97bd));
        // 3B 03C8
        gbc.setState(0x959f, 0x219f, 0x35f0, 0x6cfd, 0x8c92, 0x497d, 0x0, 0x0);
        gbc.writeMem(0x959f, { 0x3b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x219e, gbc.sp());
        EXPECT(0x95a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x959f));
        // 3B 03C9
        gbc.setState(0xefac, 0x3787, 0x6530, 0x9c84, 0x71f5, 0x7ad5, 0x0, 0x0);
        gbc.writeMem(0xefac, { 0x3b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3786, gbc.sp());
        EXPECT(0xefad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xefac));
        // 3B 03CA
        gbc.setState(0x18b0, 0xbc31, 0xdae0, 0x834d, 0xfba4, 0xb6bc, 0x0, 0x1);
        gbc.writeMem(0x18b0, { 0x3b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbc30, gbc.sp());
        EXPECT(0x18b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03CB
        gbc.setState(0xa837, 0x3c63, 0x42a0, 0xe360, 0x70cd, 0x6c0c, 0x1, 0x1);
        gbc.writeMem(0xa837, { 0x3b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3c62, gbc.sp());
        EXPECT(0xa838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa837));
        // 3B 03CC
        gbc.setState(0x1980, 0x4eb, 0x9350, 0x1ca0, 0x9f31, 0xda4b, 0x1, 0x1);
        gbc.writeMem(0x1980, { 0x3b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4ea, gbc.sp());
        EXPECT(0x1981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03CD
        gbc.setState(0x5866, 0x79a1, 0x66e0, 0x22b0, 0xa565, 0xda1f, 0x0, 0x0);
        gbc.writeMem(0x5866, { 0x3b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x79a0, gbc.sp());
        EXPECT(0x5867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03CE
        gbc.setState(0xdff9, 0xce70, 0x28a0, 0xc456, 0xe45e, 0xf0d7, 0x0, 0x0);
        gbc.writeMem(0xdff9, { 0x3b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xce6f, gbc.sp());
        EXPECT(0xdffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdff9));
        // 3B 03CF
        gbc.setState(0xdd14, 0x5a2b, 0x2b0, 0xac9f, 0xaaa2, 0xd156, 0x0, 0x1);
        gbc.writeMem(0xdd14, { 0x3b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5a2a, gbc.sp());
        EXPECT(0xdd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdd14));
        // 3B 03D0
        gbc.setState(0xa8cb, 0x7ce, 0x41c0, 0xb823, 0x65f9, 0xbea6, 0x0, 0x0);
        gbc.writeMem(0xa8cb, { 0x3b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7cd, gbc.sp());
        EXPECT(0xa8cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa8cb));
        // 3B 03D1
        gbc.setState(0x4a9d, 0x2754, 0xf390, 0x6b4a, 0x4f8, 0x61e, 0x0, 0x1);
        gbc.writeMem(0x4a9d, { 0x3b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2753, gbc.sp());
        EXPECT(0x4a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03D2
        gbc.setState(0x1ea4, 0xe177, 0x7370, 0xa9f0, 0xca1b, 0x4763, 0x1, 0x0);
        gbc.writeMem(0x1ea4, { 0x3b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe176, gbc.sp());
        EXPECT(0x1ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03D3
        gbc.setState(0x70ce, 0x8390, 0x1840, 0xf4f3, 0x1dd2, 0xb4f1, 0x0, 0x0);
        gbc.writeMem(0x70ce, { 0x3b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x838f, gbc.sp());
        EXPECT(0x70cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03D4
        gbc.setState(0xfd0, 0x1c0e, 0xd5c0, 0xe66e, 0xe840, 0x5fed, 0x0, 0x0);
        gbc.writeMem(0xfd0, { 0x3b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1c0d, gbc.sp());
        EXPECT(0xfd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03D6
        gbc.setState(0xb52d, 0xcfb1, 0x24e0, 0xbe7d, 0x6d57, 0x2541, 0x1, 0x1);
        gbc.writeMem(0xb52d, { 0x3b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcfb0, gbc.sp());
        EXPECT(0xb52e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb52d));
        // 3B 03D7
        gbc.setState(0x399, 0x5509, 0xb600, 0x4794, 0x3053, 0x791a, 0x1, 0x0);
        gbc.writeMem(0x399, { 0x3b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5508, gbc.sp());
        EXPECT(0x39a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03D9
        gbc.setState(0x7d3d, 0x1dfd, 0xaf50, 0xaa18, 0x4d1d, 0x3c79, 0x1, 0x0);
        gbc.writeMem(0x7d3d, { 0x3b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1dfc, gbc.sp());
        EXPECT(0x7d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03DA
        gbc.setState(0xa880, 0x209a, 0x9d90, 0x5fed, 0x9816, 0xdd1c, 0x1, 0x1);
        gbc.writeMem(0xa880, { 0x3b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2099, gbc.sp());
        EXPECT(0xa881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa880));
        // 3B 03DC
        gbc.setState(0xb7ec, 0x86f3, 0x9780, 0x5a73, 0x16cd, 0xad73, 0x0, 0x1);
        gbc.writeMem(0xb7ec, { 0x3b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x86f2, gbc.sp());
        EXPECT(0xb7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb7ec));
        // 3B 03DD
        gbc.setState(0x7426, 0x9cad, 0x4cb0, 0xd46d, 0xfafd, 0x9f63, 0x1, 0x1);
        gbc.writeMem(0x7426, { 0x3b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9cac, gbc.sp());
        EXPECT(0x7427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03DE
        gbc.setState(0x6748, 0x5885, 0xb2f0, 0x43c9, 0xec10, 0xb4d0, 0x1, 0x1);
        gbc.writeMem(0x6748, { 0x3b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5884, gbc.sp());
        EXPECT(0x6749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03DF
        gbc.setState(0xabb9, 0xe543, 0x77a0, 0xfd2f, 0x552f, 0x2c65, 0x1, 0x1);
        gbc.writeMem(0xabb9, { 0x3b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe542, gbc.sp());
        EXPECT(0xabba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xabb9));
        // 3B 03E0
        gbc.setState(0x5a08, 0xe33a, 0x83c0, 0xb195, 0xa4af, 0x9c49, 0x0, 0x1);
        gbc.writeMem(0x5a08, { 0x3b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe339, gbc.sp());
        EXPECT(0x5a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03E1
        gbc.setState(0x7658, 0x9e69, 0x5070, 0x140a, 0x4800, 0xc188, 0x1, 0x0);
        gbc.writeMem(0x7658, { 0x3b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9e68, gbc.sp());
        EXPECT(0x7659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03E2
        gbc.setState(0x1a9a, 0x33f3, 0xf4c0, 0xd37a, 0x5d53, 0xc701, 0x0, 0x0);
        gbc.writeMem(0x1a9a, { 0x3b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x33f2, gbc.sp());
        EXPECT(0x1a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03E3
        gbc.setState(0x1ca6, 0x3baf, 0xd0a0, 0x292f, 0x7ee7, 0x5bb4, 0x0, 0x0);
        gbc.writeMem(0x1ca6, { 0x3b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3bae, gbc.sp());
        EXPECT(0x1ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03E4
        gbc.setState(0xcf1b, 0xf258, 0x5ee0, 0xfd0e, 0x6b23, 0xecfd, 0x1, 0x1);
        gbc.writeMem(0xcf1b, { 0x3b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf257, gbc.sp());
        EXPECT(0xcf1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcf1b));
        // 3B 03E5
        gbc.setState(0x70ed, 0x39a2, 0x3bd0, 0x1a68, 0x8d8f, 0x6c0e, 0x1, 0x0);
        gbc.writeMem(0x70ed, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x39a1, gbc.sp());
        EXPECT(0x70ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3B 03E6
        gbc.setState(0x51aa, 0x2ee2, 0x2940, 0x37a0, 0x5832, 0x62b5, 0x0, 0x1);
        gbc.writeMem(0x51aa, { 0x3b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2ee1, gbc.sp());
        EXPECT(0x51ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3B 03E7
        gbc.setState(0x30ef, 0x9ba1, 0x7210, 0x15b3, 0x2e63, 0xf896, 0x0, 0x0);
        gbc.writeMem(0x30ef, { 0x3b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9ba0, gbc.sp());
        EXPECT(0x30f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
